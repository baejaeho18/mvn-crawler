Compiled from "ZipArchiveOutputStream.java"
public class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream extends org.apache.commons.compress.archivers.ArchiveOutputStream {
  static final int BUFFER_SIZE;

  private static final int LFH_SIG_OFFSET;

  private static final int LFH_VERSION_NEEDED_OFFSET;

  private static final int LFH_GPB_OFFSET;

  private static final int LFH_METHOD_OFFSET;

  private static final int LFH_TIME_OFFSET;

  private static final int LFH_CRC_OFFSET;

  private static final int LFH_COMPRESSED_SIZE_OFFSET;

  private static final int LFH_ORIGINAL_SIZE_OFFSET;

  private static final int LFH_FILENAME_LENGTH_OFFSET;

  private static final int LFH_EXTRA_LENGTH_OFFSET;

  private static final int LFH_FILENAME_OFFSET;

  private static final int CFH_SIG_OFFSET;

  private static final int CFH_VERSION_MADE_BY_OFFSET;

  private static final int CFH_VERSION_NEEDED_OFFSET;

  private static final int CFH_GPB_OFFSET;

  private static final int CFH_METHOD_OFFSET;

  private static final int CFH_TIME_OFFSET;

  private static final int CFH_CRC_OFFSET;

  private static final int CFH_COMPRESSED_SIZE_OFFSET;

  private static final int CFH_ORIGINAL_SIZE_OFFSET;

  private static final int CFH_FILENAME_LENGTH_OFFSET;

  private static final int CFH_EXTRA_LENGTH_OFFSET;

  private static final int CFH_COMMENT_LENGTH_OFFSET;

  private static final int CFH_DISK_NUMBER_OFFSET;

  private static final int CFH_INTERNAL_ATTRIBUTES_OFFSET;

  private static final int CFH_EXTERNAL_ATTRIBUTES_OFFSET;

  private static final int CFH_LFH_OFFSET;

  private static final int CFH_FILENAME_OFFSET;

  protected boolean finished;

  public static final int DEFLATED;

  public static final int DEFAULT_COMPRESSION;

  public static final int STORED;

  static final java.lang.String DEFAULT_ENCODING;

  public static final int EFS_FLAG;

  private org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry entry;

  private java.lang.String comment;

  private int level;

  private boolean hasCompressionLevelChanged;

  private int method;

  private final java.util.List<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> entries;

  private final org.apache.commons.compress.archivers.zip.StreamCompressor streamCompressor;

  private long cdOffset;

  private long cdLength;

  private long cdDiskNumberStart;

  private long eocdLength;

  private static final byte[] ZERO;

  private static final byte[] LZERO;

  private static final byte[] ONE;

  private final java.util.Map<org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData> metaData;

  private java.lang.String encoding;

  private org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;

  protected final java.util.zip.Deflater def;

  private final java.nio.channels.SeekableByteChannel channel;

  private final java.io.OutputStream out;

  private boolean useUTF8Flag;

  private boolean fallbackToUTF8;

  private org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy createUnicodeExtraFields;

  private boolean hasUsedZip64;

  private org.apache.commons.compress.archivers.zip.Zip64Mode zip64Mode;

  private final byte[] copyBuffer;

  private final java.util.Calendar calendarInstance;

  private final boolean isSplitZip;

  private final java.util.Map<java.lang.Integer, java.lang.Integer> numberOfCDInDiskData;

  static final byte[] LFH_SIG;

  static final byte[] DD_SIG;

  static final byte[] CFH_SIG;

  static final byte[] EOCD_SIG;

  static final byte[] ZIP64_EOCD_SIG;

  static final byte[] ZIP64_EOCD_LOC_SIG;

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: ldc           #7                  // String
       7: putfield      #8                  // Field comment:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #10                 // Field level:I
      15: aload_0
      16: bipush        8
      18: putfield      #11                 // Field method:I
      21: aload_0
      22: new           #12                 // class java/util/LinkedList
      25: dup
      26: invokespecial #13                 // Method java/util/LinkedList."<init>":()V
      29: putfield      #14                 // Field entries:Ljava/util/List;
      32: aload_0
      33: new           #15                 // class java/util/HashMap
      36: dup
      37: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      40: putfield      #17                 // Field metaData:Ljava/util/Map;
      43: aload_0
      44: ldc           #18                 // String UTF8
      46: putfield      #19                 // Field encoding:Ljava/lang/String;
      49: aload_0
      50: ldc           #18                 // String UTF8
      52: invokestatic  #20                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      55: putfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      58: aload_0
      59: iconst_1
      60: putfield      #22                 // Field useUTF8Flag:Z
      63: aload_0
      64: getstatic     #23                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      67: putfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      70: aload_0
      71: getstatic     #25                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      74: putfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      77: aload_0
      78: ldc           #27                 // int 32768
      80: newarray       byte
      82: putfield      #28                 // Field copyBuffer:[B
      85: aload_0
      86: invokestatic  #29                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      89: putfield      #30                 // Field calendarInstance:Ljava/util/Calendar;
      92: aload_0
      93: new           #15                 // class java/util/HashMap
      96: dup
      97: invokespecial #16                 // Method java/util/HashMap."<init>":()V
     100: putfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     103: aload_0
     104: aload_1
     105: putfield      #32                 // Field out:Ljava/io/OutputStream;
     108: aload_0
     109: aconst_null
     110: putfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     113: aload_0
     114: new           #2                  // class java/util/zip/Deflater
     117: dup
     118: aload_0
     119: getfield      #10                 // Field level:I
     122: iconst_1
     123: invokespecial #34                 // Method java/util/zip/Deflater."<init>":(IZ)V
     126: putfield      #35                 // Field def:Ljava/util/zip/Deflater;
     129: aload_0
     130: aload_1
     131: aload_0
     132: getfield      #35                 // Field def:Ljava/util/zip/Deflater;
     135: invokestatic  #36                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     138: putfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     141: aload_0
     142: iconst_0
     143: putfield      #38                 // Field isSplitZip:Z
     146: return

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: iconst_0
       6: anewarray     #40                 // class java/nio/file/OpenOption
       9: invokespecial #41                 // Method "<init>":(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)V
      12: return

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: ldc           #7                  // String
       7: putfield      #8                  // Field comment:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #10                 // Field level:I
      15: aload_0
      16: bipush        8
      18: putfield      #11                 // Field method:I
      21: aload_0
      22: new           #12                 // class java/util/LinkedList
      25: dup
      26: invokespecial #13                 // Method java/util/LinkedList."<init>":()V
      29: putfield      #14                 // Field entries:Ljava/util/List;
      32: aload_0
      33: new           #15                 // class java/util/HashMap
      36: dup
      37: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      40: putfield      #17                 // Field metaData:Ljava/util/Map;
      43: aload_0
      44: ldc           #18                 // String UTF8
      46: putfield      #19                 // Field encoding:Ljava/lang/String;
      49: aload_0
      50: ldc           #18                 // String UTF8
      52: invokestatic  #20                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      55: putfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      58: aload_0
      59: iconst_1
      60: putfield      #22                 // Field useUTF8Flag:Z
      63: aload_0
      64: getstatic     #23                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      67: putfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      70: aload_0
      71: getstatic     #25                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      74: putfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      77: aload_0
      78: ldc           #27                 // int 32768
      80: newarray       byte
      82: putfield      #28                 // Field copyBuffer:[B
      85: aload_0
      86: invokestatic  #29                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      89: putfield      #30                 // Field calendarInstance:Ljava/util/Calendar;
      92: aload_0
      93: new           #15                 // class java/util/HashMap
      96: dup
      97: invokespecial #16                 // Method java/util/HashMap."<init>":()V
     100: putfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     103: aload_0
     104: new           #2                  // class java/util/zip/Deflater
     107: dup
     108: aload_0
     109: getfield      #10                 // Field level:I
     112: iconst_1
     113: invokespecial #34                 // Method java/util/zip/Deflater."<init>":(IZ)V
     116: putfield      #35                 // Field def:Ljava/util/zip/Deflater;
     119: aconst_null
     120: astore_3
     121: aconst_null
     122: astore        4
     124: aconst_null
     125: astore        5
     127: aload_1
     128: getstatic     #42                 // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
     131: getstatic     #43                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
     134: getstatic     #44                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
     137: getstatic     #45                 // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
     140: invokestatic  #46                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
     143: iconst_0
     144: anewarray     #47                 // class java/nio/file/attribute/FileAttribute
     147: invokestatic  #48                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;
     150: astore        4
     152: aload         4
     154: aload_0
     155: getfield      #35                 // Field def:Ljava/util/zip/Deflater;
     158: invokestatic  #49                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/nio/channels/SeekableByteChannel;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     161: astore        5
     163: goto          192
     166: astore        6
     168: aload         4
     170: invokestatic  #51                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
     173: aconst_null
     174: astore        4
     176: aload_1
     177: aload_2
     178: invokestatic  #52                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
     181: astore_3
     182: aload_3
     183: aload_0
     184: getfield      #35                 // Field def:Ljava/util/zip/Deflater;
     187: invokestatic  #36                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     190: astore        5
     192: aload_0
     193: aload_3
     194: putfield      #32                 // Field out:Ljava/io/OutputStream;
     197: aload_0
     198: aload         4
     200: putfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     203: aload_0
     204: aload         5
     206: putfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     209: aload_0
     210: iconst_0
     211: putfield      #38                 // Field isSplitZip:Z
     214: return
    Exception table:
       from    to  target type
         127   163   166   Class java/io/IOException

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.io.File, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: ldc           #7                  // String
       7: putfield      #8                  // Field comment:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #10                 // Field level:I
      15: aload_0
      16: bipush        8
      18: putfield      #11                 // Field method:I
      21: aload_0
      22: new           #12                 // class java/util/LinkedList
      25: dup
      26: invokespecial #13                 // Method java/util/LinkedList."<init>":()V
      29: putfield      #14                 // Field entries:Ljava/util/List;
      32: aload_0
      33: new           #15                 // class java/util/HashMap
      36: dup
      37: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      40: putfield      #17                 // Field metaData:Ljava/util/Map;
      43: aload_0
      44: ldc           #18                 // String UTF8
      46: putfield      #19                 // Field encoding:Ljava/lang/String;
      49: aload_0
      50: ldc           #18                 // String UTF8
      52: invokestatic  #20                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      55: putfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      58: aload_0
      59: iconst_1
      60: putfield      #22                 // Field useUTF8Flag:Z
      63: aload_0
      64: getstatic     #23                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      67: putfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      70: aload_0
      71: getstatic     #25                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      74: putfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      77: aload_0
      78: ldc           #27                 // int 32768
      80: newarray       byte
      82: putfield      #28                 // Field copyBuffer:[B
      85: aload_0
      86: invokestatic  #29                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      89: putfield      #30                 // Field calendarInstance:Ljava/util/Calendar;
      92: aload_0
      93: new           #15                 // class java/util/HashMap
      96: dup
      97: invokespecial #16                 // Method java/util/HashMap."<init>":()V
     100: putfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     103: aload_0
     104: new           #2                  // class java/util/zip/Deflater
     107: dup
     108: aload_0
     109: getfield      #10                 // Field level:I
     112: iconst_1
     113: invokespecial #34                 // Method java/util/zip/Deflater."<init>":(IZ)V
     116: putfield      #35                 // Field def:Ljava/util/zip/Deflater;
     119: aload_0
     120: new           #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
     123: dup
     124: aload_1
     125: lload_2
     126: invokespecial #54                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream."<init>":(Ljava/io/File;J)V
     129: putfield      #32                 // Field out:Ljava/io/OutputStream;
     132: aload_0
     133: aload_0
     134: getfield      #32                 // Field out:Ljava/io/OutputStream;
     137: aload_0
     138: getfield      #35                 // Field def:Ljava/util/zip/Deflater;
     141: invokestatic  #36                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     144: putfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     147: aload_0
     148: aconst_null
     149: putfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     152: aload_0
     153: iconst_1
     154: putfield      #38                 // Field isSplitZip:Z
     157: return

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.nio.channels.SeekableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: ldc           #7                  // String
       7: putfield      #8                  // Field comment:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #10                 // Field level:I
      15: aload_0
      16: bipush        8
      18: putfield      #11                 // Field method:I
      21: aload_0
      22: new           #12                 // class java/util/LinkedList
      25: dup
      26: invokespecial #13                 // Method java/util/LinkedList."<init>":()V
      29: putfield      #14                 // Field entries:Ljava/util/List;
      32: aload_0
      33: new           #15                 // class java/util/HashMap
      36: dup
      37: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      40: putfield      #17                 // Field metaData:Ljava/util/Map;
      43: aload_0
      44: ldc           #18                 // String UTF8
      46: putfield      #19                 // Field encoding:Ljava/lang/String;
      49: aload_0
      50: ldc           #18                 // String UTF8
      52: invokestatic  #20                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      55: putfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      58: aload_0
      59: iconst_1
      60: putfield      #22                 // Field useUTF8Flag:Z
      63: aload_0
      64: getstatic     #23                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      67: putfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      70: aload_0
      71: getstatic     #25                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      74: putfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      77: aload_0
      78: ldc           #27                 // int 32768
      80: newarray       byte
      82: putfield      #28                 // Field copyBuffer:[B
      85: aload_0
      86: invokestatic  #29                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      89: putfield      #30                 // Field calendarInstance:Ljava/util/Calendar;
      92: aload_0
      93: new           #15                 // class java/util/HashMap
      96: dup
      97: invokespecial #16                 // Method java/util/HashMap."<init>":()V
     100: putfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     103: aload_0
     104: aload_1
     105: putfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     108: aload_0
     109: new           #2                  // class java/util/zip/Deflater
     112: dup
     113: aload_0
     114: getfield      #10                 // Field level:I
     117: iconst_1
     118: invokespecial #34                 // Method java/util/zip/Deflater."<init>":(IZ)V
     121: putfield      #35                 // Field def:Ljava/util/zip/Deflater;
     124: aload_0
     125: aload_1
     126: aload_0
     127: getfield      #35                 // Field def:Ljava/util/zip/Deflater;
     130: invokestatic  #49                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/nio/channels/SeekableByteChannel;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     133: putfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     136: aload_0
     137: aconst_null
     138: putfield      #32                 // Field out:Ljava/io/OutputStream;
     141: aload_0
     142: iconst_0
     143: putfield      #38                 // Field isSplitZip:Z
     146: return

  public boolean isSeekable();
    Code:
       0: aload_0
       1: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field encoding:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokestatic  #20                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      10: putfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      13: aload_0
      14: getfield      #22                 // Field useUTF8Flag:Z
      17: ifeq          32
      20: aload_1
      21: invokestatic  #55                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z
      24: ifne          32
      27: aload_0
      28: iconst_0
      29: putfield      #22                 // Field useUTF8Flag:Z
      32: return

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #19                 // Field encoding:Ljava/lang/String;
       4: areturn

  public void setUseLanguageEncodingFlag(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          19
       5: aload_0
       6: getfield      #19                 // Field encoding:Ljava/lang/String;
       9: invokestatic  #55                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: putfield      #22                 // Field useUTF8Flag:Z
      23: return

  public void setCreateUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
       5: return

  public void setFallbackToUTF8(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #56                 // Field fallbackToUTF8:Z
       5: return

  public void setUseZip64(org.apache.commons.compress.archivers.zip.Zip64Mode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       5: return

  public void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field finished:Z
       4: ifeq          17
       7: new           #50                 // class java/io/IOException
      10: dup
      11: ldc           #58                 // String This archive has already been finished
      13: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: ifnull        34
      24: new           #50                 // class java/io/IOException
      27: dup
      28: ldc           #61                 // String This archive contains unclosed entries.
      30: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      38: invokevirtual #62                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      41: lstore_1
      42: aload_0
      43: lload_1
      44: putfield      #63                 // Field cdOffset:J
      47: aload_0
      48: getfield      #38                 // Field isSplitZip:Z
      51: ifeq          79
      54: aload_0
      55: getfield      #32                 // Field out:Ljava/io/OutputStream;
      58: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      61: astore_3
      62: aload_0
      63: aload_3
      64: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentBytesWritten:()J
      67: putfield      #63                 // Field cdOffset:J
      70: aload_0
      71: aload_3
      72: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
      75: i2l
      76: putfield      #66                 // Field cdDiskNumberStart:J
      79: aload_0
      80: invokespecial #67                 // Method writeCentralDirectoryInChunks:()V
      83: aload_0
      84: aload_0
      85: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      88: invokevirtual #62                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      91: lload_1
      92: lsub
      93: putfield      #68                 // Field cdLength:J
      96: aload_0
      97: getfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     100: aload_0
     101: getfield      #8                  // Field comment:Ljava/lang/String;
     104: invokeinterface #69,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
     109: astore_3
     110: aload_3
     111: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
     114: i2l
     115: aload_3
     116: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     119: i2l
     120: lsub
     121: lstore        4
     123: aload_0
     124: ldc2_w        #72                 // long 22l
     127: lload         4
     129: ladd
     130: putfield      #74                 // Field eocdLength:J
     133: aload_0
     134: invokevirtual #75                 // Method writeZip64CentralDirectory:()V
     137: aload_0
     138: invokevirtual #76                 // Method writeCentralDirectoryEnd:()V
     141: aload_0
     142: getfield      #17                 // Field metaData:Ljava/util/Map;
     145: invokeinterface #77,  1           // InterfaceMethod java/util/Map.clear:()V
     150: aload_0
     151: getfield      #14                 // Field entries:Ljava/util/List;
     154: invokeinterface #78,  1           // InterfaceMethod java/util/List.clear:()V
     159: aload_0
     160: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     163: invokevirtual #79                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.close:()V
     166: aload_0
     167: getfield      #38                 // Field isSplitZip:Z
     170: ifeq          180
     173: aload_0
     174: getfield      #32                 // Field out:Ljava/io/OutputStream;
     177: invokevirtual #80                 // Method java/io/OutputStream.close:()V
     180: aload_0
     181: iconst_1
     182: putfield      #57                 // Field finished:Z
     185: return

  private void writeCentralDirectoryInChunks() throws java.io.IOException;
    Code:
       0: sipush        1000
       3: istore_1
       4: new           #81                 // class java/io/ByteArrayOutputStream
       7: dup
       8: ldc           #82                 // int 70000
      10: invokespecial #83                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      13: astore_2
      14: iconst_0
      15: istore_3
      16: aload_0
      17: getfield      #14                 // Field entries:Ljava/util/List;
      20: invokeinterface #84,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          86
      37: aload         4
      39: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      47: astore        5
      49: aload_2
      50: aload_0
      51: aload         5
      53: invokespecial #88                 // Method createCentralFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)[B
      56: invokevirtual #89                 // Method java/io/ByteArrayOutputStream.write:([B)V
      59: iinc          3, 1
      62: iload_3
      63: sipush        1000
      66: if_icmple     83
      69: aload_0
      70: aload_2
      71: invokevirtual #90                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      74: invokespecial #91                 // Method writeCounted:([B)V
      77: aload_2
      78: invokevirtual #92                 // Method java/io/ByteArrayOutputStream.reset:()V
      81: iconst_0
      82: istore_3
      83: goto          27
      86: aload_0
      87: aload_2
      88: invokevirtual #90                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      91: invokespecial #91                 // Method writeCounted:([B)V
      94: return

  public void closeArchiveEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #93                 // Method preClose:()V
       4: aload_0
       5: invokespecial #94                 // Method flushDeflater:()V
       8: aload_0
       9: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      12: invokevirtual #62                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      15: aload_0
      16: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      19: invokestatic  #95                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
      22: lsub
      23: lstore_1
      24: aload_0
      25: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      28: invokevirtual #96                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getCrc32:()J
      31: lstore_3
      32: aload_0
      33: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      36: aload_0
      37: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      40: invokevirtual #97                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesRead:()J
      43: invokestatic  #98                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$102:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
      46: pop2
      47: aload_0
      48: aload_0
      49: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      52: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      55: invokespecial #100                // Method getEffectiveZip64Mode:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      58: astore        5
      60: aload_0
      61: lload_1
      62: lload_3
      63: aload         5
      65: invokespecial #101                // Method handleSizesAndCrc:(JJLorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
      68: istore        6
      70: aload_0
      71: iload         6
      73: iconst_0
      74: invokespecial #102                // Method closeEntry:(ZZ)V
      77: aload_0
      78: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      81: invokevirtual #103                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.reset:()V
      84: return

  private void closeCopiedEntry(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #93                 // Method preClose:()V
       4: aload_0
       5: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       8: aload_0
       9: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      12: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      15: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      18: invokestatic  #98                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$102:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
      21: pop2
      22: aload_0
      23: aload_0
      24: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      27: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      30: invokespecial #100                // Method getEffectiveZip64Mode:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokespecial #105                // Method checkIfNeedsZip64:(Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
      39: istore_3
      40: aload_0
      41: iload_3
      42: iload_1
      43: invokespecial #102                // Method closeEntry:(ZZ)V
      46: return

  private void closeEntry(boolean, boolean) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifne          16
       4: aload_0
       5: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       8: ifnull        16
      11: aload_0
      12: iload_1
      13: invokespecial #106                // Method rewriteSizesAndCrc:(Z)V
      16: iload_2
      17: ifne          31
      20: aload_0
      21: aload_0
      22: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      25: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      28: invokevirtual #107                // Method writeDataDescriptor:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      31: aload_0
      32: aconst_null
      33: putfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      36: return

  private void preClose() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field finished:Z
       4: ifeq          17
       7: new           #50                 // class java/io/IOException
      10: dup
      11: ldc           #108                // String Stream has already been finished
      13: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: ifnonnull     34
      24: new           #50                 // class java/io/IOException
      27: dup
      28: ldc           #109                // String No current entry to close
      30: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      38: invokestatic  #110                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$300:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z
      41: ifne          53
      44: aload_0
      45: getstatic     #111                // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B
      48: iconst_0
      49: iconst_0
      50: invokevirtual #112                // Method write:([BII)V
      53: return

  public void addRawArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
       3: dup
       4: aload_1
       5: invokespecial #113                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokespecial #114                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      14: ifeq          24
      17: aload_3
      18: getstatic     #115                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      21: invokevirtual #116                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
      24: aload_3
      25: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      28: ldc2_w        #118                // long -1l
      31: lcmp
      32: ifeq          61
      35: aload_3
      36: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      39: ldc2_w        #118                // long -1l
      42: lcmp
      43: ifeq          61
      46: aload_3
      47: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      50: ldc2_w        #118                // long -1l
      53: lcmp
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: istore        4
      64: aload_0
      65: aload_3
      66: iload         4
      68: invokespecial #122                // Method putArchiveEntry:(Lorg/apache/commons/compress/archivers/ArchiveEntry;Z)V
      71: aload_0
      72: aload_2
      73: invokespecial #123                // Method copyFromZipInputStream:(Ljava/io/InputStream;)V
      76: aload_0
      77: iload         4
      79: invokespecial #124                // Method closeCopiedEntry:(Z)V
      82: return

  private void flushDeflater() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       7: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      10: bipush        8
      12: if_icmpne     22
      15: aload_0
      16: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      19: invokevirtual #126                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.flushDeflater:()V
      22: return

  private boolean handleSizesAndCrc(long, long, org.apache.commons.compress.archivers.zip.Zip64Mode) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       7: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      10: bipush        8
      12: if_icmpne     57
      15: aload_0
      16: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      19: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      22: aload_0
      23: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      26: invokestatic  #127                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$100:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
      29: invokevirtual #128                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V
      32: aload_0
      33: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      36: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      39: lload_1
      40: invokevirtual #129                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V
      43: aload_0
      44: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      47: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      50: lload_3
      51: invokevirtual #130                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V
      54: goto          259
      57: aload_0
      58: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      61: ifnonnull     226
      64: aload_0
      65: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      68: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      71: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      74: lload_3
      75: lcmp
      76: ifeq          148
      79: new           #131                // class java/util/zip/ZipException
      82: dup
      83: new           #132                // class java/lang/StringBuilder
      86: dup
      87: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #134                // String Bad CRC checksum for entry
      92: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      99: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     102: invokevirtual #136                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
     105: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #137                // String :
     110: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     117: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     120: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
     123: invokestatic  #138                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     126: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #139                // String  instead of
     131: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: lload_3
     135: invokestatic  #138                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     138: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #140                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #141                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
     147: athrow
     148: aload_0
     149: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     152: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     155: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     158: lload_1
     159: lcmp
     160: ifeq          259
     163: new           #131                // class java/util/zip/ZipException
     166: dup
     167: new           #132                // class java/lang/StringBuilder
     170: dup
     171: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
     174: ldc           #142                // String Bad size for entry
     176: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_0
     180: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     183: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     186: invokevirtual #136                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
     189: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: ldc           #137                // String :
     194: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_0
     198: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     201: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     204: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     207: invokevirtual #143                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     210: ldc           #139                // String  instead of
     212: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: lload_1
     216: invokevirtual #143                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     219: invokevirtual #140                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     222: invokespecial #141                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
     225: athrow
     226: aload_0
     227: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     230: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     233: lload_1
     234: invokevirtual #128                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V
     237: aload_0
     238: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     241: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     244: lload_1
     245: invokevirtual #129                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V
     248: aload_0
     249: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     252: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     255: lload_3
     256: invokevirtual #130                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V
     259: aload_0
     260: aload         5
     262: invokespecial #105                // Method checkIfNeedsZip64:(Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
     265: ireturn

  private boolean checkIfNeedsZip64(org.apache.commons.compress.archivers.zip.Zip64Mode) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       5: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       8: aload_1
       9: invokespecial #144                // Method isZip64Required:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
      12: istore_2
      13: iload_2
      14: ifeq          42
      17: aload_1
      18: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      21: if_acmpne     42
      24: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
      27: dup
      28: aload_0
      29: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      32: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      35: invokestatic  #147                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException.getEntryTooBigMessage:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/lang/String;
      38: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload_2
      43: ireturn

  private boolean isZip64Required(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.Zip64Mode);
    Code:
       0: aload_2
       1: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: if_acmpeq     22
       7: aload_2
       8: getstatic     #150                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AlwaysWithCompatibility:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      11: if_acmpeq     22
      14: aload_0
      15: aload_1
      16: invokespecial #151                // Method isTooLargeForZip32:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private boolean isTooLargeForZip32(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
       4: ldc2_w        #152                // long 4294967295l
       7: lcmp
       8: ifge          22
      11: aload_1
      12: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      15: ldc2_w        #152                // long 4294967295l
      18: lcmp
      19: iflt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private void rewriteSizesAndCrc(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #154,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
       9: lstore_2
      10: aload_0
      11: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      14: aload_0
      15: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      18: invokestatic  #155                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$400:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
      21: invokeinterface #156,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      26: pop
      27: aload_0
      28: aload_0
      29: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      32: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      35: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      38: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      41: invokevirtual #158                // Method writeOut:([B)V
      44: aload_0
      45: aload_0
      46: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      49: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      52: invokespecial #114                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      55: ifeq          62
      58: iload_1
      59: ifne          99
      62: aload_0
      63: aload_0
      64: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      67: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      70: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      73: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      76: invokevirtual #158                // Method writeOut:([B)V
      79: aload_0
      80: aload_0
      81: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      84: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      87: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      90: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      93: invokevirtual #158                // Method writeOut:([B)V
      96: goto          119
      99: aload_0
     100: getstatic     #159                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     103: invokevirtual #160                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
     106: invokevirtual #158                // Method writeOut:([B)V
     109: aload_0
     110: getstatic     #159                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     113: invokevirtual #160                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
     116: invokevirtual #158                // Method writeOut:([B)V
     119: aload_0
     120: aload_0
     121: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     124: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     127: invokespecial #114                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
     130: ifeq          312
     133: aload_0
     134: aload_0
     135: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     138: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     141: invokespecial #161                // Method getName:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/nio/ByteBuffer;
     144: astore        4
     146: aload         4
     148: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
     151: aload         4
     153: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     156: isub
     157: istore        5
     159: aload_0
     160: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     163: aload_0
     164: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     167: invokestatic  #155                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$400:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
     170: ldc2_w        #162                // long 12l
     173: ladd
     174: ldc2_w        #164                // long 4l
     177: ladd
     178: iload         5
     180: i2l
     181: ladd
     182: ldc2_w        #164                // long 4l
     185: ladd
     186: invokeinterface #156,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     191: pop
     192: aload_0
     193: aload_0
     194: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     197: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     200: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     203: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     206: invokevirtual #158                // Method writeOut:([B)V
     209: aload_0
     210: aload_0
     211: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     214: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     217: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     220: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     223: invokevirtual #158                // Method writeOut:([B)V
     226: iload_1
     227: ifne          312
     230: aload_0
     231: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     234: aload_0
     235: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     238: invokestatic  #155                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$400:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
     241: ldc2_w        #167                // long 10l
     244: lsub
     245: invokeinterface #156,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     250: pop
     251: aload_0
     252: aload_0
     253: aload_0
     254: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     257: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     260: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     263: iconst_0
     264: iconst_0
     265: invokespecial #169                // Method versionNeededToExtract:(IZZ)I
     268: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     271: invokevirtual #158                // Method writeOut:([B)V
     274: aload_0
     275: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     278: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     281: getstatic     #115                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
     284: invokevirtual #116                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
     287: aload_0
     288: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     291: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     294: invokevirtual #171                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V
     297: aload_0
     298: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     301: invokestatic  #172                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$500:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z
     304: ifeq          312
     307: aload_0
     308: iconst_0
     309: putfield      #173                // Field hasUsedZip64:Z
     312: aload_0
     313: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     316: lload_2
     317: invokeinterface #156,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     322: pop
     323: return

  public void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #122                // Method putArchiveEntry:(Lorg/apache/commons/compress/archivers/ArchiveEntry;Z)V
       6: return

  private void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field finished:Z
       4: ifeq          17
       7: new           #50                 // class java/io/IOException
      10: dup
      11: ldc           #108                // String Stream has already been finished
      13: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: ifnull        28
      24: aload_0
      25: invokevirtual #174                // Method closeArchiveEntry:()V
      28: aload_0
      29: new           #175                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry
      32: dup
      33: aload_1
      34: checkcast     #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      37: aconst_null
      38: invokespecial #176                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V
      41: putfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      44: aload_0
      45: getfield      #14                 // Field entries:Ljava/util/List;
      48: aload_0
      49: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      52: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      55: invokeinterface #177,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload_0
      62: aload_0
      63: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      66: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      69: invokespecial #178                // Method setDefaults:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      72: aload_0
      73: aload_0
      74: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      77: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      80: invokespecial #100                // Method getEffectiveZip64Mode:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      83: astore_3
      84: aload_0
      85: aload_3
      86: invokespecial #179                // Method validateSizeInformation:(Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)V
      89: aload_0
      90: aload_0
      91: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      94: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      97: aload_3
      98: invokespecial #180                // Method shouldAddZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
     101: ifeq          249
     104: aload_0
     105: aload_0
     106: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     109: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     112: invokespecial #181                // Method getZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField;
     115: astore        4
     117: iload_2
     118: ifeq          162
     121: new           #182                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     124: dup
     125: aload_0
     126: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     129: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     132: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     135: invokespecial #183                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     138: astore        5
     140: new           #182                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     143: dup
     144: aload_0
     145: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     148: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     151: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     154: invokespecial #183                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     157: astore        6
     159: goto          225
     162: aload_0
     163: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     166: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     169: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     172: ifne          217
     175: aload_0
     176: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     179: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     182: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     185: ldc2_w        #118                // long -1l
     188: lcmp
     189: ifeq          217
     192: new           #182                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     195: dup
     196: aload_0
     197: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     200: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     203: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     206: invokespecial #183                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     209: dup
     210: astore        5
     212: astore        6
     214: goto          225
     217: getstatic     #184                // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     220: dup
     221: astore        5
     223: astore        6
     225: aload         4
     227: aload         5
     229: invokevirtual #185                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     232: aload         4
     234: aload         6
     236: invokevirtual #186                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setCompressedSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     239: aload_0
     240: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     243: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     246: invokevirtual #171                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V
     249: aload_0
     250: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     253: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     256: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     259: bipush        8
     261: if_icmpne     287
     264: aload_0
     265: getfield      #187                // Field hasCompressionLevelChanged:Z
     268: ifeq          287
     271: aload_0
     272: getfield      #35                 // Field def:Ljava/util/zip/Deflater;
     275: aload_0
     276: getfield      #10                 // Field level:I
     279: invokevirtual #188                // Method java/util/zip/Deflater.setLevel:(I)V
     282: aload_0
     283: iconst_0
     284: putfield      #187                // Field hasCompressionLevelChanged:Z
     287: aload_0
     288: aload_1
     289: checkcast     #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
     292: iload_2
     293: invokespecial #189                // Method writeLocalFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Z)V
     296: return

  private void setDefaults(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
       4: iconst_m1
       5: if_icmpne     16
       8: aload_1
       9: aload_0
      10: getfield      #11                 // Field method:I
      13: invokevirtual #190                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V
      16: aload_1
      17: invokevirtual #191                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J
      20: ldc2_w        #118                // long -1l
      23: lcmp
      24: ifne          34
      27: aload_1
      28: invokestatic  #192                // Method java/lang/System.currentTimeMillis:()J
      31: invokevirtual #193                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V
      34: return

  private void validateSizeInformation(org.apache.commons.compress.archivers.zip.Zip64Mode) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       7: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      10: ifne          94
      13: aload_0
      14: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      17: ifnonnull     94
      20: aload_0
      21: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      24: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      27: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      30: ldc2_w        #118                // long -1l
      33: lcmp
      34: ifne          47
      37: new           #131                // class java/util/zip/ZipException
      40: dup
      41: ldc           #194                // String Uncompressed size is required for STORED method when not writing to a file
      43: invokespecial #141                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      51: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      54: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      57: ldc2_w        #118                // long -1l
      60: lcmp
      61: ifne          74
      64: new           #131                // class java/util/zip/ZipException
      67: dup
      68: ldc           #195                // String CRC checksum is required for STORED method when not writing to a file
      70: invokespecial #141                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      78: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      81: aload_0
      82: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      85: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      88: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      91: invokevirtual #129                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V
      94: aload_0
      95: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      98: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     101: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     104: ldc2_w        #152                // long 4294967295l
     107: lcmp
     108: ifge          128
     111: aload_0
     112: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     115: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     118: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     121: ldc2_w        #152                // long 4294967295l
     124: lcmp
     125: iflt          153
     128: aload_1
     129: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     132: if_acmpne     153
     135: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
     138: dup
     139: aload_0
     140: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     143: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     146: invokestatic  #147                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException.getEntryTooBigMessage:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/lang/String;
     149: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: return

  private boolean shouldAddZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.Zip64Mode);
    Code:
       0: aload_2
       1: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: if_acmpeq     61
       7: aload_2
       8: getstatic     #150                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AlwaysWithCompatibility:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      11: if_acmpeq     61
      14: aload_1
      15: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      18: ldc2_w        #152                // long 4294967295l
      21: lcmp
      22: ifge          61
      25: aload_1
      26: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      29: ldc2_w        #152                // long 4294967295l
      32: lcmp
      33: ifge          61
      36: aload_1
      37: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      40: ldc2_w        #118                // long -1l
      43: lcmp
      44: ifne          65
      47: aload_0
      48: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      51: ifnull        65
      54: aload_2
      55: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      58: if_acmpeq     65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ireturn

  public void setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field comment:Ljava/lang/String;
       5: return

  public void setLevel(int);
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmplt     11
       5: iload_1
       6: bipush        9
       8: if_icmple     38
      11: new           #196                // class java/lang/IllegalArgumentException
      14: dup
      15: new           #132                // class java/lang/StringBuilder
      18: dup
      19: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #197                // String Invalid compression level:
      24: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_1
      28: invokevirtual #198                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #140                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #199                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #10                 // Field level:I
      42: iload_1
      43: if_icmpne     47
      46: return
      47: aload_0
      48: iconst_1
      49: putfield      #187                // Field hasCompressionLevelChanged:Z
      52: aload_0
      53: iload_1
      54: putfield      #10                 // Field level:I
      57: return

  public void setMethod(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field method:I
       5: return

  public boolean canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry);
    Code:
       0: aload_1
       1: instanceof    #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
       4: ifeq          51
       7: aload_1
       8: checkcast     #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      11: astore_2
      12: aload_2
      13: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      16: getstatic     #200                // Field org/apache/commons/compress/archivers/zip/ZipMethod.IMPLODING:Lorg/apache/commons/compress/archivers/zip/ZipMethod;
      19: invokevirtual #201                // Method org/apache/commons/compress/archivers/zip/ZipMethod.getCode:()I
      22: if_icmpeq     49
      25: aload_2
      26: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      29: getstatic     #202                // Field org/apache/commons/compress/archivers/zip/ZipMethod.UNSHRINKING:Lorg/apache/commons/compress/archivers/zip/ZipMethod;
      32: invokevirtual #201                // Method org/apache/commons/compress/archivers/zip/ZipMethod.getCode:()I
      35: if_icmpeq     49
      38: aload_2
      39: invokestatic  #203                // Method org/apache/commons/compress/archivers/zip/ZipUtil.canHandleEntryData:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: iconst_0
      52: ireturn

  public void writePreamble(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #204                // Method writePreamble:([BII)V
       8: return

  public void writePreamble(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: ifnull        17
       7: new           #205                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #206                // String Preamble must be written before creating an entry
      13: invokespecial #207                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokevirtual #208                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeCounted:([BII)V
      27: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: ifnonnull     17
       7: new           #205                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #209                // String No current entry
      13: invokespecial #207                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      24: invokestatic  #210                // Method org/apache/commons/compress/archivers/zip/ZipUtil.checkRequestedFeatures:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      27: aload_0
      28: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      31: aload_1
      32: iload_2
      33: iload_3
      34: aload_0
      35: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      38: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      41: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      44: invokevirtual #211                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.write:([BIII)J
      47: lstore        4
      49: aload_0
      50: lload         4
      52: invokevirtual #212                // Method count:(J)V
      55: return

  private void writeCounted(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: aload_1
       5: invokevirtual #213                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeCounted:([B)V
       8: return

  private void copyFromZipInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: ifnonnull     17
       7: new           #205                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #209                // String No current entry
      13: invokespecial #207                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      24: invokestatic  #210                // Method org/apache/commons/compress/archivers/zip/ZipUtil.checkRequestedFeatures:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      27: aload_0
      28: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      31: iconst_1
      32: invokestatic  #214                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$302:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z
      35: pop
      36: aload_1
      37: aload_0
      38: getfield      #28                 // Field copyBuffer:[B
      41: invokevirtual #215                // Method java/io/InputStream.read:([B)I
      44: dup
      45: istore_2
      46: iflt          70
      49: aload_0
      50: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      53: aload_0
      54: getfield      #28                 // Field copyBuffer:[B
      57: iconst_0
      58: iload_2
      59: invokevirtual #208                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeCounted:([BII)V
      62: aload_0
      63: iload_2
      64: invokevirtual #216                // Method count:(I)V
      67: goto          36
      70: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field finished:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #217                // Method finish:()V
      11: aload_0
      12: invokevirtual #218                // Method destroy:()V
      15: goto          25
      18: astore_1
      19: aload_0
      20: invokevirtual #218                // Method destroy:()V
      23: aload_1
      24: athrow
      25: return
    Exception table:
       from    to  target type
           0    11    18   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field out:Ljava/io/OutputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #32                 // Field out:Ljava/io/OutputStream;
      11: invokevirtual #219                // Method java/io/OutputStream.flush:()V
      14: return

  protected final void deflate() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: invokevirtual #220                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.deflate:()V
       7: return

  protected void writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #189                // Method writeLocalFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Z)V
       6: return

  private void writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       4: aload_1
       5: invokevirtual #136                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
       8: invokeinterface #221,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
      13: istore_3
      14: aload_0
      15: aload_1
      16: invokespecial #161                // Method getName:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/nio/ByteBuffer;
      19: astore        4
      21: aload_0
      22: getfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      25: getstatic     #23                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      28: if_acmpeq     39
      31: aload_0
      32: aload_1
      33: iload_3
      34: aload         4
      36: invokespecial #222                // Method addUnicodeExtraFields:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;ZLjava/nio/ByteBuffer;)V
      39: aload_0
      40: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      43: invokevirtual #62                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      46: lstore        5
      48: aload_0
      49: getfield      #38                 // Field isSplitZip:Z
      52: ifeq          81
      55: aload_0
      56: getfield      #32                 // Field out:Ljava/io/OutputStream;
      59: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      62: astore        7
      64: aload_1
      65: aload         7
      67: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
      70: i2l
      71: invokevirtual #223                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setDiskNumberStart:(J)V
      74: aload         7
      76: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentBytesWritten:()J
      79: lstore        5
      81: aload_0
      82: aload_1
      83: aload         4
      85: iload_3
      86: iload_2
      87: lload         5
      89: invokespecial #224                // Method createLocalFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/nio/ByteBuffer;ZZJ)[B
      92: astore        7
      94: aload_0
      95: getfield      #17                 // Field metaData:Ljava/util/Map;
      98: aload_1
      99: new           #225                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData
     102: dup
     103: lload         5
     105: aload_0
     106: aload_1
     107: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     110: iload_2
     111: invokespecial #226                // Method usesDataDescriptor:(IZ)Z
     114: aconst_null
     115: invokespecial #227                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData."<init>":(JZLorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V
     118: invokeinterface #228,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: aload_0
     125: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     128: lload         5
     130: ldc2_w        #229                // long 14l
     133: ladd
     134: invokestatic  #231                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$402:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
     137: pop2
     138: aload_0
     139: aload         7
     141: invokespecial #91                 // Method writeCounted:([B)V
     144: aload_0
     145: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     148: aload_0
     149: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     152: invokevirtual #62                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
     155: invokestatic  #232                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$002:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
     158: pop2
     159: return

  private byte[] createLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, java.nio.ByteBuffer, boolean, boolean, long);
    Code:
       0: aload_1
       1: getstatic     #233                // Field org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: invokevirtual #234                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
       7: astore        7
       9: aload         7
      11: ifnull        21
      14: aload_1
      15: getstatic     #233                // Field org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      18: invokevirtual #116                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
      21: aload         7
      23: instanceof    #235                // class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField
      26: ifeq          37
      29: aload         7
      31: checkcast     #235                // class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField
      34: goto          38
      37: aconst_null
      38: astore        8
      40: aload_1
      41: invokevirtual #236                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAlignment:()I
      44: istore        9
      46: iload         9
      48: ifgt          63
      51: aload         8
      53: ifnull        63
      56: aload         8
      58: invokevirtual #237                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.getAlignment:()S
      61: istore        9
      63: iload         9
      65: iconst_1
      66: if_icmpgt     82
      69: aload         8
      71: ifnull        159
      74: aload         8
      76: invokevirtual #238                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:()Z
      79: ifne          159
      82: bipush        30
      84: aload_2
      85: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
      88: iadd
      89: aload_2
      90: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
      93: isub
      94: aload_1
      95: invokevirtual #239                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B
      98: arraylength
      99: iadd
     100: istore        10
     102: lload         5
     104: lneg
     105: iload         10
     107: i2l
     108: lsub
     109: ldc2_w        #164                // long 4l
     112: lsub
     113: ldc2_w        #241                // long 2l
     116: lsub
     117: iload         9
     119: iconst_1
     120: isub
     121: i2l
     122: land
     123: l2i
     124: istore        11
     126: aload_1
     127: new           #235                // class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField
     130: dup
     131: iload         9
     133: aload         8
     135: ifnull        150
     138: aload         8
     140: invokevirtual #238                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:()Z
     143: ifeq          150
     146: iconst_1
     147: goto          151
     150: iconst_0
     151: iload         11
     153: invokespecial #243                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField."<init>":(IZI)V
     156: invokevirtual #244                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
     159: aload_1
     160: invokevirtual #239                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B
     163: astore        10
     165: aload_2
     166: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
     169: aload_2
     170: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     173: isub
     174: istore        11
     176: bipush        30
     178: iload         11
     180: iadd
     181: aload         10
     183: arraylength
     184: iadd
     185: istore        12
     187: iload         12
     189: newarray       byte
     191: astore        13
     193: getstatic     #245                // Field LFH_SIG:[B
     196: iconst_0
     197: aload         13
     199: iconst_0
     200: iconst_4
     201: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     204: aload_1
     205: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     208: istore        14
     210: aload_0
     211: iload         14
     213: iload         4
     215: invokespecial #226                // Method usesDataDescriptor:(IZ)Z
     218: istore        15
     220: aload_0
     221: iload         14
     223: aload_0
     224: aload_1
     225: invokespecial #114                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
     228: iload         15
     230: invokespecial #169                // Method versionNeededToExtract:(IZZ)I
     233: aload         13
     235: iconst_4
     236: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     239: aload_0
     240: iload_3
     241: ifne          255
     244: aload_0
     245: getfield      #56                 // Field fallbackToUTF8:Z
     248: ifeq          255
     251: iconst_1
     252: goto          256
     255: iconst_0
     256: iload         15
     258: invokespecial #248                // Method getGeneralPurposeBits:(ZZ)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
     261: astore        16
     263: aload         16
     265: aload         13
     267: bipush        6
     269: invokevirtual #249                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V
     272: iload         14
     274: aload         13
     276: bipush        8
     278: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     281: aload_0
     282: getfield      #30                 // Field calendarInstance:Ljava/util/Calendar;
     285: aload_1
     286: invokevirtual #191                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J
     289: aload         13
     291: bipush        10
     293: invokestatic  #250                // Method org/apache/commons/compress/archivers/zip/ZipUtil.toDosTime:(Ljava/util/Calendar;J[BI)V
     296: iload         4
     298: ifne          315
     301: iload         14
     303: bipush        8
     305: if_icmpeq     329
     308: aload_0
     309: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     312: ifnonnull     329
     315: aload_1
     316: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
     319: aload         13
     321: bipush        14
     323: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     326: goto          341
     329: getstatic     #252                // Field LZERO:[B
     332: iconst_0
     333: aload         13
     335: bipush        14
     337: iconst_4
     338: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     341: aload_0
     342: aload_0
     343: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     346: invokestatic  #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     349: invokespecial #114                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
     352: ifeq          378
     355: getstatic     #159                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     358: aload         13
     360: bipush        18
     362: invokevirtual #253                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     365: getstatic     #159                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     368: aload         13
     370: bipush        22
     372: invokevirtual #253                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     375: goto          471
     378: iload         4
     380: ifeq          408
     383: aload_1
     384: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     387: aload         13
     389: bipush        18
     391: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     394: aload_1
     395: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     398: aload         13
     400: bipush        22
     402: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     405: goto          471
     408: iload         14
     410: bipush        8
     412: if_icmpeq     422
     415: aload_0
     416: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     419: ifnull        449
     422: getstatic     #252                // Field LZERO:[B
     425: iconst_0
     426: aload         13
     428: bipush        18
     430: iconst_4
     431: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     434: getstatic     #252                // Field LZERO:[B
     437: iconst_0
     438: aload         13
     440: bipush        22
     442: iconst_4
     443: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     446: goto          471
     449: aload_1
     450: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     453: aload         13
     455: bipush        18
     457: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     460: aload_1
     461: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     464: aload         13
     466: bipush        22
     468: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     471: iload         11
     473: aload         13
     475: bipush        26
     477: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     480: aload         10
     482: arraylength
     483: aload         13
     485: bipush        28
     487: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     490: aload_2
     491: invokevirtual #254                // Method java/nio/ByteBuffer.array:()[B
     494: aload_2
     495: invokevirtual #255                // Method java/nio/ByteBuffer.arrayOffset:()I
     498: aload         13
     500: bipush        30
     502: iload         11
     504: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     507: aload         10
     509: iconst_0
     510: aload         13
     512: bipush        30
     514: iload         11
     516: iadd
     517: aload         10
     519: arraylength
     520: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     523: aload         13
     525: areturn

  private void addUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, boolean, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
       4: getstatic     #256                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.ALWAYS:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
       7: if_acmpeq     14
      10: iload_2
      11: ifne          46
      14: aload_1
      15: new           #257                // class org/apache/commons/compress/archivers/zip/UnicodePathExtraField
      18: dup
      19: aload_1
      20: invokevirtual #136                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #254                // Method java/nio/ByteBuffer.array:()[B
      27: aload_3
      28: invokevirtual #255                // Method java/nio/ByteBuffer.arrayOffset:()I
      31: aload_3
      32: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
      35: aload_3
      36: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
      39: isub
      40: invokespecial #258                // Method org/apache/commons/compress/archivers/zip/UnicodePathExtraField."<init>":(Ljava/lang/String;[BII)V
      43: invokevirtual #244                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
      46: aload_1
      47: invokevirtual #259                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;
      50: astore        4
      52: aload         4
      54: ifnull        143
      57: ldc           #7                  // String
      59: aload         4
      61: invokevirtual #260                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifne          143
      67: aload_0
      68: getfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      71: aload         4
      73: invokeinterface #221,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
      78: istore        5
      80: aload_0
      81: getfield      #24                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      84: getstatic     #256                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.ALWAYS:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      87: if_acmpeq     95
      90: iload         5
      92: ifne          143
      95: aload_0
      96: aload_1
      97: invokespecial #261                // Method getEntryEncoding:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     100: aload         4
     102: invokeinterface #69,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
     107: astore        6
     109: aload_1
     110: new           #262                // class org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField
     113: dup
     114: aload         4
     116: aload         6
     118: invokevirtual #254                // Method java/nio/ByteBuffer.array:()[B
     121: aload         6
     123: invokevirtual #255                // Method java/nio/ByteBuffer.arrayOffset:()I
     126: aload         6
     128: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
     131: aload         6
     133: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     136: isub
     137: invokespecial #263                // Method org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField."<init>":(Ljava/lang/String;[BII)V
     140: invokevirtual #244                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
     143: return

  protected void writeDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
       5: iconst_0
       6: invokespecial #226                // Method usesDataDescriptor:(IZ)Z
       9: ifne          13
      12: return
      13: aload_0
      14: getstatic     #264                // Field DD_SIG:[B
      17: invokespecial #91                 // Method writeCounted:([B)V
      20: aload_0
      21: aload_1
      22: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      25: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      28: invokespecial #91                 // Method writeCounted:([B)V
      31: aload_0
      32: aload_1
      33: invokespecial #114                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      36: ifne          64
      39: aload_0
      40: aload_1
      41: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      44: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      47: invokespecial #91                 // Method writeCounted:([B)V
      50: aload_0
      51: aload_1
      52: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      55: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      58: invokespecial #91                 // Method writeCounted:([B)V
      61: goto          86
      64: aload_0
      65: aload_1
      66: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      69: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
      72: invokespecial #91                 // Method writeCounted:([B)V
      75: aload_0
      76: aload_1
      77: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      80: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
      83: invokespecial #91                 // Method writeCounted:([B)V
      86: return

  protected void writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #88                 // Method createCentralFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)[B
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokespecial #91                 // Method writeCounted:([B)V
      11: return

  private byte[] createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field metaData:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #225                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData
      13: astore_2
      14: aload_0
      15: aload_1
      16: invokespecial #114                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      19: ifne          86
      22: aload_1
      23: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      26: ldc2_w        #152                // long 4294967295l
      29: lcmp
      30: ifge          86
      33: aload_1
      34: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      37: ldc2_w        #152                // long 4294967295l
      40: lcmp
      41: ifge          86
      44: aload_2
      45: invokestatic  #266                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
      48: ldc2_w        #152                // long 4294967295l
      51: lcmp
      52: ifge          86
      55: aload_1
      56: invokevirtual #267                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J
      59: ldc2_w        #268                // long 65535l
      62: lcmp
      63: ifge          86
      66: aload_0
      67: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      70: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      73: if_acmpeq     86
      76: aload_0
      77: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      80: getstatic     #150                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AlwaysWithCompatibility:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      83: if_acmpne     90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: istore_3
      92: iload_3
      93: ifeq          117
      96: aload_0
      97: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     100: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     103: if_acmpne     117
     106: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
     109: dup
     110: ldc_w         #270                // String Archive\'s size exceeds the limit of 4GByte.
     113: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: aload_0
     118: aload_1
     119: aload_2
     120: invokestatic  #266                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
     123: iload_3
     124: invokespecial #271                // Method handleZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;JZ)V
     127: aload_0
     128: aload_1
     129: aload_0
     130: aload_1
     131: invokespecial #161                // Method getName:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/nio/ByteBuffer;
     134: aload_2
     135: iload_3
     136: invokespecial #272                // Method createCentralFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;Z)[B
     139: areturn

  private byte[] createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, java.nio.ByteBuffer, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field isSplitZip:Z
       4: ifeq          102
       7: aload_0
       8: getfield      #32                 // Field out:Ljava/io/OutputStream;
      11: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      14: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
      17: istore        5
      19: aload_0
      20: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      23: iload         5
      25: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: ifnonnull     58
      36: aload_0
      37: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      40: iload         5
      42: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: iconst_1
      46: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: invokeinterface #228,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: goto          102
      58: aload_0
      59: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      62: iload         5
      64: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #274                // class java/lang/Integer
      75: invokevirtual #275                // Method java/lang/Integer.intValue:()I
      78: istore        6
      80: aload_0
      81: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      84: iload         5
      86: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: iload         6
      91: iconst_1
      92: iadd
      93: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: invokeinterface #228,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload_1
     103: invokevirtual #276                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B
     106: astore        5
     108: aload         5
     110: arraylength
     111: istore        6
     113: aload_1
     114: invokevirtual #259                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;
     117: astore        7
     119: aload         7
     121: ifnonnull     128
     124: ldc           #7                  // String
     126: astore        7
     128: aload_0
     129: aload_1
     130: invokespecial #261                // Method getEntryEncoding:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     133: aload         7
     135: invokeinterface #69,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
     140: astore        8
     142: aload_2
     143: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
     146: aload_2
     147: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     150: isub
     151: istore        9
     153: aload         8
     155: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
     158: aload         8
     160: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     163: isub
     164: istore        10
     166: bipush        46
     168: iload         9
     170: iadd
     171: iload         6
     173: iadd
     174: iload         10
     176: iadd
     177: istore        11
     179: iload         11
     181: newarray       byte
     183: astore        12
     185: getstatic     #277                // Field CFH_SIG:[B
     188: iconst_0
     189: aload         12
     191: iconst_0
     192: iconst_4
     193: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     196: aload_1
     197: invokevirtual #278                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I
     200: bipush        8
     202: ishl
     203: aload_0
     204: getfield      #173                // Field hasUsedZip64:Z
     207: ifne          215
     210: bipush        20
     212: goto          217
     215: bipush        45
     217: ior
     218: aload         12
     220: iconst_4
     221: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     224: aload_1
     225: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     228: istore        13
     230: aload_0
     231: getfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     234: aload_1
     235: invokevirtual #136                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
     238: invokeinterface #221,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
     243: istore        14
     245: aload_0
     246: iload         13
     248: iload         4
     250: aload_3
     251: invokestatic  #279                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)Z
     254: invokespecial #169                // Method versionNeededToExtract:(IZZ)I
     257: aload         12
     259: bipush        6
     261: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     264: aload_0
     265: iload         14
     267: ifne          281
     270: aload_0
     271: getfield      #56                 // Field fallbackToUTF8:Z
     274: ifeq          281
     277: iconst_1
     278: goto          282
     281: iconst_0
     282: aload_3
     283: invokestatic  #279                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)Z
     286: invokespecial #248                // Method getGeneralPurposeBits:(ZZ)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
     289: aload         12
     291: bipush        8
     293: invokevirtual #249                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V
     296: iload         13
     298: aload         12
     300: bipush        10
     302: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     305: aload_0
     306: getfield      #30                 // Field calendarInstance:Ljava/util/Calendar;
     309: aload_1
     310: invokevirtual #191                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J
     313: aload         12
     315: bipush        12
     317: invokestatic  #250                // Method org/apache/commons/compress/archivers/zip/ZipUtil.toDosTime:(Ljava/util/Calendar;J[BI)V
     320: aload_1
     321: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
     324: aload         12
     326: bipush        16
     328: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     331: aload_1
     332: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     335: ldc2_w        #152                // long 4294967295l
     338: lcmp
     339: ifge          373
     342: aload_1
     343: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     346: ldc2_w        #152                // long 4294967295l
     349: lcmp
     350: ifge          373
     353: aload_0
     354: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     357: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     360: if_acmpeq     373
     363: aload_0
     364: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     367: getstatic     #150                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AlwaysWithCompatibility:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     370: if_acmpne     396
     373: getstatic     #159                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     376: aload         12
     378: bipush        20
     380: invokevirtual #253                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     383: getstatic     #159                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     386: aload         12
     388: bipush        24
     390: invokevirtual #253                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     393: goto          418
     396: aload_1
     397: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     400: aload         12
     402: bipush        20
     404: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     407: aload_1
     408: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     411: aload         12
     413: bipush        24
     415: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     418: iload         9
     420: aload         12
     422: bipush        28
     424: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     427: iload         6
     429: aload         12
     431: bipush        30
     433: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     436: iload         10
     438: aload         12
     440: bipush        32
     442: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     445: aload_0
     446: getfield      #38                 // Field isSplitZip:Z
     449: ifeq          501
     452: aload_1
     453: invokevirtual #267                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J
     456: ldc2_w        #268                // long 65535l
     459: lcmp
     460: ifge          473
     463: aload_0
     464: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     467: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     470: if_acmpne     486
     473: ldc_w         #280                // int 65535
     476: aload         12
     478: bipush        34
     480: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     483: goto          513
     486: aload_1
     487: invokevirtual #267                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J
     490: l2i
     491: aload         12
     493: bipush        34
     495: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     498: goto          513
     501: getstatic     #281                // Field ZERO:[B
     504: iconst_0
     505: aload         12
     507: bipush        34
     509: iconst_2
     510: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     513: aload_1
     514: invokevirtual #282                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I
     517: aload         12
     519: bipush        36
     521: invokestatic  #247                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     524: aload_1
     525: invokevirtual #283                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J
     528: aload         12
     530: bipush        38
     532: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     535: aload_3
     536: invokestatic  #266                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
     539: ldc2_w        #152                // long 4294967295l
     542: lcmp
     543: ifge          556
     546: aload_0
     547: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     550: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     553: if_acmpne     569
     556: ldc2_w        #152                // long 4294967295l
     559: aload         12
     561: bipush        42
     563: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     566: goto          586
     569: aload_3
     570: invokestatic  #266                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
     573: ldc2_w        #152                // long 4294967295l
     576: invokestatic  #284                // Method java/lang/Math.min:(JJ)J
     579: aload         12
     581: bipush        42
     583: invokestatic  #251                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     586: aload_2
     587: invokevirtual #254                // Method java/nio/ByteBuffer.array:()[B
     590: aload_2
     591: invokevirtual #255                // Method java/nio/ByteBuffer.arrayOffset:()I
     594: aload         12
     596: bipush        46
     598: iload         9
     600: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     603: bipush        46
     605: iload         9
     607: iadd
     608: istore        15
     610: aload         5
     612: iconst_0
     613: aload         12
     615: iload         15
     617: iload         6
     619: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     622: iload         15
     624: iload         6
     626: iadd
     627: istore        16
     629: aload         8
     631: invokevirtual #254                // Method java/nio/ByteBuffer.array:()[B
     634: aload         8
     636: invokevirtual #255                // Method java/nio/ByteBuffer.arrayOffset:()I
     639: aload         12
     641: iload         16
     643: iload         10
     645: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     648: aload         12
     650: areturn

  private void handleZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, long, boolean);
    Code:
       0: iload         4
       2: ifeq          202
       5: aload_0
       6: aload_1
       7: invokespecial #181                // Method getZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField;
      10: astore        5
      12: aload_1
      13: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      16: ldc2_w        #152                // long 4294967295l
      19: lcmp
      20: ifge          54
      23: aload_1
      24: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      27: ldc2_w        #152                // long 4294967295l
      30: lcmp
      31: ifge          54
      34: aload_0
      35: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      38: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      41: if_acmpeq     54
      44: aload_0
      45: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      48: getstatic     #150                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AlwaysWithCompatibility:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      51: if_acmpne     89
      54: aload         5
      56: new           #182                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      59: dup
      60: aload_1
      61: invokevirtual #121                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      64: invokespecial #183                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
      67: invokevirtual #186                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setCompressedSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
      70: aload         5
      72: new           #182                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      75: dup
      76: aload_1
      77: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      80: invokespecial #183                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
      83: invokevirtual #185                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
      86: goto          101
      89: aload         5
      91: aconst_null
      92: invokevirtual #186                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setCompressedSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
      95: aload         5
      97: aconst_null
      98: invokevirtual #185                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     101: lload_2
     102: ldc2_w        #152                // long 4294967295l
     105: lcmp
     106: ifge          119
     109: aload_0
     110: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     113: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     116: if_acmpne     123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: istore        6
     126: aload_1
     127: invokevirtual #267                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J
     130: ldc2_w        #268                // long 65535l
     133: lcmp
     134: ifge          147
     137: aload_0
     138: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     141: getstatic     #149                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     144: if_acmpne     151
     147: iconst_1
     148: goto          152
     151: iconst_0
     152: istore        7
     154: iload         6
     156: ifne          164
     159: iload         7
     161: ifeq          177
     164: aload         5
     166: new           #182                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     169: dup
     170: lload_2
     171: invokespecial #183                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     174: invokevirtual #285                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setRelativeHeaderOffset:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     177: iload         7
     179: ifeq          198
     182: aload         5
     184: new           #286                // class org/apache/commons/compress/archivers/zip/ZipLong
     187: dup
     188: aload_1
     189: invokevirtual #267                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getDiskNumberStart:()J
     192: invokespecial #287                // Method org/apache/commons/compress/archivers/zip/ZipLong."<init>":(J)V
     195: invokevirtual #288                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setDiskStartNumber:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
     198: aload_1
     199: invokevirtual #171                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V
     202: return

  protected void writeCentralDirectoryEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #173                // Field hasUsedZip64:Z
       4: ifne          28
       7: aload_0
       8: getfield      #38                 // Field isSplitZip:Z
      11: ifeq          28
      14: aload_0
      15: getfield      #32                 // Field out:Ljava/io/OutputStream;
      18: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      21: aload_0
      22: getfield      #74                 // Field eocdLength:J
      25: invokevirtual #289                // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.prepareToWriteUnsplittableContent:(J)V
      28: aload_0
      29: invokespecial #290                // Method validateIfZip64IsNeededInEOCD:()V
      32: aload_0
      33: getstatic     #291                // Field EOCD_SIG:[B
      36: invokespecial #91                 // Method writeCounted:([B)V
      39: iconst_0
      40: istore_1
      41: aload_0
      42: getfield      #38                 // Field isSplitZip:Z
      45: ifeq          59
      48: aload_0
      49: getfield      #32                 // Field out:Ljava/io/OutputStream;
      52: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      55: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
      58: istore_1
      59: aload_0
      60: iload_1
      61: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
      64: invokespecial #91                 // Method writeCounted:([B)V
      67: aload_0
      68: aload_0
      69: getfield      #66                 // Field cdDiskNumberStart:J
      72: l2i
      73: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
      76: invokespecial #91                 // Method writeCounted:([B)V
      79: aload_0
      80: getfield      #14                 // Field entries:Ljava/util/List;
      83: invokeinterface #292,  1          // InterfaceMethod java/util/List.size:()I
      88: istore_2
      89: aload_0
      90: getfield      #38                 // Field isSplitZip:Z
      93: ifeq          138
      96: aload_0
      97: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     100: iload_1
     101: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     109: ifnonnull     116
     112: iconst_0
     113: goto          139
     116: aload_0
     117: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     120: iload_1
     121: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     124: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     129: checkcast     #274                // class java/lang/Integer
     132: invokevirtual #275                // Method java/lang/Integer.intValue:()I
     135: goto          139
     138: iload_2
     139: istore_3
     140: iload_3
     141: ldc_w         #280                // int 65535
     144: invokestatic  #293                // Method java/lang/Math.min:(II)I
     147: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     150: astore        4
     152: aload_0
     153: aload         4
     155: invokespecial #91                 // Method writeCounted:([B)V
     158: iload_2
     159: ldc_w         #280                // int 65535
     162: invokestatic  #293                // Method java/lang/Math.min:(II)I
     165: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     168: astore        5
     170: aload_0
     171: aload         5
     173: invokespecial #91                 // Method writeCounted:([B)V
     176: aload_0
     177: aload_0
     178: getfield      #68                 // Field cdLength:J
     181: ldc2_w        #152                // long 4294967295l
     184: invokestatic  #284                // Method java/lang/Math.min:(JJ)J
     187: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     190: invokespecial #91                 // Method writeCounted:([B)V
     193: aload_0
     194: aload_0
     195: getfield      #63                 // Field cdOffset:J
     198: ldc2_w        #152                // long 4294967295l
     201: invokestatic  #284                // Method java/lang/Math.min:(JJ)J
     204: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     207: invokespecial #91                 // Method writeCounted:([B)V
     210: aload_0
     211: getfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     214: aload_0
     215: getfield      #8                  // Field comment:Ljava/lang/String;
     218: invokeinterface #69,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
     223: astore        6
     225: aload         6
     227: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:()I
     230: aload         6
     232: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     235: isub
     236: istore        7
     238: aload_0
     239: iload         7
     241: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     244: invokespecial #91                 // Method writeCounted:([B)V
     247: aload_0
     248: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     251: aload         6
     253: invokevirtual #254                // Method java/nio/ByteBuffer.array:()[B
     256: aload         6
     258: invokevirtual #255                // Method java/nio/ByteBuffer.arrayOffset:()I
     261: iload         7
     263: invokevirtual #208                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeCounted:([BII)V
     266: return

  private void validateIfZip64IsNeededInEOCD() throws org.apache.commons.compress.archivers.zip.Zip64RequiredException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       7: if_acmpeq     11
      10: return
      11: iconst_0
      12: istore_1
      13: aload_0
      14: getfield      #38                 // Field isSplitZip:Z
      17: ifeq          31
      20: aload_0
      21: getfield      #32                 // Field out:Ljava/io/OutputStream;
      24: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      27: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
      30: istore_1
      31: iload_1
      32: ldc_w         #280                // int 65535
      35: if_icmplt     49
      38: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
      41: dup
      42: ldc_w         #294                // String Number of the disk of End Of Central Directory exceeds the limit of 65535.
      45: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: getfield      #66                 // Field cdDiskNumberStart:J
      53: ldc2_w        #268                // long 65535l
      56: lcmp
      57: iflt          71
      60: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
      63: dup
      64: ldc_w         #295                // String Number of the disk with the start of Central Directory exceeds the limit of 65535.
      67: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      75: iload_1
      76: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      79: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: ifnonnull     91
      87: iconst_0
      88: goto          110
      91: aload_0
      92: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      95: iload_1
      96: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      99: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #274                // class java/lang/Integer
     107: invokevirtual #275                // Method java/lang/Integer.intValue:()I
     110: istore_2
     111: iload_2
     112: ldc_w         #280                // int 65535
     115: if_icmplt     129
     118: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
     121: dup
     122: ldc_w         #296                // String Number of entries on this disk exceeds the limit of 65535.
     125: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: aload_0
     130: getfield      #14                 // Field entries:Ljava/util/List;
     133: invokeinterface #292,  1          // InterfaceMethod java/util/List.size:()I
     138: ldc_w         #280                // int 65535
     141: if_icmplt     155
     144: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
     147: dup
     148: ldc_w         #297                // String Archive contains more than 65535 entries.
     151: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: aload_0
     156: getfield      #68                 // Field cdLength:J
     159: ldc2_w        #152                // long 4294967295l
     162: lcmp
     163: iflt          177
     166: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
     169: dup
     170: ldc_w         #298                // String The size of the entire central directory exceeds the limit of 4GByte.
     173: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
     176: athrow
     177: aload_0
     178: getfield      #63                 // Field cdOffset:J
     181: ldc2_w        #152                // long 4294967295l
     184: lcmp
     185: iflt          199
     188: new           #146                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
     191: dup
     192: ldc_w         #270                // String Archive\'s size exceeds the limit of 4GByte.
     195: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: return

  protected void writeZip64CentralDirectory() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #173                // Field hasUsedZip64:Z
      15: ifne          30
      18: aload_0
      19: invokespecial #299                // Method shouldUseZip64EOCD:()Z
      22: ifeq          30
      25: aload_0
      26: iconst_1
      27: putfield      #173                // Field hasUsedZip64:Z
      30: aload_0
      31: getfield      #173                // Field hasUsedZip64:Z
      34: ifne          38
      37: return
      38: aload_0
      39: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      42: invokevirtual #62                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      45: lstore_1
      46: lconst_0
      47: lstore_3
      48: aload_0
      49: getfield      #38                 // Field isSplitZip:Z
      52: ifeq          77
      55: aload_0
      56: getfield      #32                 // Field out:Ljava/io/OutputStream;
      59: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      62: astore        5
      64: aload         5
      66: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentBytesWritten:()J
      69: lstore_1
      70: aload         5
      72: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
      75: i2l
      76: lstore_3
      77: aload_0
      78: getstatic     #300                // Field ZIP64_EOCD_SIG:[B
      81: invokevirtual #158                // Method writeOut:([B)V
      84: aload_0
      85: ldc2_w        #301                // long 44l
      88: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
      91: invokevirtual #158                // Method writeOut:([B)V
      94: aload_0
      95: bipush        45
      97: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     100: invokevirtual #158                // Method writeOut:([B)V
     103: aload_0
     104: bipush        45
     106: invokestatic  #170                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     109: invokevirtual #158                // Method writeOut:([B)V
     112: iconst_0
     113: istore        5
     115: aload_0
     116: getfield      #38                 // Field isSplitZip:Z
     119: ifeq          134
     122: aload_0
     123: getfield      #32                 // Field out:Ljava/io/OutputStream;
     126: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
     129: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
     132: istore        5
     134: aload_0
     135: iload         5
     137: i2l
     138: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     141: invokevirtual #158                // Method writeOut:([B)V
     144: aload_0
     145: aload_0
     146: getfield      #66                 // Field cdDiskNumberStart:J
     149: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     152: invokevirtual #158                // Method writeOut:([B)V
     155: aload_0
     156: getfield      #38                 // Field isSplitZip:Z
     159: ifeq          206
     162: aload_0
     163: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     166: iload         5
     168: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     171: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     176: ifnonnull     183
     179: iconst_0
     180: goto          215
     183: aload_0
     184: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
     187: iload         5
     189: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     192: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     197: checkcast     #274                // class java/lang/Integer
     200: invokevirtual #275                // Method java/lang/Integer.intValue:()I
     203: goto          215
     206: aload_0
     207: getfield      #14                 // Field entries:Ljava/util/List;
     210: invokeinterface #292,  1          // InterfaceMethod java/util/List.size:()I
     215: istore        6
     217: iload         6
     219: i2l
     220: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     223: astore        7
     225: aload_0
     226: aload         7
     228: invokevirtual #158                // Method writeOut:([B)V
     231: aload_0
     232: getfield      #14                 // Field entries:Ljava/util/List;
     235: invokeinterface #292,  1          // InterfaceMethod java/util/List.size:()I
     240: i2l
     241: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     244: astore        8
     246: aload_0
     247: aload         8
     249: invokevirtual #158                // Method writeOut:([B)V
     252: aload_0
     253: aload_0
     254: getfield      #68                 // Field cdLength:J
     257: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     260: invokevirtual #158                // Method writeOut:([B)V
     263: aload_0
     264: aload_0
     265: getfield      #63                 // Field cdOffset:J
     268: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     271: invokevirtual #158                // Method writeOut:([B)V
     274: aload_0
     275: getfield      #38                 // Field isSplitZip:Z
     278: ifeq          307
     281: bipush        20
     283: istore        9
     285: ldc2_w        #303                // long 20l
     288: aload_0
     289: getfield      #74                 // Field eocdLength:J
     292: ladd
     293: lstore        10
     295: aload_0
     296: getfield      #32                 // Field out:Ljava/io/OutputStream;
     299: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
     302: lload         10
     304: invokevirtual #289                // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.prepareToWriteUnsplittableContent:(J)V
     307: aload_0
     308: getstatic     #305                // Field ZIP64_EOCD_LOC_SIG:[B
     311: invokevirtual #158                // Method writeOut:([B)V
     314: aload_0
     315: lload_3
     316: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     319: invokevirtual #158                // Method writeOut:([B)V
     322: aload_0
     323: lload_1
     324: invokestatic  #166                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     327: invokevirtual #158                // Method writeOut:([B)V
     330: aload_0
     331: getfield      #38                 // Field isSplitZip:Z
     334: ifeq          364
     337: aload_0
     338: getfield      #32                 // Field out:Ljava/io/OutputStream;
     341: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
     344: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
     347: iconst_1
     348: iadd
     349: istore        9
     351: aload_0
     352: iload         9
     354: i2l
     355: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     358: invokevirtual #158                // Method writeOut:([B)V
     361: goto          371
     364: aload_0
     365: getstatic     #306                // Field ONE:[B
     368: invokevirtual #158                // Method writeOut:([B)V
     371: return

  private boolean shouldUseZip64EOCD();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #38                 // Field isSplitZip:Z
       6: ifeq          20
       9: aload_0
      10: getfield      #32                 // Field out:Ljava/io/OutputStream;
      13: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ZipSplitOutputStream
      16: invokevirtual #65                 // Method org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.getCurrentSplitSegmentIndex:()I
      19: istore_1
      20: aload_0
      21: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      24: iload_1
      25: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: ifnonnull     40
      36: iconst_0
      37: goto          59
      40: aload_0
      41: getfield      #31                 // Field numberOfCDInDiskData:Ljava/util/Map;
      44: iload_1
      45: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokeinterface #265,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #274                // class java/lang/Integer
      56: invokevirtual #275                // Method java/lang/Integer.intValue:()I
      59: istore_2
      60: iload_1
      61: ldc_w         #280                // int 65535
      64: if_icmpge     122
      67: aload_0
      68: getfield      #66                 // Field cdDiskNumberStart:J
      71: ldc2_w        #268                // long 65535l
      74: lcmp
      75: ifge          122
      78: iload_2
      79: ldc_w         #280                // int 65535
      82: if_icmpge     122
      85: aload_0
      86: getfield      #14                 // Field entries:Ljava/util/List;
      89: invokeinterface #292,  1          // InterfaceMethod java/util/List.size:()I
      94: ldc_w         #280                // int 65535
      97: if_icmpge     122
     100: aload_0
     101: getfield      #68                 // Field cdLength:J
     104: ldc2_w        #152                // long 4294967295l
     107: lcmp
     108: ifge          122
     111: aload_0
     112: getfield      #63                 // Field cdOffset:J
     115: ldc2_w        #152                // long 4294967295l
     118: lcmp
     119: iflt          126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: ireturn

  protected final void writeOut(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: aload_1
       5: iconst_0
       6: aload_1
       7: arraylength
       8: invokevirtual #307                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeOut:([BII)V
      11: return

  protected final void writeOut(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #307                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeOut:([BII)V
      10: return

  private org.apache.commons.compress.archivers.zip.GeneralPurposeBit getGeneralPurposeBits(boolean, boolean);
    Code:
       0: new           #4                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit
       3: dup
       4: invokespecial #308                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #22                 // Field useUTF8Flag:Z
      13: ifne          20
      16: iload_1
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokevirtual #309                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V
      28: iload_2
      29: ifeq          37
      32: aload_3
      33: iconst_1
      34: invokevirtual #310                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V
      37: aload_3
      38: areturn

  private int versionNeededToExtract(int, boolean, boolean);
    Code:
       0: iload_2
       1: ifeq          7
       4: bipush        45
       6: ireturn
       7: iload_3
       8: ifeq          14
      11: bipush        20
      13: ireturn
      14: aload_0
      15: iload_1
      16: invokespecial #311                // Method versionNeededToExtractMethod:(I)I
      19: ireturn

  private boolean usesDataDescriptor(int, boolean);
    Code:
       0: iload_2
       1: ifne          21
       4: iload_1
       5: bipush        8
       7: if_icmpne     21
      10: aload_0
      11: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      14: ifnonnull     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private int versionNeededToExtractMethod(int);
    Code:
       0: iload_1
       1: bipush        8
       3: if_icmpne     11
       6: bipush        20
       8: goto          13
      11: bipush        10
      13: ireturn

  public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field finished:Z
       4: ifeq          17
       7: new           #50                 // class java/io/IOException
      10: dup
      11: ldc           #108                // String Stream has already been finished
      13: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      20: dup
      21: aload_1
      22: aload_2
      23: invokespecial #312                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry."<init>":(Ljava/io/File;Ljava/lang/String;)V
      26: areturn

  public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field finished:Z
       4: ifeq          17
       7: new           #50                 // class java/io/IOException
      10: dup
      11: ldc           #108                // String Stream has already been finished
      13: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #87                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      20: dup
      21: aload_1
      22: aload_2
      23: iconst_0
      24: anewarray     #313                // class java/nio/file/LinkOption
      27: invokespecial #314                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry."<init>":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V
      30: areturn

  private org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: ifnull        27
       7: aload_0
       8: getfield      #60                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      11: aload_0
      12: getfield      #173                // Field hasUsedZip64:Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokestatic  #315                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$502:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z
      26: pop
      27: aload_0
      28: iconst_1
      29: putfield      #173                // Field hasUsedZip64:Z
      32: aload_1
      33: getstatic     #115                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      36: invokevirtual #234                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
      39: astore_2
      40: aload_2
      41: instanceof    #316                // class org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
      44: ifeq          54
      47: aload_2
      48: checkcast     #316                // class org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
      51: goto          55
      54: aconst_null
      55: astore_3
      56: aload_3
      57: ifnonnull     68
      60: new           #316                // class org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
      63: dup
      64: invokespecial #317                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField."<init>":()V
      67: astore_3
      68: aload_1
      69: aload_3
      70: invokevirtual #318                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addAsFirstExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
      73: aload_3
      74: areturn

  private boolean hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: getstatic     #115                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: invokevirtual #234                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
       7: instanceof    #316                // class org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
      10: ireturn

  private org.apache.commons.compress.archivers.zip.Zip64Mode getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: getstatic     #25                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       7: if_acmpne     37
      10: aload_0
      11: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      14: ifnonnull     37
      17: aload_1
      18: invokevirtual #125                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      21: bipush        8
      23: if_icmpne     37
      26: aload_1
      27: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      30: ldc2_w        #118                // long -1l
      33: lcmp
      34: ifeq          42
      37: aload_0
      38: getfield      #26                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      41: areturn
      42: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      45: areturn

  private org.apache.commons.compress.archivers.zip.ZipEncoding getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: getfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       4: aload_1
       5: invokevirtual #136                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
       8: invokeinterface #221,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
      13: istore_2
      14: iload_2
      15: ifne          31
      18: aload_0
      19: getfield      #56                 // Field fallbackToUTF8:Z
      22: ifeq          31
      25: getstatic     #319                // Field org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      28: goto          35
      31: aload_0
      32: getfield      #21                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      35: areturn

  private java.nio.ByteBuffer getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #261                // Method getEntryEncoding:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       5: aload_1
       6: invokevirtual #136                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
       9: invokeinterface #69,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      14: areturn

  void destroy() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: ifnull        16
       7: aload_0
       8: getfield      #33                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      11: invokeinterface #320,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
      16: aload_0
      17: getfield      #32                 // Field out:Ljava/io/OutputStream;
      20: ifnull        50
      23: aload_0
      24: getfield      #32                 // Field out:Ljava/io/OutputStream;
      27: invokevirtual #80                 // Method java/io/OutputStream.close:()V
      30: goto          50
      33: astore_1
      34: aload_0
      35: getfield      #32                 // Field out:Ljava/io/OutputStream;
      38: ifnull        48
      41: aload_0
      42: getfield      #32                 // Field out:Ljava/io/OutputStream;
      45: invokevirtual #80                 // Method java/io/OutputStream.close:()V
      48: aload_1
      49: athrow
      50: return
    Exception table:
       from    to  target type
           0    16    33   any

  static {};
    Code:
       0: iconst_2
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: dup
       8: iconst_1
       9: iconst_0
      10: bastore
      11: putstatic     #281                // Field ZERO:[B
      14: iconst_4
      15: newarray       byte
      17: dup
      18: iconst_0
      19: iconst_0
      20: bastore
      21: dup
      22: iconst_1
      23: iconst_0
      24: bastore
      25: dup
      26: iconst_2
      27: iconst_0
      28: bastore
      29: dup
      30: iconst_3
      31: iconst_0
      32: bastore
      33: putstatic     #252                // Field LZERO:[B
      36: lconst_1
      37: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      40: putstatic     #306                // Field ONE:[B
      43: getstatic     #321                // Field org/apache/commons/compress/archivers/zip/ZipLong.LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      46: invokevirtual #160                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
      49: putstatic     #245                // Field LFH_SIG:[B
      52: getstatic     #322                // Field org/apache/commons/compress/archivers/zip/ZipLong.DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      55: invokevirtual #160                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
      58: putstatic     #264                // Field DD_SIG:[B
      61: getstatic     #323                // Field org/apache/commons/compress/archivers/zip/ZipLong.CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      64: invokevirtual #160                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
      67: putstatic     #277                // Field CFH_SIG:[B
      70: ldc2_w        #324                // long 101010256l
      73: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      76: putstatic     #291                // Field EOCD_SIG:[B
      79: ldc2_w        #326                // long 101075792l
      82: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      85: putstatic     #300                // Field ZIP64_EOCD_SIG:[B
      88: ldc2_w        #328                // long 117853008l
      91: invokestatic  #157                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      94: putstatic     #305                // Field ZIP64_EOCD_LOC_SIG:[B
      97: return
}
