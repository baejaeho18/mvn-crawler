Compiled from "BoundedSeekableByteChannelInputStream.java"
class org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream extends java.io.InputStream {
  private static final int MAX_BUF_LEN;

  private final java.nio.ByteBuffer buffer;

  private final java.nio.channels.SeekableByteChannel channel;

  private long bytesRemaining;

  public org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream(java.nio.channels.SeekableByteChannel, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field bytesRemaining:J
      14: lload_2
      15: ldc2_w        #5                  // long 8192l
      18: lcmp
      19: ifge          40
      22: lload_2
      23: lconst_0
      24: lcmp
      25: ifle          40
      28: aload_0
      29: lload_2
      30: l2i
      31: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      34: putfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      37: goto          50
      40: aload_0
      41: sipush        8192
      44: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      47: putfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      50: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytesRemaining:J
       4: lconst_0
       5: lcmp
       6: ifle          43
       9: aload_0
      10: dup
      11: getfield      #3                  // Field bytesRemaining:J
      14: lconst_1
      15: lsub
      16: putfield      #3                  // Field bytesRemaining:J
      19: aload_0
      20: iconst_1
      21: invokespecial #9                  // Method read:(I)I
      24: istore_1
      25: iload_1
      26: ifge          31
      29: iload_1
      30: ireturn
      31: aload_0
      32: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      35: invokevirtual #10                 // Method java/nio/ByteBuffer.get:()B
      38: sipush        255
      41: iand
      42: ireturn
      43: iconst_m1
      44: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #3                  // Field bytesRemaining:J
      10: lconst_0
      11: lcmp
      12: ifgt          17
      15: iconst_m1
      16: ireturn
      17: iload_3
      18: istore        4
      20: iload         4
      22: i2l
      23: aload_0
      24: getfield      #3                  // Field bytesRemaining:J
      27: lcmp
      28: ifle          38
      31: aload_0
      32: getfield      #3                  // Field bytesRemaining:J
      35: l2i
      36: istore        4
      38: iload         4
      40: aload_0
      41: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      44: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      47: if_icmpgt     67
      50: aload_0
      51: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      54: astore        6
      56: aload_0
      57: iload         4
      59: invokespecial #9                  // Method read:(I)I
      62: istore        5
      64: goto          93
      67: iload         4
      69: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      72: astore        6
      74: aload_0
      75: getfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
      78: aload         6
      80: invokeinterface #12,  2           // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      85: istore        5
      87: aload         6
      89: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      92: pop
      93: iload         5
      95: iflt          120
      98: aload         6
     100: aload_1
     101: iload_2
     102: iload         5
     104: invokevirtual #14                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     107: pop
     108: aload_0
     109: dup
     110: getfield      #3                  // Field bytesRemaining:J
     113: iload         5
     115: i2l
     116: lsub
     117: putfield      #3                  // Field bytesRemaining:J
     120: iload         5
     122: ireturn

  private int read(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #15                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
       7: iload_1
       8: invokevirtual #16                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      11: pop
      12: aload_0
      13: getfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
      16: aload_0
      17: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      20: invokeinterface #12,  2           // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      25: istore_2
      26: aload_0
      27: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      33: pop
      34: iload_2
      35: ireturn

  public void close();
    Code:
       0: return
}
