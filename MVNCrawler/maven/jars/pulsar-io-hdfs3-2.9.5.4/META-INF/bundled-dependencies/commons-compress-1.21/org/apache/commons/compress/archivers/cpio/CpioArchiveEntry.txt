Compiled from "CpioArchiveEntry.java"
public class org.apache.commons.compress.archivers.cpio.CpioArchiveEntry implements org.apache.commons.compress.archivers.cpio.CpioConstants,org.apache.commons.compress.archivers.ArchiveEntry {
  private final short fileFormat;

  private final int headerSize;

  private final int alignmentBoundary;

  private long chksum;

  private long filesize;

  private long gid;

  private long inode;

  private long maj;

  private long min;

  private long mode;

  private long mtime;

  private java.lang.String name;

  private long nlink;

  private long rmaj;

  private long rmin;

  private long uid;

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(short);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: tableswitch   { // 1 to 8
                     1: 52
                     2: 66
                     3: 108
                     4: 80
                     5: 108
                     6: 108
                     7: 108
                     8: 94
               default: 108
          }
      52: aload_0
      53: bipush        110
      55: putfield      #2                  // Field headerSize:I
      58: aload_0
      59: iconst_4
      60: putfield      #3                  // Field alignmentBoundary:I
      63: goto          118
      66: aload_0
      67: bipush        110
      69: putfield      #2                  // Field headerSize:I
      72: aload_0
      73: iconst_4
      74: putfield      #3                  // Field alignmentBoundary:I
      77: goto          118
      80: aload_0
      81: bipush        76
      83: putfield      #2                  // Field headerSize:I
      86: aload_0
      87: iconst_0
      88: putfield      #3                  // Field alignmentBoundary:I
      91: goto          118
      94: aload_0
      95: bipush        26
      97: putfield      #2                  // Field headerSize:I
     100: aload_0
     101: iconst_2
     102: putfield      #3                  // Field alignmentBoundary:I
     105: goto          118
     108: new           #4                  // class java/lang/IllegalArgumentException
     111: dup
     112: ldc           #5                  // String Unknown header type
     114: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aload_0
     119: iload_1
     120: putfield      #7                  // Field fileFormat:S
     123: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokespecial #9                  // Method "<init>":(SLjava/lang/String;)V
       6: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(short, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #10                 // Method "<init>":(S)V
       5: aload_0
       6: aload_2
       7: putfield      #11                 // Field name:Ljava/lang/String;
      10: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method "<init>":(Ljava/lang/String;)V
       5: aload_0
       6: lload_2
       7: invokevirtual #13                 // Method setSize:(J)V
      10: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(short, java.lang.String, long);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #9                  // Method "<init>":(SLjava/lang/String;)V
       6: aload_0
       7: lload_3
       8: invokevirtual #13                 // Method setSize:(J)V
      11: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: aload_2
       4: invokespecial #14                 // Method "<init>":(SLjava/io/File;Ljava/lang/String;)V
       7: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokespecial #15                 // Method "<init>":(SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V
       8: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(short, java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: aload_2
       4: invokevirtual #16                 // Method java/io/File.isFile:()Z
       7: ifeq          17
      10: aload_2
      11: invokevirtual #17                 // Method java/io/File.length:()J
      14: goto          18
      17: lconst_0
      18: invokespecial #18                 // Method "<init>":(SLjava/lang/String;J)V
      21: aload_2
      22: invokevirtual #19                 // Method java/io/File.isDirectory:()Z
      25: ifeq          38
      28: aload_0
      29: ldc2_w        #20                 // long 16384l
      32: invokevirtual #22                 // Method setMode:(J)V
      35: goto          85
      38: aload_2
      39: invokevirtual #16                 // Method java/io/File.isFile:()Z
      42: ifeq          55
      45: aload_0
      46: ldc2_w        #23                 // long 32768l
      49: invokevirtual #22                 // Method setMode:(J)V
      52: goto          85
      55: new           #4                  // class java/lang/IllegalArgumentException
      58: dup
      59: new           #25                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #27                 // String Cannot determine type of file
      68: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_2
      72: invokevirtual #29                 // Method java/io/File.getName:()Ljava/lang/String;
      75: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: aload_2
      87: invokevirtual #31                 // Method java/io/File.lastModified:()J
      90: ldc2_w        #32                 // long 1000l
      93: ldiv
      94: invokevirtual #34                 // Method setTime:(J)V
      97: return

  public org.apache.commons.compress.archivers.cpio.CpioArchiveEntry(short, java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: aload_2
       4: aload         4
       6: invokestatic  #35                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       9: ifeq          19
      12: aload_2
      13: invokestatic  #36                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      16: goto          20
      19: lconst_0
      20: invokespecial #18                 // Method "<init>":(SLjava/lang/String;J)V
      23: aload_2
      24: aload         4
      26: invokestatic  #37                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      29: ifeq          42
      32: aload_0
      33: ldc2_w        #20                 // long 16384l
      36: invokevirtual #22                 // Method setMode:(J)V
      39: goto          88
      42: aload_2
      43: aload         4
      45: invokestatic  #35                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      48: ifeq          61
      51: aload_0
      52: ldc2_w        #23                 // long 32768l
      55: invokevirtual #22                 // Method setMode:(J)V
      58: goto          88
      61: new           #4                  // class java/lang/IllegalArgumentException
      64: dup
      65: new           #25                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #27                 // String Cannot determine type of file
      74: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: aload_2
      90: aload         4
      92: invokestatic  #39                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;
      95: invokevirtual #40                 // Method setTime:(Ljava/nio/file/attribute/FileTime;)V
      98: return

  private void checkNewFormat();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fileFormat:S
       4: iconst_3
       5: iand
       6: ifne          17
       9: new           #41                 // class java/lang/UnsupportedOperationException
      12: dup
      13: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":()V
      16: athrow
      17: return

  private void checkOldFormat();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fileFormat:S
       4: bipush        12
       6: iand
       7: ifne          18
      10: new           #41                 // class java/lang/UnsupportedOperationException
      13: dup
      14: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":()V
      17: athrow
      18: return

  public long getChksum();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: getfield      #44                 // Field chksum:J
       8: ldc2_w        #45                 // long 4294967295l
      11: land
      12: lreturn

  public long getDevice();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method checkOldFormat:()V
       4: aload_0
       5: getfield      #48                 // Field min:J
       8: lreturn

  public long getDeviceMaj();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: getfield      #49                 // Field maj:J
       8: lreturn

  public long getDeviceMin();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: getfield      #48                 // Field min:J
       8: lreturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #50                 // Field filesize:J
       4: lreturn

  public short getFormat();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fileFormat:S
       4: ireturn

  public long getGID();
    Code:
       0: aload_0
       1: getfield      #51                 // Field gid:J
       4: lreturn

  public int getHeaderSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerSize:I
       4: ireturn

  public int getAlignmentBoundary();
    Code:
       0: aload_0
       1: getfield      #3                  // Field alignmentBoundary:I
       4: ireturn

  public int getHeaderPadCount();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #52                 // Method getHeaderPadCount:(Ljava/nio/charset/Charset;)I
       5: ireturn

  public int getHeaderPadCount(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #11                 // Field name:Ljava/lang/String;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: ifnonnull     26
      13: aload_0
      14: aload_0
      15: getfield      #11                 // Field name:Ljava/lang/String;
      18: invokevirtual #53                 // Method java/lang/String.length:()I
      21: i2l
      22: invokevirtual #54                 // Method getHeaderPadCount:(J)I
      25: ireturn
      26: aload_0
      27: aload_0
      28: getfield      #11                 // Field name:Ljava/lang/String;
      31: aload_1
      32: invokevirtual #55                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      35: arraylength
      36: i2l
      37: invokevirtual #54                 // Method getHeaderPadCount:(J)I
      40: ireturn

  public int getHeaderPadCount(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field alignmentBoundary:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field headerSize:I
      13: iconst_1
      14: iadd
      15: istore_3
      16: aload_0
      17: getfield      #11                 // Field name:Ljava/lang/String;
      20: ifnull        29
      23: iload_3
      24: i2l
      25: lload_1
      26: ladd
      27: l2i
      28: istore_3
      29: iload_3
      30: aload_0
      31: getfield      #3                  // Field alignmentBoundary:I
      34: irem
      35: istore        4
      37: iload         4
      39: ifle          50
      42: aload_0
      43: getfield      #3                  // Field alignmentBoundary:I
      46: iload         4
      48: isub
      49: ireturn
      50: iconst_0
      51: ireturn

  public int getDataPadCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field alignmentBoundary:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #50                 // Field filesize:J
      13: lstore_1
      14: lload_1
      15: aload_0
      16: getfield      #3                  // Field alignmentBoundary:I
      19: i2l
      20: lrem
      21: l2i
      22: istore_3
      23: iload_3
      24: ifle          34
      27: aload_0
      28: getfield      #3                  // Field alignmentBoundary:I
      31: iload_3
      32: isub
      33: ireturn
      34: iconst_0
      35: ireturn

  public long getInode();
    Code:
       0: aload_0
       1: getfield      #56                 // Field inode:J
       4: lreturn

  public long getMode();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: lconst_0
       5: lcmp
       6: ifne          27
       9: ldc           #58                 // String TRAILER!!!
      11: aload_0
      12: getfield      #11                 // Field name:Ljava/lang/String;
      15: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          27
      21: ldc2_w        #23                 // long 32768l
      24: goto          31
      27: aload_0
      28: getfield      #57                 // Field mode:J
      31: lreturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field name:Ljava/lang/String;
       4: areturn

  public long getNumberOfLinks();
    Code:
       0: aload_0
       1: getfield      #60                 // Field nlink:J
       4: lconst_0
       5: lcmp
       6: ifne          26
       9: aload_0
      10: invokevirtual #61                 // Method isDirectory:()Z
      13: ifeq          22
      16: ldc2_w        #62                 // long 2l
      19: goto          30
      22: lconst_1
      23: goto          30
      26: aload_0
      27: getfield      #60                 // Field nlink:J
      30: lreturn

  public long getRemoteDevice();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method checkOldFormat:()V
       4: aload_0
       5: getfield      #64                 // Field rmin:J
       8: lreturn

  public long getRemoteDeviceMaj();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: getfield      #65                 // Field rmaj:J
       8: lreturn

  public long getRemoteDeviceMin();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: getfield      #64                 // Field rmin:J
       8: lreturn

  public long getTime();
    Code:
       0: aload_0
       1: getfield      #66                 // Field mtime:J
       4: lreturn

  public java.util.Date getLastModifiedDate();
    Code:
       0: new           #67                 // class java/util/Date
       3: dup
       4: ldc2_w        #32                 // long 1000l
       7: aload_0
       8: invokevirtual #68                 // Method getTime:()J
      11: lmul
      12: invokespecial #69                 // Method java/util/Date."<init>":(J)V
      15: areturn

  public long getUID();
    Code:
       0: aload_0
       1: getfield      #70                 // Field uid:J
       4: lreturn

  public boolean isBlockDevice();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #72                 // long 24576l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isCharacterDevice();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #74                 // long 8192l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #20                 // long 16384l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isNetwork();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #76                 // long 36864l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isPipe();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #78                 // long 4096l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isRegularFile();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #23                 // long 32768l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isSocket();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #80                 // long 49152l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isSymbolicLink();
    Code:
       0: aload_0
       1: getfield      #57                 // Field mode:J
       4: invokestatic  #71                 // Method org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J
       7: ldc2_w        #82                 // long 40960l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void setChksum(long);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: lload_1
       6: ldc2_w        #45                 // long 4294967295l
       9: land
      10: putfield      #44                 // Field chksum:J
      13: return

  public void setDevice(long);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method checkOldFormat:()V
       4: aload_0
       5: lload_1
       6: putfield      #48                 // Field min:J
       9: return

  public void setDeviceMaj(long);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: lload_1
       6: putfield      #49                 // Field maj:J
       9: return

  public void setDeviceMin(long);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: lload_1
       6: putfield      #48                 // Field min:J
       9: return

  public void setSize(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          14
       6: lload_1
       7: ldc2_w        #45                 // long 4294967295l
      10: lcmp
      11: ifle          46
      14: new           #4                  // class java/lang/IllegalArgumentException
      17: dup
      18: new           #25                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #84                 // String Invalid entry size <
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: lload_1
      31: invokevirtual #85                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      34: ldc           #86                 // String >
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: lload_1
      48: putfield      #50                 // Field filesize:J
      51: return

  public void setGID(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #51                 // Field gid:J
       5: return

  public void setInode(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #56                 // Field inode:J
       5: return

  public void setMode(long);
    Code:
       0: lload_1
       1: ldc2_w        #87                 // long 61440l
       4: land
       5: lstore_3
       6: lload_3
       7: l2i
       8: lookupswitch  { // 8
                  4096: 84
                  8192: 84
                 16384: 84
                 24576: 84
                 32768: 84
                 36864: 84
                 40960: 84
                 49152: 84
               default: 87
          }
      84: goto          129
      87: new           #4                  // class java/lang/IllegalArgumentException
      90: dup
      91: new           #25                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #89                 // String Unknown mode. Full:
     100: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: lload_1
     104: invokestatic  #90                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     107: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc           #91                 // String  Masked:
     112: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: lload_3
     116: invokestatic  #90                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     119: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: aload_0
     130: lload_1
     131: putfield      #57                 // Field mode:J
     134: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field name:Ljava/lang/String;
       5: return

  public void setNumberOfLinks(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #60                 // Field nlink:J
       5: return

  public void setRemoteDevice(long);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method checkOldFormat:()V
       4: aload_0
       5: lload_1
       6: putfield      #64                 // Field rmin:J
       9: return

  public void setRemoteDeviceMaj(long);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: lload_1
       6: putfield      #65                 // Field rmaj:J
       9: return

  public void setRemoteDeviceMin(long);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method checkNewFormat:()V
       4: aload_0
       5: lload_1
       6: putfield      #64                 // Field rmin:J
       9: return

  public void setTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #66                 // Field mtime:J
       5: return

  public void setTime(java.nio.file.attribute.FileTime);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #92                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokevirtual #93                 // Method java/nio/file/attribute/FileTime.to:(Ljava/util/concurrent/TimeUnit;)J
       8: putfield      #66                 // Field mtime:J
      11: return

  public void setUID(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #70                 // Field uid:J
       5: return

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #94                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #11                 // Field name:Ljava/lang/String;
      10: aastore
      11: invokestatic  #95                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #97                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry
      28: astore_2
      29: aload_0
      30: getfield      #11                 // Field name:Ljava/lang/String;
      33: ifnonnull     49
      36: aload_2
      37: getfield      #11                 // Field name:Ljava/lang/String;
      40: ifnonnull     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn
      49: aload_0
      50: getfield      #11                 // Field name:Ljava/lang/String;
      53: aload_2
      54: getfield      #11                 // Field name:Ljava/lang/String;
      57: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ireturn
}
