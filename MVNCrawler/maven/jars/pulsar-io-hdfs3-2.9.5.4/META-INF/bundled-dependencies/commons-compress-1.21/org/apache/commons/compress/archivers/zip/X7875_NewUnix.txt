Compiled from "X7875_NewUnix.java"
public class org.apache.commons.compress.archivers.zip.X7875_NewUnix implements org.apache.commons.compress.archivers.zip.ZipExtraField,java.lang.Cloneable,java.io.Serializable {
  private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;

  private static final org.apache.commons.compress.archivers.zip.ZipShort ZERO;

  private static final java.math.BigInteger ONE_THOUSAND;

  private static final long serialVersionUID;

  private int version;

  private java.math.BigInteger uid;

  private java.math.BigInteger gid;

  public org.apache.commons.compress.archivers.zip.X7875_NewUnix();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field version:I
       9: aload_0
      10: invokespecial #3                  // Method reset:()V
      13: return

  public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();
    Code:
       0: getstatic     #4                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       3: areturn

  public long getUID();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uid:Ljava/math/BigInteger;
       4: invokestatic  #6                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.bigToLong:(Ljava/math/BigInteger;)J
       7: lreturn

  public long getGID();
    Code:
       0: aload_0
       1: getfield      #7                  // Field gid:Ljava/math/BigInteger;
       4: invokestatic  #6                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.bigToLong:(Ljava/math/BigInteger;)J
       7: lreturn

  public void setUID(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.longToBig:(J)Ljava/math/BigInteger;
       5: putfield      #5                  // Field uid:Ljava/math/BigInteger;
       8: return

  public void setGID(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.longToBig:(J)Ljava/math/BigInteger;
       5: putfield      #7                  // Field gid:Ljava/math/BigInteger;
       8: return

  public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uid:Ljava/math/BigInteger;
       4: invokevirtual #9                  // Method java/math/BigInteger.toByteArray:()[B
       7: invokestatic  #10                 // Method trimLeadingZeroesForceMinLength:([B)[B
      10: astore_1
      11: aload_1
      12: ifnonnull     19
      15: iconst_0
      16: goto          21
      19: aload_1
      20: arraylength
      21: istore_2
      22: aload_0
      23: getfield      #7                  // Field gid:Ljava/math/BigInteger;
      26: invokevirtual #9                  // Method java/math/BigInteger.toByteArray:()[B
      29: invokestatic  #10                 // Method trimLeadingZeroesForceMinLength:([B)[B
      32: astore_1
      33: aload_1
      34: ifnonnull     41
      37: iconst_0
      38: goto          43
      41: aload_1
      42: arraylength
      43: istore_3
      44: new           #11                 // class org/apache/commons/compress/archivers/zip/ZipShort
      47: dup
      48: iconst_3
      49: iload_2
      50: iadd
      51: iload_3
      52: iadd
      53: invokespecial #12                 // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      56: areturn

  public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();
    Code:
       0: getstatic     #13                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       3: areturn

  public byte[] getLocalFileDataData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uid:Ljava/math/BigInteger;
       4: invokevirtual #9                  // Method java/math/BigInteger.toByteArray:()[B
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field gid:Ljava/math/BigInteger;
      12: invokevirtual #9                  // Method java/math/BigInteger.toByteArray:()[B
      15: astore_2
      16: aload_1
      17: invokestatic  #10                 // Method trimLeadingZeroesForceMinLength:([B)[B
      20: astore_1
      21: aload_1
      22: ifnull        30
      25: aload_1
      26: arraylength
      27: goto          31
      30: iconst_0
      31: istore_3
      32: aload_2
      33: invokestatic  #10                 // Method trimLeadingZeroesForceMinLength:([B)[B
      36: astore_2
      37: aload_2
      38: ifnull        46
      41: aload_2
      42: arraylength
      43: goto          47
      46: iconst_0
      47: istore        4
      49: iconst_3
      50: iload_3
      51: iadd
      52: iload         4
      54: iadd
      55: newarray       byte
      57: astore        5
      59: aload_1
      60: ifnull        68
      63: aload_1
      64: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B
      67: pop
      68: aload_2
      69: ifnull        77
      72: aload_2
      73: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B
      76: pop
      77: iconst_0
      78: istore        6
      80: aload         5
      82: iload         6
      84: iinc          6, 1
      87: aload_0
      88: getfield      #2                  // Field version:I
      91: invokestatic  #15                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B
      94: bastore
      95: aload         5
      97: iload         6
      99: iinc          6, 1
     102: iload_3
     103: invokestatic  #15                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B
     106: bastore
     107: aload_1
     108: ifnull        121
     111: aload_1
     112: iconst_0
     113: aload         5
     115: iload         6
     117: iload_3
     118: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     121: iload         6
     123: iload_3
     124: iadd
     125: istore        6
     127: aload         5
     129: iload         6
     131: iinc          6, 1
     134: iload         4
     136: invokestatic  #15                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B
     139: bastore
     140: aload_2
     141: ifnull        155
     144: aload_2
     145: iconst_0
     146: aload         5
     148: iload         6
     150: iload         4
     152: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     155: aload         5
     157: areturn

  public byte[] getCentralDirectoryData();
    Code:
       0: getstatic     #17                 // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B
       3: areturn

  public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method reset:()V
       4: iload_3
       5: iconst_3
       6: if_icmpge     41
       9: new           #18                 // class java/util/zip/ZipException
      12: dup
      13: new           #19                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #21                 // String X7875_NewUnix length is too short, only
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_3
      26: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #24                 // String  bytes
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #26                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: iload_2
      44: iinc          2, 1
      47: baload
      48: invokestatic  #27                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.signedByteToUnsignedInt:(B)I
      51: putfield      #2                  // Field version:I
      54: aload_1
      55: iload_2
      56: iinc          2, 1
      59: baload
      60: invokestatic  #27                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.signedByteToUnsignedInt:(B)I
      63: istore        4
      65: iload         4
      67: iconst_3
      68: iadd
      69: iload_3
      70: if_icmple     115
      73: new           #18                 // class java/util/zip/ZipException
      76: dup
      77: new           #19                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #28                 // String X7875_NewUnix invalid: uidSize
      86: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: iload         4
      91: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: ldc           #29                 // String  doesn\'t fit into
      96: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: iload_3
     100: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     103: ldc           #24                 // String  bytes
     105: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokespecial #26                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
     114: athrow
     115: aload_1
     116: iload_2
     117: iload_2
     118: iload         4
     120: iadd
     121: invokestatic  #30                 // Method java/util/Arrays.copyOfRange:([BII)[B
     124: astore        5
     126: iload_2
     127: iload         4
     129: iadd
     130: istore_2
     131: aload_0
     132: new           #31                 // class java/math/BigInteger
     135: dup
     136: iconst_1
     137: aload         5
     139: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B
     142: invokespecial #32                 // Method java/math/BigInteger."<init>":(I[B)V
     145: putfield      #5                  // Field uid:Ljava/math/BigInteger;
     148: aload_1
     149: iload_2
     150: iinc          2, 1
     153: baload
     154: invokestatic  #27                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.signedByteToUnsignedInt:(B)I
     157: istore        6
     159: iload         4
     161: iconst_3
     162: iadd
     163: iload         6
     165: iadd
     166: iload_3
     167: if_icmple     212
     170: new           #18                 // class java/util/zip/ZipException
     173: dup
     174: new           #19                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #33                 // String X7875_NewUnix invalid: gidSize
     183: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: iload         6
     188: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     191: ldc           #29                 // String  doesn\'t fit into
     193: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: iload_3
     197: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     200: ldc           #24                 // String  bytes
     202: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokespecial #26                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
     211: athrow
     212: aload_1
     213: iload_2
     214: iload_2
     215: iload         6
     217: iadd
     218: invokestatic  #30                 // Method java/util/Arrays.copyOfRange:([BII)[B
     221: astore        7
     223: aload_0
     224: new           #31                 // class java/math/BigInteger
     227: dup
     228: iconst_1
     229: aload         7
     231: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B
     234: invokespecial #32                 // Method java/math/BigInteger."<init>":(I[B)V
     237: putfield      #7                  // Field gid:Ljava/math/BigInteger;
     240: return

  public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: return

  private void reset();
    Code:
       0: aload_0
       1: getstatic     #34                 // Field ONE_THOUSAND:Ljava/math/BigInteger;
       4: putfield      #5                  // Field uid:Ljava/math/BigInteger;
       7: aload_0
       8: getstatic     #34                 // Field ONE_THOUSAND:Ljava/math/BigInteger;
      11: putfield      #7                  // Field gid:Ljava/math/BigInteger;
      14: return

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String 0x7875 Zip Extra Field: UID=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field uid:Ljava/math/BigInteger;
      16: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #37                 // String  GID=
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field gid:Ljava/math/BigInteger;
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #39                 // class org/apache/commons/compress/archivers/zip/X7875_NewUnix
       4: ifeq          57
       7: aload_1
       8: checkcast     #39                 // class org/apache/commons/compress/archivers/zip/X7875_NewUnix
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field version:I
      16: aload_2
      17: getfield      #2                  // Field version:I
      20: if_icmpne     55
      23: aload_0
      24: getfield      #5                  // Field uid:Ljava/math/BigInteger;
      27: aload_2
      28: getfield      #5                  // Field uid:Ljava/math/BigInteger;
      31: invokevirtual #40                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      34: ifeq          55
      37: aload_0
      38: getfield      #7                  // Field gid:Ljava/math/BigInteger;
      41: aload_2
      42: getfield      #7                  // Field gid:Ljava/math/BigInteger;
      45: invokevirtual #40                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      48: ifeq          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn
      57: iconst_0
      58: ireturn

  public int hashCode();
    Code:
       0: ldc           #41                 // int -1234567
       2: aload_0
       3: getfield      #2                  // Field version:I
       6: imul
       7: istore_1
       8: iload_1
       9: aload_0
      10: getfield      #5                  // Field uid:Ljava/math/BigInteger;
      13: invokevirtual #42                 // Method java/math/BigInteger.hashCode:()I
      16: bipush        16
      18: invokestatic  #43                 // Method java/lang/Integer.rotateLeft:(II)I
      21: ixor
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #7                  // Field gid:Ljava/math/BigInteger;
      28: invokevirtual #42                 // Method java/math/BigInteger.hashCode:()I
      31: ixor
      32: istore_1
      33: iload_1
      34: ireturn

  static byte[] trimLeadingZeroesForceMinLength(byte[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: iconst_0
       7: istore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     45
      22: aload_2
      23: iload         4
      25: baload
      26: istore        5
      28: iload         5
      30: ifeq          36
      33: goto          45
      36: iinc          1, 1
      39: iinc          4, 1
      42: goto          16
      45: iconst_1
      46: istore_2
      47: iconst_1
      48: aload_0
      49: arraylength
      50: iload_1
      51: isub
      52: invokestatic  #44                 // Method java/lang/Math.max:(II)I
      55: newarray       byte
      57: astore_3
      58: aload_3
      59: arraylength
      60: aload_0
      61: arraylength
      62: iload_1
      63: isub
      64: isub
      65: istore        4
      67: aload_0
      68: iload_1
      69: aload_3
      70: iload         4
      72: aload_3
      73: arraylength
      74: iload         4
      76: isub
      77: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      80: aload_3
      81: areturn

  static {};
    Code:
       0: new           #11                 // class org/apache/commons/compress/archivers/zip/ZipShort
       3: dup
       4: sipush        30837
       7: invokespecial #12                 // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      10: putstatic     #4                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      13: new           #11                 // class org/apache/commons/compress/archivers/zip/ZipShort
      16: dup
      17: iconst_0
      18: invokespecial #12                 // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      21: putstatic     #13                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      24: ldc2_w        #45                 // long 1000l
      27: invokestatic  #47                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      30: putstatic     #34                 // Field ONE_THOUSAND:Ljava/math/BigInteger;
      33: return
}
