Compiled from "TarArchiveOutputStream.java"
public class org.apache.commons.compress.archivers.tar.TarArchiveOutputStream extends org.apache.commons.compress.archivers.ArchiveOutputStream {
  public static final int LONGFILE_ERROR;

  public static final int LONGFILE_TRUNCATE;

  public static final int LONGFILE_GNU;

  public static final int LONGFILE_POSIX;

  public static final int BIGNUMBER_ERROR;

  public static final int BIGNUMBER_STAR;

  public static final int BIGNUMBER_POSIX;

  private static final int RECORD_SIZE;

  private long currSize;

  private java.lang.String currName;

  private long currBytes;

  private final byte[] recordBuf;

  private int longFileMode;

  private int bigNumberMode;

  private int recordsWritten;

  private final int recordsPerBlock;

  private boolean closed;

  private boolean haveUnclosedEntry;

  private boolean finished;

  private final org.apache.commons.compress.utils.FixedLengthBlockOutputStream out;

  private final org.apache.commons.compress.utils.CountingOutputStream countingOut;

  private final org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;

  final java.lang.String encoding;

  private boolean addPaxHeadersForNonAsciiNames;

  private static final org.apache.commons.compress.archivers.zip.ZipEncoding ASCII;

  private static final int BLOCK_SIZE_UNSPECIFIED;

  public org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        -511
       5: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;I)V
       8: return

  public org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        -511
       5: aload_2
       6: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;ILjava/lang/String;)V
       9: return

  public org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;ILjava/lang/String;)V
       7: return

  public org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokespecial #4                  // Method "<init>":(Ljava/io/OutputStream;IILjava/lang/String;)V
       8: return

  public org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream, int, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload         4
       5: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;ILjava/lang/String;)V
       8: iload_3
       9: sipush        512
      12: if_icmpeq     42
      15: new           #5                  // class java/lang/IllegalArgumentException
      18: dup
      19: new           #6                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #8                  // String Tar record size must always be 512 bytes. Attempt to set size of
      28: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_3
      32: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  public org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #14                 // Field longFileMode:I
       9: aload_0
      10: iconst_0
      11: putfield      #15                 // Field bigNumberMode:I
      14: sipush        -511
      17: iload_2
      18: if_icmpne     29
      21: sipush        512
      24: istore        4
      26: goto          32
      29: iload_2
      30: istore        4
      32: iload         4
      34: ifle          46
      37: iload         4
      39: sipush        512
      42: irem
      43: ifeq          73
      46: new           #5                  // class java/lang/IllegalArgumentException
      49: dup
      50: new           #6                  // class java/lang/StringBuilder
      53: dup
      54: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #16                 // String Block size must be a multiple of 512 bytes. Attempt to use set size of
      59: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: iload_2
      63: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: new           #17                 // class org/apache/commons/compress/utils/FixedLengthBlockOutputStream
      77: dup
      78: aload_0
      79: new           #18                 // class org/apache/commons/compress/utils/CountingOutputStream
      82: dup
      83: aload_1
      84: invokespecial #19                 // Method org/apache/commons/compress/utils/CountingOutputStream."<init>":(Ljava/io/OutputStream;)V
      87: dup_x1
      88: putfield      #20                 // Field countingOut:Lorg/apache/commons/compress/utils/CountingOutputStream;
      91: sipush        512
      94: invokespecial #21                 // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream."<init>":(Ljava/io/OutputStream;I)V
      97: putfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
     100: aload_0
     101: aload_3
     102: putfield      #23                 // Field encoding:Ljava/lang/String;
     105: aload_0
     106: aload_3
     107: invokestatic  #24                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     110: putfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     113: aload_0
     114: sipush        512
     117: newarray       byte
     119: putfield      #26                 // Field recordBuf:[B
     122: aload_0
     123: iload         4
     125: sipush        512
     128: idiv
     129: putfield      #27                 // Field recordsPerBlock:I
     132: return

  public void setLongFileMode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field longFileMode:I
       5: return

  public void setBigNumberMode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field bigNumberMode:I
       5: return

  public void setAddPaxHeadersForNonAsciiNames(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field addPaxHeadersForNonAsciiNames:Z
       5: return

  public int getCount();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getBytesWritten:()J
       4: l2i
       5: ireturn

  public long getBytesWritten();
    Code:
       0: aload_0
       1: getfield      #20                 // Field countingOut:Lorg/apache/commons/compress/utils/CountingOutputStream;
       4: invokevirtual #30                 // Method org/apache/commons/compress/utils/CountingOutputStream.getBytesWritten:()J
       7: lreturn

  public void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field finished:Z
       4: ifeq          17
       7: new           #32                 // class java/io/IOException
      10: dup
      11: ldc           #33                 // String This archive has already been finished
      13: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #35                 // Field haveUnclosedEntry:Z
      21: ifeq          34
      24: new           #32                 // class java/io/IOException
      27: dup
      28: ldc           #36                 // String This archive contains unclosed entries.
      30: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: invokespecial #37                 // Method writeEOFRecord:()V
      38: aload_0
      39: invokespecial #37                 // Method writeEOFRecord:()V
      42: aload_0
      43: invokespecial #38                 // Method padAsNeeded:()V
      46: aload_0
      47: getfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
      50: invokevirtual #39                 // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream.flush:()V
      53: aload_0
      54: iconst_1
      55: putfield      #31                 // Field finished:Z
      58: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field finished:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #40                 // Method finish:()V
      11: aload_0
      12: getfield      #41                 // Field closed:Z
      15: ifne          55
      18: aload_0
      19: getfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
      22: invokevirtual #42                 // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream.close:()V
      25: aload_0
      26: iconst_1
      27: putfield      #41                 // Field closed:Z
      30: goto          55
      33: astore_1
      34: aload_0
      35: getfield      #41                 // Field closed:Z
      38: ifne          53
      41: aload_0
      42: getfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
      45: invokevirtual #42                 // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream.close:()V
      48: aload_0
      49: iconst_1
      50: putfield      #41                 // Field closed:Z
      53: aload_1
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    11    33   any

  public int getRecordSize();
    Code:
       0: sipush        512
       3: ireturn

  public void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field finished:Z
       4: ifeq          17
       7: new           #32                 // class java/io/IOException
      10: dup
      11: ldc           #43                 // String Stream has already been finished
      13: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #44                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
      21: astore_2
      22: aload_2
      23: invokevirtual #45                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z
      26: ifeq          108
      29: aload_0
      30: aload_2
      31: invokevirtual #46                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getExtraPaxHeaders:()Ljava/util/Map;
      34: invokespecial #47                 // Method encodeExtendedPaxHeadersContents:(Ljava/util/Map;)[B
      37: astore_3
      38: aload_2
      39: aload_3
      40: arraylength
      41: i2l
      42: invokevirtual #48                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSize:(J)V
      45: aload_2
      46: aload_0
      47: getfield      #26                 // Field recordBuf:[B
      50: aload_0
      51: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      54: aload_0
      55: getfield      #15                 // Field bigNumberMode:I
      58: iconst_1
      59: if_icmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: invokevirtual #49                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
      70: aload_0
      71: aload_0
      72: getfield      #26                 // Field recordBuf:[B
      75: invokespecial #50                 // Method writeRecord:([B)V
      78: aload_0
      79: aload_2
      80: invokevirtual #51                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      83: putfield      #52                 // Field currSize:J
      86: aload_0
      87: lconst_0
      88: putfield      #53                 // Field currBytes:J
      91: aload_0
      92: iconst_1
      93: putfield      #35                 // Field haveUnclosedEntry:Z
      96: aload_0
      97: aload_3
      98: invokevirtual #54                 // Method write:([B)V
     101: aload_0
     102: invokevirtual #55                 // Method closeArchiveEntry:()V
     105: goto          396
     108: new           #56                 // class java/util/HashMap
     111: dup
     112: invokespecial #57                 // Method java/util/HashMap."<init>":()V
     115: astore_3
     116: aload_2
     117: invokevirtual #58                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getName:()Ljava/lang/String;
     120: astore        4
     122: aload_0
     123: aload_2
     124: aload         4
     126: aload_3
     127: ldc           #59                 // String path
     129: bipush        76
     131: ldc           #61                 // String file name
     133: invokespecial #62                 // Method handleLongName:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z
     136: istore        5
     138: aload_2
     139: invokevirtual #63                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getLinkName:()Ljava/lang/String;
     142: astore        6
     144: aload         6
     146: ifnull        178
     149: aload         6
     151: invokevirtual #64                 // Method java/lang/String.isEmpty:()Z
     154: ifne          178
     157: aload_0
     158: aload_2
     159: aload         6
     161: aload_3
     162: ldc           #65                 // String linkpath
     164: bipush        75
     166: ldc           #66                 // String link name
     168: invokespecial #62                 // Method handleLongName:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z
     171: ifeq          178
     174: iconst_1
     175: goto          179
     178: iconst_0
     179: istore        7
     181: aload_0
     182: getfield      #15                 // Field bigNumberMode:I
     185: iconst_2
     186: if_icmpne     198
     189: aload_0
     190: aload_3
     191: aload_2
     192: invokespecial #67                 // Method addPaxHeadersForBigNumbers:(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
     195: goto          211
     198: aload_0
     199: getfield      #15                 // Field bigNumberMode:I
     202: iconst_1
     203: if_icmpeq     211
     206: aload_0
     207: aload_2
     208: invokespecial #68                 // Method failForBigNumbers:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
     211: aload_0
     212: getfield      #28                 // Field addPaxHeadersForNonAsciiNames:Z
     215: ifeq          247
     218: iload         5
     220: ifne          247
     223: getstatic     #69                 // Field ASCII:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     226: aload         4
     228: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
     233: ifne          247
     236: aload_3
     237: ldc           #59                 // String path
     239: aload         4
     241: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     246: pop
     247: aload_0
     248: getfield      #28                 // Field addPaxHeadersForNonAsciiNames:Z
     251: ifeq          297
     254: iload         7
     256: ifne          297
     259: aload_2
     260: invokevirtual #72                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isLink:()Z
     263: ifne          273
     266: aload_2
     267: invokevirtual #73                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isSymbolicLink:()Z
     270: ifeq          297
     273: getstatic     #69                 // Field ASCII:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     276: aload         6
     278: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
     283: ifne          297
     286: aload_3
     287: ldc           #65                 // String linkpath
     289: aload         6
     291: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     296: pop
     297: aload_3
     298: aload_2
     299: invokevirtual #46                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getExtraPaxHeaders:()Ljava/util/Map;
     302: invokeinterface #74,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     307: aload_3
     308: invokeinterface #75,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     313: ifne          324
     316: aload_0
     317: aload_2
     318: aload         4
     320: aload_3
     321: invokevirtual #76                 // Method writePaxHeaders:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V
     324: aload_2
     325: aload_0
     326: getfield      #26                 // Field recordBuf:[B
     329: aload_0
     330: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     333: aload_0
     334: getfield      #15                 // Field bigNumberMode:I
     337: iconst_1
     338: if_icmpne     345
     341: iconst_1
     342: goto          346
     345: iconst_0
     346: invokevirtual #49                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
     349: aload_0
     350: aload_0
     351: getfield      #26                 // Field recordBuf:[B
     354: invokespecial #50                 // Method writeRecord:([B)V
     357: aload_0
     358: lconst_0
     359: putfield      #53                 // Field currBytes:J
     362: aload_2
     363: invokevirtual #77                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z
     366: ifeq          377
     369: aload_0
     370: lconst_0
     371: putfield      #52                 // Field currSize:J
     374: goto          385
     377: aload_0
     378: aload_2
     379: invokevirtual #51                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
     382: putfield      #52                 // Field currSize:J
     385: aload_0
     386: aload         4
     388: putfield      #78                 // Field currName:Ljava/lang/String;
     391: aload_0
     392: iconst_1
     393: putfield      #35                 // Field haveUnclosedEntry:Z
     396: return

  public void closeArchiveEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field finished:Z
       4: ifeq          17
       7: new           #32                 // class java/io/IOException
      10: dup
      11: ldc           #43                 // String Stream has already been finished
      13: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #35                 // Field haveUnclosedEntry:Z
      21: ifne          34
      24: new           #32                 // class java/io/IOException
      27: dup
      28: ldc           #79                 // String No current entry to close
      30: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
      38: invokevirtual #80                 // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream.flushBlock:()V
      41: aload_0
      42: getfield      #53                 // Field currBytes:J
      45: aload_0
      46: getfield      #52                 // Field currSize:J
      49: lcmp
      50: ifge          112
      53: new           #32                 // class java/io/IOException
      56: dup
      57: new           #6                  // class java/lang/StringBuilder
      60: dup
      61: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #81                 // String Entry \'
      66: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #78                 // Field currName:Ljava/lang/String;
      73: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #82                 // String \' closed at \'
      78: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #53                 // Field currBytes:J
      85: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      88: ldc           #84                 // String \' before the \'
      90: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #52                 // Field currSize:J
      97: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     100: ldc           #85                 // String \' bytes specified in the header were written
     102: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: aload_0
     113: dup
     114: getfield      #86                 // Field recordsWritten:I
     117: i2l
     118: aload_0
     119: getfield      #52                 // Field currSize:J
     122: ldc2_w        #87                 // long 512l
     125: ldiv
     126: ladd
     127: l2i
     128: putfield      #86                 // Field recordsWritten:I
     131: lconst_0
     132: aload_0
     133: getfield      #52                 // Field currSize:J
     136: ldc2_w        #87                 // long 512l
     139: lrem
     140: lcmp
     141: ifeq          154
     144: aload_0
     145: dup
     146: getfield      #86                 // Field recordsWritten:I
     149: iconst_1
     150: iadd
     151: putfield      #86                 // Field recordsWritten:I
     154: aload_0
     155: iconst_0
     156: putfield      #35                 // Field haveUnclosedEntry:Z
     159: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field haveUnclosedEntry:Z
       4: ifne          17
       7: new           #89                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #90                 // String No current tar entry
      13: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #53                 // Field currBytes:J
      21: iload_3
      22: i2l
      23: ladd
      24: aload_0
      25: getfield      #52                 // Field currSize:J
      28: lcmp
      29: ifle          88
      32: new           #32                 // class java/io/IOException
      35: dup
      36: new           #6                  // class java/lang/StringBuilder
      39: dup
      40: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #92                 // String Request to write \'
      45: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: iload_3
      49: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #93                 // String \' bytes exceeds size in header of \'
      54: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #52                 // Field currSize:J
      61: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      64: ldc           #94                 // String \' bytes for entry \'
      66: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #78                 // Field currName:Ljava/lang/String;
      73: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #95                 // String \'
      78: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: getfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
      92: aload_1
      93: iload_2
      94: iload_3
      95: invokevirtual #96                 // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream.write:([BII)V
      98: aload_0
      99: dup
     100: getfield      #53                 // Field currBytes:J
     103: iload_3
     104: i2l
     105: ladd
     106: putfield      #53                 // Field currBytes:J
     109: return

  void writePaxHeaders(org.apache.commons.compress.archivers.tar.TarArchiveEntry, java.lang.String, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #97                 // String ./PaxHeaders.X/
       9: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: aload_2
      14: invokespecial #98                 // Method stripTo7Bits:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: astore        4
      25: aload         4
      27: invokevirtual #99                 // Method java/lang/String.length:()I
      30: bipush        100
      32: if_icmplt     45
      35: aload         4
      37: iconst_0
      38: bipush        99
      40: invokevirtual #100                // Method java/lang/String.substring:(II)Ljava/lang/String;
      43: astore        4
      45: new           #44                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
      48: dup
      49: aload         4
      51: bipush        120
      53: invokespecial #101                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry."<init>":(Ljava/lang/String;B)V
      56: astore        5
      58: aload_0
      59: aload_1
      60: aload         5
      62: invokespecial #102                // Method transferModTime:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      65: aload_0
      66: aload_3
      67: invokespecial #47                 // Method encodeExtendedPaxHeadersContents:(Ljava/util/Map;)[B
      70: astore        6
      72: aload         5
      74: aload         6
      76: arraylength
      77: i2l
      78: invokevirtual #48                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSize:(J)V
      81: aload_0
      82: aload         5
      84: invokevirtual #103                // Method putArchiveEntry:(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
      87: aload_0
      88: aload         6
      90: invokevirtual #54                 // Method write:([B)V
      93: aload_0
      94: invokevirtual #55                 // Method closeArchiveEntry:()V
      97: return

  private byte[] encodeExtendedPaxHeadersContents(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #104                // class java/io/StringWriter
       3: dup
       4: invokespecial #105                // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #106,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          210
      29: aload_3
      30: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #110                // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #112                // class java/lang/String
      50: astore        5
      52: aload         4
      54: invokeinterface #113,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #112                // class java/lang/String
      62: astore        6
      64: aload         5
      66: invokevirtual #99                 // Method java/lang/String.length:()I
      69: aload         6
      71: invokevirtual #99                 // Method java/lang/String.length:()I
      74: iadd
      75: iconst_3
      76: iadd
      77: iconst_2
      78: iadd
      79: istore        7
      81: new           #6                  // class java/lang/StringBuilder
      84: dup
      85: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      88: iload         7
      90: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: ldc           #114                // String
      95: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload         5
     100: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #115                // String =
     105: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload         6
     110: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #116                // String \n
     115: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: astore        8
     123: aload         8
     125: getstatic     #117                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     128: invokevirtual #118                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     131: arraylength
     132: istore        9
     134: iload         7
     136: iload         9
     138: if_icmpeq     201
     141: iload         9
     143: istore        7
     145: new           #6                  // class java/lang/StringBuilder
     148: dup
     149: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     152: iload         7
     154: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     157: ldc           #114                // String
     159: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload         5
     164: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: ldc           #115                // String =
     169: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload         6
     174: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: ldc           #116                // String \n
     179: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: astore        8
     187: aload         8
     189: getstatic     #117                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     192: invokevirtual #118                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     195: arraylength
     196: istore        9
     198: goto          134
     201: aload_2
     202: aload         8
     204: invokevirtual #119                // Method java/io/StringWriter.write:(Ljava/lang/String;)V
     207: goto          20
     210: aload_2
     211: invokevirtual #120                // Method java/io/StringWriter.toString:()Ljava/lang/String;
     214: getstatic     #117                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     217: invokevirtual #118                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     220: areturn

  private java.lang.String stripTo7Bits(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #99                 // Method java/lang/String.length:()I
       4: istore_2
       5: new           #6                  // class java/lang/StringBuilder
       8: dup
       9: iload_2
      10: invokespecial #121                // Method java/lang/StringBuilder."<init>":(I)V
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_2
      20: if_icmpge     67
      23: aload_1
      24: iload         4
      26: invokevirtual #122                // Method java/lang/String.charAt:(I)C
      29: bipush        127
      31: iand
      32: i2c
      33: istore        5
      35: aload_0
      36: iload         5
      38: invokespecial #123                // Method shouldBeReplaced:(C)Z
      41: ifeq          54
      44: aload_3
      45: ldc           #124                // String _
      47: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: goto          61
      54: aload_3
      55: iload         5
      57: invokevirtual #125                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: pop
      61: iinc          4, 1
      64: goto          17
      67: aload_3
      68: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  private boolean shouldBeReplaced(char);
    Code:
       0: iload_1
       1: ifeq          16
       4: iload_1
       5: bipush        47
       7: if_icmpeq     16
      10: iload_1
      11: bipush        92
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private void writeEOFRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field recordBuf:[B
       4: iconst_0
       5: invokestatic  #126                // Method java/util/Arrays.fill:([BB)V
       8: aload_0
       9: aload_0
      10: getfield      #26                 // Field recordBuf:[B
      13: invokespecial #50                 // Method writeRecord:([B)V
      16: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
       4: invokevirtual #39                 // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream.flush:()V
       7: return

  public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field finished:Z
       4: ifeq          17
       7: new           #32                 // class java/io/IOException
      10: dup
      11: ldc           #43                 // String Stream has already been finished
      13: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #44                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
      20: dup
      21: aload_1
      22: aload_2
      23: invokespecial #127                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry."<init>":(Ljava/io/File;Ljava/lang/String;)V
      26: areturn

  public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field finished:Z
       4: ifeq          17
       7: new           #32                 // class java/io/IOException
      10: dup
      11: ldc           #43                 // String Stream has already been finished
      13: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #44                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
      20: dup
      21: aload_1
      22: aload_2
      23: aload_3
      24: invokespecial #128                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry."<init>":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V
      27: areturn

  private void writeRecord(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: arraylength
       2: sipush        512
       5: if_icmpeq     52
       8: new           #32                 // class java/io/IOException
      11: dup
      12: new           #6                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #129                // String Record to write has length \'
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: arraylength
      26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #130                // String \' which is not the record size of \'
      31: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: sipush        512
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: ldc           #95                 // String \'
      42: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: getfield      #22                 // Field out:Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream;
      56: aload_1
      57: invokevirtual #131                // Method org/apache/commons/compress/utils/FixedLengthBlockOutputStream.write:([B)V
      60: aload_0
      61: dup
      62: getfield      #86                 // Field recordsWritten:I
      65: iconst_1
      66: iadd
      67: putfield      #86                 // Field recordsWritten:I
      70: return

  private void padAsNeeded() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #86                 // Field recordsWritten:I
       4: aload_0
       5: getfield      #27                 // Field recordsPerBlock:I
       8: irem
       9: istore_1
      10: iload_1
      11: ifeq          34
      14: iload_1
      15: istore_2
      16: iload_2
      17: aload_0
      18: getfield      #27                 // Field recordsPerBlock:I
      21: if_icmpge     34
      24: aload_0
      25: invokespecial #37                 // Method writeEOFRecord:()V
      28: iinc          2, 1
      31: goto          16
      34: return

  private void addPaxHeadersForBigNumbers(java.util.Map<java.lang.String, java.lang.String>, org.apache.commons.compress.archivers.tar.TarArchiveEntry);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #132                // String size
       4: aload_2
       5: invokevirtual #51                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
       8: ldc2_w        #133                // long 8589934591l
      11: invokespecial #135                // Method addPaxHeaderForBigNumber:(Ljava/util/Map;Ljava/lang/String;JJ)V
      14: aload_0
      15: aload_1
      16: ldc           #136                // String gid
      18: aload_2
      19: invokevirtual #137                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getLongGroupId:()J
      22: ldc2_w        #138                // long 2097151l
      25: invokespecial #135                // Method addPaxHeaderForBigNumber:(Ljava/util/Map;Ljava/lang/String;JJ)V
      28: aload_0
      29: aload_1
      30: ldc           #140                // String mtime
      32: aload_2
      33: invokevirtual #141                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getModTime:()Ljava/util/Date;
      36: invokevirtual #142                // Method java/util/Date.getTime:()J
      39: ldc2_w        #143                // long 1000l
      42: ldiv
      43: ldc2_w        #133                // long 8589934591l
      46: invokespecial #135                // Method addPaxHeaderForBigNumber:(Ljava/util/Map;Ljava/lang/String;JJ)V
      49: aload_0
      50: aload_1
      51: ldc           #145                // String uid
      53: aload_2
      54: invokevirtual #146                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getLongUserId:()J
      57: ldc2_w        #138                // long 2097151l
      60: invokespecial #135                // Method addPaxHeaderForBigNumber:(Ljava/util/Map;Ljava/lang/String;JJ)V
      63: aload_0
      64: aload_1
      65: ldc           #147                // String SCHILY.devmajor
      67: aload_2
      68: invokevirtual #148                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDevMajor:()I
      71: i2l
      72: ldc2_w        #138                // long 2097151l
      75: invokespecial #135                // Method addPaxHeaderForBigNumber:(Ljava/util/Map;Ljava/lang/String;JJ)V
      78: aload_0
      79: aload_1
      80: ldc           #149                // String SCHILY.devminor
      82: aload_2
      83: invokevirtual #150                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDevMinor:()I
      86: i2l
      87: ldc2_w        #138                // long 2097151l
      90: invokespecial #135                // Method addPaxHeaderForBigNumber:(Ljava/util/Map;Ljava/lang/String;JJ)V
      93: aload_0
      94: ldc           #151                // String mode
      96: aload_2
      97: invokevirtual #152                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getMode:()I
     100: i2l
     101: ldc2_w        #138                // long 2097151l
     104: invokespecial #153                // Method failForBigNumber:(Ljava/lang/String;JJ)V
     107: return

  private void addPaxHeaderForBigNumber(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, long, long);
    Code:
       0: lload_3
       1: lconst_0
       2: lcmp
       3: iflt          13
       6: lload_3
       7: lload         5
       9: lcmp
      10: ifle          25
      13: aload_1
      14: aload_2
      15: lload_3
      16: invokestatic  #154                // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      19: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: return

  private void failForBigNumbers(org.apache.commons.compress.archivers.tar.TarArchiveEntry);
    Code:
       0: aload_0
       1: ldc           #155                // String entry size
       3: aload_1
       4: invokevirtual #51                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
       7: ldc2_w        #133                // long 8589934591l
      10: invokespecial #153                // Method failForBigNumber:(Ljava/lang/String;JJ)V
      13: aload_0
      14: ldc           #156                // String group id
      16: aload_1
      17: invokevirtual #137                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getLongGroupId:()J
      20: ldc2_w        #138                // long 2097151l
      23: invokespecial #157                // Method failForBigNumberWithPosixMessage:(Ljava/lang/String;JJ)V
      26: aload_0
      27: ldc           #158                // String last modification time
      29: aload_1
      30: invokevirtual #141                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getModTime:()Ljava/util/Date;
      33: invokevirtual #142                // Method java/util/Date.getTime:()J
      36: ldc2_w        #143                // long 1000l
      39: ldiv
      40: ldc2_w        #133                // long 8589934591l
      43: invokespecial #153                // Method failForBigNumber:(Ljava/lang/String;JJ)V
      46: aload_0
      47: ldc           #159                // String user id
      49: aload_1
      50: invokevirtual #146                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getLongUserId:()J
      53: ldc2_w        #138                // long 2097151l
      56: invokespecial #153                // Method failForBigNumber:(Ljava/lang/String;JJ)V
      59: aload_0
      60: ldc           #151                // String mode
      62: aload_1
      63: invokevirtual #152                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getMode:()I
      66: i2l
      67: ldc2_w        #138                // long 2097151l
      70: invokespecial #153                // Method failForBigNumber:(Ljava/lang/String;JJ)V
      73: aload_0
      74: ldc           #160                // String major device number
      76: aload_1
      77: invokevirtual #148                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDevMajor:()I
      80: i2l
      81: ldc2_w        #138                // long 2097151l
      84: invokespecial #153                // Method failForBigNumber:(Ljava/lang/String;JJ)V
      87: aload_0
      88: ldc           #161                // String minor device number
      90: aload_1
      91: invokevirtual #150                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDevMinor:()I
      94: i2l
      95: ldc2_w        #138                // long 2097151l
      98: invokespecial #153                // Method failForBigNumber:(Ljava/lang/String;JJ)V
     101: return

  private void failForBigNumber(java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: ldc           #162                // String
       7: invokespecial #163                // Method failForBigNumber:(Ljava/lang/String;JJLjava/lang/String;)V
      10: return

  private void failForBigNumberWithPosixMessage(java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: ldc           #164                // String  Use STAR or POSIX extensions to overcome this limit
       7: invokespecial #163                // Method failForBigNumber:(Ljava/lang/String;JJLjava/lang/String;)V
      10: return

  private void failForBigNumber(java.lang.String, long, long, java.lang.String);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: iflt          13
       6: lload_2
       7: lload         4
       9: lcmp
      10: ifle          64
      13: new           #5                  // class java/lang/IllegalArgumentException
      16: dup
      17: new           #6                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #165                // String  \'
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: lload_2
      34: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      37: ldc           #166                // String \' is too big ( >
      39: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: lload         4
      44: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      47: ldc           #167                // String  ).
      49: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload         6
      54: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  private boolean handleLongName(org.apache.commons.compress.archivers.tar.TarArchiveEntry, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String, byte, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       4: aload_2
       5: invokeinterface #168,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      10: astore        7
      12: aload         7
      14: invokevirtual #169                // Method java/nio/ByteBuffer.limit:()I
      17: aload         7
      19: invokevirtual #170                // Method java/nio/ByteBuffer.position:()I
      22: isub
      23: istore        8
      25: iload         8
      27: bipush        100
      29: if_icmplt     179
      32: aload_0
      33: getfield      #14                 // Field longFileMode:I
      36: iconst_3
      37: if_icmpne     52
      40: aload_3
      41: aload         4
      43: aload_2
      44: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: iconst_1
      51: ireturn
      52: aload_0
      53: getfield      #14                 // Field longFileMode:I
      56: iconst_2
      57: if_icmpne     124
      60: new           #44                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
      63: dup
      64: ldc           #171                // String ././@LongLink
      66: iload         5
      68: invokespecial #101                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry."<init>":(Ljava/lang/String;B)V
      71: astore        9
      73: aload         9
      75: iload         8
      77: i2l
      78: lconst_1
      79: ladd
      80: invokevirtual #48                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSize:(J)V
      83: aload_0
      84: aload_1
      85: aload         9
      87: invokespecial #102                // Method transferModTime:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      90: aload_0
      91: aload         9
      93: invokevirtual #103                // Method putArchiveEntry:(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
      96: aload_0
      97: aload         7
      99: invokevirtual #172                // Method java/nio/ByteBuffer.array:()[B
     102: aload         7
     104: invokevirtual #173                // Method java/nio/ByteBuffer.arrayOffset:()I
     107: iload         8
     109: invokevirtual #174                // Method write:([BII)V
     112: aload_0
     113: iconst_0
     114: invokevirtual #175                // Method write:(I)V
     117: aload_0
     118: invokevirtual #55                 // Method closeArchiveEntry:()V
     121: goto          179
     124: aload_0
     125: getfield      #14                 // Field longFileMode:I
     128: iconst_1
     129: if_icmpeq     179
     132: new           #5                  // class java/lang/IllegalArgumentException
     135: dup
     136: new           #6                  // class java/lang/StringBuilder
     139: dup
     140: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     143: aload         6
     145: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc           #165                // String  \'
     150: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload_2
     154: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: ldc           #176                // String \' is too long ( >
     159: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: bipush        100
     164: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     167: ldc           #177                // String  bytes)
     169: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: iconst_0
     180: ireturn

  private void transferModTime(org.apache.commons.compress.archivers.tar.TarArchiveEntry, org.apache.commons.compress.archivers.tar.TarArchiveEntry);
    Code:
       0: aload_1
       1: invokevirtual #141                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getModTime:()Ljava/util/Date;
       4: astore_3
       5: aload_3
       6: invokevirtual #142                // Method java/util/Date.getTime:()J
       9: ldc2_w        #143                // long 1000l
      12: ldiv
      13: lstore        4
      15: lload         4
      17: lconst_0
      18: lcmp
      19: iflt          31
      22: lload         4
      24: ldc2_w        #133                // long 8589934591l
      27: lcmp
      28: ifle          40
      31: new           #178                // class java/util/Date
      34: dup
      35: lconst_0
      36: invokespecial #179                // Method java/util/Date."<init>":(J)V
      39: astore_3
      40: aload_2
      41: aload_3
      42: invokevirtual #180                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setModTime:(Ljava/util/Date;)V
      45: return

  static {};
    Code:
       0: ldc           #181                // String ASCII
       2: invokestatic  #24                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       5: putstatic     #69                 // Field ASCII:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       8: return
}
