Compiled from "ExceptionsAttribute.java"
public class org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute extends org.apache.commons.compress.harmony.unpack200.bytecode.Attribute {
  private static org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 attributeName;

  private transient int[] exceptionIndexes;

  private final org.apache.commons.compress.harmony.unpack200.bytecode.CPClass[] exceptions;

  private static int hashCode(java.lang.Object[]);
    Code:
       0: bipush        31
       2: istore_1
       3: aload_0
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: iconst_1
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: arraylength
      16: if_icmpge     47
      19: bipush        31
      21: iload_2
      22: imul
      23: aload_0
      24: iload_3
      25: aaload
      26: ifnonnull     33
      29: iconst_0
      30: goto          39
      33: aload_0
      34: iload_3
      35: aaload
      36: invokevirtual #1                  // Method java/lang/Object.hashCode:()I
      39: iadd
      40: istore_2
      41: iinc          3, 1
      44: goto          13
      47: iload_2
      48: ireturn

  public org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute(org.apache.commons.compress.harmony.unpack200.bytecode.CPClass[]);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
       4: invokespecial #3                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute."<init>":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
       7: aload_0
       8: aload_1
       9: putfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      12: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #5                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: aload_1
      22: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: if_acmpeq     30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: checkcast     #7                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute
      34: astore_2
      35: aload_0
      36: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      39: aload_2
      40: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      43: invokestatic  #8                  // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      46: ifne          51
      49: iconst_0
      50: ireturn
      51: iconst_1
      52: ireturn

  protected int getLength();
    Code:
       0: iconst_2
       1: iconst_2
       2: aload_0
       3: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
       6: arraylength
       7: imul
       8: iadd
       9: ireturn

  protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();
    Code:
       0: aload_0
       1: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
       4: arraylength
       5: iconst_1
       6: iadd
       7: anewarray     #9                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_0
      15: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      18: arraylength
      19: if_icmpge     37
      22: aload_1
      23: iload_2
      24: aload_0
      25: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      28: iload_2
      29: aaload
      30: aastore
      31: iinc          2, 1
      34: goto          13
      37: aload_1
      38: aload_0
      39: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      42: arraylength
      43: aload_0
      44: invokevirtual #10                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      47: aastore
      48: aload_1
      49: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: aload_0
       4: invokespecial #11                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I
       7: istore_2
       8: bipush        31
      10: iload_2
      11: imul
      12: aload_0
      13: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      16: invokestatic  #12                 // Method hashCode:([Ljava/lang/Object;)I
      19: iadd
      20: istore_2
      21: iload_2
      22: ireturn

  protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V
       5: aload_0
       6: aload_0
       7: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      10: arraylength
      11: newarray       int
      13: putfield      #14                 // Field exceptionIndexes:[I
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_0
      20: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      23: arraylength
      24: if_icmpge     59
      27: aload_0
      28: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      31: iload_2
      32: aaload
      33: aload_1
      34: invokevirtual #15                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V
      37: aload_0
      38: getfield      #14                 // Field exceptionIndexes:[I
      41: iload_2
      42: aload_1
      43: aload_0
      44: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      47: iload_2
      48: aaload
      49: invokevirtual #16                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I
      52: iastore
      53: iinc          2, 1
      56: goto          18
      59: return

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #19                 // String Exceptions:
      11: invokevirtual #20                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      22: arraylength
      23: if_icmpge     50
      26: aload_1
      27: aload_0
      28: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
      31: iload_2
      32: aaload
      33: invokevirtual #21                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      36: pop
      37: aload_1
      38: bipush        32
      40: invokevirtual #22                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      43: pop
      44: iinc          2, 1
      47: goto          17
      50: aload_1
      51: invokevirtual #23                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      54: areturn

  protected void writeBody(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #14                 // Field exceptionIndexes:[I
       5: arraylength
       6: invokevirtual #24                 // Method java/io/DataOutputStream.writeShort:(I)V
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_0
      13: getfield      #14                 // Field exceptionIndexes:[I
      16: arraylength
      17: if_icmpge     36
      20: aload_1
      21: aload_0
      22: getfield      #14                 // Field exceptionIndexes:[I
      25: iload_2
      26: iaload
      27: invokevirtual #24                 // Method java/io/DataOutputStream.writeShort:(I)V
      30: iinc          2, 1
      33: goto          11
      36: return

  public static void setAttributeName(org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8);
    Code:
       0: aload_0
       1: putstatic     #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
       4: return
}
