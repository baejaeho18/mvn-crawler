Compiled from "FramedLZ4CompressorInputStream.java"
public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics {
  static final byte[] LZ4_SIGNATURE;

  private static final byte[] SKIPPABLE_FRAME_TRAILER;

  private static final byte SKIPPABLE_FRAME_PREFIX_BYTE_MASK;

  static final int VERSION_MASK;

  static final int SUPPORTED_VERSION;

  static final int BLOCK_INDEPENDENCE_MASK;

  static final int BLOCK_CHECKSUM_MASK;

  static final int CONTENT_SIZE_MASK;

  static final int CONTENT_CHECKSUM_MASK;

  static final int BLOCK_MAX_SIZE_MASK;

  static final int UNCOMPRESSED_FLAG_MASK;

  private final byte[] oneByte;

  private final org.apache.commons.compress.utils.ByteUtils$ByteSupplier supplier;

  private final org.apache.commons.compress.utils.CountingInputStream inputStream;

  private final boolean decompressConcatenated;

  private boolean expectBlockChecksum;

  private boolean expectBlockDependency;

  private boolean expectContentSize;

  private boolean expectContentChecksum;

  private java.io.InputStream currentBlock;

  private boolean endReached;

  private boolean inUncompressed;

  private final org.apache.commons.compress.compressors.lz4.XXHash32 contentHash;

  private final org.apache.commons.compress.compressors.lz4.XXHash32 blockHash;

  private byte[] blockDependencyBuffer;

  public org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/io/InputStream;Z)V
       6: return

  public org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream(java.io.InputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #3                  // Field oneByte:[B
      11: aload_0
      12: aload_0
      13: invokedynamic #4,  0              // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;
      18: putfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;
      21: aload_0
      22: new           #6                  // class org/apache/commons/compress/compressors/lz4/XXHash32
      25: dup
      26: invokespecial #7                  // Method org/apache/commons/compress/compressors/lz4/XXHash32."<init>":()V
      29: putfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      32: aload_0
      33: new           #6                  // class org/apache/commons/compress/compressors/lz4/XXHash32
      36: dup
      37: invokespecial #7                  // Method org/apache/commons/compress/compressors/lz4/XXHash32."<init>":()V
      40: putfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      43: aload_0
      44: new           #10                 // class org/apache/commons/compress/utils/CountingInputStream
      47: dup
      48: aload_1
      49: invokespecial #11                 // Method org/apache/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      52: putfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      55: aload_0
      56: iload_2
      57: putfield      #13                 // Field decompressConcatenated:Z
      60: aload_0
      61: iconst_1
      62: invokespecial #14                 // Method init:(Z)V
      65: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field oneByte:[B
       5: iconst_0
       6: iconst_1
       7: invokevirtual #15                 // Method read:([BII)I
      10: iconst_m1
      11: if_icmpne     18
      14: iconst_m1
      15: goto          28
      18: aload_0
      19: getfield      #3                  // Field oneByte:[B
      22: iconst_0
      23: baload
      24: sipush        255
      27: iand
      28: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;
       4: ifnull        19
       7: aload_0
       8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;
      11: invokevirtual #17                 // Method java/io/InputStream.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;
      19: aload_0
      20: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      23: invokevirtual #18                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V
      26: goto          39
      29: astore_1
      30: aload_0
      31: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      34: invokevirtual #18                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V
      37: aload_1
      38: athrow
      39: return
    Exception table:
       from    to  target type
           0    19    29   any

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #19                 // Field endReached:Z
      10: ifeq          15
      13: iconst_m1
      14: ireturn
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload_3
      19: invokespecial #20                 // Method readOnce:([BII)I
      22: istore        4
      24: iload         4
      26: iconst_m1
      27: if_icmpne     50
      30: aload_0
      31: invokespecial #21                 // Method nextBlock:()V
      34: aload_0
      35: getfield      #19                 // Field endReached:Z
      38: ifne          50
      41: aload_0
      42: aload_1
      43: iload_2
      44: iload_3
      45: invokespecial #20                 // Method readOnce:([BII)I
      48: istore        4
      50: iload         4
      52: iconst_m1
      53: if_icmpeq     89
      56: aload_0
      57: getfield      #22                 // Field expectBlockDependency:Z
      60: ifeq          71
      63: aload_0
      64: aload_1
      65: iload_2
      66: iload         4
      68: invokespecial #23                 // Method appendToBlockDependencyBuffer:([BII)V
      71: aload_0
      72: getfield      #24                 // Field expectContentChecksum:Z
      75: ifeq          89
      78: aload_0
      79: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      82: aload_1
      83: iload_2
      84: iload         4
      86: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V
      89: iload         4
      91: ireturn

  public long getCompressedCount();
    Code:
       0: aload_0
       1: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #26                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J
       7: lreturn

  private void init(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #27                 // Method readSignature:(Z)Z
       5: ifeq          16
       8: aload_0
       9: invokespecial #28                 // Method readFrameDescriptor:()V
      12: aload_0
      13: invokespecial #21                 // Method nextBlock:()V
      16: return

  private boolean readSignature(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          9
       4: ldc           #29                 // String Not a LZ4 frame stream
       6: goto          11
       9: ldc           #30                 // String LZ4 frame stream followed by garbage
      11: astore_2
      12: iconst_4
      13: newarray       byte
      15: astore_3
      16: aload_0
      17: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      20: aload_3
      21: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I
      24: istore        4
      26: aload_0
      27: iload         4
      29: invokevirtual #32                 // Method count:(I)V
      32: iconst_0
      33: iload         4
      35: if_icmpne     49
      38: iload_1
      39: ifne          49
      42: aload_0
      43: iconst_1
      44: putfield      #19                 // Field endReached:Z
      47: iconst_0
      48: ireturn
      49: iconst_4
      50: iload         4
      52: if_icmpeq     64
      55: new           #33                 // class java/io/IOException
      58: dup
      59: aload_2
      60: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: aload_3
      66: invokespecial #35                 // Method skipSkippableFrame:([B)I
      69: istore        4
      71: iconst_0
      72: iload         4
      74: if_icmpne     88
      77: iload_1
      78: ifne          88
      81: aload_0
      82: iconst_1
      83: putfield      #19                 // Field endReached:Z
      86: iconst_0
      87: ireturn
      88: iconst_4
      89: iload         4
      91: if_icmpne     102
      94: aload_3
      95: iconst_4
      96: invokestatic  #36                 // Method matches:([BI)Z
      99: ifne          111
     102: new           #33                 // class java/io/IOException
     105: dup
     106: aload_2
     107: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: iconst_1
     112: ireturn

  private void readFrameDescriptor() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #37                 // Method readOneByte:()I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     20
      10: new           #33                 // class java/io/IOException
      13: dup
      14: ldc           #38                 // String Premature end of stream while reading frame flags
      16: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      24: iload_1
      25: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V
      28: iload_1
      29: sipush        192
      32: iand
      33: bipush        64
      35: if_icmpeq     68
      38: new           #33                 // class java/io/IOException
      41: dup
      42: new           #41                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #43                 // String Unsupported version
      51: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload_1
      55: bipush        6
      57: ishr
      58: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      61: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: iload_1
      70: bipush        32
      72: iand
      73: ifne          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: putfield      #22                 // Field expectBlockDependency:Z
      84: aload_0
      85: getfield      #22                 // Field expectBlockDependency:Z
      88: ifeq          109
      91: aload_0
      92: getfield      #47                 // Field blockDependencyBuffer:[B
      95: ifnonnull     114
      98: aload_0
      99: ldc           #49                 // int 65536
     101: newarray       byte
     103: putfield      #47                 // Field blockDependencyBuffer:[B
     106: goto          114
     109: aload_0
     110: aconst_null
     111: putfield      #47                 // Field blockDependencyBuffer:[B
     114: aload_0
     115: iload_1
     116: bipush        16
     118: iand
     119: ifeq          126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: putfield      #50                 // Field expectBlockChecksum:Z
     130: aload_0
     131: iload_1
     132: bipush        8
     134: iand
     135: ifeq          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: putfield      #51                 // Field expectContentSize:Z
     146: aload_0
     147: iload_1
     148: iconst_4
     149: iand
     150: ifeq          157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: putfield      #24                 // Field expectContentChecksum:Z
     161: aload_0
     162: invokespecial #37                 // Method readOneByte:()I
     165: istore_2
     166: iload_2
     167: iconst_m1
     168: if_icmpne     181
     171: new           #33                 // class java/io/IOException
     174: dup
     175: ldc           #52                 // String Premature end of stream while reading frame BD byte
     177: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     180: athrow
     181: aload_0
     182: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
     185: iload_2
     186: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V
     189: aload_0
     190: getfield      #51                 // Field expectContentSize:Z
     193: ifeq          245
     196: bipush        8
     198: newarray       byte
     200: astore_3
     201: aload_0
     202: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
     205: aload_3
     206: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I
     209: istore        4
     211: aload_0
     212: iload         4
     214: invokevirtual #32                 // Method count:(I)V
     217: bipush        8
     219: iload         4
     221: if_icmpeq     234
     224: new           #33                 // class java/io/IOException
     227: dup
     228: ldc           #53                 // String Premature end of stream while reading content size
     230: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     233: athrow
     234: aload_0
     235: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
     238: aload_3
     239: iconst_0
     240: aload_3
     241: arraylength
     242: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V
     245: aload_0
     246: invokespecial #37                 // Method readOneByte:()I
     249: istore_3
     250: iload_3
     251: iconst_m1
     252: if_icmpne     265
     255: new           #33                 // class java/io/IOException
     258: dup
     259: ldc           #54                 // String Premature end of stream while reading frame header checksum
     261: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     264: athrow
     265: aload_0
     266: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
     269: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J
     272: bipush        8
     274: lshr
     275: ldc2_w        #56                 // long 255l
     278: land
     279: l2i
     280: istore        4
     282: aload_0
     283: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
     286: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V
     289: iload_3
     290: iload         4
     292: if_icmpeq     305
     295: new           #33                 // class java/io/IOException
     298: dup
     299: ldc           #59                 // String Frame header checksum mismatch
     301: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     304: athrow
     305: return

  private void nextBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #60                 // Method maybeFinishCurrentBlock:()V
       4: aload_0
       5: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;
       8: iconst_4
       9: invokestatic  #61                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J
      12: lstore_1
      13: lload_1
      14: ldc2_w        #62                 // long -2147483648l
      17: land
      18: lconst_0
      19: lcmp
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: istore_3
      29: lload_1
      30: ldc2_w        #64                 // long 2147483647l
      33: land
      34: l2i
      35: istore        4
      37: iload         4
      39: ifge          52
      42: new           #33                 // class java/io/IOException
      45: dup
      46: ldc           #66                 // String Found illegal block with negative size
      48: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload         4
      54: ifne          82
      57: aload_0
      58: invokespecial #67                 // Method verifyContentChecksum:()V
      61: aload_0
      62: getfield      #13                 // Field decompressConcatenated:Z
      65: ifne          76
      68: aload_0
      69: iconst_1
      70: putfield      #19                 // Field endReached:Z
      73: goto          81
      76: aload_0
      77: iconst_0
      78: invokespecial #14                 // Method init:(Z)V
      81: return
      82: new           #68                 // class org/apache/commons/compress/utils/BoundedInputStream
      85: dup
      86: aload_0
      87: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      90: iload         4
      92: i2l
      93: invokespecial #69                 // Method org/apache/commons/compress/utils/BoundedInputStream."<init>":(Ljava/io/InputStream;J)V
      96: astore        5
      98: aload_0
      99: getfield      #50                 // Field expectBlockChecksum:Z
     102: ifeq          120
     105: new           #70                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream
     108: dup
     109: aload_0
     110: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
     113: aload         5
     115: invokespecial #71                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream."<init>":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V
     118: astore        5
     120: iload_3
     121: ifeq          138
     124: aload_0
     125: iconst_1
     126: putfield      #72                 // Field inUncompressed:Z
     129: aload_0
     130: aload         5
     132: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;
     135: goto          176
     138: aload_0
     139: iconst_0
     140: putfield      #72                 // Field inUncompressed:Z
     143: new           #48                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream
     146: dup
     147: aload         5
     149: invokespecial #73                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream."<init>":(Ljava/io/InputStream;)V
     152: astore        6
     154: aload_0
     155: getfield      #22                 // Field expectBlockDependency:Z
     158: ifeq          170
     161: aload         6
     163: aload_0
     164: getfield      #47                 // Field blockDependencyBuffer:[B
     167: invokevirtual #74                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V
     170: aload_0
     171: aload         6
     173: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;
     176: return

  private void maybeFinishCurrentBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;
       4: ifnull        43
       7: aload_0
       8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;
      11: invokevirtual #17                 // Method java/io/InputStream.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;
      19: aload_0
      20: getfield      #50                 // Field expectBlockChecksum:Z
      23: ifeq          43
      26: aload_0
      27: aload_0
      28: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      31: ldc           #75                 // String block
      33: invokespecial #76                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V
      36: aload_0
      37: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      40: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V
      43: return

  private void verifyContentChecksum() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field expectContentChecksum:Z
       4: ifeq          17
       7: aload_0
       8: aload_0
       9: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      12: ldc           #77                 // String content
      14: invokespecial #76                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V
      17: aload_0
      18: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;
      21: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V
      24: return

  private void verifyChecksum(org.apache.commons.compress.compressors.lz4.XXHash32, java.lang.String) throws java.io.IOException;
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore_3
       4: aload_0
       5: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
       8: aload_3
       9: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I
      12: istore        4
      14: aload_0
      15: iload         4
      17: invokevirtual #32                 // Method count:(I)V
      20: iconst_4
      21: iload         4
      23: if_icmpeq     58
      26: new           #33                 // class java/io/IOException
      29: dup
      30: new           #41                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #78                 // String Premature end of stream while reading
      39: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #79                 // String  checksum
      48: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_1
      59: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J
      62: lstore        5
      64: lload         5
      66: aload_3
      67: invokestatic  #80                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J
      70: lcmp
      71: ifeq          101
      74: new           #33                 // class java/io/IOException
      77: dup
      78: new           #41                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      85: aload_2
      86: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #81                 // String  checksum mismatch.
      91: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: return

  private int readOneByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #82                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I
       7: istore_1
       8: iload_1
       9: iconst_m1
      10: if_icmpeq     24
      13: aload_0
      14: iconst_1
      15: invokevirtual #32                 // Method count:(I)V
      18: iload_1
      19: sipush        255
      22: iand
      23: ireturn
      24: iconst_m1
      25: ireturn

  private int readOnce(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #72                 // Field inUncompressed:Z
       4: ifeq          28
       7: aload_0
       8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokevirtual #83                 // Method java/io/InputStream.read:([BII)I
      17: istore        4
      19: aload_0
      20: iload         4
      22: invokevirtual #32                 // Method count:(I)V
      25: iload         4
      27: ireturn
      28: aload_0
      29: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;
      32: checkcast     #48                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream
      35: astore        4
      37: aload         4
      39: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J
      42: lstore        5
      44: aload_0
      45: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;
      48: aload_1
      49: iload_2
      50: iload_3
      51: invokevirtual #83                 // Method java/io/InputStream.read:([BII)I
      54: istore        7
      56: aload_0
      57: aload         4
      59: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J
      62: lload         5
      64: lsub
      65: invokevirtual #85                 // Method count:(J)V
      68: iload         7
      70: ireturn

  private static boolean isSkippableFrameSignature(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: baload
       3: bipush        80
       5: iand
       6: bipush        80
       8: if_icmpeq     13
      11: iconst_0
      12: ireturn
      13: iconst_1
      14: istore_1
      15: iload_1
      16: iconst_4
      17: if_icmpge     41
      20: aload_0
      21: iload_1
      22: baload
      23: getstatic     #86                 // Field SKIPPABLE_FRAME_TRAILER:[B
      26: iload_1
      27: iconst_1
      28: isub
      29: baload
      30: if_icmpeq     35
      33: iconst_0
      34: ireturn
      35: iinc          1, 1
      38: goto          15
      41: iconst_1
      42: ireturn

  private int skipSkippableFrame(byte[]) throws java.io.IOException;
    Code:
       0: iconst_4
       1: istore_2
       2: iload_2
       3: iconst_4
       4: if_icmpne     89
       7: aload_1
       8: invokestatic  #87                 // Method isSkippableFrameSignature:([B)Z
      11: ifeq          89
      14: aload_0
      15: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;
      18: iconst_4
      19: invokestatic  #61                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J
      22: lstore_3
      23: lload_3
      24: lconst_0
      25: lcmp
      26: ifge          39
      29: new           #33                 // class java/io/IOException
      32: dup
      33: ldc           #88                 // String Found illegal skippable frame with negative size
      35: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      43: lload_3
      44: invokestatic  #89                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      47: lstore        5
      49: aload_0
      50: lload         5
      52: invokevirtual #85                 // Method count:(J)V
      55: lload_3
      56: lload         5
      58: lcmp
      59: ifeq          72
      62: new           #33                 // class java/io/IOException
      65: dup
      66: ldc           #90                 // String Premature end of stream while skipping frame
      68: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      76: aload_1
      77: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I
      80: istore_2
      81: aload_0
      82: iload_2
      83: invokevirtual #32                 // Method count:(I)V
      86: goto          2
      89: iload_2
      90: ireturn

  private void appendToBlockDependencyBuffer(byte[], int, int);
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #47                 // Field blockDependencyBuffer:[B
       5: arraylength
       6: invokestatic  #91                 // Method java/lang/Math.min:(II)I
       9: istore_3
      10: iload_3
      11: ifle          55
      14: aload_0
      15: getfield      #47                 // Field blockDependencyBuffer:[B
      18: arraylength
      19: iload_3
      20: isub
      21: istore        4
      23: iload         4
      25: ifle          43
      28: aload_0
      29: getfield      #47                 // Field blockDependencyBuffer:[B
      32: iload_3
      33: aload_0
      34: getfield      #47                 // Field blockDependencyBuffer:[B
      37: iconst_0
      38: iload         4
      40: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_1
      44: iload_2
      45: aload_0
      46: getfield      #47                 // Field blockDependencyBuffer:[B
      49: iload         4
      51: iload_3
      52: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: return

  public static boolean matches(byte[], int);
    Code:
       0: iload_1
       1: getstatic     #93                 // Field LZ4_SIGNATURE:[B
       4: arraylength
       5: if_icmpge     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: astore_2
      12: aload_0
      13: arraylength
      14: getstatic     #93                 // Field LZ4_SIGNATURE:[B
      17: arraylength
      18: if_icmple     39
      21: getstatic     #93                 // Field LZ4_SIGNATURE:[B
      24: arraylength
      25: newarray       byte
      27: astore_2
      28: aload_0
      29: iconst_0
      30: aload_2
      31: iconst_0
      32: getstatic     #93                 // Field LZ4_SIGNATURE:[B
      35: arraylength
      36: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_2
      40: getstatic     #93                 // Field LZ4_SIGNATURE:[B
      43: invokestatic  #94                 // Method java/util/Arrays.equals:([B[B)Z
      46: ireturn

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_4
       6: bastore
       7: dup
       8: iconst_1
       9: bipush        34
      11: bastore
      12: dup
      13: iconst_2
      14: bipush        77
      16: bastore
      17: dup
      18: iconst_3
      19: bipush        24
      21: bastore
      22: putstatic     #93                 // Field LZ4_SIGNATURE:[B
      25: iconst_3
      26: newarray       byte
      28: dup
      29: iconst_0
      30: bipush        42
      32: bastore
      33: dup
      34: iconst_1
      35: bipush        77
      37: bastore
      38: dup
      39: iconst_2
      40: bipush        24
      42: bastore
      43: putstatic     #86                 // Field SKIPPABLE_FRAME_TRAILER:[B
      46: return
}
