Compiled from "StreamCompressor.java"
final class org.apache.commons.compress.archivers.zip.StreamCompressor$SeekableByteChannelCompressor extends org.apache.commons.compress.archivers.zip.StreamCompressor {
  private final java.nio.channels.SeekableByteChannel channel;

  public org.apache.commons.compress.archivers.zip.StreamCompressor$SeekableByteChannelCompressor(java.util.zip.Deflater, java.nio.channels.SeekableByteChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/compress/archivers/zip/StreamCompressor."<init>":(Ljava/util/zip/Deflater;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
      10: return

  protected void writeOut(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #3                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      10: invokeinterface #4,  2            // InterfaceMethod java/nio/channels/SeekableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      15: pop
      16: return
}
