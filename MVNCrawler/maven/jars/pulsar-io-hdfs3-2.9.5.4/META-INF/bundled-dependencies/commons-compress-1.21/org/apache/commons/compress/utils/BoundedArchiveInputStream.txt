Compiled from "BoundedArchiveInputStream.java"
public abstract class org.apache.commons.compress.utils.BoundedArchiveInputStream extends java.io.InputStream {
  private final long end;

  private java.nio.ByteBuffer singleByteBuffer;

  private long loc;

  public org.apache.commons.compress.utils.BoundedArchiveInputStream(long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: lload_1
       6: lload_3
       7: ladd
       8: putfield      #2                  // Field end:J
      11: aload_0
      12: getfield      #2                  // Field end:J
      15: lload_1
      16: lcmp
      17: ifge          56
      20: new           #3                  // class java/lang/IllegalArgumentException
      23: dup
      24: new           #4                  // class java/lang/StringBuilder
      27: dup
      28: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #6                  // String Invalid length of stream at offset=
      33: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: lload_1
      37: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: ldc           #9                  // String , length=
      42: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: lload_3
      46: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      49: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: lload_1
      58: putfield      #12                 // Field loc:J
      61: return

  public synchronized int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field loc:J
       4: aload_0
       5: getfield      #2                  // Field end:J
       8: lcmp
       9: iflt          14
      12: iconst_m1
      13: ireturn
      14: aload_0
      15: getfield      #13                 // Field singleByteBuffer:Ljava/nio/ByteBuffer;
      18: ifnonnull     32
      21: aload_0
      22: iconst_1
      23: invokestatic  #14                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      26: putfield      #13                 // Field singleByteBuffer:Ljava/nio/ByteBuffer;
      29: goto          40
      32: aload_0
      33: getfield      #13                 // Field singleByteBuffer:Ljava/nio/ByteBuffer;
      36: invokevirtual #15                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: aload_0
      42: getfield      #12                 // Field loc:J
      45: aload_0
      46: getfield      #13                 // Field singleByteBuffer:Ljava/nio/ByteBuffer;
      49: invokevirtual #16                 // Method read:(JLjava/nio/ByteBuffer;)I
      52: istore_1
      53: iload_1
      54: iconst_1
      55: if_icmpge     60
      58: iconst_m1
      59: ireturn
      60: aload_0
      61: dup
      62: getfield      #12                 // Field loc:J
      65: lconst_1
      66: ladd
      67: putfield      #12                 // Field loc:J
      70: aload_0
      71: getfield      #13                 // Field singleByteBuffer:Ljava/nio/ByteBuffer;
      74: invokevirtual #17                 // Method java/nio/ByteBuffer.get:()B
      77: sipush        255
      80: iand
      81: ireturn

  public synchronized int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field loc:J
       4: aload_0
       5: getfield      #2                  // Field end:J
       8: lcmp
       9: iflt          14
      12: iconst_m1
      13: ireturn
      14: iload_3
      15: i2l
      16: aload_0
      17: getfield      #2                  // Field end:J
      20: aload_0
      21: getfield      #12                 // Field loc:J
      24: lsub
      25: invokestatic  #18                 // Method java/lang/Math.min:(JJ)J
      28: lstore        4
      30: lload         4
      32: lconst_0
      33: lcmp
      34: ifgt          39
      37: iconst_0
      38: ireturn
      39: iload_2
      40: iflt          60
      43: iload_2
      44: aload_1
      45: arraylength
      46: if_icmpgt     60
      49: lload         4
      51: aload_1
      52: arraylength
      53: iload_2
      54: isub
      55: i2l
      56: lcmp
      57: ifle          70
      60: new           #19                 // class java/lang/IndexOutOfBoundsException
      63: dup
      64: ldc           #20                 // String offset or len are out of bounds
      66: invokespecial #21                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_1
      71: iload_2
      72: lload         4
      74: l2i
      75: invokestatic  #22                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      78: astore        6
      80: aload_0
      81: aload_0
      82: getfield      #12                 // Field loc:J
      85: aload         6
      87: invokevirtual #16                 // Method read:(JLjava/nio/ByteBuffer;)I
      90: istore        7
      92: iload         7
      94: ifle          109
      97: aload_0
      98: dup
      99: getfield      #12                 // Field loc:J
     102: iload         7
     104: i2l
     105: ladd
     106: putfield      #12                 // Field loc:J
     109: iload         7
     111: ireturn

  protected abstract int read(long, java.nio.ByteBuffer) throws java.io.IOException;
}
