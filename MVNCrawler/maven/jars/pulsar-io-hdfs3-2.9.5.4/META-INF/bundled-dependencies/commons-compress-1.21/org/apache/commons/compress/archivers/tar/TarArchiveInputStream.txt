Compiled from "TarArchiveInputStream.java"
public class org.apache.commons.compress.archivers.tar.TarArchiveInputStream extends org.apache.commons.compress.archivers.ArchiveInputStream {
  private static final int SMALL_BUFFER_SIZE;

  private final byte[] smallBuf;

  private final int recordSize;

  private final byte[] recordBuffer;

  private final int blockSize;

  private boolean hasHitEOF;

  private long entrySize;

  private long entryOffset;

  private final java.io.InputStream inputStream;

  private java.util.List<java.io.InputStream> sparseInputStreams;

  private int currentSparseInputStreamIndex;

  private org.apache.commons.compress.archivers.tar.TarArchiveEntry currEntry;

  private final org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;

  final java.lang.String encoding;

  private java.util.Map<java.lang.String, java.lang.String> globalPaxHeaders;

  private final java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> globalSparseHeaders;

  private final boolean lenient;

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        10240
       5: sipush        512
       8: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;II)V
      11: return

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        10240
       5: sipush        512
       8: aconst_null
       9: iload_2
      10: invokespecial #3                  // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;Z)V
      13: return

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        10240
       5: sipush        512
       8: aload_2
       9: invokespecial #4                  // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;)V
      12: return

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: sipush        512
       6: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;II)V
       9: return

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: sipush        512
       6: aload_3
       7: invokespecial #4                  // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;)V
      10: return

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokespecial #4                  // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;)V
       8: return

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: iconst_0
       7: invokespecial #3                  // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;Z)V
      10: return

  public org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int, int, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/commons/compress/archivers/ArchiveInputStream."<init>":()V
       4: aload_0
       5: sipush        256
       8: newarray       byte
      10: putfield      #7                  // Field smallBuf:[B
      13: aload_0
      14: new           #8                  // class java/util/HashMap
      17: dup
      18: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      21: putfield      #10                 // Field globalPaxHeaders:Ljava/util/Map;
      24: aload_0
      25: new           #11                 // class java/util/ArrayList
      28: dup
      29: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
      32: putfield      #13                 // Field globalSparseHeaders:Ljava/util/List;
      35: aload_0
      36: aload_1
      37: putfield      #14                 // Field inputStream:Ljava/io/InputStream;
      40: aload_0
      41: iconst_0
      42: putfield      #15                 // Field hasHitEOF:Z
      45: aload_0
      46: aload         4
      48: putfield      #16                 // Field encoding:Ljava/lang/String;
      51: aload_0
      52: aload         4
      54: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      57: putfield      #18                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      60: aload_0
      61: iload_3
      62: putfield      #19                 // Field recordSize:I
      65: aload_0
      66: iload_3
      67: newarray       byte
      69: putfield      #20                 // Field recordBuffer:[B
      72: aload_0
      73: iload_2
      74: putfield      #21                 // Field blockSize:I
      77: aload_0
      78: iload         5
      80: putfield      #22                 // Field lenient:Z
      83: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
       4: ifnull        43
       7: aload_0
       8: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      11: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          43
      26: aload_1
      27: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #27                 // class java/io/InputStream
      35: astore_2
      36: aload_2
      37: invokevirtual #28                 // Method java/io/InputStream.close:()V
      40: goto          17
      43: aload_0
      44: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      47: invokevirtual #28                 // Method java/io/InputStream.close:()V
      50: return

  public int getRecordSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field recordSize:I
       4: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method isDirectory:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      13: invokevirtual #31                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getRealSize:()J
      16: aload_0
      17: getfield      #32                 // Field entryOffset:J
      20: lsub
      21: ldc2_w        #34                 // long 2147483647l
      24: lcmp
      25: ifle          31
      28: ldc           #36                 // int 2147483647
      30: ireturn
      31: aload_0
      32: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      35: invokevirtual #31                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getRealSize:()J
      38: aload_0
      39: getfield      #32                 // Field entryOffset:J
      42: lsub
      43: l2i
      44: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          13
       6: aload_0
       7: invokespecial #29                 // Method isDirectory:()Z
      10: ifeq          15
      13: lconst_0
      14: lreturn
      15: aload_0
      16: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      19: invokevirtual #37                 // Method java/io/InputStream.available:()I
      22: i2l
      23: lstore_3
      24: aload_0
      25: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      28: invokevirtual #31                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getRealSize:()J
      31: aload_0
      32: getfield      #32                 // Field entryOffset:J
      35: lsub
      36: lstore        5
      38: lload_1
      39: lload         5
      41: invokestatic  #38                 // Method java/lang/Math.min:(JJ)J
      44: lstore        7
      46: aload_0
      47: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      50: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isSparse:()Z
      53: ifne          81
      56: aload_0
      57: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      60: lload         7
      62: invokestatic  #40                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      65: lstore        9
      67: aload_0
      68: lload_3
      69: lload         9
      71: lload         7
      73: invokespecial #41                 // Method getActuallySkipped:(JJJ)J
      76: lstore        9
      78: goto          89
      81: aload_0
      82: lload         7
      84: invokespecial #42                 // Method skipSparse:(J)J
      87: lstore        9
      89: aload_0
      90: lload         9
      92: invokevirtual #43                 // Method count:(J)V
      95: aload_0
      96: dup
      97: getfield      #32                 // Field entryOffset:J
     100: lload         9
     102: ladd
     103: putfield      #32                 // Field entryOffset:J
     106: lload         9
     108: lreturn

  private long skipSparse(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      11: invokeinterface #44,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          28
      19: aload_0
      20: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      23: lload_1
      24: invokevirtual #45                 // Method java/io/InputStream.skip:(J)J
      27: lreturn
      28: lconst_0
      29: lstore_3
      30: lload_3
      31: lload_1
      32: lcmp
      33: ifge          100
      36: aload_0
      37: getfield      #46                 // Field currentSparseInputStreamIndex:I
      40: aload_0
      41: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      44: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      49: if_icmpge     100
      52: aload_0
      53: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      56: aload_0
      57: getfield      #46                 // Field currentSparseInputStreamIndex:I
      60: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      65: checkcast     #27                 // class java/io/InputStream
      68: astore        5
      70: lload_3
      71: aload         5
      73: lload_1
      74: lload_3
      75: lsub
      76: invokevirtual #45                 // Method java/io/InputStream.skip:(J)J
      79: ladd
      80: lstore_3
      81: lload_3
      82: lload_1
      83: lcmp
      84: ifge          97
      87: aload_0
      88: dup
      89: getfield      #46                 // Field currentSparseInputStreamIndex:I
      92: iconst_1
      93: iadd
      94: putfield      #46                 // Field currentSparseInputStreamIndex:I
      97: goto          30
     100: lload_3
     101: lreturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public synchronized void mark(int);
    Code:
       0: return

  public synchronized void reset();
    Code:
       0: return

  public org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isAtEOF:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      13: ifnull        28
      16: aload_0
      17: ldc2_w        #51                 // long 9223372036854775807l
      20: invokestatic  #40                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      23: pop2
      24: aload_0
      25: invokespecial #53                 // Method skipRecordPadding:()V
      28: aload_0
      29: invokespecial #54                 // Method getRecord:()[B
      32: astore_1
      33: aload_1
      34: ifnonnull     44
      37: aload_0
      38: aconst_null
      39: putfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      42: aconst_null
      43: areturn
      44: aload_0
      45: new           #55                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
      48: dup
      49: aload_1
      50: aload_0
      51: getfield      #18                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      54: aload_0
      55: getfield      #22                 // Field lenient:Z
      58: invokespecial #56                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry."<init>":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
      61: putfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      64: goto          79
      67: astore_2
      68: new           #58                 // class java/io/IOException
      71: dup
      72: ldc           #59                 // String Error detected parsing the header
      74: aload_2
      75: invokespecial #60                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: athrow
      79: aload_0
      80: lconst_0
      81: putfield      #32                 // Field entryOffset:J
      84: aload_0
      85: aload_0
      86: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      89: invokevirtual #61                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      92: putfield      #62                 // Field entrySize:J
      95: aload_0
      96: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      99: invokevirtual #63                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNULongLinkEntry:()Z
     102: ifeq          133
     105: aload_0
     106: invokevirtual #64                 // Method getLongNameData:()[B
     109: astore_2
     110: aload_2
     111: ifnonnull     116
     114: aconst_null
     115: areturn
     116: aload_0
     117: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     120: aload_0
     121: getfield      #18                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     124: aload_2
     125: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     130: invokevirtual #66                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setLinkName:(Ljava/lang/String;)V
     133: aload_0
     134: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     137: invokevirtual #67                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNULongNameEntry:()Z
     140: ifeq          218
     143: aload_0
     144: invokevirtual #64                 // Method getLongNameData:()[B
     147: astore_2
     148: aload_2
     149: ifnonnull     154
     152: aconst_null
     153: areturn
     154: aload_0
     155: getfield      #18                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     158: aload_2
     159: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     164: astore_3
     165: aload_0
     166: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     169: aload_3
     170: invokevirtual #68                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V
     173: aload_0
     174: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     177: invokevirtual #69                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z
     180: ifeq          218
     183: aload_3
     184: ldc           #70                 // String /
     186: invokevirtual #71                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     189: ifne          218
     192: aload_0
     193: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     196: new           #72                 // class java/lang/StringBuilder
     199: dup
     200: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
     203: aload_3
     204: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: ldc           #70                 // String /
     209: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokevirtual #68                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V
     218: aload_0
     219: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     222: invokevirtual #76                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z
     225: ifeq          232
     228: aload_0
     229: invokespecial #77                 // Method readGlobalPaxHeaders:()V
     232: aload_0
     233: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     236: invokevirtual #78                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxHeader:()Z
     239: ifeq          249
     242: aload_0
     243: invokespecial #79                 // Method paxHeaders:()V
     246: goto          273
     249: aload_0
     250: getfield      #10                 // Field globalPaxHeaders:Ljava/util/Map;
     253: invokeinterface #80,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     258: ifne          273
     261: aload_0
     262: aload_0
     263: getfield      #10                 // Field globalPaxHeaders:Ljava/util/Map;
     266: aload_0
     267: getfield      #13                 // Field globalSparseHeaders:Ljava/util/List;
     270: invokespecial #81                 // Method applyPaxHeadersToCurrentEntry:(Ljava/util/Map;Ljava/util/List;)V
     273: goto          288
     276: astore_2
     277: new           #58                 // class java/io/IOException
     280: dup
     281: ldc           #83                 // String Error detected parsing the pax header
     283: aload_2
     284: invokespecial #60                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     287: athrow
     288: aload_0
     289: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     292: invokevirtual #84                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isOldGNUSparse:()Z
     295: ifeq          302
     298: aload_0
     299: invokespecial #85                 // Method readOldGNUSparse:()V
     302: aload_0
     303: aload_0
     304: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     307: invokevirtual #61                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
     310: putfield      #62                 // Field entrySize:J
     313: aload_0
     314: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     317: areturn
    Exception table:
       from    to  target type
          44    64    67   Class java/lang/IllegalArgumentException
         232   273   276   Class java/lang/NumberFormatException

  private void skipRecordPadding() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method isDirectory:()Z
       4: ifne          95
       7: aload_0
       8: getfield      #62                 // Field entrySize:J
      11: lconst_0
      12: lcmp
      13: ifle          95
      16: aload_0
      17: getfield      #62                 // Field entrySize:J
      20: aload_0
      21: getfield      #19                 // Field recordSize:I
      24: i2l
      25: lrem
      26: lconst_0
      27: lcmp
      28: ifeq          95
      31: aload_0
      32: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      35: invokevirtual #37                 // Method java/io/InputStream.available:()I
      38: i2l
      39: lstore_1
      40: aload_0
      41: getfield      #62                 // Field entrySize:J
      44: aload_0
      45: getfield      #19                 // Field recordSize:I
      48: i2l
      49: ldiv
      50: lconst_1
      51: ladd
      52: lstore_3
      53: lload_3
      54: aload_0
      55: getfield      #19                 // Field recordSize:I
      58: i2l
      59: lmul
      60: aload_0
      61: getfield      #62                 // Field entrySize:J
      64: lsub
      65: lstore        5
      67: aload_0
      68: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      71: lload         5
      73: invokestatic  #40                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      76: lstore        7
      78: aload_0
      79: lload_1
      80: lload         7
      82: lload         5
      84: invokespecial #41                 // Method getActuallySkipped:(JJJ)J
      87: lstore        7
      89: aload_0
      90: lload         7
      92: invokevirtual #43                 // Method count:(J)V
      95: return

  private long getActuallySkipped(long, long, long) throws java.io.IOException;
    Code:
       0: lload_3
       1: lstore        7
       3: aload_0
       4: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
       7: instanceof    #86                 // class java/io/FileInputStream
      10: ifeq          20
      13: lload_3
      14: lload_1
      15: invokestatic  #38                 // Method java/lang/Math.min:(JJ)J
      18: lstore        7
      20: lload         7
      22: lload         5
      24: lcmp
      25: ifeq          38
      28: new           #58                 // class java/io/IOException
      31: dup
      32: ldc           #87                 // String Truncated TAR archive
      34: invokespecial #88                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: lload         7
      40: lreturn

  protected byte[] getLongNameData() throws java.io.IOException;
    Code:
       0: new           #89                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #90                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: aload_0
      12: getfield      #7                  // Field smallBuf:[B
      15: invokevirtual #91                 // Method read:([B)I
      18: dup
      19: istore_2
      20: iflt          36
      23: aload_1
      24: aload_0
      25: getfield      #7                  // Field smallBuf:[B
      28: iconst_0
      29: iload_2
      30: invokevirtual #92                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      33: goto          10
      36: aload_0
      37: invokevirtual #93                 // Method getNextEntry:()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      40: pop
      41: aload_0
      42: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      45: ifnonnull     50
      48: aconst_null
      49: areturn
      50: aload_1
      51: invokevirtual #94                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      54: astore_3
      55: aload_3
      56: arraylength
      57: istore_2
      58: iload_2
      59: ifle          76
      62: aload_3
      63: iload_2
      64: iconst_1
      65: isub
      66: baload
      67: ifne          76
      70: iinc          2, -1
      73: goto          58
      76: iload_2
      77: aload_3
      78: arraylength
      79: if_icmpeq     99
      82: iload_2
      83: newarray       byte
      85: astore        4
      87: aload_3
      88: iconst_0
      89: aload         4
      91: iconst_0
      92: iload_2
      93: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      96: aload         4
      98: astore_3
      99: aload_3
     100: areturn

  private byte[] getRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method readRecord:()[B
       4: astore_1
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokevirtual #97                 // Method isEOFRecord:([B)Z
      11: invokevirtual #98                 // Method setAtEOF:(Z)V
      14: aload_0
      15: invokevirtual #49                 // Method isAtEOF:()Z
      18: ifeq          35
      21: aload_1
      22: ifnull        35
      25: aload_0
      26: invokespecial #99                 // Method tryToConsumeSecondEOFRecord:()V
      29: aload_0
      30: invokespecial #100                // Method consumeRemainderOfLastBlock:()V
      33: aconst_null
      34: astore_1
      35: aload_1
      36: areturn

  protected boolean isEOFRecord(byte[]);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: aload_0
       6: getfield      #19                 // Field recordSize:I
       9: invokestatic  #101                // Method org/apache/commons/compress/utils/ArchiveUtils.isArrayZero:([BI)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  protected byte[] readRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
       4: aload_0
       5: getfield      #20                 // Field recordBuffer:[B
       8: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I
      11: istore_1
      12: aload_0
      13: iload_1
      14: invokevirtual #103                // Method count:(I)V
      17: iload_1
      18: aload_0
      19: getfield      #19                 // Field recordSize:I
      22: if_icmpeq     27
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #20                 // Field recordBuffer:[B
      31: areturn

  private void readGlobalPaxHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #13                 // Field globalSparseHeaders:Ljava/util/List;
       6: aload_0
       7: getfield      #10                 // Field globalPaxHeaders:Ljava/util/Map;
      10: aload_0
      11: getfield      #62                 // Field entrySize:J
      14: invokestatic  #104                // Method org/apache/commons/compress/archivers/tar/TarUtils.parsePaxHeaders:(Ljava/io/InputStream;Ljava/util/List;Ljava/util/Map;J)Ljava/util/Map;
      17: putfield      #10                 // Field globalPaxHeaders:Ljava/util/Map;
      20: aload_0
      21: invokevirtual #93                 // Method getNextEntry:()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      24: pop
      25: aload_0
      26: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      29: ifnonnull     42
      32: new           #58                 // class java/io/IOException
      35: dup
      36: ldc           #83                 // String Error detected parsing the pax header
      38: invokespecial #88                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  private void paxHeaders() throws java.io.IOException;
    Code:
       0: new           #11                 // class java/util/ArrayList
       3: dup
       4: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_0
      11: getfield      #10                 // Field globalPaxHeaders:Ljava/util/Map;
      14: aload_0
      15: getfield      #62                 // Field entrySize:J
      18: invokestatic  #104                // Method org/apache/commons/compress/archivers/tar/TarUtils.parsePaxHeaders:(Ljava/io/InputStream;Ljava/util/List;Ljava/util/Map;J)Ljava/util/Map;
      21: astore_2
      22: aload_2
      23: ldc           #105                // String GNU.sparse.map
      25: invokeinterface #106,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      30: ifeq          55
      33: new           #11                 // class java/util/ArrayList
      36: dup
      37: aload_2
      38: ldc           #105                // String GNU.sparse.map
      40: invokeinterface #107,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #108                // class java/lang/String
      48: invokestatic  #109                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseFromPAX01SparseHeaders:(Ljava/lang/String;)Ljava/util/List;
      51: invokespecial #110                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      54: astore_1
      55: aload_0
      56: invokevirtual #93                 // Method getNextEntry:()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      59: pop
      60: aload_0
      61: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      64: ifnonnull     77
      67: new           #58                 // class java/io/IOException
      70: dup
      71: ldc           #111                // String premature end of tar archive. Didn\'t find any entry after PAX header.
      73: invokespecial #88                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: aload_2
      79: aload_1
      80: invokespecial #81                 // Method applyPaxHeadersToCurrentEntry:(Ljava/util/Map;Ljava/util/List;)V
      83: aload_0
      84: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      87: invokevirtual #112                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxGNU1XSparse:()Z
      90: ifeq          113
      93: aload_0
      94: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      97: aload_0
      98: getfield      #19                 // Field recordSize:I
     101: invokestatic  #113                // Method org/apache/commons/compress/archivers/tar/TarUtils.parsePAX1XSparseHeaders:(Ljava/io/InputStream;I)Ljava/util/List;
     104: astore_1
     105: aload_0
     106: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     109: aload_1
     110: invokevirtual #114                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSparseHeaders:(Ljava/util/List;)V
     113: aload_0
     114: invokespecial #115                // Method buildSparseInputStreams:()V
     117: return

  private void applyPaxHeadersToCurrentEntry(java.util.Map<java.lang.String, java.lang.String>, java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: aload_1
       5: invokevirtual #116                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.updateEntryFromPaxHeaders:(Ljava/util/Map;)V
       8: aload_0
       9: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      12: aload_2
      13: invokevirtual #114                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSparseHeaders:(Ljava/util/List;)V
      16: return

  private void readOldGNUSparse() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: invokevirtual #117                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isExtended:()Z
       7: ifeq          62
      10: aload_0
      11: invokespecial #54                 // Method getRecord:()[B
      14: astore_2
      15: aload_2
      16: ifnonnull     29
      19: new           #58                 // class java/io/IOException
      22: dup
      23: ldc           #118                // String premature end of tar archive. Didn\'t find extended_header after header with extended flag.
      25: invokespecial #88                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #119                // class org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry
      32: dup
      33: aload_2
      34: invokespecial #120                // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry."<init>":([B)V
      37: astore_1
      38: aload_0
      39: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      42: invokevirtual #121                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSparseHeaders:()Ljava/util/List;
      45: aload_1
      46: invokevirtual #122                // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.getSparseHeaders:()Ljava/util/List;
      49: invokeinterface #123,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: aload_1
      56: invokevirtual #124                // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:()Z
      59: ifne          10
      62: aload_0
      63: invokespecial #115                // Method buildSparseInputStreams:()V
      66: return

  private boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: ifnull        21
       7: aload_0
       8: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      11: invokevirtual #69                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #125                // Method getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: areturn

  private void tryToConsumeSecondEOFRecord() throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
       6: invokevirtual #126                // Method java/io/InputStream.markSupported:()Z
       9: istore_2
      10: iload_2
      11: ifeq          25
      14: aload_0
      15: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      18: aload_0
      19: getfield      #19                 // Field recordSize:I
      22: invokevirtual #127                // Method java/io/InputStream.mark:(I)V
      25: aload_0
      26: aload_0
      27: invokevirtual #96                 // Method readRecord:()[B
      30: invokevirtual #97                 // Method isEOFRecord:([B)Z
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore_1
      42: iload_1
      43: ifeq          96
      46: iload_2
      47: ifeq          96
      50: aload_0
      51: aload_0
      52: getfield      #19                 // Field recordSize:I
      55: i2l
      56: invokevirtual #128                // Method pushedBackBytes:(J)V
      59: aload_0
      60: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      63: invokevirtual #129                // Method java/io/InputStream.reset:()V
      66: goto          96
      69: astore_3
      70: iload_1
      71: ifeq          94
      74: iload_2
      75: ifeq          94
      78: aload_0
      79: aload_0
      80: getfield      #19                 // Field recordSize:I
      83: i2l
      84: invokevirtual #128                // Method pushedBackBytes:(J)V
      87: aload_0
      88: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      91: invokevirtual #129                // Method java/io/InputStream.reset:()V
      94: aload_3
      95: athrow
      96: return
    Exception table:
       from    to  target type
          25    42    69   any

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore        4
       9: aload_0
      10: invokevirtual #49                 // Method isAtEOF:()Z
      13: ifne          23
      16: aload_0
      17: invokespecial #29                 // Method isDirectory:()Z
      20: ifeq          25
      23: iconst_m1
      24: ireturn
      25: aload_0
      26: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      29: ifnonnull     42
      32: new           #130                // class java/lang/IllegalStateException
      35: dup
      36: ldc           #131                // String No current tar entry
      38: invokespecial #132                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: getfield      #32                 // Field entryOffset:J
      46: aload_0
      47: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      50: invokevirtual #31                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getRealSize:()J
      53: lcmp
      54: iflt          59
      57: iconst_m1
      58: ireturn
      59: iload_3
      60: aload_0
      61: invokevirtual #133                // Method available:()I
      64: invokestatic  #134                // Method java/lang/Math.min:(II)I
      67: istore_3
      68: aload_0
      69: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      72: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isSparse:()Z
      75: ifeq          90
      78: aload_0
      79: aload_1
      80: iload_2
      81: iload_3
      82: invokespecial #135                // Method readSparse:([BII)I
      85: istore        4
      87: goto          102
      90: aload_0
      91: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      94: aload_1
      95: iload_2
      96: iload_3
      97: invokevirtual #136                // Method java/io/InputStream.read:([BII)I
     100: istore        4
     102: iload         4
     104: iconst_m1
     105: if_icmpne     130
     108: iload_3
     109: ifle          122
     112: new           #58                 // class java/io/IOException
     115: dup
     116: ldc           #87                 // String Truncated TAR archive
     118: invokespecial #88                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: aload_0
     123: iconst_1
     124: invokevirtual #98                 // Method setAtEOF:(Z)V
     127: goto          148
     130: aload_0
     131: iload         4
     133: invokevirtual #103                // Method count:(I)V
     136: aload_0
     137: dup
     138: getfield      #32                 // Field entryOffset:J
     141: iload         4
     143: i2l
     144: ladd
     145: putfield      #32                 // Field entryOffset:J
     148: iload         4
     150: ireturn

  private int readSparse(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      11: invokeinterface #44,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          30
      19: aload_0
      20: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokevirtual #136                // Method java/io/InputStream.read:([BII)I
      29: ireturn
      30: aload_0
      31: getfield      #46                 // Field currentSparseInputStreamIndex:I
      34: aload_0
      35: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      38: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      43: if_icmplt     48
      46: iconst_m1
      47: ireturn
      48: aload_0
      49: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      52: aload_0
      53: getfield      #46                 // Field currentSparseInputStreamIndex:I
      56: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      61: checkcast     #27                 // class java/io/InputStream
      64: astore        4
      66: aload         4
      68: aload_1
      69: iload_2
      70: iload_3
      71: invokevirtual #136                // Method java/io/InputStream.read:([BII)I
      74: istore        5
      76: aload_0
      77: getfield      #46                 // Field currentSparseInputStreamIndex:I
      80: aload_0
      81: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      84: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      89: iconst_1
      90: isub
      91: if_icmpne     97
      94: iload         5
      96: ireturn
      97: iload         5
      99: iconst_m1
     100: if_icmpne     121
     103: aload_0
     104: dup
     105: getfield      #46                 // Field currentSparseInputStreamIndex:I
     108: iconst_1
     109: iadd
     110: putfield      #46                 // Field currentSparseInputStreamIndex:I
     113: aload_0
     114: aload_1
     115: iload_2
     116: iload_3
     117: invokespecial #135                // Method readSparse:([BII)I
     120: ireturn
     121: iload         5
     123: iload_3
     124: if_icmpge     167
     127: aload_0
     128: dup
     129: getfield      #46                 // Field currentSparseInputStreamIndex:I
     132: iconst_1
     133: iadd
     134: putfield      #46                 // Field currentSparseInputStreamIndex:I
     137: aload_0
     138: aload_1
     139: iload_2
     140: iload         5
     142: iadd
     143: iload_3
     144: iload         5
     146: isub
     147: invokespecial #135                // Method readSparse:([BII)I
     150: istore        6
     152: iload         6
     154: iconst_m1
     155: if_icmpne     161
     158: iload         5
     160: ireturn
     161: iload         5
     163: iload         6
     165: iadd
     166: ireturn
     167: iload         5
     169: ireturn

  public boolean canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry);
    Code:
       0: aload_1
       1: instanceof    #55                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
       4: ireturn

  public org.apache.commons.compress.archivers.tar.TarArchiveEntry getCurrentEntry();
    Code:
       0: aload_0
       1: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: areturn

  protected final void setCurrentEntry(org.apache.commons.compress.archivers.tar.TarArchiveEntry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       5: return

  protected final boolean isAtEOF();
    Code:
       0: aload_0
       1: getfield      #15                 // Field hasHitEOF:Z
       4: ireturn

  protected final void setAtEOF(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field hasHitEOF:Z
       5: return

  private void consumeRemainderOfLastBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #137                // Method getBytesRead:()J
       4: aload_0
       5: getfield      #21                 // Field blockSize:I
       8: i2l
       9: lrem
      10: lstore_1
      11: lload_1
      12: lconst_0
      13: lcmp
      14: ifle          37
      17: aload_0
      18: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
      21: aload_0
      22: getfield      #21                 // Field blockSize:I
      25: i2l
      26: lload_1
      27: lsub
      28: invokestatic  #40                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      31: lstore_3
      32: aload_0
      33: lload_3
      34: invokevirtual #43                 // Method count:(J)V
      37: return

  public static boolean matches(byte[], int);
    Code:
       0: iload_1
       1: sipush        265
       4: if_icmpge     9
       7: iconst_0
       8: ireturn
       9: ldc           #138                // String ustar\u0000
      11: aload_0
      12: sipush        257
      15: bipush        6
      17: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      20: ifeq          38
      23: ldc           #140                // String 00
      25: aload_0
      26: sipush        263
      29: iconst_2
      30: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: ldc           #141                // String ustar
      40: aload_0
      41: sipush        257
      44: bipush        6
      46: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      49: ifeq          80
      52: ldc           #142                // String  \u0000
      54: aload_0
      55: sipush        263
      58: iconst_2
      59: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      62: ifne          78
      65: ldc           #143                // String 0\u0000
      67: aload_0
      68: sipush        263
      71: iconst_2
      72: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      75: ifeq          80
      78: iconst_1
      79: ireturn
      80: ldc           #138                // String ustar\u0000
      82: aload_0
      83: sipush        257
      86: bipush        6
      88: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      91: ifeq          111
      94: ldc           #144                // String \u0000\u0000
      96: aload_0
      97: sipush        263
     100: iconst_2
     101: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
     104: ifeq          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: ireturn

  private void buildSparseInputStreams() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #46                 // Field currentSparseInputStreamIndex:I
       5: aload_0
       6: new           #11                 // class java/util/ArrayList
       9: dup
      10: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
      13: putfield      #23                 // Field sparseInputStreams:Ljava/util/List;
      16: aload_0
      17: getfield      #30                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      20: invokevirtual #145                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getOrderedSparseHeaders:()Ljava/util/List;
      23: astore_1
      24: new           #146                // class org/apache/commons/compress/archivers/tar/TarArchiveSparseZeroInputStream
      27: dup
      28: invokespecial #147                // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseZeroInputStream."<init>":()V
      31: astore_2
      32: lconst_0
      33: lstore_3
      34: aload_1
      35: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        5
      42: aload         5
      44: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          173
      52: aload         5
      54: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #148                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse
      62: astore        6
      64: aload         6
      66: invokevirtual #149                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J
      69: lload_3
      70: lsub
      71: lstore        7
      73: lload         7
      75: lconst_0
      76: lcmp
      77: ifge          90
      80: new           #58                 // class java/io/IOException
      83: dup
      84: ldc           #150                // String Corrupted struct sparse detected
      86: invokespecial #88                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: lload         7
      92: lconst_0
      93: lcmp
      94: ifle          122
      97: aload_0
      98: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
     101: new           #151                // class org/apache/commons/compress/utils/BoundedInputStream
     104: dup
     105: aload_2
     106: aload         6
     108: invokevirtual #149                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J
     111: lload_3
     112: lsub
     113: invokespecial #152                // Method org/apache/commons/compress/utils/BoundedInputStream."<init>":(Ljava/io/InputStream;J)V
     116: invokeinterface #153,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     121: pop
     122: aload         6
     124: invokevirtual #154                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J
     127: lconst_0
     128: lcmp
     129: ifle          158
     132: aload_0
     133: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
     136: new           #151                // class org/apache/commons/compress/utils/BoundedInputStream
     139: dup
     140: aload_0
     141: getfield      #14                 // Field inputStream:Ljava/io/InputStream;
     144: aload         6
     146: invokevirtual #154                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J
     149: invokespecial #152                // Method org/apache/commons/compress/utils/BoundedInputStream."<init>":(Ljava/io/InputStream;J)V
     152: invokeinterface #153,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     157: pop
     158: aload         6
     160: invokevirtual #149                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J
     163: aload         6
     165: invokevirtual #154                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J
     168: ladd
     169: lstore_3
     170: goto          42
     173: aload_0
     174: getfield      #23                 // Field sparseInputStreams:Ljava/util/List;
     177: invokeinterface #44,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     182: ifne          190
     185: aload_0
     186: iconst_0
     187: putfield      #46                 // Field currentSparseInputStreamIndex:I
     190: return
}
