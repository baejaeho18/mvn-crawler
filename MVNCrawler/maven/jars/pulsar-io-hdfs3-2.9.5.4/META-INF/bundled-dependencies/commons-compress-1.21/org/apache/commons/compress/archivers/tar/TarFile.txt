Compiled from "TarFile.java"
public class org.apache.commons.compress.archivers.tar.TarFile implements java.io.Closeable {
  private static final int SMALL_BUFFER_SIZE;

  private final byte[] smallBuf;

  private final java.nio.channels.SeekableByteChannel archive;

  private final org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;

  private final java.util.LinkedList<org.apache.commons.compress.archivers.tar.TarArchiveEntry> entries;

  private final int blockSize;

  private final boolean lenient;

  private final int recordSize;

  private final java.nio.ByteBuffer recordBuffer;

  private final java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> globalSparseHeaders;

  private boolean hasHitEOF;

  private org.apache.commons.compress.archivers.tar.TarArchiveEntry currEntry;

  private java.util.Map<java.lang.String, java.lang.String> globalPaxHeaders;

  private final java.util.Map<java.lang.String, java.util.List<java.io.InputStream>> sparseInputStreams;

  public org.apache.commons.compress.archivers.tar.TarFile(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/commons/compress/utils/SeekableInMemoryByteChannel
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/apache/commons/compress/utils/SeekableInMemoryByteChannel."<init>":([B)V
       9: invokespecial #4                  // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;)V
      12: return

  public org.apache.commons.compress.archivers.tar.TarFile(byte[], java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/commons/compress/utils/SeekableInMemoryByteChannel
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/apache/commons/compress/utils/SeekableInMemoryByteChannel."<init>":([B)V
       9: sipush        10240
      12: sipush        512
      15: aload_2
      16: iconst_0
      17: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;IILjava/lang/String;Z)V
      20: return

  public org.apache.commons.compress.archivers.tar.TarFile(byte[], boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/commons/compress/utils/SeekableInMemoryByteChannel
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/apache/commons/compress/utils/SeekableInMemoryByteChannel."<init>":([B)V
       9: sipush        10240
      12: sipush        512
      15: aconst_null
      16: iload_2
      17: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;IILjava/lang/String;Z)V
      20: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: invokespecial #8                  // Method "<init>":(Ljava/nio/file/Path;)V
       8: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: aload_2
       6: invokespecial #9                  // Method "<init>":(Ljava/nio/file/Path;Ljava/lang/String;)V
       9: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: iload_2
       6: invokespecial #10                 // Method "<init>":(Ljava/nio/file/Path;Z)V
       9: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: anewarray     #11                 // class java/nio/file/OpenOption
       6: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
       9: sipush        10240
      12: sipush        512
      15: aconst_null
      16: iconst_0
      17: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;IILjava/lang/String;Z)V
      20: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.nio.file.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: anewarray     #11                 // class java/nio/file/OpenOption
       6: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
       9: sipush        10240
      12: sipush        512
      15: aload_2
      16: iconst_0
      17: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;IILjava/lang/String;Z)V
      20: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.nio.file.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: anewarray     #11                 // class java/nio/file/OpenOption
       6: invokestatic  #12                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
       9: sipush        10240
      12: sipush        512
      15: aconst_null
      16: iload_2
      17: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;IILjava/lang/String;Z)V
      20: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.nio.channels.SeekableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        10240
       5: sipush        512
       8: aconst_null
       9: iconst_0
      10: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/SeekableByteChannel;IILjava/lang/String;Z)V
      13: return

  public org.apache.commons.compress.archivers.tar.TarFile(java.nio.channels.SeekableByteChannel, int, int, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        256
       8: newarray       byte
      10: putfield      #15                 // Field smallBuf:[B
      13: aload_0
      14: new           #16                 // class java/util/LinkedList
      17: dup
      18: invokespecial #17                 // Method java/util/LinkedList."<init>":()V
      21: putfield      #18                 // Field entries:Ljava/util/LinkedList;
      24: aload_0
      25: new           #19                 // class java/util/ArrayList
      28: dup
      29: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      32: putfield      #21                 // Field globalSparseHeaders:Ljava/util/List;
      35: aload_0
      36: new           #22                 // class java/util/HashMap
      39: dup
      40: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      43: putfield      #24                 // Field globalPaxHeaders:Ljava/util/Map;
      46: aload_0
      47: new           #22                 // class java/util/HashMap
      50: dup
      51: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      54: putfield      #1                  // Field sparseInputStreams:Ljava/util/Map;
      57: aload_0
      58: aload_1
      59: putfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      62: aload_0
      63: iconst_0
      64: putfield      #26                 // Field hasHitEOF:Z
      67: aload_0
      68: aload         4
      70: invokestatic  #27                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      73: putfield      #28                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      76: aload_0
      77: iload_3
      78: putfield      #29                 // Field recordSize:I
      81: aload_0
      82: aload_0
      83: getfield      #29                 // Field recordSize:I
      86: invokestatic  #30                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      89: putfield      #31                 // Field recordBuffer:Ljava/nio/ByteBuffer;
      92: aload_0
      93: iload_2
      94: putfield      #32                 // Field blockSize:I
      97: aload_0
      98: iload         5
     100: putfield      #33                 // Field lenient:Z
     103: aload_0
     104: invokespecial #34                 // Method getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     107: dup
     108: astore        6
     110: ifnull        126
     113: aload_0
     114: getfield      #18                 // Field entries:Ljava/util/LinkedList;
     117: aload         6
     119: invokevirtual #35                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     122: pop
     123: goto          103
     126: return

  private org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isAtEOF:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      13: ifnull        43
      16: aload_0
      17: aload_0
      18: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      21: invokevirtual #38                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDataOffset:()J
      24: aload_0
      25: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      28: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      31: ladd
      32: invokespecial #40                 // Method repositionForwardTo:(J)V
      35: aload_0
      36: invokespecial #41                 // Method throwExceptionIfPositionIsNotInArchive:()V
      39: aload_0
      40: invokespecial #42                 // Method skipRecordPadding:()V
      43: aload_0
      44: invokespecial #43                 // Method getRecord:()Ljava/nio/ByteBuffer;
      47: astore_1
      48: aconst_null
      49: aload_1
      50: if_acmpne     60
      53: aload_0
      54: aconst_null
      55: putfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      58: aconst_null
      59: areturn
      60: aload_0
      61: new           #44                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry
      64: dup
      65: aload_1
      66: invokevirtual #45                 // Method java/nio/ByteBuffer.array:()[B
      69: aload_0
      70: getfield      #28                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      73: aload_0
      74: getfield      #33                 // Field lenient:Z
      77: aload_0
      78: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      81: invokeinterface #46,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
      86: invokespecial #47                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry."<init>":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZJ)V
      89: putfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      92: goto          107
      95: astore_2
      96: new           #49                 // class java/io/IOException
      99: dup
     100: ldc           #50                 // String Error detected parsing the header
     102: aload_2
     103: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: athrow
     107: aload_0
     108: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     111: invokevirtual #52                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNULongLinkEntry:()Z
     114: ifeq          145
     117: aload_0
     118: invokespecial #53                 // Method getLongNameData:()[B
     121: astore_2
     122: aload_2
     123: ifnonnull     128
     126: aconst_null
     127: areturn
     128: aload_0
     129: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     132: aload_0
     133: getfield      #28                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     136: aload_2
     137: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     142: invokevirtual #55                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setLinkName:(Ljava/lang/String;)V
     145: aload_0
     146: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     149: invokevirtual #56                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNULongNameEntry:()Z
     152: ifeq          230
     155: aload_0
     156: invokespecial #53                 // Method getLongNameData:()[B
     159: astore_2
     160: aload_2
     161: ifnonnull     166
     164: aconst_null
     165: areturn
     166: aload_0
     167: getfield      #28                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     170: aload_2
     171: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     176: astore_3
     177: aload_0
     178: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     181: aload_3
     182: invokevirtual #57                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V
     185: aload_0
     186: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     189: invokevirtual #58                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z
     192: ifeq          230
     195: aload_3
     196: ldc           #59                 // String /
     198: invokevirtual #60                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     201: ifne          230
     204: aload_0
     205: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     208: new           #61                 // class java/lang/StringBuilder
     211: dup
     212: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
     215: aload_3
     216: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: ldc           #59                 // String /
     221: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     227: invokevirtual #57                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V
     230: aload_0
     231: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     234: invokevirtual #65                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z
     237: ifeq          244
     240: aload_0
     241: invokespecial #66                 // Method readGlobalPaxHeaders:()V
     244: aload_0
     245: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     248: invokevirtual #67                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxHeader:()Z
     251: ifeq          261
     254: aload_0
     255: invokespecial #68                 // Method paxHeaders:()V
     258: goto          285
     261: aload_0
     262: getfield      #24                 // Field globalPaxHeaders:Ljava/util/Map;
     265: invokeinterface #69,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     270: ifne          285
     273: aload_0
     274: aload_0
     275: getfield      #24                 // Field globalPaxHeaders:Ljava/util/Map;
     278: aload_0
     279: getfield      #21                 // Field globalSparseHeaders:Ljava/util/List;
     282: invokespecial #70                 // Method applyPaxHeadersToCurrentEntry:(Ljava/util/Map;Ljava/util/List;)V
     285: goto          300
     288: astore_2
     289: new           #49                 // class java/io/IOException
     292: dup
     293: ldc           #72                 // String Error detected parsing the pax header
     295: aload_2
     296: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     299: athrow
     300: aload_0
     301: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     304: invokevirtual #73                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isOldGNUSparse:()Z
     307: ifeq          314
     310: aload_0
     311: invokespecial #74                 // Method readOldGNUSparse:()V
     314: aload_0
     315: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     318: areturn
    Exception table:
       from    to  target type
          60    92    95   Class java/lang/IllegalArgumentException
         244   285   288   Class java/lang/NumberFormatException

  private void readOldGNUSparse() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: invokevirtual #75                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isExtended:()Z
       7: ifeq          85
      10: aload_0
      11: invokespecial #43                 // Method getRecord:()Ljava/nio/ByteBuffer;
      14: astore_2
      15: aload_2
      16: ifnonnull     29
      19: new           #49                 // class java/io/IOException
      22: dup
      23: ldc           #76                 // String premature end of tar archive. Didn\'t find extended_header after header with extended flag.
      25: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #78                 // class org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry
      32: dup
      33: aload_2
      34: invokevirtual #45                 // Method java/nio/ByteBuffer.array:()[B
      37: invokespecial #79                 // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry."<init>":([B)V
      40: astore_1
      41: aload_0
      42: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      45: invokevirtual #80                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSparseHeaders:()Ljava/util/List;
      48: aload_1
      49: invokevirtual #81                 // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.getSparseHeaders:()Ljava/util/List;
      52: invokeinterface #82,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: aload_0
      59: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      62: aload_0
      63: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      66: invokevirtual #38                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDataOffset:()J
      69: aload_0
      70: getfield      #29                 // Field recordSize:I
      73: i2l
      74: ladd
      75: invokevirtual #83                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDataOffset:(J)V
      78: aload_1
      79: invokevirtual #84                 // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:()Z
      82: ifne          10
      85: aload_0
      86: invokespecial #85                 // Method buildSparseInputStreams:()V
      89: return

  private void buildSparseInputStreams() throws java.io.IOException;
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      12: invokevirtual #86                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getOrderedSparseHeaders:()Ljava/util/List;
      15: astore_2
      16: new           #87                 // class org/apache/commons/compress/archivers/tar/TarArchiveSparseZeroInputStream
      19: dup
      20: invokespecial #88                 // Method org/apache/commons/compress/archivers/tar/TarArchiveSparseZeroInputStream."<init>":()V
      23: astore_3
      24: lconst_0
      25: lstore        4
      27: lconst_0
      28: lstore        6
      30: aload_2
      31: invokeinterface #89,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore        8
      38: aload         8
      40: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          211
      48: aload         8
      50: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #92                 // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse
      58: astore        9
      60: aload         9
      62: invokevirtual #93                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J
      65: lload         4
      67: lsub
      68: lstore        10
      70: lload         10
      72: lconst_0
      73: lcmp
      74: ifge          87
      77: new           #49                 // class java/io/IOException
      80: dup
      81: ldc           #94                 // String Corrupted struct sparse detected
      83: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: lload         10
      89: lconst_0
      90: lcmp
      91: ifle          118
      94: aload_1
      95: new           #95                 // class org/apache/commons/compress/utils/BoundedInputStream
      98: dup
      99: aload_3
     100: lload         10
     102: invokespecial #96                 // Method org/apache/commons/compress/utils/BoundedInputStream."<init>":(Ljava/io/InputStream;J)V
     105: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     110: pop
     111: lload         6
     113: lload         10
     115: ladd
     116: lstore        6
     118: aload         9
     120: invokevirtual #98                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J
     123: lconst_0
     124: lcmp
     125: ifle          195
     128: aload_0
     129: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     132: invokevirtual #38                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDataOffset:()J
     135: aload         9
     137: invokevirtual #93                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J
     140: ladd
     141: lload         6
     143: lsub
     144: lstore        12
     146: lload         12
     148: aload         9
     150: invokevirtual #98                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J
     153: ladd
     154: lload         12
     156: lcmp
     157: ifge          170
     160: new           #49                 // class java/io/IOException
     163: dup
     164: ldc           #99                 // String Unreadable TAR archive, sparse block offset or length too big
     166: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: aload_1
     171: new           #100                // class org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream
     174: dup
     175: lload         12
     177: aload         9
     179: invokevirtual #98                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J
     182: aload_0
     183: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
     186: invokespecial #101                // Method org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream."<init>":(JJLjava/nio/channels/SeekableByteChannel;)V
     189: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     194: pop
     195: aload         9
     197: invokevirtual #93                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J
     200: aload         9
     202: invokevirtual #98                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J
     205: ladd
     206: lstore        4
     208: goto          38
     211: aload_0
     212: getfield      #1                  // Field sparseInputStreams:Ljava/util/Map;
     215: aload_0
     216: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     219: invokevirtual #102                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getName:()Ljava/lang/String;
     222: aload_1
     223: invokeinterface #103,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     228: pop
     229: return

  private void applyPaxHeadersToCurrentEntry(java.util.Map<java.lang.String, java.lang.String>, java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: aload_1
       5: invokevirtual #104                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.updateEntryFromPaxHeaders:(Ljava/util/Map;)V
       8: aload_0
       9: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      12: aload_2
      13: invokevirtual #105                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSparseHeaders:(Ljava/util/List;)V
      16: return

  private void paxHeaders() throws java.io.IOException;
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_0
      10: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      13: invokevirtual #106                // Method getInputStream:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Ljava/io/InputStream;
      16: astore_3
      17: aconst_null
      18: astore        4
      20: aload_3
      21: aload_1
      22: aload_0
      23: getfield      #24                 // Field globalPaxHeaders:Ljava/util/Map;
      26: aload_0
      27: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      30: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      33: invokestatic  #107                // Method org/apache/commons/compress/archivers/tar/TarUtils.parsePaxHeaders:(Ljava/io/InputStream;Ljava/util/List;Ljava/util/Map;J)Ljava/util/Map;
      36: astore_2
      37: aload_3
      38: ifnull        118
      41: aload         4
      43: ifnull        65
      46: aload_3
      47: invokevirtual #108                // Method java/io/InputStream.close:()V
      50: goto          118
      53: astore        5
      55: aload         4
      57: aload         5
      59: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      62: goto          118
      65: aload_3
      66: invokevirtual #108                // Method java/io/InputStream.close:()V
      69: goto          118
      72: astore        5
      74: aload         5
      76: astore        4
      78: aload         5
      80: athrow
      81: astore        6
      83: aload_3
      84: ifnull        115
      87: aload         4
      89: ifnull        111
      92: aload_3
      93: invokevirtual #108                // Method java/io/InputStream.close:()V
      96: goto          115
      99: astore        7
     101: aload         4
     103: aload         7
     105: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     108: goto          115
     111: aload_3
     112: invokevirtual #108                // Method java/io/InputStream.close:()V
     115: aload         6
     117: athrow
     118: aload_2
     119: ldc           #111                // String GNU.sparse.map
     121: invokeinterface #112,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     126: ifeq          151
     129: new           #19                 // class java/util/ArrayList
     132: dup
     133: aload_2
     134: ldc           #111                // String GNU.sparse.map
     136: invokeinterface #113,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     141: checkcast     #114                // class java/lang/String
     144: invokestatic  #115                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseFromPAX01SparseHeaders:(Ljava/lang/String;)Ljava/util/List;
     147: invokespecial #116                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     150: astore_1
     151: aload_0
     152: invokespecial #34                 // Method getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     155: pop
     156: aload_0
     157: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     160: ifnonnull     173
     163: new           #49                 // class java/io/IOException
     166: dup
     167: ldc           #117                // String premature end of tar archive. Didn\'t find any entry after PAX header.
     169: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: aload_0
     174: aload_2
     175: aload_1
     176: invokespecial #70                 // Method applyPaxHeadersToCurrentEntry:(Ljava/util/Map;Ljava/util/List;)V
     179: aload_0
     180: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     183: invokevirtual #118                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxGNU1XSparse:()Z
     186: ifeq          319
     189: aload_0
     190: aload_0
     191: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     194: invokevirtual #106                // Method getInputStream:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Ljava/io/InputStream;
     197: astore_3
     198: aconst_null
     199: astore        4
     201: aload_3
     202: aload_0
     203: getfield      #29                 // Field recordSize:I
     206: invokestatic  #119                // Method org/apache/commons/compress/archivers/tar/TarUtils.parsePAX1XSparseHeaders:(Ljava/io/InputStream;I)Ljava/util/List;
     209: astore_1
     210: aload_3
     211: ifnull        291
     214: aload         4
     216: ifnull        238
     219: aload_3
     220: invokevirtual #108                // Method java/io/InputStream.close:()V
     223: goto          291
     226: astore        5
     228: aload         4
     230: aload         5
     232: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     235: goto          291
     238: aload_3
     239: invokevirtual #108                // Method java/io/InputStream.close:()V
     242: goto          291
     245: astore        5
     247: aload         5
     249: astore        4
     251: aload         5
     253: athrow
     254: astore        8
     256: aload_3
     257: ifnull        288
     260: aload         4
     262: ifnull        284
     265: aload_3
     266: invokevirtual #108                // Method java/io/InputStream.close:()V
     269: goto          288
     272: astore        9
     274: aload         4
     276: aload         9
     278: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     281: goto          288
     284: aload_3
     285: invokevirtual #108                // Method java/io/InputStream.close:()V
     288: aload         8
     290: athrow
     291: aload_0
     292: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     295: aload_1
     296: invokevirtual #105                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSparseHeaders:(Ljava/util/List;)V
     299: aload_0
     300: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     303: aload_0
     304: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     307: invokevirtual #38                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getDataOffset:()J
     310: aload_0
     311: getfield      #29                 // Field recordSize:I
     314: i2l
     315: ladd
     316: invokevirtual #83                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDataOffset:(J)V
     319: aload_0
     320: invokespecial #85                 // Method buildSparseInputStreams:()V
     323: return
    Exception table:
       from    to  target type
          46    50    53   Class java/lang/Throwable
          20    37    72   Class java/lang/Throwable
          20    37    81   any
          92    96    99   Class java/lang/Throwable
          72    83    81   any
         219   223   226   Class java/lang/Throwable
         201   210   245   Class java/lang/Throwable
         201   210   254   any
         265   269   272   Class java/lang/Throwable
         245   256   254   any

  private void readGlobalPaxHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       5: invokevirtual #106                // Method getInputStream:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Ljava/io/InputStream;
       8: astore_1
       9: aconst_null
      10: astore_2
      11: aload_0
      12: aload_1
      13: aload_0
      14: getfield      #21                 // Field globalSparseHeaders:Ljava/util/List;
      17: aload_0
      18: getfield      #24                 // Field globalPaxHeaders:Ljava/util/Map;
      21: aload_0
      22: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      25: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      28: invokestatic  #107                // Method org/apache/commons/compress/archivers/tar/TarUtils.parsePaxHeaders:(Ljava/io/InputStream;Ljava/util/List;Ljava/util/Map;J)Ljava/util/Map;
      31: putfield      #24                 // Field globalPaxHeaders:Ljava/util/Map;
      34: aload_1
      35: ifnull        105
      38: aload_2
      39: ifnull        58
      42: aload_1
      43: invokevirtual #108                // Method java/io/InputStream.close:()V
      46: goto          105
      49: astore_3
      50: aload_2
      51: aload_3
      52: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      55: goto          105
      58: aload_1
      59: invokevirtual #108                // Method java/io/InputStream.close:()V
      62: goto          105
      65: astore_3
      66: aload_3
      67: astore_2
      68: aload_3
      69: athrow
      70: astore        4
      72: aload_1
      73: ifnull        102
      76: aload_2
      77: ifnull        98
      80: aload_1
      81: invokevirtual #108                // Method java/io/InputStream.close:()V
      84: goto          102
      87: astore        5
      89: aload_2
      90: aload         5
      92: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          102
      98: aload_1
      99: invokevirtual #108                // Method java/io/InputStream.close:()V
     102: aload         4
     104: athrow
     105: aload_0
     106: invokespecial #34                 // Method getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     109: pop
     110: aload_0
     111: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     114: ifnonnull     127
     117: new           #49                 // class java/io/IOException
     120: dup
     121: ldc           #72                 // String Error detected parsing the pax header
     123: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: return
    Exception table:
       from    to  target type
          42    46    49   Class java/lang/Throwable
          11    34    65   Class java/lang/Throwable
          11    34    70   any
          80    84    87   Class java/lang/Throwable
          65    72    70   any

  private byte[] getLongNameData() throws java.io.IOException;
    Code:
       0: new           #120                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #121                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_0
      10: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      13: invokevirtual #106                // Method getInputStream:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Ljava/io/InputStream;
      16: astore_3
      17: aconst_null
      18: astore        4
      20: aload_3
      21: aload_0
      22: getfield      #15                 // Field smallBuf:[B
      25: invokevirtual #122                // Method java/io/InputStream.read:([B)I
      28: dup
      29: istore_2
      30: iflt          46
      33: aload_1
      34: aload_0
      35: getfield      #15                 // Field smallBuf:[B
      38: iconst_0
      39: iload_2
      40: invokevirtual #123                // Method java/io/ByteArrayOutputStream.write:([BII)V
      43: goto          20
      46: aload_3
      47: ifnull        127
      50: aload         4
      52: ifnull        74
      55: aload_3
      56: invokevirtual #108                // Method java/io/InputStream.close:()V
      59: goto          127
      62: astore        5
      64: aload         4
      66: aload         5
      68: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      71: goto          127
      74: aload_3
      75: invokevirtual #108                // Method java/io/InputStream.close:()V
      78: goto          127
      81: astore        5
      83: aload         5
      85: astore        4
      87: aload         5
      89: athrow
      90: astore        6
      92: aload_3
      93: ifnull        124
      96: aload         4
      98: ifnull        120
     101: aload_3
     102: invokevirtual #108                // Method java/io/InputStream.close:()V
     105: goto          124
     108: astore        7
     110: aload         4
     112: aload         7
     114: invokevirtual #110                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     117: goto          124
     120: aload_3
     121: invokevirtual #108                // Method java/io/InputStream.close:()V
     124: aload         6
     126: athrow
     127: aload_0
     128: invokespecial #34                 // Method getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     131: pop
     132: aload_0
     133: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
     136: ifnonnull     141
     139: aconst_null
     140: areturn
     141: aload_1
     142: invokevirtual #124                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     145: astore_3
     146: aload_3
     147: arraylength
     148: istore_2
     149: iload_2
     150: ifle          167
     153: aload_3
     154: iload_2
     155: iconst_1
     156: isub
     157: baload
     158: ifne          167
     161: iinc          2, -1
     164: goto          149
     167: iload_2
     168: aload_3
     169: arraylength
     170: if_icmpeq     190
     173: iload_2
     174: newarray       byte
     176: astore        4
     178: aload_3
     179: iconst_0
     180: aload         4
     182: iconst_0
     183: iload_2
     184: invokestatic  #125                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     187: aload         4
     189: astore_3
     190: aload_3
     191: areturn
    Exception table:
       from    to  target type
          55    59    62   Class java/lang/Throwable
          20    46    81   Class java/lang/Throwable
          20    46    90   any
         101   105   108   Class java/lang/Throwable
          81    92    90   any

  private void skipRecordPadding() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #126                // Method isDirectory:()Z
       4: ifne          78
       7: aload_0
       8: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      11: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      14: lconst_0
      15: lcmp
      16: ifle          78
      19: aload_0
      20: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      23: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      26: aload_0
      27: getfield      #29                 // Field recordSize:I
      30: i2l
      31: lrem
      32: lconst_0
      33: lcmp
      34: ifeq          78
      37: aload_0
      38: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      41: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      44: aload_0
      45: getfield      #29                 // Field recordSize:I
      48: i2l
      49: ldiv
      50: lconst_1
      51: ladd
      52: lstore_1
      53: lload_1
      54: aload_0
      55: getfield      #29                 // Field recordSize:I
      58: i2l
      59: lmul
      60: aload_0
      61: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      64: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      67: lsub
      68: lstore_3
      69: aload_0
      70: lload_3
      71: invokespecial #127                // Method repositionForwardBy:(J)V
      74: aload_0
      75: invokespecial #41                 // Method throwExceptionIfPositionIsNotInArchive:()V
      78: return

  private void repositionForwardTo(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #46,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
       9: lstore_3
      10: lload_1
      11: lload_3
      12: lcmp
      13: ifge          26
      16: new           #49                 // class java/io/IOException
      19: dup
      20: ldc           #128                // String trying to move backwards inside of the archive
      22: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      30: lload_1
      31: invokeinterface #129,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      36: pop
      37: return

  private void repositionForwardBy(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
       5: invokeinterface #46,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
      10: lload_1
      11: ladd
      12: invokespecial #40                 // Method repositionForwardTo:(J)V
      15: return

  private void throwExceptionIfPositionIsNotInArchive() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #130,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
       9: aload_0
      10: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      13: invokeinterface #46,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
      18: lcmp
      19: ifge          32
      22: new           #49                 // class java/io/IOException
      25: dup
      26: ldc           #131                // String Truncated TAR archive
      28: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: return

  private java.nio.ByteBuffer getRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #132                // Method readRecord:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokespecial #133                // Method isEOFRecord:(Ljava/nio/ByteBuffer;)Z
      11: invokevirtual #134                // Method setAtEOF:(Z)V
      14: aload_0
      15: invokevirtual #36                 // Method isAtEOF:()Z
      18: ifeq          35
      21: aload_1
      22: ifnull        35
      25: aload_0
      26: invokespecial #135                // Method tryToConsumeSecondEOFRecord:()V
      29: aload_0
      30: invokespecial #136                // Method consumeRemainderOfLastBlock:()V
      33: aconst_null
      34: astore_1
      35: aload_1
      36: areturn

  private void tryToConsumeSecondEOFRecord() throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: aload_0
       4: invokespecial #132                // Method readRecord:()Ljava/nio/ByteBuffer;
       7: invokespecial #133                // Method isEOFRecord:(Ljava/nio/ByteBuffer;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: istore_1
      19: iload_1
      20: ifeq          83
      23: aload_0
      24: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      27: aload_0
      28: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      31: invokeinterface #46,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
      36: aload_0
      37: getfield      #29                 // Field recordSize:I
      40: i2l
      41: lsub
      42: invokeinterface #129,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      47: pop
      48: goto          83
      51: astore_2
      52: iload_1
      53: ifeq          81
      56: aload_0
      57: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      60: aload_0
      61: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      64: invokeinterface #46,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
      69: aload_0
      70: getfield      #29                 // Field recordSize:I
      73: i2l
      74: lsub
      75: invokeinterface #129,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      80: pop
      81: aload_2
      82: athrow
      83: return
    Exception table:
       from    to  target type
           2    19    51   any

  private void consumeRemainderOfLastBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #46,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
       9: aload_0
      10: getfield      #32                 // Field blockSize:I
      13: i2l
      14: lrem
      15: lstore_1
      16: lload_1
      17: lconst_0
      18: lcmp
      19: ifle          33
      22: aload_0
      23: aload_0
      24: getfield      #32                 // Field blockSize:I
      27: i2l
      28: lload_1
      29: lsub
      30: invokespecial #127                // Method repositionForwardBy:(J)V
      33: return

  private java.nio.ByteBuffer readRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field recordBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #137                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      12: aload_0
      13: getfield      #31                 // Field recordBuffer:Ljava/nio/ByteBuffer;
      16: invokeinterface #138,  2          // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      21: istore_1
      22: iload_1
      23: aload_0
      24: getfield      #29                 // Field recordSize:I
      27: if_icmpeq     32
      30: aconst_null
      31: areturn
      32: aload_0
      33: getfield      #31                 // Field recordBuffer:Ljava/nio/ByteBuffer;
      36: areturn

  public java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveEntry> getEntries();
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #18                 // Field entries:Ljava/util/LinkedList;
       8: invokespecial #116                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  private boolean isEOFRecord(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_1
       5: invokevirtual #45                 // Method java/nio/ByteBuffer.array:()[B
       8: aload_0
       9: getfield      #29                 // Field recordSize:I
      12: invokestatic  #139                // Method org/apache/commons/compress/utils/ArchiveUtils.isArrayZero:([BI)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  protected final boolean isAtEOF();
    Code:
       0: aload_0
       1: getfield      #26                 // Field hasHitEOF:Z
       4: ireturn

  protected final void setAtEOF(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field hasHitEOF:Z
       5: return

  private boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
       4: ifnull        21
       7: aload_0
       8: getfield      #37                 // Field currEntry:Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      11: invokevirtual #58                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.io.InputStream getInputStream(org.apache.commons.compress.archivers.tar.TarArchiveEntry) throws java.io.IOException;
    Code:
       0: new           #140                // class org/apache/commons/compress/archivers/tar/TarFile$BoundedTarEntryInputStream
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
      10: invokespecial #141                // Method org/apache/commons/compress/archivers/tar/TarFile$BoundedTarEntryInputStream."<init>":(Lorg/apache/commons/compress/archivers/tar/TarFile;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/nio/channels/SeekableByteChannel;)V
      13: areturn
      14: astore_2
      15: new           #49                 // class java/io/IOException
      18: dup
      19: ldc           #143                // String Corrupted TAR archive. Can\'t read entry
      21: aload_2
      22: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/RuntimeException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field archive:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #144,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
       9: return

  static java.util.Map access$000(org.apache.commons.compress.archivers.tar.TarFile);
    Code:
       0: aload_0
       1: getfield      #1                  // Field sparseInputStreams:Ljava/util/Map;
       4: areturn
}
