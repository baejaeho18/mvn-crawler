Compiled from "ParallelScatterZipCreator.java"
public class org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator {
  private final java.util.Deque<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> streams;

  private final java.util.concurrent.ExecutorService es;

  private final org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier backingStoreSupplier;

  private final java.util.Deque<java.util.concurrent.Future<? extends org.apache.commons.compress.archivers.zip.ScatterZipOutputStream>> futures;

  private final long startedAt;

  private long compressionDoneAt;

  private long scatterDoneAt;

  private final int compressionLevel;

  private final java.lang.ThreadLocal<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> tlScatterStreams;

  private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream createDeferred(org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;
       6: astore_2
       7: aload_0
       8: getfield      #5                  // Field compressionLevel:I
      11: aload_2
      12: invokestatic  #6                  // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      15: astore_3
      16: new           #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      19: dup
      20: aload_2
      21: aload_3
      22: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream."<init>":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V
      25: areturn

  public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       4: invokevirtual #10                 // Method java/lang/Runtime.availableProcessors:()I
       7: invokestatic  #11                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      10: invokespecial #12                 // Method "<init>":(Ljava/util/concurrent/ExecutorService;)V
      13: return

  public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: new           #13                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier
       5: dup
       6: aconst_null
       7: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier."<init>":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V
      10: invokespecial #15                 // Method "<init>":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V
      13: return

  public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator(java.util.concurrent.ExecutorService, org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_m1
       4: invokespecial #17                 // Method "<init>":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V
       7: return

  public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator(java.util.concurrent.ExecutorService, org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/concurrent/ConcurrentLinkedDeque
       8: dup
       9: invokespecial #20                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      12: putfield      #1                  // Field streams:Ljava/util/Deque;
      15: aload_0
      16: new           #19                 // class java/util/concurrent/ConcurrentLinkedDeque
      19: dup
      20: invokespecial #20                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      23: putfield      #21                 // Field futures:Ljava/util/Deque;
      26: aload_0
      27: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
      30: putfield      #23                 // Field startedAt:J
      33: aload_0
      34: new           #24                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1
      37: dup
      38: aload_0
      39: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1."<init>":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V
      42: putfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;
      45: iload_3
      46: iflt          55
      49: iload_3
      50: bipush        9
      52: if_icmple     70
      55: iload_3
      56: iconst_m1
      57: if_icmpeq     70
      60: new           #27                 // class java/lang/IllegalArgumentException
      63: dup
      64: ldc           #28                 // String Compression level is expected between -1~9
      66: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: aload_2
      72: putfield      #3                  // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;
      75: aload_0
      76: aload_1
      77: putfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;
      80: aload_0
      81: iload_3
      82: putfield      #5                  // Field compressionLevel:I
      85: return

  public void addArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokevirtual #31                 // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;
       7: invokevirtual #32                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V
      10: return

  public void addArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #33                 // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;
       6: invokevirtual #32                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V
       9: return

  public final void submit(java.util.concurrent.Callable<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #34,  0             // InvokeDynamic #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
       8: invokevirtual #32                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V
      11: return

  public final void submitStreamAwareCallable(java.util.concurrent.Callable<? extends org.apache.commons.compress.archivers.zip.ScatterZipOutputStream>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field futures:Ljava/util/Deque;
       4: aload_0
       5: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;
       8: aload_1
       9: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      14: invokeinterface #36,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      19: pop
      20: return

  public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
       4: istore_3
       5: iload_3
       6: iconst_m1
       7: if_icmpne     37
      10: new           #27                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #39                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #41                 // String Method must be set on zipArchiveEntry:
      23: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_1
      38: aload_2
      39: invokestatic  #45                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;
      42: astore        4
      44: aload_0
      45: aload         4
      47: invokedynamic #46,  0             // InvokeDynamic #1:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;
      52: areturn

  public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #47,  0             // InvokeDynamic #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;
       7: areturn

  public void writeTo(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field futures:Ljava/util/Deque;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #51                 // class java/util/concurrent/Future
      28: astore_3
      29: aload_3
      30: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      35: pop
      36: goto          10
      39: aload_0
      40: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;
      43: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      48: goto          65
      51: astore        4
      53: aload_0
      54: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;
      57: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      62: aload         4
      64: athrow
      65: aload_0
      66: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;
      69: ldc2_w        #54                 // long 60000l
      72: getstatic     #56                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      75: invokeinterface #57,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      80: pop
      81: aload_0
      82: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
      85: putfield      #58                 // Field compressionDoneAt:J
      88: aload_0
      89: getfield      #21                 // Field futures:Ljava/util/Deque;
      92: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      97: astore_2
      98: aload_2
      99: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     104: ifeq          140
     107: aload_2
     108: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #51                 // class java/util/concurrent/Future
     116: astore_3
     117: aload_3
     118: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
     123: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
     126: astore        4
     128: aload         4
     130: invokevirtual #59                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
     133: aload_1
     134: invokevirtual #60                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V
     137: goto          98
     140: aload_0
     141: getfield      #1                  // Field streams:Ljava/util/Deque;
     144: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     149: astore_2
     150: aload_2
     151: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     156: ifeq          176
     159: aload_2
     160: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     165: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
     168: astore_3
     169: aload_3
     170: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V
     173: goto          150
     176: aload_0
     177: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
     180: putfield      #62                 // Field scatterDoneAt:J
     183: aload_0
     184: invokespecial #63                 // Method closeAll:()V
     187: goto          199
     190: astore        5
     192: aload_0
     193: invokespecial #63                 // Method closeAll:()V
     196: aload         5
     198: athrow
     199: return
    Exception table:
       from    to  target type
           0    39    51   any
          51    53    51   any
           0   183   190   any
         190   192   190   any

  public org.apache.commons.compress.archivers.zip.ScatterStatistics getStatisticsMessage();
    Code:
       0: new           #64                 // class org/apache/commons/compress/archivers/zip/ScatterStatistics
       3: dup
       4: aload_0
       5: getfield      #58                 // Field compressionDoneAt:J
       8: aload_0
       9: getfield      #23                 // Field startedAt:J
      12: lsub
      13: aload_0
      14: getfield      #62                 // Field scatterDoneAt:J
      17: aload_0
      18: getfield      #58                 // Field compressionDoneAt:J
      21: lsub
      22: invokespecial #65                 // Method org/apache/commons/compress/archivers/zip/ScatterStatistics."<init>":(JJ)V
      25: areturn

  private void closeAll();
    Code:
       0: aload_0
       1: getfield      #1                  // Field streams:Ljava/util/Deque;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_1
      20: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      28: astore_2
      29: aload_2
      30: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V
      33: goto          37
      36: astore_3
      37: goto          10
      40: return
    Exception table:
       from    to  target type
          29    33    36   Class java/io/IOException

  private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream lambda$createCallable$2(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;
       4: invokevirtual #67                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier.get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;
      18: invokevirtual #69                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V
      21: aload_2
      22: areturn

  private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream lambda$createCallable$1(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;
       4: invokevirtual #67                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokevirtual #69                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V
      16: aload_2
      17: areturn

  private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream lambda$submit$0(java.util.concurrent.Callable) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #70,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;
      11: invokevirtual #67                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      14: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      17: areturn

  static org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier access$000(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;
       4: areturn

  static org.apache.commons.compress.archivers.zip.ScatterZipOutputStream access$100(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator, org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;
       5: areturn

  static java.util.Deque access$200(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator);
    Code:
       0: aload_0
       1: getfield      #1                  // Field streams:Ljava/util/Deque;
       4: areturn
}
