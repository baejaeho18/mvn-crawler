Compiled from "ZipArchiveInputStream.java"
class org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream extends java.io.InputStream {
  private final java.io.InputStream in;

  private final long max;

  private long pos;

  final org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0;

  public org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream, java.io.InputStream, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;
       5: aload_0
       6: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       9: aload_0
      10: lload_3
      11: putfield      #3                  // Field max:J
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field in:Ljava/io/InputStream;
      19: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field max:J
       4: lconst_0
       5: lcmp
       6: iflt          23
       9: aload_0
      10: getfield      #5                  // Field pos:J
      13: aload_0
      14: getfield      #3                  // Field max:J
      17: lcmp
      18: iflt          23
      21: iconst_m1
      22: ireturn
      23: aload_0
      24: getfield      #4                  // Field in:Ljava/io/InputStream;
      27: invokevirtual #6                  // Method java/io/InputStream.read:()I
      30: istore_1
      31: aload_0
      32: dup
      33: getfield      #5                  // Field pos:J
      36: lconst_1
      37: ladd
      38: putfield      #5                  // Field pos:J
      41: aload_0
      42: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;
      45: iconst_1
      46: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      49: aload_0
      50: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;
      53: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      56: invokestatic  #9                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$708:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J
      59: pop2
      60: iload_1
      61: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #10                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #3                  // Field max:J
      10: lconst_0
      11: lcmp
      12: iflt          29
      15: aload_0
      16: getfield      #5                  // Field pos:J
      19: aload_0
      20: getfield      #3                  // Field max:J
      23: lcmp
      24: iflt          29
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: getfield      #3                  // Field max:J
      33: lconst_0
      34: lcmp
      35: iflt          55
      38: iload_3
      39: i2l
      40: aload_0
      41: getfield      #3                  // Field max:J
      44: aload_0
      45: getfield      #5                  // Field pos:J
      48: lsub
      49: invokestatic  #11                 // Method java/lang/Math.min:(JJ)J
      52: goto          57
      55: iload_3
      56: i2l
      57: lstore        4
      59: aload_0
      60: getfield      #4                  // Field in:Ljava/io/InputStream;
      63: aload_1
      64: iload_2
      65: lload         4
      67: l2i
      68: invokevirtual #12                 // Method java/io/InputStream.read:([BII)I
      71: istore        6
      73: iload         6
      75: iconst_m1
      76: if_icmpne     81
      79: iconst_m1
      80: ireturn
      81: aload_0
      82: dup
      83: getfield      #5                  // Field pos:J
      86: iload         6
      88: i2l
      89: ladd
      90: putfield      #5                  // Field pos:J
      93: aload_0
      94: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;
      97: iload         6
      99: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
     102: aload_0
     103: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;
     106: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
     109: astore        7
     111: aload         7
     113: aload         7
     115: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$700:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J
     118: iload         6
     120: i2l
     121: ladd
     122: invokestatic  #15                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$702:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J
     125: pop2
     126: iload         6
     128: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field max:J
       4: lconst_0
       5: lcmp
       6: iflt          25
       9: lload_1
      10: aload_0
      11: getfield      #3                  // Field max:J
      14: aload_0
      15: getfield      #5                  // Field pos:J
      18: lsub
      19: invokestatic  #11                 // Method java/lang/Math.min:(JJ)J
      22: goto          26
      25: lload_1
      26: lstore_3
      27: aload_0
      28: getfield      #4                  // Field in:Ljava/io/InputStream;
      31: lload_3
      32: invokestatic  #16                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      35: lstore        5
      37: aload_0
      38: dup
      39: getfield      #5                  // Field pos:J
      42: lload         5
      44: ladd
      45: putfield      #5                  // Field pos:J
      48: lload         5
      50: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field max:J
       4: lconst_0
       5: lcmp
       6: iflt          23
       9: aload_0
      10: getfield      #5                  // Field pos:J
      13: aload_0
      14: getfield      #3                  // Field max:J
      17: lcmp
      18: iflt          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #4                  // Field in:Ljava/io/InputStream;
      27: invokevirtual #17                 // Method java/io/InputStream.available:()I
      30: ireturn
}
