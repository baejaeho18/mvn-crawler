Compiled from "ManagedClientConnectionImpl.java"
class org.apache.http.impl.conn.ManagedClientConnectionImpl implements org.apache.http.conn.ManagedClientConnection {
  private final org.apache.http.conn.ClientConnectionManager manager;

  private final org.apache.http.conn.ClientConnectionOperator operator;

  private volatile org.apache.http.impl.conn.HttpPoolEntry poolEntry;

  private volatile boolean reusable;

  private volatile long duration;

  org.apache.http.impl.conn.ManagedClientConnectionImpl(org.apache.http.conn.ClientConnectionManager, org.apache.http.conn.ClientConnectionOperator, org.apache.http.impl.conn.HttpPoolEntry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Connection manager
       7: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_2
      12: ldc           #4                  // String Connection operator
      14: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: pop
      18: aload_3
      19: ldc           #5                  // String HTTP pool entry
      21: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: aload_1
      27: putfield      #6                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
      30: aload_0
      31: aload_2
      32: putfield      #7                  // Field operator:Lorg/apache/http/conn/ClientConnectionOperator;
      35: aload_0
      36: aload_3
      37: putfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      40: aload_0
      41: iconst_0
      42: putfield      #9                  // Field reusable:Z
      45: aload_0
      46: ldc2_w        #10                 // long 9223372036854775807l
      49: putfield      #12                 // Field duration:J
      52: return

  public java.lang.String getId();
    Code:
       0: aconst_null
       1: areturn

  org.apache.http.impl.conn.HttpPoolEntry getPoolEntry();
    Code:
       0: aload_0
       1: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: areturn

  org.apache.http.impl.conn.HttpPoolEntry detach();
    Code:
       0: aload_0
       1: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      10: aload_1
      11: areturn

  public org.apache.http.conn.ClientConnectionManager getManager();
    Code:
       0: aload_0
       1: getfield      #6                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
       4: areturn

  private org.apache.http.conn.OperatedClientConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      15: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      18: areturn

  private org.apache.http.conn.OperatedClientConnection ensureConnection();
    Code:
       0: aload_0
       1: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #15                 // class org/apache/http/impl/conn/ConnectionShutdownException
      12: dup
      13: invokespecial #16                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      16: athrow
      17: aload_1
      18: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      21: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      24: areturn

  private org.apache.http.impl.conn.HttpPoolEntry ensurePoolEntry();
    Code:
       0: aload_0
       1: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #15                 // class org/apache/http/impl/conn/ConnectionShutdownException
      12: dup
      13: invokespecial #16                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      16: athrow
      17: aload_1
      18: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnull        30
       9: aload_1
      10: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      13: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      16: astore_2
      17: aload_1
      18: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      21: invokevirtual #18                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      24: aload_2
      25: invokeinterface #19,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.close:()V
      30: return

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnull        30
       9: aload_1
      10: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      13: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      16: astore_2
      17: aload_1
      18: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      21: invokevirtual #18                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      24: aload_2
      25: invokeinterface #20,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.shutdown:()V
      30: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method getConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #22,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isOpen:()Z
      15: ireturn
      16: iconst_0
      17: ireturn

  public boolean isStale();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method getConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #23,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isStale:()Z
      15: ireturn
      16: iconst_1
      17: ireturn

  public void setSocketTimeout(int);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.setSocketTimeout:(I)V
      12: return

  public int getSocketTimeout();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #26,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getSocketTimeout:()I
      11: ireturn

  public org.apache.http.HttpConnectionMetrics getMetrics();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #27,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getMetrics:()Lorg/apache/http/HttpConnectionMetrics;
      11: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #28,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.flush:()V
      11: return

  public boolean isResponseAvailable(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokeinterface #29,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isResponseAvailable:(I)Z
      12: ireturn

  public void receiveResponseEntity(org.apache.http.HttpResponse) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #30,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.receiveResponseEntity:(Lorg/apache/http/HttpResponse;)V
      12: return

  public org.apache.http.HttpResponse receiveResponseHeader() throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #31,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.receiveResponseHeader:()Lorg/apache/http/HttpResponse;
      11: areturn

  public void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #32,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.sendRequestEntity:(Lorg/apache/http/HttpEntityEnclosingRequest;)V
      12: return

  public void sendRequestHeader(org.apache.http.HttpRequest) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #33,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.sendRequestHeader:(Lorg/apache/http/HttpRequest;)V
      12: return

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #34,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getLocalAddress:()Ljava/net/InetAddress;
      11: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #35,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getLocalPort:()I
      11: ireturn

  public java.net.InetAddress getRemoteAddress();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #36,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getRemoteAddress:()Ljava/net/InetAddress;
      11: areturn

  public int getRemotePort();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #37,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getRemotePort:()I
      11: ireturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #38,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
      11: ireturn

  public void bind(java.net.Socket) throws java.io.IOException;
    Code:
       0: new           #39                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #40                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.net.Socket getSocket();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #41,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getSocket:()Ljava/net/Socket;
      11: areturn

  public javax.net.ssl.SSLSession getSSLSession();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokeinterface #41,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getSocket:()Ljava/net/Socket;
      13: astore_3
      14: aload_3
      15: instanceof    #42                 // class javax/net/ssl/SSLSocket
      18: ifeq          29
      21: aload_3
      22: checkcast     #42                 // class javax/net/ssl/SSLSocket
      25: invokevirtual #43                 // Method javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;
      28: astore_2
      29: aload_2
      30: areturn

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: instanceof    #44                 // class org/apache/http/protocol/HttpContext
       9: ifeq          23
      12: aload_2
      13: checkcast     #44                 // class org/apache/http/protocol/HttpContext
      16: aload_1
      17: invokeinterface #45,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      22: areturn
      23: aconst_null
      24: areturn

  public java.lang.Object removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: instanceof    #44                 // class org/apache/http/protocol/HttpContext
       9: ifeq          23
      12: aload_2
      13: checkcast     #44                 // class org/apache/http/protocol/HttpContext
      16: aload_1
      17: invokeinterface #46,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.removeAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      22: areturn
      23: aconst_null
      24: areturn

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_3
       5: aload_3
       6: instanceof    #44                 // class org/apache/http/protocol/HttpContext
       9: ifeq          23
      12: aload_3
      13: checkcast     #44                 // class org/apache/http/protocol/HttpContext
      16: aload_1
      17: aload_2
      18: invokeinterface #47,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      23: return

  public org.apache.http.conn.routing.HttpRoute getRoute();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method ensurePoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: invokevirtual #49                 // Method org/apache/http/impl/conn/HttpPoolEntry.getEffectiveRoute:()Lorg/apache/http/conn/routing/HttpRoute;
       9: areturn

  public void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #50                 // String Route
       3: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #51                 // String HTTP parameters
      10: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: dup
      16: astore        5
      18: monitorenter
      19: aload_0
      20: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: ifnonnull     34
      26: new           #15                 // class org/apache/http/impl/conn/ConnectionShutdownException
      29: dup
      30: invokespecial #16                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      38: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      41: astore        6
      43: aload         6
      45: ldc           #52                 // String Route tracker
      47: invokestatic  #53                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      50: aload         6
      52: invokevirtual #54                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      55: ifne          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ldc           #55                 // String Connection already open
      65: invokestatic  #56                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      68: aload_0
      69: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      72: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      75: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      78: astore        4
      80: aload         5
      82: monitorexit
      83: goto          94
      86: astore        7
      88: aload         5
      90: monitorexit
      91: aload         7
      93: athrow
      94: aload_1
      95: invokevirtual #57                 // Method org/apache/http/conn/routing/HttpRoute.getProxyHost:()Lorg/apache/http/HttpHost;
      98: astore        5
     100: aload_0
     101: getfield      #7                  // Field operator:Lorg/apache/http/conn/ClientConnectionOperator;
     104: aload         4
     106: aload         5
     108: ifnull        116
     111: aload         5
     113: goto          120
     116: aload_1
     117: invokevirtual #58                 // Method org/apache/http/conn/routing/HttpRoute.getTargetHost:()Lorg/apache/http/HttpHost;
     120: aload_1
     121: invokevirtual #59                 // Method org/apache/http/conn/routing/HttpRoute.getLocalAddress:()Ljava/net/InetAddress;
     124: aload_2
     125: aload_3
     126: invokeinterface #60,  6           // InterfaceMethod org/apache/http/conn/ClientConnectionOperator.openConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
     131: aload_0
     132: dup
     133: astore        6
     135: monitorenter
     136: aload_0
     137: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     140: ifnonnull     151
     143: new           #61                 // class java/io/InterruptedIOException
     146: dup
     147: invokespecial #62                 // Method java/io/InterruptedIOException."<init>":()V
     150: athrow
     151: aload_0
     152: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     155: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     158: astore        7
     160: aload         5
     162: ifnonnull     180
     165: aload         7
     167: aload         4
     169: invokeinterface #38,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
     174: invokevirtual #63                 // Method org/apache/http/conn/routing/RouteTracker.connectTarget:(Z)V
     177: goto          194
     180: aload         7
     182: aload         5
     184: aload         4
     186: invokeinterface #38,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
     191: invokevirtual #64                 // Method org/apache/http/conn/routing/RouteTracker.connectProxy:(Lorg/apache/http/HttpHost;Z)V
     194: aload         6
     196: monitorexit
     197: goto          208
     200: astore        8
     202: aload         6
     204: monitorexit
     205: aload         8
     207: athrow
     208: return
    Exception table:
       from    to  target type
          19    83    86   any
          86    91    86   any
         136   197   200   any
         200   205   200   any

  public void tunnelTarget(boolean, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_2
       1: ldc           #51                 // String HTTP parameters
       3: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: dup
       9: astore        5
      11: monitorenter
      12: aload_0
      13: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      16: ifnonnull     27
      19: new           #15                 // class org/apache/http/impl/conn/ConnectionShutdownException
      22: dup
      23: invokespecial #16                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      31: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      34: astore        6
      36: aload         6
      38: ldc           #52                 // String Route tracker
      40: invokestatic  #53                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: aload         6
      45: invokevirtual #54                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      48: ldc           #65                 // String Connection not open
      50: invokestatic  #56                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      53: aload         6
      55: invokevirtual #66                 // Method org/apache/http/conn/routing/RouteTracker.isTunnelled:()Z
      58: ifne          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ldc           #67                 // String Connection is already tunnelled
      68: invokestatic  #56                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      71: aload         6
      73: invokevirtual #68                 // Method org/apache/http/conn/routing/RouteTracker.getTargetHost:()Lorg/apache/http/HttpHost;
      76: astore_3
      77: aload_0
      78: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      81: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      84: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      87: astore        4
      89: aload         5
      91: monitorexit
      92: goto          103
      95: astore        7
      97: aload         5
      99: monitorexit
     100: aload         7
     102: athrow
     103: aload         4
     105: aconst_null
     106: aload_3
     107: iload_1
     108: aload_2
     109: invokeinterface #69,  5           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V
     114: aload_0
     115: dup
     116: astore        5
     118: monitorenter
     119: aload_0
     120: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     123: ifnonnull     134
     126: new           #61                 // class java/io/InterruptedIOException
     129: dup
     130: invokespecial #62                 // Method java/io/InterruptedIOException."<init>":()V
     133: athrow
     134: aload_0
     135: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     138: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     141: astore        6
     143: aload         6
     145: iload_1
     146: invokevirtual #70                 // Method org/apache/http/conn/routing/RouteTracker.tunnelTarget:(Z)V
     149: aload         5
     151: monitorexit
     152: goto          163
     155: astore        8
     157: aload         5
     159: monitorexit
     160: aload         8
     162: athrow
     163: return
    Exception table:
       from    to  target type
          12    92    95   any
          95   100    95   any
         119   152   155   any
         155   160   155   any

  public void tunnelProxy(org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #71                 // String Next proxy
       3: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #51                 // String HTTP parameters
      10: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: dup
      16: astore        5
      18: monitorenter
      19: aload_0
      20: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: ifnonnull     34
      26: new           #15                 // class org/apache/http/impl/conn/ConnectionShutdownException
      29: dup
      30: invokespecial #16                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      38: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      41: astore        6
      43: aload         6
      45: ldc           #52                 // String Route tracker
      47: invokestatic  #53                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      50: aload         6
      52: invokevirtual #54                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      55: ldc           #65                 // String Connection not open
      57: invokestatic  #56                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      60: aload_0
      61: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      64: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      67: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      70: astore        4
      72: aload         5
      74: monitorexit
      75: goto          86
      78: astore        7
      80: aload         5
      82: monitorexit
      83: aload         7
      85: athrow
      86: aload         4
      88: aconst_null
      89: aload_1
      90: iload_2
      91: aload_3
      92: invokeinterface #69,  5           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V
      97: aload_0
      98: dup
      99: astore        5
     101: monitorenter
     102: aload_0
     103: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     106: ifnonnull     117
     109: new           #61                 // class java/io/InterruptedIOException
     112: dup
     113: invokespecial #62                 // Method java/io/InterruptedIOException."<init>":()V
     116: athrow
     117: aload_0
     118: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     121: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     124: astore        6
     126: aload         6
     128: aload_1
     129: iload_2
     130: invokevirtual #72                 // Method org/apache/http/conn/routing/RouteTracker.tunnelProxy:(Lorg/apache/http/HttpHost;Z)V
     133: aload         5
     135: monitorexit
     136: goto          147
     139: astore        8
     141: aload         5
     143: monitorexit
     144: aload         8
     146: athrow
     147: return
    Exception table:
       from    to  target type
          19    75    78   any
          78    83    78   any
         102   136   139   any
         139   144   139   any

  public void layerProtocol(org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_2
       1: ldc           #51                 // String HTTP parameters
       3: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: dup
       9: astore        5
      11: monitorenter
      12: aload_0
      13: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      16: ifnonnull     27
      19: new           #15                 // class org/apache/http/impl/conn/ConnectionShutdownException
      22: dup
      23: invokespecial #16                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      31: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      34: astore        6
      36: aload         6
      38: ldc           #52                 // String Route tracker
      40: invokestatic  #53                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: aload         6
      45: invokevirtual #54                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      48: ldc           #65                 // String Connection not open
      50: invokestatic  #56                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      53: aload         6
      55: invokevirtual #66                 // Method org/apache/http/conn/routing/RouteTracker.isTunnelled:()Z
      58: ldc           #73                 // String Protocol layering without a tunnel not supported
      60: invokestatic  #56                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      63: aload         6
      65: invokevirtual #74                 // Method org/apache/http/conn/routing/RouteTracker.isLayered:()Z
      68: ifne          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ldc           #75                 // String Multiple protocol layering not supported
      78: invokestatic  #56                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      81: aload         6
      83: invokevirtual #68                 // Method org/apache/http/conn/routing/RouteTracker.getTargetHost:()Lorg/apache/http/HttpHost;
      86: astore_3
      87: aload_0
      88: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      91: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      94: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      97: astore        4
      99: aload         5
     101: monitorexit
     102: goto          113
     105: astore        7
     107: aload         5
     109: monitorexit
     110: aload         7
     112: athrow
     113: aload_0
     114: getfield      #7                  // Field operator:Lorg/apache/http/conn/ClientConnectionOperator;
     117: aload         4
     119: aload_3
     120: aload_1
     121: aload_2
     122: invokeinterface #76,  5           // InterfaceMethod org/apache/http/conn/ClientConnectionOperator.updateSecureConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
     127: aload_0
     128: dup
     129: astore        5
     131: monitorenter
     132: aload_0
     133: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     136: ifnonnull     147
     139: new           #61                 // class java/io/InterruptedIOException
     142: dup
     143: invokespecial #62                 // Method java/io/InterruptedIOException."<init>":()V
     146: athrow
     147: aload_0
     148: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     151: invokevirtual #17                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     154: astore        6
     156: aload         6
     158: aload         4
     160: invokeinterface #38,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
     165: invokevirtual #77                 // Method org/apache/http/conn/routing/RouteTracker.layerProtocol:(Z)V
     168: aload         5
     170: monitorexit
     171: goto          182
     174: astore        8
     176: aload         5
     178: monitorexit
     179: aload         8
     181: athrow
     182: return
    Exception table:
       from    to  target type
          12   102   105   any
         105   110   105   any
         132   171   174   any
         174   179   174   any

  public java.lang.Object getState();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method ensurePoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: invokevirtual #78                 // Method org/apache/http/impl/conn/HttpPoolEntry.getState:()Ljava/lang/Object;
       9: areturn

  public void setState(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method ensurePoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #79                 // Method org/apache/http/impl/conn/HttpPoolEntry.setState:(Ljava/lang/Object;)V
      10: return

  public void markReusable();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field reusable:Z
       5: return

  public void unmarkReusable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #9                  // Field reusable:Z
       5: return

  public boolean isMarkedReusable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field reusable:Z
       4: ireturn

  public void setIdleDuration(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          18
       6: aload_0
       7: aload_3
       8: lload_1
       9: invokevirtual #80                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      12: putfield      #12                 // Field duration:J
      15: goto          25
      18: aload_0
      19: ldc2_w        #81                 // long -1l
      22: putfield      #12                 // Field duration:J
      25: return

  public void releaseConnection();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       8: ifnonnull     14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: getfield      #6                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
      18: aload_0
      19: aload_0
      20: getfield      #12                 // Field duration:J
      23: getstatic     #83                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokeinterface #84,  5           // InterfaceMethod org/apache/http/conn/ClientConnectionManager.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      36: aload_1
      37: monitorexit
      38: goto          46
      41: astore_2
      42: aload_1
      43: monitorexit
      44: aload_2
      45: athrow
      46: return
    Exception table:
       from    to  target type
           4    13    41   any
          14    38    41   any
          41    44    41   any

  public void abortConnection();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       8: ifnonnull     14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: iconst_0
      16: putfield      #9                  // Field reusable:Z
      19: aload_0
      20: getfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: invokevirtual #13                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      26: checkcast     #14                 // class org/apache/http/conn/OperatedClientConnection
      29: astore_2
      30: aload_2
      31: invokeinterface #20,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.shutdown:()V
      36: goto          40
      39: astore_3
      40: aload_0
      41: getfield      #6                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
      44: aload_0
      45: aload_0
      46: getfield      #12                 // Field duration:J
      49: getstatic     #83                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokeinterface #84,  5           // InterfaceMethod org/apache/http/conn/ClientConnectionManager.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V
      57: aload_0
      58: aconst_null
      59: putfield      #8                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      62: aload_1
      63: monitorexit
      64: goto          74
      67: astore        4
      69: aload_1
      70: monitorexit
      71: aload         4
      73: athrow
      74: return
    Exception table:
       from    to  target type
          30    36    39   Class java/io/IOException
           4    13    67   any
          14    64    67   any
          67    71    67   any
}
