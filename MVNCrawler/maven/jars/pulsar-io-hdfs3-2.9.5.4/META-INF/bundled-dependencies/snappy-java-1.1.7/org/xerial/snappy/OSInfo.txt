Compiled from "OSInfo.java"
public class org.xerial.snappy.OSInfo {
  private static java.util.HashMap<java.lang.String, java.lang.String> archMapping;

  public static final java.lang.String X86;

  public static final java.lang.String X86_64;

  public static final java.lang.String IA64_32;

  public static final java.lang.String IA64;

  public static final java.lang.String PPC;

  public static final java.lang.String PPC64;

  public static final java.lang.String IBMZ;

  public static final java.lang.String IBMZ_64;

  public static final java.lang.String AARCH_64;

  public org.xerial.snappy.OSInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void main(java.lang.String[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmplt     48
       6: ldc           #2                  // String --os
       8: aload_0
       9: iconst_0
      10: aaload
      11: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          27
      17: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;
      20: invokestatic  #5                  // Method getOSName:()Ljava/lang/String;
      23: invokevirtual #6                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      26: return
      27: ldc           #7                  // String --arch
      29: aload_0
      30: iconst_0
      31: aaload
      32: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          48
      38: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;
      41: invokestatic  #8                  // Method getArchName:()Ljava/lang/String;
      44: invokevirtual #6                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      47: return
      48: getstatic     #4                  // Field java/lang/System.out:Ljava/io/PrintStream;
      51: invokestatic  #9                  // Method getNativeLibFolderPathForCurrentOS:()Ljava/lang/String;
      54: invokevirtual #6                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      57: return

  public static java.lang.String getNativeLibFolderPathForCurrentOS();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: invokestatic  #5                  // Method getOSName:()Ljava/lang/String;
      10: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: ldc           #13                 // String /
      15: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokestatic  #8                  // Method getArchName:()Ljava/lang/String;
      21: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public static java.lang.String getOSName();
    Code:
       0: ldc           #15                 // String os.name
       2: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #17                 // Method translateOSNameToFolderName:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public static boolean isAndroid();
    Code:
       0: ldc           #18                 // String java.runtime.name
       2: ldc           #19                 // String
       4: invokestatic  #20                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: invokevirtual #21                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      10: ldc           #22                 // String android
      12: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      15: ireturn

  static java.lang.String getHardwareName();
    Code:
       0: invokestatic  #24                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: ldc           #25                 // String uname -m
       5: invokevirtual #26                 // Method java/lang/Runtime.exec:(Ljava/lang/String;)Ljava/lang/Process;
       8: astore_0
       9: aload_0
      10: invokevirtual #27                 // Method java/lang/Process.waitFor:()I
      13: pop
      14: aload_0
      15: invokevirtual #28                 // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
      18: astore_1
      19: iconst_0
      20: istore_2
      21: new           #29                 // class java/io/ByteArrayOutputStream
      24: dup
      25: invokespecial #30                 // Method java/io/ByteArrayOutputStream."<init>":()V
      28: astore_3
      29: bipush        32
      31: newarray       byte
      33: astore        4
      35: aload_1
      36: aload         4
      38: iconst_0
      39: aload         4
      41: arraylength
      42: invokevirtual #31                 // Method java/io/InputStream.read:([BII)I
      45: dup
      46: istore_2
      47: iflt          61
      50: aload_3
      51: aload         4
      53: iconst_0
      54: iload_2
      55: invokevirtual #32                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      58: goto          35
      61: aload_3
      62: invokevirtual #33                 // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
      65: astore        5
      67: aload_1
      68: ifnull        75
      71: aload_1
      72: invokevirtual #34                 // Method java/io/InputStream.close:()V
      75: aload         5
      77: areturn
      78: astore        6
      80: aload_1
      81: ifnull        88
      84: aload_1
      85: invokevirtual #34                 // Method java/io/InputStream.close:()V
      88: aload         6
      90: athrow
      91: astore_0
      92: getstatic     #36                 // Field java/lang/System.err:Ljava/io/PrintStream;
      95: new           #10                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #37                 // String Error while running uname -m:
     104: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: invokevirtual #38                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     111: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokevirtual #39                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     120: ldc           #40                 // String unknown
     122: areturn
    Exception table:
       from    to  target type
          19    67    78   any
          78    80    78   any
           0    75    91   Class java/lang/Throwable
          78    91    91   Class java/lang/Throwable

  static java.lang.String resolveArmArchType();
    Code:
       0: ldc           #15                 // String os.name
       2: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ldc           #41                 // String Linux
       7: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      10: ifeq          166
      13: invokestatic  #42                 // Method getHardwareName:()Ljava/lang/String;
      16: astore_0
      17: aload_0
      18: ldc           #43                 // String armv6
      20: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      23: ifeq          29
      26: ldc           #43                 // String armv6
      28: areturn
      29: aload_0
      30: ldc           #45                 // String armv7
      32: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      35: ifeq          41
      38: ldc           #45                 // String armv7
      40: areturn
      41: ldc           #46                 // String sun.arch.abi
      43: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      46: astore_1
      47: aload_1
      48: ifnull        63
      51: aload_1
      52: ldc           #47                 // String gnueabihf
      54: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      57: ifeq          63
      60: ldc           #45                 // String armv7
      62: areturn
      63: invokestatic  #24                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      66: ldc           #48                 // String which readelf
      68: invokevirtual #26                 // Method java/lang/Runtime.exec:(Ljava/lang/String;)Ljava/lang/Process;
      71: invokevirtual #27                 // Method java/lang/Process.waitFor:()I
      74: istore_2
      75: iload_2
      76: ifne          150
      79: ldc           #49                 // String java.home
      81: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      84: astore_3
      85: iconst_3
      86: anewarray     #50                 // class java/lang/String
      89: dup
      90: iconst_0
      91: ldc           #51                 // String /bin/sh
      93: aastore
      94: dup
      95: iconst_1
      96: ldc           #52                 // String -c
      98: aastore
      99: dup
     100: iconst_2
     101: new           #10                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #53                 // String find \'
     110: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_3
     114: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #54                 // String \' -name \'libjvm.so\' | head -1 | xargs readelf -A | grep \'Tag_ABI_VFP_args: VFP registers\'
     119: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: aastore
     126: astore        4
     128: invokestatic  #24                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
     131: aload         4
     133: invokevirtual #55                 // Method java/lang/Runtime.exec:([Ljava/lang/String;)Ljava/lang/Process;
     136: invokevirtual #27                 // Method java/lang/Process.waitFor:()I
     139: istore_2
     140: iload_2
     141: ifne          147
     144: ldc           #45                 // String armv7
     146: areturn
     147: goto          158
     150: getstatic     #36                 // Field java/lang/System.err:Ljava/io/PrintStream;
     153: ldc           #56                 // String WARNING! readelf not found. Cannot check if running on an armhf system, armel architecture will be presumed.
     155: invokevirtual #39                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     158: goto          166
     161: astore_2
     162: goto          166
     165: astore_2
     166: ldc           #59                 // String arm
     168: areturn
    Exception table:
       from    to  target type
          63   146   161   Class java/io/IOException
         147   158   161   Class java/io/IOException
          63   146   165   Class java/lang/InterruptedException
         147   158   165   Class java/lang/InterruptedException

  public static java.lang.String getArchName();
    Code:
       0: ldc           #60                 // String os.arch
       2: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: invokestatic  #61                 // Method isAndroid:()Z
       9: ifeq          18
      12: ldc           #62                 // String android-arm
      14: astore_0
      15: goto          63
      18: aload_0
      19: ldc           #59                 // String arm
      21: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      24: ifeq          34
      27: invokestatic  #63                 // Method resolveArmArchType:()Ljava/lang/String;
      30: astore_0
      31: goto          63
      34: aload_0
      35: getstatic     #64                 // Field java/util/Locale.US:Ljava/util/Locale;
      38: invokevirtual #65                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      41: astore_1
      42: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      45: aload_1
      46: invokevirtual #67                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      49: ifeq          63
      52: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      55: aload_1
      56: invokevirtual #68                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #50                 // class java/lang/String
      62: areturn
      63: aload_0
      64: invokestatic  #69                 // Method translateArchNameToFolderName:(Ljava/lang/String;)Ljava/lang/String;
      67: areturn

  static java.lang.String translateOSNameToFolderName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #70                 // String Windows
       3: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          12
       9: ldc           #70                 // String Windows
      11: areturn
      12: aload_0
      13: ldc           #71                 // String Mac
      15: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      18: ifeq          24
      21: ldc           #71                 // String Mac
      23: areturn
      24: aload_0
      25: ldc           #41                 // String Linux
      27: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      30: ifeq          36
      33: ldc           #41                 // String Linux
      35: areturn
      36: aload_0
      37: ldc           #72                 // String AIX
      39: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      42: ifeq          48
      45: ldc           #72                 // String AIX
      47: areturn
      48: aload_0
      49: ldc           #73                 // String \\W
      51: ldc           #19                 // String
      53: invokevirtual #74                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      56: areturn

  static java.lang.String translateArchNameToFolderName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #73                 // String \\W
       3: ldc           #19                 // String
       5: invokevirtual #74                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  static {};
    Code:
       0: new           #75                 // class java/util/HashMap
       3: dup
       4: invokespecial #76                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      10: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      13: ldc           #78                 // String x86
      15: ldc           #78                 // String x86
      17: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      24: ldc           #80                 // String i386
      26: ldc           #78                 // String x86
      28: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      35: ldc           #81                 // String i486
      37: ldc           #78                 // String x86
      39: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      46: ldc           #82                 // String i586
      48: ldc           #78                 // String x86
      50: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      57: ldc           #83                 // String i686
      59: ldc           #78                 // String x86
      61: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      68: ldc           #84                 // String pentium
      70: ldc           #78                 // String x86
      72: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      79: ldc           #85                 // String x86_64
      81: ldc           #85                 // String x86_64
      83: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
      90: ldc           #86                 // String amd64
      92: ldc           #85                 // String x86_64
      94: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     101: ldc           #87                 // String em64t
     103: ldc           #85                 // String x86_64
     105: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     112: ldc           #88                 // String universal
     114: ldc           #85                 // String x86_64
     116: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     123: ldc           #89                 // String ia64
     125: ldc           #89                 // String ia64
     127: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     134: ldc           #90                 // String ia64w
     136: ldc           #89                 // String ia64
     138: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: pop
     142: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     145: ldc           #91                 // String ia64_32
     147: ldc           #91                 // String ia64_32
     149: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     156: ldc           #92                 // String ia64n
     158: ldc           #91                 // String ia64_32
     160: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     163: pop
     164: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     167: ldc           #93                 // String ppc
     169: ldc           #93                 // String ppc
     171: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     174: pop
     175: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     178: ldc           #94                 // String power
     180: ldc           #93                 // String ppc
     182: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     185: pop
     186: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     189: ldc           #95                 // String powerpc
     191: ldc           #93                 // String ppc
     193: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     196: pop
     197: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     200: ldc           #96                 // String power_pc
     202: ldc           #93                 // String ppc
     204: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     207: pop
     208: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     211: ldc           #97                 // String power_rs
     213: ldc           #93                 // String ppc
     215: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     218: pop
     219: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     222: ldc           #98                 // String ppc64
     224: ldc           #98                 // String ppc64
     226: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     229: pop
     230: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     233: ldc           #99                 // String power64
     235: ldc           #98                 // String ppc64
     237: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     240: pop
     241: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     244: ldc           #100                // String powerpc64
     246: ldc           #98                 // String ppc64
     248: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     251: pop
     252: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     255: ldc           #101                // String power_pc64
     257: ldc           #98                 // String ppc64
     259: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     262: pop
     263: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     266: ldc           #102                // String power_rs64
     268: ldc           #98                 // String ppc64
     270: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     273: pop
     274: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     277: ldc           #103                // String s390
     279: ldc           #103                // String s390
     281: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     284: pop
     285: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     288: ldc           #104                // String s390x
     290: ldc           #104                // String s390x
     292: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     295: pop
     296: getstatic     #66                 // Field archMapping:Ljava/util/HashMap;
     299: ldc           #105                // String aarch64
     301: ldc           #105                // String aarch64
     303: invokevirtual #79                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     306: pop
     307: return
}
