Compiled from "SnappyOutputStream.java"
public class org.xerial.snappy.SnappyOutputStream extends java.io.OutputStream {
  static final int MIN_BLOCK_SIZE;

  static final int DEFAULT_BLOCK_SIZE;

  protected final java.io.OutputStream out;

  private final int blockSize;

  private final org.xerial.snappy.buffer.BufferAllocator inputBufferAllocator;

  private final org.xerial.snappy.buffer.BufferAllocator outputBufferAllocator;

  protected byte[] inputBuffer;

  protected byte[] outputBuffer;

  private int inputCursor;

  private int outputCursor;

  private boolean headerWritten;

  private boolean closed;

  public org.xerial.snappy.SnappyOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // int 32768
       4: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;I)V
       7: return

  public org.xerial.snappy.SnappyOutputStream(java.io.OutputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #4                  // Method org/xerial/snappy/buffer/CachedBufferAllocator.getBufferAllocatorFactory:()Lorg/xerial/snappy/buffer/BufferAllocatorFactory;
       6: invokespecial #5                  // Method "<init>":(Ljava/io/OutputStream;ILorg/xerial/snappy/buffer/BufferAllocatorFactory;)V
       9: return

  public org.xerial.snappy.SnappyOutputStream(java.io.OutputStream, int, org.xerial.snappy.buffer.BufferAllocatorFactory);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field inputCursor:I
       9: aload_0
      10: iconst_0
      11: putfield      #8                  // Field outputCursor:I
      14: aload_0
      15: aload_1
      16: putfield      #9                  // Field out:Ljava/io/OutputStream;
      19: aload_0
      20: sipush        1024
      23: iload_2
      24: invokestatic  #10                 // Method java/lang/Math.max:(II)I
      27: putfield      #11                 // Field blockSize:I
      30: iload_2
      31: istore        4
      33: getstatic     #12                 // Field org/xerial/snappy/SnappyCodec.HEADER_SIZE:I
      36: iconst_4
      37: iadd
      38: iload_2
      39: invokestatic  #13                 // Method org/xerial/snappy/Snappy.maxCompressedLength:(I)I
      42: iadd
      43: istore        5
      45: aload_0
      46: aload_3
      47: iload         4
      49: invokeinterface #14,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocatorFactory.getBufferAllocator:(I)Lorg/xerial/snappy/buffer/BufferAllocator;
      54: putfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      57: aload_0
      58: aload_3
      59: iload         5
      61: invokeinterface #14,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocatorFactory.getBufferAllocator:(I)Lorg/xerial/snappy/buffer/BufferAllocator;
      66: putfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      69: aload_0
      70: aload_0
      71: getfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      74: iload         4
      76: invokeinterface #17,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.allocate:(I)[B
      81: putfield      #18                 // Field inputBuffer:[B
      84: aload_0
      85: aload_0
      86: getfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      89: iload         5
      91: invokeinterface #17,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.allocate:(I)[B
      96: putfield      #19                 // Field outputBuffer:[B
      99: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Z
       4: ifeq          17
       7: new           #21                 // class java/io/IOException
      10: dup
      11: ldc           #22                 // String Stream is closed
      13: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     104
      26: iload_3
      27: iload         4
      29: isub
      30: aload_0
      31: getfield      #11                 // Field blockSize:I
      34: aload_0
      35: getfield      #7                  // Field inputCursor:I
      38: isub
      39: invokestatic  #24                 // Method java/lang/Math.min:(II)I
      42: istore        5
      44: iload         5
      46: ifle          78
      49: aload_1
      50: iload_2
      51: iload         4
      53: iadd
      54: aload_0
      55: getfield      #18                 // Field inputBuffer:[B
      58: aload_0
      59: getfield      #7                  // Field inputCursor:I
      62: iload         5
      64: invokestatic  #25                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      67: aload_0
      68: dup
      69: getfield      #7                  // Field inputCursor:I
      72: iload         5
      74: iadd
      75: putfield      #7                  // Field inputCursor:I
      78: aload_0
      79: getfield      #7                  // Field inputCursor:I
      82: aload_0
      83: getfield      #11                 // Field blockSize:I
      86: if_icmpge     90
      89: return
      90: aload_0
      91: invokevirtual #26                 // Method compressInput:()V
      94: iload         4
      96: iload         5
      98: iadd
      99: istore        4
     101: goto          20
     104: return

  public void write(long[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        8
       5: imul
       6: iload_3
       7: bipush        8
       9: imul
      10: invokevirtual #27                 // Method rawWrite:(Ljava/lang/Object;II)V
      13: return

  public void write(double[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        8
       5: imul
       6: iload_3
       7: bipush        8
       9: imul
      10: invokevirtual #27                 // Method rawWrite:(Ljava/lang/Object;II)V
      13: return

  public void write(float[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_4
       4: imul
       5: iload_3
       6: iconst_4
       7: imul
       8: invokevirtual #27                 // Method rawWrite:(Ljava/lang/Object;II)V
      11: return

  public void write(int[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_4
       4: imul
       5: iload_3
       6: iconst_4
       7: imul
       8: invokevirtual #27                 // Method rawWrite:(Ljava/lang/Object;II)V
      11: return

  public void write(short[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_2
       4: imul
       5: iload_3
       6: iconst_2
       7: imul
       8: invokevirtual #27                 // Method rawWrite:(Ljava/lang/Object;II)V
      11: return

  public void write(long[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #28                 // Method write:([JII)V
       8: return

  public void write(double[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #29                 // Method write:([DII)V
       8: return

  public void write(float[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #30                 // Method write:([FII)V
       8: return

  public void write(int[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #31                 // Method write:([III)V
       8: return

  public void write(short[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #32                 // Method write:([SII)V
       8: return

  private boolean hasSufficientOutputBufferFor(int);
    Code:
       0: iload_1
       1: invokestatic  #13                 // Method org/xerial/snappy/Snappy.maxCompressedLength:(I)I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #19                 // Field outputBuffer:[B
      10: arraylength
      11: aload_0
      12: getfield      #8                  // Field outputCursor:I
      15: isub
      16: iconst_4
      17: isub
      18: if_icmpge     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void rawWrite(java.lang.Object, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Z
       4: ifeq          17
       7: new           #21                 // class java/io/IOException
      10: dup
      11: ldc           #22                 // String Stream is closed
      13: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     104
      26: iload_3
      27: iload         4
      29: isub
      30: aload_0
      31: getfield      #11                 // Field blockSize:I
      34: aload_0
      35: getfield      #7                  // Field inputCursor:I
      38: isub
      39: invokestatic  #24                 // Method java/lang/Math.min:(II)I
      42: istore        5
      44: iload         5
      46: ifle          78
      49: aload_1
      50: iload_2
      51: iload         4
      53: iadd
      54: iload         5
      56: aload_0
      57: getfield      #18                 // Field inputBuffer:[B
      60: aload_0
      61: getfield      #7                  // Field inputCursor:I
      64: invokestatic  #33                 // Method org/xerial/snappy/Snappy.arrayCopy:(Ljava/lang/Object;IILjava/lang/Object;I)V
      67: aload_0
      68: dup
      69: getfield      #7                  // Field inputCursor:I
      72: iload         5
      74: iadd
      75: putfield      #7                  // Field inputCursor:I
      78: aload_0
      79: getfield      #7                  // Field inputCursor:I
      82: aload_0
      83: getfield      #11                 // Field blockSize:I
      86: if_icmpge     90
      89: return
      90: aload_0
      91: invokevirtual #26                 // Method compressInput:()V
      94: iload         4
      96: iload         5
      98: iadd
      99: istore        4
     101: goto          20
     104: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Z
       4: ifeq          17
       7: new           #21                 // class java/io/IOException
      10: dup
      11: ldc           #22                 // String Stream is closed
      13: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field inputCursor:I
      21: aload_0
      22: getfield      #18                 // Field inputBuffer:[B
      25: arraylength
      26: if_icmplt     33
      29: aload_0
      30: invokevirtual #26                 // Method compressInput:()V
      33: aload_0
      34: getfield      #18                 // Field inputBuffer:[B
      37: aload_0
      38: dup
      39: getfield      #7                  // Field inputCursor:I
      42: dup_x1
      43: iconst_1
      44: iadd
      45: putfield      #7                  // Field inputCursor:I
      48: iload_1
      49: i2b
      50: bastore
      51: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Z
       4: ifeq          17
       7: new           #21                 // class java/io/IOException
      10: dup
      11: ldc           #22                 // String Stream is closed
      13: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #26                 // Method compressInput:()V
      21: aload_0
      22: invokevirtual #34                 // Method dumpOutput:()V
      25: aload_0
      26: getfield      #9                  // Field out:Ljava/io/OutputStream;
      29: invokevirtual #35                 // Method java/io/OutputStream.flush:()V
      32: return

  static void writeInt(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: bipush        24
       5: ishr
       6: sipush        255
       9: iand
      10: i2b
      11: bastore
      12: aload_0
      13: iload_1
      14: iconst_1
      15: iadd
      16: iload_2
      17: bipush        16
      19: ishr
      20: sipush        255
      23: iand
      24: i2b
      25: bastore
      26: aload_0
      27: iload_1
      28: iconst_2
      29: iadd
      30: iload_2
      31: bipush        8
      33: ishr
      34: sipush        255
      37: iand
      38: i2b
      39: bastore
      40: aload_0
      41: iload_1
      42: iconst_3
      43: iadd
      44: iload_2
      45: iconst_0
      46: ishr
      47: sipush        255
      50: iand
      51: i2b
      52: bastore
      53: return

  static int readInt(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        24
       9: ishl
      10: istore_2
      11: aload_0
      12: iload_1
      13: iconst_1
      14: iadd
      15: baload
      16: sipush        255
      19: iand
      20: bipush        16
      22: ishl
      23: istore_3
      24: aload_0
      25: iload_1
      26: iconst_2
      27: iadd
      28: baload
      29: sipush        255
      32: iand
      33: bipush        8
      35: ishl
      36: istore        4
      38: aload_0
      39: iload_1
      40: iconst_3
      41: iadd
      42: baload
      43: sipush        255
      46: iand
      47: istore        5
      49: iload_2
      50: iload_3
      51: ior
      52: iload         4
      54: ior
      55: iload         5
      57: ior
      58: ireturn

  protected void dumpOutput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field outputCursor:I
       4: ifle          28
       7: aload_0
       8: getfield      #9                  // Field out:Ljava/io/OutputStream;
      11: aload_0
      12: getfield      #19                 // Field outputBuffer:[B
      15: iconst_0
      16: aload_0
      17: getfield      #8                  // Field outputCursor:I
      20: invokevirtual #36                 // Method java/io/OutputStream.write:([BII)V
      23: aload_0
      24: iconst_0
      25: putfield      #8                  // Field outputCursor:I
      28: return

  protected void compressInput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputCursor:I
       4: ifgt          8
       7: return
       8: aload_0
       9: getfield      #37                 // Field headerWritten:Z
      12: ifne          28
      15: aload_0
      16: aload_0
      17: invokevirtual #38                 // Method writeHeader:()I
      20: putfield      #8                  // Field outputCursor:I
      23: aload_0
      24: iconst_1
      25: putfield      #37                 // Field headerWritten:Z
      28: aload_0
      29: aload_0
      30: getfield      #7                  // Field inputCursor:I
      33: invokespecial #39                 // Method hasSufficientOutputBufferFor:(I)Z
      36: ifne          43
      39: aload_0
      40: invokevirtual #34                 // Method dumpOutput:()V
      43: aload_0
      44: invokevirtual #40                 // Method writeBlockPreemble:()V
      47: aload_0
      48: getfield      #18                 // Field inputBuffer:[B
      51: iconst_0
      52: aload_0
      53: getfield      #7                  // Field inputCursor:I
      56: aload_0
      57: getfield      #19                 // Field outputBuffer:[B
      60: aload_0
      61: getfield      #8                  // Field outputCursor:I
      64: iconst_4
      65: iadd
      66: invokestatic  #41                 // Method org/xerial/snappy/Snappy.compress:([BII[BI)I
      69: istore_1
      70: aload_0
      71: getfield      #19                 // Field outputBuffer:[B
      74: aload_0
      75: getfield      #8                  // Field outputCursor:I
      78: iload_1
      79: invokestatic  #42                 // Method writeInt:([BII)V
      82: aload_0
      83: dup
      84: getfield      #8                  // Field outputCursor:I
      87: iconst_4
      88: iload_1
      89: iadd
      90: iadd
      91: putfield      #8                  // Field outputCursor:I
      94: aload_0
      95: iconst_0
      96: putfield      #7                  // Field inputCursor:I
      99: return

  protected int writeHeader();
    Code:
       0: getstatic     #43                 // Field org/xerial/snappy/SnappyCodec.currentHeader:Lorg/xerial/snappy/SnappyCodec;
       3: aload_0
       4: getfield      #19                 // Field outputBuffer:[B
       7: iconst_0
       8: invokevirtual #44                 // Method org/xerial/snappy/SnappyCodec.writeHeader:([BI)I
      11: ireturn

  protected void writeBlockPreemble();
    Code:
       0: return

  protected void writeCurrentDataSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field outputBuffer:[B
       4: aload_0
       5: getfield      #8                  // Field outputCursor:I
       8: aload_0
       9: getfield      #7                  // Field inputCursor:I
      12: invokestatic  #42                 // Method writeInt:([BII)V
      15: aload_0
      16: dup
      17: getfield      #8                  // Field outputCursor:I
      20: iconst_4
      21: iadd
      22: putfield      #8                  // Field outputCursor:I
      25: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #45                 // Method flush:()V
      12: aload_0
      13: getfield      #9                  // Field out:Ljava/io/OutputStream;
      16: invokevirtual #46                 // Method java/io/OutputStream.close:()V
      19: aload_0
      20: iconst_1
      21: putfield      #20                 // Field closed:Z
      24: aload_0
      25: getfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      28: aload_0
      29: getfield      #18                 // Field inputBuffer:[B
      32: invokeinterface #47,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      37: aload_0
      38: getfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      41: aload_0
      42: getfield      #19                 // Field outputBuffer:[B
      45: invokeinterface #47,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      50: aload_0
      51: aconst_null
      52: putfield      #18                 // Field inputBuffer:[B
      55: aload_0
      56: aconst_null
      57: putfield      #19                 // Field outputBuffer:[B
      60: goto          107
      63: astore_1
      64: aload_0
      65: iconst_1
      66: putfield      #20                 // Field closed:Z
      69: aload_0
      70: getfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      73: aload_0
      74: getfield      #18                 // Field inputBuffer:[B
      77: invokeinterface #47,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      82: aload_0
      83: getfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      86: aload_0
      87: getfield      #19                 // Field outputBuffer:[B
      90: invokeinterface #47,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      95: aload_0
      96: aconst_null
      97: putfield      #18                 // Field inputBuffer:[B
     100: aload_0
     101: aconst_null
     102: putfield      #19                 // Field outputBuffer:[B
     105: aload_1
     106: athrow
     107: return
    Exception table:
       from    to  target type
           8    19    63   any
}
