Compiled from "RolloverSignerSecretProvider.java"
public abstract class org.apache.hadoop.security.authentication.util.RolloverSignerSecretProvider extends org.apache.hadoop.security.authentication.util.SignerSecretProvider {
  static org.slf4j.Logger LOG;

  private volatile byte[][] secrets;

  private java.util.concurrent.ScheduledExecutorService scheduler;

  private boolean schedulerRunning;

  private boolean isDestroyed;

  public org.apache.hadoop.security.authentication.util.RolloverSignerSecretProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/security/authentication/util/SignerSecretProvider."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field schedulerRunning:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isDestroyed:Z
      14: return

  public void init(java.util.Properties, javax.servlet.ServletContext, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method generateNewSecret:()[B
       5: aconst_null
       6: invokevirtual #5                  // Method initSecrets:([B[B)V
       9: aload_0
      10: lload_3
      11: lload_3
      12: invokevirtual #6                  // Method startScheduler:(JJ)V
      15: return

  protected void initSecrets(byte[], byte[]);
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #7                  // class "[B"
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: dup
      10: iconst_1
      11: aload_2
      12: aastore
      13: putfield      #8                  // Field secrets:[[B
      16: return

  protected synchronized void startScheduler(long, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field schedulerRunning:Z
       4: ifne          42
       7: aload_0
       8: iconst_1
       9: putfield      #2                  // Field schedulerRunning:Z
      12: aload_0
      13: invokestatic  #9                  // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:()Ljava/util/concurrent/ScheduledExecutorService;
      16: putfield      #10                 // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      19: aload_0
      20: getfield      #10                 // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      23: new           #11                 // class org/apache/hadoop/security/authentication/util/RolloverSignerSecretProvider$1
      26: dup
      27: aload_0
      28: invokespecial #12                 // Method org/apache/hadoop/security/authentication/util/RolloverSignerSecretProvider$1."<init>":(Lorg/apache/hadoop/security/authentication/util/RolloverSignerSecretProvider;)V
      31: lload_1
      32: lload_3
      33: getstatic     #13                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokeinterface #14,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      41: pop
      42: return

  public synchronized void destroy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isDestroyed:Z
       4: ifne          37
       7: aload_0
       8: iconst_1
       9: putfield      #3                  // Field isDestroyed:Z
      12: aload_0
      13: getfield      #10                 // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      16: ifnull        28
      19: aload_0
      20: getfield      #10                 // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      23: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      28: aload_0
      29: iconst_0
      30: putfield      #2                  // Field schedulerRunning:Z
      33: aload_0
      34: invokespecial #16                 // Method org/apache/hadoop/security/authentication/util/SignerSecretProvider.destroy:()V
      37: return

  protected synchronized void rollSecret();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isDestroyed:Z
       4: ifne          43
       7: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
      10: ldc           #18                 // String rolling secret
      12: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      17: aload_0
      18: invokevirtual #4                  // Method generateNewSecret:()[B
      21: astore_1
      22: aload_0
      23: iconst_2
      24: anewarray     #7                  // class "[B"
      27: dup
      28: iconst_0
      29: aload_1
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: getfield      #8                  // Field secrets:[[B
      37: iconst_0
      38: aaload
      39: aastore
      40: putfield      #8                  // Field secrets:[[B
      43: return

  protected abstract byte[] generateNewSecret();

  public byte[] getCurrentSecret();
    Code:
       0: aload_0
       1: getfield      #8                  // Field secrets:[[B
       4: iconst_0
       5: aaload
       6: areturn

  public byte[][] getAllSecrets();
    Code:
       0: aload_0
       1: getfield      #8                  // Field secrets:[[B
       4: areturn

  static {};
    Code:
       0: ldc           #20                 // class org/apache/hadoop/security/authentication/util/RolloverSignerSecretProvider
       2: invokestatic  #21                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
