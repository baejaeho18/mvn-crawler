Compiled from "PluginOpts.java"
public class org.apache.kerby.kerberos.kerb.preauth.pkinit.PluginOpts {
  public boolean requireEku;

  public boolean acceptSecondaryEku;

  public boolean allowUpn;

  public boolean usingRsa;

  public boolean requireCrlChecking;

  public int dhMinBits;

  public org.apache.kerby.kerberos.kerb.preauth.pkinit.PluginOpts();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field requireEku:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field acceptSecondaryEku:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field allowUpn:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field usingRsa:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field requireCrlChecking:Z
      29: aload_0
      30: sipush        1024
      33: putfield      #7                  // Field dhMinBits:I
      36: return

  public org.apache.kerby.kerberos.kerb.type.pa.pkinit.AlgorithmIdentifiers createSupportedCMSTypes() throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #8                  // class org/apache/kerby/kerberos/kerb/type/pa/pkinit/AlgorithmIdentifiers
       3: dup
       4: invokespecial #9                  // Method org/apache/kerby/kerberos/kerb/type/pa/pkinit/AlgorithmIdentifiers."<init>":()V
       7: astore_1
       8: new           #10                 // class org/apache/kerby/x509/type/AlgorithmIdentifier
      11: dup
      12: invokespecial #11                 // Method org/apache/kerby/x509/type/AlgorithmIdentifier."<init>":()V
      15: astore_2
      16: ldc           #12                 // String 0x06 08 2A 86 48 86 F7 0D 03 07
      18: astore_3
      19: aload_3
      20: invokestatic  #13                 // Method org/apache/kerby/kerberos/kerb/preauth/pkinit/PkinitCrypto.createOid:(Ljava/lang/String;)Lorg/apache/kerby/asn1/type/Asn1ObjectIdentifier;
      23: astore        4
      25: aload_2
      26: aload         4
      28: invokevirtual #14                 // Method org/apache/kerby/asn1/type/Asn1ObjectIdentifier.getValue:()Ljava/lang/Object;
      31: checkcast     #15                 // class java/lang/String
      34: invokevirtual #16                 // Method org/apache/kerby/x509/type/AlgorithmIdentifier.setAlgorithm:(Ljava/lang/String;)V
      37: aload_1
      38: aload_2
      39: invokevirtual #17                 // Method org/apache/kerby/kerberos/kerb/type/pa/pkinit/AlgorithmIdentifiers.add:(Lorg/apache/kerby/asn1/type/Asn1Type;)V
      42: aload_1
      43: areturn

  public org.apache.kerby.kerberos.kerb.type.pa.pkinit.TrustedCertifiers createTrustedCertifiers();
    Code:
       0: new           #18                 // class org/apache/kerby/kerberos/kerb/type/pa/pkinit/TrustedCertifiers
       3: dup
       4: invokespecial #19                 // Method org/apache/kerby/kerberos/kerb/type/pa/pkinit/TrustedCertifiers."<init>":()V
       7: astore_1
       8: aload_1
       9: areturn

  public byte[] createIssuerAndSerial();
    Code:
       0: aconst_null
       1: areturn
}
