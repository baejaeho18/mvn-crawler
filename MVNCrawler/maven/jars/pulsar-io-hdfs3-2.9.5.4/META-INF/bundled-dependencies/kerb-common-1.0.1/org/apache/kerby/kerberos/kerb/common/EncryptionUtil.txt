Compiled from "EncryptionUtil.java"
public class org.apache.kerby.kerberos.kerb.common.EncryptionUtil {
  private static final java.util.Map<java.lang.String, java.lang.String> CIPHER_ALGO_MAP;

  public org.apache.kerby.kerberos.kerb.common.EncryptionUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getAlgoNameFromEncType(org.apache.kerby.kerberos.kerb.type.base.EncryptionType);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.getName:()Ljava/lang/String;
       4: invokevirtual #3                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       7: astore_1
       8: getstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      11: invokeinterface #5,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          70
      31: aload_2
      32: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #9                  // class java/util/Map$Entry
      40: astore_3
      41: aload_1
      42: aload_3
      43: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #11                 // class java/lang/String
      51: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      54: ifeq          67
      57: aload_3
      58: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: checkcast     #11                 // class java/lang/String
      66: areturn
      67: goto          22
      70: new           #14                 // class java/lang/IllegalArgumentException
      73: dup
      74: new           #15                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #17                 // String Unknown algorithm name for the encryption type
      83: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow

  public static java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType> orderEtypesByStrength(java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType>);
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokeinterface #23,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_1
      14: getstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      17: invokeinterface #25,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      22: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          108
      37: aload_2
      38: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #11                 // class java/lang/String
      46: astore_3
      47: aload_0
      48: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore        4
      55: aload         4
      57: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          105
      65: aload         4
      67: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #28                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptionType
      75: astore        5
      77: aload         5
      79: invokestatic  #29                 // Method getAlgoNameFromEncType:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)Ljava/lang/String;
      82: astore        6
      84: aload_3
      85: aload         6
      87: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      90: ifeq          102
      93: aload_1
      94: aload         5
      96: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     101: pop
     102: goto          55
     105: goto          28
     108: aload_1
     109: areturn

  public static java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionKey> generateKeys(java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType>) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokeinterface #23,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_1
      14: aload_0
      15: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          64
      30: aload_2
      31: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #28                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptionType
      39: astore_3
      40: aload_3
      41: invokestatic  #32                 // Method org/apache/kerby/kerberos/kerb/crypto/EncryptionHandler.random2Key:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      44: astore        4
      46: aload         4
      48: iconst_1
      49: invokevirtual #33                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.setKvno:(I)V
      52: aload_1
      53: aload         4
      55: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: goto          21
      64: aload_1
      65: areturn

  public static java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionKey> generateKeys(java.lang.String, java.lang.String, java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType>) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: aload_2
       5: invokeinterface #23,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_3
      14: aload_2
      15: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          71
      32: aload         4
      34: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #28                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptionType
      42: astore        5
      44: aload_0
      45: aload_1
      46: aload         5
      48: invokestatic  #34                 // Method org/apache/kerby/kerberos/kerb/crypto/EncryptionHandler.string2Key:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      51: astore        6
      53: aload         6
      55: iconst_1
      56: invokevirtual #33                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.setKvno:(I)V
      59: aload_3
      60: aload         6
      62: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: goto          22
      71: aload_3
      72: areturn

  public static org.apache.kerby.kerberos.kerb.type.base.EncryptionType getBestEncryptionType(java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType>, java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType>);
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_2
      17: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #28                 // class org/apache/kerby/kerberos/kerb/type/base/EncryptionType
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokeinterface #35,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      33: ifeq          38
      36: aload_3
      37: areturn
      38: goto          7
      41: aconst_null
      42: areturn

  public static org.apache.kerby.kerberos.kerb.type.base.EncryptedData seal(org.apache.kerby.asn1.type.Asn1Encodeable, org.apache.kerby.kerberos.kerb.type.base.EncryptionKey, org.apache.kerby.kerberos.kerb.type.base.KeyUsage) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method org/apache/kerby/kerberos/kerb/KrbCodec.encode:(Lorg/apache/kerby/asn1/type/Asn1Type;)[B
       4: astore_3
       5: aload_3
       6: aload_1
       7: aload_2
       8: invokestatic  #37                 // Method org/apache/kerby/kerberos/kerb/crypto/EncryptionHandler.encrypt:([BLorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;Lorg/apache/kerby/kerberos/kerb/type/base/KeyUsage;)Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData;
      11: astore        4
      13: aload         4
      15: areturn

  public static <T extends org.apache.kerby.asn1.type.Asn1Type> T unseal(org.apache.kerby.kerberos.kerb.type.base.EncryptedData, org.apache.kerby.kerberos.kerb.type.base.EncryptionKey, org.apache.kerby.kerberos.kerb.type.base.KeyUsage, java.lang.Class<T>) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // Method org/apache/kerby/kerberos/kerb/crypto/EncryptionHandler.decrypt:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptedData;Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;Lorg/apache/kerby/kerberos/kerb/type/base/KeyUsage;)[B
       6: astore        4
       8: aload         4
      10: aload_3
      11: invokestatic  #39                 // Method org/apache/kerby/kerberos/kerb/KrbCodec.decode:([BLjava/lang/Class;)Lorg/apache/kerby/asn1/type/Asn1Type;
      14: areturn

  public static byte[] encrypt(org.apache.kerby.kerberos.kerb.type.base.EncryptionKey, byte[], org.apache.kerby.kerberos.kerb.type.base.KeyUsage) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
       4: invokestatic  #41                 // Method org/apache/kerby/kerberos/kerb/crypto/EncryptionHandler.getEncHandler:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)Lorg/apache/kerby/kerberos/kerb/crypto/EncTypeHandler;
       7: astore_3
       8: aload_3
       9: aload_1
      10: aload_0
      11: invokevirtual #42                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyData:()[B
      14: aload_2
      15: invokevirtual #43                 // Method org/apache/kerby/kerberos/kerb/type/base/KeyUsage.getValue:()I
      18: invokeinterface #44,  4           // InterfaceMethod org/apache/kerby/kerberos/kerb/crypto/EncTypeHandler.encrypt:([B[BI)[B
      23: astore        4
      25: aload         4
      27: areturn

  public static byte[] decrypt(org.apache.kerby.kerberos.kerb.type.base.EncryptionKey, byte[], org.apache.kerby.kerberos.kerb.type.base.KeyUsage) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
       4: invokestatic  #41                 // Method org/apache/kerby/kerberos/kerb/crypto/EncryptionHandler.getEncHandler:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)Lorg/apache/kerby/kerberos/kerb/crypto/EncTypeHandler;
       7: astore_3
       8: aload_3
       9: aload_1
      10: aload_0
      11: invokevirtual #42                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyData:()[B
      14: aload_2
      15: invokevirtual #43                 // Method org/apache/kerby/kerberos/kerb/type/base/KeyUsage.getValue:()I
      18: invokeinterface #45,  4           // InterfaceMethod org/apache/kerby/kerberos/kerb/crypto/EncTypeHandler.decrypt:([B[BI)[B
      23: astore        4
      25: aload         4
      27: areturn

  static {};
    Code:
       0: new           #46                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #47                 // Method java/util/LinkedHashMap."<init>":()V
       7: putstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      10: getstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      13: ldc           #48                 // String rc4
      15: ldc           #49                 // String ArcFourHmac
      17: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: getstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      26: ldc           #51                 // String aes256
      28: ldc           #52                 // String AES256
      30: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: getstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      39: ldc           #53                 // String aes128
      41: ldc           #54                 // String AES128
      43: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: getstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      52: ldc           #55                 // String des3
      54: ldc           #56                 // String DESede
      56: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: getstatic     #4                  // Field CIPHER_ALGO_MAP:Ljava/util/Map;
      65: ldc           #57                 // String des
      67: ldc           #58                 // String DES
      69: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: return
}
