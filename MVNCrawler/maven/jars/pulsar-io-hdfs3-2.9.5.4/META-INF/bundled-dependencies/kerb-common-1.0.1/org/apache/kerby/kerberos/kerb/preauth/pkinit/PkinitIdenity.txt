Compiled from "PkinitIdenity.java"
public class org.apache.kerby.kerberos.kerb.preauth.pkinit.PkinitIdenity {
  public org.apache.kerby.kerberos.kerb.preauth.pkinit.PkinitIdenity();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void processIdentityOption(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, java.lang.String);
    Code:
       0: getstatic     #2                  // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.NONE:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
       3: astore_2
       4: aconst_null
       5: astore_3
       6: aload_1
       7: ldc           #3                  // String :
       9: invokevirtual #4                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      12: ifeq          122
      15: aload_1
      16: ldc           #5                  // String FILE:
      18: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      21: ifeq          31
      24: getstatic     #7                  // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.FILE:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
      27: astore_2
      28: goto          128
      31: aload_1
      32: ldc           #8                  // String PKCS11:
      34: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      37: ifeq          47
      40: getstatic     #9                  // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.PKCS11:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
      43: astore_2
      44: goto          128
      47: aload_1
      48: ldc           #10                 // String PKCS12:
      50: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      53: ifeq          63
      56: getstatic     #11                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.PKCS12:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
      59: astore_2
      60: goto          128
      63: aload_1
      64: ldc           #12                 // String DIR:
      66: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      69: ifeq          79
      72: getstatic     #13                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.DIR:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
      75: astore_2
      76: goto          128
      79: aload_1
      80: ldc           #14                 // String ENV:
      82: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      85: ifeq          95
      88: getstatic     #15                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.ENVVAR:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
      91: astore_2
      92: goto          128
      95: new           #16                 // class java/lang/RuntimeException
      98: dup
      99: new           #17                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #19                 // String Invalid Identity option format:
     108: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_1
     112: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #22                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: aload_1
     123: astore_3
     124: getstatic     #7                  // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.FILE:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
     127: astore_2
     128: aload_0
     129: aload_2
     130: putfield      #23                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts.idType:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
     133: getstatic     #24                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/PkinitIdenity$1.$SwitchMap$org$apache$kerby$kerberos$kerb$preauth$pkinit$IdentityType:[I
     136: aload_2
     137: invokevirtual #25                 // Method org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.ordinal:()I
     140: iaload
     141: tableswitch   { // 1 to 5
                     1: 176
                     2: 187
                     3: 195
                     4: 203
                     5: 211
               default: 219
          }
     176: aload_0
     177: aload_3
     178: invokestatic  #26                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
     181: invokestatic  #27                 // Method processIdentityOption:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Ljava/lang/String;)V
     184: goto          219
     187: aload_0
     188: aload_3
     189: invokestatic  #28                 // Method parseFileOption:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Ljava/lang/String;)V
     192: goto          219
     195: aload_0
     196: aload_3
     197: invokestatic  #29                 // Method parsePkcs11Option:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Ljava/lang/String;)V
     200: goto          219
     203: aload_0
     204: aload_3
     205: invokestatic  #30                 // Method parsePkcs12Option:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Ljava/lang/String;)V
     208: goto          219
     211: aload_0
     212: aload_3
     213: putfield      #31                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts.certFile:Ljava/lang/String;
     216: goto          219
     219: return

  public static void parseFileOption(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #32                 // String ,
       3: invokevirtual #33                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: iconst_0
       9: aaload
      10: astore_3
      11: aconst_null
      12: astore        4
      14: aload_2
      15: arraylength
      16: iconst_1
      17: if_icmple     25
      20: aload_2
      21: iconst_1
      22: aaload
      23: astore        4
      25: aload_0
      26: aload_3
      27: putfield      #31                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts.certFile:Ljava/lang/String;
      30: aload_0
      31: aload         4
      33: putfield      #34                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts.keyFile:Ljava/lang/String;
      36: return

  public static void parsePkcs12Option(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts.certFile:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: putfield      #34                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts.keyFile:Ljava/lang/String;
      10: return

  public static void parsePkcs11Option(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, java.lang.String);
    Code:
       0: return

  public static void loadCerts(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: getstatic     #24                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/PkinitIdenity$1.$SwitchMap$org$apache$kerby$kerberos$kerb$preauth$pkinit$IdentityType:[I
       3: aload_0
       4: getfield      #23                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts.idType:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType;
       7: invokevirtual #25                 // Method org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityType.ordinal:()I
      10: iaload
      11: tableswitch   { // 2 to 5
                     2: 40
                     3: 56
                     4: 64
                     5: 48
               default: 72
          }
      40: aload_0
      41: aload_1
      42: invokestatic  #35                 // Method loadCertsFromFile:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;)V
      45: goto          72
      48: aload_0
      49: aload_1
      50: invokestatic  #36                 // Method loadCertsFromDir:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;)V
      53: goto          72
      56: aload_0
      57: aload_1
      58: invokestatic  #37                 // Method loadCertsAsPkcs11:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;)V
      61: goto          72
      64: aload_0
      65: aload_1
      66: invokestatic  #38                 // Method loadCertsAsPkcs12:(Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;)V
      69: goto          72
      72: return

  private static void loadCertsAsPkcs12(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: return

  private static void loadCertsAsPkcs11(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: return

  private static void loadCertsFromDir(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: return

  private static void loadCertsFromFile(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: return

  public static void initialize(org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts, org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: return
}
