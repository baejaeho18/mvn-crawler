Compiled from "PkinitPreauthMeta.java"
public class org.apache.kerby.kerberos.kerb.preauth.pkinit.PkinitPreauthMeta implements org.apache.kerby.kerberos.kerb.preauth.PreauthPluginMeta {
  private static final java.lang.String NAME;

  private static final int VERSION;

  private static final org.apache.kerby.kerberos.kerb.type.pa.PaDataType[] PA_TYPES;

  public org.apache.kerby.kerberos.kerb.preauth.pkinit.PkinitPreauthMeta();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getName();
    Code:
       0: ldc           #2                  // String PKINIT
       2: areturn

  public int getVersion();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.kerby.kerberos.kerb.type.pa.PaDataType[] getPaTypes();
    Code:
       0: getstatic     #3                  // Field PA_TYPES:[Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
       3: invokevirtual #4                  // Method "[Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;".clone:()Ljava/lang/Object;
       6: checkcast     #5                  // class "[Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;"
       9: areturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #6                  // class org/apache/kerby/kerberos/kerb/type/pa/PaDataType
       4: dup
       5: iconst_0
       6: getstatic     #7                  // Field org/apache/kerby/kerberos/kerb/type/pa/PaDataType.PK_AS_REQ:Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/type/pa/PaDataType.PK_AS_REP:Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
      15: aastore
      16: putstatic     #3                  // Field PA_TYPES:[Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
      19: return
}
