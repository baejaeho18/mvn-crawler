Compiled from "Hex.java"
public class org.apache.commons.codec.binary.Hex implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  public static final java.lang.String DEFAULT_CHARSET_NAME;

  private static final char[] DIGITS_LOWER;

  private static final char[] DIGITS_UPPER;

  private final java.nio.charset.Charset charset;

  public static byte[] decodeHex(char[]) throws org.apache.commons.codec.DecoderException;
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: ishr
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #2                  // Method decodeHex:([C[BI)I
      13: pop
      14: aload_1
      15: areturn

  public static int decodeHex(char[], byte[], int) throws org.apache.commons.codec.DecoderException;
    Code:
       0: aload_0
       1: arraylength
       2: istore_3
       3: iload_3
       4: iconst_1
       5: iand
       6: ifeq          19
       9: new           #3                  // class org/apache/commons/codec/DecoderException
      12: dup
      13: ldc           #4                  // String Odd number of characters.
      15: invokespecial #5                  // Method org/apache/commons/codec/DecoderException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_3
      20: iconst_1
      21: ishr
      22: istore        4
      24: aload_1
      25: arraylength
      26: iload_2
      27: isub
      28: iload         4
      30: if_icmpge     43
      33: new           #3                  // class org/apache/commons/codec/DecoderException
      36: dup
      37: ldc           #6                  // String Output array is not large enough to accommodate decoded data.
      39: invokespecial #5                  // Method org/apache/commons/codec/DecoderException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_2
      44: istore        5
      46: iconst_0
      47: istore        6
      49: iload         6
      51: iload_3
      52: if_icmpge     105
      55: aload_0
      56: iload         6
      58: caload
      59: iload         6
      61: invokestatic  #7                  // Method toDigit:(CI)I
      64: iconst_4
      65: ishl
      66: istore        7
      68: iinc          6, 1
      71: iload         7
      73: aload_0
      74: iload         6
      76: caload
      77: iload         6
      79: invokestatic  #7                  // Method toDigit:(CI)I
      82: ior
      83: istore        7
      85: iinc          6, 1
      88: aload_1
      89: iload         5
      91: iload         7
      93: sipush        255
      96: iand
      97: i2b
      98: bastore
      99: iinc          5, 1
     102: goto          49
     105: iload         4
     107: ireturn

  public static byte[] decodeHex(java.lang.String) throws org.apache.commons.codec.DecoderException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/lang/String.toCharArray:()[C
       4: invokestatic  #9                  // Method decodeHex:([C)[B
       7: areturn

  public static char[] encodeHex(byte[]);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method encodeHex:([BZ)[C
       5: areturn

  public static char[] encodeHex(byte[], boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: getstatic     #11                 // Field DIGITS_LOWER:[C
       8: goto          14
      11: getstatic     #12                 // Field DIGITS_UPPER:[C
      14: invokestatic  #13                 // Method encodeHex:([B[C)[C
      17: areturn

  protected static char[] encodeHex(byte[], char[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: iload_2
       4: iconst_1
       5: ishl
       6: newarray       char
       8: astore_3
       9: aload_0
      10: iconst_0
      11: aload_0
      12: arraylength
      13: aload_1
      14: aload_3
      15: iconst_0
      16: invokestatic  #14                 // Method encodeHex:([BII[C[CI)V
      19: aload_3
      20: areturn

  public static char[] encodeHex(byte[], int, int, boolean);
    Code:
       0: iload_2
       1: iconst_1
       2: ishl
       3: newarray       char
       5: astore        4
       7: aload_0
       8: iload_1
       9: iload_2
      10: iload_3
      11: ifeq          20
      14: getstatic     #11                 // Field DIGITS_LOWER:[C
      17: goto          23
      20: getstatic     #12                 // Field DIGITS_UPPER:[C
      23: aload         4
      25: iconst_0
      26: invokestatic  #14                 // Method encodeHex:([BII[C[CI)V
      29: aload         4
      31: areturn

  public static void encodeHex(byte[], int, int, boolean, char[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: ifeq          13
       7: getstatic     #11                 // Field DIGITS_LOWER:[C
      10: goto          16
      13: getstatic     #12                 // Field DIGITS_UPPER:[C
      16: aload         4
      18: iload         5
      20: invokestatic  #14                 // Method encodeHex:([BII[C[CI)V
      23: return

  private static void encodeHex(byte[], int, int, char[], char[], int);
    Code:
       0: iload_1
       1: istore        6
       3: iload         5
       5: istore        7
       7: iload         6
       9: iload_1
      10: iload_2
      11: iadd
      12: if_icmpge     58
      15: aload         4
      17: iload         7
      19: iinc          7, 1
      22: aload_3
      23: sipush        240
      26: aload_0
      27: iload         6
      29: baload
      30: iand
      31: iconst_4
      32: iushr
      33: caload
      34: castore
      35: aload         4
      37: iload         7
      39: iinc          7, 1
      42: aload_3
      43: bipush        15
      45: aload_0
      46: iload         6
      48: baload
      49: iand
      50: caload
      51: castore
      52: iinc          6, 1
      55: goto          7
      58: return

  public static char[] encodeHex(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #15                 // Method encodeHex:(Ljava/nio/ByteBuffer;Z)[C
       5: areturn

  public static char[] encodeHex(java.nio.ByteBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: getstatic     #11                 // Field DIGITS_LOWER:[C
       8: goto          14
      11: getstatic     #12                 // Field DIGITS_UPPER:[C
      14: invokestatic  #16                 // Method encodeHex:(Ljava/nio/ByteBuffer;[C)[C
      17: areturn

  protected static char[] encodeHex(java.nio.ByteBuffer, char[]);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method toByteArray:(Ljava/nio/ByteBuffer;)[B
       4: aload_1
       5: invokestatic  #13                 // Method encodeHex:([B[C)[C
       8: areturn

  public static java.lang.String encodeHexString(byte[]);
    Code:
       0: new           #18                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokestatic  #19                 // Method encodeHex:([B)[C
       8: invokespecial #20                 // Method java/lang/String."<init>":([C)V
      11: areturn

  public static java.lang.String encodeHexString(byte[], boolean);
    Code:
       0: new           #18                 // class java/lang/String
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #10                 // Method encodeHex:([BZ)[C
       9: invokespecial #20                 // Method java/lang/String."<init>":([C)V
      12: areturn

  public static java.lang.String encodeHexString(java.nio.ByteBuffer);
    Code:
       0: new           #18                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokestatic  #21                 // Method encodeHex:(Ljava/nio/ByteBuffer;)[C
       8: invokespecial #20                 // Method java/lang/String."<init>":([C)V
      11: areturn

  public static java.lang.String encodeHexString(java.nio.ByteBuffer, boolean);
    Code:
       0: new           #18                 // class java/lang/String
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #15                 // Method encodeHex:(Ljava/nio/ByteBuffer;Z)[C
       9: invokespecial #20                 // Method java/lang/String."<init>":([C)V
      12: areturn

  private static byte[] toByteArray(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #23                 // Method java/nio/ByteBuffer.hasArray:()Z
       9: ifeq          31
      12: aload_0
      13: invokevirtual #24                 // Method java/nio/ByteBuffer.array:()[B
      16: astore_2
      17: iload_1
      18: aload_2
      19: arraylength
      20: if_icmpne     31
      23: aload_0
      24: iload_1
      25: invokevirtual #25                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      28: pop
      29: aload_2
      30: areturn
      31: iload_1
      32: newarray       byte
      34: astore_2
      35: aload_0
      36: aload_2
      37: invokevirtual #26                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      40: pop
      41: aload_2
      42: areturn

  protected static int toDigit(char, int) throws org.apache.commons.codec.DecoderException;
    Code:
       0: iload_0
       1: bipush        16
       3: invokestatic  #27                 // Method java/lang/Character.digit:(CI)I
       6: istore_2
       7: iload_2
       8: iconst_m1
       9: if_icmpne     48
      12: new           #3                  // class org/apache/commons/codec/DecoderException
      15: dup
      16: new           #28                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #30                 // String Illegal hexadecimal character
      25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_0
      29: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: ldc           #33                 // String  at index
      34: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: iload_1
      38: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #5                  // Method org/apache/commons/codec/DecoderException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: iload_2
      49: ireturn

  public org.apache.commons.codec.binary.Hex();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #37                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       8: putfield      #38                 // Field charset:Ljava/nio/charset/Charset;
      11: return

  public org.apache.commons.codec.binary.Hex(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #38                 // Field charset:Ljava/nio/charset/Charset;
       9: return

  public org.apache.commons.codec.binary.Hex(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: invokespecial #40                 // Method "<init>":(Ljava/nio/charset/Charset;)V
       8: return

  public byte[] decode(byte[]) throws org.apache.commons.codec.DecoderException;
    Code:
       0: new           #18                 // class java/lang/String
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #41                 // Method getCharset:()Ljava/nio/charset/Charset;
       9: invokespecial #42                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      12: invokevirtual #8                  // Method java/lang/String.toCharArray:()[C
      15: invokestatic  #9                  // Method decodeHex:([C)[B
      18: areturn

  public byte[] decode(java.nio.ByteBuffer) throws org.apache.commons.codec.DecoderException;
    Code:
       0: new           #18                 // class java/lang/String
       3: dup
       4: aload_1
       5: invokestatic  #17                 // Method toByteArray:(Ljava/nio/ByteBuffer;)[B
       8: aload_0
       9: invokevirtual #41                 // Method getCharset:()Ljava/nio/charset/Charset;
      12: invokespecial #42                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      15: invokevirtual #8                  // Method java/lang/String.toCharArray:()[C
      18: invokestatic  #9                  // Method decodeHex:([C)[B
      21: areturn

  public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;
    Code:
       0: aload_1
       1: instanceof    #18                 // class java/lang/String
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #18                 // class java/lang/String
      12: invokevirtual #8                  // Method java/lang/String.toCharArray:()[C
      15: invokevirtual #43                 // Method decode:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
      19: aload_1
      20: instanceof    #44                 // class "[B"
      23: ifeq          38
      26: aload_0
      27: aload_1
      28: checkcast     #44                 // class "[B"
      31: checkcast     #44                 // class "[B"
      34: invokevirtual #45                 // Method decode:([B)[B
      37: areturn
      38: aload_1
      39: instanceof    #46                 // class java/nio/ByteBuffer
      42: ifeq          54
      45: aload_0
      46: aload_1
      47: checkcast     #46                 // class java/nio/ByteBuffer
      50: invokevirtual #47                 // Method decode:(Ljava/nio/ByteBuffer;)[B
      53: areturn
      54: aload_1
      55: checkcast     #48                 // class "[C"
      58: checkcast     #48                 // class "[C"
      61: invokestatic  #9                  // Method decodeHex:([C)[B
      64: areturn
      65: astore_2
      66: new           #3                  // class org/apache/commons/codec/DecoderException
      69: dup
      70: aload_2
      71: invokevirtual #50                 // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
      74: aload_2
      75: invokespecial #51                 // Method org/apache/commons/codec/DecoderException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: athrow
    Exception table:
       from    to  target type
          54    64    65   Class java/lang/ClassCastException

  public byte[] encode(byte[]);
    Code:
       0: aload_1
       1: invokestatic  #52                 // Method encodeHexString:([B)Ljava/lang/String;
       4: aload_0
       5: invokevirtual #41                 // Method getCharset:()Ljava/nio/charset/Charset;
       8: invokevirtual #53                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: areturn

  public byte[] encode(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokestatic  #54                 // Method encodeHexString:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
       4: aload_0
       5: invokevirtual #41                 // Method getCharset:()Ljava/nio/charset/Charset;
       8: invokevirtual #53                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: areturn

  public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;
    Code:
       0: aload_1
       1: instanceof    #18                 // class java/lang/String
       4: ifeq          22
       7: aload_1
       8: checkcast     #18                 // class java/lang/String
      11: aload_0
      12: invokevirtual #41                 // Method getCharset:()Ljava/nio/charset/Charset;
      15: invokevirtual #53                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      18: astore_2
      19: goto          65
      22: aload_1
      23: instanceof    #46                 // class java/nio/ByteBuffer
      26: ifeq          40
      29: aload_1
      30: checkcast     #46                 // class java/nio/ByteBuffer
      33: invokestatic  #17                 // Method toByteArray:(Ljava/nio/ByteBuffer;)[B
      36: astore_2
      37: goto          65
      40: aload_1
      41: checkcast     #44                 // class "[B"
      44: checkcast     #44                 // class "[B"
      47: astore_2
      48: goto          65
      51: astore_3
      52: new           #55                 // class org/apache/commons/codec/EncoderException
      55: dup
      56: aload_3
      57: invokevirtual #50                 // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
      60: aload_3
      61: invokespecial #56                 // Method org/apache/commons/codec/EncoderException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: athrow
      65: aload_2
      66: invokestatic  #19                 // Method encodeHex:([B)[C
      69: areturn
    Exception table:
       from    to  target type
          40    48    51   Class java/lang/ClassCastException

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #38                 // Field charset:Ljava/nio/charset/Charset;
       4: areturn

  public java.lang.String getCharsetName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field charset:Ljava/nio/charset/Charset;
       4: invokevirtual #57                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #58                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #59                 // String [charsetName=
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #38                 // Field charset:Ljava/nio/charset/Charset;
      23: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #61                 // String ]
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  static {};
    Code:
       0: getstatic     #62                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: putstatic     #37                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: bipush        16
       8: newarray       char
      10: dup
      11: iconst_0
      12: bipush        48
      14: castore
      15: dup
      16: iconst_1
      17: bipush        49
      19: castore
      20: dup
      21: iconst_2
      22: bipush        50
      24: castore
      25: dup
      26: iconst_3
      27: bipush        51
      29: castore
      30: dup
      31: iconst_4
      32: bipush        52
      34: castore
      35: dup
      36: iconst_5
      37: bipush        53
      39: castore
      40: dup
      41: bipush        6
      43: bipush        54
      45: castore
      46: dup
      47: bipush        7
      49: bipush        55
      51: castore
      52: dup
      53: bipush        8
      55: bipush        56
      57: castore
      58: dup
      59: bipush        9
      61: bipush        57
      63: castore
      64: dup
      65: bipush        10
      67: bipush        97
      69: castore
      70: dup
      71: bipush        11
      73: bipush        98
      75: castore
      76: dup
      77: bipush        12
      79: bipush        99
      81: castore
      82: dup
      83: bipush        13
      85: bipush        100
      87: castore
      88: dup
      89: bipush        14
      91: bipush        101
      93: castore
      94: dup
      95: bipush        15
      97: bipush        102
      99: castore
     100: putstatic     #11                 // Field DIGITS_LOWER:[C
     103: bipush        16
     105: newarray       char
     107: dup
     108: iconst_0
     109: bipush        48
     111: castore
     112: dup
     113: iconst_1
     114: bipush        49
     116: castore
     117: dup
     118: iconst_2
     119: bipush        50
     121: castore
     122: dup
     123: iconst_3
     124: bipush        51
     126: castore
     127: dup
     128: iconst_4
     129: bipush        52
     131: castore
     132: dup
     133: iconst_5
     134: bipush        53
     136: castore
     137: dup
     138: bipush        6
     140: bipush        54
     142: castore
     143: dup
     144: bipush        7
     146: bipush        55
     148: castore
     149: dup
     150: bipush        8
     152: bipush        56
     154: castore
     155: dup
     156: bipush        9
     158: bipush        57
     160: castore
     161: dup
     162: bipush        10
     164: bipush        65
     166: castore
     167: dup
     168: bipush        11
     170: bipush        66
     172: castore
     173: dup
     174: bipush        12
     176: bipush        67
     178: castore
     179: dup
     180: bipush        13
     182: bipush        68
     184: castore
     185: dup
     186: bipush        14
     188: bipush        69
     190: castore
     191: dup
     192: bipush        15
     194: bipush        70
     196: castore
     197: putstatic     #12                 // Field DIGITS_UPPER:[C
     200: return
}
