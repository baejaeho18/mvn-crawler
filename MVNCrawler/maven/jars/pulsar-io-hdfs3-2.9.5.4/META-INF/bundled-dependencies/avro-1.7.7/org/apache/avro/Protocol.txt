Compiled from "Protocol.java"
public class org.apache.avro.Protocol extends org.apache.avro.JsonProperties {
  public static final long VERSION;

  private static final java.util.Set<java.lang.String> MESSAGE_RESERVED;

  private java.lang.String name;

  private java.lang.String namespace;

  private java.lang.String doc;

  private org.apache.avro.Schema$Names types;

  private java.util.Map<java.lang.String, org.apache.avro.Protocol$Message> messages;

  private byte[] md5;

  public static final org.apache.avro.Schema SYSTEM_ERROR;

  public static final org.apache.avro.Schema SYSTEM_ERRORS;

  private static final java.util.Set<java.lang.String> PROTOCOL_RESERVED;

  private org.apache.avro.Protocol();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field PROTOCOL_RESERVED:Ljava/util/Set;
       4: invokespecial #4                  // Method org/apache/avro/JsonProperties."<init>":(Ljava/util/Set;)V
       7: aload_0
       8: new           #5                  // class org/apache/avro/Schema$Names
      11: dup
      12: invokespecial #6                  // Method org/apache/avro/Schema$Names."<init>":()V
      15: putfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      18: aload_0
      19: new           #7                  // class java/util/LinkedHashMap
      22: dup
      23: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      26: putfield      #9                  // Field messages:Ljava/util/Map;
      29: return

  public org.apache.avro.Protocol(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field PROTOCOL_RESERVED:Ljava/util/Set;
       4: invokespecial #4                  // Method org/apache/avro/JsonProperties."<init>":(Ljava/util/Set;)V
       7: aload_0
       8: new           #5                  // class org/apache/avro/Schema$Names
      11: dup
      12: invokespecial #6                  // Method org/apache/avro/Schema$Names."<init>":()V
      15: putfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      18: aload_0
      19: new           #7                  // class java/util/LinkedHashMap
      22: dup
      23: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      26: putfield      #9                  // Field messages:Ljava/util/Map;
      29: aload_0
      30: aload_1
      31: putfield      #10                 // Field name:Ljava/lang/String;
      34: aload_0
      35: aload_2
      36: putfield      #11                 // Field doc:Ljava/lang/String;
      39: aload_0
      40: aload_3
      41: putfield      #12                 // Field namespace:Ljava/lang/String;
      44: return

  public org.apache.avro.Protocol(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #13                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getNamespace();
    Code:
       0: aload_0
       1: getfield      #12                 // Field namespace:Ljava/lang/String;
       4: areturn

  public java.lang.String getDoc();
    Code:
       0: aload_0
       1: getfield      #11                 // Field doc:Ljava/lang/String;
       4: areturn

  public java.util.Collection<org.apache.avro.Schema> getTypes();
    Code:
       0: aload_0
       1: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
       4: invokevirtual #14                 // Method org/apache/avro/Schema$Names.values:()Ljava/util/Collection;
       7: areturn

  public org.apache.avro.Schema getType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
       4: aload_1
       5: invokevirtual #15                 // Method org/apache/avro/Schema$Names.get:(Ljava/lang/Object;)Lorg/apache/avro/Schema;
       8: areturn

  public void setTypes(java.util.Collection<org.apache.avro.Schema>);
    Code:
       0: aload_0
       1: new           #5                  // class org/apache/avro/Schema$Names
       4: dup
       5: invokespecial #6                  // Method org/apache/avro/Schema$Names."<init>":()V
       8: putfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      11: aload_1
      12: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          48
      27: aload_2
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #19                 // class org/apache/avro/Schema
      36: astore_3
      37: aload_0
      38: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      41: aload_3
      42: invokevirtual #20                 // Method org/apache/avro/Schema$Names.add:(Lorg/apache/avro/Schema;)V
      45: goto          18
      48: return

  public java.util.Map<java.lang.String, org.apache.avro.Protocol$Message> getMessages();
    Code:
       0: aload_0
       1: getfield      #9                  // Field messages:Ljava/util/Map;
       4: areturn

  public org.apache.avro.Protocol$Message createMessage(java.lang.String, java.lang.String, org.apache.avro.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #7                  // class java/util/LinkedHashMap
       6: dup
       7: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      10: aload_3
      11: invokevirtual #21                 // Method createMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/avro/Schema;)Lorg/apache/avro/Protocol$Message;
      14: areturn

  public <T> org.apache.avro.Protocol$Message createMessage(java.lang.String, java.lang.String, java.util.Map<java.lang.String, T>, org.apache.avro.Schema);
    Code:
       0: new           #22                 // class org/apache/avro/Protocol$Message
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aconst_null
      11: invokespecial #23                 // Method org/apache/avro/Protocol$Message."<init>":(Lorg/apache/avro/Protocol;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/avro/Schema;Lorg/apache/avro/Protocol$1;)V
      14: areturn

  public org.apache.avro.Protocol$Message createMessage(java.lang.String, java.lang.String, org.apache.avro.Schema, org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #7                  // class java/util/LinkedHashMap
       6: dup
       7: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      10: aload_3
      11: aload         4
      13: aload         5
      15: invokevirtual #24                 // Method createMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/Protocol$Message;
      18: areturn

  public <T> org.apache.avro.Protocol$Message createMessage(java.lang.String, java.lang.String, java.util.Map<java.lang.String, T>, org.apache.avro.Schema, org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: new           #25                 // class org/apache/avro/Protocol$TwoWayMessage
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: aload         6
      14: aconst_null
      15: invokespecial #26                 // Method org/apache/avro/Protocol$TwoWayMessage."<init>":(Lorg/apache/avro/Protocol;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;Lorg/apache/avro/Protocol$1;)V
      18: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #27                 // class org/apache/avro/Protocol
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #27                 // class org/apache/avro/Protocol
      20: astore_2
      21: aload_0
      22: getfield      #10                 // Field name:Ljava/lang/String;
      25: aload_2
      26: getfield      #10                 // Field name:Ljava/lang/String;
      29: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          99
      35: aload_0
      36: getfield      #12                 // Field namespace:Ljava/lang/String;
      39: aload_2
      40: getfield      #12                 // Field namespace:Ljava/lang/String;
      43: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          99
      49: aload_0
      50: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      53: aload_2
      54: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      57: invokevirtual #29                 // Method org/apache/avro/Schema$Names.equals:(Ljava/lang/Object;)Z
      60: ifeq          99
      63: aload_0
      64: getfield      #9                  // Field messages:Ljava/util/Map;
      67: aload_2
      68: getfield      #9                  // Field messages:Ljava/util/Map;
      71: invokeinterface #30,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      76: ifeq          99
      79: aload_0
      80: getfield      #31                 // Field props:Ljava/util/Map;
      83: aload_2
      84: getfield      #31                 // Field props:Ljava/util/Map;
      87: invokeinterface #30,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field name:Ljava/lang/String;
       4: invokevirtual #32                 // Method java/lang/String.hashCode:()I
       7: aload_0
       8: getfield      #12                 // Field namespace:Ljava/lang/String;
      11: invokevirtual #32                 // Method java/lang/String.hashCode:()I
      14: iadd
      15: aload_0
      16: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      19: invokevirtual #33                 // Method org/apache/avro/Schema$Names.hashCode:()I
      22: iadd
      23: aload_0
      24: getfield      #9                  // Field messages:Ljava/util/Map;
      27: invokeinterface #34,  1           // InterfaceMethod java/util/Map.hashCode:()I
      32: iadd
      33: aload_0
      34: getfield      #31                 // Field props:Ljava/util/Map;
      37: invokeinterface #34,  1           // InterfaceMethod java/util/Map.hashCode:()I
      42: iadd
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #35                 // Method toString:(Z)Ljava/lang/String;
       5: areturn

  public java.lang.String toString(boolean);
    Code:
       0: new           #36                 // class java/io/StringWriter
       3: dup
       4: invokespecial #37                 // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: getstatic     #38                 // Field org/apache/avro/Schema.FACTORY:Lorg/codehaus/jackson/JsonFactory;
      11: aload_2
      12: invokevirtual #39                 // Method org/codehaus/jackson/JsonFactory.createJsonGenerator:(Ljava/io/Writer;)Lorg/codehaus/jackson/JsonGenerator;
      15: astore_3
      16: iload_1
      17: ifeq          25
      20: aload_3
      21: invokevirtual #40                 // Method org/codehaus/jackson/JsonGenerator.useDefaultPrettyPrinter:()Lorg/codehaus/jackson/JsonGenerator;
      24: pop
      25: aload_0
      26: aload_3
      27: invokevirtual #41                 // Method toJson:(Lorg/codehaus/jackson/JsonGenerator;)V
      30: aload_3
      31: invokevirtual #42                 // Method org/codehaus/jackson/JsonGenerator.flush:()V
      34: aload_2
      35: invokevirtual #43                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      38: areturn
      39: astore_2
      40: new           #45                 // class org/apache/avro/AvroRuntimeException
      43: dup
      44: aload_2
      45: invokespecial #46                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/Throwable;)V
      48: athrow
    Exception table:
       from    to  target type
           0    38    39   Class java/io/IOException

  void toJson(org.codehaus.jackson.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
       4: aload_0
       5: getfield      #12                 // Field namespace:Ljava/lang/String;
       8: invokevirtual #47                 // Method org/apache/avro/Schema$Names.space:(Ljava/lang/String;)V
      11: aload_1
      12: invokevirtual #48                 // Method org/codehaus/jackson/JsonGenerator.writeStartObject:()V
      15: aload_1
      16: ldc           #49                 // String protocol
      18: aload_0
      19: getfield      #10                 // Field name:Ljava/lang/String;
      22: invokevirtual #50                 // Method org/codehaus/jackson/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      25: aload_1
      26: ldc           #51                 // String namespace
      28: aload_0
      29: getfield      #12                 // Field namespace:Ljava/lang/String;
      32: invokevirtual #50                 // Method org/codehaus/jackson/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      35: aload_0
      36: getfield      #11                 // Field doc:Ljava/lang/String;
      39: ifnull        52
      42: aload_1
      43: ldc           #52                 // String doc
      45: aload_0
      46: getfield      #11                 // Field doc:Ljava/lang/String;
      49: invokevirtual #50                 // Method org/codehaus/jackson/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      52: aload_0
      53: aload_1
      54: invokevirtual #53                 // Method writeProps:(Lorg/codehaus/jackson/JsonGenerator;)V
      57: aload_1
      58: ldc           #54                 // String types
      60: invokevirtual #55                 // Method org/codehaus/jackson/JsonGenerator.writeArrayFieldStart:(Ljava/lang/String;)V
      63: new           #5                  // class org/apache/avro/Schema$Names
      66: dup
      67: aload_0
      68: getfield      #12                 // Field namespace:Ljava/lang/String;
      71: invokespecial #56                 // Method org/apache/avro/Schema$Names."<init>":(Ljava/lang/String;)V
      74: astore_2
      75: aload_0
      76: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      79: invokevirtual #14                 // Method org/apache/avro/Schema$Names.values:()Ljava/util/Collection;
      82: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      87: astore_3
      88: aload_3
      89: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          127
      97: aload_3
      98: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #19                 // class org/apache/avro/Schema
     106: astore        4
     108: aload_2
     109: aload         4
     111: invokevirtual #57                 // Method org/apache/avro/Schema$Names.contains:(Lorg/apache/avro/Schema;)Z
     114: ifne          124
     117: aload         4
     119: aload_2
     120: aload_1
     121: invokevirtual #58                 // Method org/apache/avro/Schema.toJson:(Lorg/apache/avro/Schema$Names;Lorg/codehaus/jackson/JsonGenerator;)V
     124: goto          88
     127: aload_1
     128: invokevirtual #59                 // Method org/codehaus/jackson/JsonGenerator.writeEndArray:()V
     131: aload_1
     132: ldc           #60                 // String messages
     134: invokevirtual #61                 // Method org/codehaus/jackson/JsonGenerator.writeObjectFieldStart:(Ljava/lang/String;)V
     137: aload_0
     138: getfield      #9                  // Field messages:Ljava/util/Map;
     141: invokeinterface #62,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     146: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     151: astore_3
     152: aload_3
     153: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     158: ifeq          203
     161: aload_3
     162: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     167: checkcast     #64                 // class java/util/Map$Entry
     170: astore        4
     172: aload_1
     173: aload         4
     175: invokeinterface #65,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     180: checkcast     #66                 // class java/lang/String
     183: invokevirtual #67                 // Method org/codehaus/jackson/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
     186: aload         4
     188: invokeinterface #68,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     193: checkcast     #22                 // class org/apache/avro/Protocol$Message
     196: aload_1
     197: invokevirtual #69                 // Method org/apache/avro/Protocol$Message.toJson:(Lorg/codehaus/jackson/JsonGenerator;)V
     200: goto          152
     203: aload_1
     204: invokevirtual #70                 // Method org/codehaus/jackson/JsonGenerator.writeEndObject:()V
     207: aload_1
     208: invokevirtual #70                 // Method org/codehaus/jackson/JsonGenerator.writeEndObject:()V
     211: return

  public byte[] getMD5();
    Code:
       0: aload_0
       1: getfield      #71                 // Field md5:[B
       4: ifnonnull     41
       7: aload_0
       8: ldc           #72                 // String MD5
      10: invokestatic  #73                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      13: aload_0
      14: invokevirtual #74                 // Method toString:()Ljava/lang/String;
      17: ldc           #75                 // String UTF-8
      19: invokevirtual #76                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      22: invokevirtual #77                 // Method java/security/MessageDigest.digest:([B)[B
      25: putfield      #71                 // Field md5:[B
      28: goto          41
      31: astore_1
      32: new           #45                 // class org/apache/avro/AvroRuntimeException
      35: dup
      36: aload_1
      37: invokespecial #46                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: getfield      #71                 // Field md5:[B
      45: areturn
    Exception table:
       from    to  target type
           7    28    31   Class java/lang/Exception

  public static org.apache.avro.Protocol parse(java.io.File) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field org/apache/avro/Schema.FACTORY:Lorg/codehaus/jackson/JsonFactory;
       3: aload_0
       4: invokevirtual #79                 // Method org/codehaus/jackson/JsonFactory.createJsonParser:(Ljava/io/File;)Lorg/codehaus/jackson/JsonParser;
       7: invokestatic  #80                 // Method parse:(Lorg/codehaus/jackson/JsonParser;)Lorg/apache/avro/Protocol;
      10: areturn

  public static org.apache.avro.Protocol parse(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #38                 // Field org/apache/avro/Schema.FACTORY:Lorg/codehaus/jackson/JsonFactory;
       3: aload_0
       4: invokevirtual #81                 // Method org/codehaus/jackson/JsonFactory.createJsonParser:(Ljava/io/InputStream;)Lorg/codehaus/jackson/JsonParser;
       7: invokestatic  #80                 // Method parse:(Lorg/codehaus/jackson/JsonParser;)Lorg/apache/avro/Protocol;
      10: areturn

  public static org.apache.avro.Protocol parse(java.lang.String, java.lang.String...);
    Code:
       0: new           #82                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aload_1
      10: astore_3
      11: aload_3
      12: arraylength
      13: istore        4
      15: iconst_0
      16: istore        5
      18: iload         5
      20: iload         4
      22: if_icmpge     44
      25: aload_3
      26: iload         5
      28: aaload
      29: astore        6
      31: aload_2
      32: aload         6
      34: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: iinc          5, 1
      41: goto          18
      44: aload_2
      45: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokestatic  #86                 // Method parse:(Ljava/lang/String;)Lorg/apache/avro/Protocol;
      51: areturn

  public static org.apache.avro.Protocol parse(java.lang.String);
    Code:
       0: getstatic     #38                 // Field org/apache/avro/Schema.FACTORY:Lorg/codehaus/jackson/JsonFactory;
       3: new           #87                 // class java/io/ByteArrayInputStream
       6: dup
       7: aload_0
       8: ldc           #75                 // String UTF-8
      10: invokevirtual #76                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      13: invokespecial #88                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      16: invokevirtual #81                 // Method org/codehaus/jackson/JsonFactory.createJsonParser:(Ljava/io/InputStream;)Lorg/codehaus/jackson/JsonParser;
      19: invokestatic  #80                 // Method parse:(Lorg/codehaus/jackson/JsonParser;)Lorg/apache/avro/Protocol;
      22: areturn
      23: astore_1
      24: new           #45                 // class org/apache/avro/AvroRuntimeException
      27: dup
      28: aload_1
      29: invokespecial #46                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/Throwable;)V
      32: athrow
    Exception table:
       from    to  target type
           0    22    23   Class java/io/IOException

  private static org.apache.avro.Protocol parse(org.codehaus.jackson.JsonParser);
    Code:
       0: new           #27                 // class org/apache/avro/Protocol
       3: dup
       4: invokespecial #89                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #90                 // Field org/apache/avro/Schema.MAPPER:Lorg/codehaus/jackson/map/ObjectMapper;
      12: aload_0
      13: invokevirtual #91                 // Method org/codehaus/jackson/map/ObjectMapper.readTree:(Lorg/codehaus/jackson/JsonParser;)Lorg/codehaus/jackson/JsonNode;
      16: invokespecial #92                 // Method parse:(Lorg/codehaus/jackson/JsonNode;)V
      19: aload_1
      20: areturn
      21: astore_1
      22: new           #93                 // class org/apache/avro/SchemaParseException
      25: dup
      26: aload_1
      27: invokespecial #94                 // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
    Exception table:
       from    to  target type
           0    20    21   Class java/io/IOException

  private void parse(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #95                 // Method parseNamespace:(Lorg/codehaus/jackson/JsonNode;)V
       5: aload_0
       6: aload_1
       7: invokespecial #96                 // Method parseName:(Lorg/codehaus/jackson/JsonNode;)V
      10: aload_0
      11: aload_1
      12: invokespecial #97                 // Method parseTypes:(Lorg/codehaus/jackson/JsonNode;)V
      15: aload_0
      16: aload_1
      17: invokespecial #98                 // Method parseMessages:(Lorg/codehaus/jackson/JsonNode;)V
      20: aload_0
      21: aload_1
      22: invokespecial #99                 // Method parseDoc:(Lorg/codehaus/jackson/JsonNode;)V
      25: aload_0
      26: aload_1
      27: invokespecial #100                // Method parseProps:(Lorg/codehaus/jackson/JsonNode;)V
      30: return

  private void parseNamespace(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_1
       1: ldc           #51                 // String namespace
       3: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
       6: astore_2
       7: aload_2
       8: ifnonnull     12
      11: return
      12: aload_0
      13: aload_2
      14: invokevirtual #102                // Method org/codehaus/jackson/JsonNode.getTextValue:()Ljava/lang/String;
      17: putfield      #12                 // Field namespace:Ljava/lang/String;
      20: aload_0
      21: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
      24: aload_0
      25: getfield      #12                 // Field namespace:Ljava/lang/String;
      28: invokevirtual #47                 // Method org/apache/avro/Schema$Names.space:(Ljava/lang/String;)V
      31: return

  private void parseDoc(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #103                // Method parseDocNode:(Lorg/codehaus/jackson/JsonNode;)Ljava/lang/String;
       6: putfield      #11                 // Field doc:Ljava/lang/String;
       9: return

  private java.lang.String parseDocNode(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_1
       1: ldc           #52                 // String doc
       3: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
       6: astore_2
       7: aload_2
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_2
      14: invokevirtual #102                // Method org/codehaus/jackson/JsonNode.getTextValue:()Ljava/lang/String;
      17: areturn

  private void parseName(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_1
       1: ldc           #49                 // String protocol
       3: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
       6: astore_2
       7: aload_2
       8: ifnonnull     38
      11: new           #93                 // class org/apache/avro/SchemaParseException
      14: dup
      15: new           #82                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #105                // String No protocol name specified:
      24: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_2
      40: invokevirtual #102                // Method org/codehaus/jackson/JsonNode.getTextValue:()Ljava/lang/String;
      43: putfield      #10                 // Field name:Ljava/lang/String;
      46: return

  private void parseTypes(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_1
       1: ldc           #54                 // String types
       3: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
       6: astore_2
       7: aload_2
       8: ifnonnull     12
      11: return
      12: aload_2
      13: invokevirtual #108                // Method org/codehaus/jackson/JsonNode.isArray:()Z
      16: ifne          46
      19: new           #93                 // class org/apache/avro/SchemaParseException
      22: dup
      23: new           #82                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #109                // String Types not an array:
      32: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_2
      47: invokevirtual #110                // Method org/codehaus/jackson/JsonNode.iterator:()Ljava/util/Iterator;
      50: astore_3
      51: aload_3
      52: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          120
      60: aload_3
      61: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #111                // class org/codehaus/jackson/JsonNode
      69: astore        4
      71: aload         4
      73: invokevirtual #112                // Method org/codehaus/jackson/JsonNode.isObject:()Z
      76: ifne          107
      79: new           #93                 // class org/apache/avro/SchemaParseException
      82: dup
      83: new           #82                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #113                // String Type not an object:
      92: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload         4
      97: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: aload         4
     109: aload_0
     110: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
     113: invokestatic  #114                // Method org/apache/avro/Schema.parse:(Lorg/codehaus/jackson/JsonNode;Lorg/apache/avro/Schema$Names;)Lorg/apache/avro/Schema;
     116: pop
     117: goto          51
     120: return

  private void parseProps(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method org/codehaus/jackson/JsonNode.getFieldNames:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          49
      14: aload_2
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #66                 // class java/lang/String
      23: astore_3
      24: getstatic     #3                  // Field PROTOCOL_RESERVED:Ljava/util/Set;
      27: aload_3
      28: invokeinterface #116,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      33: ifne          46
      36: aload_0
      37: aload_3
      38: aload_1
      39: aload_3
      40: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      43: invokevirtual #117                // Method addProp:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)V
      46: goto          5
      49: return

  private void parseMessages(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_1
       1: ldc           #60                 // String messages
       3: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
       6: astore_2
       7: aload_2
       8: ifnonnull     12
      11: return
      12: aload_2
      13: invokevirtual #115                // Method org/codehaus/jackson/JsonNode.getFieldNames:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          64
      26: aload_3
      27: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #66                 // class java/lang/String
      35: astore        4
      37: aload_0
      38: getfield      #9                  // Field messages:Ljava/util/Map;
      41: aload         4
      43: aload_0
      44: aload         4
      46: aload_2
      47: aload         4
      49: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      52: invokespecial #118                // Method parseMessage:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/apache/avro/Protocol$Message;
      55: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: goto          17
      64: return

  private org.apache.avro.Protocol$Message parseMessage(java.lang.String, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #103                // Method parseDocNode:(Lorg/codehaus/jackson/JsonNode;)Ljava/lang/String;
       5: astore_3
       6: new           #7                  // class java/util/LinkedHashMap
       9: dup
      10: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      13: astore        4
      15: aload_2
      16: invokevirtual #115                // Method org/codehaus/jackson/JsonNode.getFieldNames:()Ljava/util/Iterator;
      19: astore        5
      21: aload         5
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          75
      31: aload         5
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #66                 // class java/lang/String
      41: astore        6
      43: getstatic     #2                  // Field MESSAGE_RESERVED:Ljava/util/Set;
      46: aload         6
      48: invokeinterface #116,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      53: ifne          72
      56: aload         4
      58: aload         6
      60: aload_2
      61: aload         6
      63: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      66: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: goto          21
      75: aload_2
      76: ldc           #120                // String request
      78: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      81: astore        5
      83: aload         5
      85: ifnull        96
      88: aload         5
      90: invokevirtual #108                // Method org/codehaus/jackson/JsonNode.isArray:()Z
      93: ifne          123
      96: new           #93                 // class org/apache/avro/SchemaParseException
      99: dup
     100: new           #82                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #121                // String No request specified:
     109: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_2
     113: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     116: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: new           #122                // class java/util/ArrayList
     126: dup
     127: invokespecial #123                // Method java/util/ArrayList."<init>":()V
     130: astore        6
     132: aload         5
     134: invokevirtual #110                // Method org/codehaus/jackson/JsonNode.iterator:()Ljava/util/Iterator;
     137: astore        7
     139: aload         7
     141: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          289
     149: aload         7
     151: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #111                // class org/codehaus/jackson/JsonNode
     159: astore        8
     161: aload         8
     163: ldc           #124                // String name
     165: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
     168: astore        9
     170: aload         9
     172: ifnonnull     203
     175: new           #93                 // class org/apache/avro/SchemaParseException
     178: dup
     179: new           #82                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #125                // String No param name:
     188: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload         8
     193: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     196: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     202: athrow
     203: aload         8
     205: ldc           #126                // String type
     207: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
     210: astore        10
     212: aload         10
     214: ifnonnull     245
     217: new           #93                 // class org/apache/avro/SchemaParseException
     220: dup
     221: new           #82                 // class java/lang/StringBuilder
     224: dup
     225: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     228: ldc           #127                // String No param type:
     230: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload         8
     235: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     238: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     241: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     244: athrow
     245: aload         9
     247: invokevirtual #102                // Method org/codehaus/jackson/JsonNode.getTextValue:()Ljava/lang/String;
     250: astore        11
     252: aload         6
     254: new           #128                // class org/apache/avro/Schema$Field
     257: dup
     258: aload         11
     260: aload         10
     262: aload_0
     263: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
     266: invokestatic  #114                // Method org/apache/avro/Schema.parse:(Lorg/codehaus/jackson/JsonNode;Lorg/apache/avro/Schema$Names;)Lorg/apache/avro/Schema;
     269: aconst_null
     270: aload         8
     272: ldc           #129                // String default
     274: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
     277: invokespecial #130                // Method org/apache/avro/Schema$Field."<init>":(Ljava/lang/String;Lorg/apache/avro/Schema;Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)V
     280: invokeinterface #131,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     285: pop
     286: goto          139
     289: aload         6
     291: invokestatic  #132                // Method org/apache/avro/Schema.createRecord:(Ljava/util/List;)Lorg/apache/avro/Schema;
     294: astore        7
     296: iconst_0
     297: istore        8
     299: aload_2
     300: ldc           #133                // String one-way
     302: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
     305: astore        9
     307: aload         9
     309: ifnull        354
     312: aload         9
     314: invokevirtual #134                // Method org/codehaus/jackson/JsonNode.isBoolean:()Z
     317: ifne          347
     320: new           #93                 // class org/apache/avro/SchemaParseException
     323: dup
     324: new           #82                 // class java/lang/StringBuilder
     327: dup
     328: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     331: ldc           #135                // String one-way must be boolean:
     333: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: aload_2
     337: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     340: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     343: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     346: athrow
     347: aload         9
     349: invokevirtual #136                // Method org/codehaus/jackson/JsonNode.getBooleanValue:()Z
     352: istore        8
     354: aload_2
     355: ldc           #137                // String response
     357: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
     360: astore        10
     362: iload         8
     364: ifne          399
     367: aload         10
     369: ifnonnull     399
     372: new           #93                 // class org/apache/avro/SchemaParseException
     375: dup
     376: new           #82                 // class java/lang/StringBuilder
     379: dup
     380: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     383: ldc           #138                // String No response specified:
     385: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     388: aload_2
     389: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     392: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     395: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     398: athrow
     399: aload_2
     400: ldc           #139                // String errors
     402: invokevirtual #101                // Method org/codehaus/jackson/JsonNode.get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
     405: astore        11
     407: iload         8
     409: ifeq          510
     412: aload         11
     414: ifnull        444
     417: new           #93                 // class org/apache/avro/SchemaParseException
     420: dup
     421: new           #82                 // class java/lang/StringBuilder
     424: dup
     425: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     428: ldc           #140                // String one-way can\'t have errors:
     430: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     433: aload_2
     434: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     437: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     443: athrow
     444: aload         10
     446: ifnull        494
     449: aload         10
     451: aload_0
     452: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
     455: invokestatic  #114                // Method org/apache/avro/Schema.parse:(Lorg/codehaus/jackson/JsonNode;Lorg/apache/avro/Schema$Names;)Lorg/apache/avro/Schema;
     458: invokevirtual #141                // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     461: getstatic     #142                // Field org/apache/avro/Schema$Type.NULL:Lorg/apache/avro/Schema$Type;
     464: if_acmpeq     494
     467: new           #93                 // class org/apache/avro/SchemaParseException
     470: dup
     471: new           #82                 // class java/lang/StringBuilder
     474: dup
     475: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     478: ldc           #143                // String One way response must be null:
     480: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     483: aload_2
     484: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     487: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     490: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     493: athrow
     494: new           #22                 // class org/apache/avro/Protocol$Message
     497: dup
     498: aload_0
     499: aload_1
     500: aload_3
     501: aload         4
     503: aload         7
     505: aconst_null
     506: invokespecial #23                 // Method org/apache/avro/Protocol$Message."<init>":(Lorg/apache/avro/Protocol;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/avro/Schema;Lorg/apache/avro/Protocol$1;)V
     509: areturn
     510: aload         10
     512: aload_0
     513: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
     516: invokestatic  #114                // Method org/apache/avro/Schema.parse:(Lorg/codehaus/jackson/JsonNode;Lorg/apache/avro/Schema$Names;)Lorg/apache/avro/Schema;
     519: astore        12
     521: new           #122                // class java/util/ArrayList
     524: dup
     525: invokespecial #123                // Method java/util/ArrayList."<init>":()V
     528: astore        13
     530: aload         13
     532: getstatic     #144                // Field SYSTEM_ERROR:Lorg/apache/avro/Schema;
     535: invokeinterface #131,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     540: pop
     541: aload         11
     543: ifnull        710
     546: aload         11
     548: invokevirtual #108                // Method org/codehaus/jackson/JsonNode.isArray:()Z
     551: ifne          581
     554: new           #93                 // class org/apache/avro/SchemaParseException
     557: dup
     558: new           #82                 // class java/lang/StringBuilder
     561: dup
     562: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     565: ldc           #145                // String Errors not an array:
     567: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     570: aload_2
     571: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     574: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     577: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     580: athrow
     581: aload         11
     583: invokevirtual #110                // Method org/codehaus/jackson/JsonNode.iterator:()Ljava/util/Iterator;
     586: astore        14
     588: aload         14
     590: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     595: ifeq          710
     598: aload         14
     600: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     605: checkcast     #111                // class org/codehaus/jackson/JsonNode
     608: astore        15
     610: aload         15
     612: invokevirtual #102                // Method org/codehaus/jackson/JsonNode.getTextValue:()Ljava/lang/String;
     615: astore        16
     617: aload_0
     618: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
     621: aload         16
     623: invokevirtual #15                 // Method org/apache/avro/Schema$Names.get:(Ljava/lang/Object;)Lorg/apache/avro/Schema;
     626: astore        17
     628: aload         17
     630: ifnonnull     661
     633: new           #93                 // class org/apache/avro/SchemaParseException
     636: dup
     637: new           #82                 // class java/lang/StringBuilder
     640: dup
     641: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     644: ldc           #146                // String Undefined error:
     646: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     649: aload         16
     651: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     654: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     657: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     660: athrow
     661: aload         17
     663: invokevirtual #147                // Method org/apache/avro/Schema.isError:()Z
     666: ifne          697
     669: new           #93                 // class org/apache/avro/SchemaParseException
     672: dup
     673: new           #82                 // class java/lang/StringBuilder
     676: dup
     677: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
     680: ldc           #148                // String Not an error:
     682: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     685: aload         16
     687: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     690: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     693: invokespecial #107                // Method org/apache/avro/SchemaParseException."<init>":(Ljava/lang/String;)V
     696: athrow
     697: aload         13
     699: aload         17
     701: invokeinterface #131,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     706: pop
     707: goto          588
     710: new           #25                 // class org/apache/avro/Protocol$TwoWayMessage
     713: dup
     714: aload_0
     715: aload_1
     716: aload_3
     717: aload         4
     719: aload         7
     721: aload         12
     723: aload         13
     725: invokestatic  #149                // Method org/apache/avro/Schema.createUnion:(Ljava/util/List;)Lorg/apache/avro/Schema;
     728: aconst_null
     729: invokespecial #26                 // Method org/apache/avro/Protocol$TwoWayMessage."<init>":(Lorg/apache/avro/Protocol;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;Lorg/apache/avro/Protocol$1;)V
     732: areturn

  public static void main(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: getstatic     #150                // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #151                // class java/io/File
       6: dup
       7: aload_0
       8: iconst_0
       9: aaload
      10: invokespecial #152                // Method java/io/File."<init>":(Ljava/lang/String;)V
      13: invokestatic  #153                // Method parse:(Ljava/io/File;)Lorg/apache/avro/Protocol;
      16: invokevirtual #154                // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      19: return

  static java.util.Set access$000();
    Code:
       0: getstatic     #2                  // Field MESSAGE_RESERVED:Ljava/util/Set;
       3: areturn

  static org.apache.avro.Schema$Names access$100(org.apache.avro.Protocol);
    Code:
       0: aload_0
       1: getfield      #1                  // Field types:Lorg/apache/avro/Schema$Names;
       4: areturn

  static {};
    Code:
       0: new           #155                // class java/util/HashSet
       3: dup
       4: invokespecial #156                // Method java/util/HashSet."<init>":()V
       7: putstatic     #2                  // Field MESSAGE_RESERVED:Ljava/util/Set;
      10: getstatic     #2                  // Field MESSAGE_RESERVED:Ljava/util/Set;
      13: iconst_5
      14: anewarray     #66                 // class java/lang/String
      17: dup
      18: iconst_0
      19: ldc           #52                 // String doc
      21: aastore
      22: dup
      23: iconst_1
      24: ldc           #137                // String response
      26: aastore
      27: dup
      28: iconst_2
      29: ldc           #120                // String request
      31: aastore
      32: dup
      33: iconst_3
      34: ldc           #139                // String errors
      36: aastore
      37: dup
      38: iconst_4
      39: ldc           #133                // String one-way
      41: aastore
      42: invokestatic  #157                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      45: pop
      46: getstatic     #158                // Field org/apache/avro/Schema$Type.STRING:Lorg/apache/avro/Schema$Type;
      49: invokestatic  #159                // Method org/apache/avro/Schema.create:(Lorg/apache/avro/Schema$Type;)Lorg/apache/avro/Schema;
      52: putstatic     #144                // Field SYSTEM_ERROR:Lorg/apache/avro/Schema;
      55: new           #122                // class java/util/ArrayList
      58: dup
      59: invokespecial #123                // Method java/util/ArrayList."<init>":()V
      62: astore_0
      63: aload_0
      64: getstatic     #144                // Field SYSTEM_ERROR:Lorg/apache/avro/Schema;
      67: invokeinterface #131,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_0
      74: invokestatic  #149                // Method org/apache/avro/Schema.createUnion:(Ljava/util/List;)Lorg/apache/avro/Schema;
      77: putstatic     #160                // Field SYSTEM_ERRORS:Lorg/apache/avro/Schema;
      80: new           #155                // class java/util/HashSet
      83: dup
      84: invokespecial #156                // Method java/util/HashSet."<init>":()V
      87: putstatic     #3                  // Field PROTOCOL_RESERVED:Ljava/util/Set;
      90: getstatic     #3                  // Field PROTOCOL_RESERVED:Ljava/util/Set;
      93: bipush        6
      95: anewarray     #66                 // class java/lang/String
      98: dup
      99: iconst_0
     100: ldc           #51                 // String namespace
     102: aastore
     103: dup
     104: iconst_1
     105: ldc           #49                 // String protocol
     107: aastore
     108: dup
     109: iconst_2
     110: ldc           #52                 // String doc
     112: aastore
     113: dup
     114: iconst_3
     115: ldc           #60                 // String messages
     117: aastore
     118: dup
     119: iconst_4
     120: ldc           #54                 // String types
     122: aastore
     123: dup
     124: iconst_5
     125: ldc           #139                // String errors
     127: aastore
     128: invokestatic  #157                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
     131: pop
     132: return
}
