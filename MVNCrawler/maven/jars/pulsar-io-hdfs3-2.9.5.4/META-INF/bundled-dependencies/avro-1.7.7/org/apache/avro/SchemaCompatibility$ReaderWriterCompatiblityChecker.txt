Compiled from "SchemaCompatibility.java"
final class org.apache.avro.SchemaCompatibility$ReaderWriterCompatiblityChecker {
  private final java.util.Map<org.apache.avro.SchemaCompatibility$ReaderWriter, org.apache.avro.SchemaCompatibility$SchemaCompatibilityType> mMemoizeMap;

  static final boolean $assertionsDisabled;

  private org.apache.avro.SchemaCompatibility$ReaderWriterCompatiblityChecker();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field mMemoizeMap:Ljava/util/Map;
      15: return

  public org.apache.avro.SchemaCompatibility$SchemaCompatibilityType getCompatibility(org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: invokestatic  #6                  // Method org/apache/avro/SchemaCompatibility.access$100:()Lorg/slf4j/Logger;
       3: ldc           #7                  // String Checking compatibility of reader {} with writer {}
       5: aload_1
       6: aload_2
       7: invokeinterface #8,  4            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: new           #9                  // class org/apache/avro/SchemaCompatibility$ReaderWriter
      15: dup
      16: aload_1
      17: aload_2
      18: invokespecial #10                 // Method org/apache/avro/SchemaCompatibility$ReaderWriter."<init>":(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)V
      21: astore_3
      22: aload_0
      23: getfield      #5                  // Field mMemoizeMap:Ljava/util/Map;
      26: aload_3
      27: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #12                 // class org/apache/avro/SchemaCompatibility$SchemaCompatibilityType
      35: astore        4
      37: aload         4
      39: ifnull        57
      42: aload         4
      44: getstatic     #13                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.RECURSION_IN_PROGRESS:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      47: if_acmpne     54
      50: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      53: areturn
      54: aload         4
      56: areturn
      57: aload_0
      58: getfield      #5                  // Field mMemoizeMap:Ljava/util/Map;
      61: aload_3
      62: getstatic     #13                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.RECURSION_IN_PROGRESS:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      65: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_0
      72: aload_1
      73: aload_2
      74: invokespecial #16                 // Method calculateCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      77: astore        5
      79: aload_0
      80: getfield      #5                  // Field mMemoizeMap:Ljava/util/Map;
      83: aload_3
      84: aload         5
      86: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: aload         5
      94: areturn

  private org.apache.avro.SchemaCompatibility$SchemaCompatibilityType calculateCompatibility(org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: getstatic     #17                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #18                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: getstatic     #17                 // Field $assertionsDisabled:Z
      21: ifne          36
      24: aload_2
      25: ifnonnull     36
      28: new           #18                 // class java/lang/AssertionError
      31: dup
      32: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: aload_1
      37: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
      40: aload_2
      41: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
      44: if_acmpne     425
      47: getstatic     #21                 // Field org/apache/avro/SchemaCompatibility$1.$SwitchMap$org$apache$avro$Schema$Type:[I
      50: aload_1
      51: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
      54: invokevirtual #22                 // Method org/apache/avro/Schema$Type.ordinal:()I
      57: iaload
      58: tableswitch   { // 1 to 14
                     1: 128
                     2: 128
                     3: 128
                     4: 128
                     5: 128
                     6: 128
                     7: 128
                     8: 128
                     9: 132
                    10: 145
                    11: 158
                    12: 189
                    13: 243
                    14: 341
               default: 395
          }
     128: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     131: areturn
     132: aload_0
     133: aload_1
     134: invokevirtual #23                 // Method org/apache/avro/Schema.getElementType:()Lorg/apache/avro/Schema;
     137: aload_2
     138: invokevirtual #23                 // Method org/apache/avro/Schema.getElementType:()Lorg/apache/avro/Schema;
     141: invokevirtual #24                 // Method getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     144: areturn
     145: aload_0
     146: aload_1
     147: invokevirtual #25                 // Method org/apache/avro/Schema.getValueType:()Lorg/apache/avro/Schema;
     150: aload_2
     151: invokevirtual #25                 // Method org/apache/avro/Schema.getValueType:()Lorg/apache/avro/Schema;
     154: invokevirtual #24                 // Method getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     157: areturn
     158: aload_1
     159: aload_2
     160: invokestatic  #26                 // Method org/apache/avro/SchemaCompatibility.schemaNameEquals:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Z
     163: ifne          170
     166: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     169: areturn
     170: aload_1
     171: invokevirtual #28                 // Method org/apache/avro/Schema.getFixedSize:()I
     174: aload_2
     175: invokevirtual #28                 // Method org/apache/avro/Schema.getFixedSize:()I
     178: if_icmpeq     185
     181: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     184: areturn
     185: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     188: areturn
     189: aload_1
     190: aload_2
     191: invokestatic  #26                 // Method org/apache/avro/SchemaCompatibility.schemaNameEquals:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Z
     194: ifne          201
     197: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     200: areturn
     201: new           #29                 // class java/util/HashSet
     204: dup
     205: aload_2
     206: invokevirtual #30                 // Method org/apache/avro/Schema.getEnumSymbols:()Ljava/util/List;
     209: invokespecial #31                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     212: astore_3
     213: aload_3
     214: aload_1
     215: invokevirtual #30                 // Method org/apache/avro/Schema.getEnumSymbols:()Ljava/util/List;
     218: invokeinterface #32,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     223: pop
     224: aload_3
     225: invokeinterface #33,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     230: ifeq          239
     233: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     236: goto          242
     239: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     242: areturn
     243: aload_1
     244: aload_2
     245: invokestatic  #26                 // Method org/apache/avro/SchemaCompatibility.schemaNameEquals:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Z
     248: ifne          255
     251: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     254: areturn
     255: aload_1
     256: invokevirtual #34                 // Method org/apache/avro/Schema.getFields:()Ljava/util/List;
     259: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     264: astore_3
     265: aload_3
     266: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     271: ifeq          337
     274: aload_3
     275: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     280: checkcast     #38                 // class org/apache/avro/Schema$Field
     283: astore        4
     285: aload_2
     286: aload         4
     288: invokestatic  #39                 // Method org/apache/avro/SchemaCompatibility.lookupWriterField:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema$Field;)Lorg/apache/avro/Schema$Field;
     291: astore        5
     293: aload         5
     295: ifnonnull     310
     298: aload         4
     300: invokevirtual #40                 // Method org/apache/avro/Schema$Field.defaultValue:()Lorg/codehaus/jackson/JsonNode;
     303: ifnonnull     334
     306: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     309: areturn
     310: aload_0
     311: aload         4
     313: invokevirtual #41                 // Method org/apache/avro/Schema$Field.schema:()Lorg/apache/avro/Schema;
     316: aload         5
     318: invokevirtual #41                 // Method org/apache/avro/Schema$Field.schema:()Lorg/apache/avro/Schema;
     321: invokevirtual #24                 // Method getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     324: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     327: if_acmpne     334
     330: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     333: areturn
     334: goto          265
     337: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     340: areturn
     341: aload_2
     342: invokevirtual #42                 // Method org/apache/avro/Schema.getTypes:()Ljava/util/List;
     345: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     350: astore_3
     351: aload_3
     352: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     357: ifeq          391
     360: aload_3
     361: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     366: checkcast     #43                 // class org/apache/avro/Schema
     369: astore        4
     371: aload_0
     372: aload_1
     373: aload         4
     375: invokevirtual #24                 // Method getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     378: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     381: if_acmpne     388
     384: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     387: areturn
     388: goto          351
     391: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     394: areturn
     395: new           #44                 // class org/apache/avro/AvroRuntimeException
     398: dup
     399: new           #45                 // class java/lang/StringBuilder
     402: dup
     403: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     406: ldc           #47                 // String Unknown schema type:
     408: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     411: aload_1
     412: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     415: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     418: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     421: invokespecial #51                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/String;)V
     424: athrow
     425: aload_2
     426: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     429: getstatic     #52                 // Field org/apache/avro/Schema$Type.UNION:Lorg/apache/avro/Schema$Type;
     432: if_acmpne     467
     435: aload_2
     436: invokevirtual #42                 // Method org/apache/avro/Schema.getTypes:()Ljava/util/List;
     439: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     444: iconst_1
     445: if_icmpne     467
     448: aload_0
     449: aload_1
     450: aload_2
     451: invokevirtual #42                 // Method org/apache/avro/Schema.getTypes:()Ljava/util/List;
     454: iconst_0
     455: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     460: checkcast     #43                 // class org/apache/avro/Schema
     463: invokevirtual #24                 // Method getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     466: areturn
     467: getstatic     #21                 // Field org/apache/avro/SchemaCompatibility$1.$SwitchMap$org$apache$avro$Schema$Type:[I
     470: aload_1
     471: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     474: invokevirtual #22                 // Method org/apache/avro/Schema$Type.ordinal:()I
     477: iaload
     478: tableswitch   { // 1 to 14
                     1: 548
                     2: 552
                     3: 556
                     4: 560
                     5: 580
                     6: 610
                     7: 650
                     8: 654
                     9: 658
                    10: 662
                    11: 666
                    12: 670
                    13: 674
                    14: 678
               default: 732
          }
     548: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     551: areturn
     552: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     555: areturn
     556: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     559: areturn
     560: aload_2
     561: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     564: getstatic     #55                 // Field org/apache/avro/Schema$Type.INT:Lorg/apache/avro/Schema$Type;
     567: if_acmpne     576
     570: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     573: goto          579
     576: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     579: areturn
     580: aload_2
     581: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     584: getstatic     #55                 // Field org/apache/avro/Schema$Type.INT:Lorg/apache/avro/Schema$Type;
     587: if_acmpeq     600
     590: aload_2
     591: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     594: getstatic     #56                 // Field org/apache/avro/Schema$Type.LONG:Lorg/apache/avro/Schema$Type;
     597: if_acmpne     606
     600: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     603: goto          609
     606: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     609: areturn
     610: aload_2
     611: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     614: getstatic     #55                 // Field org/apache/avro/Schema$Type.INT:Lorg/apache/avro/Schema$Type;
     617: if_acmpeq     640
     620: aload_2
     621: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     624: getstatic     #56                 // Field org/apache/avro/Schema$Type.LONG:Lorg/apache/avro/Schema$Type;
     627: if_acmpeq     640
     630: aload_2
     631: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     634: getstatic     #57                 // Field org/apache/avro/Schema$Type.FLOAT:Lorg/apache/avro/Schema$Type;
     637: if_acmpne     646
     640: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     643: goto          649
     646: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     649: areturn
     650: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     653: areturn
     654: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     657: areturn
     658: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     661: areturn
     662: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     665: areturn
     666: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     669: areturn
     670: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     673: areturn
     674: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     677: areturn
     678: aload_1
     679: invokevirtual #42                 // Method org/apache/avro/Schema.getTypes:()Ljava/util/List;
     682: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     687: astore_3
     688: aload_3
     689: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     694: ifeq          728
     697: aload_3
     698: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     703: checkcast     #43                 // class org/apache/avro/Schema
     706: astore        4
     708: aload_0
     709: aload         4
     711: aload_2
     712: invokevirtual #24                 // Method getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     715: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     718: if_acmpne     725
     721: getstatic     #14                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.COMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     724: areturn
     725: goto          688
     728: getstatic     #27                 // Field org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.INCOMPATIBLE:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
     731: areturn
     732: new           #44                 // class org/apache/avro/AvroRuntimeException
     735: dup
     736: new           #45                 // class java/lang/StringBuilder
     739: dup
     740: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     743: ldc           #47                 // String Unknown schema type:
     745: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     748: aload_1
     749: invokevirtual #20                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
     752: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     755: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     758: invokespecial #51                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/String;)V
     761: athrow

  org.apache.avro.SchemaCompatibility$ReaderWriterCompatiblityChecker(org.apache.avro.SchemaCompatibility$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: ldc_w         #58                 // class org/apache/avro/SchemaCompatibility
       3: invokevirtual #59                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #17                 // Field $assertionsDisabled:Z
      17: return
}
