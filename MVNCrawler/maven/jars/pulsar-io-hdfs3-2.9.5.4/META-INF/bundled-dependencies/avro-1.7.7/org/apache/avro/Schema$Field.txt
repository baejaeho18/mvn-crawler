Compiled from "Schema.java"
public class org.apache.avro.Schema$Field extends org.apache.avro.JsonProperties {
  private final java.lang.String name;

  private int position;

  private final org.apache.avro.Schema schema;

  private final java.lang.String doc;

  private final org.codehaus.jackson.JsonNode defaultValue;

  private final org.apache.avro.Schema$Field$Order order;

  private java.util.Set<java.lang.String> aliases;

  public org.apache.avro.Schema$Field(java.lang.String, org.apache.avro.Schema, java.lang.String, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: getstatic     #8                  // Field org/apache/avro/Schema$Field$Order.ASCENDING:Lorg/apache/avro/Schema$Field$Order;
       9: invokespecial #9                  // Method "<init>":(Ljava/lang/String;Lorg/apache/avro/Schema;Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;Lorg/apache/avro/Schema$Field$Order;)V
      12: return

  public org.apache.avro.Schema$Field(java.lang.String, org.apache.avro.Schema, java.lang.String, org.codehaus.jackson.JsonNode, org.apache.avro.Schema$Field$Order);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/apache/avro/Schema.access$100:()Ljava/util/Set;
       4: invokespecial #11                 // Method org/apache/avro/JsonProperties."<init>":(Ljava/util/Set;)V
       7: aload_0
       8: iconst_m1
       9: putfield      #7                  // Field position:I
      12: aload_0
      13: aload_1
      14: invokestatic  #12                 // Method org/apache/avro/Schema.access$200:(Ljava/lang/String;)Ljava/lang/String;
      17: putfield      #4                  // Field name:Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: putfield      #5                  // Field schema:Lorg/apache/avro/Schema;
      25: aload_0
      26: aload_3
      27: putfield      #3                  // Field doc:Ljava/lang/String;
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload         4
      35: invokestatic  #13                 // Method org/apache/avro/Schema.access$300:(Ljava/lang/String;Lorg/apache/avro/Schema;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      38: putfield      #2                  // Field defaultValue:Lorg/codehaus/jackson/JsonNode;
      41: aload_0
      42: aload         5
      44: putfield      #1                  // Field order:Lorg/apache/avro/Schema$Field$Order;
      47: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn

  public int pos();
    Code:
       0: aload_0
       1: getfield      #7                  // Field position:I
       4: ireturn

  public org.apache.avro.Schema schema();
    Code:
       0: aload_0
       1: getfield      #5                  // Field schema:Lorg/apache/avro/Schema;
       4: areturn

  public java.lang.String doc();
    Code:
       0: aload_0
       1: getfield      #3                  // Field doc:Ljava/lang/String;
       4: areturn

  public org.codehaus.jackson.JsonNode defaultValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultValue:Lorg/codehaus/jackson/JsonNode;
       4: areturn

  public org.apache.avro.Schema$Field$Order order();
    Code:
       0: aload_0
       1: getfield      #1                  // Field order:Lorg/apache/avro/Schema$Field$Order;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> props();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getProps:()Ljava/util/Map;
       4: areturn

  public void addAlias(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field aliases:Ljava/util/Set;
       4: ifnonnull     18
       7: aload_0
       8: new           #15                 // class java/util/LinkedHashSet
      11: dup
      12: invokespecial #16                 // Method java/util/LinkedHashSet."<init>":()V
      15: putfield      #6                  // Field aliases:Ljava/util/Set;
      18: aload_0
      19: getfield      #6                  // Field aliases:Ljava/util/Set;
      22: aload_1
      23: invokeinterface #17,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public java.util.Set<java.lang.String> aliases();
    Code:
       0: aload_0
       1: getfield      #6                  // Field aliases:Ljava/util/Set;
       4: ifnonnull     11
       7: invokestatic  #18                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: getfield      #6                  // Field aliases:Ljava/util/Set;
      15: invokestatic  #19                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      18: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #20                 // class org/apache/avro/Schema$Field
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #20                 // class org/apache/avro/Schema$Field
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field name:Ljava/lang/String;
      25: aload_2
      26: getfield      #4                  // Field name:Ljava/lang/String;
      29: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          91
      35: aload_0
      36: getfield      #5                  // Field schema:Lorg/apache/avro/Schema;
      39: aload_2
      40: getfield      #5                  // Field schema:Lorg/apache/avro/Schema;
      43: invokevirtual #22                 // Method org/apache/avro/Schema.equals:(Ljava/lang/Object;)Z
      46: ifeq          91
      49: aload_0
      50: aload_2
      51: getfield      #2                  // Field defaultValue:Lorg/codehaus/jackson/JsonNode;
      54: invokespecial #23                 // Method defaultValueEquals:(Lorg/codehaus/jackson/JsonNode;)Z
      57: ifeq          91
      60: aload_0
      61: getfield      #1                  // Field order:Lorg/apache/avro/Schema$Field$Order;
      64: aload_2
      65: getfield      #1                  // Field order:Lorg/apache/avro/Schema$Field$Order;
      68: if_acmpne     91
      71: aload_0
      72: getfield      #24                 // Field props:Ljava/util/Map;
      75: aload_2
      76: getfield      #24                 // Field props:Ljava/util/Map;
      79: invokeinterface #25,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      84: ifeq          91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: invokevirtual #26                 // Method java/lang/String.hashCode:()I
       7: aload_0
       8: getfield      #5                  // Field schema:Lorg/apache/avro/Schema;
      11: invokevirtual #27                 // Method org/apache/avro/Schema.computeHash:()I
      14: iadd
      15: ireturn

  private boolean defaultValueEquals(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultValue:Lorg/codehaus/jackson/JsonNode;
       4: ifnonnull     17
       7: aload_1
       8: ifnonnull     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #2                  // Field defaultValue:Lorg/codehaus/jackson/JsonNode;
      21: invokevirtual #28                 // Method org/codehaus/jackson/JsonNode.getDoubleValue:()D
      24: invokestatic  #29                 // Method java/lang/Double.isNaN:(D)Z
      27: ifeq          38
      30: aload_1
      31: invokevirtual #28                 // Method org/codehaus/jackson/JsonNode.getDoubleValue:()D
      34: invokestatic  #29                 // Method java/lang/Double.isNaN:(D)Z
      37: ireturn
      38: aload_0
      39: getfield      #2                  // Field defaultValue:Lorg/codehaus/jackson/JsonNode;
      42: aload_1
      43: invokevirtual #30                 // Method org/codehaus/jackson/JsonNode.equals:(Ljava/lang/Object;)Z
      46: ireturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #4                  // Field name:Ljava/lang/String;
      11: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #34                 // String  type:
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #5                  // Field schema:Lorg/apache/avro/Schema;
      23: invokestatic  #35                 // Method org/apache/avro/Schema.access$400:(Lorg/apache/avro/Schema;)Lorg/apache/avro/Schema$Type;
      26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #37                 // String  pos:
      31: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #7                  // Field position:I
      38: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  static int access$800(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #7                  // Field position:I
       4: ireturn

  static int access$802(org.apache.avro.Schema$Field, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #7                  // Field position:I
       6: ireturn

  static java.util.Set access$1400(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #6                  // Field aliases:Ljava/util/Set;
       4: areturn

  static java.util.Set access$1402(org.apache.avro.Schema$Field, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field aliases:Ljava/util/Set;
       6: areturn

  static org.apache.avro.Schema access$1700(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #5                  // Field schema:Lorg/apache/avro/Schema;
       4: areturn

  static java.lang.String access$1800(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn

  static java.lang.String access$1900(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #3                  // Field doc:Ljava/lang/String;
       4: areturn

  static org.codehaus.jackson.JsonNode access$2000(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultValue:Lorg/codehaus/jackson/JsonNode;
       4: areturn

  static org.apache.avro.Schema$Field$Order access$2100(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #1                  // Field order:Lorg/apache/avro/Schema$Field$Order;
       4: areturn
}
