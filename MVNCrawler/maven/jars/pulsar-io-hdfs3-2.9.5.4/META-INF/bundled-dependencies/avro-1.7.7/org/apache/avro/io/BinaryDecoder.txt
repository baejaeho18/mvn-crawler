Compiled from "BinaryDecoder.java"
public class org.apache.avro.io.BinaryDecoder extends org.apache.avro.io.Decoder {
  private org.apache.avro.io.BinaryDecoder$ByteSource source;

  private byte[] buf;

  private int minPos;

  private int pos;

  private int limit;

  private final org.apache.avro.util.Utf8 scratchUtf8;

  byte[] getBuf();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buf:[B
       4: areturn

  int getPos();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pos:I
       4: ireturn

  int getLimit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field limit:I
       4: ireturn

  void setBuf(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field buf:[B
       5: aload_0
       6: iload_2
       7: putfield      #3                  // Field pos:I
      10: aload_0
      11: iload_2
      12: iload_3
      13: iadd
      14: putfield      #2                  // Field limit:I
      17: return

  void clearBuf();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field buf:[B
       5: return

  protected org.apache.avro.io.BinaryDecoder();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/avro/io/Decoder."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field buf:[B
      14: aload_0
      15: iconst_0
      16: putfield      #1                  // Field minPos:I
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field pos:I
      24: aload_0
      25: iconst_0
      26: putfield      #2                  // Field limit:I
      29: aload_0
      30: new           #7                  // class org/apache/avro/util/Utf8
      33: dup
      34: invokespecial #8                  // Method org/apache/avro/util/Utf8."<init>":()V
      37: putfield      #9                  // Field scratchUtf8:Lorg/apache/avro/util/Utf8;
      40: return

  org.apache.avro.io.BinaryDecoder(java.io.InputStream, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/avro/io/Decoder."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field buf:[B
      14: aload_0
      15: iconst_0
      16: putfield      #1                  // Field minPos:I
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field pos:I
      24: aload_0
      25: iconst_0
      26: putfield      #2                  // Field limit:I
      29: aload_0
      30: new           #7                  // class org/apache/avro/util/Utf8
      33: dup
      34: invokespecial #8                  // Method org/apache/avro/util/Utf8."<init>":()V
      37: putfield      #9                  // Field scratchUtf8:Lorg/apache/avro/util/Utf8;
      40: aload_0
      41: aload_1
      42: iload_2
      43: invokevirtual #10                 // Method configure:(Ljava/io/InputStream;I)Lorg/apache/avro/io/BinaryDecoder;
      46: pop
      47: return

  org.apache.avro.io.BinaryDecoder(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/avro/io/Decoder."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field buf:[B
      14: aload_0
      15: iconst_0
      16: putfield      #1                  // Field minPos:I
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field pos:I
      24: aload_0
      25: iconst_0
      26: putfield      #2                  // Field limit:I
      29: aload_0
      30: new           #7                  // class org/apache/avro/util/Utf8
      33: dup
      34: invokespecial #8                  // Method org/apache/avro/util/Utf8."<init>":()V
      37: putfield      #9                  // Field scratchUtf8:Lorg/apache/avro/util/Utf8;
      40: aload_0
      41: aload_1
      42: iload_2
      43: iload_3
      44: invokevirtual #11                 // Method configure:([BII)Lorg/apache/avro/io/BinaryDecoder;
      47: pop
      48: return

  org.apache.avro.io.BinaryDecoder configure(java.io.InputStream, int);
    Code:
       0: aload_0
       1: iload_2
       2: new           #12                 // class org/apache/avro/io/BinaryDecoder$InputStreamByteSource
       5: dup
       6: aload_1
       7: aconst_null
       8: invokespecial #13                 // Method org/apache/avro/io/BinaryDecoder$InputStreamByteSource."<init>":(Ljava/io/InputStream;Lorg/apache/avro/io/BinaryDecoder$1;)V
      11: invokespecial #14                 // Method configureSource:(ILorg/apache/avro/io/BinaryDecoder$ByteSource;)V
      14: aload_0
      15: areturn

  org.apache.avro.io.BinaryDecoder configure(byte[], int, int);
    Code:
       0: aload_0
       1: sipush        8192
       4: new           #15                 // class org/apache/avro/io/BinaryDecoder$ByteArrayByteSource
       7: dup
       8: aload_1
       9: iload_2
      10: iload_3
      11: aconst_null
      12: invokespecial #16                 // Method org/apache/avro/io/BinaryDecoder$ByteArrayByteSource."<init>":([BIILorg/apache/avro/io/BinaryDecoder$1;)V
      15: invokespecial #14                 // Method configureSource:(ILorg/apache/avro/io/BinaryDecoder$ByteSource;)V
      18: aload_0
      19: areturn

  private void configureSource(int, org.apache.avro.io.BinaryDecoder$ByteSource);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
       5: if_acmpeq     15
       8: aload_0
       9: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
      12: invokevirtual #17                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.detach:()V
      15: aload_2
      16: iload_1
      17: aload_0
      18: invokevirtual #18                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.attach:(ILorg/apache/avro/io/BinaryDecoder;)V
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
      26: return

  public void readNull() throws java.io.IOException;
    Code:
       0: return

  public boolean readBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field limit:I
       4: aload_0
       5: getfield      #3                  // Field pos:I
       8: if_icmpne     52
      11: aload_0
      12: aload_0
      13: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
      16: aload_0
      17: getfield      #4                  // Field buf:[B
      20: iconst_0
      21: aload_0
      22: getfield      #4                  // Field buf:[B
      25: arraylength
      26: invokevirtual #19                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.tryReadRaw:([BII)I
      29: putfield      #2                  // Field limit:I
      32: aload_0
      33: iconst_0
      34: putfield      #3                  // Field pos:I
      37: aload_0
      38: getfield      #2                  // Field limit:I
      41: ifne          52
      44: new           #20                 // class java/io/EOFException
      47: dup
      48: invokespecial #21                 // Method java/io/EOFException."<init>":()V
      51: athrow
      52: aload_0
      53: getfield      #4                  // Field buf:[B
      56: aload_0
      57: dup
      58: getfield      #3                  // Field pos:I
      61: dup_x1
      62: iconst_1
      63: iadd
      64: putfield      #3                  // Field pos:I
      67: baload
      68: sipush        255
      71: iand
      72: istore_1
      73: iload_1
      74: iconst_1
      75: if_icmpne     82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ireturn

  public int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_5
       2: invokespecial #22                 // Method ensureBounds:(I)V
       5: iconst_1
       6: istore_1
       7: aload_0
       8: getfield      #4                  // Field buf:[B
      11: aload_0
      12: getfield      #3                  // Field pos:I
      15: baload
      16: sipush        255
      19: iand
      20: istore_2
      21: iload_2
      22: bipush        127
      24: iand
      25: istore_3
      26: iload_2
      27: bipush        127
      29: if_icmple     182
      32: aload_0
      33: getfield      #4                  // Field buf:[B
      36: aload_0
      37: getfield      #3                  // Field pos:I
      40: iload_1
      41: iinc          1, 1
      44: iadd
      45: baload
      46: sipush        255
      49: iand
      50: istore_2
      51: iload_3
      52: iload_2
      53: bipush        127
      55: iand
      56: bipush        7
      58: ishl
      59: ixor
      60: istore_3
      61: iload_2
      62: bipush        127
      64: if_icmple     182
      67: aload_0
      68: getfield      #4                  // Field buf:[B
      71: aload_0
      72: getfield      #3                  // Field pos:I
      75: iload_1
      76: iinc          1, 1
      79: iadd
      80: baload
      81: sipush        255
      84: iand
      85: istore_2
      86: iload_3
      87: iload_2
      88: bipush        127
      90: iand
      91: bipush        14
      93: ishl
      94: ixor
      95: istore_3
      96: iload_2
      97: bipush        127
      99: if_icmple     182
     102: aload_0
     103: getfield      #4                  // Field buf:[B
     106: aload_0
     107: getfield      #3                  // Field pos:I
     110: iload_1
     111: iinc          1, 1
     114: iadd
     115: baload
     116: sipush        255
     119: iand
     120: istore_2
     121: iload_3
     122: iload_2
     123: bipush        127
     125: iand
     126: bipush        21
     128: ishl
     129: ixor
     130: istore_3
     131: iload_2
     132: bipush        127
     134: if_icmple     182
     137: aload_0
     138: getfield      #4                  // Field buf:[B
     141: aload_0
     142: getfield      #3                  // Field pos:I
     145: iload_1
     146: iinc          1, 1
     149: iadd
     150: baload
     151: sipush        255
     154: iand
     155: istore_2
     156: iload_3
     157: iload_2
     158: bipush        127
     160: iand
     161: bipush        28
     163: ishl
     164: ixor
     165: istore_3
     166: iload_2
     167: bipush        127
     169: if_icmple     182
     172: new           #23                 // class java/io/IOException
     175: dup
     176: ldc           #24                 // String Invalid int encoding
     178: invokespecial #25                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     181: athrow
     182: aload_0
     183: dup
     184: getfield      #3                  // Field pos:I
     187: iload_1
     188: iadd
     189: putfield      #3                  // Field pos:I
     192: aload_0
     193: getfield      #3                  // Field pos:I
     196: aload_0
     197: getfield      #2                  // Field limit:I
     200: if_icmple     211
     203: new           #20                 // class java/io/EOFException
     206: dup
     207: invokespecial #21                 // Method java/io/EOFException."<init>":()V
     210: athrow
     211: iload_3
     212: iconst_1
     213: iushr
     214: iload_3
     215: iconst_1
     216: iand
     217: ineg
     218: ixor
     219: ireturn

  public long readLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        10
       3: invokespecial #22                 // Method ensureBounds:(I)V
       6: aload_0
       7: getfield      #4                  // Field buf:[B
      10: aload_0
      11: dup
      12: getfield      #3                  // Field pos:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #3                  // Field pos:I
      21: baload
      22: sipush        255
      25: iand
      26: istore_1
      27: iload_1
      28: bipush        127
      30: iand
      31: istore_2
      32: iload_1
      33: bipush        127
      35: if_icmple     177
      38: aload_0
      39: getfield      #4                  // Field buf:[B
      42: aload_0
      43: dup
      44: getfield      #3                  // Field pos:I
      47: dup_x1
      48: iconst_1
      49: iadd
      50: putfield      #3                  // Field pos:I
      53: baload
      54: sipush        255
      57: iand
      58: istore_1
      59: iload_2
      60: iload_1
      61: bipush        127
      63: iand
      64: bipush        7
      66: ishl
      67: ixor
      68: istore_2
      69: iload_1
      70: bipush        127
      72: if_icmple     171
      75: aload_0
      76: getfield      #4                  // Field buf:[B
      79: aload_0
      80: dup
      81: getfield      #3                  // Field pos:I
      84: dup_x1
      85: iconst_1
      86: iadd
      87: putfield      #3                  // Field pos:I
      90: baload
      91: sipush        255
      94: iand
      95: istore_1
      96: iload_2
      97: iload_1
      98: bipush        127
     100: iand
     101: bipush        14
     103: ishl
     104: ixor
     105: istore_2
     106: iload_1
     107: bipush        127
     109: if_icmple     165
     112: aload_0
     113: getfield      #4                  // Field buf:[B
     116: aload_0
     117: dup
     118: getfield      #3                  // Field pos:I
     121: dup_x1
     122: iconst_1
     123: iadd
     124: putfield      #3                  // Field pos:I
     127: baload
     128: sipush        255
     131: iand
     132: istore_1
     133: iload_2
     134: iload_1
     135: bipush        127
     137: iand
     138: bipush        21
     140: ishl
     141: ixor
     142: istore_2
     143: iload_1
     144: bipush        127
     146: if_icmple     159
     149: aload_0
     150: iload_2
     151: i2l
     152: invokespecial #26                 // Method innerLongDecode:(J)J
     155: lstore_3
     156: goto          180
     159: iload_2
     160: i2l
     161: lstore_3
     162: goto          180
     165: iload_2
     166: i2l
     167: lstore_3
     168: goto          180
     171: iload_2
     172: i2l
     173: lstore_3
     174: goto          180
     177: iload_2
     178: i2l
     179: lstore_3
     180: aload_0
     181: getfield      #3                  // Field pos:I
     184: aload_0
     185: getfield      #2                  // Field limit:I
     188: if_icmple     199
     191: new           #20                 // class java/io/EOFException
     194: dup
     195: invokespecial #21                 // Method java/io/EOFException."<init>":()V
     198: athrow
     199: lload_3
     200: iconst_1
     201: lushr
     202: lload_3
     203: lconst_1
     204: land
     205: lneg
     206: lxor
     207: lreturn

  private long innerLongDecode(long) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_3
       2: aload_0
       3: getfield      #4                  // Field buf:[B
       6: aload_0
       7: getfield      #3                  // Field pos:I
      10: baload
      11: sipush        255
      14: iand
      15: istore        4
      17: lload_1
      18: iload         4
      20: i2l
      21: ldc2_w        #27                 // long 127l
      24: land
      25: bipush        28
      27: lshl
      28: lxor
      29: lstore_1
      30: iload         4
      32: bipush        127
      34: if_icmple     247
      37: aload_0
      38: getfield      #4                  // Field buf:[B
      41: aload_0
      42: getfield      #3                  // Field pos:I
      45: iload_3
      46: iinc          3, 1
      49: iadd
      50: baload
      51: sipush        255
      54: iand
      55: istore        4
      57: lload_1
      58: iload         4
      60: i2l
      61: ldc2_w        #27                 // long 127l
      64: land
      65: bipush        35
      67: lshl
      68: lxor
      69: lstore_1
      70: iload         4
      72: bipush        127
      74: if_icmple     247
      77: aload_0
      78: getfield      #4                  // Field buf:[B
      81: aload_0
      82: getfield      #3                  // Field pos:I
      85: iload_3
      86: iinc          3, 1
      89: iadd
      90: baload
      91: sipush        255
      94: iand
      95: istore        4
      97: lload_1
      98: iload         4
     100: i2l
     101: ldc2_w        #27                 // long 127l
     104: land
     105: bipush        42
     107: lshl
     108: lxor
     109: lstore_1
     110: iload         4
     112: bipush        127
     114: if_icmple     247
     117: aload_0
     118: getfield      #4                  // Field buf:[B
     121: aload_0
     122: getfield      #3                  // Field pos:I
     125: iload_3
     126: iinc          3, 1
     129: iadd
     130: baload
     131: sipush        255
     134: iand
     135: istore        4
     137: lload_1
     138: iload         4
     140: i2l
     141: ldc2_w        #27                 // long 127l
     144: land
     145: bipush        49
     147: lshl
     148: lxor
     149: lstore_1
     150: iload         4
     152: bipush        127
     154: if_icmple     247
     157: aload_0
     158: getfield      #4                  // Field buf:[B
     161: aload_0
     162: getfield      #3                  // Field pos:I
     165: iload_3
     166: iinc          3, 1
     169: iadd
     170: baload
     171: sipush        255
     174: iand
     175: istore        4
     177: lload_1
     178: iload         4
     180: i2l
     181: ldc2_w        #27                 // long 127l
     184: land
     185: bipush        56
     187: lshl
     188: lxor
     189: lstore_1
     190: iload         4
     192: bipush        127
     194: if_icmple     247
     197: aload_0
     198: getfield      #4                  // Field buf:[B
     201: aload_0
     202: getfield      #3                  // Field pos:I
     205: iload_3
     206: iinc          3, 1
     209: iadd
     210: baload
     211: sipush        255
     214: iand
     215: istore        4
     217: lload_1
     218: iload         4
     220: i2l
     221: ldc2_w        #27                 // long 127l
     224: land
     225: bipush        63
     227: lshl
     228: lxor
     229: lstore_1
     230: iload         4
     232: bipush        127
     234: if_icmple     247
     237: new           #23                 // class java/io/IOException
     240: dup
     241: ldc           #29                 // String Invalid long encoding
     243: invokespecial #25                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     246: athrow
     247: aload_0
     248: dup
     249: getfield      #3                  // Field pos:I
     252: iload_3
     253: iadd
     254: putfield      #3                  // Field pos:I
     257: lload_1
     258: lreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #22                 // Method ensureBounds:(I)V
       5: iconst_1
       6: istore_1
       7: aload_0
       8: getfield      #4                  // Field buf:[B
      11: aload_0
      12: getfield      #3                  // Field pos:I
      15: baload
      16: sipush        255
      19: iand
      20: aload_0
      21: getfield      #4                  // Field buf:[B
      24: aload_0
      25: getfield      #3                  // Field pos:I
      28: iload_1
      29: iinc          1, 1
      32: iadd
      33: baload
      34: sipush        255
      37: iand
      38: bipush        8
      40: ishl
      41: ior
      42: aload_0
      43: getfield      #4                  // Field buf:[B
      46: aload_0
      47: getfield      #3                  // Field pos:I
      50: iload_1
      51: iinc          1, 1
      54: iadd
      55: baload
      56: sipush        255
      59: iand
      60: bipush        16
      62: ishl
      63: ior
      64: aload_0
      65: getfield      #4                  // Field buf:[B
      68: aload_0
      69: getfield      #3                  // Field pos:I
      72: iload_1
      73: iinc          1, 1
      76: iadd
      77: baload
      78: sipush        255
      81: iand
      82: bipush        24
      84: ishl
      85: ior
      86: istore_2
      87: aload_0
      88: getfield      #3                  // Field pos:I
      91: iconst_4
      92: iadd
      93: aload_0
      94: getfield      #2                  // Field limit:I
      97: if_icmple     108
     100: new           #20                 // class java/io/EOFException
     103: dup
     104: invokespecial #21                 // Method java/io/EOFException."<init>":()V
     107: athrow
     108: aload_0
     109: dup
     110: getfield      #3                  // Field pos:I
     113: iconst_4
     114: iadd
     115: putfield      #3                  // Field pos:I
     118: iload_2
     119: invokestatic  #30                 // Method java/lang/Float.intBitsToFloat:(I)F
     122: freturn

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #22                 // Method ensureBounds:(I)V
       6: iconst_1
       7: istore_1
       8: aload_0
       9: getfield      #4                  // Field buf:[B
      12: aload_0
      13: getfield      #3                  // Field pos:I
      16: baload
      17: sipush        255
      20: iand
      21: aload_0
      22: getfield      #4                  // Field buf:[B
      25: aload_0
      26: getfield      #3                  // Field pos:I
      29: iload_1
      30: iinc          1, 1
      33: iadd
      34: baload
      35: sipush        255
      38: iand
      39: bipush        8
      41: ishl
      42: ior
      43: aload_0
      44: getfield      #4                  // Field buf:[B
      47: aload_0
      48: getfield      #3                  // Field pos:I
      51: iload_1
      52: iinc          1, 1
      55: iadd
      56: baload
      57: sipush        255
      60: iand
      61: bipush        16
      63: ishl
      64: ior
      65: aload_0
      66: getfield      #4                  // Field buf:[B
      69: aload_0
      70: getfield      #3                  // Field pos:I
      73: iload_1
      74: iinc          1, 1
      77: iadd
      78: baload
      79: sipush        255
      82: iand
      83: bipush        24
      85: ishl
      86: ior
      87: istore_2
      88: aload_0
      89: getfield      #4                  // Field buf:[B
      92: aload_0
      93: getfield      #3                  // Field pos:I
      96: iload_1
      97: iinc          1, 1
     100: iadd
     101: baload
     102: sipush        255
     105: iand
     106: aload_0
     107: getfield      #4                  // Field buf:[B
     110: aload_0
     111: getfield      #3                  // Field pos:I
     114: iload_1
     115: iinc          1, 1
     118: iadd
     119: baload
     120: sipush        255
     123: iand
     124: bipush        8
     126: ishl
     127: ior
     128: aload_0
     129: getfield      #4                  // Field buf:[B
     132: aload_0
     133: getfield      #3                  // Field pos:I
     136: iload_1
     137: iinc          1, 1
     140: iadd
     141: baload
     142: sipush        255
     145: iand
     146: bipush        16
     148: ishl
     149: ior
     150: aload_0
     151: getfield      #4                  // Field buf:[B
     154: aload_0
     155: getfield      #3                  // Field pos:I
     158: iload_1
     159: iinc          1, 1
     162: iadd
     163: baload
     164: sipush        255
     167: iand
     168: bipush        24
     170: ishl
     171: ior
     172: istore_3
     173: aload_0
     174: getfield      #3                  // Field pos:I
     177: bipush        8
     179: iadd
     180: aload_0
     181: getfield      #2                  // Field limit:I
     184: if_icmple     195
     187: new           #20                 // class java/io/EOFException
     190: dup
     191: invokespecial #21                 // Method java/io/EOFException."<init>":()V
     194: athrow
     195: aload_0
     196: dup
     197: getfield      #3                  // Field pos:I
     200: bipush        8
     202: iadd
     203: putfield      #3                  // Field pos:I
     206: iload_2
     207: i2l
     208: ldc2_w        #31                 // long 4294967295l
     211: land
     212: iload_3
     213: i2l
     214: bipush        32
     216: lshl
     217: lor
     218: invokestatic  #33                 // Method java/lang/Double.longBitsToDouble:(J)D
     221: dreturn

  public org.apache.avro.util.Utf8 readString(org.apache.avro.util.Utf8) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method readInt:()I
       4: istore_2
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          20
      13: new           #7                  // class org/apache/avro/util/Utf8
      16: dup
      17: invokespecial #8                  // Method org/apache/avro/util/Utf8."<init>":()V
      20: astore_3
      21: aload_3
      22: iload_2
      23: invokevirtual #35                 // Method org/apache/avro/util/Utf8.setByteLength:(I)Lorg/apache/avro/util/Utf8;
      26: pop
      27: iconst_0
      28: iload_2
      29: if_icmpeq     42
      32: aload_0
      33: aload_3
      34: invokevirtual #36                 // Method org/apache/avro/util/Utf8.getBytes:()[B
      37: iconst_0
      38: iload_2
      39: invokevirtual #37                 // Method doReadBytes:([BII)V
      42: aload_3
      43: areturn

  public java.lang.String readString() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field scratchUtf8:Lorg/apache/avro/util/Utf8;
       5: invokevirtual #38                 // Method readString:(Lorg/apache/avro/util/Utf8;)Lorg/apache/avro/util/Utf8;
       8: invokevirtual #39                 // Method org/apache/avro/util/Utf8.toString:()Ljava/lang/String;
      11: areturn

  public void skipString() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #34                 // Method readInt:()I
       5: i2l
       6: invokevirtual #40                 // Method doSkipBytes:(J)V
       9: return

  public java.nio.ByteBuffer readBytes(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method readInt:()I
       4: istore_2
       5: aload_1
       6: ifnull        27
       9: iload_2
      10: aload_1
      11: invokevirtual #41                 // Method java/nio/ByteBuffer.capacity:()I
      14: if_icmpgt     27
      17: aload_1
      18: astore_3
      19: aload_3
      20: invokevirtual #42                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      23: pop
      24: goto          32
      27: iload_2
      28: invokestatic  #43                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      31: astore_3
      32: aload_0
      33: aload_3
      34: invokevirtual #44                 // Method java/nio/ByteBuffer.array:()[B
      37: aload_3
      38: invokevirtual #45                 // Method java/nio/ByteBuffer.position:()I
      41: iload_2
      42: invokevirtual #37                 // Method doReadBytes:([BII)V
      45: aload_3
      46: iload_2
      47: invokevirtual #46                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      50: pop
      51: aload_3
      52: areturn

  public void skipBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #34                 // Method readInt:()I
       5: i2l
       6: invokevirtual #40                 // Method doSkipBytes:(J)V
       9: return

  public void readFixed(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #37                 // Method doReadBytes:([BII)V
       7: return

  public void skipFixed(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokevirtual #40                 // Method doSkipBytes:(J)V
       6: return

  public int readEnum() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method readInt:()I
       4: ireturn

  protected void doSkipBytes(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field limit:I
       4: aload_0
       5: getfield      #3                  // Field pos:I
       8: isub
       9: istore_3
      10: lload_1
      11: iload_3
      12: i2l
      13: lcmp
      14: ifgt          32
      17: aload_0
      18: dup
      19: getfield      #3                  // Field pos:I
      22: i2l
      23: lload_1
      24: ladd
      25: l2i
      26: putfield      #3                  // Field pos:I
      29: goto          55
      32: aload_0
      33: aload_0
      34: iconst_0
      35: dup_x1
      36: putfield      #3                  // Field pos:I
      39: putfield      #2                  // Field limit:I
      42: lload_1
      43: iload_3
      44: i2l
      45: lsub
      46: lstore_1
      47: aload_0
      48: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
      51: lload_1
      52: invokevirtual #47                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.skipSourceBytes:(J)V
      55: return

  protected void doReadBytes(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifge          31
       4: new           #48                 // class org/apache/avro/AvroRuntimeException
       7: dup
       8: new           #49                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #51                 // String Malformed data. Length is negative:
      17: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_3
      21: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #55                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #2                  // Field limit:I
      35: aload_0
      36: getfield      #3                  // Field pos:I
      39: isub
      40: istore        4
      42: iload_3
      43: iload         4
      45: if_icmpgt     75
      48: aload_0
      49: getfield      #4                  // Field buf:[B
      52: aload_0
      53: getfield      #3                  // Field pos:I
      56: aload_1
      57: iload_2
      58: iload_3
      59: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload_0
      63: dup
      64: getfield      #3                  // Field pos:I
      67: iload_3
      68: iadd
      69: putfield      #3                  // Field pos:I
      72: goto          118
      75: aload_0
      76: getfield      #4                  // Field buf:[B
      79: aload_0
      80: getfield      #3                  // Field pos:I
      83: aload_1
      84: iload_2
      85: iload         4
      87: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      90: iload_2
      91: iload         4
      93: iadd
      94: istore_2
      95: iload_3
      96: iload         4
      98: isub
      99: istore_3
     100: aload_0
     101: aload_0
     102: getfield      #2                  // Field limit:I
     105: putfield      #3                  // Field pos:I
     108: aload_0
     109: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
     112: aload_1
     113: iload_2
     114: iload_3
     115: invokevirtual #57                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.readRaw:([BII)V
     118: return

  protected long doReadItemCount() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method readLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifge          19
      11: aload_0
      12: invokevirtual #58                 // Method readLong:()J
      15: pop2
      16: lload_1
      17: lneg
      18: lstore_1
      19: lload_1
      20: lreturn

  private long doSkipItems() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method readInt:()I
       4: i2l
       5: lstore_1
       6: lload_1
       7: lconst_0
       8: lcmp
       9: ifge          31
      12: aload_0
      13: invokevirtual #58                 // Method readLong:()J
      16: lstore_3
      17: aload_0
      18: lload_3
      19: invokevirtual #40                 // Method doSkipBytes:(J)V
      22: aload_0
      23: invokevirtual #34                 // Method readInt:()I
      26: i2l
      27: lstore_1
      28: goto          6
      31: lload_1
      32: lreturn

  public long readArrayStart() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method doReadItemCount:()J
       4: lreturn

  public long arrayNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method doReadItemCount:()J
       4: lreturn

  public long skipArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #60                 // Method doSkipItems:()J
       4: lreturn

  public long readMapStart() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method doReadItemCount:()J
       4: lreturn

  public long mapNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method doReadItemCount:()J
       4: lreturn

  public long skipMap() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #60                 // Method doSkipItems:()J
       4: lreturn

  public int readIndex() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method readInt:()I
       4: ireturn

  public boolean isEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field limit:I
       4: aload_0
       5: getfield      #3                  // Field pos:I
       8: isub
       9: ifle          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
      18: invokevirtual #61                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.isEof:()Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
      30: aload_0
      31: getfield      #4                  // Field buf:[B
      34: iconst_0
      35: aload_0
      36: getfield      #4                  // Field buf:[B
      39: arraylength
      40: invokevirtual #19                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.tryReadRaw:([BII)I
      43: istore_1
      44: aload_0
      45: iconst_0
      46: putfield      #3                  // Field pos:I
      49: aload_0
      50: iload_1
      51: putfield      #2                  // Field limit:I
      54: iconst_0
      55: iload_1
      56: if_icmpne     61
      59: iconst_1
      60: ireturn
      61: iconst_0
      62: ireturn

  private void ensureBounds(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field limit:I
       4: aload_0
       5: getfield      #3                  // Field pos:I
       8: isub
       9: istore_2
      10: iload_2
      11: iload_1
      12: if_icmpge     54
      15: aload_0
      16: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
      19: aload_0
      20: getfield      #4                  // Field buf:[B
      23: aload_0
      24: getfield      #3                  // Field pos:I
      27: aload_0
      28: getfield      #1                  // Field minPos:I
      31: iload_2
      32: invokevirtual #62                 // Method org/apache/avro/io/BinaryDecoder$ByteSource.compactAndFill:([BIII)V
      35: aload_0
      36: getfield      #3                  // Field pos:I
      39: aload_0
      40: getfield      #2                  // Field limit:I
      43: if_icmplt     54
      46: new           #20                 // class java/io/EOFException
      49: dup
      50: invokespecial #21                 // Method java/io/EOFException."<init>":()V
      53: athrow
      54: return

  public java.io.InputStream inputStream();
    Code:
       0: aload_0
       1: getfield      #6                  // Field source:Lorg/apache/avro/io/BinaryDecoder$ByteSource;
       4: areturn

  static byte[] access$200(org.apache.avro.io.BinaryDecoder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buf:[B
       4: areturn

  static int access$300(org.apache.avro.io.BinaryDecoder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pos:I
       4: ireturn

  static int access$400(org.apache.avro.io.BinaryDecoder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field limit:I
       4: ireturn

  static int access$302(org.apache.avro.io.BinaryDecoder, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field pos:I
       6: ireturn

  static int access$402(org.apache.avro.io.BinaryDecoder, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field limit:I
       6: ireturn

  static byte[] access$202(org.apache.avro.io.BinaryDecoder, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field buf:[B
       6: areturn

  static int access$502(org.apache.avro.io.BinaryDecoder, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field minPos:I
       6: ireturn
}
