Compiled from "LengthLimitedInputStream.java"
class org.apache.avro.file.LengthLimitedInputStream extends java.io.FilterInputStream {
  private long remaining;

  protected org.apache.avro.file.LengthLimitedInputStream(java.io.InputStream, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: lload_2
       7: putfield      #2                  // Field remaining:J
      10: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remaining:J
       4: lconst_0
       5: lcmp
       6: ifle          31
       9: aload_0
      10: invokespecial #3                  // Method java/io/FilterInputStream.read:()I
      13: istore_1
      14: iload_1
      15: iconst_m1
      16: if_icmpeq     29
      19: aload_0
      20: dup
      21: getfield      #2                  // Field remaining:J
      24: lconst_1
      25: lsub
      26: putfield      #2                  // Field remaining:J
      29: iload_1
      30: ireturn
      31: iconst_m1
      32: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #4                  // Method read:([BII)I
       8: ireturn

  private int remainingInt();
    Code:
       0: aload_0
       1: getfield      #2                  // Field remaining:J
       4: ldc2_w        #5                  // long 2147483647l
       7: invokestatic  #7                  // Method java/lang/Math.min:(JJ)J
      10: l2i
      11: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remaining:J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: iconst_m1
      10: ireturn
      11: iload_3
      12: i2l
      13: aload_0
      14: getfield      #2                  // Field remaining:J
      17: lcmp
      18: ifle          26
      21: aload_0
      22: invokespecial #8                  // Method remainingInt:()I
      25: istore_3
      26: aload_0
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokespecial #9                  // Method java/io/FilterInputStream.read:([BII)I
      33: istore        4
      35: iload         4
      37: iconst_m1
      38: if_icmpeq     53
      41: aload_0
      42: dup
      43: getfield      #2                  // Field remaining:J
      46: iload         4
      48: i2l
      49: lsub
      50: putfield      #2                  // Field remaining:J
      53: iload         4
      55: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/io/FilterInputStream.available:()I
       4: aload_0
       5: invokespecial #8                  // Method remainingInt:()I
       8: invokestatic  #11                 // Method java/lang/Math.min:(II)I
      11: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field remaining:J
       5: lload_1
       6: invokestatic  #7                  // Method java/lang/Math.min:(JJ)J
       9: invokespecial #12                 // Method java/io/FilterInputStream.skip:(J)J
      12: lstore_3
      13: aload_0
      14: dup
      15: getfield      #2                  // Field remaining:J
      18: lload_3
      19: lsub
      20: putfield      #2                  // Field remaining:J
      23: lload_3
      24: lreturn
}
