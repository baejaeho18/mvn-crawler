Compiled from "Encoder.java"
public abstract class org.apache.avro.io.Encoder implements java.io.Flushable {
  public org.apache.avro.io.Encoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract void writeNull() throws java.io.IOException;

  public abstract void writeBoolean(boolean) throws java.io.IOException;

  public abstract void writeInt(int) throws java.io.IOException;

  public abstract void writeLong(long) throws java.io.IOException;

  public abstract void writeFloat(float) throws java.io.IOException;

  public abstract void writeDouble(double) throws java.io.IOException;

  public abstract void writeString(org.apache.avro.util.Utf8) throws java.io.IOException;

  public void writeString(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/avro/util/Utf8
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/apache/avro/util/Utf8."<init>":(Ljava/lang/String;)V
       9: invokevirtual #4                  // Method writeString:(Lorg/apache/avro/util/Utf8;)V
      12: return

  public void writeString(java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/apache/avro/util/Utf8
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #2                  // class org/apache/avro/util/Utf8
      12: invokevirtual #4                  // Method writeString:(Lorg/apache/avro/util/Utf8;)V
      15: goto          28
      18: aload_0
      19: aload_1
      20: invokeinterface #5,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      25: invokevirtual #6                  // Method writeString:(Ljava/lang/String;)V
      28: return

  public abstract void writeBytes(java.nio.ByteBuffer) throws java.io.IOException;

  public abstract void writeBytes(byte[], int, int) throws java.io.IOException;

  public void writeBytes(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #7                  // Method writeBytes:([BII)V
       8: return

  public abstract void writeFixed(byte[], int, int) throws java.io.IOException;

  public void writeFixed(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #8                  // Method writeFixed:([BII)V
       8: return

  public void writeFixed(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:()I
       9: iload_2
      10: isub
      11: istore_3
      12: aload_1
      13: invokevirtual #11                 // Method java/nio/ByteBuffer.hasArray:()Z
      16: ifeq          37
      19: aload_0
      20: aload_1
      21: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      24: aload_1
      25: invokevirtual #13                 // Method java/nio/ByteBuffer.arrayOffset:()I
      28: iload_2
      29: iadd
      30: iload_3
      31: invokevirtual #8                  // Method writeFixed:([BII)V
      34: goto          62
      37: iload_3
      38: newarray       byte
      40: astore        4
      42: aload_1
      43: invokevirtual #14                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      46: aload         4
      48: iconst_0
      49: iload_3
      50: invokevirtual #15                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      53: pop
      54: aload_0
      55: aload         4
      57: iconst_0
      58: iload_3
      59: invokevirtual #8                  // Method writeFixed:([BII)V
      62: return

  public abstract void writeEnum(int) throws java.io.IOException;

  public abstract void writeArrayStart() throws java.io.IOException;

  public abstract void setItemCount(long) throws java.io.IOException;

  public abstract void startItem() throws java.io.IOException;

  public abstract void writeArrayEnd() throws java.io.IOException;

  public abstract void writeMapStart() throws java.io.IOException;

  public abstract void writeMapEnd() throws java.io.IOException;

  public abstract void writeIndex(int) throws java.io.IOException;
}
