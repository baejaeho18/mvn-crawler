Compiled from "SchemaCompatibility.java"
public class org.apache.avro.SchemaCompatibility {
  private static final org.slf4j.Logger LOG;

  public static final java.lang.String READER_WRITER_COMPATIBLE_MESSAGE;

  static final boolean $assertionsDisabled;

  private org.apache.avro.SchemaCompatibility();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.avro.SchemaCompatibility$SchemaPairCompatibility checkReaderWriterCompatibility(org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: new           #4                  // class org/apache/avro/SchemaCompatibility$ReaderWriterCompatiblityChecker
       3: dup
       4: aconst_null
       5: invokespecial #5                  // Method org/apache/avro/SchemaCompatibility$ReaderWriterCompatiblityChecker."<init>":(Lorg/apache/avro/SchemaCompatibility$1;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #6                  // Method org/apache/avro/SchemaCompatibility$ReaderWriterCompatiblityChecker.getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      13: astore_2
      14: getstatic     #7                  // Field org/apache/avro/SchemaCompatibility$1.$SwitchMap$org$apache$avro$SchemaCompatibility$SchemaCompatibilityType:[I
      17: aload_2
      18: invokevirtual #8                  // Method org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.ordinal:()I
      21: iaload
      22: lookupswitch  { // 2
                     1: 48
                     2: 77
               default: 83
          }
      48: ldc           #9                  // String Data encoded using writer schema:%n%s%nwill or may fail to decode using reader schema:%n%s%n
      50: iconst_2
      51: anewarray     #10                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_1
      57: iconst_1
      58: invokevirtual #11                 // Method org/apache/avro/Schema.toString:(Z)Ljava/lang/String;
      61: aastore
      62: dup
      63: iconst_1
      64: aload_0
      65: iconst_1
      66: invokevirtual #11                 // Method org/apache/avro/Schema.toString:(Z)Ljava/lang/String;
      69: aastore
      70: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      73: astore_3
      74: goto          110
      77: ldc           #13                 // String Reader schema can always successfully decode data written using the writer schema.
      79: astore_3
      80: goto          110
      83: new           #14                 // class org/apache/avro/AvroRuntimeException
      86: dup
      87: new           #15                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #17                 // String Unknown compatibility:
      96: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_2
     100: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #21                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: new           #22                 // class org/apache/avro/SchemaCompatibility$SchemaPairCompatibility
     113: dup
     114: aload_2
     115: aload_0
     116: aload_1
     117: aload_3
     118: invokespecial #23                 // Method org/apache/avro/SchemaCompatibility$SchemaPairCompatibility."<init>":(Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;Ljava/lang/String;)V
     121: areturn

  public static boolean schemaNameEquals(org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/apache/avro/Schema.getFullName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #24                 // Method org/apache/avro/Schema.getFullName:()Ljava/lang/String;
       9: aload_2
      10: invokestatic  #1                  // Method objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: invokevirtual #25                 // Method org/apache/avro/Schema.getAliases:()Ljava/util/Set;
      22: aload_2
      23: invokeinterface #26,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      28: ifeq          33
      31: iconst_1
      32: ireturn
      33: iconst_0
      34: ireturn

  public static org.apache.avro.Schema$Field lookupWriterField(org.apache.avro.Schema, org.apache.avro.Schema$Field);
    Code:
       0: getstatic     #27                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: invokevirtual #28                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
      10: getstatic     #29                 // Field org/apache/avro/Schema$Type.RECORD:Lorg/apache/avro/Schema$Type;
      13: if_acmpeq     24
      16: new           #30                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #31                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: new           #32                 // class java/util/ArrayList
      27: dup
      28: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
      31: astore_2
      32: aload_0
      33: aload_1
      34: invokevirtual #34                 // Method org/apache/avro/Schema$Field.name:()Ljava/lang/String;
      37: invokevirtual #35                 // Method org/apache/avro/Schema.getField:(Ljava/lang/String;)Lorg/apache/avro/Schema$Field;
      40: astore_3
      41: aload_3
      42: ifnull        53
      45: aload_2
      46: aload_3
      47: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload_1
      54: invokevirtual #37                 // Method org/apache/avro/Schema$Field.aliases:()Ljava/util/Set;
      57: invokeinterface #38,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      62: astore        4
      64: aload         4
      66: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          111
      74: aload         4
      76: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #41                 // class java/lang/String
      84: astore        5
      86: aload_0
      87: aload         5
      89: invokevirtual #35                 // Method org/apache/avro/Schema.getField:(Ljava/lang/String;)Lorg/apache/avro/Schema$Field;
      92: astore        6
      94: aload         6
      96: ifnull        108
      99: aload_2
     100: aload         6
     102: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     107: pop
     108: goto          64
     111: aload_2
     112: invokeinterface #42,  1           // InterfaceMethod java/util/List.size:()I
     117: lookupswitch  { // 2
                     0: 144
                     1: 146
               default: 157
          }
     144: aconst_null
     145: areturn
     146: aload_2
     147: iconst_0
     148: invokeinterface #43,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     153: checkcast     #44                 // class org/apache/avro/Schema$Field
     156: areturn
     157: new           #14                 // class org/apache/avro/AvroRuntimeException
     160: dup
     161: ldc           #45                 // String Reader record field %s matches multiple fields in writer record schema %s
     163: iconst_2
     164: anewarray     #10                 // class java/lang/Object
     167: dup
     168: iconst_0
     169: aload_1
     170: aastore
     171: dup
     172: iconst_1
     173: aload_0
     174: aastore
     175: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     178: invokespecial #21                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/String;)V
     181: athrow

  private static boolean objectsEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     17
       5: aload_0
       6: ifnull        21
       9: aload_0
      10: aload_1
      11: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static boolean access$200(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn

  static {};
    Code:
       0: ldc_w         #47                 // class org/apache/avro/SchemaCompatibility
       3: invokevirtual #48                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #27                 // Field $assertionsDisabled:Z
      17: ldc_w         #47                 // class org/apache/avro/SchemaCompatibility
      20: invokestatic  #49                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      23: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      26: return
}
