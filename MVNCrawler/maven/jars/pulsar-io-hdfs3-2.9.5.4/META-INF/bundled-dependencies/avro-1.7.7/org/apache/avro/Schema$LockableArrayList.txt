Compiled from "Schema.java"
class org.apache.avro.Schema$LockableArrayList<E> extends java.util.ArrayList<E> {
  private static final long serialVersionUID;

  private boolean locked;

  public org.apache.avro.Schema$LockableArrayList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/ArrayList."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field locked:Z
       9: return

  public org.apache.avro.Schema$LockableArrayList(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field locked:Z
      10: return

  public org.apache.avro.Schema$LockableArrayList(java.util.List<E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field locked:Z
      10: return

  public java.util.List<E> lock();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field locked:Z
       5: aload_0
       6: areturn

  private void ensureUnlocked();
    Code:
       0: aload_0
       1: getfield      #2                  // Field locked:Z
       4: ifeq          15
       7: new           #5                  // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: return

  public boolean add(E);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: aload_1
       6: invokespecial #8                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       9: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
       9: ireturn

  public E remove(int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: iload_1
       6: invokespecial #10                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
       9: areturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
       9: ireturn

  public boolean addAll(int, java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #12                 // Method java/util/ArrayList.addAll:(ILjava/util/Collection;)Z
      10: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: aload_1
       6: invokespecial #13                 // Method java/util/ArrayList.removeAll:(Ljava/util/Collection;)Z
       9: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method java/util/ArrayList.retainAll:(Ljava/util/Collection;)Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method ensureUnlocked:()V
       4: aload_0
       5: invokespecial #15                 // Method java/util/ArrayList.clear:()V
       8: return
}
