Compiled from "XZCodec.java"
public class org.apache.avro.file.XZCodec extends org.apache.avro.file.Codec {
  private java.io.ByteArrayOutputStream outputBuffer;

  private int compressionLevel;

  public org.apache.avro.file.XZCodec(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/avro/file/Codec."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field compressionLevel:I
       9: return

  public java.lang.String getName();
    Code:
       0: ldc           #3                  // String xz
       2: areturn

  public java.nio.ByteBuffer compress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #5                  // Method getOutputBuffer:(I)Ljava/io/ByteArrayOutputStream;
       8: astore_2
       9: new           #6                  // class org/apache/commons/compress/compressors/xz/XZCompressorOutputStream
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #2                  // Field compressionLevel:I
      18: invokespecial #7                  // Method org/apache/commons/compress/compressors/xz/XZCompressorOutputStream."<init>":(Ljava/io/OutputStream;I)V
      21: astore_3
      22: aload_0
      23: aload_1
      24: aload_3
      25: invokespecial #8                  // Method writeAndClose:(Ljava/nio/ByteBuffer;Ljava/io/OutputStream;)V
      28: aload_2
      29: invokevirtual #9                  // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      32: invokestatic  #10                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      35: areturn

  public java.nio.ByteBuffer decompress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #5                  // Method getOutputBuffer:(I)Ljava/io/ByteArrayOutputStream;
       8: astore_2
       9: new           #11                 // class java/io/ByteArrayInputStream
      12: dup
      13: aload_1
      14: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      17: aload_1
      18: invokevirtual #13                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: aload_1
      22: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      25: iadd
      26: aload_1
      27: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      30: invokespecial #15                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      33: astore_3
      34: new           #16                 // class org/apache/commons/compress/compressors/xz/XZCompressorInputStream
      37: dup
      38: aload_3
      39: invokespecial #17                 // Method org/apache/commons/compress/compressors/xz/XZCompressorInputStream."<init>":(Ljava/io/InputStream;)V
      42: astore        4
      44: aload         4
      46: aload_2
      47: invokestatic  #18                 // Method org/apache/commons/compress/utils/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      50: pop2
      51: aload         4
      53: invokevirtual #19                 // Method java/io/InputStream.close:()V
      56: goto          69
      59: astore        5
      61: aload         4
      63: invokevirtual #19                 // Method java/io/InputStream.close:()V
      66: aload         5
      68: athrow
      69: aload_2
      70: invokevirtual #9                  // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      73: invokestatic  #10                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      76: areturn
    Exception table:
       from    to  target type
          44    51    59   any
          59    61    59   any

  private void writeAndClose(java.nio.ByteBuffer, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
       4: astore_3
       5: aload_1
       6: invokevirtual #13                 // Method java/nio/ByteBuffer.arrayOffset:()I
       9: aload_1
      10: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      13: iadd
      14: istore        4
      16: aload_1
      17: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      20: istore        5
      22: aload_2
      23: aload_3
      24: iload         4
      26: iload         5
      28: invokevirtual #20                 // Method java/io/OutputStream.write:([BII)V
      31: aload_2
      32: invokevirtual #21                 // Method java/io/OutputStream.close:()V
      35: goto          47
      38: astore        6
      40: aload_2
      41: invokevirtual #21                 // Method java/io/OutputStream.close:()V
      44: aload         6
      46: athrow
      47: return
    Exception table:
       from    to  target type
          22    31    38   any
          38    40    38   any

  private java.io.ByteArrayOutputStream getOutputBuffer(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #22                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
       5: if_acmpne     20
       8: aload_0
       9: new           #23                 // class java/io/ByteArrayOutputStream
      12: dup
      13: iload_1
      14: invokespecial #24                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      17: putfield      #22                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      20: aload_0
      21: getfield      #22                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      24: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.reset:()V
      27: aload_0
      28: getfield      #22                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      31: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionLevel:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: aload_1
      12: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: if_acmpeq     20
      18: iconst_0
      19: ireturn
      20: aload_1
      21: checkcast     #27                 // class org/apache/avro/file/XZCodec
      24: astore_2
      25: aload_0
      26: getfield      #2                  // Field compressionLevel:I
      29: aload_2
      30: getfield      #2                  // Field compressionLevel:I
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #30                 // Method getName:()Ljava/lang/String;
      11: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #32                 // String -
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #2                  // Field compressionLevel:I
      23: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
}
