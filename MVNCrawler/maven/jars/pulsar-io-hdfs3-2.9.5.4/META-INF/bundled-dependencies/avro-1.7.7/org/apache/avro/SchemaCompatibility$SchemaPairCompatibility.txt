Compiled from "SchemaCompatibility.java"
public final class org.apache.avro.SchemaCompatibility$SchemaPairCompatibility {
  private final org.apache.avro.SchemaCompatibility$SchemaCompatibilityType mType;

  private final org.apache.avro.Schema mReader;

  private final org.apache.avro.Schema mWriter;

  private final java.lang.String mDescription;

  public org.apache.avro.SchemaCompatibility$SchemaPairCompatibility(org.apache.avro.SchemaCompatibility$SchemaCompatibilityType, org.apache.avro.Schema, org.apache.avro.Schema, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mReader:Lorg/apache/avro/Schema;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field mWriter:Lorg/apache/avro/Schema;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field mDescription:Ljava/lang/String;
      25: return

  public org.apache.avro.SchemaCompatibility$SchemaCompatibilityType getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
       4: areturn

  public org.apache.avro.Schema getReader();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mReader:Lorg/apache/avro/Schema;
       4: areturn

  public org.apache.avro.Schema getWriter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mWriter:Lorg/apache/avro/Schema;
       4: areturn

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mDescription:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #6                  // String SchemaPairCompatibility{type:%s, readerSchema:%s, writerSchema:%s, description:%s}
       2: iconst_4
       3: anewarray     #7                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: getfield      #3                  // Field mReader:Lorg/apache/avro/Schema;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_0
      23: getfield      #4                  // Field mWriter:Lorg/apache/avro/Schema;
      26: aastore
      27: dup
      28: iconst_3
      29: aload_0
      30: getfield      #5                  // Field mDescription:Ljava/lang/String;
      33: aastore
      34: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     79
       5: aload_1
       6: instanceof    #9                  // class org/apache/avro/SchemaCompatibility$SchemaPairCompatibility
       9: ifeq          79
      12: aload_1
      13: checkcast     #9                  // class org/apache/avro/SchemaCompatibility$SchemaPairCompatibility
      16: astore_2
      17: aload_2
      18: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      21: aload_0
      22: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      25: invokestatic  #10                 // Method org/apache/avro/SchemaCompatibility.access$200:(Ljava/lang/Object;Ljava/lang/Object;)Z
      28: ifeq          77
      31: aload_2
      32: getfield      #3                  // Field mReader:Lorg/apache/avro/Schema;
      35: aload_0
      36: getfield      #3                  // Field mReader:Lorg/apache/avro/Schema;
      39: invokestatic  #10                 // Method org/apache/avro/SchemaCompatibility.access$200:(Ljava/lang/Object;Ljava/lang/Object;)Z
      42: ifeq          77
      45: aload_2
      46: getfield      #4                  // Field mWriter:Lorg/apache/avro/Schema;
      49: aload_0
      50: getfield      #4                  // Field mWriter:Lorg/apache/avro/Schema;
      53: invokestatic  #10                 // Method org/apache/avro/SchemaCompatibility.access$200:(Ljava/lang/Object;Ljava/lang/Object;)Z
      56: ifeq          77
      59: aload_2
      60: getfield      #5                  // Field mDescription:Ljava/lang/String;
      63: aload_0
      64: getfield      #5                  // Field mDescription:Ljava/lang/String;
      67: invokestatic  #10                 // Method org/apache/avro/SchemaCompatibility.access$200:(Ljava/lang/Object;Ljava/lang/Object;)Z
      70: ifeq          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ireturn
      79: iconst_0
      80: ireturn

  public int hashCode();
    Code:
       0: iconst_4
       1: anewarray     #7                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field mReader:Lorg/apache/avro/Schema;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #4                  // Field mWriter:Lorg/apache/avro/Schema;
      24: aastore
      25: dup
      26: iconst_3
      27: aload_0
      28: getfield      #5                  // Field mDescription:Ljava/lang/String;
      31: aastore
      32: invokestatic  #11                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      35: ireturn
}
