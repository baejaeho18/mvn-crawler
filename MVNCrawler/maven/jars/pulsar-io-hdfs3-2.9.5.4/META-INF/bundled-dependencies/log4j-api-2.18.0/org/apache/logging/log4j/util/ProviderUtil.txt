Compiled from "ProviderUtil.java"
public final class org.apache.logging.log4j.util.ProviderUtil {
  protected static final java.lang.String PROVIDER_RESOURCE;

  protected static final java.util.Collection<org.apache.logging.log4j.spi.Provider> PROVIDERS;

  protected static final java.util.concurrent.locks.Lock STARTUP_LOCK;

  private static final java.lang.String API_VERSION;

  private static final java.lang.String[] COMPATIBLE_API_VERSIONS;

  private static final org.apache.logging.log4j.Logger LOGGER;

  private static volatile org.apache.logging.log4j.util.ProviderUtil instance;

  private org.apache.logging.log4j.util.ProviderUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: ldc           #2                  // class org/apache/logging/log4j/spi/Provider
       6: invokestatic  #3                  // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       9: iconst_0
      10: invokestatic  #4                  // Method org/apache/logging/log4j/util/ServiceLoaderUtil.loadServices:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandles$Lookup;Z)Ljava/util/stream/Stream;
      13: invokedynamic #5,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      18: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      23: getstatic     #7                  // Field PROVIDERS:Ljava/util/Collection;
      26: dup
      27: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: pop
      31: invokedynamic #9,  0              // InvokeDynamic #1:accept:(Ljava/util/Collection;)Ljava/util/function/Consumer;
      36: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      41: ldc           #12                 // String META-INF/log4j-provider.properties
      43: iconst_0
      44: invokestatic  #13                 // Method org/apache/logging/log4j/util/LoaderUtil.findUrlResources:(Ljava/lang/String;Z)Ljava/util/Collection;
      47: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      52: astore_1
      53: aload_1
      54: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          86
      62: aload_1
      63: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #17                 // class org/apache/logging/log4j/util/LoaderUtil$UrlResource
      71: astore_2
      72: aload_2
      73: invokevirtual #18                 // Method org/apache/logging/log4j/util/LoaderUtil$UrlResource.getUrl:()Ljava/net/URL;
      76: aload_2
      77: invokevirtual #19                 // Method org/apache/logging/log4j/util/LoaderUtil$UrlResource.getClassLoader:()Ljava/lang/ClassLoader;
      80: invokestatic  #20                 // Method loadProvider:(Ljava/net/URL;Ljava/lang/ClassLoader;)V
      83: goto          53
      86: return

  protected static void addProvider(org.apache.logging.log4j.spi.Provider);
    Code:
       0: getstatic     #7                  // Field PROVIDERS:Ljava/util/Collection;
       3: aload_0
       4: invokeinterface #21,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
       9: pop
      10: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      13: ldc           #23                 // String Loaded Provider {}
      15: aload_0
      16: invokeinterface #24,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  protected static void loadProvider(java.net.URL, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: aload_0
       5: invokestatic  #26                 // Method org/apache/logging/log4j/util/PropertiesUtil.loadClose:(Ljava/io/InputStream;Ljava/lang/Object;)Ljava/util/Properties;
       8: astore_2
       9: aload_2
      10: ldc           #27                 // String Log4jAPIVersion
      12: invokevirtual #28                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      15: invokestatic  #29                 // Method validVersion:(Ljava/lang/String;)Z
      18: ifeq          53
      21: new           #2                  // class org/apache/logging/log4j/spi/Provider
      24: dup
      25: aload_2
      26: aload_0
      27: aload_1
      28: invokespecial #30                 // Method org/apache/logging/log4j/spi/Provider."<init>":(Ljava/util/Properties;Ljava/net/URL;Ljava/lang/ClassLoader;)V
      31: astore_3
      32: getstatic     #7                  // Field PROVIDERS:Ljava/util/Collection;
      35: aload_3
      36: invokeinterface #21,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      41: pop
      42: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      45: ldc           #23                 // String Loaded Provider {}
      47: aload_3
      48: invokeinterface #24,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      53: goto          69
      56: astore_2
      57: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      60: ldc           #32                 // String Unable to open {}
      62: aload_0
      63: aload_2
      64: invokeinterface #33,  4           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      69: return
    Exception table:
       from    to  target type
           0    53    56   Class java/io/IOException

  protected static void loadProviders(java.lang.ClassLoader);
    Code:
       0: ldc           #2                  // class org/apache/logging/log4j/spi/Provider
       2: invokestatic  #3                  // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       5: aload_0
       6: iconst_1
       7: invokestatic  #34                 // Method org/apache/logging/log4j/util/ServiceLoaderUtil.loadClassloaderServices:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/ClassLoader;Z)Ljava/util/stream/Stream;
      10: invokedynamic #35,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      15: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: getstatic     #7                  // Field PROVIDERS:Ljava/util/Collection;
      23: dup
      24: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: pop
      28: invokedynamic #9,  0              // InvokeDynamic #1:accept:(Ljava/util/Collection;)Ljava/util/function/Consumer;
      33: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      38: return

  protected static void loadProviders(java.util.Enumeration<java.net.URL>, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: ifnull        29
       4: aload_0
       5: invokeinterface #36,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      10: ifeq          29
      13: aload_0
      14: invokeinterface #37,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      19: checkcast     #38                 // class java/net/URL
      22: aload_1
      23: invokestatic  #20                 // Method loadProvider:(Ljava/net/URL;Ljava/lang/ClassLoader;)V
      26: goto          4
      29: return

  public static java.lang.Iterable<org.apache.logging.log4j.spi.Provider> getProviders();
    Code:
       0: invokestatic  #39                 // Method lazyInit:()V
       3: getstatic     #7                  // Field PROVIDERS:Ljava/util/Collection;
       6: areturn

  public static boolean hasProviders();
    Code:
       0: invokestatic  #39                 // Method lazyInit:()V
       3: getstatic     #7                  // Field PROVIDERS:Ljava/util/Collection;
       6: invokeinterface #40,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected static void lazyInit();
    Code:
       0: getstatic     #41                 // Field instance:Lorg/apache/logging/log4j/util/ProviderUtil;
       3: ifnonnull     73
       6: getstatic     #42                 // Field STARTUP_LOCK:Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      14: getstatic     #41                 // Field instance:Lorg/apache/logging/log4j/util/ProviderUtil;
      17: ifnonnull     30
      20: new           #11                 // class org/apache/logging/log4j/util/ProviderUtil
      23: dup
      24: invokespecial #44                 // Method "<init>":()V
      27: putstatic     #41                 // Field instance:Lorg/apache/logging/log4j/util/ProviderUtil;
      30: getstatic     #42                 // Field STARTUP_LOCK:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: goto          52
      41: astore_0
      42: getstatic     #42                 // Field STARTUP_LOCK:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_0
      51: athrow
      52: goto          73
      55: astore_0
      56: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      59: ldc           #47                 // String Interrupted before Log4j Providers could be loaded.
      61: aload_0
      62: invokeinterface #48,  3           // InterfaceMethod org/apache/logging/log4j/Logger.fatal:(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: invokestatic  #49                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      70: invokevirtual #50                 // Method java/lang/Thread.interrupt:()V
      73: return
    Exception table:
       from    to  target type
          14    30    41   any
           6    52    55   Class java/lang/InterruptedException

  public static java.lang.ClassLoader findClassLoader();
    Code:
       0: invokestatic  #51                 // Method org/apache/logging/log4j/util/LoaderUtil.getThreadContextClassLoader:()Ljava/lang/ClassLoader;
       3: areturn

  private static boolean validVersion(java.lang.String);
    Code:
       0: getstatic     #52                 // Field COMPATIBLE_API_VERSIONS:[Ljava/lang/String;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     36
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload_0
      20: aload         4
      22: invokevirtual #53                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          9
      36: iconst_0
      37: ireturn

  private static boolean lambda$loadProviders$1(org.apache.logging.log4j.spi.Provider);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method org/apache/logging/log4j/spi/Provider.getVersions:()Ljava/lang/String;
       4: invokestatic  #29                 // Method validVersion:(Ljava/lang/String;)Z
       7: ireturn

  private static boolean lambda$new$0(org.apache.logging.log4j.spi.Provider);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method org/apache/logging/log4j/spi/Provider.getVersions:()Ljava/lang/String;
       4: invokestatic  #29                 // Method validVersion:(Ljava/lang/String;)Z
       7: ireturn

  static {};
    Code:
       0: new           #55                 // class java/util/HashSet
       3: dup
       4: invokespecial #56                 // Method java/util/HashSet."<init>":()V
       7: putstatic     #7                  // Field PROVIDERS:Ljava/util/Collection;
      10: new           #57                 // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: invokespecial #58                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      17: putstatic     #42                 // Field STARTUP_LOCK:Ljava/util/concurrent/locks/Lock;
      20: iconst_1
      21: anewarray     #59                 // class java/lang/String
      24: dup
      25: iconst_0
      26: ldc           #60                 // String 2.6.0
      28: aastore
      29: putstatic     #52                 // Field COMPATIBLE_API_VERSIONS:[Ljava/lang/String;
      32: invokestatic  #61                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      35: putstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      38: return
}
