Compiled from "LogFactory.java"
public abstract class org.apache.commons.logging.LogFactory {
  public static final java.lang.String PRIORITY_KEY;

  public static final java.lang.String TCCL_KEY;

  public static final java.lang.String FACTORY_PROPERTY;

  public static final java.lang.String FACTORY_DEFAULT;

  public static final java.lang.String FACTORY_PROPERTIES;

  protected static final java.lang.String SERVICE_ID;

  public static final java.lang.String DIAGNOSTICS_DEST_PROPERTY;

  private static java.io.PrintStream diagnosticsStream;

  private static final java.lang.String diagnosticPrefix;

  public static final java.lang.String HASHTABLE_IMPLEMENTATION_PROPERTY;

  private static final java.lang.String WEAK_HASHTABLE_CLASSNAME;

  private static final java.lang.ClassLoader thisClassLoader;

  protected static java.util.Hashtable factories;

  protected static volatile org.apache.commons.logging.LogFactory nullClassLoaderFactory;

  static java.lang.Class class$java$lang$Thread;

  static java.lang.Class class$org$apache$commons$logging$LogFactory;

  protected org.apache.commons.logging.LogFactory();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract java.lang.Object getAttribute(java.lang.String);

  public abstract java.lang.String[] getAttributeNames();

  public abstract org.apache.commons.logging.Log getInstance(java.lang.Class) throws org.apache.commons.logging.LogConfigurationException;

  public abstract org.apache.commons.logging.Log getInstance(java.lang.String) throws org.apache.commons.logging.LogConfigurationException;

  public abstract void release();

  public abstract void removeAttribute(java.lang.String);

  public abstract void setAttribute(java.lang.String, java.lang.Object);

  private static final java.util.Hashtable createFactoryStore();
    Code:
       0: aconst_null
       1: astore_0
       2: ldc           #8                  // String org.apache.commons.logging.LogFactory.HashtableImpl
       4: aconst_null
       5: invokestatic  #9                  // Method getSystemProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: goto          15
      12: astore_2
      13: aconst_null
      14: astore_1
      15: aload_1
      16: ifnonnull     22
      19: ldc           #11                 // String org.apache.commons.logging.impl.WeakHashtable
      21: astore_1
      22: aload_1
      23: invokestatic  #2                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      26: astore_2
      27: aload_2
      28: invokevirtual #12                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      31: checkcast     #13                 // class java/util/Hashtable
      34: astore_0
      35: goto          74
      38: astore_2
      39: aload_2
      40: invokestatic  #15                 // Method handleThrowable:(Ljava/lang/Throwable;)V
      43: ldc           #11                 // String org.apache.commons.logging.impl.WeakHashtable
      45: aload_1
      46: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifne          74
      52: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      55: ifeq          66
      58: ldc           #18                 // String [ERROR] LogFactory: Load of custom hashtable failed
      60: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      63: goto          74
      66: getstatic     #19                 // Field java/lang/System.err:Ljava/io/PrintStream;
      69: ldc           #18                 // String [ERROR] LogFactory: Load of custom hashtable failed
      71: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      74: aload_0
      75: ifnonnull     86
      78: new           #13                 // class java/util/Hashtable
      81: dup
      82: invokespecial #21                 // Method java/util/Hashtable."<init>":()V
      85: astore_0
      86: aload_0
      87: areturn
    Exception table:
       from    to  target type
           2     9    12   Class java/lang/SecurityException
          22    35    38   Class java/lang/Throwable

  private static java.lang.String trim(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
      10: areturn

  protected static void handleThrowable(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #23                 // class java/lang/ThreadDeath
       4: ifeq          12
       7: aload_0
       8: checkcast     #23                 // class java/lang/ThreadDeath
      11: athrow
      12: aload_0
      13: instanceof    #24                 // class java/lang/VirtualMachineError
      16: ifeq          24
      19: aload_0
      20: checkcast     #24                 // class java/lang/VirtualMachineError
      23: athrow
      24: return

  public static org.apache.commons.logging.LogFactory getFactory() throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: invokestatic  #25                 // Method getContextClassLoaderInternal:()Ljava/lang/ClassLoader;
       3: astore_0
       4: aload_0
       5: ifnonnull     19
       8: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      11: ifeq          19
      14: ldc           #26                 // String Context classloader is null.
      16: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      19: aload_0
      20: invokestatic  #27                 // Method getCachedFactory:(Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
      23: astore_1
      24: aload_1
      25: ifnull        30
      28: aload_1
      29: areturn
      30: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      33: ifeq          67
      36: new           #28                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      43: ldc           #30                 // String [LOOKUP] LogFactory implementation requested for the first time for context classloader
      45: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: aload_0
      49: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
      52: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      55: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      58: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      61: ldc           #34                 // String [LOOKUP]
      63: aload_0
      64: invokestatic  #35                 // Method logHierarchy:(Ljava/lang/String;Ljava/lang/ClassLoader;)V
      67: aload_0
      68: ldc           #36                 // String commons-logging.properties
      70: invokestatic  #37                 // Method getConfigurationFile:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/util/Properties;
      73: astore_2
      74: aload_0
      75: astore_3
      76: aload_2
      77: ifnull        108
      80: aload_2
      81: ldc           #38                 // String use_tccl
      83: invokevirtual #39                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      86: astore        4
      88: aload         4
      90: ifnull        108
      93: aload         4
      95: invokestatic  #40                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      98: invokevirtual #41                 // Method java/lang/Boolean.booleanValue:()Z
     101: ifne          108
     104: getstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
     107: astore_3
     108: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     111: ifeq          119
     114: ldc           #43                 // String [LOOKUP] Looking for system property [org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...
     116: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     119: ldc           #44                 // String org.apache.commons.logging.LogFactory
     121: aconst_null
     122: invokestatic  #9                  // Method getSystemProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     125: astore        4
     127: aload         4
     129: ifnull        182
     132: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     135: ifeq          171
     138: new           #28                 // class java/lang/StringBuffer
     141: dup
     142: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     145: ldc           #45                 // String [LOOKUP] Creating an instance of LogFactory class \'
     147: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     150: aload         4
     152: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     155: ldc           #46                 // String \' as specified by system property
     157: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     160: ldc           #44                 // String org.apache.commons.logging.LogFactory
     162: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     165: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     168: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     171: aload         4
     173: aload_3
     174: aload_0
     175: invokestatic  #47                 // Method newFactory:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
     178: astore_1
     179: goto          193
     182: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     185: ifeq          193
     188: ldc           #48                 // String [LOOKUP] No system property [org.apache.commons.logging.LogFactory] defined.
     190: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     193: goto          286
     196: astore        4
     198: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     201: ifeq          238
     204: new           #28                 // class java/lang/StringBuffer
     207: dup
     208: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     211: ldc           #49                 // String [LOOKUP] A security exception occurred while trying to create an instance of the custom factory class: [
     213: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     216: aload         4
     218: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     221: invokestatic  #50                 // Method trim:(Ljava/lang/String;)Ljava/lang/String;
     224: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     227: ldc           #51                 // String ]. Trying alternative implementations...
     229: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     232: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     235: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     238: goto          286
     241: astore        4
     243: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     246: ifeq          283
     249: new           #28                 // class java/lang/StringBuffer
     252: dup
     253: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     256: ldc           #53                 // String [LOOKUP] An exception occurred while trying to create an instance of the custom factory class: [
     258: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     261: aload         4
     263: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     266: invokestatic  #50                 // Method trim:(Ljava/lang/String;)Ljava/lang/String;
     269: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     272: ldc           #54                 // String ] as specified by a system property.
     274: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     277: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     280: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     283: aload         4
     285: athrow
     286: aload_1
     287: ifnonnull     495
     290: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     293: ifeq          301
     296: ldc           #55                 // String [LOOKUP] Looking for a resource file of name [META-INF/services/org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...
     298: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     301: aload_0
     302: ldc           #56                 // String META-INF/services/org.apache.commons.logging.LogFactory
     304: invokestatic  #57                 // Method getResourceAsStream:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/InputStream;
     307: astore        4
     309: aload         4
     311: ifnull        439
     314: new           #58                 // class java/io/BufferedReader
     317: dup
     318: new           #59                 // class java/io/InputStreamReader
     321: dup
     322: aload         4
     324: ldc           #60                 // String UTF-8
     326: invokespecial #61                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
     329: invokespecial #62                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     332: astore        5
     334: goto          357
     337: astore        6
     339: new           #58                 // class java/io/BufferedReader
     342: dup
     343: new           #59                 // class java/io/InputStreamReader
     346: dup
     347: aload         4
     349: invokespecial #64                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
     352: invokespecial #62                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     355: astore        5
     357: aload         5
     359: invokevirtual #65                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     362: astore        6
     364: aload         5
     366: invokevirtual #66                 // Method java/io/BufferedReader.close:()V
     369: aload         6
     371: ifnull        436
     374: ldc           #67                 // String
     376: aload         6
     378: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     381: ifne          436
     384: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     387: ifeq          428
     390: new           #28                 // class java/lang/StringBuffer
     393: dup
     394: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     397: ldc           #68                 // String [LOOKUP]  Creating an instance of LogFactory class
     399: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     402: aload         6
     404: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     407: ldc           #69                 // String  as specified by file \'
     409: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     412: ldc           #56                 // String META-INF/services/org.apache.commons.logging.LogFactory
     414: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     417: ldc           #70                 // String \' which was present in the path of the context classloader.
     419: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     422: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     425: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     428: aload         6
     430: aload_3
     431: aload_0
     432: invokestatic  #47                 // Method newFactory:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
     435: astore_1
     436: goto          450
     439: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     442: ifeq          450
     445: ldc           #71                 // String [LOOKUP] No resource file with name \'META-INF/services/org.apache.commons.logging.LogFactory\' found.
     447: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     450: goto          495
     453: astore        4
     455: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     458: ifeq          495
     461: new           #28                 // class java/lang/StringBuffer
     464: dup
     465: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     468: ldc           #49                 // String [LOOKUP] A security exception occurred while trying to create an instance of the custom factory class: [
     470: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     473: aload         4
     475: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     478: invokestatic  #50                 // Method trim:(Ljava/lang/String;)Ljava/lang/String;
     481: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     484: ldc           #51                 // String ]. Trying alternative implementations...
     486: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     489: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     492: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     495: aload_1
     496: ifnonnull     597
     499: aload_2
     500: ifnull        586
     503: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     506: ifeq          514
     509: ldc           #73                 // String [LOOKUP] Looking in properties file for entry with key \'org.apache.commons.logging.LogFactory\' to define the LogFactory subclass to use...
     511: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     514: aload_2
     515: ldc           #44                 // String org.apache.commons.logging.LogFactory
     517: invokevirtual #39                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     520: astore        4
     522: aload         4
     524: ifnull        572
     527: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     530: ifeq          561
     533: new           #28                 // class java/lang/StringBuffer
     536: dup
     537: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     540: ldc           #74                 // String [LOOKUP] Properties file specifies LogFactory subclass \'
     542: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     545: aload         4
     547: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     550: ldc           #75                 // String \'
     552: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     555: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     558: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     561: aload         4
     563: aload_3
     564: aload_0
     565: invokestatic  #47                 // Method newFactory:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
     568: astore_1
     569: goto          583
     572: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     575: ifeq          583
     578: ldc           #76                 // String [LOOKUP] Properties file has no entry specifying LogFactory subclass.
     580: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     583: goto          597
     586: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     589: ifeq          597
     592: ldc           #77                 // String [LOOKUP] No properties file available to determine LogFactory subclass from..
     594: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     597: aload_1
     598: ifnonnull     622
     601: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     604: ifeq          612
     607: ldc           #78                 // String [LOOKUP] Loading the default LogFactory implementation \'org.apache.commons.logging.impl.LogFactoryImpl\' via the same classloader that loaded this LogFactory class (ie not looking in the context classloader).
     609: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     612: ldc           #79                 // String org.apache.commons.logging.impl.LogFactoryImpl
     614: getstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
     617: aload_0
     618: invokestatic  #47                 // Method newFactory:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
     621: astore_1
     622: aload_1
     623: ifnull        682
     626: aload_0
     627: aload_1
     628: invokestatic  #80                 // Method cacheFactory:(Ljava/lang/ClassLoader;Lorg/apache/commons/logging/LogFactory;)V
     631: aload_2
     632: ifnull        682
     635: aload_2
     636: invokevirtual #81                 // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
     639: astore        4
     641: aload         4
     643: invokeinterface #82,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     648: ifeq          682
     651: aload         4
     653: invokeinterface #83,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     658: checkcast     #84                 // class java/lang/String
     661: astore        5
     663: aload_2
     664: aload         5
     666: invokevirtual #39                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     669: astore        6
     671: aload_1
     672: aload         5
     674: aload         6
     676: invokevirtual #85                 // Method setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     679: goto          641
     682: aload_1
     683: areturn
    Exception table:
       from    to  target type
         119   193   196   Class java/lang/SecurityException
         119   193   241   Class java/lang/RuntimeException
         314   334   337   Class java/io/UnsupportedEncodingException
         301   450   453   Class java/lang/Exception

  public static org.apache.commons.logging.Log getLog(java.lang.Class) throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: invokestatic  #86                 // Method getFactory:()Lorg/apache/commons/logging/LogFactory;
       3: aload_0
       4: invokevirtual #87                 // Method getInstance:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       7: areturn

  public static org.apache.commons.logging.Log getLog(java.lang.String) throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: invokestatic  #86                 // Method getFactory:()Lorg/apache/commons/logging/LogFactory;
       3: aload_0
       4: invokevirtual #88                 // Method getInstance:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;
       7: areturn

  public static void release(java.lang.ClassLoader);
    Code:
       0: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
       3: ifeq          31
       6: new           #28                 // class java/lang/StringBuffer
       9: dup
      10: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      13: ldc           #89                 // String Releasing factory for classloader
      15: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: aload_0
      19: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
      22: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      28: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      31: getstatic     #90                 // Field factories:Ljava/util/Hashtable;
      34: astore_1
      35: aload_1
      36: dup
      37: astore_2
      38: monitorenter
      39: aload_0
      40: ifnonnull     62
      43: getstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      46: ifnull        85
      49: getstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      52: invokevirtual #92                 // Method release:()V
      55: aconst_null
      56: putstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      59: goto          85
      62: aload_1
      63: aload_0
      64: invokevirtual #93                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #94                 // class org/apache/commons/logging/LogFactory
      70: astore_3
      71: aload_3
      72: ifnull        85
      75: aload_3
      76: invokevirtual #92                 // Method release:()V
      79: aload_1
      80: aload_0
      81: invokevirtual #95                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload_2
      86: monitorexit
      87: goto          97
      90: astore        4
      92: aload_2
      93: monitorexit
      94: aload         4
      96: athrow
      97: return
    Exception table:
       from    to  target type
          39    87    90   any
          90    94    90   any

  public static void releaseAll();
    Code:
       0: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
       3: ifeq          11
       6: ldc           #96                 // String Releasing factory for all classloaders.
       8: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      11: getstatic     #90                 // Field factories:Ljava/util/Hashtable;
      14: astore_0
      15: aload_0
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: invokevirtual #97                 // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
      23: astore_2
      24: aload_2
      25: invokeinterface #82,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      30: ifeq          50
      33: aload_2
      34: invokeinterface #83,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      39: checkcast     #94                 // class org/apache/commons/logging/LogFactory
      42: astore_3
      43: aload_3
      44: invokevirtual #92                 // Method release:()V
      47: goto          24
      50: aload_0
      51: invokevirtual #98                 // Method java/util/Hashtable.clear:()V
      54: getstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      57: ifnull        70
      60: getstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      63: invokevirtual #92                 // Method release:()V
      66: aconst_null
      67: putstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      70: aload_1
      71: monitorexit
      72: goto          82
      75: astore        4
      77: aload_1
      78: monitorexit
      79: aload         4
      81: athrow
      82: return
    Exception table:
       from    to  target type
          19    72    75   any
          75    79    75   any

  protected static java.lang.ClassLoader getClassLoader(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       4: areturn
       5: astore_1
       6: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
       9: ifeq          46
      12: new           #28                 // class java/lang/StringBuffer
      15: dup
      16: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      19: ldc           #100                // String Unable to get classloader for class \'
      21: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: aload_0
      25: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      28: ldc           #102                // String \' due to security restrictions -
      30: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: aload_1
      34: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      37: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      40: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      43: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      46: aload_1
      47: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/SecurityException

  protected static java.lang.ClassLoader getContextClassLoader() throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: invokestatic  #103                // Method directGetContextClassLoader:()Ljava/lang/ClassLoader;
       3: areturn

  private static java.lang.ClassLoader getContextClassLoaderInternal() throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: new           #104                // class org/apache/commons/logging/LogFactory$1
       3: dup
       4: invokespecial #105                // Method org/apache/commons/logging/LogFactory$1."<init>":()V
       7: invokestatic  #106                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      10: checkcast     #107                // class java/lang/ClassLoader
      13: areturn

  protected static java.lang.ClassLoader directGetContextClassLoader() throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: aconst_null
       1: astore_0
       2: getstatic     #108                // Field class$java$lang$Thread:Ljava/lang/Class;
       5: ifnonnull     20
       8: ldc           #109                // String java.lang.Thread
      10: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      13: dup
      14: putstatic     #108                // Field class$java$lang$Thread:Ljava/lang/Class;
      17: goto          23
      20: getstatic     #108                // Field class$java$lang$Thread:Ljava/lang/Class;
      23: ldc           #111                // String getContextClassLoader
      25: aconst_null
      26: checkcast     #112                // class "[Ljava/lang/Class;"
      29: invokevirtual #113                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      32: astore_1
      33: aload_1
      34: invokestatic  #114                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      37: aconst_null
      38: checkcast     #115                // class "[Ljava/lang/Object;"
      41: invokevirtual #116                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #107                // class java/lang/ClassLoader
      47: astore_0
      48: goto          91
      51: astore_2
      52: new           #118                // class org/apache/commons/logging/LogConfigurationException
      55: dup
      56: ldc           #119                // String Unexpected IllegalAccessException
      58: aload_2
      59: invokespecial #120                // Method org/apache/commons/logging/LogConfigurationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: athrow
      63: astore_2
      64: aload_2
      65: invokevirtual #122                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      68: instanceof    #10                 // class java/lang/SecurityException
      71: ifeq          77
      74: goto          91
      77: new           #118                // class org/apache/commons/logging/LogConfigurationException
      80: dup
      81: ldc           #123                // String Unexpected InvocationTargetException
      83: aload_2
      84: invokevirtual #122                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      87: invokespecial #120                // Method org/apache/commons/logging/LogConfigurationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      90: athrow
      91: goto          120
      94: astore_1
      95: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
      98: ifnonnull     113
     101: ldc           #44                 // String org.apache.commons.logging.LogFactory
     103: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     106: dup
     107: putstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     110: goto          116
     113: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     116: invokestatic  #126                // Method getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
     119: astore_0
     120: aload_0
     121: areturn
    Exception table:
       from    to  target type
          33    48    51   Class java/lang/IllegalAccessException
          33    48    63   Class java/lang/reflect/InvocationTargetException
           2    91    94   Class java/lang/NoSuchMethodException

  private static org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
       7: areturn
       8: getstatic     #90                 // Field factories:Ljava/util/Hashtable;
      11: aload_0
      12: invokevirtual #93                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #94                 // class org/apache/commons/logging/LogFactory
      18: areturn

  private static void cacheFactory(java.lang.ClassLoader, org.apache.commons.logging.LogFactory);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_0
       5: ifnonnull     15
       8: aload_1
       9: putstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      12: goto          24
      15: getstatic     #90                 // Field factories:Ljava/util/Hashtable;
      18: aload_0
      19: aload_1
      20: invokevirtual #127                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  protected static org.apache.commons.logging.LogFactory newFactory(java.lang.String, java.lang.ClassLoader, java.lang.ClassLoader) throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: new           #128                // class org/apache/commons/logging/LogFactory$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #129                // Method org/apache/commons/logging/LogFactory$2."<init>":(Ljava/lang/String;Ljava/lang/ClassLoader;)V
       9: invokestatic  #106                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: astore_3
      13: aload_3
      14: instanceof    #118                // class org/apache/commons/logging/LogConfigurationException
      17: ifeq          61
      20: aload_3
      21: checkcast     #118                // class org/apache/commons/logging/LogConfigurationException
      24: astore        4
      26: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      29: ifeq          58
      32: new           #28                 // class java/lang/StringBuffer
      35: dup
      36: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      39: ldc           #130                // String An error occurred while loading the factory class:
      41: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: aload         4
      46: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      49: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      55: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      58: aload         4
      60: athrow
      61: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      64: ifeq          104
      67: new           #28                 // class java/lang/StringBuffer
      70: dup
      71: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      74: ldc           #131                // String Created object
      76: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      79: aload_3
      80: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
      83: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      86: ldc           #132                // String  to manage classloader
      88: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      91: aload_2
      92: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
      95: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     101: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     104: aload_3
     105: checkcast     #94                 // class org/apache/commons/logging/LogFactory
     108: areturn

  protected static org.apache.commons.logging.LogFactory newFactory(java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #47                 // Method newFactory:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
       6: areturn

  protected static java.lang.Object createFactory(java.lang.String, java.lang.ClassLoader);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        498
       6: aload_1
       7: aload_0
       8: invokevirtual #133                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      11: astore_2
      12: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
      15: ifnonnull     30
      18: ldc           #44                 // String org.apache.commons.logging.LogFactory
      20: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      23: dup
      24: putstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
      27: goto          33
      30: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
      33: aload_2
      34: invokevirtual #134                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      37: ifeq          86
      40: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      43: ifeq          175
      46: new           #28                 // class java/lang/StringBuffer
      49: dup
      50: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      53: ldc           #135                // String Loaded class
      55: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: aload_2
      59: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
      62: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      65: ldc           #137                // String  from classloader
      67: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: aload_1
      71: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
      74: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      77: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      80: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      83: goto          175
      86: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      89: ifeq          175
      92: new           #28                 // class java/lang/StringBuffer
      95: dup
      96: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      99: ldc           #138                // String Factory class
     101: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: aload_2
     105: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
     108: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     111: ldc           #139                // String  loaded from classloader
     113: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     116: aload_2
     117: invokevirtual #99                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     120: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
     123: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     126: ldc           #140                // String  does not extend \'
     128: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     131: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     134: ifnonnull     149
     137: ldc           #44                 // String org.apache.commons.logging.LogFactory
     139: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     142: dup
     143: putstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     146: goto          152
     149: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     152: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
     155: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     158: ldc           #141                // String \' as loaded by this classloader.
     160: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     163: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     166: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     169: ldc           #142                // String [BAD CL TREE]
     171: aload_1
     172: invokestatic  #35                 // Method logHierarchy:(Ljava/lang/String;Ljava/lang/ClassLoader;)V
     175: aload_2
     176: invokevirtual #12                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     179: checkcast     #94                 // class org/apache/commons/logging/LogFactory
     182: areturn
     183: astore_3
     184: aload_1
     185: getstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
     188: if_acmpne     233
     191: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     194: ifeq          231
     197: new           #28                 // class java/lang/StringBuffer
     200: dup
     201: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     204: ldc           #143                // String Unable to locate any class called \'
     206: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     209: aload_0
     210: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     213: ldc           #144                // String \' via classloader
     215: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     218: aload_1
     219: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
     222: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     225: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     228: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     231: aload_3
     232: athrow
     233: goto          498
     236: astore_3
     237: aload_1
     238: getstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
     241: if_acmpne     296
     244: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     247: ifeq          294
     250: new           #28                 // class java/lang/StringBuffer
     253: dup
     254: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     257: ldc           #145                // String Class \'
     259: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     262: aload_0
     263: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     266: ldc           #146                // String \' cannot be loaded
     268: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     271: ldc           #147                // String  via classloader
     273: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     276: aload_1
     277: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
     280: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     283: ldc           #148                // String  - it depends on some other class that cannot be found.
     285: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     288: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     291: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     294: aload_3
     295: athrow
     296: goto          498
     299: astore_3
     300: aload_1
     301: getstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
     304: if_acmpne     498
     307: aload_2
     308: invokestatic  #150                // Method implementsLogFactory:(Ljava/lang/Class;)Z
     311: istore        4
     313: new           #28                 // class java/lang/StringBuffer
     316: dup
     317: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     320: astore        5
     322: aload         5
     324: ldc           #151                // String The application has specified that a custom LogFactory implementation
     326: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     329: pop
     330: aload         5
     332: ldc           #152                // String should be used but Class \'
     334: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     337: pop
     338: aload         5
     340: aload_0
     341: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     344: pop
     345: aload         5
     347: ldc           #153                // String \' cannot be converted to \'
     349: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     352: pop
     353: aload         5
     355: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     358: ifnonnull     373
     361: ldc           #44                 // String org.apache.commons.logging.LogFactory
     363: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     366: dup
     367: putstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     370: goto          376
     373: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     376: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
     379: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     382: pop
     383: aload         5
     385: ldc           #154                // String \'.
     387: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     390: pop
     391: iload         4
     393: ifeq          455
     396: aload         5
     398: ldc           #155                // String The conflict is caused by the presence of multiple LogFactory classes
     400: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     403: pop
     404: aload         5
     406: ldc           #156                // String in incompatible classloaders.
     408: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     411: pop
     412: aload         5
     414: ldc           #157                // String Background can be found in http://commons.apache.org/logging/tech.html.
     416: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     419: pop
     420: aload         5
     422: ldc           #158                // String If you have not explicitly specified a custom LogFactory then it is likely
     424: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     427: pop
     428: aload         5
     430: ldc           #159                // String that the container has set one without your knowledge.
     432: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     435: pop
     436: aload         5
     438: ldc           #160                // String In this case, consider using the commons-logging-adapters.jar file or
     440: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     443: pop
     444: aload         5
     446: ldc           #161                // String specifying the standard LogFactory from the command line.
     448: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     451: pop
     452: goto          463
     455: aload         5
     457: ldc           #162                // String Please check the custom implementation.
     459: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     462: pop
     463: aload         5
     465: ldc           #163                // String Help can be found @http://commons.apache.org/logging/troubleshooting.html.
     467: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     470: pop
     471: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     474: ifeq          485
     477: aload         5
     479: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     482: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     485: new           #149                // class java/lang/ClassCastException
     488: dup
     489: aload         5
     491: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     494: invokespecial #164                // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
     497: athrow
     498: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     501: ifeq          534
     504: new           #28                 // class java/lang/StringBuffer
     507: dup
     508: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     511: ldc           #165                // String Unable to load factory class via classloader
     513: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     516: aload_1
     517: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
     520: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     523: ldc           #166                // String  - trying the classloader associated with this LogFactory.
     525: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     528: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     531: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     534: aload_0
     535: invokestatic  #2                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     538: astore_2
     539: aload_2
     540: invokevirtual #12                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     543: checkcast     #94                 // class org/apache/commons/logging/LogFactory
     546: areturn
     547: astore_3
     548: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     551: ifeq          559
     554: ldc           #167                // String Unable to create LogFactory instance.
     556: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     559: aload_2
     560: ifnull        602
     563: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     566: ifnonnull     581
     569: ldc           #44                 // String org.apache.commons.logging.LogFactory
     571: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     574: dup
     575: putstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     578: goto          584
     581: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     584: aload_2
     585: invokevirtual #134                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     588: ifne          602
     591: new           #118                // class org/apache/commons/logging/LogConfigurationException
     594: dup
     595: ldc           #168                // String The chosen LogFactory implementation does not extend LogFactory. Please check your configuration.
     597: aload_3
     598: invokespecial #120                // Method org/apache/commons/logging/LogConfigurationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     601: areturn
     602: new           #118                // class org/apache/commons/logging/LogConfigurationException
     605: dup
     606: aload_3
     607: invokespecial #169                // Method org/apache/commons/logging/LogConfigurationException."<init>":(Ljava/lang/Throwable;)V
     610: areturn
    Exception table:
       from    to  target type
           6   182   183   Class java/lang/ClassNotFoundException
           6   182   236   Class java/lang/NoClassDefFoundError
           6   182   299   Class java/lang/ClassCastException
           2   182   547   Class java/lang/Exception
         183   546   547   Class java/lang/Exception

  private static boolean implementsLogFactory(java.lang.Class);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: ifnull        177
       6: aload_0
       7: invokevirtual #99                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      10: astore_2
      11: aload_2
      12: ifnonnull     23
      15: ldc           #170                // String [CUSTOM LOG FACTORY] was loaded by the boot classloader
      17: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      20: goto          110
      23: ldc           #171                // String [CUSTOM LOG FACTORY]
      25: aload_2
      26: invokestatic  #35                 // Method logHierarchy:(Ljava/lang/String;Ljava/lang/ClassLoader;)V
      29: ldc           #44                 // String org.apache.commons.logging.LogFactory
      31: iconst_0
      32: aload_2
      33: invokestatic  #172                // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      36: astore_3
      37: aload_3
      38: aload_0
      39: invokevirtual #134                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      42: istore_1
      43: iload_1
      44: ifeq          80
      47: new           #28                 // class java/lang/StringBuffer
      50: dup
      51: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      54: ldc           #171                // String [CUSTOM LOG FACTORY]
      56: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      59: aload_0
      60: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
      63: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      66: ldc           #173                // String  implements LogFactory but was loaded by an incompatible classloader.
      68: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      71: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      74: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      77: goto          110
      80: new           #28                 // class java/lang/StringBuffer
      83: dup
      84: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      87: ldc           #171                // String [CUSTOM LOG FACTORY]
      89: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      92: aload_0
      93: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
      96: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      99: ldc           #174                // String  does not implement LogFactory.
     101: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     107: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     110: goto          177
     113: astore_2
     114: new           #28                 // class java/lang/StringBuffer
     117: dup
     118: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     121: ldc           #175                // String [CUSTOM LOG FACTORY] SecurityException thrown whilst trying to determine whether the compatibility was caused by a classloader conflict:
     123: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     126: aload_2
     127: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     130: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     133: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     136: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     139: goto          177
     142: astore_2
     143: new           #28                 // class java/lang/StringBuffer
     146: dup
     147: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     150: ldc           #177                // String [CUSTOM LOG FACTORY] LinkageError thrown whilst trying to determine whether the compatibility was caused by a classloader conflict:
     152: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     155: aload_2
     156: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     159: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     162: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     165: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     168: goto          177
     171: astore_2
     172: ldc           #178                // String [CUSTOM LOG FACTORY] LogFactory class cannot be loaded by classloader which loaded the custom LogFactory implementation. Is the custom factory in the right classloader?
     174: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     177: iload_1
     178: ireturn
    Exception table:
       from    to  target type
           6   110   113   Class java/lang/SecurityException
           6   110   142   Class java/lang/LinkageError
           6   110   171   Class java/lang/ClassNotFoundException

  private static java.io.InputStream getResourceAsStream(java.lang.ClassLoader, java.lang.String);
    Code:
       0: new           #179                // class org/apache/commons/logging/LogFactory$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #180                // Method org/apache/commons/logging/LogFactory$3."<init>":(Ljava/lang/ClassLoader;Ljava/lang/String;)V
       9: invokestatic  #106                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: checkcast     #181                // class java/io/InputStream
      15: areturn

  private static java.util.Enumeration getResources(java.lang.ClassLoader, java.lang.String);
    Code:
       0: new           #182                // class org/apache/commons/logging/LogFactory$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #183                // Method org/apache/commons/logging/LogFactory$4."<init>":(Ljava/lang/ClassLoader;Ljava/lang/String;)V
       9: astore_2
      10: aload_2
      11: invokestatic  #106                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      14: astore_3
      15: aload_3
      16: checkcast     #184                // class java/util/Enumeration
      19: areturn

  private static java.util.Properties getProperties(java.net.URL);
    Code:
       0: new           #185                // class org/apache/commons/logging/LogFactory$5
       3: dup
       4: aload_0
       5: invokespecial #186                // Method org/apache/commons/logging/LogFactory$5."<init>":(Ljava/net/URL;)V
       8: astore_1
       9: aload_1
      10: invokestatic  #106                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      13: checkcast     #187                // class java/util/Properties
      16: areturn

  private static final java.util.Properties getConfigurationFile(java.lang.ClassLoader, java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: dconst_0
       3: dstore_3
       4: aconst_null
       5: astore        5
       7: aload_0
       8: aload_1
       9: invokestatic  #188                // Method getResources:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/util/Enumeration;
      12: astore        6
      14: aload         6
      16: ifnonnull     21
      19: aconst_null
      20: areturn
      21: aload         6
      23: invokeinterface #82,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      28: ifeq          316
      31: aload         6
      33: invokeinterface #83,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      38: checkcast     #189                // class java/net/URL
      41: astore        7
      43: aload         7
      45: invokestatic  #190                // Method getProperties:(Ljava/net/URL;)Ljava/util/Properties;
      48: astore        8
      50: aload         8
      52: ifnull        313
      55: aload_2
      56: ifnonnull     133
      59: aload         7
      61: astore        5
      63: aload         8
      65: astore_2
      66: aload_2
      67: ldc           #191                // String priority
      69: invokevirtual #39                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      72: astore        9
      74: dconst_0
      75: dstore_3
      76: aload         9
      78: ifnull        87
      81: aload         9
      83: invokestatic  #192                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      86: dstore_3
      87: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
      90: ifeq          130
      93: new           #28                 // class java/lang/StringBuffer
      96: dup
      97: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     100: ldc           #193                // String [LOOKUP] Properties file found at \'
     102: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     105: aload         7
     107: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     110: ldc           #75                 // String \'
     112: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     115: ldc           #194                // String  with priority
     117: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     120: dload_3
     121: invokevirtual #195                // Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
     124: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     127: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     130: goto          313
     133: aload         8
     135: ldc           #191                // String priority
     137: invokevirtual #39                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     140: astore        9
     142: dconst_0
     143: dstore        10
     145: aload         9
     147: ifnull        157
     150: aload         9
     152: invokestatic  #192                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     155: dstore        10
     157: dload         10
     159: dload_3
     160: dcmpl
     161: ifle          245
     164: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     167: ifeq          232
     170: new           #28                 // class java/lang/StringBuffer
     173: dup
     174: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     177: ldc           #196                // String [LOOKUP] Properties file at \'
     179: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     182: aload         7
     184: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     187: ldc           #75                 // String \'
     189: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     192: ldc           #194                // String  with priority
     194: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     197: dload         10
     199: invokevirtual #195                // Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
     202: ldc           #197                // String  overrides file at \'
     204: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     207: aload         5
     209: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     212: ldc           #75                 // String \'
     214: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     217: ldc           #194                // String  with priority
     219: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     222: dload_3
     223: invokevirtual #195                // Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
     226: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     229: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     232: aload         7
     234: astore        5
     236: aload         8
     238: astore_2
     239: dload         10
     241: dstore_3
     242: goto          313
     245: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     248: ifeq          313
     251: new           #28                 // class java/lang/StringBuffer
     254: dup
     255: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     258: ldc           #196                // String [LOOKUP] Properties file at \'
     260: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     263: aload         7
     265: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     268: ldc           #75                 // String \'
     270: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     273: ldc           #194                // String  with priority
     275: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     278: dload         10
     280: invokevirtual #195                // Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
     283: ldc           #198                // String  does not override file at \'
     285: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     288: aload         5
     290: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     293: ldc           #75                 // String \'
     295: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     298: ldc           #194                // String  with priority
     300: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     303: dload_3
     304: invokevirtual #195                // Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
     307: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     310: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     313: goto          21
     316: goto          332
     319: astore        6
     321: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     324: ifeq          332
     327: ldc           #199                // String SecurityException thrown while trying to find/read config files.
     329: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     332: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     335: ifeq          409
     338: aload_2
     339: ifnonnull     372
     342: new           #28                 // class java/lang/StringBuffer
     345: dup
     346: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     349: ldc           #200                // String [LOOKUP] No properties file of name \'
     351: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     354: aload_1
     355: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     358: ldc           #201                // String \' found.
     360: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     363: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     366: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     369: goto          409
     372: new           #28                 // class java/lang/StringBuffer
     375: dup
     376: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     379: ldc           #202                // String [LOOKUP] Properties file of name \'
     381: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     384: aload_1
     385: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     388: ldc           #203                // String \' found at \'
     390: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     393: aload         5
     395: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     398: bipush        34
     400: invokevirtual #204                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     403: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     406: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     409: aload_2
     410: areturn
    Exception table:
       from    to  target type
           7    20   319   Class java/lang/SecurityException
          21   316   319   Class java/lang/SecurityException

  private static java.lang.String getSystemProperty(java.lang.String, java.lang.String) throws java.lang.SecurityException;
    Code:
       0: new           #205                // class org/apache/commons/logging/LogFactory$6
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #206                // Method org/apache/commons/logging/LogFactory$6."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       9: invokestatic  #106                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: checkcast     #84                 // class java/lang/String
      15: areturn

  private static java.io.PrintStream initDiagnostics();
    Code:
       0: ldc           #207                // String org.apache.commons.logging.diagnostics.dest
       2: aconst_null
       3: invokestatic  #9                  // Method getSystemProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: astore_0
       7: aload_0
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: goto          19
      16: astore_1
      17: aconst_null
      18: areturn
      19: aload_0
      20: ldc           #208                // String STDOUT
      22: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
      31: areturn
      32: aload_0
      33: ldc           #210                // String STDERR
      35: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          45
      41: getstatic     #19                 // Field java/lang/System.err:Ljava/io/PrintStream;
      44: areturn
      45: new           #211                // class java/io/FileOutputStream
      48: dup
      49: aload_0
      50: iconst_1
      51: invokespecial #212                // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
      54: astore_1
      55: new           #213                // class java/io/PrintStream
      58: dup
      59: aload_1
      60: invokespecial #214                // Method java/io/PrintStream."<init>":(Ljava/io/OutputStream;)V
      63: areturn
      64: astore_1
      65: aconst_null
      66: areturn
    Exception table:
       from    to  target type
           0    12    16   Class java/lang/SecurityException
          45    63    64   Class java/io/IOException

  protected static boolean isDiagnosticsEnabled();
    Code:
       0: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
       3: ifnull        10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  private static final void logDiagnostic(java.lang.String);
    Code:
       0: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
       3: ifnull        28
       6: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
       9: getstatic     #217                // Field diagnosticPrefix:Ljava/lang/String;
      12: invokevirtual #218                // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      15: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
      18: aload_0
      19: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      22: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
      25: invokevirtual #219                // Method java/io/PrintStream.flush:()V
      28: return

  protected static final void logRawDiagnostic(java.lang.String);
    Code:
       0: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
       3: ifnull        19
       6: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
       9: aload_0
      10: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      13: getstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
      16: invokevirtual #219                // Method java/io/PrintStream.flush:()V
      19: return

  private static void logClassLoaderEnvironment(java.lang.Class);
    Code:
       0: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
       3: ifne          7
       6: return
       7: new           #28                 // class java/lang/StringBuffer
      10: dup
      11: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      14: ldc           #220                // String [ENV] Extension directories (java.ext.dir):
      16: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: ldc           #221                // String java.ext.dir
      21: invokestatic  #222                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      30: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      33: new           #28                 // class java/lang/StringBuffer
      36: dup
      37: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      40: ldc           #223                // String [ENV] Application classpath (java.class.path):
      42: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: ldc           #224                // String java.class.path
      47: invokestatic  #222                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      50: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      56: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      59: goto          68
      62: astore_1
      63: ldc           #225                // String [ENV] Security setting prevent interrogation of system classpaths.
      65: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      68: aload_0
      69: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
      72: astore_1
      73: aload_0
      74: invokestatic  #126                // Method getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      77: astore_2
      78: goto          105
      81: astore_3
      82: new           #28                 // class java/lang/StringBuffer
      85: dup
      86: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      89: ldc           #226                // String [ENV] Security forbids determining the classloader for
      91: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: aload_1
      95: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     101: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     104: return
     105: new           #28                 // class java/lang/StringBuffer
     108: dup
     109: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     112: ldc           #227                // String [ENV] Class
     114: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     117: aload_1
     118: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     121: ldc           #228                // String  was loaded via classloader
     123: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     126: aload_2
     127: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
     130: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     133: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     136: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     139: new           #28                 // class java/lang/StringBuffer
     142: dup
     143: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     146: ldc           #229                // String [ENV] Ancestry of classloader which loaded
     148: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     151: aload_1
     152: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     155: ldc           #230                // String  is
     157: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     160: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     163: aload_2
     164: invokestatic  #35                 // Method logHierarchy:(Ljava/lang/String;Ljava/lang/ClassLoader;)V
     167: return
    Exception table:
       from    to  target type
           7    59    62   Class java/lang/SecurityException
          73    78    81   Class java/lang/SecurityException

  private static void logHierarchy(java.lang.String, java.lang.ClassLoader);
    Code:
       0: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
       3: ifne          7
       6: return
       7: aload_1
       8: ifnull        54
      11: aload_1
      12: invokevirtual #231                // Method java/lang/Object.toString:()Ljava/lang/String;
      15: astore_3
      16: new           #28                 // class java/lang/StringBuffer
      19: dup
      20: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      23: aload_0
      24: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: aload_1
      28: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
      31: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: ldc           #232                // String  == \'
      36: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: aload_3
      40: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: ldc           #75                 // String \'
      45: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      51: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      54: invokestatic  #233                // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      57: astore_2
      58: goto          85
      61: astore_3
      62: new           #28                 // class java/lang/StringBuffer
      65: dup
      66: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      69: aload_0
      70: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      73: ldc           #234                // String Security forbids determining the system classloader.
      75: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      81: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
      84: return
      85: aload_1
      86: ifnull        185
      89: new           #28                 // class java/lang/StringBuffer
      92: dup
      93: new           #28                 // class java/lang/StringBuffer
      96: dup
      97: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     100: aload_0
     101: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: ldc           #235                // String ClassLoader tree:
     106: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     109: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     112: invokespecial #236                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     115: astore_3
     116: aload_3
     117: aload_1
     118: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
     121: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     124: pop
     125: aload_1
     126: aload_2
     127: if_acmpne     137
     130: aload_3
     131: ldc           #237                // String  (SYSTEM)
     133: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     136: pop
     137: aload_1
     138: invokevirtual #238                // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
     141: astore_1
     142: goto          157
     145: astore        4
     147: aload_3
     148: ldc           #239                // String  --> SECRET
     150: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     153: pop
     154: goto          178
     157: aload_3
     158: ldc           #240                // String  -->
     160: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     163: pop
     164: aload_1
     165: ifnonnull     116
     168: aload_3
     169: ldc           #241                // String BOOT
     171: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     174: pop
     175: goto          178
     178: aload_3
     179: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     182: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     185: return
    Exception table:
       from    to  target type
          54    58    61   Class java/lang/SecurityException
         137   142   145   Class java/lang/SecurityException

  public static java.lang.String objectId(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #242                // String null
       6: areturn
       7: new           #28                 // class java/lang/StringBuffer
      10: dup
      11: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      14: aload_0
      15: invokevirtual #243                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #136                // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: ldc           #244                // String @
      26: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_0
      30: invokestatic  #245                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      33: invokevirtual #246                // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      36: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      39: areturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #4                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #5                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      14: invokespecial #6                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static void access$000(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
       4: return

  static {};
    Code:
       0: aconst_null
       1: putstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
       4: aconst_null
       5: putstatic     #90                 // Field factories:Ljava/util/Hashtable;
       8: aconst_null
       9: putstatic     #91                 // Field nullClassLoaderFactory:Lorg/apache/commons/logging/LogFactory;
      12: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
      15: ifnonnull     30
      18: ldc           #44                 // String org.apache.commons.logging.LogFactory
      20: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      23: dup
      24: putstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
      27: goto          33
      30: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
      33: invokestatic  #126                // Method getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      36: putstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
      39: getstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
      42: astore_1
      43: getstatic     #42                 // Field thisClassLoader:Ljava/lang/ClassLoader;
      46: ifnonnull     55
      49: ldc           #247                // String BOOTLOADER
      51: astore_0
      52: goto          60
      55: aload_1
      56: invokestatic  #32                 // Method objectId:(Ljava/lang/Object;)Ljava/lang/String;
      59: astore_0
      60: goto          67
      63: astore_1
      64: ldc           #248                // String UNKNOWN
      66: astore_0
      67: new           #28                 // class java/lang/StringBuffer
      70: dup
      71: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      74: ldc           #249                // String [LogFactory from
      76: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      79: aload_0
      80: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      83: ldc           #250                // String ]
      85: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      88: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      91: putstatic     #217                // Field diagnosticPrefix:Ljava/lang/String;
      94: invokestatic  #251                // Method initDiagnostics:()Ljava/io/PrintStream;
      97: putstatic     #216                // Field diagnosticsStream:Ljava/io/PrintStream;
     100: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     103: ifnonnull     118
     106: ldc           #44                 // String org.apache.commons.logging.LogFactory
     108: invokestatic  #110                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     111: dup
     112: putstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     115: goto          121
     118: getstatic     #125                // Field class$org$apache$commons$logging$LogFactory:Ljava/lang/Class;
     121: invokestatic  #252                // Method logClassLoaderEnvironment:(Ljava/lang/Class;)V
     124: invokestatic  #253                // Method createFactoryStore:()Ljava/util/Hashtable;
     127: putstatic     #90                 // Field factories:Ljava/util/Hashtable;
     130: invokestatic  #17                 // Method isDiagnosticsEnabled:()Z
     133: ifeq          141
     136: ldc           #254                // String BOOTSTRAP COMPLETED
     138: invokestatic  #1                  // Method logDiagnostic:(Ljava/lang/String;)V
     141: return
    Exception table:
       from    to  target type
          39    60    63   Class java/lang/SecurityException
}
