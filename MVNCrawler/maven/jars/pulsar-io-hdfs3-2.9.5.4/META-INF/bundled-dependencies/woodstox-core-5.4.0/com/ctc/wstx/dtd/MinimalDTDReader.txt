Compiled from "MinimalDTDReader.java"
public class com.ctc.wstx.dtd.MinimalDTDReader extends com.ctc.wstx.sr.StreamScanner {
  final boolean mIsExternal;

  private com.ctc.wstx.dtd.MinimalDTDReader(com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #1                  // Method "<init>":(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;Z)V
       7: return

  protected com.ctc.wstx.dtd.MinimalDTDReader(com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #2                  // Method com/ctc/wstx/api/ReaderConfig.getDtdResolver:()Ljavax/xml/stream/XMLResolver;
       7: invokespecial #3                  // Method com/ctc/wstx/sr/StreamScanner."<init>":(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;Ljavax/xml/stream/XMLResolver;)V
      10: aload_0
      11: iload_3
      12: putfield      #4                  // Field mIsExternal:Z
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field mCfgReplaceEntities:Z
      20: return

  public static void skipInternalSubset(com.ctc.wstx.io.WstxInputData, com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig) throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #6                  // class com/ctc/wstx/dtd/MinimalDTDReader
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #7                  // Method "<init>":(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;)V
       9: astore_3
      10: aload_3
      11: aload_0
      12: invokevirtual #8                  // Method copyBufferStateFrom:(Lcom/ctc/wstx/io/WstxInputData;)V
      15: aload_3
      16: invokevirtual #9                  // Method skipInternalSubset:()V
      19: aload_0
      20: aload_3
      21: invokevirtual #10                 // Method com/ctc/wstx/io/WstxInputData.copyBufferStateFrom:(Lcom/ctc/wstx/io/WstxInputData;)V
      24: goto          37
      27: astore        4
      29: aload_0
      30: aload_3
      31: invokevirtual #10                 // Method com/ctc/wstx/io/WstxInputData.copyBufferStateFrom:(Lcom/ctc/wstx/io/WstxInputData;)V
      34: aload         4
      36: athrow
      37: return
    Exception table:
       from    to  target type
          15    19    27   any
          27    29    27   any

  public final javax.xml.stream.Location getLocation();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getStartLocation:()Lorg/codehaus/stax2/XMLStreamLocation2;
       4: areturn

  protected com.ctc.wstx.ent.EntityDecl findEntity(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method throwIllegalCall:()V
       4: aconst_null
       5: areturn

  protected void handleUndeclaredEntity(java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: return

  protected void handleIncompleteEntityProblem(com.ctc.wstx.io.WstxInputSource) throws javax.xml.stream.XMLStreamException;
    Code:
       0: return

  protected char handleExpandedSurrogate(char, char);
    Code:
       0: iload_1
       1: ireturn

  public com.ctc.wstx.ent.EntityDecl findEntity(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  protected void skipInternalSubset() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getNextAfterWS:()I
       4: istore_1
       5: iload_1
       6: ifge          15
       9: aload_0
      10: ldc           #15                 // String  in internal DTD subset
      12: invokevirtual #16                 // Method throwUnexpectedEOF:(Ljava/lang/String;)V
      15: iload_1
      16: bipush        37
      18: if_icmpne     28
      21: aload_0
      22: invokespecial #17                 // Method skipPE:()V
      25: goto          0
      28: iload_1
      29: bipush        60
      31: if_icmpne     126
      34: aload_0
      35: invokevirtual #18                 // Method getNextSkippingPEs:()C
      38: istore_2
      39: iload_2
      40: bipush        63
      42: if_icmpne     52
      45: aload_0
      46: invokevirtual #19                 // Method skipPI:()V
      49: goto          0
      52: iload_2
      53: bipush        33
      55: if_icmpne     113
      58: aload_0
      59: invokevirtual #18                 // Method getNextSkippingPEs:()C
      62: istore_2
      63: iload_2
      64: bipush        91
      66: if_icmpne     72
      69: goto          0
      72: iload_2
      73: bipush        45
      75: if_icmpne     85
      78: aload_0
      79: invokevirtual #20                 // Method skipComment:()V
      82: goto          0
      85: iload_2
      86: bipush        65
      88: if_icmplt     105
      91: iload_2
      92: bipush        90
      94: if_icmpgt     105
      97: aload_0
      98: iload_2
      99: invokespecial #21                 // Method skipDeclaration:(C)V
     102: goto          0
     105: aload_0
     106: iload_2
     107: invokespecial #21                 // Method skipDeclaration:(C)V
     110: goto          0
     113: aload_0
     114: dup
     115: getfield      #22                 // Field mInputPtr:I
     118: iconst_1
     119: isub
     120: putfield      #22                 // Field mInputPtr:I
     123: goto          0
     126: iload_1
     127: bipush        93
     129: if_icmpne     152
     132: aload_0
     133: getfield      #23                 // Field mInput:Lcom/ctc/wstx/io/WstxInputSource;
     136: aload_0
     137: getfield      #24                 // Field mRootInput:Lcom/ctc/wstx/io/WstxInputSource;
     140: if_acmpeq     162
     143: aload_0
     144: ldc           #25                 // String Encountered int. subset end marker \']]>\' in an expanded entity; has to be at main level.
     146: invokevirtual #26                 // Method throwParseError:(Ljava/lang/String;)V
     149: goto          162
     152: aload_0
     153: iload_1
     154: ldc           #27                 // String  in internal DTD subset; expected a \'<\' to start a directive, or \"]>\" to end internal subset.
     156: invokevirtual #28                 // Method throwUnexpectedChar:(ILjava/lang/String;)V
     159: goto          0
     162: return

  protected char dtdNextFromCurr() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field mInputPtr:I
       4: aload_0
       5: getfield      #29                 // Field mInputEnd:I
       8: if_icmpge     30
      11: aload_0
      12: getfield      #30                 // Field mInputBuffer:[C
      15: aload_0
      16: dup
      17: getfield      #22                 // Field mInputPtr:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #22                 // Field mInputPtr:I
      26: caload
      27: goto          38
      30: aload_0
      31: aload_0
      32: invokevirtual #31                 // Method getErrorMsg:()Ljava/lang/String;
      35: invokevirtual #32                 // Method getNextCharFromCurrent:(Ljava/lang/String;)C
      38: ireturn

  protected char dtdNextChar() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field mInputPtr:I
       4: aload_0
       5: getfield      #29                 // Field mInputEnd:I
       8: if_icmpge     30
      11: aload_0
      12: getfield      #30                 // Field mInputBuffer:[C
      15: aload_0
      16: dup
      17: getfield      #22                 // Field mInputPtr:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #22                 // Field mInputPtr:I
      26: caload
      27: goto          38
      30: aload_0
      31: aload_0
      32: invokevirtual #31                 // Method getErrorMsg:()Ljava/lang/String;
      35: invokevirtual #33                 // Method getNextChar:(Ljava/lang/String;)C
      38: ireturn

  protected char getNextSkippingPEs() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field mInputPtr:I
       4: aload_0
       5: getfield      #29                 // Field mInputEnd:I
       8: if_icmpge     30
      11: aload_0
      12: getfield      #30                 // Field mInputBuffer:[C
      15: aload_0
      16: dup
      17: getfield      #22                 // Field mInputPtr:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #22                 // Field mInputPtr:I
      26: caload
      27: goto          38
      30: aload_0
      31: aload_0
      32: invokevirtual #31                 // Method getErrorMsg:()Ljava/lang/String;
      35: invokevirtual #33                 // Method getNextChar:(Ljava/lang/String;)C
      38: istore_1
      39: iload_1
      40: bipush        37
      42: if_icmpeq     47
      45: iload_1
      46: ireturn
      47: aload_0
      48: invokespecial #17                 // Method skipPE:()V
      51: goto          0

  private void skipPE() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: invokespecial #34                 // Method skipDTDName:()V
       4: aload_0
       5: getfield      #22                 // Field mInputPtr:I
       8: aload_0
       9: getfield      #29                 // Field mInputEnd:I
      12: if_icmpge     34
      15: aload_0
      16: getfield      #30                 // Field mInputBuffer:[C
      19: aload_0
      20: dup
      21: getfield      #22                 // Field mInputPtr:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #22                 // Field mInputPtr:I
      30: caload
      31: goto          38
      34: aload_0
      35: invokevirtual #35                 // Method dtdNextFromCurr:()C
      38: istore_1
      39: iload_1
      40: bipush        59
      42: if_icmpeq     55
      45: aload_0
      46: dup
      47: getfield      #22                 // Field mInputPtr:I
      50: iconst_1
      51: isub
      52: putfield      #22                 // Field mInputPtr:I
      55: return

  protected void skipComment() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method skipCommentContent:()V
       4: aload_0
       5: getfield      #22                 // Field mInputPtr:I
       8: aload_0
       9: getfield      #29                 // Field mInputEnd:I
      12: if_icmpge     34
      15: aload_0
      16: getfield      #30                 // Field mInputBuffer:[C
      19: aload_0
      20: dup
      21: getfield      #22                 // Field mInputPtr:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #22                 // Field mInputPtr:I
      30: caload
      31: goto          38
      34: aload_0
      35: invokevirtual #35                 // Method dtdNextFromCurr:()C
      38: istore_1
      39: iload_1
      40: bipush        62
      42: if_icmpeq     51
      45: aload_0
      46: ldc           #37                 // String String \'--\' not allowed in comment (missing \'>\'?)
      48: invokevirtual #26                 // Method throwParseError:(Ljava/lang/String;)V
      51: return

  protected void skipCommentContent() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field mInputPtr:I
       4: aload_0
       5: getfield      #29                 // Field mInputEnd:I
       8: if_icmpge     30
      11: aload_0
      12: getfield      #30                 // Field mInputBuffer:[C
      15: aload_0
      16: dup
      17: getfield      #22                 // Field mInputPtr:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #22                 // Field mInputPtr:I
      26: caload
      27: goto          34
      30: aload_0
      31: invokevirtual #35                 // Method dtdNextFromCurr:()C
      34: istore_1
      35: iload_1
      36: bipush        45
      38: if_icmpne     83
      41: aload_0
      42: getfield      #22                 // Field mInputPtr:I
      45: aload_0
      46: getfield      #29                 // Field mInputEnd:I
      49: if_icmpge     71
      52: aload_0
      53: getfield      #30                 // Field mInputBuffer:[C
      56: aload_0
      57: dup
      58: getfield      #22                 // Field mInputPtr:I
      61: dup_x1
      62: iconst_1
      63: iadd
      64: putfield      #22                 // Field mInputPtr:I
      67: caload
      68: goto          75
      71: aload_0
      72: invokevirtual #35                 // Method dtdNextFromCurr:()C
      75: istore_1
      76: iload_1
      77: bipush        45
      79: if_icmpne     101
      82: return
      83: iload_1
      84: bipush        10
      86: if_icmpeq     95
      89: iload_1
      90: bipush        13
      92: if_icmpne     101
      95: aload_0
      96: iload_1
      97: invokevirtual #38                 // Method skipCRLF:(C)Z
     100: pop
     101: goto          0

  protected void skipPI() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field mInputPtr:I
       4: aload_0
       5: getfield      #29                 // Field mInputEnd:I
       8: if_icmpge     30
      11: aload_0
      12: getfield      #30                 // Field mInputBuffer:[C
      15: aload_0
      16: dup
      17: getfield      #22                 // Field mInputPtr:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #22                 // Field mInputPtr:I
      26: caload
      27: goto          34
      30: aload_0
      31: invokevirtual #35                 // Method dtdNextFromCurr:()C
      34: istore_1
      35: iload_1
      36: bipush        63
      38: if_icmpne     91
      41: aload_0
      42: getfield      #22                 // Field mInputPtr:I
      45: aload_0
      46: getfield      #29                 // Field mInputEnd:I
      49: if_icmpge     71
      52: aload_0
      53: getfield      #30                 // Field mInputBuffer:[C
      56: aload_0
      57: dup
      58: getfield      #22                 // Field mInputPtr:I
      61: dup_x1
      62: iconst_1
      63: iadd
      64: putfield      #22                 // Field mInputPtr:I
      67: caload
      68: goto          75
      71: aload_0
      72: invokevirtual #35                 // Method dtdNextFromCurr:()C
      75: istore_1
      76: iload_1
      77: bipush        63
      79: if_icmpeq     41
      82: iload_1
      83: bipush        62
      85: if_icmpne     91
      88: goto          112
      91: iload_1
      92: bipush        10
      94: if_icmpeq     103
      97: iload_1
      98: bipush        13
     100: if_icmpne     109
     103: aload_0
     104: iload_1
     105: invokevirtual #38                 // Method skipCRLF:(C)Z
     108: pop
     109: goto          0
     112: return

  private void skipDeclaration(char) throws javax.xml.stream.XMLStreamException;
    Code:
       0: iload_1
       1: bipush        62
       3: if_icmpeq     82
       6: aload_0
       7: getfield      #22                 // Field mInputPtr:I
      10: aload_0
      11: getfield      #29                 // Field mInputEnd:I
      14: if_icmpge     36
      17: aload_0
      18: getfield      #30                 // Field mInputBuffer:[C
      21: aload_0
      22: dup
      23: getfield      #22                 // Field mInputPtr:I
      26: dup_x1
      27: iconst_1
      28: iadd
      29: putfield      #22                 // Field mInputPtr:I
      32: caload
      33: goto          40
      36: aload_0
      37: invokevirtual #35                 // Method dtdNextFromCurr:()C
      40: istore_1
      41: iload_1
      42: bipush        10
      44: if_icmpeq     53
      47: iload_1
      48: bipush        13
      50: if_icmpne     62
      53: aload_0
      54: iload_1
      55: invokevirtual #38                 // Method skipCRLF:(C)Z
      58: pop
      59: goto          0
      62: iload_1
      63: bipush        39
      65: if_icmpeq     74
      68: iload_1
      69: bipush        34
      71: if_icmpne     0
      74: aload_0
      75: iload_1
      76: invokespecial #39                 // Method skipLiteral:(C)V
      79: goto          0
      82: return

  private void skipLiteral(char) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field mInputPtr:I
       4: aload_0
       5: getfield      #29                 // Field mInputEnd:I
       8: if_icmpge     30
      11: aload_0
      12: getfield      #30                 // Field mInputBuffer:[C
      15: aload_0
      16: dup
      17: getfield      #22                 // Field mInputPtr:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #22                 // Field mInputPtr:I
      26: caload
      27: goto          34
      30: aload_0
      31: invokevirtual #35                 // Method dtdNextFromCurr:()C
      34: istore_2
      35: iload_2
      36: bipush        10
      38: if_icmpeq     47
      41: iload_2
      42: bipush        13
      44: if_icmpne     56
      47: aload_0
      48: iload_2
      49: invokevirtual #38                 // Method skipCRLF:(C)Z
      52: pop
      53: goto          64
      56: iload_2
      57: iload_1
      58: if_icmpne     64
      61: goto          67
      64: goto          0
      67: return

  private void skipDTDName() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: invokevirtual #31                 // Method getErrorMsg:()Ljava/lang/String;
       6: invokevirtual #33                 // Method getNextChar:(Ljava/lang/String;)C
       9: invokevirtual #40                 // Method skipFullName:(C)I
      12: pop
      13: return

  protected java.lang.String getErrorMsg();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mIsExternal:Z
       4: ifeq          12
       7: ldc           #41                 // String  in external DTD subset
       9: goto          14
      12: ldc           #15                 // String  in internal DTD subset
      14: areturn

  protected void throwIllegalCall() throws java.lang.Error;
    Code:
       0: new           #42                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #43                 // String Internal error: this method should never be called
       6: invokespecial #44                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow
}
