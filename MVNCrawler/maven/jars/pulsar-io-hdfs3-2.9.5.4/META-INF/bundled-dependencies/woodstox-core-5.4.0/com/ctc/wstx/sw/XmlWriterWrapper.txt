Compiled from "XmlWriterWrapper.java"
public abstract class com.ctc.wstx.sw.XmlWriterWrapper extends java.io.Writer {
  protected final com.ctc.wstx.sw.XmlWriter mWriter;

  private char[] mBuffer;

  public static com.ctc.wstx.sw.XmlWriterWrapper wrapWriteRaw(com.ctc.wstx.sw.XmlWriter);
    Code:
       0: new           #1                  // class com/ctc/wstx/sw/XmlWriterWrapper$RawWrapper
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method com/ctc/wstx/sw/XmlWriterWrapper$RawWrapper."<init>":(Lcom/ctc/wstx/sw/XmlWriter;)V
       8: areturn

  public static com.ctc.wstx.sw.XmlWriterWrapper wrapWriteCharacters(com.ctc.wstx.sw.XmlWriter);
    Code:
       0: new           #3                  // class com/ctc/wstx/sw/XmlWriterWrapper$TextWrapper
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method com/ctc/wstx/sw/XmlWriterWrapper$TextWrapper."<init>":(Lcom/ctc/wstx/sw/XmlWriter;)V
       8: areturn

  protected com.ctc.wstx.sw.XmlWriterWrapper(com.ctc.wstx.sw.XmlWriter);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/io/Writer."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field mBuffer:[C
       9: aload_0
      10: aload_1
      11: putfield      #7                  // Field mWriter:Lcom/ctc/wstx/sw/XmlWriter;
      14: return

  public final void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field mWriter:Lcom/ctc/wstx/sw/XmlWriter;
       4: iconst_0
       5: invokevirtual #8                  // Method com/ctc/wstx/sw/XmlWriter.close:(Z)V
       8: return

  public final void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field mWriter:Lcom/ctc/wstx/sw/XmlWriter;
       4: invokevirtual #9                  // Method com/ctc/wstx/sw/XmlWriter.flush:()V
       7: return

  public final void write(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #10                 // Method write:([CII)V
       8: return

  public abstract void write(char[], int, int) throws java.io.IOException;

  public final void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field mBuffer:[C
       4: ifnonnull     14
       7: aload_0
       8: iconst_1
       9: newarray       char
      11: putfield      #6                  // Field mBuffer:[C
      14: aload_0
      15: getfield      #6                  // Field mBuffer:[C
      18: iconst_0
      19: iload_1
      20: i2c
      21: castore
      22: aload_0
      23: aload_0
      24: getfield      #6                  // Field mBuffer:[C
      27: iconst_0
      28: iconst_1
      29: invokevirtual #10                 // Method write:([CII)V
      32: return

  public abstract void write(java.lang.String) throws java.io.IOException;

  public abstract void write(java.lang.String, int, int) throws java.io.IOException;
}
