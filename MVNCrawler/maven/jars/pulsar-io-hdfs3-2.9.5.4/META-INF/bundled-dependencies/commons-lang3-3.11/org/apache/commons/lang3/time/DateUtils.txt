Compiled from "DateUtils.java"
public class org.apache.commons.lang3.time.DateUtils {
  public static final long MILLIS_PER_SECOND;

  public static final long MILLIS_PER_MINUTE;

  public static final long MILLIS_PER_HOUR;

  public static final long MILLIS_PER_DAY;

  public static final int SEMI_MONTH;

  private static final int[][] fields;

  public static final int RANGE_WEEK_SUNDAY;

  public static final int RANGE_WEEK_MONDAY;

  public static final int RANGE_WEEK_RELATIVE;

  public static final int RANGE_WEEK_CENTER;

  public static final int RANGE_MONTH_SUNDAY;

  public static final int RANGE_MONTH_MONDAY;

  public org.apache.commons.lang3.time.DateUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isSameDay(java.util.Date, java.util.Date);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     12
       8: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
      11: athrow
      12: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      21: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      30: aload_2
      31: aload_3
      32: invokestatic  #6                  // Method isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z
      35: ireturn

  public static boolean isSameDay(java.util.Calendar, java.util.Calendar);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     12
       8: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
      11: athrow
      12: aload_0
      13: iconst_0
      14: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      17: aload_1
      18: iconst_0
      19: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      22: if_icmpne     57
      25: aload_0
      26: iconst_1
      27: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      30: aload_1
      31: iconst_1
      32: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      35: if_icmpne     57
      38: aload_0
      39: bipush        6
      41: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      44: aload_1
      45: bipush        6
      47: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      50: if_icmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public static boolean isSameInstant(java.util.Date, java.util.Date);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     12
       8: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
      11: athrow
      12: aload_0
      13: invokevirtual #9                  // Method java/util/Date.getTime:()J
      16: aload_1
      17: invokevirtual #9                  // Method java/util/Date.getTime:()J
      20: lcmp
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public static boolean isSameInstant(java.util.Calendar, java.util.Calendar);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     12
       8: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
      11: athrow
      12: aload_0
      13: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      16: invokevirtual #9                  // Method java/util/Date.getTime:()J
      19: aload_1
      20: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      23: invokevirtual #9                  // Method java/util/Date.getTime:()J
      26: lcmp
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public static boolean isSameLocalTime(java.util.Calendar, java.util.Calendar);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     12
       8: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
      11: athrow
      12: aload_0
      13: bipush        14
      15: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      18: aload_1
      19: bipush        14
      21: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      24: if_icmpne     128
      27: aload_0
      28: bipush        13
      30: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      33: aload_1
      34: bipush        13
      36: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      39: if_icmpne     128
      42: aload_0
      43: bipush        12
      45: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      48: aload_1
      49: bipush        12
      51: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      54: if_icmpne     128
      57: aload_0
      58: bipush        11
      60: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      63: aload_1
      64: bipush        11
      66: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      69: if_icmpne     128
      72: aload_0
      73: bipush        6
      75: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      78: aload_1
      79: bipush        6
      81: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      84: if_icmpne     128
      87: aload_0
      88: iconst_1
      89: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      92: aload_1
      93: iconst_1
      94: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      97: if_icmpne     128
     100: aload_0
     101: iconst_0
     102: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     105: aload_1
     106: iconst_0
     107: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     110: if_icmpne     128
     113: aload_0
     114: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     117: aload_1
     118: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     121: if_acmpne     128
     124: iconst_1
     125: goto          129
     128: iconst_0
     129: ireturn

  public static java.util.Date parseDate(java.lang.String, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #12                 // Method parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;
       6: areturn

  public static java.util.Date parseDate(java.lang.String, java.util.Locale, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #13                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;
       7: areturn

  public static java.util.Date parseDateStrictly(java.lang.String, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #14                 // Method parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;
       6: areturn

  public static java.util.Date parseDateStrictly(java.lang.String, java.util.Locale, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #13                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;
       7: areturn

  private static java.util.Date parseDateWithLeniency(java.lang.String, java.util.Locale, java.lang.String[], boolean) throws java.text.ParseException;
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_2
       5: ifnonnull     18
       8: new           #15                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #16                 // String Date and Patterns must not be null
      14: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: invokestatic  #18                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      21: astore        4
      23: aload_1
      24: ifnonnull     33
      27: invokestatic  #19                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      30: goto          34
      33: aload_1
      34: astore        5
      36: new           #20                 // class java/text/ParsePosition
      39: dup
      40: iconst_0
      41: invokespecial #21                 // Method java/text/ParsePosition."<init>":(I)V
      44: astore        6
      46: aload         4
      48: aload         5
      50: invokestatic  #22                 // Method java/util/Calendar.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;
      53: astore        7
      55: aload         7
      57: iload_3
      58: invokevirtual #23                 // Method java/util/Calendar.setLenient:(Z)V
      61: aload_2
      62: astore        8
      64: aload         8
      66: arraylength
      67: istore        9
      69: iconst_0
      70: istore        10
      72: iload         10
      74: iload         9
      76: if_icmpge     154
      79: aload         8
      81: iload         10
      83: aaload
      84: astore        11
      86: new           #24                 // class org/apache/commons/lang3/time/FastDateParser
      89: dup
      90: aload         11
      92: aload         4
      94: aload         5
      96: invokespecial #25                 // Method org/apache/commons/lang3/time/FastDateParser."<init>":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V
      99: astore        12
     101: aload         7
     103: invokevirtual #26                 // Method java/util/Calendar.clear:()V
     106: aload         12
     108: aload_0
     109: aload         6
     111: aload         7
     113: invokevirtual #27                 // Method org/apache/commons/lang3/time/FastDateParser.parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z
     116: ifeq          137
     119: aload         6
     121: invokevirtual #28                 // Method java/text/ParsePosition.getIndex:()I
     124: aload_0
     125: invokevirtual #29                 // Method java/lang/String.length:()I
     128: if_icmpne     137
     131: aload         7
     133: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
     136: areturn
     137: goto          142
     140: astore        13
     142: aload         6
     144: iconst_0
     145: invokevirtual #30                 // Method java/text/ParsePosition.setIndex:(I)V
     148: iinc          10, 1
     151: goto          72
     154: new           #31                 // class java/text/ParseException
     157: dup
     158: new           #32                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     165: ldc           #34                 // String Unable to parse the date:
     167: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: iconst_m1
     178: invokespecial #37                 // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
     181: athrow
    Exception table:
       from    to  target type
         106   136   140   Class java/lang/IllegalArgumentException

  public static java.util.Date addYears(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addMonths(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addWeeks(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addDays(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_5
       2: iload_1
       3: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addHours(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        11
       3: iload_1
       4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date addMinutes(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        12
       3: iload_1
       4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date addSeconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        13
       3: iload_1
       4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date addMilliseconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        14
       3: iload_1
       4: invokestatic  #38                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  private static java.util.Date add(java.util.Date, int, int);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V
       4: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      13: aload_3
      14: iload_1
      15: iload_2
      16: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
      19: aload_3
      20: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      23: areturn

  public static java.util.Date setYears(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date setMonths(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date setDays(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_5
       2: iload_1
       3: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date setHours(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        11
       3: iload_1
       4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date setMinutes(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        12
       3: iload_1
       4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date setSeconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        13
       3: iload_1
       4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date setMilliseconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        14
       3: iload_1
       4: invokestatic  #41                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  private static java.util.Date set(java.util.Date, int, int);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V
       4: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       7: astore_3
       8: aload_3
       9: iconst_0
      10: invokevirtual #23                 // Method java/util/Calendar.setLenient:(Z)V
      13: aload_3
      14: aload_0
      15: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      18: aload_3
      19: iload_1
      20: iload_2
      21: invokevirtual #42                 // Method java/util/Calendar.set:(II)V
      24: aload_3
      25: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      28: areturn

  public static java.util.Calendar toCalendar(java.util.Date);
    Code:
       0: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
       9: aload_1
      10: areturn

  public static java.util.Calendar toCalendar(java.util.Date, java.util.TimeZone);
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method java/util/Calendar.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      10: aload_2
      11: areturn

  public static java.util.Date round(java.util.Date, int);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V
       4: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      13: aload_2
      14: iload_1
      15: getstatic     #44                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      18: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V
      21: aload_2
      22: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      25: areturn

  public static java.util.Calendar round(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aload_0
       9: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      12: checkcast     #7                  // class java/util/Calendar
      15: astore_2
      16: aload_2
      17: iload_1
      18: getstatic     #44                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      21: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V
      24: aload_2
      25: areturn

  private static java.lang.IllegalArgumentException nullDateIllegalArgumentException();
    Code:
       0: new           #15                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #47                 // String The date must not be null
       6: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  public static java.util.Date round(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aload_0
       9: instanceof    #48                 // class java/util/Date
      12: ifeq          24
      15: aload_0
      16: checkcast     #48                 // class java/util/Date
      19: iload_1
      20: invokestatic  #49                 // Method round:(Ljava/util/Date;I)Ljava/util/Date;
      23: areturn
      24: aload_0
      25: instanceof    #7                  // class java/util/Calendar
      28: ifeq          43
      31: aload_0
      32: checkcast     #7                  // class java/util/Calendar
      35: iload_1
      36: invokestatic  #50                 // Method round:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      39: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      42: areturn
      43: new           #51                 // class java/lang/ClassCastException
      46: dup
      47: new           #32                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #52                 // String Could not round
      56: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #54                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      69: athrow

  public static java.util.Date truncate(java.util.Date, int);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V
       4: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      13: aload_2
      14: iload_1
      15: getstatic     #55                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      18: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V
      21: aload_2
      22: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      25: areturn

  public static java.util.Calendar truncate(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aload_0
       9: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      12: checkcast     #7                  // class java/util/Calendar
      15: astore_2
      16: aload_2
      17: iload_1
      18: getstatic     #55                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      21: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V
      24: aload_2
      25: areturn

  public static java.util.Date truncate(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aload_0
       9: instanceof    #48                 // class java/util/Date
      12: ifeq          24
      15: aload_0
      16: checkcast     #48                 // class java/util/Date
      19: iload_1
      20: invokestatic  #56                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;
      23: areturn
      24: aload_0
      25: instanceof    #7                  // class java/util/Calendar
      28: ifeq          43
      31: aload_0
      32: checkcast     #7                  // class java/util/Calendar
      35: iload_1
      36: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      39: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      42: areturn
      43: new           #51                 // class java/lang/ClassCastException
      46: dup
      47: new           #32                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #58                 // String Could not truncate
      56: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #54                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      69: athrow

  public static java.util.Date ceiling(java.util.Date, int);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V
       4: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      13: aload_2
      14: iload_1
      15: getstatic     #59                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      18: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V
      21: aload_2
      22: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      25: areturn

  public static java.util.Calendar ceiling(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aload_0
       9: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      12: checkcast     #7                  // class java/util/Calendar
      15: astore_2
      16: aload_2
      17: iload_1
      18: getstatic     #59                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      21: invokestatic  #45                 // Method modify:(Ljava/util/Calendar;ILorg/apache/commons/lang3/time/DateUtils$ModifyType;)V
      24: aload_2
      25: areturn

  public static java.util.Date ceiling(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aload_0
       9: instanceof    #48                 // class java/util/Date
      12: ifeq          24
      15: aload_0
      16: checkcast     #48                 // class java/util/Date
      19: iload_1
      20: invokestatic  #60                 // Method ceiling:(Ljava/util/Date;I)Ljava/util/Date;
      23: areturn
      24: aload_0
      25: instanceof    #7                  // class java/util/Calendar
      28: ifeq          43
      31: aload_0
      32: checkcast     #7                  // class java/util/Calendar
      35: iload_1
      36: invokestatic  #61                 // Method ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      39: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      42: areturn
      43: new           #51                 // class java/lang/ClassCastException
      46: dup
      47: new           #32                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #62                 // String Could not find ceiling of for type:
      56: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #54                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      72: athrow

  private static void modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils$ModifyType);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
       5: ldc           #63                 // int 280000000
       7: if_icmple     20
      10: new           #64                 // class java/lang/ArithmeticException
      13: dup
      14: ldc           #65                 // String Calendar value too large for accurate calculations
      16: invokespecial #66                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: iload_1
      21: bipush        14
      23: if_icmpne     27
      26: return
      27: aload_0
      28: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      31: astore_3
      32: aload_3
      33: invokevirtual #9                  // Method java/util/Date.getTime:()J
      36: lstore        4
      38: iconst_0
      39: istore        6
      41: aload_0
      42: bipush        14
      44: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      47: istore        7
      49: getstatic     #55                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      52: aload_2
      53: if_acmpeq     64
      56: iload         7
      58: sipush        500
      61: if_icmpge     72
      64: lload         4
      66: iload         7
      68: i2l
      69: lsub
      70: lstore        4
      72: iload_1
      73: bipush        13
      75: if_icmpne     81
      78: iconst_1
      79: istore        6
      81: aload_0
      82: bipush        13
      84: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      87: istore        8
      89: iload         6
      91: ifne          120
      94: getstatic     #55                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
      97: aload_2
      98: if_acmpeq     108
     101: iload         8
     103: bipush        30
     105: if_icmpge     120
     108: lload         4
     110: iload         8
     112: i2l
     113: ldc2_w        #67                 // long 1000l
     116: lmul
     117: lsub
     118: lstore        4
     120: iload_1
     121: bipush        12
     123: if_icmpne     129
     126: iconst_1
     127: istore        6
     129: aload_0
     130: bipush        12
     132: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     135: istore        9
     137: iload         6
     139: ifne          168
     142: getstatic     #55                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.TRUNCATE:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
     145: aload_2
     146: if_acmpeq     156
     149: iload         9
     151: bipush        30
     153: if_icmpge     168
     156: lload         4
     158: iload         9
     160: i2l
     161: ldc2_w        #69                 // long 60000l
     164: lmul
     165: lsub
     166: lstore        4
     168: aload_3
     169: invokevirtual #9                  // Method java/util/Date.getTime:()J
     172: lload         4
     174: lcmp
     175: ifeq          189
     178: aload_3
     179: lload         4
     181: invokevirtual #71                 // Method java/util/Date.setTime:(J)V
     184: aload_0
     185: aload_3
     186: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
     189: iconst_0
     190: istore        10
     192: getstatic     #72                 // Field fields:[[I
     195: astore        11
     197: aload         11
     199: arraylength
     200: istore        12
     202: iconst_0
     203: istore        13
     205: iload         13
     207: iload         12
     209: if_icmpge     585
     212: aload         11
     214: iload         13
     216: aaload
     217: astore        14
     219: aload         14
     221: astore        15
     223: aload         15
     225: arraylength
     226: istore        16
     228: iconst_0
     229: istore        17
     231: iload         17
     233: iload         16
     235: if_icmpge     371
     238: aload         15
     240: iload         17
     242: iaload
     243: istore        18
     245: iload         18
     247: iload_1
     248: if_icmpne     365
     251: aload_2
     252: getstatic     #59                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.CEILING:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
     255: if_acmpeq     270
     258: aload_2
     259: getstatic     #44                 // Field org/apache/commons/lang3/time/DateUtils$ModifyType.ROUND:Lorg/apache/commons/lang3/time/DateUtils$ModifyType;
     262: if_acmpne     364
     265: iload         10
     267: ifeq          364
     270: iload_1
     271: sipush        1001
     274: if_icmpne     312
     277: aload_0
     278: iconst_5
     279: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     282: iconst_1
     283: if_icmpne     296
     286: aload_0
     287: iconst_5
     288: bipush        15
     290: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     293: goto          364
     296: aload_0
     297: iconst_5
     298: bipush        -15
     300: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     303: aload_0
     304: iconst_2
     305: iconst_1
     306: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     309: goto          364
     312: iload_1
     313: bipush        9
     315: if_icmpne     355
     318: aload_0
     319: bipush        11
     321: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     324: ifne          338
     327: aload_0
     328: bipush        11
     330: bipush        12
     332: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     335: goto          364
     338: aload_0
     339: bipush        11
     341: bipush        -12
     343: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     346: aload_0
     347: iconst_5
     348: iconst_1
     349: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     352: goto          364
     355: aload_0
     356: aload         14
     358: iconst_0
     359: iaload
     360: iconst_1
     361: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     364: return
     365: iinc          17, 1
     368: goto          231
     371: iconst_0
     372: istore        15
     374: iconst_0
     375: istore        16
     377: iload_1
     378: lookupswitch  { // 2
                     9: 451
                  1001: 404
               default: 498
          }
     404: aload         14
     406: iconst_0
     407: iaload
     408: iconst_5
     409: if_icmpne     498
     412: aload_0
     413: iconst_5
     414: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     417: iconst_1
     418: isub
     419: istore        15
     421: iload         15
     423: bipush        15
     425: if_icmplt     431
     428: iinc          15, -15
     431: iload         15
     433: bipush        7
     435: if_icmple     442
     438: iconst_1
     439: goto          443
     442: iconst_0
     443: istore        10
     445: iconst_1
     446: istore        16
     448: goto          498
     451: aload         14
     453: iconst_0
     454: iaload
     455: bipush        11
     457: if_icmpne     498
     460: aload_0
     461: bipush        11
     463: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     466: istore        15
     468: iload         15
     470: bipush        12
     472: if_icmplt     478
     475: iinc          15, -12
     478: iload         15
     480: bipush        6
     482: if_icmplt     489
     485: iconst_1
     486: goto          490
     489: iconst_0
     490: istore        10
     492: iconst_1
     493: istore        16
     495: goto          498
     498: iload         16
     500: ifne          555
     503: aload_0
     504: aload         14
     506: iconst_0
     507: iaload
     508: invokevirtual #73                 // Method java/util/Calendar.getActualMinimum:(I)I
     511: istore        17
     513: aload_0
     514: aload         14
     516: iconst_0
     517: iaload
     518: invokevirtual #74                 // Method java/util/Calendar.getActualMaximum:(I)I
     521: istore        18
     523: aload_0
     524: aload         14
     526: iconst_0
     527: iaload
     528: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     531: iload         17
     533: isub
     534: istore        15
     536: iload         15
     538: iload         18
     540: iload         17
     542: isub
     543: iconst_2
     544: idiv
     545: if_icmple     552
     548: iconst_1
     549: goto          553
     552: iconst_0
     553: istore        10
     555: iload         15
     557: ifeq          579
     560: aload_0
     561: aload         14
     563: iconst_0
     564: iaload
     565: aload_0
     566: aload         14
     568: iconst_0
     569: iaload
     570: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     573: iload         15
     575: isub
     576: invokevirtual #42                 // Method java/util/Calendar.set:(II)V
     579: iinc          13, 1
     582: goto          205
     585: new           #15                 // class java/lang/IllegalArgumentException
     588: dup
     589: new           #32                 // class java/lang/StringBuilder
     592: dup
     593: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     596: ldc           #75                 // String The field
     598: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     601: iload_1
     602: invokevirtual #76                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     605: ldc           #77                 // String  is not supported
     607: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     610: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     613: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     616: athrow

  public static java.util.Iterator<java.util.Calendar> iterator(java.util.Date, int);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V
       4: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      13: aload_2
      14: iload_1
      15: invokestatic  #78                 // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;
      18: areturn

  public static java.util.Iterator<java.util.Calendar> iterator(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aconst_null
       9: astore_2
      10: aconst_null
      11: astore_3
      12: iconst_1
      13: istore        4
      15: bipush        7
      17: istore        5
      19: iload_1
      20: tableswitch   { // 1 to 6
                     1: 101
                     2: 101
                     3: 101
                     4: 101
                     5: 60
                     6: 60
               default: 199
          }
      60: aload_0
      61: iconst_2
      62: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      65: astore_2
      66: aload_2
      67: invokevirtual #46                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      70: checkcast     #7                  // class java/util/Calendar
      73: astore_3
      74: aload_3
      75: iconst_2
      76: iconst_1
      77: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
      80: aload_3
      81: iconst_5
      82: iconst_m1
      83: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
      86: iload_1
      87: bipush        6
      89: if_icmpne     231
      92: iconst_2
      93: istore        4
      95: iconst_1
      96: istore        5
      98: goto          231
     101: aload_0
     102: iconst_5
     103: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
     106: astore_2
     107: aload_0
     108: iconst_5
     109: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
     112: astore_3
     113: iload_1
     114: tableswitch   { // 1 to 4
                     1: 144
                     2: 147
                     3: 156
                     4: 173
               default: 196
          }
     144: goto          231
     147: iconst_2
     148: istore        4
     150: iconst_1
     151: istore        5
     153: goto          231
     156: aload_0
     157: bipush        7
     159: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     162: istore        4
     164: iload         4
     166: iconst_1
     167: isub
     168: istore        5
     170: goto          231
     173: aload_0
     174: bipush        7
     176: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     179: iconst_3
     180: isub
     181: istore        4
     183: aload_0
     184: bipush        7
     186: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     189: iconst_3
     190: iadd
     191: istore        5
     193: goto          231
     196: goto          231
     199: new           #15                 // class java/lang/IllegalArgumentException
     202: dup
     203: new           #32                 // class java/lang/StringBuilder
     206: dup
     207: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     210: ldc           #79                 // String The range style
     212: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: iload_1
     216: invokevirtual #76                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     219: ldc           #80                 // String  is not valid.
     221: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     227: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     230: athrow
     231: iload         4
     233: iconst_1
     234: if_icmpge     240
     237: iinc          4, 7
     240: iload         4
     242: bipush        7
     244: if_icmple     250
     247: iinc          4, -7
     250: iload         5
     252: iconst_1
     253: if_icmpge     259
     256: iinc          5, 7
     259: iload         5
     261: bipush        7
     263: if_icmple     269
     266: iinc          5, -7
     269: aload_2
     270: bipush        7
     272: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     275: iload         4
     277: if_icmpeq     289
     280: aload_2
     281: iconst_5
     282: iconst_m1
     283: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     286: goto          269
     289: aload_3
     290: bipush        7
     292: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     295: iload         5
     297: if_icmpeq     309
     300: aload_3
     301: iconst_5
     302: iconst_1
     303: invokevirtual #40                 // Method java/util/Calendar.add:(II)V
     306: goto          289
     309: new           #81                 // class org/apache/commons/lang3/time/DateUtils$DateIterator
     312: dup
     313: aload_2
     314: aload_3
     315: invokespecial #82                 // Method org/apache/commons/lang3/time/DateUtils$DateIterator."<init>":(Ljava/util/Calendar;Ljava/util/Calendar;)V
     318: areturn

  public static java.util.Iterator<?> iterator(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: aload_0
       9: instanceof    #48                 // class java/util/Date
      12: ifeq          24
      15: aload_0
      16: checkcast     #48                 // class java/util/Date
      19: iload_1
      20: invokestatic  #83                 // Method iterator:(Ljava/util/Date;I)Ljava/util/Iterator;
      23: areturn
      24: aload_0
      25: instanceof    #7                  // class java/util/Calendar
      28: ifeq          40
      31: aload_0
      32: checkcast     #7                  // class java/util/Calendar
      35: iload_1
      36: invokestatic  #78                 // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;
      39: areturn
      40: new           #51                 // class java/lang/ClassCastException
      43: dup
      44: new           #32                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #84                 // String Could not iterate based on
      53: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #54                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      66: athrow

  public static long getFragmentInMilliseconds(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #85                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #86                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInSeconds(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #87                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #86                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInMinutes(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #88                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #86                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInHours(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #89                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #86                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInDays(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #90                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #86                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInMilliseconds(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #85                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #91                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInSeconds(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #87                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #91                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInMinutes(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #88                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #91                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInHours(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #89                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #91                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInDays(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #90                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #91                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  private static long getFragment(java.util.Date, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method validateDateNotNull:(Ljava/util/Date;)V
       4: invokestatic  #4                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokevirtual #5                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      13: aload_3
      14: iload_1
      15: aload_2
      16: invokestatic  #91                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
      19: lreturn

  private static long getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #3                  // Method nullDateIllegalArgumentException:()Ljava/lang/IllegalArgumentException;
       7: athrow
       8: lconst_0
       9: lstore_3
      10: aload_2
      11: getstatic     #90                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      14: if_acmpne     21
      17: iconst_0
      18: goto          22
      21: iconst_1
      22: istore        5
      24: iload_1
      25: lookupswitch  { // 2
                     1: 52
                     2: 75
               default: 97
          }
      52: lload_3
      53: aload_2
      54: aload_0
      55: bipush        6
      57: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      60: iload         5
      62: isub
      63: i2l
      64: getstatic     #90                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      67: invokevirtual #92                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      70: ladd
      71: lstore_3
      72: goto          97
      75: lload_3
      76: aload_2
      77: aload_0
      78: iconst_5
      79: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      82: iload         5
      84: isub
      85: i2l
      86: getstatic     #90                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      89: invokevirtual #92                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      92: ladd
      93: lstore_3
      94: goto          97
      97: iload_1
      98: tableswitch   { // 1 to 14
                     1: 168
                     2: 168
                     3: 242
                     4: 242
                     5: 168
                     6: 168
                     7: 242
                     8: 242
                     9: 242
                    10: 242
                    11: 185
                    12: 202
                    13: 219
                    14: 239
               default: 242
          }
     168: lload_3
     169: aload_2
     170: aload_0
     171: bipush        11
     173: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     176: i2l
     177: getstatic     #89                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;
     180: invokevirtual #92                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     183: ladd
     184: lstore_3
     185: lload_3
     186: aload_2
     187: aload_0
     188: bipush        12
     190: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     193: i2l
     194: getstatic     #88                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
     197: invokevirtual #92                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     200: ladd
     201: lstore_3
     202: lload_3
     203: aload_2
     204: aload_0
     205: bipush        13
     207: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     210: i2l
     211: getstatic     #87                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     214: invokevirtual #92                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     217: ladd
     218: lstore_3
     219: lload_3
     220: aload_2
     221: aload_0
     222: bipush        14
     224: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     227: i2l
     228: getstatic     #85                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     231: invokevirtual #92                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     234: ladd
     235: lstore_3
     236: goto          274
     239: goto          274
     242: new           #15                 // class java/lang/IllegalArgumentException
     245: dup
     246: new           #32                 // class java/lang/StringBuilder
     249: dup
     250: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     253: ldc           #93                 // String The fragment
     255: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: iload_1
     259: invokevirtual #76                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     262: ldc           #77                 // String  is not supported
     264: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     267: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     270: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     273: athrow
     274: lload_3
     275: lreturn

  public static boolean truncatedEquals(java.util.Calendar, java.util.Calendar, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #94                 // Method truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean truncatedEquals(java.util.Date, java.util.Date, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #95                 // Method truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static int truncatedCompareTo(java.util.Calendar, java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
       5: astore_3
       6: aload_1
       7: iload_2
       8: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      11: astore        4
      13: aload_3
      14: aload         4
      16: invokevirtual #96                 // Method java/util/Calendar.compareTo:(Ljava/util/Calendar;)I
      19: ireturn

  public static int truncatedCompareTo(java.util.Date, java.util.Date, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokestatic  #56                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;
       5: astore_3
       6: aload_1
       7: iload_2
       8: invokestatic  #56                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;
      11: astore        4
      13: aload_3
      14: aload         4
      16: invokevirtual #97                 // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      19: ireturn

  private static void validateDateNotNull(java.util.Date);
    Code:
       0: aload_0
       1: ldc           #47                 // String The date must not be null
       3: iconst_0
       4: anewarray     #98                 // class java/lang/Object
       7: invokestatic  #99                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  static {};
    Code:
       0: bipush        8
       2: anewarray     #100                // class "[I"
       5: dup
       6: iconst_0
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: bipush        14
      14: iastore
      15: aastore
      16: dup
      17: iconst_1
      18: iconst_1
      19: newarray       int
      21: dup
      22: iconst_0
      23: bipush        13
      25: iastore
      26: aastore
      27: dup
      28: iconst_2
      29: iconst_1
      30: newarray       int
      32: dup
      33: iconst_0
      34: bipush        12
      36: iastore
      37: aastore
      38: dup
      39: iconst_3
      40: iconst_2
      41: newarray       int
      43: dup
      44: iconst_0
      45: bipush        11
      47: iastore
      48: dup
      49: iconst_1
      50: bipush        10
      52: iastore
      53: aastore
      54: dup
      55: iconst_4
      56: iconst_3
      57: newarray       int
      59: dup
      60: iconst_0
      61: iconst_5
      62: iastore
      63: dup
      64: iconst_1
      65: iconst_5
      66: iastore
      67: dup
      68: iconst_2
      69: bipush        9
      71: iastore
      72: aastore
      73: dup
      74: iconst_5
      75: iconst_2
      76: newarray       int
      78: dup
      79: iconst_0
      80: iconst_2
      81: iastore
      82: dup
      83: iconst_1
      84: sipush        1001
      87: iastore
      88: aastore
      89: dup
      90: bipush        6
      92: iconst_1
      93: newarray       int
      95: dup
      96: iconst_0
      97: iconst_1
      98: iastore
      99: aastore
     100: dup
     101: bipush        7
     103: iconst_1
     104: newarray       int
     106: dup
     107: iconst_0
     108: iconst_0
     109: iastore
     110: aastore
     111: putstatic     #72                 // Field fields:[[I
     114: return
}
