Compiled from "DiffBuilder.java"
public class org.apache.commons.lang3.builder.DiffBuilder<T> implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.builder.DiffResult<T>> {
  private final java.util.List<org.apache.commons.lang3.builder.Diff<?>> diffs;

  private final boolean objectsTriviallyEqual;

  private final T left;

  private final T right;

  private final org.apache.commons.lang3.builder.ToStringStyle style;

  public org.apache.commons.lang3.builder.DiffBuilder(T, T, org.apache.commons.lang3.builder.ToStringStyle, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String lhs cannot be null
       7: iconst_0
       8: anewarray     #3                  // class java/lang/Object
      11: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: ldc           #5                  // String rhs cannot be null
      18: iconst_0
      19: anewarray     #3                  // class java/lang/Object
      22: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: new           #6                  // class java/util/ArrayList
      30: dup
      31: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #8                  // Field diffs:Ljava/util/List;
      37: aload_0
      38: aload_1
      39: putfield      #9                  // Field left:Ljava/lang/Object;
      42: aload_0
      43: aload_2
      44: putfield      #10                 // Field right:Ljava/lang/Object;
      47: aload_0
      48: aload_3
      49: putfield      #11                 // Field style:Lorg/apache/commons/lang3/builder/ToStringStyle;
      52: aload_0
      53: iload         4
      55: ifeq          75
      58: aload_1
      59: aload_2
      60: if_acmpeq     71
      63: aload_1
      64: aload_2
      65: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: putfield      #13                 // Field objectsTriviallyEqual:Z
      79: return

  public org.apache.commons.lang3.builder.DiffBuilder(T, T, org.apache.commons.lang3.builder.ToStringStyle);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: invokespecial #14                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)V
       8: return

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: iload_2
      15: iload_3
      16: if_icmpeq     40
      19: aload_0
      20: getfield      #8                  // Field diffs:Ljava/util/List;
      23: new           #16                 // class org/apache/commons/lang3/builder/DiffBuilder$1
      26: dup
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokespecial #17                 // Method org/apache/commons/lang3/builder/DiffBuilder$1."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;ZZ)V
      34: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, boolean[], boolean[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #19                 // Method java/util/Arrays.equals:([Z[Z)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #20                 // class org/apache/commons/lang3/builder/DiffBuilder$2
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #21                 // Method org/apache/commons/lang3/builder/DiffBuilder$2."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[Z[Z)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, byte, byte);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: iload_2
      15: iload_3
      16: if_icmpeq     40
      19: aload_0
      20: getfield      #8                  // Field diffs:Ljava/util/List;
      23: new           #22                 // class org/apache/commons/lang3/builder/DiffBuilder$3
      26: dup
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokespecial #23                 // Method org/apache/commons/lang3/builder/DiffBuilder$3."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;BB)V
      34: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #24                 // Method java/util/Arrays.equals:([B[B)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #25                 // class org/apache/commons/lang3/builder/DiffBuilder$4
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #26                 // Method org/apache/commons/lang3/builder/DiffBuilder$4."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[B[B)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, char, char);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: iload_2
      15: iload_3
      16: if_icmpeq     40
      19: aload_0
      20: getfield      #8                  // Field diffs:Ljava/util/List;
      23: new           #27                 // class org/apache/commons/lang3/builder/DiffBuilder$5
      26: dup
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokespecial #28                 // Method org/apache/commons/lang3/builder/DiffBuilder$5."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;CC)V
      34: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, char[], char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #29                 // Method java/util/Arrays.equals:([C[C)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #30                 // class org/apache/commons/lang3/builder/DiffBuilder$6
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #31                 // Method org/apache/commons/lang3/builder/DiffBuilder$6."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[C[C)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: dload_2
      15: invokestatic  #32                 // Method java/lang/Double.doubleToLongBits:(D)J
      18: dload         4
      20: invokestatic  #32                 // Method java/lang/Double.doubleToLongBits:(D)J
      23: lcmp
      24: ifeq          49
      27: aload_0
      28: getfield      #8                  // Field diffs:Ljava/util/List;
      31: new           #33                 // class org/apache/commons/lang3/builder/DiffBuilder$7
      34: dup
      35: aload_0
      36: aload_1
      37: dload_2
      38: dload         4
      40: invokespecial #34                 // Method org/apache/commons/lang3/builder/DiffBuilder$7."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;DD)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #35                 // Method java/util/Arrays.equals:([D[D)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #36                 // class org/apache/commons/lang3/builder/DiffBuilder$8
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #37                 // Method org/apache/commons/lang3/builder/DiffBuilder$8."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[D[D)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, float, float);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: fload_2
      15: invokestatic  #38                 // Method java/lang/Float.floatToIntBits:(F)I
      18: fload_3
      19: invokestatic  #38                 // Method java/lang/Float.floatToIntBits:(F)I
      22: if_icmpeq     46
      25: aload_0
      26: getfield      #8                  // Field diffs:Ljava/util/List;
      29: new           #39                 // class org/apache/commons/lang3/builder/DiffBuilder$9
      32: dup
      33: aload_0
      34: aload_1
      35: fload_2
      36: fload_3
      37: invokespecial #40                 // Method org/apache/commons/lang3/builder/DiffBuilder$9."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;FF)V
      40: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_0
      47: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, float[], float[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #41                 // Method java/util/Arrays.equals:([F[F)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #42                 // class org/apache/commons/lang3/builder/DiffBuilder$10
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #43                 // Method org/apache/commons/lang3/builder/DiffBuilder$10."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[F[F)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: iload_2
      15: iload_3
      16: if_icmpeq     40
      19: aload_0
      20: getfield      #8                  // Field diffs:Ljava/util/List;
      23: new           #44                 // class org/apache/commons/lang3/builder/DiffBuilder$11
      26: dup
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokespecial #45                 // Method org/apache/commons/lang3/builder/DiffBuilder$11."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;II)V
      34: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #46                 // Method java/util/Arrays.equals:([I[I)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #47                 // class org/apache/commons/lang3/builder/DiffBuilder$12
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #48                 // Method org/apache/commons/lang3/builder/DiffBuilder$12."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[I[I)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: lload_2
      15: lload         4
      17: lcmp
      18: ifeq          43
      21: aload_0
      22: getfield      #8                  // Field diffs:Ljava/util/List;
      25: new           #49                 // class org/apache/commons/lang3/builder/DiffBuilder$13
      28: dup
      29: aload_0
      30: aload_1
      31: lload_2
      32: lload         4
      34: invokespecial #50                 // Method org/apache/commons/lang3/builder/DiffBuilder$13."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;JJ)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, long[], long[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #51                 // Method java/util/Arrays.equals:([J[J)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #52                 // class org/apache/commons/lang3/builder/DiffBuilder$14
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #53                 // Method org/apache/commons/lang3/builder/DiffBuilder$14."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[J[J)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, short, short);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: iload_2
      15: iload_3
      16: if_icmpeq     40
      19: aload_0
      20: getfield      #8                  // Field diffs:Ljava/util/List;
      23: new           #54                 // class org/apache/commons/lang3/builder/DiffBuilder$15
      26: dup
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokespecial #55                 // Method org/apache/commons/lang3/builder/DiffBuilder$15."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;SS)V
      34: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, short[], short[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #56                 // Method java/util/Arrays.equals:([S[S)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #57                 // class org/apache/commons/lang3/builder/DiffBuilder$16
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #58                 // Method org/apache/commons/lang3/builder/DiffBuilder$16."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[S[S)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: if_acmpne     21
      19: aload_0
      20: areturn
      21: aload_2
      22: ifnull        31
      25: aload_2
      26: astore        4
      28: goto          34
      31: aload_3
      32: astore        4
      34: aload         4
      36: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokevirtual #60                 // Method java/lang/Class.isArray:()Z
      42: ifeq          289
      45: aload         4
      47: instanceof    #61                 // class "[Z"
      50: ifeq          73
      53: aload_0
      54: aload_1
      55: aload_2
      56: checkcast     #61                 // class "[Z"
      59: checkcast     #61                 // class "[Z"
      62: aload_3
      63: checkcast     #61                 // class "[Z"
      66: checkcast     #61                 // class "[Z"
      69: invokevirtual #62                 // Method append:(Ljava/lang/String;[Z[Z)Lorg/apache/commons/lang3/builder/DiffBuilder;
      72: areturn
      73: aload         4
      75: instanceof    #63                 // class "[B"
      78: ifeq          101
      81: aload_0
      82: aload_1
      83: aload_2
      84: checkcast     #63                 // class "[B"
      87: checkcast     #63                 // class "[B"
      90: aload_3
      91: checkcast     #63                 // class "[B"
      94: checkcast     #63                 // class "[B"
      97: invokevirtual #64                 // Method append:(Ljava/lang/String;[B[B)Lorg/apache/commons/lang3/builder/DiffBuilder;
     100: areturn
     101: aload         4
     103: instanceof    #65                 // class "[C"
     106: ifeq          129
     109: aload_0
     110: aload_1
     111: aload_2
     112: checkcast     #65                 // class "[C"
     115: checkcast     #65                 // class "[C"
     118: aload_3
     119: checkcast     #65                 // class "[C"
     122: checkcast     #65                 // class "[C"
     125: invokevirtual #66                 // Method append:(Ljava/lang/String;[C[C)Lorg/apache/commons/lang3/builder/DiffBuilder;
     128: areturn
     129: aload         4
     131: instanceof    #67                 // class "[D"
     134: ifeq          157
     137: aload_0
     138: aload_1
     139: aload_2
     140: checkcast     #67                 // class "[D"
     143: checkcast     #67                 // class "[D"
     146: aload_3
     147: checkcast     #67                 // class "[D"
     150: checkcast     #67                 // class "[D"
     153: invokevirtual #68                 // Method append:(Ljava/lang/String;[D[D)Lorg/apache/commons/lang3/builder/DiffBuilder;
     156: areturn
     157: aload         4
     159: instanceof    #69                 // class "[F"
     162: ifeq          185
     165: aload_0
     166: aload_1
     167: aload_2
     168: checkcast     #69                 // class "[F"
     171: checkcast     #69                 // class "[F"
     174: aload_3
     175: checkcast     #69                 // class "[F"
     178: checkcast     #69                 // class "[F"
     181: invokevirtual #70                 // Method append:(Ljava/lang/String;[F[F)Lorg/apache/commons/lang3/builder/DiffBuilder;
     184: areturn
     185: aload         4
     187: instanceof    #71                 // class "[I"
     190: ifeq          213
     193: aload_0
     194: aload_1
     195: aload_2
     196: checkcast     #71                 // class "[I"
     199: checkcast     #71                 // class "[I"
     202: aload_3
     203: checkcast     #71                 // class "[I"
     206: checkcast     #71                 // class "[I"
     209: invokevirtual #72                 // Method append:(Ljava/lang/String;[I[I)Lorg/apache/commons/lang3/builder/DiffBuilder;
     212: areturn
     213: aload         4
     215: instanceof    #73                 // class "[J"
     218: ifeq          241
     221: aload_0
     222: aload_1
     223: aload_2
     224: checkcast     #73                 // class "[J"
     227: checkcast     #73                 // class "[J"
     230: aload_3
     231: checkcast     #73                 // class "[J"
     234: checkcast     #73                 // class "[J"
     237: invokevirtual #74                 // Method append:(Ljava/lang/String;[J[J)Lorg/apache/commons/lang3/builder/DiffBuilder;
     240: areturn
     241: aload         4
     243: instanceof    #75                 // class "[S"
     246: ifeq          269
     249: aload_0
     250: aload_1
     251: aload_2
     252: checkcast     #75                 // class "[S"
     255: checkcast     #75                 // class "[S"
     258: aload_3
     259: checkcast     #75                 // class "[S"
     262: checkcast     #75                 // class "[S"
     265: invokevirtual #76                 // Method append:(Ljava/lang/String;[S[S)Lorg/apache/commons/lang3/builder/DiffBuilder;
     268: areturn
     269: aload_0
     270: aload_1
     271: aload_2
     272: checkcast     #77                 // class "[Ljava/lang/Object;"
     275: checkcast     #77                 // class "[Ljava/lang/Object;"
     278: aload_3
     279: checkcast     #77                 // class "[Ljava/lang/Object;"
     282: checkcast     #77                 // class "[Ljava/lang/Object;"
     285: invokevirtual #78                 // Method append:(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
     288: areturn
     289: aload_2
     290: ifnull        303
     293: aload_2
     294: aload_3
     295: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     298: ifeq          303
     301: aload_0
     302: areturn
     303: aload_0
     304: getfield      #8                  // Field diffs:Ljava/util/List;
     307: new           #79                 // class org/apache/commons/lang3/builder/DiffBuilder$17
     310: dup
     311: aload_0
     312: aload_1
     313: aload_2
     314: aload_3
     315: invokespecial #80                 // Method org/apache/commons/lang3/builder/DiffBuilder$17."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     318: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     323: pop
     324: aload_0
     325: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, java.lang.Object[], java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #13                 // Field objectsTriviallyEqual:Z
       9: ifeq          14
      12: aload_0
      13: areturn
      14: aload_2
      15: aload_3
      16: invokestatic  #81                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      19: ifne          43
      22: aload_0
      23: getfield      #8                  // Field diffs:Ljava/util/List;
      26: new           #82                 // class org/apache/commons/lang3/builder/DiffBuilder$18
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #83                 // Method org/apache/commons/lang3/builder/DiffBuilder$18."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: areturn

  public org.apache.commons.lang3.builder.DiffBuilder<T> append(java.lang.String, org.apache.commons.lang3.builder.DiffResult<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateFieldNameNotNull:(Ljava/lang/String;)V
       5: aload_2
       6: ldc           #84                 // String Diff result cannot be null
       8: iconst_0
       9: anewarray     #3                  // class java/lang/Object
      12: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: getfield      #13                 // Field objectsTriviallyEqual:Z
      20: ifeq          25
      23: aload_0
      24: areturn
      25: aload_2
      26: invokevirtual #85                 // Method org/apache/commons/lang3/builder/DiffResult.getDiffs:()Ljava/util/List;
      29: invokeinterface #86,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore_3
      35: aload_3
      36: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          100
      44: aload_3
      45: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #89                 // class org/apache/commons/lang3/builder/Diff
      53: astore        4
      55: aload_0
      56: new           #90                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_1
      64: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #93                 // String .
      69: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload         4
      74: invokevirtual #94                 // Method org/apache/commons/lang3/builder/Diff.getFieldName:()Ljava/lang/String;
      77: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: aload         4
      85: invokevirtual #96                 // Method org/apache/commons/lang3/builder/Diff.getLeft:()Ljava/lang/Object;
      88: aload         4
      90: invokevirtual #97                 // Method org/apache/commons/lang3/builder/Diff.getRight:()Ljava/lang/Object;
      93: invokevirtual #98                 // Method append:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
      96: pop
      97: goto          35
     100: aload_0
     101: areturn

  public org.apache.commons.lang3.builder.DiffResult<T> build();
    Code:
       0: new           #99                 // class org/apache/commons/lang3/builder/DiffResult
       3: dup
       4: aload_0
       5: getfield      #9                  // Field left:Ljava/lang/Object;
       8: aload_0
       9: getfield      #10                 // Field right:Ljava/lang/Object;
      12: aload_0
      13: getfield      #8                  // Field diffs:Ljava/util/List;
      16: aload_0
      17: getfield      #11                 // Field style:Lorg/apache/commons/lang3/builder/ToStringStyle;
      20: invokespecial #100                // Method org/apache/commons/lang3/builder/DiffResult."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
      23: areturn

  private void validateFieldNameNotNull(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #101                // String Field name cannot be null
       3: iconst_0
       4: anewarray     #3                  // class java/lang/Object
       7: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method build:()Lorg/apache/commons/lang3/builder/DiffResult;
       4: areturn
}
