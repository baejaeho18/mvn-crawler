Compiled from "Fraction.java"
public final class org.apache.commons.lang3.math.Fraction extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.math.Fraction> {
  private static final long serialVersionUID;

  public static final org.apache.commons.lang3.math.Fraction ZERO;

  public static final org.apache.commons.lang3.math.Fraction ONE;

  public static final org.apache.commons.lang3.math.Fraction ONE_HALF;

  public static final org.apache.commons.lang3.math.Fraction ONE_THIRD;

  public static final org.apache.commons.lang3.math.Fraction TWO_THIRDS;

  public static final org.apache.commons.lang3.math.Fraction ONE_QUARTER;

  public static final org.apache.commons.lang3.math.Fraction TWO_QUARTERS;

  public static final org.apache.commons.lang3.math.Fraction THREE_QUARTERS;

  public static final org.apache.commons.lang3.math.Fraction ONE_FIFTH;

  public static final org.apache.commons.lang3.math.Fraction TWO_FIFTHS;

  public static final org.apache.commons.lang3.math.Fraction THREE_FIFTHS;

  public static final org.apache.commons.lang3.math.Fraction FOUR_FIFTHS;

  private final int numerator;

  private final int denominator;

  private transient int hashCode;

  private transient java.lang.String toString;

  private transient java.lang.String toProperString;

  private org.apache.commons.lang3.math.Fraction(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hashCode:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field toString:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field toProperString:Ljava/lang/String;
      19: aload_0
      20: iload_1
      21: putfield      #5                  // Field numerator:I
      24: aload_0
      25: iload_2
      26: putfield      #6                  // Field denominator:I
      29: return

  public static org.apache.commons.lang3.math.Fraction getFraction(int, int);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #7                  // class java/lang/ArithmeticException
       7: dup
       8: ldc           #8                  // String The denominator must not be zero
      10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: ifge          46
      18: iload_0
      19: ldc           #11                 // int -2147483648
      21: if_icmpeq     30
      24: iload_1
      25: ldc           #11                 // int -2147483648
      27: if_icmpne     40
      30: new           #7                  // class java/lang/ArithmeticException
      33: dup
      34: ldc           #12                 // String overflow: can\'t negate
      36: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_0
      41: ineg
      42: istore_0
      43: iload_1
      44: ineg
      45: istore_1
      46: new           #13                 // class org/apache/commons/lang3/math/Fraction
      49: dup
      50: iload_0
      51: iload_1
      52: invokespecial #14                 // Method "<init>":(II)V
      55: areturn

  public static org.apache.commons.lang3.math.Fraction getFraction(int, int, int);
    Code:
       0: iload_2
       1: ifne          14
       4: new           #7                  // class java/lang/ArithmeticException
       7: dup
       8: ldc           #8                  // String The denominator must not be zero
      10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: ifge          28
      18: new           #7                  // class java/lang/ArithmeticException
      21: dup
      22: ldc           #15                 // String The denominator must not be negative
      24: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iload_1
      29: ifge          42
      32: new           #7                  // class java/lang/ArithmeticException
      35: dup
      36: ldc           #16                 // String The numerator must not be negative
      38: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload_0
      43: ifge          58
      46: iload_0
      47: i2l
      48: iload_2
      49: i2l
      50: lmul
      51: iload_1
      52: i2l
      53: lsub
      54: lstore_3
      55: goto          67
      58: iload_0
      59: i2l
      60: iload_2
      61: i2l
      62: lmul
      63: iload_1
      64: i2l
      65: ladd
      66: lstore_3
      67: lload_3
      68: ldc2_w        #17                 // long -2147483648l
      71: lcmp
      72: iflt          83
      75: lload_3
      76: ldc2_w        #19                 // long 2147483647l
      79: lcmp
      80: ifle          93
      83: new           #7                  // class java/lang/ArithmeticException
      86: dup
      87: ldc           #21                 // String Numerator too large to represent as an Integer.
      89: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: new           #13                 // class org/apache/commons/lang3/math/Fraction
      96: dup
      97: lload_3
      98: l2i
      99: iload_2
     100: invokespecial #14                 // Method "<init>":(II)V
     103: areturn

  public static org.apache.commons.lang3.math.Fraction getReducedFraction(int, int);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #7                  // class java/lang/ArithmeticException
       7: dup
       8: ldc           #8                  // String The denominator must not be zero
      10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_0
      15: ifne          22
      18: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
      21: areturn
      22: iload_1
      23: ldc           #11                 // int -2147483648
      25: if_icmpne     42
      28: iload_0
      29: iconst_1
      30: iand
      31: ifne          42
      34: iload_0
      35: iconst_2
      36: idiv
      37: istore_0
      38: iload_1
      39: iconst_2
      40: idiv
      41: istore_1
      42: iload_1
      43: ifge          74
      46: iload_0
      47: ldc           #11                 // int -2147483648
      49: if_icmpeq     58
      52: iload_1
      53: ldc           #11                 // int -2147483648
      55: if_icmpne     68
      58: new           #7                  // class java/lang/ArithmeticException
      61: dup
      62: ldc           #12                 // String overflow: can\'t negate
      64: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iload_0
      69: ineg
      70: istore_0
      71: iload_1
      72: ineg
      73: istore_1
      74: iload_0
      75: iload_1
      76: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
      79: istore_2
      80: iload_0
      81: iload_2
      82: idiv
      83: istore_0
      84: iload_1
      85: iload_2
      86: idiv
      87: istore_1
      88: new           #13                 // class org/apache/commons/lang3/math/Fraction
      91: dup
      92: iload_0
      93: iload_1
      94: invokespecial #14                 // Method "<init>":(II)V
      97: areturn

  public static org.apache.commons.lang3.math.Fraction getFraction(double);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpg
       3: ifge          10
       6: iconst_m1
       7: goto          11
      10: iconst_1
      11: istore_2
      12: dload_0
      13: invokestatic  #24                 // Method java/lang/Math.abs:(D)D
      16: dstore_0
      17: dload_0
      18: ldc2_w        #25                 // double 2.147483647E9d
      21: dcmpl
      22: ifgt          32
      25: dload_0
      26: invokestatic  #27                 // Method java/lang/Double.isNaN:(D)Z
      29: ifeq          42
      32: new           #7                  // class java/lang/ArithmeticException
      35: dup
      36: ldc           #28                 // String The value must not be greater than Integer.MAX_VALUE or NaN
      38: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: dload_0
      43: d2i
      44: istore_3
      45: dload_0
      46: iload_3
      47: i2d
      48: dsub
      49: dstore_0
      50: iconst_0
      51: istore        4
      53: iconst_1
      54: istore        5
      56: iconst_1
      57: istore        6
      59: iconst_0
      60: istore        7
      62: iconst_0
      63: istore        8
      65: iconst_0
      66: istore        9
      68: dload_0
      69: d2i
      70: istore        10
      72: iconst_0
      73: istore        11
      75: dconst_1
      76: dstore        12
      78: dconst_0
      79: dstore        14
      81: dload_0
      82: iload         10
      84: i2d
      85: dsub
      86: dstore        16
      88: dconst_0
      89: dstore        18
      91: ldc2_w        #30                 // double 1.7976931348623157E308d
      94: dstore        22
      96: iconst_1
      97: istore        26
      99: dload         22
     101: dstore        20
     103: dload         12
     105: dload         16
     107: ddiv
     108: d2i
     109: istore        11
     111: dload         16
     113: dstore        14
     115: dload         12
     117: iload         11
     119: i2d
     120: dload         16
     122: dmul
     123: dsub
     124: dstore        18
     126: iload         10
     128: iload         6
     130: imul
     131: iload         4
     133: iadd
     134: istore        8
     136: iload         10
     138: iload         7
     140: imul
     141: iload         5
     143: iadd
     144: istore        9
     146: iload         8
     148: i2d
     149: iload         9
     151: i2d
     152: ddiv
     153: dstore        24
     155: dload_0
     156: dload         24
     158: dsub
     159: invokestatic  #24                 // Method java/lang/Math.abs:(D)D
     162: dstore        22
     164: iload         11
     166: istore        10
     168: dload         14
     170: dstore        12
     172: dload         18
     174: dstore        16
     176: iload         6
     178: istore        4
     180: iload         7
     182: istore        5
     184: iload         8
     186: istore        6
     188: iload         9
     190: istore        7
     192: iinc          26, 1
     195: dload         20
     197: dload         22
     199: dcmpl
     200: ifle          223
     203: iload         9
     205: sipush        10000
     208: if_icmpgt     223
     211: iload         9
     213: ifle          223
     216: iload         26
     218: bipush        25
     220: if_icmplt     99
     223: iload         26
     225: bipush        25
     227: if_icmpne     240
     230: new           #7                  // class java/lang/ArithmeticException
     233: dup
     234: ldc           #32                 // String Unable to convert double to fraction
     236: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     239: athrow
     240: iload         4
     242: iload_3
     243: iload         5
     245: imul
     246: iadd
     247: iload_2
     248: imul
     249: iload         5
     251: invokestatic  #33                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
     254: areturn

  public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #34                 // String The string must not be null
       3: iconst_0
       4: anewarray     #35                 // class java/lang/Object
       7: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: bipush        46
      14: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
      17: istore_1
      18: iload_1
      19: iflt          30
      22: aload_0
      23: invokestatic  #38                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      26: invokestatic  #39                 // Method getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;
      29: areturn
      30: aload_0
      31: bipush        32
      33: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
      36: istore_1
      37: iload_1
      38: ifle          110
      41: aload_0
      42: iconst_0
      43: iload_1
      44: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      47: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      50: istore_2
      51: aload_0
      52: iload_1
      53: iconst_1
      54: iadd
      55: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: astore_0
      59: aload_0
      60: bipush        47
      62: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
      65: istore_1
      66: iload_1
      67: ifge          80
      70: new           #43                 // class java/lang/NumberFormatException
      73: dup
      74: ldc           #44                 // String The fraction could not be parsed as the format X Y/Z
      76: invokespecial #45                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: iconst_0
      82: iload_1
      83: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      86: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      89: istore_3
      90: aload_0
      91: iload_1
      92: iconst_1
      93: iadd
      94: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      97: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     100: istore        4
     102: iload_2
     103: iload_3
     104: iload         4
     106: invokestatic  #46                 // Method getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;
     109: areturn
     110: aload_0
     111: bipush        47
     113: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
     116: istore_1
     117: iload_1
     118: ifge          130
     121: aload_0
     122: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     125: iconst_1
     126: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
     129: areturn
     130: aload_0
     131: iconst_0
     132: iload_1
     133: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     136: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     139: istore_2
     140: aload_0
     141: iload_1
     142: iconst_1
     143: iadd
     144: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     147: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     150: istore_3
     151: iload_2
     152: iload_3
     153: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
     156: areturn

  public int getNumerator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ireturn

  public int getDenominator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field denominator:I
       4: ireturn

  public int getProperNumerator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: aload_0
       5: getfield      #6                  // Field denominator:I
       8: irem
       9: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
      12: ireturn

  public int getProperWhole();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: aload_0
       5: getfield      #6                  // Field denominator:I
       8: idiv
       9: ireturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: aload_0
       5: getfield      #6                  // Field denominator:I
       8: idiv
       9: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: i2l
       5: aload_0
       6: getfield      #6                  // Field denominator:I
       9: i2l
      10: ldiv
      11: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: i2f
       5: aload_0
       6: getfield      #6                  // Field denominator:I
       9: i2f
      10: fdiv
      11: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: i2d
       5: aload_0
       6: getfield      #6                  // Field denominator:I
       9: i2d
      10: ddiv
      11: dreturn

  public org.apache.commons.lang3.math.Fraction reduce();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ifne          25
       7: aload_0
       8: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
      11: invokevirtual #49                 // Method equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: aload_0
      18: goto          24
      21: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
      24: areturn
      25: aload_0
      26: getfield      #5                  // Field numerator:I
      29: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
      32: aload_0
      33: getfield      #6                  // Field denominator:I
      36: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
      39: istore_1
      40: iload_1
      41: iconst_1
      42: if_icmpne     47
      45: aload_0
      46: areturn
      47: aload_0
      48: getfield      #5                  // Field numerator:I
      51: iload_1
      52: idiv
      53: aload_0
      54: getfield      #6                  // Field denominator:I
      57: iload_1
      58: idiv
      59: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
      62: areturn

  public org.apache.commons.lang3.math.Fraction invert();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ifne          17
       7: new           #7                  // class java/lang/ArithmeticException
      10: dup
      11: ldc           #50                 // String Unable to invert zero.
      13: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #5                  // Field numerator:I
      21: ldc           #11                 // int -2147483648
      23: if_icmpne     36
      26: new           #7                  // class java/lang/ArithmeticException
      29: dup
      30: ldc           #51                 // String overflow: can\'t negate numerator
      32: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #5                  // Field numerator:I
      40: ifge          61
      43: new           #13                 // class org/apache/commons/lang3/math/Fraction
      46: dup
      47: aload_0
      48: getfield      #6                  // Field denominator:I
      51: ineg
      52: aload_0
      53: getfield      #5                  // Field numerator:I
      56: ineg
      57: invokespecial #14                 // Method "<init>":(II)V
      60: areturn
      61: new           #13                 // class org/apache/commons/lang3/math/Fraction
      64: dup
      65: aload_0
      66: getfield      #6                  // Field denominator:I
      69: aload_0
      70: getfield      #5                  // Field numerator:I
      73: invokespecial #14                 // Method "<init>":(II)V
      76: areturn

  public org.apache.commons.lang3.math.Fraction negate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ldc           #11                 // int -2147483648
       6: if_icmpne     19
       9: new           #7                  // class java/lang/ArithmeticException
      12: dup
      13: ldc           #52                 // String overflow: too large to negate
      15: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #13                 // class org/apache/commons/lang3/math/Fraction
      22: dup
      23: aload_0
      24: getfield      #5                  // Field numerator:I
      27: ineg
      28: aload_0
      29: getfield      #6                  // Field denominator:I
      32: invokespecial #14                 // Method "<init>":(II)V
      35: areturn

  public org.apache.commons.lang3.math.Fraction abs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: iflt          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #53                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;
      13: areturn

  public org.apache.commons.lang3.math.Fraction pow(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     7
       5: aload_0
       6: areturn
       7: iload_1
       8: ifne          15
      11: getstatic     #54                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;
      14: areturn
      15: iload_1
      16: ifge          51
      19: iload_1
      20: ldc           #11                 // int -2147483648
      22: if_icmpne     41
      25: aload_0
      26: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;
      29: iconst_2
      30: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
      33: iload_1
      34: iconst_2
      35: idiv
      36: ineg
      37: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
      40: areturn
      41: aload_0
      42: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;
      45: iload_1
      46: ineg
      47: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
      50: areturn
      51: aload_0
      52: aload_0
      53: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
      56: astore_2
      57: iload_1
      58: iconst_2
      59: irem
      60: ifne          71
      63: aload_2
      64: iload_1
      65: iconst_2
      66: idiv
      67: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
      70: areturn
      71: aload_2
      72: iload_1
      73: iconst_2
      74: idiv
      75: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
      78: aload_0
      79: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
      82: areturn

  private static int greatestCommonDivisor(int, int);
    Code:
       0: iload_0
       1: ifeq          8
       4: iload_1
       5: ifne          40
       8: iload_0
       9: ldc           #11                 // int -2147483648
      11: if_icmpeq     20
      14: iload_1
      15: ldc           #11                 // int -2147483648
      17: if_icmpne     30
      20: new           #7                  // class java/lang/ArithmeticException
      23: dup
      24: ldc           #58                 // String overflow: gcd is 2^31
      26: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: iload_0
      31: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
      34: iload_1
      35: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
      38: iadd
      39: ireturn
      40: iload_0
      41: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
      44: iconst_1
      45: if_icmpeq     56
      48: iload_1
      49: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
      52: iconst_1
      53: if_icmpne     58
      56: iconst_1
      57: ireturn
      58: iload_0
      59: ifle          65
      62: iload_0
      63: ineg
      64: istore_0
      65: iload_1
      66: ifle          72
      69: iload_1
      70: ineg
      71: istore_1
      72: iconst_0
      73: istore_2
      74: iload_0
      75: iconst_1
      76: iand
      77: ifne          106
      80: iload_1
      81: iconst_1
      82: iand
      83: ifne          106
      86: iload_2
      87: bipush        31
      89: if_icmpge     106
      92: iload_0
      93: iconst_2
      94: idiv
      95: istore_0
      96: iload_1
      97: iconst_2
      98: idiv
      99: istore_1
     100: iinc          2, 1
     103: goto          74
     106: iload_2
     107: bipush        31
     109: if_icmpne     122
     112: new           #7                  // class java/lang/ArithmeticException
     115: dup
     116: ldc           #58                 // String overflow: gcd is 2^31
     118: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: iload_0
     123: iconst_1
     124: iand
     125: iconst_1
     126: if_icmpne     133
     129: iload_1
     130: goto          137
     133: iload_0
     134: iconst_2
     135: idiv
     136: ineg
     137: istore_3
     138: iload_3
     139: iconst_1
     140: iand
     141: ifne          151
     144: iload_3
     145: iconst_2
     146: idiv
     147: istore_3
     148: goto          138
     151: iload_3
     152: ifle          161
     155: iload_3
     156: ineg
     157: istore_0
     158: goto          163
     161: iload_3
     162: istore_1
     163: iload_1
     164: iload_0
     165: isub
     166: iconst_2
     167: idiv
     168: istore_3
     169: iload_3
     170: ifne          138
     173: iload_0
     174: ineg
     175: iconst_1
     176: iload_2
     177: ishl
     178: imul
     179: ireturn

  private static int mulAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lmul
       5: lstore_2
       6: lload_2
       7: ldc2_w        #17                 // long -2147483648l
      10: lcmp
      11: iflt          22
      14: lload_2
      15: ldc2_w        #19                 // long 2147483647l
      18: lcmp
      19: ifle          32
      22: new           #7                  // class java/lang/ArithmeticException
      25: dup
      26: ldc           #59                 // String overflow: mul
      28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_2
      33: l2i
      34: ireturn

  private static int mulPosAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lmul
       5: lstore_2
       6: lload_2
       7: ldc2_w        #19                 // long 2147483647l
      10: lcmp
      11: ifle          24
      14: new           #7                  // class java/lang/ArithmeticException
      17: dup
      18: ldc           #60                 // String overflow: mulPos
      20: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: lload_2
      25: l2i
      26: ireturn

  private static int addAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: ladd
       5: lstore_2
       6: lload_2
       7: ldc2_w        #17                 // long -2147483648l
      10: lcmp
      11: iflt          22
      14: lload_2
      15: ldc2_w        #19                 // long 2147483647l
      18: lcmp
      19: ifle          32
      22: new           #7                  // class java/lang/ArithmeticException
      25: dup
      26: ldc           #61                 // String overflow: add
      28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_2
      33: l2i
      34: ireturn

  private static int subAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lsub
       5: lstore_2
       6: lload_2
       7: ldc2_w        #17                 // long -2147483648l
      10: lcmp
      11: iflt          22
      14: lload_2
      15: ldc2_w        #19                 // long 2147483647l
      18: lcmp
      19: ifle          32
      22: new           #7                  // class java/lang/ArithmeticException
      25: dup
      26: ldc           #61                 // String overflow: add
      28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_2
      33: l2i
      34: ireturn

  public org.apache.commons.lang3.math.Fraction add(org.apache.commons.lang3.math.Fraction);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #62                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
       6: areturn

  public org.apache.commons.lang3.math.Fraction subtract(org.apache.commons.lang3.math.Fraction);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #62                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
       6: areturn

  private org.apache.commons.lang3.math.Fraction addSub(org.apache.commons.lang3.math.Fraction, boolean);
    Code:
       0: aload_1
       1: ldc           #63                 // String The fraction must not be null
       3: iconst_0
       4: anewarray     #35                 // class java/lang/Object
       7: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #5                  // Field numerator:I
      15: ifne          31
      18: iload_2
      19: ifeq          26
      22: aload_1
      23: goto          30
      26: aload_1
      27: invokevirtual #53                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;
      30: areturn
      31: aload_1
      32: getfield      #5                  // Field numerator:I
      35: ifne          40
      38: aload_0
      39: areturn
      40: aload_0
      41: getfield      #6                  // Field denominator:I
      44: aload_1
      45: getfield      #6                  // Field denominator:I
      48: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
      51: istore_3
      52: iload_3
      53: iconst_1
      54: if_icmpne     123
      57: aload_0
      58: getfield      #5                  // Field numerator:I
      61: aload_1
      62: getfield      #6                  // Field denominator:I
      65: invokestatic  #64                 // Method mulAndCheck:(II)I
      68: istore        4
      70: aload_1
      71: getfield      #5                  // Field numerator:I
      74: aload_0
      75: getfield      #6                  // Field denominator:I
      78: invokestatic  #64                 // Method mulAndCheck:(II)I
      81: istore        5
      83: new           #13                 // class org/apache/commons/lang3/math/Fraction
      86: dup
      87: iload_2
      88: ifeq          101
      91: iload         4
      93: iload         5
      95: invokestatic  #65                 // Method addAndCheck:(II)I
      98: goto          108
     101: iload         4
     103: iload         5
     105: invokestatic  #66                 // Method subAndCheck:(II)I
     108: aload_0
     109: getfield      #6                  // Field denominator:I
     112: aload_1
     113: getfield      #6                  // Field denominator:I
     116: invokestatic  #67                 // Method mulPosAndCheck:(II)I
     119: invokespecial #14                 // Method "<init>":(II)V
     122: areturn
     123: aload_0
     124: getfield      #5                  // Field numerator:I
     127: i2l
     128: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     131: aload_1
     132: getfield      #6                  // Field denominator:I
     135: iload_3
     136: idiv
     137: i2l
     138: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     141: invokevirtual #69                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     144: astore        4
     146: aload_1
     147: getfield      #5                  // Field numerator:I
     150: i2l
     151: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     154: aload_0
     155: getfield      #6                  // Field denominator:I
     158: iload_3
     159: idiv
     160: i2l
     161: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     164: invokevirtual #69                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     167: astore        5
     169: iload_2
     170: ifeq          183
     173: aload         4
     175: aload         5
     177: invokevirtual #70                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     180: goto          190
     183: aload         4
     185: aload         5
     187: invokevirtual #71                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     190: astore        6
     192: aload         6
     194: iload_3
     195: i2l
     196: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     199: invokevirtual #72                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     202: invokevirtual #73                 // Method java/math/BigInteger.intValue:()I
     205: istore        7
     207: iload         7
     209: ifne          216
     212: iload_3
     213: goto          222
     216: iload         7
     218: iload_3
     219: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
     222: istore        8
     224: aload         6
     226: iload         8
     228: i2l
     229: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     232: invokevirtual #74                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     235: astore        9
     237: aload         9
     239: invokevirtual #75                 // Method java/math/BigInteger.bitLength:()I
     242: bipush        31
     244: if_icmple     257
     247: new           #7                  // class java/lang/ArithmeticException
     250: dup
     251: ldc           #76                 // String overflow: numerator too large after multiply
     253: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     256: athrow
     257: new           #13                 // class org/apache/commons/lang3/math/Fraction
     260: dup
     261: aload         9
     263: invokevirtual #73                 // Method java/math/BigInteger.intValue:()I
     266: aload_0
     267: getfield      #6                  // Field denominator:I
     270: iload_3
     271: idiv
     272: aload_1
     273: getfield      #6                  // Field denominator:I
     276: iload         8
     278: idiv
     279: invokestatic  #67                 // Method mulPosAndCheck:(II)I
     282: invokespecial #14                 // Method "<init>":(II)V
     285: areturn

  public org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction);
    Code:
       0: aload_1
       1: ldc           #63                 // String The fraction must not be null
       3: iconst_0
       4: anewarray     #35                 // class java/lang/Object
       7: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #5                  // Field numerator:I
      15: ifeq          25
      18: aload_1
      19: getfield      #5                  // Field numerator:I
      22: ifne          29
      25: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
      28: areturn
      29: aload_0
      30: getfield      #5                  // Field numerator:I
      33: aload_1
      34: getfield      #6                  // Field denominator:I
      37: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
      40: istore_2
      41: aload_1
      42: getfield      #5                  // Field numerator:I
      45: aload_0
      46: getfield      #6                  // Field denominator:I
      49: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
      52: istore_3
      53: aload_0
      54: getfield      #5                  // Field numerator:I
      57: iload_2
      58: idiv
      59: aload_1
      60: getfield      #5                  // Field numerator:I
      63: iload_3
      64: idiv
      65: invokestatic  #64                 // Method mulAndCheck:(II)I
      68: aload_0
      69: getfield      #6                  // Field denominator:I
      72: iload_3
      73: idiv
      74: aload_1
      75: getfield      #6                  // Field denominator:I
      78: iload_2
      79: idiv
      80: invokestatic  #67                 // Method mulPosAndCheck:(II)I
      83: invokestatic  #33                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
      86: areturn

  public org.apache.commons.lang3.math.Fraction divideBy(org.apache.commons.lang3.math.Fraction);
    Code:
       0: aload_1
       1: ldc           #63                 // String The fraction must not be null
       3: iconst_0
       4: anewarray     #35                 // class java/lang/Object
       7: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_1
      12: getfield      #5                  // Field numerator:I
      15: ifne          28
      18: new           #7                  // class java/lang/ArithmeticException
      21: dup
      22: ldc           #77                 // String The fraction to divide by must not be zero
      24: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;
      33: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
      36: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class org/apache/commons/lang3/math/Fraction
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #13                 // class org/apache/commons/lang3/math/Fraction
      20: astore_2
      21: aload_0
      22: invokevirtual #78                 // Method getNumerator:()I
      25: aload_2
      26: invokevirtual #78                 // Method getNumerator:()I
      29: if_icmpne     47
      32: aload_0
      33: invokevirtual #79                 // Method getDenominator:()I
      36: aload_2
      37: invokevirtual #79                 // Method getDenominator:()I
      40: if_icmpne     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hashCode:I
       4: ifne          27
       7: aload_0
       8: bipush        37
      10: sipush        629
      13: aload_0
      14: invokevirtual #78                 // Method getNumerator:()I
      17: iadd
      18: imul
      19: aload_0
      20: invokevirtual #79                 // Method getDenominator:()I
      23: iadd
      24: putfield      #2                  // Field hashCode:I
      27: aload_0
      28: getfield      #2                  // Field hashCode:I
      31: ireturn

  public int compareTo(org.apache.commons.lang3.math.Fraction);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #5                  // Field numerator:I
      11: aload_1
      12: getfield      #5                  // Field numerator:I
      15: if_icmpne     31
      18: aload_0
      19: getfield      #6                  // Field denominator:I
      22: aload_1
      23: getfield      #6                  // Field denominator:I
      26: if_icmpne     31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #5                  // Field numerator:I
      35: i2l
      36: aload_1
      37: getfield      #6                  // Field denominator:I
      40: i2l
      41: lmul
      42: lstore_2
      43: aload_1
      44: getfield      #5                  // Field numerator:I
      47: i2l
      48: aload_0
      49: getfield      #6                  // Field denominator:I
      52: i2l
      53: lmul
      54: lstore        4
      56: lload_2
      57: lload         4
      59: invokestatic  #80                 // Method java/lang/Long.compare:(JJ)I
      62: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field toString:Ljava/lang/String;
       4: ifnonnull     40
       7: aload_0
       8: new           #81                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #78                 // Method getNumerator:()I
      19: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      22: ldc           #84                 // String /
      24: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #79                 // Method getDenominator:()I
      31: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: putfield      #3                  // Field toString:Ljava/lang/String;
      40: aload_0
      41: getfield      #3                  // Field toString:Ljava/lang/String;
      44: areturn

  public java.lang.String toProperString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field toProperString:Ljava/lang/String;
       4: ifnonnull     193
       7: aload_0
       8: getfield      #5                  // Field numerator:I
      11: ifne          23
      14: aload_0
      15: ldc           #87                 // String 0
      17: putfield      #4                  // Field toProperString:Ljava/lang/String;
      20: goto          193
      23: aload_0
      24: getfield      #5                  // Field numerator:I
      27: aload_0
      28: getfield      #6                  // Field denominator:I
      31: if_icmpne     43
      34: aload_0
      35: ldc           #88                 // String 1
      37: putfield      #4                  // Field toProperString:Ljava/lang/String;
      40: goto          193
      43: aload_0
      44: getfield      #5                  // Field numerator:I
      47: iconst_m1
      48: aload_0
      49: getfield      #6                  // Field denominator:I
      52: imul
      53: if_icmpne     65
      56: aload_0
      57: ldc           #89                 // String -1
      59: putfield      #4                  // Field toProperString:Ljava/lang/String;
      62: goto          193
      65: aload_0
      66: getfield      #5                  // Field numerator:I
      69: ifle          80
      72: aload_0
      73: getfield      #5                  // Field numerator:I
      76: ineg
      77: goto          84
      80: aload_0
      81: getfield      #5                  // Field numerator:I
      84: aload_0
      85: getfield      #6                  // Field denominator:I
      88: ineg
      89: if_icmpge     160
      92: aload_0
      93: invokevirtual #90                 // Method getProperNumerator:()I
      96: istore_1
      97: iload_1
      98: ifne          115
     101: aload_0
     102: aload_0
     103: invokevirtual #91                 // Method getProperWhole:()I
     106: invokestatic  #92                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     109: putfield      #4                  // Field toProperString:Ljava/lang/String;
     112: goto          157
     115: aload_0
     116: new           #81                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
     123: aload_0
     124: invokevirtual #91                 // Method getProperWhole:()I
     127: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: ldc           #93                 // String
     132: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: iload_1
     136: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: ldc           #84                 // String /
     141: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: invokevirtual #79                 // Method getDenominator:()I
     148: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     151: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: putfield      #4                  // Field toProperString:Ljava/lang/String;
     157: goto          193
     160: aload_0
     161: new           #81                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
     168: aload_0
     169: invokevirtual #78                 // Method getNumerator:()I
     172: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     175: ldc           #84                 // String /
     177: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: invokevirtual #79                 // Method getDenominator:()I
     184: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     187: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: putfield      #4                  // Field toProperString:Ljava/lang/String;
     193: aload_0
     194: getfield      #4                  // Field toProperString:Ljava/lang/String;
     197: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/apache/commons/lang3/math/Fraction
       5: invokevirtual #94                 // Method compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I
       8: ireturn

  static {};
    Code:
       0: new           #13                 // class org/apache/commons/lang3/math/Fraction
       3: dup
       4: iconst_0
       5: iconst_1
       6: invokespecial #14                 // Method "<init>":(II)V
       9: putstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
      12: new           #13                 // class org/apache/commons/lang3/math/Fraction
      15: dup
      16: iconst_1
      17: iconst_1
      18: invokespecial #14                 // Method "<init>":(II)V
      21: putstatic     #54                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;
      24: new           #13                 // class org/apache/commons/lang3/math/Fraction
      27: dup
      28: iconst_1
      29: iconst_2
      30: invokespecial #14                 // Method "<init>":(II)V
      33: putstatic     #95                 // Field ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;
      36: new           #13                 // class org/apache/commons/lang3/math/Fraction
      39: dup
      40: iconst_1
      41: iconst_3
      42: invokespecial #14                 // Method "<init>":(II)V
      45: putstatic     #96                 // Field ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;
      48: new           #13                 // class org/apache/commons/lang3/math/Fraction
      51: dup
      52: iconst_2
      53: iconst_3
      54: invokespecial #14                 // Method "<init>":(II)V
      57: putstatic     #97                 // Field TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;
      60: new           #13                 // class org/apache/commons/lang3/math/Fraction
      63: dup
      64: iconst_1
      65: iconst_4
      66: invokespecial #14                 // Method "<init>":(II)V
      69: putstatic     #98                 // Field ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;
      72: new           #13                 // class org/apache/commons/lang3/math/Fraction
      75: dup
      76: iconst_2
      77: iconst_4
      78: invokespecial #14                 // Method "<init>":(II)V
      81: putstatic     #99                 // Field TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
      84: new           #13                 // class org/apache/commons/lang3/math/Fraction
      87: dup
      88: iconst_3
      89: iconst_4
      90: invokespecial #14                 // Method "<init>":(II)V
      93: putstatic     #100                // Field THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
      96: new           #13                 // class org/apache/commons/lang3/math/Fraction
      99: dup
     100: iconst_1
     101: iconst_5
     102: invokespecial #14                 // Method "<init>":(II)V
     105: putstatic     #101                // Field ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;
     108: new           #13                 // class org/apache/commons/lang3/math/Fraction
     111: dup
     112: iconst_2
     113: iconst_5
     114: invokespecial #14                 // Method "<init>":(II)V
     117: putstatic     #102                // Field TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
     120: new           #13                 // class org/apache/commons/lang3/math/Fraction
     123: dup
     124: iconst_3
     125: iconst_5
     126: invokespecial #14                 // Method "<init>":(II)V
     129: putstatic     #103                // Field THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
     132: new           #13                 // class org/apache/commons/lang3/math/Fraction
     135: dup
     136: iconst_4
     137: iconst_5
     138: invokespecial #14                 // Method "<init>":(II)V
     141: putstatic     #104                // Field FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
     144: return
}
