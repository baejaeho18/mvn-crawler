Compiled from "HashBasedTable.java"
public class com.google.common.collect.HashBasedTable<R, C, V> extends com.google.common.collect.StandardTable<R, C, V> {
  private static final long serialVersionUID;

  public static <R, C, V> com.google.common.collect.HashBasedTable<R, C, V> create();
    Code:
       0: new           #1                  // class com/google/common/collect/HashBasedTable
       3: dup
       4: new           #2                  // class java/util/LinkedHashMap
       7: dup
       8: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      11: new           #4                  // class com/google/common/collect/HashBasedTable$Factory
      14: dup
      15: iconst_0
      16: invokespecial #5                  // Method com/google/common/collect/HashBasedTable$Factory."<init>":(I)V
      19: invokespecial #6                  // Method "<init>":(Ljava/util/Map;Lcom/google/common/collect/HashBasedTable$Factory;)V
      22: areturn

  public static <R, C, V> com.google.common.collect.HashBasedTable<R, C, V> create(int, int);
    Code:
       0: iload_1
       1: ldc           #7                  // String expectedCellsPerRow
       3: invokestatic  #8                  // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
       6: pop
       7: iload_0
       8: invokestatic  #9                  // Method com/google/common/collect/Maps.newLinkedHashMapWithExpectedSize:(I)Ljava/util/LinkedHashMap;
      11: astore_2
      12: new           #1                  // class com/google/common/collect/HashBasedTable
      15: dup
      16: aload_2
      17: new           #4                  // class com/google/common/collect/HashBasedTable$Factory
      20: dup
      21: iload_1
      22: invokespecial #5                  // Method com/google/common/collect/HashBasedTable$Factory."<init>":(I)V
      25: invokespecial #6                  // Method "<init>":(Ljava/util/Map;Lcom/google/common/collect/HashBasedTable$Factory;)V
      28: areturn

  public static <R, C, V> com.google.common.collect.HashBasedTable<R, C, V> create(com.google.common.collect.Table<? extends R, ? extends C, ? extends V>);
    Code:
       0: invokestatic  #10                 // Method create:()Lcom/google/common/collect/HashBasedTable;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #11                 // Method putAll:(Lcom/google/common/collect/Table;)V
       9: aload_1
      10: areturn

  com.google.common.collect.HashBasedTable(java.util.Map<R, java.util.Map<C, V>>, com.google.common.collect.HashBasedTable$Factory<C, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method com/google/common/collect/StandardTable."<init>":(Ljava/util/Map;Lcom/google/common/base/Supplier;)V
       6: return

  public boolean contains(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method com/google/common/collect/StandardTable.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean containsColumn(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method com/google/common/collect/StandardTable.containsColumn:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean containsRow(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/google/common/collect/StandardTable.containsRow:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/google/common/collect/StandardTable.containsValue:(Ljava/lang/Object;)Z
       5: ireturn

  public V get(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #17                 // Method com/google/common/collect/StandardTable.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method com/google/common/collect/StandardTable.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public V remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #19                 // Method com/google/common/collect/StandardTable.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.util.Map columnMap();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method com/google/common/collect/StandardTable.columnMap:()Ljava/util/Map;
       4: areturn

  public java.util.Map rowMap();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method com/google/common/collect/StandardTable.rowMap:()Ljava/util/Map;
       4: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method com/google/common/collect/StandardTable.values:()Ljava/util/Collection;
       4: areturn

  public java.util.Set columnKeySet();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method com/google/common/collect/StandardTable.columnKeySet:()Ljava/util/Set;
       4: areturn

  public java.util.Set rowKeySet();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method com/google/common/collect/StandardTable.rowKeySet:()Ljava/util/Set;
       4: areturn

  public java.util.Map column(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method com/google/common/collect/StandardTable.column:(Ljava/lang/Object;)Ljava/util/Map;
       5: areturn

  public java.util.Map row(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method com/google/common/collect/StandardTable.row:(Ljava/lang/Object;)Ljava/util/Map;
       5: areturn

  public java.util.Set cellSet();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method com/google/common/collect/StandardTable.cellSet:()Ljava/util/Set;
       4: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #28                 // Method com/google/common/collect/StandardTable.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/google/common/collect/StandardTable.clear:()V
       4: return

  public int size();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method com/google/common/collect/StandardTable.size:()I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method com/google/common/collect/StandardTable.isEmpty:()Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method com/google/common/collect/StandardTable.toString:()Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method com/google/common/collect/StandardTable.hashCode:()I
       4: ireturn

  public void putAll(com.google.common.collect.Table);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method com/google/common/collect/StandardTable.putAll:(Lcom/google/common/collect/Table;)V
       5: return
}
