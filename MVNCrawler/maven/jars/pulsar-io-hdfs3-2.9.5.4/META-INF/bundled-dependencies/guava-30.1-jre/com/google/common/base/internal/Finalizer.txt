Compiled from "Finalizer.java"
public class com.google.common.base.internal.Finalizer implements java.lang.Runnable {
  private static final java.util.logging.Logger logger;

  private static final java.lang.String FINALIZABLE_REFERENCE;

  private final java.lang.ref.WeakReference<java.lang.Class<?>> finalizableReferenceClassReference;

  private final java.lang.ref.PhantomReference<java.lang.Object> frqReference;

  private final java.lang.ref.ReferenceQueue<java.lang.Object> queue;

  private static final java.lang.reflect.Constructor<java.lang.Thread> bigThreadConstructor;

  private static final java.lang.reflect.Field inheritableThreadLocals;

  public static void startFinalizer(java.lang.Class<?>, java.lang.ref.ReferenceQueue<java.lang.Object>, java.lang.ref.PhantomReference<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method java/lang/Class.getName:()Ljava/lang/String;
       4: ldc           #3                  // String com.google.common.base.FinalizableReference
       6: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          22
      12: new           #5                  // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #6                  // String Expected com.google.common.base.FinalizableReference.
      18: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: new           #2                  // class com/google/common/base/internal/Finalizer
      25: dup
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokespecial #8                  // Method "<init>":(Ljava/lang/Class;Ljava/lang/ref/ReferenceQueue;Ljava/lang/ref/PhantomReference;)V
      32: astore_3
      33: ldc           #2                  // class com/google/common/base/internal/Finalizer
      35: invokevirtual #1                  // Method java/lang/Class.getName:()Ljava/lang/String;
      38: astore        4
      40: aconst_null
      41: astore        5
      43: getstatic     #9                  // Field bigThreadConstructor:Ljava/lang/reflect/Constructor;
      46: ifnull        120
      49: iconst_0
      50: istore        6
      52: lconst_0
      53: lstore        7
      55: getstatic     #9                  // Field bigThreadConstructor:Ljava/lang/reflect/Constructor;
      58: iconst_5
      59: anewarray     #10                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aconst_null
      65: checkcast     #11                 // class java/lang/ThreadGroup
      68: aastore
      69: dup
      70: iconst_1
      71: aload_3
      72: aastore
      73: dup
      74: iconst_2
      75: aload         4
      77: aastore
      78: dup
      79: iconst_3
      80: lload         7
      82: invokestatic  #12                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      85: aastore
      86: dup
      87: iconst_4
      88: iload         6
      90: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      93: aastore
      94: invokevirtual #14                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #15                 // class java/lang/Thread
     100: astore        5
     102: goto          120
     105: astore        6
     107: getstatic     #17                 // Field logger:Ljava/util/logging/Logger;
     110: getstatic     #18                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     113: ldc           #19                 // String Failed to create a thread without inherited thread-local values
     115: aload         6
     117: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     120: aload         5
     122: ifnonnull     141
     125: new           #15                 // class java/lang/Thread
     128: dup
     129: aconst_null
     130: checkcast     #11                 // class java/lang/ThreadGroup
     133: aload_3
     134: aload         4
     136: invokespecial #21                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V
     139: astore        5
     141: aload         5
     143: iconst_1
     144: invokevirtual #22                 // Method java/lang/Thread.setDaemon:(Z)V
     147: getstatic     #23                 // Field inheritableThreadLocals:Ljava/lang/reflect/Field;
     150: ifnull        162
     153: getstatic     #23                 // Field inheritableThreadLocals:Ljava/lang/reflect/Field;
     156: aload         5
     158: aconst_null
     159: invokevirtual #24                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
     162: goto          180
     165: astore        6
     167: getstatic     #17                 // Field logger:Ljava/util/logging/Logger;
     170: getstatic     #18                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     173: ldc           #25                 // String Failed to clear thread local values inherited by reference finalizer thread.
     175: aload         6
     177: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     180: aload         5
     182: invokevirtual #26                 // Method java/lang/Thread.start:()V
     185: return
    Exception table:
       from    to  target type
          49   102   105   Class java/lang/Throwable
         147   162   165   Class java/lang/Throwable

  private com.google.common.base.internal.Finalizer(java.lang.Class<?>, java.lang.ref.ReferenceQueue<java.lang.Object>, java.lang.ref.PhantomReference<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #28                 // Field queue:Ljava/lang/ref/ReferenceQueue;
       9: aload_0
      10: new           #29                 // class java/lang/ref/WeakReference
      13: dup
      14: aload_1
      15: invokespecial #30                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      18: putfield      #31                 // Field finalizableReferenceClassReference:Ljava/lang/ref/WeakReference;
      21: aload_0
      22: aload_3
      23: putfield      #32                 // Field frqReference:Ljava/lang/ref/PhantomReference;
      26: return

  public void run();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #28                 // Field queue:Ljava/lang/ref/ReferenceQueue;
       5: invokevirtual #33                 // Method java/lang/ref/ReferenceQueue.remove:()Ljava/lang/ref/Reference;
       8: invokespecial #34                 // Method cleanUp:(Ljava/lang/ref/Reference;)Z
      11: ifne          17
      14: goto          24
      17: goto          0
      20: astore_1
      21: goto          0
      24: return
    Exception table:
       from    to  target type
           0    14    20   Class java/lang/InterruptedException

  private boolean cleanUp(java.lang.ref.Reference<?>);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method getFinalizeReferentMethod:()Ljava/lang/reflect/Method;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: invokevirtual #37                 // Method java/lang/ref/Reference.clear:()V
      15: aload_1
      16: aload_0
      17: getfield      #32                 // Field frqReference:Ljava/lang/ref/PhantomReference;
      20: if_acmpne     25
      23: iconst_0
      24: ireturn
      25: aload_2
      26: aload_1
      27: iconst_0
      28: anewarray     #10                 // class java/lang/Object
      31: invokevirtual #38                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: goto          51
      38: astore_3
      39: getstatic     #17                 // Field logger:Ljava/util/logging/Logger;
      42: getstatic     #39                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      45: ldc           #40                 // String Error cleaning up after reference.
      47: aload_3
      48: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      51: aload_0
      52: getfield      #28                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      55: invokevirtual #41                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      58: dup
      59: astore_1
      60: ifnonnull     11
      63: iconst_1
      64: ireturn
    Exception table:
       from    to  target type
          25    35    38   Class java/lang/Throwable

  private java.lang.reflect.Method getFinalizeReferentMethod();
    Code:
       0: aload_0
       1: getfield      #31                 // Field finalizableReferenceClassReference:Ljava/lang/ref/WeakReference;
       4: invokevirtual #42                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #43                 // class java/lang/Class
      10: astore_1
      11: aload_1
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_1
      18: ldc           #44                 // String finalizeReferent
      20: iconst_0
      21: anewarray     #43                 // class java/lang/Class
      24: invokevirtual #45                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: areturn
      28: astore_2
      29: new           #47                 // class java/lang/AssertionError
      32: dup
      33: aload_2
      34: invokespecial #48                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      37: athrow
    Exception table:
       from    to  target type
          17    27    28   Class java/lang/NoSuchMethodException

  private static java.lang.reflect.Field getInheritableThreadLocalsField();
    Code:
       0: ldc           #15                 // class java/lang/Thread
       2: ldc           #49                 // String inheritableThreadLocals
       4: invokevirtual #50                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_0
       8: aload_0
       9: iconst_1
      10: invokevirtual #51                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      13: aload_0
      14: areturn
      15: astore_0
      16: getstatic     #17                 // Field logger:Ljava/util/logging/Logger;
      19: getstatic     #18                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      22: ldc           #52                 // String Couldn\'t access Thread.inheritableThreadLocals. Reference finalizer threads will inherit thread local values.
      24: invokevirtual #53                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      27: aconst_null
      28: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Throwable

  private static java.lang.reflect.Constructor<java.lang.Thread> getBigThreadConstructor();
    Code:
       0: ldc           #15                 // class java/lang/Thread
       2: iconst_5
       3: anewarray     #43                 // class java/lang/Class
       6: dup
       7: iconst_0
       8: ldc           #11                 // class java/lang/ThreadGroup
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #54                 // class java/lang/Runnable
      15: aastore
      16: dup
      17: iconst_2
      18: ldc           #55                 // class java/lang/String
      20: aastore
      21: dup
      22: iconst_3
      23: getstatic     #56                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      26: aastore
      27: dup
      28: iconst_4
      29: getstatic     #57                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      32: aastore
      33: invokevirtual #58                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      36: areturn
      37: astore_0
      38: aconst_null
      39: areturn
    Exception table:
       from    to  target type
           0    36    37   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #2                  // class com/google/common/base/internal/Finalizer
       2: invokevirtual #1                  // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #59                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #17                 // Field logger:Ljava/util/logging/Logger;
      11: invokestatic  #60                 // Method getBigThreadConstructor:()Ljava/lang/reflect/Constructor;
      14: putstatic     #9                  // Field bigThreadConstructor:Ljava/lang/reflect/Constructor;
      17: getstatic     #9                  // Field bigThreadConstructor:Ljava/lang/reflect/Constructor;
      20: ifnonnull     29
      23: invokestatic  #61                 // Method getInheritableThreadLocalsField:()Ljava/lang/reflect/Field;
      26: goto          30
      29: aconst_null
      30: putstatic     #23                 // Field inheritableThreadLocals:Ljava/lang/reflect/Field;
      33: return
}
