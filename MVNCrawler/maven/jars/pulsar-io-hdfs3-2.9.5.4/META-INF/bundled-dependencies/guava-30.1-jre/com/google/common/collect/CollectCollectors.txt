Compiled from "CollectCollectors.java"
final class com.google.common.collect.CollectCollectors {
  private static final java.util.stream.Collector<java.lang.Object, ?, com.google.common.collect.ImmutableList<java.lang.Object>> TO_IMMUTABLE_LIST;

  private static final java.util.stream.Collector<java.lang.Object, ?, com.google.common.collect.ImmutableSet<java.lang.Object>> TO_IMMUTABLE_SET;

  private static final java.util.stream.Collector<com.google.common.collect.Range<java.lang.Comparable<?>>, ?, com.google.common.collect.ImmutableRangeSet<java.lang.Comparable<?>>> TO_IMMUTABLE_RANGE_SET;

  com.google.common.collect.CollectCollectors();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static <E> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableList<E>> toImmutableList();
    Code:
       0: getstatic     #2                  // Field TO_IMMUTABLE_LIST:Ljava/util/stream/Collector;
       3: areturn

  static <E> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableSet<E>> toImmutableSet();
    Code:
       0: getstatic     #3                  // Field TO_IMMUTABLE_SET:Ljava/util/stream/Collector;
       3: areturn

  static <E> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableSortedSet<E>> toImmutableSortedSet(java.util.Comparator<? super E>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokedynamic #5,  0              // InvokeDynamic #0:get:(Ljava/util/Comparator;)Ljava/util/function/Supplier;
      11: invokedynamic #6,  0              // InvokeDynamic #1:accept:()Ljava/util/function/BiConsumer;
      16: invokedynamic #7,  0              // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
      21: invokedynamic #8,  0              // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      26: iconst_0
      27: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      30: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      33: areturn

  static <E extends java.lang.Enum<E>> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableSet<E>> toImmutableEnumSet();
    Code:
       0: getstatic     #11                 // Field com/google/common/collect/CollectCollectors$EnumSetAccumulator.TO_IMMUTABLE_ENUM_SET:Ljava/util/stream/Collector;
       3: areturn

  static <E extends java.lang.Comparable<? super E>> java.util.stream.Collector<com.google.common.collect.Range<E>, ?, com.google.common.collect.ImmutableRangeSet<E>> toImmutableRangeSet();
    Code:
       0: getstatic     #12                 // Field TO_IMMUTABLE_RANGE_SET:Ljava/util/stream/Collector;
       3: areturn

  static <T, E> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMultiset<E>> toImmutableMultiset(java.util.function.Function<? super T, ? extends E>, java.util.function.ToIntFunction<? super T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #13,  0             // InvokeDynamic #4:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #14,  0             // InvokeDynamic #5:accept:(Ljava/util/function/Function;Ljava/util/function/ToIntFunction;)Ljava/util/function/BiConsumer;
      22: invokedynamic #15,  0             // InvokeDynamic #6:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #16,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      32: iconst_0
      33: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      36: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      39: areturn

  static <T, E, M extends com.google.common.collect.Multiset<E>> java.util.stream.Collector<T, ?, M> toMultiset(java.util.function.Function<? super T, E>, java.util.function.ToIntFunction<? super T>, java.util.function.Supplier<M>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: aload_0
      17: aload_1
      18: invokedynamic #17,  0             // InvokeDynamic #8:accept:(Ljava/util/function/Function;Ljava/util/function/ToIntFunction;)Ljava/util/function/BiConsumer;
      23: invokedynamic #18,  0             // InvokeDynamic #9:apply:()Ljava/util/function/BinaryOperator;
      28: iconst_0
      29: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      32: invokestatic  #19                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      35: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #20,  0             // InvokeDynamic #10:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #21,  0             // InvokeDynamic #11:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      22: invokedynamic #22,  0             // InvokeDynamic #12:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #23,  0             // InvokeDynamic #13:apply:()Ljava/util/function/Function;
      32: iconst_0
      33: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      36: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      39: areturn

  public static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokedynamic #24,  0             // InvokeDynamic #14:get:()Ljava/util/function/Supplier;
      23: invokestatic  #25                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      26: invokedynamic #26,  0             // InvokeDynamic #15:apply:()Ljava/util/function/Function;
      31: invokestatic  #27                 // Method java/util/stream/Collectors.collectingAndThen:(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      34: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableSortedMap<K, V>> toImmutableSortedMap(java.util.Comparator<? super K>, java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: invokedynamic #28,  0             // InvokeDynamic #16:get:(Ljava/util/Comparator;)Ljava/util/function/Supplier;
      21: aload_1
      22: aload_2
      23: invokedynamic #29,  0             // InvokeDynamic #17:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      28: invokedynamic #30,  0             // InvokeDynamic #18:apply:()Ljava/util/function/BinaryOperator;
      33: invokedynamic #31,  0             // InvokeDynamic #19:apply:()Ljava/util/function/Function;
      38: iconst_1
      39: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      42: dup
      43: iconst_0
      44: getstatic     #32                 // Field java/util/stream/Collector$Characteristics.UNORDERED:Ljava/util/stream/Collector$Characteristics;
      47: aastore
      48: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      51: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableSortedMap<K, V>> toImmutableSortedMap(java.util.Comparator<? super K>, java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_3
      16: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_1
      21: aload_2
      22: aload_3
      23: aload_0
      24: invokedynamic #33,  0             // InvokeDynamic #20:get:(Ljava/util/Comparator;)Ljava/util/function/Supplier;
      29: invokestatic  #25                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      32: invokedynamic #34,  0             // InvokeDynamic #21:apply:()Ljava/util/function/Function;
      37: invokestatic  #27                 // Method java/util/stream/Collectors.collectingAndThen:(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      40: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableBiMap<K, V>> toImmutableBiMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #35,  0             // InvokeDynamic #22:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #36,  0             // InvokeDynamic #23:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      22: invokedynamic #37,  0             // InvokeDynamic #24:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #38,  0             // InvokeDynamic #25:apply:()Ljava/util/function/Function;
      32: iconst_0
      33: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      36: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      39: areturn

  static <T, K extends java.lang.Enum<K>, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableEnumMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #39,  0             // InvokeDynamic #26:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #40,  0             // InvokeDynamic #27:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      22: invokedynamic #41,  0             // InvokeDynamic #28:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #42,  0             // InvokeDynamic #29:apply:()Ljava/util/function/Function;
      32: iconst_1
      33: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      36: dup
      37: iconst_0
      38: getstatic     #32                 // Field java/util/stream/Collector$Characteristics.UNORDERED:Ljava/util/stream/Collector$Characteristics;
      41: aastore
      42: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      45: areturn

  static <T, K extends java.lang.Enum<K>, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableEnumMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: invokedynamic #43,  0             // InvokeDynamic #30:get:(Ljava/util/function/BinaryOperator;)Ljava/util/function/Supplier;
      21: aload_0
      22: aload_1
      23: invokedynamic #44,  0             // InvokeDynamic #31:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      28: invokedynamic #41,  0             // InvokeDynamic #28:apply:()Ljava/util/function/BinaryOperator;
      33: invokedynamic #42,  0             // InvokeDynamic #29:apply:()Ljava/util/function/Function;
      38: iconst_0
      39: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      42: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      45: areturn

  static <T, K extends java.lang.Comparable<? super K>, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableRangeMap<K, V>> toImmutableRangeMap(java.util.function.Function<? super T, com.google.common.collect.Range<K>>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #45,  0             // InvokeDynamic #32:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #46,  0             // InvokeDynamic #33:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      22: invokedynamic #47,  0             // InvokeDynamic #34:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #48,  0             // InvokeDynamic #35:apply:()Ljava/util/function/Function;
      32: iconst_0
      33: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      36: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      39: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableListMultimap<K, V>> toImmutableListMultimap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: ldc           #49                 // String keyFunction
       3: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #51                 // String valueFunction
      10: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: invokedynamic #52,  0             // InvokeDynamic #36:get:()Ljava/util/function/Supplier;
      19: aload_0
      20: aload_1
      21: invokedynamic #53,  0             // InvokeDynamic #37:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      26: invokedynamic #54,  0             // InvokeDynamic #38:apply:()Ljava/util/function/BinaryOperator;
      31: invokedynamic #55,  0             // InvokeDynamic #39:apply:()Ljava/util/function/Function;
      36: iconst_0
      37: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      40: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      43: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableListMultimap<K, V>> flatteningToImmutableListMultimap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends java.util.stream.Stream<? extends V>>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokedynamic #56,  0             // InvokeDynamic #40:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      16: aload_1
      17: invokedynamic #57,  0             // InvokeDynamic #41:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      22: invokestatic  #58                 // Method com/google/common/collect/MultimapBuilder.linkedHashKeys:()Lcom/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
      25: invokevirtual #59                 // Method com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys.arrayListValues:()Lcom/google/common/collect/MultimapBuilder$ListMultimapBuilder;
      28: dup
      29: invokestatic  #60                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: invokedynamic #61,  0             // InvokeDynamic #42:get:(Lcom/google/common/collect/MultimapBuilder$ListMultimapBuilder;)Ljava/util/function/Supplier;
      38: invokestatic  #62                 // Method flatteningToMultimap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      41: invokedynamic #63,  0             // InvokeDynamic #43:apply:()Ljava/util/function/Function;
      46: invokestatic  #27                 // Method java/util/stream/Collectors.collectingAndThen:(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      49: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableSetMultimap<K, V>> toImmutableSetMultimap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: ldc           #49                 // String keyFunction
       3: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #51                 // String valueFunction
      10: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: invokedynamic #64,  0             // InvokeDynamic #44:get:()Ljava/util/function/Supplier;
      19: aload_0
      20: aload_1
      21: invokedynamic #65,  0             // InvokeDynamic #45:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      26: invokedynamic #66,  0             // InvokeDynamic #46:apply:()Ljava/util/function/BinaryOperator;
      31: invokedynamic #67,  0             // InvokeDynamic #47:apply:()Ljava/util/function/Function;
      36: iconst_0
      37: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      40: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      43: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableSetMultimap<K, V>> flatteningToImmutableSetMultimap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends java.util.stream.Stream<? extends V>>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokedynamic #68,  0             // InvokeDynamic #48:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      16: aload_1
      17: invokedynamic #69,  0             // InvokeDynamic #49:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      22: invokestatic  #58                 // Method com/google/common/collect/MultimapBuilder.linkedHashKeys:()Lcom/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
      25: invokevirtual #70                 // Method com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys.linkedHashSetValues:()Lcom/google/common/collect/MultimapBuilder$SetMultimapBuilder;
      28: dup
      29: invokestatic  #60                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: invokedynamic #71,  0             // InvokeDynamic #50:get:(Lcom/google/common/collect/MultimapBuilder$SetMultimapBuilder;)Ljava/util/function/Supplier;
      38: invokestatic  #62                 // Method flatteningToMultimap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      41: invokedynamic #72,  0             // InvokeDynamic #51:apply:()Ljava/util/function/Function;
      46: invokestatic  #27                 // Method java/util/stream/Collectors.collectingAndThen:(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      49: areturn

  static <T, K, V, M extends com.google.common.collect.Multimap<K, V>> java.util.stream.Collector<T, ?, M> toMultimap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.Supplier<M>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: aload_0
      17: aload_1
      18: invokedynamic #73,  0             // InvokeDynamic #52:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      23: invokedynamic #74,  0             // InvokeDynamic #53:apply:()Ljava/util/function/BinaryOperator;
      28: iconst_0
      29: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      32: invokestatic  #19                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      35: areturn

  static <T, K, V, M extends com.google.common.collect.Multimap<K, V>> java.util.stream.Collector<T, ?, M> flatteningToMultimap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends java.util.stream.Stream<? extends V>>, java.util.function.Supplier<M>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: aload_0
      17: aload_1
      18: invokedynamic #75,  0             // InvokeDynamic #54:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      23: invokedynamic #76,  0             // InvokeDynamic #55:apply:()Ljava/util/function/BinaryOperator;
      28: iconst_0
      29: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      32: invokestatic  #19                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      35: areturn

  private static com.google.common.collect.Multimap lambda$flatteningToMultimap$26(com.google.common.collect.Multimap, com.google.common.collect.Multimap);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #77,  2           // InterfaceMethod com/google/common/collect/Multimap.putAll:(Lcom/google/common/collect/Multimap;)Z
       7: pop
       8: aload_0
       9: areturn

  private static void lambda$flatteningToMultimap$25(java.util.function.Function, java.util.function.Function, com.google.common.collect.Multimap, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        4
       9: aload_2
      10: aload         4
      12: invokeinterface #79,  2           // InterfaceMethod com/google/common/collect/Multimap.get:(Ljava/lang/Object;)Ljava/util/Collection;
      17: astore        5
      19: aload_1
      20: aload_3
      21: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #80                 // class java/util/stream/Stream
      29: aload         5
      31: dup
      32: invokestatic  #60                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: invokedynamic #81,  0             // InvokeDynamic #56:accept:(Ljava/util/Collection;)Ljava/util/function/Consumer;
      41: invokeinterface #82,  2           // InterfaceMethod java/util/stream/Stream.forEachOrdered:(Ljava/util/function/Consumer;)V
      46: return

  private static com.google.common.collect.Multimap lambda$toMultimap$24(com.google.common.collect.Multimap, com.google.common.collect.Multimap);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #77,  2           // InterfaceMethod com/google/common/collect/Multimap.putAll:(Lcom/google/common/collect/Multimap;)Z
       7: pop
       8: aload_0
       9: areturn

  private static void lambda$toMultimap$23(java.util.function.Function, java.util.function.Function, com.google.common.collect.Multimap, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokeinterface #83,  3           // InterfaceMethod com/google/common/collect/Multimap.put:(Ljava/lang/Object;Ljava/lang/Object;)Z
      20: pop
      21: return

  private static java.util.stream.Stream lambda$flatteningToImmutableSetMultimap$22(java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #80                 // class java/util/stream/Stream
      10: invokedynamic #84,  0             // InvokeDynamic #57:accept:()Ljava/util/function/Consumer;
      15: invokeinterface #85,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      20: areturn

  private static java.lang.Object lambda$flatteningToImmutableSetMultimap$21(java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  private static void lambda$toImmutableSetMultimap$20(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableSetMultimap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #86                 // Method com/google/common/collect/ImmutableSetMultimap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSetMultimap$Builder;
      18: pop
      19: return

  private static java.util.stream.Stream lambda$flatteningToImmutableListMultimap$19(java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #80                 // class java/util/stream/Stream
      10: invokedynamic #84,  0             // InvokeDynamic #57:accept:()Ljava/util/function/Consumer;
      15: invokeinterface #85,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      20: areturn

  private static java.lang.Object lambda$flatteningToImmutableListMultimap$18(java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  private static void lambda$toImmutableListMultimap$17(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableListMultimap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #87                 // Method com/google/common/collect/ImmutableListMultimap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableListMultimap$Builder;
      18: pop
      19: return

  private static void lambda$toImmutableRangeMap$16(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableRangeMap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #88                 // class com/google/common/collect/Range
      11: aload_1
      12: aload_3
      13: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: invokevirtual #89                 // Method com/google/common/collect/ImmutableRangeMap$Builder.put:(Lcom/google/common/collect/Range;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableRangeMap$Builder;
      21: pop
      22: return

  private static void lambda$toImmutableEnumMap$15(java.util.function.Function, java.util.function.Function, com.google.common.collect.CollectCollectors$EnumMapAccumulator, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #90                 // class java/lang/Enum
      10: ldc           #91                 // String Null key for input %s
      12: aload_3
      13: invokestatic  #92                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #90                 // class java/lang/Enum
      19: astore        4
      21: aload_1
      22: aload_3
      23: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: ldc           #93                 // String Null value for input %s
      30: aload_3
      31: invokestatic  #92                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      34: astore        5
      36: aload_2
      37: aload         4
      39: aload         5
      41: invokevirtual #94                 // Method com/google/common/collect/CollectCollectors$EnumMapAccumulator.put:(Ljava/lang/Enum;Ljava/lang/Object;)V
      44: return

  private static com.google.common.collect.CollectCollectors$EnumMapAccumulator lambda$toImmutableEnumMap$14(java.util.function.BinaryOperator);
    Code:
       0: new           #95                 // class com/google/common/collect/CollectCollectors$EnumMapAccumulator
       3: dup
       4: aload_0
       5: invokespecial #96                 // Method com/google/common/collect/CollectCollectors$EnumMapAccumulator."<init>":(Ljava/util/function/BinaryOperator;)V
       8: areturn

  private static void lambda$toImmutableEnumMap$13(java.util.function.Function, java.util.function.Function, com.google.common.collect.CollectCollectors$EnumMapAccumulator, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #90                 // class java/lang/Enum
      10: ldc           #91                 // String Null key for input %s
      12: aload_3
      13: invokestatic  #92                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #90                 // class java/lang/Enum
      19: astore        4
      21: aload_1
      22: aload_3
      23: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: ldc           #93                 // String Null value for input %s
      30: aload_3
      31: invokestatic  #92                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      34: astore        5
      36: aload_2
      37: aload         4
      39: aload         5
      41: invokevirtual #94                 // Method com/google/common/collect/CollectCollectors$EnumMapAccumulator.put:(Ljava/lang/Enum;Ljava/lang/Object;)V
      44: return

  private static com.google.common.collect.CollectCollectors$EnumMapAccumulator lambda$toImmutableEnumMap$12();
    Code:
       0: new           #95                 // class com/google/common/collect/CollectCollectors$EnumMapAccumulator
       3: dup
       4: invokedynamic #97,  0             // InvokeDynamic #58:apply:()Ljava/util/function/BinaryOperator;
       9: invokespecial #96                 // Method com/google/common/collect/CollectCollectors$EnumMapAccumulator."<init>":(Ljava/util/function/BinaryOperator;)V
      12: areturn

  private static java.lang.Object lambda$toImmutableEnumMap$11(java.lang.Object, java.lang.Object);
    Code:
       0: new           #98                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokestatic  #99                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       8: astore_2
       9: aload_1
      10: invokestatic  #99                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      13: astore_3
      14: bipush        27
      16: aload_2
      17: invokestatic  #99                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      20: invokevirtual #100                // Method java/lang/String.length:()I
      23: iadd
      24: aload_3
      25: invokestatic  #99                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      28: invokevirtual #100                // Method java/lang/String.length:()I
      31: iadd
      32: new           #101                // class java/lang/StringBuilder
      35: dup_x1
      36: swap
      37: invokespecial #102                // Method java/lang/StringBuilder."<init>":(I)V
      40: ldc           #103                // String Multiple values for key:
      42: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #105                // String ,
      51: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_3
      55: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow

  private static void lambda$toImmutableBiMap$10(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableBiMap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #108                // Method com/google/common/collect/ImmutableBiMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableBiMap$Builder;
      18: pop
      19: return

  private static java.util.TreeMap lambda$toImmutableSortedMap$9(java.util.Comparator);
    Code:
       0: new           #109                // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #110                // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
       8: areturn

  private static void lambda$toImmutableSortedMap$8(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableSortedMap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #111                // Method com/google/common/collect/ImmutableSortedMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSortedMap$Builder;
      18: pop
      19: return

  private static com.google.common.collect.ImmutableSortedMap$Builder lambda$toImmutableSortedMap$7(java.util.Comparator);
    Code:
       0: new           #112                // class com/google/common/collect/ImmutableSortedMap$Builder
       3: dup
       4: aload_0
       5: invokespecial #113                // Method com/google/common/collect/ImmutableSortedMap$Builder."<init>":(Ljava/util/Comparator;)V
       8: areturn

  private static void lambda$toImmutableMap$6(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableMap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #114                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      18: pop
      19: return

  private static com.google.common.collect.Multiset lambda$toMultiset$5(com.google.common.collect.Multiset, com.google.common.collect.Multiset);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #115,  2          // InterfaceMethod com/google/common/collect/Multiset.addAll:(Ljava/util/Collection;)Z
       7: pop
       8: aload_0
       9: areturn

  private static void lambda$toMultiset$4(java.util.function.Function, java.util.function.ToIntFunction, com.google.common.collect.Multiset, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #116,  2          // InterfaceMethod java/util/function/ToIntFunction.applyAsInt:(Ljava/lang/Object;)I
      15: invokeinterface #117,  3          // InterfaceMethod com/google/common/collect/Multiset.add:(Ljava/lang/Object;I)I
      20: pop
      21: return

  private static com.google.common.collect.ImmutableMultiset lambda$toImmutableMultiset$3(com.google.common.collect.Multiset);
    Code:
       0: aload_0
       1: invokeinterface #118,  1          // InterfaceMethod com/google/common/collect/Multiset.entrySet:()Ljava/util/Set;
       6: invokestatic  #119                // Method com/google/common/collect/ImmutableMultiset.copyFromEntries:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMultiset;
       9: areturn

  private static com.google.common.collect.Multiset lambda$toImmutableMultiset$2(com.google.common.collect.Multiset, com.google.common.collect.Multiset);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #115,  2          // InterfaceMethod com/google/common/collect/Multiset.addAll:(Ljava/util/Collection;)Z
       7: pop
       8: aload_0
       9: areturn

  private static void lambda$toImmutableMultiset$1(java.util.function.Function, java.util.function.ToIntFunction, com.google.common.collect.Multiset, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #78,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_1
      12: aload_3
      13: invokeinterface #116,  2          // InterfaceMethod java/util/function/ToIntFunction.applyAsInt:(Ljava/lang/Object;)I
      18: invokeinterface #117,  3          // InterfaceMethod com/google/common/collect/Multiset.add:(Ljava/lang/Object;I)I
      23: pop
      24: return

  private static com.google.common.collect.ImmutableSortedSet$Builder lambda$toImmutableSortedSet$0(java.util.Comparator);
    Code:
       0: new           #120                // class com/google/common/collect/ImmutableSortedSet$Builder
       3: dup
       4: aload_0
       5: invokespecial #121                // Method com/google/common/collect/ImmutableSortedSet$Builder."<init>":(Ljava/util/Comparator;)V
       8: areturn

  static {};
    Code:
       0: invokedynamic #122,  0            // InvokeDynamic #59:get:()Ljava/util/function/Supplier;
       5: invokedynamic #123,  0            // InvokeDynamic #60:accept:()Ljava/util/function/BiConsumer;
      10: invokedynamic #124,  0            // InvokeDynamic #61:apply:()Ljava/util/function/BinaryOperator;
      15: invokedynamic #125,  0            // InvokeDynamic #62:apply:()Ljava/util/function/Function;
      20: iconst_0
      21: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      24: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      27: putstatic     #2                  // Field TO_IMMUTABLE_LIST:Ljava/util/stream/Collector;
      30: invokedynamic #126,  0            // InvokeDynamic #63:get:()Ljava/util/function/Supplier;
      35: invokedynamic #127,  0            // InvokeDynamic #64:accept:()Ljava/util/function/BiConsumer;
      40: invokedynamic #128,  0            // InvokeDynamic #65:apply:()Ljava/util/function/BinaryOperator;
      45: invokedynamic #129,  0            // InvokeDynamic #66:apply:()Ljava/util/function/Function;
      50: iconst_0
      51: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      54: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      57: putstatic     #3                  // Field TO_IMMUTABLE_SET:Ljava/util/stream/Collector;
      60: invokedynamic #130,  0            // InvokeDynamic #67:get:()Ljava/util/function/Supplier;
      65: invokedynamic #131,  0            // InvokeDynamic #68:accept:()Ljava/util/function/BiConsumer;
      70: invokedynamic #132,  0            // InvokeDynamic #69:apply:()Ljava/util/function/BinaryOperator;
      75: invokedynamic #133,  0            // InvokeDynamic #70:apply:()Ljava/util/function/Function;
      80: iconst_0
      81: anewarray     #9                  // class java/util/stream/Collector$Characteristics
      84: invokestatic  #10                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      87: putstatic     #12                 // Field TO_IMMUTABLE_RANGE_SET:Ljava/util/stream/Collector;
      90: return
}
