Compiled from "JdkBackedImmutableBiMap.java"
final class com.google.common.collect.JdkBackedImmutableBiMap<K, V> extends com.google.common.collect.ImmutableBiMap<K, V> {
  private final transient com.google.common.collect.ImmutableList<java.util.Map$Entry<K, V>> entries;

  private final java.util.Map<K, V> forwardDelegate;

  private final java.util.Map<V, K> backwardDelegate;

  private transient com.google.common.collect.JdkBackedImmutableBiMap<V, K> inverse;

  static <K, V> com.google.common.collect.ImmutableBiMap<K, V> create(int, java.util.Map$Entry<K, V>[]);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
       4: astore_2
       5: iload_0
       6: invokestatic  #2                  // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
       9: astore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_0
      16: if_icmpge     242
      19: aload_1
      20: iload         4
      22: aaload
      23: invokestatic  #3                  // Method com/google/common/collect/RegularImmutableMap.makeImmutable:(Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableMapEntry;
      26: astore        5
      28: aload_1
      29: iload         4
      31: aload         5
      33: aastore
      34: aload_2
      35: aload         5
      37: invokeinterface #4,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: aload         5
      44: invokeinterface #5,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: invokeinterface #6,  3            // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: astore        6
      56: aload         6
      58: ifnull        135
      61: ldc           #7                  // String key
      63: aload         5
      65: invokeinterface #4,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      70: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      73: astore        7
      75: aload         6
      77: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      80: astore        8
      82: iconst_1
      83: aload         7
      85: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      88: invokevirtual #9                  // Method java/lang/String.length:()I
      91: iadd
      92: aload         8
      94: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      97: invokevirtual #9                  // Method java/lang/String.length:()I
     100: iadd
     101: new           #10                 // class java/lang/StringBuilder
     104: dup_x1
     105: swap
     106: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(I)V
     109: aload         7
     111: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc           #13                 // String =
     116: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload         8
     121: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: aload_1
     128: iload         4
     130: aaload
     131: invokestatic  #15                 // Method conflictException:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;
     134: athrow
     135: aload_3
     136: aload         5
     138: invokeinterface #5,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     143: aload         5
     145: invokeinterface #4,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     150: invokeinterface #6,  3            // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     155: astore        7
     157: aload         7
     159: ifnull        236
     162: ldc           #16                 // String value
     164: aload         7
     166: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     169: astore        8
     171: aload         5
     173: invokeinterface #5,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     178: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     181: astore        9
     183: iconst_1
     184: aload         8
     186: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     189: invokevirtual #9                  // Method java/lang/String.length:()I
     192: iadd
     193: aload         9
     195: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     198: invokevirtual #9                  // Method java/lang/String.length:()I
     201: iadd
     202: new           #10                 // class java/lang/StringBuilder
     205: dup_x1
     206: swap
     207: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(I)V
     210: aload         8
     212: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: ldc           #13                 // String =
     217: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: aload         9
     222: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: aload_1
     229: iload         4
     231: aaload
     232: invokestatic  #15                 // Method conflictException:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;
     235: athrow
     236: iinc          4, 1
     239: goto          13
     242: aload_1
     243: iload_0
     244: invokestatic  #17                 // Method com/google/common/collect/ImmutableList.asImmutableList:([Ljava/lang/Object;I)Lcom/google/common/collect/ImmutableList;
     247: astore        4
     249: new           #18                 // class com/google/common/collect/JdkBackedImmutableBiMap
     252: dup
     253: aload         4
     255: aload_2
     256: aload_3
     257: invokespecial #19                 // Method "<init>":(Lcom/google/common/collect/ImmutableList;Ljava/util/Map;Ljava/util/Map;)V
     260: areturn

  private com.google.common.collect.JdkBackedImmutableBiMap(com.google.common.collect.ImmutableList<java.util.Map$Entry<K, V>>, java.util.Map<K, V>, java.util.Map<V, K>);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method com/google/common/collect/ImmutableBiMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field entries:Lcom/google/common/collect/ImmutableList;
       9: aload_0
      10: aload_2
      11: putfield      #21                 // Field forwardDelegate:Ljava/util/Map;
      14: aload_0
      15: aload_3
      16: putfield      #22                 // Field backwardDelegate:Ljava/util/Map;
      19: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #23                 // Method com/google/common/collect/ImmutableList.size:()I
       7: ireturn

  public com.google.common.collect.ImmutableBiMap<V, K> inverse();
    Code:
       0: aload_0
       1: getfield      #24                 // Field inverse:Lcom/google/common/collect/JdkBackedImmutableBiMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     44
       9: aload_0
      10: new           #18                 // class com/google/common/collect/JdkBackedImmutableBiMap
      13: dup
      14: new           #25                 // class com/google/common/collect/JdkBackedImmutableBiMap$InverseEntries
      17: dup
      18: aload_0
      19: aconst_null
      20: invokespecial #26                 // Method com/google/common/collect/JdkBackedImmutableBiMap$InverseEntries."<init>":(Lcom/google/common/collect/JdkBackedImmutableBiMap;Lcom/google/common/collect/JdkBackedImmutableBiMap$1;)V
      23: aload_0
      24: getfield      #22                 // Field backwardDelegate:Ljava/util/Map;
      27: aload_0
      28: getfield      #21                 // Field forwardDelegate:Ljava/util/Map;
      31: invokespecial #19                 // Method "<init>":(Lcom/google/common/collect/ImmutableList;Ljava/util/Map;Ljava/util/Map;)V
      34: dup
      35: astore_1
      36: putfield      #24                 // Field inverse:Lcom/google/common/collect/JdkBackedImmutableBiMap;
      39: aload_1
      40: aload_0
      41: putfield      #24                 // Field inverse:Lcom/google/common/collect/JdkBackedImmutableBiMap;
      44: aload_1
      45: areturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #21                 // Field forwardDelegate:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  com.google.common.collect.ImmutableSet<java.util.Map$Entry<K, V>> createEntrySet();
    Code:
       0: new           #28                 // class com/google/common/collect/ImmutableMapEntrySet$RegularEntrySet
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #1                  // Field entries:Lcom/google/common/collect/ImmutableList;
       9: invokespecial #29                 // Method com/google/common/collect/ImmutableMapEntrySet$RegularEntrySet."<init>":(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableList;)V
      12: areturn

  com.google.common.collect.ImmutableSet<K> createKeySet();
    Code:
       0: new           #30                 // class com/google/common/collect/ImmutableMapKeySet
       3: dup
       4: aload_0
       5: invokespecial #31                 // Method com/google/common/collect/ImmutableMapKeySet."<init>":(Lcom/google/common/collect/ImmutableMap;)V
       8: areturn

  boolean isPartialView();
    Code:
       0: iconst_0
       1: ireturn

  public com.google.common.collect.BiMap inverse();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method inverse:()Lcom/google/common/collect/ImmutableBiMap;
       4: areturn

  static com.google.common.collect.ImmutableList access$100(com.google.common.collect.JdkBackedImmutableBiMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Lcom/google/common/collect/ImmutableList;
       4: areturn
}
