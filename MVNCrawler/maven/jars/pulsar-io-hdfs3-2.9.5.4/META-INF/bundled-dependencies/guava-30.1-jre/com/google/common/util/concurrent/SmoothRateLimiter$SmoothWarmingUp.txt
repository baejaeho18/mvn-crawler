Compiled from "SmoothRateLimiter.java"
final class com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp extends com.google.common.util.concurrent.SmoothRateLimiter {
  private final long warmupPeriodMicros;

  private double slope;

  private double thresholdPermits;

  private double coldFactor;

  com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch, long, java.util.concurrent.TimeUnit, double);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method com/google/common/util/concurrent/SmoothRateLimiter."<init>":(Lcom/google/common/util/concurrent/RateLimiter$SleepingStopwatch;Lcom/google/common/util/concurrent/SmoothRateLimiter$1;)V
       6: aload_0
       7: aload         4
       9: lload_2
      10: invokevirtual #2                  // Method java/util/concurrent/TimeUnit.toMicros:(J)J
      13: putfield      #3                  // Field warmupPeriodMicros:J
      16: aload_0
      17: dload         5
      19: putfield      #4                  // Field coldFactor:D
      22: return

  void doSetRate(double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxPermits:D
       4: dstore        5
       6: dload_3
       7: aload_0
       8: getfield      #4                  // Field coldFactor:D
      11: dmul
      12: dstore        7
      14: aload_0
      15: ldc2_w        #6                  // double 0.5d
      18: aload_0
      19: getfield      #3                  // Field warmupPeriodMicros:J
      22: l2d
      23: dmul
      24: dload_3
      25: ddiv
      26: putfield      #8                  // Field thresholdPermits:D
      29: aload_0
      30: aload_0
      31: getfield      #8                  // Field thresholdPermits:D
      34: ldc2_w        #9                  // double 2.0d
      37: aload_0
      38: getfield      #3                  // Field warmupPeriodMicros:J
      41: l2d
      42: dmul
      43: dload_3
      44: dload         7
      46: dadd
      47: ddiv
      48: dadd
      49: putfield      #5                  // Field maxPermits:D
      52: aload_0
      53: dload         7
      55: dload_3
      56: dsub
      57: aload_0
      58: getfield      #5                  // Field maxPermits:D
      61: aload_0
      62: getfield      #8                  // Field thresholdPermits:D
      65: dsub
      66: ddiv
      67: putfield      #11                 // Field slope:D
      70: dload         5
      72: ldc2_w        #13                 // double Infinityd
      75: dcmpl
      76: ifne          87
      79: aload_0
      80: dconst_0
      81: putfield      #15                 // Field storedPermits:D
      84: goto          117
      87: aload_0
      88: dload         5
      90: dconst_0
      91: dcmpl
      92: ifne          102
      95: aload_0
      96: getfield      #5                  // Field maxPermits:D
      99: goto          114
     102: aload_0
     103: getfield      #15                 // Field storedPermits:D
     106: aload_0
     107: getfield      #5                  // Field maxPermits:D
     110: dmul
     111: dload         5
     113: ddiv
     114: putfield      #15                 // Field storedPermits:D
     117: return

  long storedPermitsToWaitTime(double, double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #8                  // Field thresholdPermits:D
       5: dsub
       6: dstore        5
       8: lconst_0
       9: lstore        7
      11: dload         5
      13: dconst_0
      14: dcmpl
      15: ifle          61
      18: dload         5
      20: dload_3
      21: invokestatic  #16                 // Method java/lang/Math.min:(DD)D
      24: dstore        9
      26: aload_0
      27: dload         5
      29: invokespecial #17                 // Method permitsToTime:(D)D
      32: aload_0
      33: dload         5
      35: dload         9
      37: dsub
      38: invokespecial #17                 // Method permitsToTime:(D)D
      41: dadd
      42: dstore        11
      44: dload         9
      46: dload         11
      48: dmul
      49: ldc2_w        #9                  // double 2.0d
      52: ddiv
      53: d2l
      54: lstore        7
      56: dload_3
      57: dload         9
      59: dsub
      60: dstore_3
      61: lload         7
      63: aload_0
      64: getfield      #18                 // Field stableIntervalMicros:D
      67: dload_3
      68: dmul
      69: d2l
      70: ladd
      71: lstore        7
      73: lload         7
      75: lreturn

  private double permitsToTime(double);
    Code:
       0: aload_0
       1: getfield      #18                 // Field stableIntervalMicros:D
       4: dload_1
       5: aload_0
       6: getfield      #11                 // Field slope:D
       9: dmul
      10: dadd
      11: dreturn

  double coolDownIntervalMicros();
    Code:
       0: aload_0
       1: getfield      #3                  // Field warmupPeriodMicros:J
       4: l2d
       5: aload_0
       6: getfield      #5                  // Field maxPermits:D
       9: ddiv
      10: dreturn
}
