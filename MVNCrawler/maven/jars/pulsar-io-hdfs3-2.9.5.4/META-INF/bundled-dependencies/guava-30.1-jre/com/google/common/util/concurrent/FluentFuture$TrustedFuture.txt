Compiled from "FluentFuture.java"
abstract class com.google.common.util.concurrent.FluentFuture$TrustedFuture<V> extends com.google.common.util.concurrent.FluentFuture<V> implements com.google.common.util.concurrent.AbstractFuture$Trusted<V> {
  com.google.common.util.concurrent.FluentFuture$TrustedFuture();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/util/concurrent/FluentFuture."<init>":()V
       4: return

  public final V get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/util/concurrent/FluentFuture.get:()Ljava/lang/Object;
       4: areturn

  public final V get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokespecial #3                  // Method com/google/common/util/concurrent/FluentFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       6: areturn

  public final boolean isDone();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/google/common/util/concurrent/FluentFuture.isDone:()Z
       4: ireturn

  public final boolean isCancelled();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method com/google/common/util/concurrent/FluentFuture.isCancelled:()Z
       4: ireturn

  public final void addListener(java.lang.Runnable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method com/google/common/util/concurrent/FluentFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
       6: return

  public final boolean cancel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method com/google/common/util/concurrent/FluentFuture.cancel:(Z)Z
       5: ireturn
}
