Compiled from "ClosingFuture.java"
public final class com.google.common.util.concurrent.ClosingFuture<V> {
  private static final java.util.logging.Logger logger;

  private final java.util.concurrent.atomic.AtomicReference<com.google.common.util.concurrent.ClosingFuture$State> state;

  private final com.google.common.util.concurrent.ClosingFuture$CloseableList closeables;

  private final com.google.common.util.concurrent.FluentFuture<V> future;

  public static <V> com.google.common.util.concurrent.ClosingFuture<V> submit(com.google.common.util.concurrent.ClosingFuture$ClosingCallable<V>, java.util.concurrent.Executor);
    Code:
       0: new           #10                 // class com/google/common/util/concurrent/ClosingFuture
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method "<init>":(Lcom/google/common/util/concurrent/ClosingFuture$ClosingCallable;Ljava/util/concurrent/Executor;)V
       9: areturn

  public static <V> com.google.common.util.concurrent.ClosingFuture<V> submitAsync(com.google.common.util.concurrent.ClosingFuture$AsyncClosingCallable<V>, java.util.concurrent.Executor);
    Code:
       0: new           #10                 // class com/google/common/util/concurrent/ClosingFuture
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #12                 // Method "<init>":(Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingCallable;Ljava/util/concurrent/Executor;)V
       9: areturn

  public static <V> com.google.common.util.concurrent.ClosingFuture<V> from(com.google.common.util.concurrent.ListenableFuture<V>);
    Code:
       0: new           #10                 // class com/google/common/util/concurrent/ClosingFuture
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method "<init>":(Lcom/google/common/util/concurrent/ListenableFuture;)V
       8: areturn

  public static <C extends java.lang.AutoCloseable> com.google.common.util.concurrent.ClosingFuture<C> eventuallyClosing(com.google.common.util.concurrent.ListenableFuture<C>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #10                 // class com/google/common/util/concurrent/ClosingFuture
       8: dup
       9: aload_0
      10: invokestatic  #14                 // Method com/google/common/util/concurrent/Futures.nonCancellationPropagating:(Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/ListenableFuture;
      13: invokespecial #3                  // Method "<init>":(Lcom/google/common/util/concurrent/ListenableFuture;)V
      16: astore_2
      17: aload_0
      18: new           #15                 // class com/google/common/util/concurrent/ClosingFuture$1
      21: dup
      22: aload_2
      23: aload_1
      24: invokespecial #16                 // Method com/google/common/util/concurrent/ClosingFuture$1."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Ljava/util/concurrent/Executor;)V
      27: invokestatic  #17                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
      30: invokestatic  #18                 // Method com/google/common/util/concurrent/Futures.addCallback:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/FutureCallback;Ljava/util/concurrent/Executor;)V
      33: aload_2
      34: areturn

  public static com.google.common.util.concurrent.ClosingFuture$Combiner whenAllComplete(java.lang.Iterable<? extends com.google.common.util.concurrent.ClosingFuture<?>>);
    Code:
       0: new           #19                 // class com/google/common/util/concurrent/ClosingFuture$Combiner
       3: dup
       4: iconst_0
       5: aload_0
       6: aconst_null
       7: invokespecial #20                 // Method com/google/common/util/concurrent/ClosingFuture$Combiner."<init>":(ZLjava/lang/Iterable;Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      10: areturn

  public static com.google.common.util.concurrent.ClosingFuture$Combiner whenAllComplete(com.google.common.util.concurrent.ClosingFuture<?>, com.google.common.util.concurrent.ClosingFuture<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method com/google/common/collect/Lists.asList:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
       5: invokestatic  #22                 // Method whenAllComplete:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner;
       8: areturn

  public static com.google.common.util.concurrent.ClosingFuture$Combiner whenAllSucceed(java.lang.Iterable<? extends com.google.common.util.concurrent.ClosingFuture<?>>);
    Code:
       0: new           #19                 // class com/google/common/util/concurrent/ClosingFuture$Combiner
       3: dup
       4: iconst_1
       5: aload_0
       6: aconst_null
       7: invokespecial #20                 // Method com/google/common/util/concurrent/ClosingFuture$Combiner."<init>":(ZLjava/lang/Iterable;Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      10: areturn

  public static <V1, V2> com.google.common.util.concurrent.ClosingFuture$Combiner2<V1, V2> whenAllSucceed(com.google.common.util.concurrent.ClosingFuture<V1>, com.google.common.util.concurrent.ClosingFuture<V2>);
    Code:
       0: new           #23                 // class com/google/common/util/concurrent/ClosingFuture$Combiner2
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #24                 // Method com/google/common/util/concurrent/ClosingFuture$Combiner2."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      10: areturn

  public static <V1, V2, V3> com.google.common.util.concurrent.ClosingFuture$Combiner3<V1, V2, V3> whenAllSucceed(com.google.common.util.concurrent.ClosingFuture<V1>, com.google.common.util.concurrent.ClosingFuture<V2>, com.google.common.util.concurrent.ClosingFuture<V3>);
    Code:
       0: new           #25                 // class com/google/common/util/concurrent/ClosingFuture$Combiner3
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aconst_null
       8: invokespecial #26                 // Method com/google/common/util/concurrent/ClosingFuture$Combiner3."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      11: areturn

  public static <V1, V2, V3, V4> com.google.common.util.concurrent.ClosingFuture$Combiner4<V1, V2, V3, V4> whenAllSucceed(com.google.common.util.concurrent.ClosingFuture<V1>, com.google.common.util.concurrent.ClosingFuture<V2>, com.google.common.util.concurrent.ClosingFuture<V3>, com.google.common.util.concurrent.ClosingFuture<V4>);
    Code:
       0: new           #27                 // class com/google/common/util/concurrent/ClosingFuture$Combiner4
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aconst_null
       9: invokespecial #28                 // Method com/google/common/util/concurrent/ClosingFuture$Combiner4."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      12: areturn

  public static <V1, V2, V3, V4, V5> com.google.common.util.concurrent.ClosingFuture$Combiner5<V1, V2, V3, V4, V5> whenAllSucceed(com.google.common.util.concurrent.ClosingFuture<V1>, com.google.common.util.concurrent.ClosingFuture<V2>, com.google.common.util.concurrent.ClosingFuture<V3>, com.google.common.util.concurrent.ClosingFuture<V4>, com.google.common.util.concurrent.ClosingFuture<V5>);
    Code:
       0: new           #29                 // class com/google/common/util/concurrent/ClosingFuture$Combiner5
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aconst_null
      11: invokespecial #30                 // Method com/google/common/util/concurrent/ClosingFuture$Combiner5."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      14: areturn

  public static com.google.common.util.concurrent.ClosingFuture$Combiner whenAllSucceed(com.google.common.util.concurrent.ClosingFuture<?>, com.google.common.util.concurrent.ClosingFuture<?>, com.google.common.util.concurrent.ClosingFuture<?>, com.google.common.util.concurrent.ClosingFuture<?>, com.google.common.util.concurrent.ClosingFuture<?>, com.google.common.util.concurrent.ClosingFuture<?>, com.google.common.util.concurrent.ClosingFuture<?>...);
    Code:
       0: aload_0
       1: iconst_5
       2: anewarray     #10                 // class com/google/common/util/concurrent/ClosingFuture
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: dup
      10: iconst_1
      11: aload_2
      12: aastore
      13: dup
      14: iconst_2
      15: aload_3
      16: aastore
      17: dup
      18: iconst_3
      19: aload         4
      21: aastore
      22: dup
      23: iconst_4
      24: aload         5
      26: aastore
      27: invokestatic  #31                 // Method com/google/common/collect/FluentIterable.of:(Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/FluentIterable;
      30: aload         6
      32: invokevirtual #32                 // Method com/google/common/collect/FluentIterable.append:([Ljava/lang/Object;)Lcom/google/common/collect/FluentIterable;
      35: invokestatic  #33                 // Method whenAllSucceed:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner;
      38: areturn

  private com.google.common.util.concurrent.ClosingFuture(com.google.common.util.concurrent.ListenableFuture<V>);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #35                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: getstatic     #36                 // Field com/google/common/util/concurrent/ClosingFuture$State.OPEN:Lcom/google/common/util/concurrent/ClosingFuture$State;
      12: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: new           #39                 // class com/google/common/util/concurrent/ClosingFuture$CloseableList
      22: dup
      23: aconst_null
      24: invokespecial #40                 // Method com/google/common/util/concurrent/ClosingFuture$CloseableList."<init>":(Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      27: putfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
      30: aload_0
      31: aload_1
      32: invokestatic  #41                 // Method com/google/common/util/concurrent/FluentFuture.from:(Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/FluentFuture;
      35: putfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      38: return

  private com.google.common.util.concurrent.ClosingFuture(com.google.common.util.concurrent.ClosingFuture$ClosingCallable<V>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #35                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: getstatic     #36                 // Field com/google/common/util/concurrent/ClosingFuture$State.OPEN:Lcom/google/common/util/concurrent/ClosingFuture$State;
      12: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: new           #39                 // class com/google/common/util/concurrent/ClosingFuture$CloseableList
      22: dup
      23: aconst_null
      24: invokespecial #40                 // Method com/google/common/util/concurrent/ClosingFuture$CloseableList."<init>":(Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      27: putfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
      30: aload_1
      31: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: new           #42                 // class com/google/common/util/concurrent/ClosingFuture$2
      38: dup
      39: aload_0
      40: aload_1
      41: invokespecial #43                 // Method com/google/common/util/concurrent/ClosingFuture$2."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$ClosingCallable;)V
      44: invokestatic  #44                 // Method com/google/common/util/concurrent/TrustedListenableFutureTask.create:(Ljava/util/concurrent/Callable;)Lcom/google/common/util/concurrent/TrustedListenableFutureTask;
      47: astore_3
      48: aload_2
      49: aload_3
      50: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      55: aload_0
      56: aload_3
      57: putfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      60: return

  private com.google.common.util.concurrent.ClosingFuture(com.google.common.util.concurrent.ClosingFuture$AsyncClosingCallable<V>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #35                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: getstatic     #36                 // Field com/google/common/util/concurrent/ClosingFuture$State.OPEN:Lcom/google/common/util/concurrent/ClosingFuture$State;
      12: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: new           #39                 // class com/google/common/util/concurrent/ClosingFuture$CloseableList
      22: dup
      23: aconst_null
      24: invokespecial #40                 // Method com/google/common/util/concurrent/ClosingFuture$CloseableList."<init>":(Lcom/google/common/util/concurrent/ClosingFuture$1;)V
      27: putfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
      30: aload_1
      31: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: new           #46                 // class com/google/common/util/concurrent/ClosingFuture$3
      38: dup
      39: aload_0
      40: aload_1
      41: invokespecial #47                 // Method com/google/common/util/concurrent/ClosingFuture$3."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingCallable;)V
      44: invokestatic  #48                 // Method com/google/common/util/concurrent/TrustedListenableFutureTask.create:(Lcom/google/common/util/concurrent/AsyncCallable;)Lcom/google/common/util/concurrent/TrustedListenableFutureTask;
      47: astore_3
      48: aload_2
      49: aload_3
      50: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      55: aload_0
      56: aload_3
      57: putfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      60: return

  public com.google.common.util.concurrent.ListenableFuture<?> statusFuture();
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
       4: aconst_null
       5: invokestatic  #49                 // Method com/google/common/base/Functions.constant:(Ljava/lang/Object;)Lcom/google/common/base/Function;
       8: invokestatic  #17                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
      11: invokevirtual #50                 // Method com/google/common/util/concurrent/FluentFuture.transform:(Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/FluentFuture;
      14: invokestatic  #14                 // Method com/google/common/util/concurrent/Futures.nonCancellationPropagating:(Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/ListenableFuture;
      17: areturn

  public <U> com.google.common.util.concurrent.ClosingFuture<U> transform(com.google.common.util.concurrent.ClosingFuture$ClosingFunction<? super V, U>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #51                 // class com/google/common/util/concurrent/ClosingFuture$4
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #52                 // Method com/google/common/util/concurrent/ClosingFuture$4."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$ClosingFunction;)V
      14: astore_3
      15: aload_0
      16: aload_0
      17: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      20: aload_3
      21: aload_2
      22: invokevirtual #53                 // Method com/google/common/util/concurrent/FluentFuture.transformAsync:(Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/FluentFuture;
      25: invokespecial #54                 // Method derive:(Lcom/google/common/util/concurrent/FluentFuture;)Lcom/google/common/util/concurrent/ClosingFuture;
      28: areturn

  public <U> com.google.common.util.concurrent.ClosingFuture<U> transformAsync(com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction<? super V, U>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #55                 // class com/google/common/util/concurrent/ClosingFuture$5
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #56                 // Method com/google/common/util/concurrent/ClosingFuture$5."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingFunction;)V
      14: astore_3
      15: aload_0
      16: aload_0
      17: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      20: aload_3
      21: aload_2
      22: invokevirtual #53                 // Method com/google/common/util/concurrent/FluentFuture.transformAsync:(Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/FluentFuture;
      25: invokespecial #54                 // Method derive:(Lcom/google/common/util/concurrent/FluentFuture;)Lcom/google/common/util/concurrent/ClosingFuture;
      28: areturn

  public static <V, U> com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction<V, U> withoutCloser(com.google.common.util.concurrent.AsyncFunction<V, U>);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #57                 // class com/google/common/util/concurrent/ClosingFuture$6
       8: dup
       9: aload_0
      10: invokespecial #58                 // Method com/google/common/util/concurrent/ClosingFuture$6."<init>":(Lcom/google/common/util/concurrent/AsyncFunction;)V
      13: areturn

  public <X extends java.lang.Throwable> com.google.common.util.concurrent.ClosingFuture<V> catching(java.lang.Class<X>, com.google.common.util.concurrent.ClosingFuture$ClosingFunction<? super X, ? extends V>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #59                 // Method catchingMoreGeneric:(Ljava/lang/Class;Lcom/google/common/util/concurrent/ClosingFuture$ClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;
       7: areturn

  private <X extends java.lang.Throwable, W extends V> com.google.common.util.concurrent.ClosingFuture<V> catchingMoreGeneric(java.lang.Class<X>, com.google.common.util.concurrent.ClosingFuture$ClosingFunction<? super X, W>, java.util.concurrent.Executor);
    Code:
       0: aload_2
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #60                 // class com/google/common/util/concurrent/ClosingFuture$7
       8: dup
       9: aload_0
      10: aload_2
      11: invokespecial #61                 // Method com/google/common/util/concurrent/ClosingFuture$7."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$ClosingFunction;)V
      14: astore        4
      16: aload_0
      17: aload_0
      18: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      21: aload_1
      22: aload         4
      24: aload_3
      25: invokevirtual #62                 // Method com/google/common/util/concurrent/FluentFuture.catchingAsync:(Ljava/lang/Class;Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/FluentFuture;
      28: invokespecial #54                 // Method derive:(Lcom/google/common/util/concurrent/FluentFuture;)Lcom/google/common/util/concurrent/ClosingFuture;
      31: areturn

  public <X extends java.lang.Throwable> com.google.common.util.concurrent.ClosingFuture<V> catchingAsync(java.lang.Class<X>, com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction<? super X, ? extends V>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #63                 // Method catchingAsyncMoreGeneric:(Ljava/lang/Class;Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;
       7: areturn

  private <X extends java.lang.Throwable, W extends V> com.google.common.util.concurrent.ClosingFuture<V> catchingAsyncMoreGeneric(java.lang.Class<X>, com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction<? super X, W>, java.util.concurrent.Executor);
    Code:
       0: aload_2
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #64                 // class com/google/common/util/concurrent/ClosingFuture$8
       8: dup
       9: aload_0
      10: aload_2
      11: invokespecial #65                 // Method com/google/common/util/concurrent/ClosingFuture$8."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingFunction;)V
      14: astore        4
      16: aload_0
      17: aload_0
      18: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      21: aload_1
      22: aload         4
      24: aload_3
      25: invokevirtual #62                 // Method com/google/common/util/concurrent/FluentFuture.catchingAsync:(Ljava/lang/Class;Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/FluentFuture;
      28: invokespecial #54                 // Method derive:(Lcom/google/common/util/concurrent/FluentFuture;)Lcom/google/common/util/concurrent/ClosingFuture;
      31: areturn

  public com.google.common.util.concurrent.FluentFuture<V> finishToFuture();
    Code:
       0: aload_0
       1: getstatic     #36                 // Field com/google/common/util/concurrent/ClosingFuture$State.OPEN:Lcom/google/common/util/concurrent/ClosingFuture$State;
       4: getstatic     #66                 // Field com/google/common/util/concurrent/ClosingFuture$State.WILL_CLOSE:Lcom/google/common/util/concurrent/ClosingFuture$State;
       7: invokespecial #67                 // Method compareAndUpdateState:(Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)Z
      10: ifeq          46
      13: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
      16: getstatic     #68                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      19: ldc           #69                 // String will close {0}
      21: aload_0
      22: invokevirtual #70                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      29: new           #71                 // class com/google/common/util/concurrent/ClosingFuture$9
      32: dup
      33: aload_0
      34: invokespecial #72                 // Method com/google/common/util/concurrent/ClosingFuture$9."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;)V
      37: invokestatic  #17                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
      40: invokevirtual #73                 // Method com/google/common/util/concurrent/FluentFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      43: goto          138
      46: getstatic     #74                 // Field com/google/common/util/concurrent/ClosingFuture$12.$SwitchMap$com$google$common$util$concurrent$ClosingFuture$State:[I
      49: aload_0
      50: getfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      53: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      56: checkcast     #76                 // class com/google/common/util/concurrent/ClosingFuture$State
      59: invokevirtual #77                 // Method com/google/common/util/concurrent/ClosingFuture$State.ordinal:()I
      62: iaload
      63: tableswitch   { // 1 to 6
                     1: 100
                     2: 110
                     3: 120
                     4: 120
                     5: 120
                     6: 130
               default: 138
          }
     100: new           #78                 // class java/lang/IllegalStateException
     103: dup
     104: ldc           #79                 // String Cannot call finishToFuture() after deriving another step
     106: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: new           #78                 // class java/lang/IllegalStateException
     113: dup
     114: ldc           #81                 // String Cannot call finishToFuture() after calling finishToValueAndCloser()
     116: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     119: athrow
     120: new           #78                 // class java/lang/IllegalStateException
     123: dup
     124: ldc           #82                 // String Cannot call finishToFuture() twice
     126: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: new           #83                 // class java/lang/AssertionError
     133: dup
     134: invokespecial #84                 // Method java/lang/AssertionError."<init>":()V
     137: athrow
     138: aload_0
     139: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
     142: areturn

  public void finishToValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer<? super V>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getstatic     #36                 // Field com/google/common/util/concurrent/ClosingFuture$State.OPEN:Lcom/google/common/util/concurrent/ClosingFuture$State;
       9: getstatic     #85                 // Field com/google/common/util/concurrent/ClosingFuture$State.WILL_CREATE_VALUE_AND_CLOSER:Lcom/google/common/util/concurrent/ClosingFuture$State;
      12: invokespecial #67                 // Method compareAndUpdateState:(Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)Z
      15: ifne          114
      18: getstatic     #74                 // Field com/google/common/util/concurrent/ClosingFuture$12.$SwitchMap$com$google$common$util$concurrent$ClosingFuture$State:[I
      21: aload_0
      22: getfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      25: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      28: checkcast     #76                 // class com/google/common/util/concurrent/ClosingFuture$State
      31: invokevirtual #77                 // Method com/google/common/util/concurrent/ClosingFuture$State.ordinal:()I
      34: iaload
      35: tableswitch   { // 1 to 6
                     1: 72
                     2: 92
                     3: 82
                     4: 82
                     5: 82
                     6: 102
               default: 102
          }
      72: new           #78                 // class java/lang/IllegalStateException
      75: dup
      76: ldc           #86                 // String Cannot call finishToValueAndCloser() after deriving another step
      78: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: new           #78                 // class java/lang/IllegalStateException
      85: dup
      86: ldc           #87                 // String Cannot call finishToValueAndCloser() after calling finishToFuture()
      88: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: new           #78                 // class java/lang/IllegalStateException
      95: dup
      96: ldc           #88                 // String Cannot call finishToValueAndCloser() twice
      98: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: new           #83                 // class java/lang/AssertionError
     105: dup
     106: aload_0
     107: getfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
     110: invokespecial #89                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     113: athrow
     114: aload_0
     115: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
     118: new           #90                 // class com/google/common/util/concurrent/ClosingFuture$10
     121: dup
     122: aload_0
     123: aload_1
     124: invokespecial #91                 // Method com/google/common/util/concurrent/ClosingFuture$10."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$ValueAndCloserConsumer;)V
     127: aload_2
     128: invokevirtual #73                 // Method com/google/common/util/concurrent/FluentFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
     131: return

  private static <C, V extends C> void provideValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer<C>, com.google.common.util.concurrent.ClosingFuture<V>);
    Code:
       0: aload_0
       1: new           #92                 // class com/google/common/util/concurrent/ClosingFuture$ValueAndCloser
       4: dup
       5: aload_1
       6: invokespecial #93                 // Method com/google/common/util/concurrent/ClosingFuture$ValueAndCloser."<init>":(Lcom/google/common/util/concurrent/ClosingFuture;)V
       9: invokeinterface #94,  2           // InterfaceMethod com/google/common/util/concurrent/ClosingFuture$ValueAndCloserConsumer.accept:(Lcom/google/common/util/concurrent/ClosingFuture$ValueAndCloser;)V
      14: return

  public boolean cancel(boolean);
    Code:
       0: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
       3: getstatic     #68                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       6: ldc           #95                 // String cancelling {0}
       8: aload_0
       9: invokevirtual #70                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      16: iload_1
      17: invokevirtual #96                 // Method com/google/common/util/concurrent/FluentFuture.cancel:(Z)Z
      20: istore_2
      21: iload_2
      22: ifeq          29
      25: aload_0
      26: invokespecial #8                  // Method close:()V
      29: iload_2
      30: ireturn

  private void close();
    Code:
       0: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
       3: getstatic     #68                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       6: ldc           #97                 // String closing {0}
       8: aload_0
       9: invokevirtual #70                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
      16: invokevirtual #98                 // Method com/google/common/util/concurrent/ClosingFuture$CloseableList.close:()V
      19: return

  private <U> com.google.common.util.concurrent.ClosingFuture<U> derive(com.google.common.util.concurrent.FluentFuture<U>);
    Code:
       0: new           #10                 // class com/google/common/util/concurrent/ClosingFuture
       3: dup
       4: aload_1
       5: invokespecial #3                  // Method "<init>":(Lcom/google/common/util/concurrent/ListenableFuture;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: getfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
      14: invokespecial #6                  // Method becomeSubsumedInto:(Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;)V
      17: aload_2
      18: areturn

  private void becomeSubsumedInto(com.google.common.util.concurrent.ClosingFuture$CloseableList);
    Code:
       0: aload_0
       1: getstatic     #36                 // Field com/google/common/util/concurrent/ClosingFuture$State.OPEN:Lcom/google/common/util/concurrent/ClosingFuture$State;
       4: getstatic     #99                 // Field com/google/common/util/concurrent/ClosingFuture$State.SUBSUMED:Lcom/google/common/util/concurrent/ClosingFuture$State;
       7: invokespecial #5                  // Method checkAndUpdateState:(Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)V
      10: aload_1
      11: aload_0
      12: getfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
      15: invokestatic  #17                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
      18: invokevirtual #100                // Method com/google/common/util/concurrent/ClosingFuture$CloseableList.add:(Ljava/lang/AutoCloseable;Ljava/util/concurrent/Executor;)V
      21: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #101                // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #102                // String state
       6: aload_0
       7: getfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      10: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      13: invokevirtual #103                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      16: aload_0
      17: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
      20: invokevirtual #104                // Method com/google/common/base/MoreObjects$ToStringHelper.addValue:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      23: invokevirtual #105                // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      26: areturn

  protected void finalize();
    Code:
       0: aload_0
       1: getfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #76                 // class com/google/common/util/concurrent/ClosingFuture$State
      10: getstatic     #36                 // Field com/google/common/util/concurrent/ClosingFuture$State.OPEN:Lcom/google/common/util/concurrent/ClosingFuture$State;
      13: invokevirtual #106                // Method com/google/common/util/concurrent/ClosingFuture$State.equals:(Ljava/lang/Object;)Z
      16: ifeq          36
      19: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #107                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      25: ldc           #108                // String Uh oh! An open ClosingFuture has leaked and will close: {0}
      27: aload_0
      28: invokevirtual #70                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_0
      32: invokevirtual #109                // Method finishToFuture:()Lcom/google/common/util/concurrent/FluentFuture;
      35: astore_1
      36: return

  private static void closeQuietly(java.lang.AutoCloseable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_1
       6: new           #110                // class com/google/common/util/concurrent/ClosingFuture$11
       9: dup
      10: aload_0
      11: invokespecial #111                // Method com/google/common/util/concurrent/ClosingFuture$11."<init>":(Ljava/lang/AutoCloseable;)V
      14: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      19: goto          65
      22: astore_2
      23: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
      26: getstatic     #113                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      29: invokevirtual #114                // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      32: ifeq          58
      35: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
      38: getstatic     #113                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      41: ldc           #115                // String while submitting close to %s; will close inline
      43: iconst_1
      44: anewarray     #116                // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_1
      50: aastore
      51: invokestatic  #117                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      54: aload_2
      55: invokevirtual #118                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      58: aload_0
      59: invokestatic  #17                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
      62: invokestatic  #1                  // Method closeQuietly:(Ljava/lang/AutoCloseable;Ljava/util/concurrent/Executor;)V
      65: return
    Exception table:
       from    to  target type
           5    19    22   Class java/util/concurrent/RejectedExecutionException

  private void checkAndUpdateState(com.google.common.util.concurrent.ClosingFuture$State, com.google.common.util.concurrent.ClosingFuture$State);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #67                 // Method compareAndUpdateState:(Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)Z
       6: ldc           #119                // String Expected state to be %s, but it was %s
       8: aload_1
       9: aload_2
      10: invokestatic  #120                // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      13: return

  private boolean compareAndUpdateState(com.google.common.util.concurrent.ClosingFuture$State, com.google.common.util.concurrent.ClosingFuture$State);
    Code:
       0: aload_0
       1: getfield      #38                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: aload_2
       6: invokevirtual #121                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ireturn

  java.util.concurrent.CountDownLatch whenClosedCountDown();
    Code:
       0: aload_0
       1: getfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
       4: invokevirtual #122                // Method com/google/common/util/concurrent/ClosingFuture$CloseableList.whenClosedCountDown:()Ljava/util/concurrent/CountDownLatch;
       7: areturn

  static com.google.common.util.concurrent.FluentFuture access$000(com.google.common.util.concurrent.ClosingFuture);
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Lcom/google/common/util/concurrent/FluentFuture;
       4: areturn

  static void access$100(com.google.common.util.concurrent.ClosingFuture);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method close:()V
       4: return

  static com.google.common.util.concurrent.ClosingFuture$CloseableList access$200(com.google.common.util.concurrent.ClosingFuture);
    Code:
       0: aload_0
       1: getfield      #7                  // Field closeables:Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;
       4: areturn

  static void access$1000(com.google.common.util.concurrent.ClosingFuture, com.google.common.util.concurrent.ClosingFuture$CloseableList);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method becomeSubsumedInto:(Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;)V
       5: return

  static void access$1100(com.google.common.util.concurrent.ClosingFuture, com.google.common.util.concurrent.ClosingFuture$State, com.google.common.util.concurrent.ClosingFuture$State);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method checkAndUpdateState:(Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)V
       6: return

  static void access$1200(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer, com.google.common.util.concurrent.ClosingFuture);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method provideValueAndCloser:(Lcom/google/common/util/concurrent/ClosingFuture$ValueAndCloserConsumer;Lcom/google/common/util/concurrent/ClosingFuture;)V
       5: return

  com.google.common.util.concurrent.ClosingFuture(com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.ClosingFuture$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lcom/google/common/util/concurrent/ListenableFuture;)V
       5: return

  static java.util.logging.Logger access$3200();
    Code:
       0: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
       3: areturn

  static void access$3300(java.lang.AutoCloseable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method closeQuietly:(Ljava/lang/AutoCloseable;Ljava/util/concurrent/Executor;)V
       5: return

  static {};
    Code:
       0: ldc           #10                 // class com/google/common/util/concurrent/ClosingFuture
       2: invokevirtual #123                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #124                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #2                  // Field logger:Ljava/util/logging/Logger;
      11: return
}
