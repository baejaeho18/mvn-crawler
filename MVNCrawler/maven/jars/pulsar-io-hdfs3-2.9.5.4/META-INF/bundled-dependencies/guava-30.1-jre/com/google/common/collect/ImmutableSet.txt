Compiled from "ImmutableSet.java"
public abstract class com.google.common.collect.ImmutableSet<E> extends com.google.common.collect.ImmutableCollection<E> implements java.util.Set<E> {
  static final int SPLITERATOR_CHARACTERISTICS;

  private transient com.google.common.collect.ImmutableList<E> asList;

  static final int MAX_TABLE_SIZE;

  private static final double DESIRED_LOAD_FACTOR;

  private static final int CUTOFF;

  static final double HASH_FLOODING_FPP;

  static final int MAX_RUN_MULTIPLIER;

  public static <E> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableSet<E>> toImmutableSet();
    Code:
       0: invokestatic  #6                  // Method com/google/common/collect/CollectCollectors.toImmutableSet:()Ljava/util/stream/Collector;
       3: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> of();
    Code:
       0: getstatic     #7                  // Field com/google/common/collect/RegularImmutableSet.EMPTY:Lcom/google/common/collect/RegularImmutableSet;
       3: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> of(E);
    Code:
       0: new           #8                  // class com/google/common/collect/SingletonImmutableSet
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method com/google/common/collect/SingletonImmutableSet."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> of(E, E);
    Code:
       0: iconst_2
       1: iconst_2
       2: iconst_2
       3: anewarray     #10                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: dup
      11: iconst_1
      12: aload_1
      13: aastore
      14: invokestatic  #11                 // Method construct:(II[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      17: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> of(E, E, E);
    Code:
       0: iconst_3
       1: iconst_3
       2: iconst_3
       3: anewarray     #10                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: dup
      11: iconst_1
      12: aload_1
      13: aastore
      14: dup
      15: iconst_2
      16: aload_2
      17: aastore
      18: invokestatic  #11                 // Method construct:(II[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      21: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> of(E, E, E, E);
    Code:
       0: iconst_4
       1: iconst_4
       2: iconst_4
       3: anewarray     #10                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: dup
      11: iconst_1
      12: aload_1
      13: aastore
      14: dup
      15: iconst_2
      16: aload_2
      17: aastore
      18: dup
      19: iconst_3
      20: aload_3
      21: aastore
      22: invokestatic  #11                 // Method construct:(II[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      25: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> of(E, E, E, E, E);
    Code:
       0: iconst_5
       1: iconst_5
       2: iconst_5
       3: anewarray     #10                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: dup
      11: iconst_1
      12: aload_1
      13: aastore
      14: dup
      15: iconst_2
      16: aload_2
      17: aastore
      18: dup
      19: iconst_3
      20: aload_3
      21: aastore
      22: dup
      23: iconst_4
      24: aload         4
      26: aastore
      27: invokestatic  #11                 // Method construct:(II[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      30: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> of(E, E, E, E, E, E, E...);
    Code:
       0: aload         6
       2: arraylength
       3: ldc           #13                 // int 2147483641
       5: if_icmpgt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #14                 // String the total number of elements must fit in an int
      15: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      18: bipush        6
      20: istore        7
      22: bipush        6
      24: aload         6
      26: arraylength
      27: iadd
      28: anewarray     #10                 // class java/lang/Object
      31: astore        8
      33: aload         8
      35: iconst_0
      36: aload_0
      37: aastore
      38: aload         8
      40: iconst_1
      41: aload_1
      42: aastore
      43: aload         8
      45: iconst_2
      46: aload_2
      47: aastore
      48: aload         8
      50: iconst_3
      51: aload_3
      52: aastore
      53: aload         8
      55: iconst_4
      56: aload         4
      58: aastore
      59: aload         8
      61: iconst_5
      62: aload         5
      64: aastore
      65: aload         6
      67: iconst_0
      68: aload         8
      70: bipush        6
      72: aload         6
      74: arraylength
      75: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: aload         8
      80: arraylength
      81: aload         8
      83: arraylength
      84: aload         8
      86: invokestatic  #11                 // Method construct:(II[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      89: areturn

  private static <E> com.google.common.collect.ImmutableSet<E> constructUnknownDuplication(int, java.lang.Object...);
    Code:
       0: iload_0
       1: iconst_4
       2: iload_0
       3: getstatic     #18                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
       6: invokestatic  #19                 // Method com/google/common/math/IntMath.sqrt:(ILjava/math/RoundingMode;)I
       9: invokestatic  #20                 // Method java/lang/Math.max:(II)I
      12: aload_1
      13: invokestatic  #11                 // Method construct:(II[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      16: areturn

  private static <E> com.google.common.collect.ImmutableSet<E> construct(int, int, java.lang.Object...);
    Code:
       0: iload_0
       1: lookupswitch  { // 2
                     0: 28
                     1: 32
               default: 41
          }
      28: invokestatic  #21                 // Method of:()Lcom/google/common/collect/ImmutableSet;
      31: areturn
      32: aload_2
      33: iconst_0
      34: aaload
      35: astore_3
      36: aload_3
      37: invokestatic  #22                 // Method of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      40: areturn
      41: new           #23                 // class com/google/common/collect/ImmutableSet$RegularSetBuilderImpl
      44: dup
      45: iload_1
      46: invokespecial #24                 // Method com/google/common/collect/ImmutableSet$RegularSetBuilderImpl."<init>":(I)V
      49: astore        4
      51: iconst_0
      52: istore        5
      54: iload         5
      56: iload_0
      57: if_icmpge     84
      60: aload_2
      61: iload         5
      63: aaload
      64: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      67: astore        6
      69: aload         4
      71: aload         6
      73: invokevirtual #26                 // Method com/google/common/collect/ImmutableSet$SetBuilderImpl.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;
      76: astore        4
      78: iinc          5, 1
      81: goto          54
      84: aload         4
      86: invokevirtual #27                 // Method com/google/common/collect/ImmutableSet$SetBuilderImpl.review:()Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;
      89: invokevirtual #28                 // Method com/google/common/collect/ImmutableSet$SetBuilderImpl.build:()Lcom/google/common/collect/ImmutableSet;
      92: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> copyOf(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: instanceof    #4                  // class com/google/common/collect/ImmutableSet
       4: ifeq          31
       7: aload_0
       8: instanceof    #29                 // class java/util/SortedSet
      11: ifne          31
      14: aload_0
      15: checkcast     #4                  // class com/google/common/collect/ImmutableSet
      18: astore_1
      19: aload_1
      20: invokevirtual #30                 // Method isPartialView:()Z
      23: ifne          28
      26: aload_1
      27: areturn
      28: goto          46
      31: aload_0
      32: instanceof    #31                 // class java/util/EnumSet
      35: ifeq          46
      38: aload_0
      39: checkcast     #31                 // class java/util/EnumSet
      42: invokestatic  #32                 // Method copyOfEnumSet:(Ljava/util/EnumSet;)Lcom/google/common/collect/ImmutableSet;
      45: areturn
      46: aload_0
      47: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      52: astore_1
      53: aload_0
      54: instanceof    #34                 // class java/util/Set
      57: ifeq          69
      60: aload_1
      61: arraylength
      62: aload_1
      63: arraylength
      64: aload_1
      65: invokestatic  #11                 // Method construct:(II[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      68: areturn
      69: aload_1
      70: arraylength
      71: aload_1
      72: invokestatic  #35                 // Method constructUnknownDuplication:(I[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      75: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> copyOf(java.lang.Iterable<? extends E>);
    Code:
       0: aload_0
       1: instanceof    #36                 // class java/util/Collection
       4: ifeq          17
       7: aload_0
       8: checkcast     #36                 // class java/util/Collection
      11: invokestatic  #37                 // Method copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSet;
      14: goto          26
      17: aload_0
      18: invokeinterface #38,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      23: invokestatic  #39                 // Method copyOf:(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableSet;
      26: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> copyOf(java.util.Iterator<? extends E>);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifne          13
       9: invokestatic  #21                 // Method of:()Lcom/google/common/collect/ImmutableSet;
      12: areturn
      13: aload_0
      14: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      19: astore_1
      20: aload_0
      21: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifne          34
      29: aload_1
      30: invokestatic  #22                 // Method of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      33: areturn
      34: new           #42                 // class com/google/common/collect/ImmutableSet$Builder
      37: dup
      38: invokespecial #43                 // Method com/google/common/collect/ImmutableSet$Builder."<init>":()V
      41: aload_1
      42: invokevirtual #44                 // Method com/google/common/collect/ImmutableSet$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$Builder;
      45: aload_0
      46: invokevirtual #45                 // Method com/google/common/collect/ImmutableSet$Builder.addAll:(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableSet$Builder;
      49: invokevirtual #46                 // Method com/google/common/collect/ImmutableSet$Builder.build:()Lcom/google/common/collect/ImmutableSet;
      52: areturn

  public static <E> com.google.common.collect.ImmutableSet<E> copyOf(E[]);
    Code:
       0: aload_0
       1: arraylength
       2: lookupswitch  { // 2
                     0: 28
                     1: 32
               default: 39
          }
      28: invokestatic  #21                 // Method of:()Lcom/google/common/collect/ImmutableSet;
      31: areturn
      32: aload_0
      33: iconst_0
      34: aaload
      35: invokestatic  #22                 // Method of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      38: areturn
      39: aload_0
      40: arraylength
      41: aload_0
      42: invokevirtual #47                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      45: checkcast     #48                 // class "[Ljava/lang/Object;"
      48: invokestatic  #35                 // Method constructUnknownDuplication:(I[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      51: areturn

  private static com.google.common.collect.ImmutableSet copyOfEnumSet(java.util.EnumSet);
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method java/util/EnumSet.copyOf:(Ljava/util/EnumSet;)Ljava/util/EnumSet;
       4: invokestatic  #50                 // Method com/google/common/collect/ImmutableEnumSet.asImmutable:(Ljava/util/EnumSet;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  com.google.common.collect.ImmutableSet();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method com/google/common/collect/ImmutableCollection."<init>":()V
       4: return

  boolean isHashCodeFast();
    Code:
       0: iconst_0
       1: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #4                  // class com/google/common/collect/ImmutableSet
      11: ifeq          44
      14: aload_0
      15: invokevirtual #52                 // Method isHashCodeFast:()Z
      18: ifeq          44
      21: aload_1
      22: checkcast     #4                  // class com/google/common/collect/ImmutableSet
      25: invokevirtual #52                 // Method isHashCodeFast:()Z
      28: ifeq          44
      31: aload_0
      32: invokevirtual #53                 // Method hashCode:()I
      35: aload_1
      36: invokevirtual #54                 // Method java/lang/Object.hashCode:()I
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: aload_1
      46: invokestatic  #55                 // Method com/google/common/collect/Sets.equalsImpl:(Ljava/util/Set;Ljava/lang/Object;)Z
      49: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method com/google/common/collect/Sets.hashCodeImpl:(Ljava/util/Set;)I
       4: ireturn

  public abstract com.google.common.collect.UnmodifiableIterator<E> iterator();

  public com.google.common.collect.ImmutableList<E> asList();
    Code:
       0: aload_0
       1: getfield      #57                 // Field asList:Lcom/google/common/collect/ImmutableList;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: invokevirtual #58                 // Method createAsList:()Lcom/google/common/collect/ImmutableList;
      14: dup_x1
      15: putfield      #57                 // Field asList:Lcom/google/common/collect/ImmutableList;
      18: goto          22
      21: aload_1
      22: areturn

  com.google.common.collect.ImmutableList<E> createAsList();
    Code:
       0: new           #59                 // class com/google/common/collect/RegularImmutableAsList
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #60                 // Method toArray:()[Ljava/lang/Object;
       9: invokespecial #61                 // Method com/google/common/collect/RegularImmutableAsList."<init>":(Lcom/google/common/collect/ImmutableCollection;[Ljava/lang/Object;)V
      12: areturn

  java.lang.Object writeReplace();
    Code:
       0: new           #62                 // class com/google/common/collect/ImmutableSet$SerializedForm
       3: dup
       4: aload_0
       5: invokevirtual #60                 // Method toArray:()[Ljava/lang/Object;
       8: invokespecial #63                 // Method com/google/common/collect/ImmutableSet$SerializedForm."<init>":([Ljava/lang/Object;)V
      11: areturn

  public static <E> com.google.common.collect.ImmutableSet$Builder<E> builder();
    Code:
       0: new           #42                 // class com/google/common/collect/ImmutableSet$Builder
       3: dup
       4: invokespecial #43                 // Method com/google/common/collect/ImmutableSet$Builder."<init>":()V
       7: areturn

  public static <E> com.google.common.collect.ImmutableSet$Builder<E> builderWithExpectedSize(int);
    Code:
       0: iload_0
       1: ldc           #64                 // String expectedSize
       3: invokestatic  #65                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
       6: pop
       7: new           #42                 // class com/google/common/collect/ImmutableSet$Builder
      10: dup
      11: iload_0
      12: invokespecial #66                 // Method com/google/common/collect/ImmutableSet$Builder."<init>":(I)V
      15: areturn

  static java.lang.Object[] rebuildHashTable(int, java.lang.Object[], int);
    Code:
       0: iload_0
       1: anewarray     #10                 // class java/lang/Object
       4: astore_3
       5: aload_3
       6: arraylength
       7: iconst_1
       8: isub
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload_2
      17: if_icmpge     75
      20: aload_1
      21: iload         5
      23: aaload
      24: astore        6
      26: aload         6
      28: invokevirtual #54                 // Method java/lang/Object.hashCode:()I
      31: invokestatic  #67                 // Method com/google/common/collect/Hashing.smear:(I)I
      34: istore        7
      36: iload         7
      38: istore        8
      40: iload         8
      42: iload         4
      44: iand
      45: istore        9
      47: aload_3
      48: iload         9
      50: aaload
      51: ifnonnull     63
      54: aload_3
      55: iload         9
      57: aload         6
      59: aastore
      60: goto          69
      63: iinc          8, 1
      66: goto          40
      69: iinc          5, 1
      72: goto          14
      75: aload_3
      76: areturn

  static int chooseTableSize(int);
    Code:
       0: iload_0
       1: iconst_2
       2: invokestatic  #20                 // Method java/lang/Math.max:(II)I
       5: istore_0
       6: iload_0
       7: ldc           #68                 // int 751619276
       9: if_icmpge     42
      12: iload_0
      13: iconst_1
      14: isub
      15: invokestatic  #69                 // Method java/lang/Integer.highestOneBit:(I)I
      18: iconst_1
      19: ishl
      20: istore_1
      21: iload_1
      22: i2d
      23: ldc2_w        #70                 // double 0.7d
      26: dmul
      27: iload_0
      28: i2d
      29: dcmpg
      30: ifge          40
      33: iload_1
      34: iconst_1
      35: ishl
      36: istore_1
      37: goto          21
      40: iload_1
      41: ireturn
      42: iload_0
      43: ldc           #72                 // int 1073741824
      45: if_icmpge     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ldc           #73                 // String collection too large
      55: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      58: ldc           #72                 // int 1073741824
      60: ireturn

  static boolean hashFloodingDetected(java.lang.Object[]);
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #5                  // Method maxRunBeforeFallback:(I)I
       5: istore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: arraylength
      11: if_icmpge     33
      14: aload_0
      15: iload_2
      16: aaload
      17: ifnonnull     23
      20: goto          33
      23: iinc          2, 1
      26: iload_2
      27: iload_1
      28: if_icmple     8
      31: iconst_1
      32: ireturn
      33: aload_0
      34: arraylength
      35: iconst_1
      36: isub
      37: istore_3
      38: iload_3
      39: iload_2
      40: if_icmple     72
      43: aload_0
      44: iload_3
      45: aaload
      46: ifnonnull     52
      49: goto          72
      52: iload_2
      53: aload_0
      54: arraylength
      55: iconst_1
      56: isub
      57: iload_3
      58: isub
      59: iadd
      60: iload_1
      61: if_icmple     66
      64: iconst_1
      65: ireturn
      66: iinc          3, -1
      69: goto          38
      72: iload_1
      73: iconst_2
      74: idiv
      75: istore        4
      77: iload_2
      78: iconst_1
      79: iadd
      80: istore        5
      82: iload         5
      84: iload         4
      86: iadd
      87: iload_3
      88: if_icmpgt     132
      91: iconst_0
      92: istore        6
      94: iload         6
      96: iload         4
      98: if_icmpge     120
     101: aload_0
     102: iload         5
     104: iload         6
     106: iadd
     107: aaload
     108: ifnonnull     114
     111: goto          122
     114: iinc          6, 1
     117: goto          94
     120: iconst_1
     121: ireturn
     122: iload         5
     124: iload         4
     126: iadd
     127: istore        5
     129: goto          82
     132: iconst_0
     133: ireturn

  private static int maxRunBeforeFallback(int);
    Code:
       0: bipush        13
       2: iload_0
       3: getstatic     #74                 // Field java/math/RoundingMode.UNNECESSARY:Ljava/math/RoundingMode;
       6: invokestatic  #75                 // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
       9: imul
      10: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       4: areturn

  static int access$000(int);
    Code:
       0: iload_0
       1: invokestatic  #5                  // Method maxRunBeforeFallback:(I)I
       4: ireturn
}
