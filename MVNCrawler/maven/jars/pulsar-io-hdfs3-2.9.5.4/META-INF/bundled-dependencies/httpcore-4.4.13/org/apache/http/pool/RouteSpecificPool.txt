Compiled from "RouteSpecificPool.java"
abstract class org.apache.http.pool.RouteSpecificPool<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> {
  private final T route;

  private final java.util.Set<E> leased;

  private final java.util.LinkedList<E> available;

  private final java.util.LinkedList<java.util.concurrent.Future<E>> pending;

  org.apache.http.pool.RouteSpecificPool(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field route:Ljava/lang/Object;
       9: aload_0
      10: new           #3                  // class java/util/HashSet
      13: dup
      14: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      17: putfield      #5                  // Field leased:Ljava/util/Set;
      20: aload_0
      21: new           #6                  // class java/util/LinkedList
      24: dup
      25: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      28: putfield      #8                  // Field available:Ljava/util/LinkedList;
      31: aload_0
      32: new           #6                  // class java/util/LinkedList
      35: dup
      36: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      39: putfield      #9                  // Field pending:Ljava/util/LinkedList;
      42: return

  protected abstract E createEntry(C);

  public final T getRoute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field route:Ljava/lang/Object;
       4: areturn

  public int getLeasedCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field leased:Ljava/util/Set;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public int getPendingCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       4: invokevirtual #11                 // Method java/util/LinkedList.size:()I
       7: ireturn

  public int getAvailableCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #11                 // Method java/util/LinkedList.size:()I
       7: ireturn

  public int getAllocatedCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #11                 // Method java/util/LinkedList.size:()I
       7: aload_0
       8: getfield      #5                  // Field leased:Ljava/util/Set;
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Set.size:()I
      16: iadd
      17: ireturn

  public E getFree(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #12                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifne          130
      10: aload_1
      11: ifnull        74
      14: aload_0
      15: getfield      #8                  // Field available:Ljava/util/LinkedList;
      18: invokevirtual #13                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          74
      31: aload_2
      32: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #16                 // class org/apache/http/pool/PoolEntry
      40: astore_3
      41: aload_1
      42: aload_3
      43: invokevirtual #17                 // Method org/apache/http/pool/PoolEntry.getState:()Ljava/lang/Object;
      46: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          71
      52: aload_2
      53: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.remove:()V
      58: aload_0
      59: getfield      #5                  // Field leased:Ljava/util/Set;
      62: aload_3
      63: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_3
      70: areturn
      71: goto          22
      74: aload_0
      75: getfield      #8                  // Field available:Ljava/util/LinkedList;
      78: invokevirtual #13                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      81: astore_2
      82: aload_2
      83: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          130
      91: aload_2
      92: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #16                 // class org/apache/http/pool/PoolEntry
     100: astore_3
     101: aload_3
     102: invokevirtual #17                 // Method org/apache/http/pool/PoolEntry.getState:()Ljava/lang/Object;
     105: ifnonnull     127
     108: aload_2
     109: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.remove:()V
     114: aload_0
     115: getfield      #5                  // Field leased:Ljava/util/Set;
     118: aload_3
     119: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload_3
     126: areturn
     127: goto          82
     130: aconst_null
     131: areturn

  public E getLastUsed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #12                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifeq          14
      10: aconst_null
      11: goto          24
      14: aload_0
      15: getfield      #8                  // Field available:Ljava/util/LinkedList;
      18: invokevirtual #21                 // Method java/util/LinkedList.getLast:()Ljava/lang/Object;
      21: checkcast     #16                 // class org/apache/http/pool/PoolEntry
      24: areturn

  public boolean remove(E);
    Code:
       0: aload_1
       1: ldc           #22                 // String Pool entry
       3: invokestatic  #23                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #8                  // Field available:Ljava/util/LinkedList;
      11: aload_1
      12: invokevirtual #24                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      15: ifne          33
      18: aload_0
      19: getfield      #5                  // Field leased:Ljava/util/Set;
      22: aload_1
      23: invokeinterface #25,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: iconst_1
      34: ireturn

  public void free(E, boolean);
    Code:
       0: aload_1
       1: ldc           #22                 // String Pool entry
       3: invokestatic  #23                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field leased:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #25,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: istore_3
      18: iload_3
      19: ldc           #26                 // String Entry %s has not been leased from this pool
      21: aload_1
      22: invokestatic  #27                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      25: iload_2
      26: ifeq          37
      29: aload_0
      30: getfield      #8                  // Field available:Ljava/util/LinkedList;
      33: aload_1
      34: invokevirtual #28                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      37: return

  public E add(C);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method createEntry:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
       5: astore_2
       6: aload_0
       7: getfield      #5                  // Field leased:Ljava/util/Set;
      10: aload_2
      11: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_2
      18: areturn

  public void queue(java.util.concurrent.Future<E>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       9: aload_1
      10: invokevirtual #30                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public java.util.concurrent.Future<E> nextPending();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       4: invokevirtual #31                 // Method java/util/LinkedList.poll:()Ljava/lang/Object;
       7: checkcast     #32                 // class java/util/concurrent/Future
      10: areturn

  public void unqueue(java.util.concurrent.Future<E>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       9: aload_1
      10: invokevirtual #24                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       4: invokevirtual #33                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          38
      17: aload_1
      18: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #32                 // class java/util/concurrent/Future
      26: astore_2
      27: aload_2
      28: iconst_1
      29: invokeinterface #34,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      34: pop
      35: goto          8
      38: aload_0
      39: getfield      #9                  // Field pending:Ljava/util/LinkedList;
      42: invokevirtual #35                 // Method java/util/LinkedList.clear:()V
      45: aload_0
      46: getfield      #8                  // Field available:Ljava/util/LinkedList;
      49: invokevirtual #33                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      52: astore_1
      53: aload_1
      54: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          79
      62: aload_1
      63: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #16                 // class org/apache/http/pool/PoolEntry
      71: astore_2
      72: aload_2
      73: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
      76: goto          53
      79: aload_0
      80: getfield      #8                  // Field available:Ljava/util/LinkedList;
      83: invokevirtual #35                 // Method java/util/LinkedList.clear:()V
      86: aload_0
      87: getfield      #5                  // Field leased:Ljava/util/Set;
      90: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      95: astore_1
      96: aload_1
      97: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          122
     105: aload_1
     106: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #16                 // class org/apache/http/pool/PoolEntry
     114: astore_2
     115: aload_2
     116: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
     119: goto          96
     122: aload_0
     123: getfield      #5                  // Field leased:Ljava/util/Set;
     126: invokeinterface #38,  1           // InterfaceMethod java/util/Set.clear:()V
     131: return

  public java.lang.String toString();
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #41                 // String [route:
      11: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field route:Ljava/lang/Object;
      20: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #44                 // String ][leased:
      27: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #5                  // Field leased:Ljava/util/Set;
      36: invokeinterface #10,  1           // InterfaceMethod java/util/Set.size:()I
      41: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: pop
      45: aload_1
      46: ldc           #46                 // String ][available:
      48: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: aload_0
      54: getfield      #8                  // Field available:Ljava/util/LinkedList;
      57: invokevirtual #11                 // Method java/util/LinkedList.size:()I
      60: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: pop
      64: aload_1
      65: ldc           #47                 // String ][pending:
      67: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_1
      72: aload_0
      73: getfield      #9                  // Field pending:Ljava/util/LinkedList;
      76: invokevirtual #11                 // Method java/util/LinkedList.size:()I
      79: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: pop
      83: aload_1
      84: ldc           #48                 // String ]
      86: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_1
      91: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn
}
