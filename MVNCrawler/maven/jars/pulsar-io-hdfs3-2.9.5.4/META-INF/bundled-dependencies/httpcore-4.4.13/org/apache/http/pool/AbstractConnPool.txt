Compiled from "AbstractConnPool.java"
public abstract class org.apache.http.pool.AbstractConnPool<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> implements org.apache.http.pool.ConnPool<T, E>, org.apache.http.pool.ConnPoolControl<T> {
  private final java.util.concurrent.locks.Lock lock;

  private final java.util.concurrent.locks.Condition condition;

  private final org.apache.http.pool.ConnFactory<T, C> connFactory;

  private final java.util.Map<T, org.apache.http.pool.RouteSpecificPool<T, C, E>> routeToPool;

  private final java.util.Set<E> leased;

  private final java.util.LinkedList<E> available;

  private final java.util.LinkedList<java.util.concurrent.Future<E>> pending;

  private final java.util.Map<T, java.lang.Integer> maxPerRoute;

  private volatile boolean isShutDown;

  private volatile int defaultMaxPerRoute;

  private volatile int maxTotal;

  private volatile int validateAfterInactivity;

  public org.apache.http.pool.AbstractConnPool(org.apache.http.pool.ConnFactory<T, C>, int, int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #7                  // String Connection factory
       8: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #9                  // class org/apache/http/pool/ConnFactory
      14: putfield      #10                 // Field connFactory:Lorg/apache/http/pool/ConnFactory;
      17: aload_0
      18: iload_2
      19: ldc           #11                 // String Max per route value
      21: invokestatic  #12                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      24: putfield      #13                 // Field defaultMaxPerRoute:I
      27: aload_0
      28: iload_3
      29: ldc           #14                 // String Max total value
      31: invokestatic  #12                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      34: putfield      #15                 // Field maxTotal:I
      37: aload_0
      38: new           #16                 // class java/util/concurrent/locks/ReentrantLock
      41: dup
      42: invokespecial #17                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      45: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      48: aload_0
      49: aload_0
      50: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      53: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      58: putfield      #4                  // Field condition:Ljava/util/concurrent/locks/Condition;
      61: aload_0
      62: new           #19                 // class java/util/HashMap
      65: dup
      66: invokespecial #20                 // Method java/util/HashMap."<init>":()V
      69: putfield      #21                 // Field routeToPool:Ljava/util/Map;
      72: aload_0
      73: new           #22                 // class java/util/HashSet
      76: dup
      77: invokespecial #23                 // Method java/util/HashSet."<init>":()V
      80: putfield      #24                 // Field leased:Ljava/util/Set;
      83: aload_0
      84: new           #25                 // class java/util/LinkedList
      87: dup
      88: invokespecial #26                 // Method java/util/LinkedList."<init>":()V
      91: putfield      #27                 // Field available:Ljava/util/LinkedList;
      94: aload_0
      95: new           #25                 // class java/util/LinkedList
      98: dup
      99: invokespecial #26                 // Method java/util/LinkedList."<init>":()V
     102: putfield      #28                 // Field pending:Ljava/util/LinkedList;
     105: aload_0
     106: new           #19                 // class java/util/HashMap
     109: dup
     110: invokespecial #20                 // Method java/util/HashMap."<init>":()V
     113: putfield      #29                 // Field maxPerRoute:Ljava/util/Map;
     116: return

  protected abstract E createEntry(T, C);

  protected void onLease(E);
    Code:
       0: return

  protected void onRelease(E);
    Code:
       0: return

  protected void onReuse(E);
    Code:
       0: return

  protected boolean validate(E);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #30                 // Field isShutDown:Z
       4: ireturn

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field isShutDown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #30                 // Field isShutDown:Z
      13: aload_0
      14: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      17: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: getfield      #27                 // Field available:Ljava/util/LinkedList;
      26: invokevirtual #32                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          56
      39: aload_1
      40: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #35                 // class org/apache/http/pool/PoolEntry
      48: astore_2
      49: aload_2
      50: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
      53: goto          30
      56: aload_0
      57: getfield      #24                 // Field leased:Ljava/util/Set;
      60: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore_1
      66: aload_1
      67: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          92
      75: aload_1
      76: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #35                 // class org/apache/http/pool/PoolEntry
      84: astore_2
      85: aload_2
      86: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
      89: goto          66
      92: aload_0
      93: getfield      #21                 // Field routeToPool:Ljava/util/Map;
      96: invokeinterface #38,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     101: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     106: astore_1
     107: aload_1
     108: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          133
     116: aload_1
     117: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #40                 // class org/apache/http/pool/RouteSpecificPool
     125: astore_2
     126: aload_2
     127: invokevirtual #41                 // Method org/apache/http/pool/RouteSpecificPool.shutdown:()V
     130: goto          107
     133: aload_0
     134: getfield      #21                 // Field routeToPool:Ljava/util/Map;
     137: invokeinterface #42,  1           // InterfaceMethod java/util/Map.clear:()V
     142: aload_0
     143: getfield      #24                 // Field leased:Ljava/util/Set;
     146: invokeinterface #43,  1           // InterfaceMethod java/util/Set.clear:()V
     151: aload_0
     152: getfield      #27                 // Field available:Ljava/util/LinkedList;
     155: invokevirtual #44                 // Method java/util/LinkedList.clear:()V
     158: aload_0
     159: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     162: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     167: goto          182
     170: astore_3
     171: aload_0
     172: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     175: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     180: aload_3
     181: athrow
     182: return
    Exception table:
       from    to  target type
          22   158   170   any
         170   171   170   any

  private org.apache.http.pool.RouteSpecificPool<T, C, E> getPool(T);
    Code:
       0: aload_0
       1: getfield      #21                 // Field routeToPool:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #40                 // class org/apache/http/pool/RouteSpecificPool
      13: astore_2
      14: aload_2
      15: ifnonnull     41
      18: new           #47                 // class org/apache/http/pool/AbstractConnPool$1
      21: dup
      22: aload_0
      23: aload_1
      24: aload_1
      25: invokespecial #48                 // Method org/apache/http/pool/AbstractConnPool$1."<init>":(Lorg/apache/http/pool/AbstractConnPool;Ljava/lang/Object;Ljava/lang/Object;)V
      28: astore_2
      29: aload_0
      30: getfield      #21                 // Field routeToPool:Ljava/util/Map;
      33: aload_1
      34: aload_2
      35: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_2
      42: areturn

  private static java.lang.Exception operationAborted();
    Code:
       0: new           #50                 // class java/util/concurrent/CancellationException
       3: dup
       4: ldc           #51                 // String Operation aborted
       6: invokespecial #52                 // Method java/util/concurrent/CancellationException."<init>":(Ljava/lang/String;)V
       9: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object, org.apache.http.concurrent.FutureCallback<E>);
    Code:
       0: aload_1
       1: ldc           #53                 // String Route
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #30                 // Field isShutDown:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #54                 // String Connection pool shut down
      21: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      24: new           #56                 // class org/apache/http/pool/AbstractConnPool$2
      27: dup
      28: aload_0
      29: aload_3
      30: aload_1
      31: aload_2
      32: invokespecial #57                 // Method org/apache/http/pool/AbstractConnPool$2."<init>":(Lorg/apache/http/pool/AbstractConnPool;Lorg/apache/http/concurrent/FutureCallback;Ljava/lang/Object;Ljava/lang/Object;)V
      35: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #58                 // Method lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
       7: areturn

  private E getPoolEntryBlocking(T, java.lang.Object, long, java.util.concurrent.TimeUnit, java.util.concurrent.Future<E>) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aconst_null
       1: astore        7
       3: lload_3
       4: lconst_0
       5: lcmp
       6: ifle          28
       9: new           #59                 // class java/util/Date
      12: dup
      13: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
      16: aload         5
      18: lload_3
      19: invokevirtual #61                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      22: ladd
      23: invokespecial #62                 // Method java/util/Date."<init>":(J)V
      26: astore        7
      28: aload_0
      29: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      37: aload_0
      38: aload_1
      39: invokespecial #63                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      42: astore        8
      44: aload_0
      45: getfield      #30                 // Field isShutDown:Z
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ldc           #54                 // String Connection pool shut down
      58: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      61: aload         6
      63: invokeinterface #64,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      68: ifeq          82
      71: new           #65                 // class java/util/concurrent/ExecutionException
      74: dup
      75: invokestatic  #3                  // Method operationAborted:()Ljava/lang/Exception;
      78: invokespecial #66                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      81: athrow
      82: aload         8
      84: aload_2
      85: invokevirtual #67                 // Method org/apache/http/pool/RouteSpecificPool.getFree:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
      88: astore        9
      90: aload         9
      92: ifnonnull     98
      95: goto          143
      98: aload         9
     100: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
     103: invokevirtual #68                 // Method org/apache/http/pool/PoolEntry.isExpired:(J)Z
     106: ifeq          114
     109: aload         9
     111: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
     114: aload         9
     116: invokevirtual #69                 // Method org/apache/http/pool/PoolEntry.isClosed:()Z
     119: ifeq          143
     122: aload_0
     123: getfield      #27                 // Field available:Ljava/util/LinkedList;
     126: aload         9
     128: invokevirtual #70                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     131: pop
     132: aload         8
     134: aload         9
     136: iconst_0
     137: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
     140: goto          82
     143: aload         9
     145: ifnull        192
     148: aload_0
     149: getfield      #27                 // Field available:Ljava/util/LinkedList;
     152: aload         9
     154: invokevirtual #70                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     157: pop
     158: aload_0
     159: getfield      #24                 // Field leased:Ljava/util/Set;
     162: aload         9
     164: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     169: pop
     170: aload_0
     171: aload         9
     173: invokevirtual #73                 // Method onReuse:(Lorg/apache/http/pool/PoolEntry;)V
     176: aload         9
     178: astore        10
     180: aload_0
     181: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     184: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     189: aload         10
     191: areturn
     192: aload_0
     193: aload_1
     194: invokespecial #74                 // Method getMax:(Ljava/lang/Object;)I
     197: istore        10
     199: iconst_0
     200: aload         8
     202: invokevirtual #75                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     205: iconst_1
     206: iadd
     207: iload         10
     209: isub
     210: invokestatic  #76                 // Method java/lang/Math.max:(II)I
     213: istore        11
     215: iload         11
     217: ifle          274
     220: iconst_0
     221: istore        12
     223: iload         12
     225: iload         11
     227: if_icmpge     274
     230: aload         8
     232: invokevirtual #77                 // Method org/apache/http/pool/RouteSpecificPool.getLastUsed:()Lorg/apache/http/pool/PoolEntry;
     235: astore        13
     237: aload         13
     239: ifnonnull     245
     242: goto          274
     245: aload         13
     247: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
     250: aload_0
     251: getfield      #27                 // Field available:Ljava/util/LinkedList;
     254: aload         13
     256: invokevirtual #70                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     259: pop
     260: aload         8
     262: aload         13
     264: invokevirtual #78                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     267: pop
     268: iinc          12, 1
     271: goto          223
     274: aload         8
     276: invokevirtual #75                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     279: iload         10
     281: if_icmpge     426
     284: aload_0
     285: getfield      #24                 // Field leased:Ljava/util/Set;
     288: invokeinterface #79,  1           // InterfaceMethod java/util/Set.size:()I
     293: istore        12
     295: aload_0
     296: getfield      #15                 // Field maxTotal:I
     299: iload         12
     301: isub
     302: iconst_0
     303: invokestatic  #76                 // Method java/lang/Math.max:(II)I
     306: istore        13
     308: iload         13
     310: ifle          426
     313: aload_0
     314: getfield      #27                 // Field available:Ljava/util/LinkedList;
     317: invokevirtual #80                 // Method java/util/LinkedList.size:()I
     320: istore        14
     322: iload         14
     324: iload         13
     326: iconst_1
     327: isub
     328: if_icmple     377
     331: aload_0
     332: getfield      #27                 // Field available:Ljava/util/LinkedList;
     335: invokevirtual #81                 // Method java/util/LinkedList.isEmpty:()Z
     338: ifne          377
     341: aload_0
     342: getfield      #27                 // Field available:Ljava/util/LinkedList;
     345: invokevirtual #82                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
     348: checkcast     #35                 // class org/apache/http/pool/PoolEntry
     351: astore        15
     353: aload         15
     355: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
     358: aload_0
     359: aload         15
     361: invokevirtual #83                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     364: invokespecial #63                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
     367: astore        16
     369: aload         16
     371: aload         15
     373: invokevirtual #78                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     376: pop
     377: aload_0
     378: getfield      #10                 // Field connFactory:Lorg/apache/http/pool/ConnFactory;
     381: aload_1
     382: invokeinterface #84,  2           // InterfaceMethod org/apache/http/pool/ConnFactory.create:(Ljava/lang/Object;)Ljava/lang/Object;
     387: astore        15
     389: aload         8
     391: aload         15
     393: invokevirtual #85                 // Method org/apache/http/pool/RouteSpecificPool.add:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
     396: astore        9
     398: aload_0
     399: getfield      #24                 // Field leased:Ljava/util/Set;
     402: aload         9
     404: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     409: pop
     410: aload         9
     412: astore        16
     414: aload_0
     415: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     418: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     423: aload         16
     425: areturn
     426: iconst_0
     427: istore        12
     429: aload         8
     431: aload         6
     433: invokevirtual #86                 // Method org/apache/http/pool/RouteSpecificPool.queue:(Ljava/util/concurrent/Future;)V
     436: aload_0
     437: getfield      #28                 // Field pending:Ljava/util/LinkedList;
     440: aload         6
     442: invokevirtual #87                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     445: pop
     446: aload         7
     448: ifnull        467
     451: aload_0
     452: getfield      #4                  // Field condition:Ljava/util/concurrent/locks/Condition;
     455: aload         7
     457: invokeinterface #88,  2           // InterfaceMethod java/util/concurrent/locks/Condition.awaitUntil:(Ljava/util/Date;)Z
     462: istore        12
     464: goto          479
     467: aload_0
     468: getfield      #4                  // Field condition:Ljava/util/concurrent/locks/Condition;
     471: invokeinterface #89,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
     476: iconst_1
     477: istore        12
     479: aload         6
     481: invokeinterface #64,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
     486: ifeq          500
     489: new           #65                 // class java/util/concurrent/ExecutionException
     492: dup
     493: invokestatic  #3                  // Method operationAborted:()Ljava/lang/Exception;
     496: invokespecial #66                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
     499: athrow
     500: aload         8
     502: aload         6
     504: invokevirtual #90                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Ljava/util/concurrent/Future;)V
     507: aload_0
     508: getfield      #28                 // Field pending:Ljava/util/LinkedList;
     511: aload         6
     513: invokevirtual #70                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     516: pop
     517: goto          542
     520: astore        17
     522: aload         8
     524: aload         6
     526: invokevirtual #90                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Ljava/util/concurrent/Future;)V
     529: aload_0
     530: getfield      #28                 // Field pending:Ljava/util/LinkedList;
     533: aload         6
     535: invokevirtual #70                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     538: pop
     539: aload         17
     541: athrow
     542: iload         12
     544: ifne          567
     547: aload         7
     549: ifnull        567
     552: aload         7
     554: invokevirtual #91                 // Method java/util/Date.getTime:()J
     557: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
     560: lcmp
     561: ifgt          567
     564: goto          570
     567: goto          44
     570: new           #92                 // class java/util/concurrent/TimeoutException
     573: dup
     574: ldc           #93                 // String Timeout waiting for connection
     576: invokespecial #94                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
     579: athrow
     580: astore        18
     582: aload_0
     583: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     586: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     591: aload         18
     593: athrow
    Exception table:
       from    to  target type
         429   500   520   any
         520   522   520   any
          37   180   580   any
         192   414   580   any
         426   582   580   any

  public void release(E, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #24                 // Field leased:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #95,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      19: ifeq          118
      22: aload_0
      23: aload_1
      24: invokevirtual #83                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      27: invokespecial #63                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      30: astore_3
      31: aload_3
      32: aload_1
      33: iload_2
      34: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
      37: iload_2
      38: ifeq          59
      41: aload_0
      42: getfield      #30                 // Field isShutDown:Z
      45: ifne          59
      48: aload_0
      49: getfield      #27                 // Field available:Ljava/util/LinkedList;
      52: aload_1
      53: invokevirtual #96                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      56: goto          63
      59: aload_1
      60: invokevirtual #36                 // Method org/apache/http/pool/PoolEntry.close:()V
      63: aload_0
      64: aload_1
      65: invokevirtual #97                 // Method onRelease:(Lorg/apache/http/pool/PoolEntry;)V
      68: aload_3
      69: invokevirtual #98                 // Method org/apache/http/pool/RouteSpecificPool.nextPending:()Ljava/util/concurrent/Future;
      72: astore        4
      74: aload         4
      76: ifnull        92
      79: aload_0
      80: getfield      #28                 // Field pending:Ljava/util/LinkedList;
      83: aload         4
      85: invokevirtual #70                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      88: pop
      89: goto          104
      92: aload_0
      93: getfield      #28                 // Field pending:Ljava/util/LinkedList;
      96: invokevirtual #99                 // Method java/util/LinkedList.poll:()Ljava/lang/Object;
      99: checkcast     #100                // class java/util/concurrent/Future
     102: astore        4
     104: aload         4
     106: ifnull        118
     109: aload_0
     110: getfield      #4                  // Field condition:Ljava/util/concurrent/locks/Condition;
     113: invokeinterface #101,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
     118: aload_0
     119: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     122: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     127: goto          144
     130: astore        5
     132: aload_0
     133: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     136: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     141: aload         5
     143: athrow
     144: return
    Exception table:
       from    to  target type
           9   118   130   any
         130   132   130   any

  private int getMax(T);
    Code:
       0: aload_0
       1: getfield      #29                 // Field maxPerRoute:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #102                // class java/lang/Integer
      13: astore_2
      14: aload_2
      15: ifnull        25
      18: aload_2
      19: invokevirtual #103                // Method java/lang/Integer.intValue:()I
      22: goto          29
      25: aload_0
      26: getfield      #13                 // Field defaultMaxPerRoute:I
      29: ireturn

  public void setMaxTotal(int);
    Code:
       0: iload_1
       1: ldc           #104                // String Max value
       3: invokestatic  #12                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #15                 // Field maxTotal:I
      21: aload_0
      22: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getMaxTotal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #15                 // Field maxTotal:I
      13: istore_1
      14: aload_0
      15: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setDefaultMaxPerRoute(int);
    Code:
       0: iload_1
       1: ldc           #11                 // String Max per route value
       3: invokestatic  #12                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #13                 // Field defaultMaxPerRoute:I
      21: aload_0
      22: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #13                 // Field defaultMaxPerRoute:I
      13: istore_1
      14: aload_0
      15: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setMaxPerRoute(T, int);
    Code:
       0: aload_1
       1: ldc           #53                 // String Route
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: iload_2
      17: iconst_m1
      18: if_icmple     39
      21: aload_0
      22: getfield      #29                 // Field maxPerRoute:Ljava/util/Map;
      25: aload_1
      26: iload_2
      27: invokestatic  #105                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: goto          50
      39: aload_0
      40: getfield      #29                 // Field maxPerRoute:Ljava/util/Map;
      43: aload_1
      44: invokeinterface #106,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      54: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      59: goto          74
      62: astore_3
      63: aload_0
      64: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      67: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      72: aload_3
      73: athrow
      74: return
    Exception table:
       from    to  target type
          16    50    62   any
          62    63    62   any

  public int getMaxPerRoute(T);
    Code:
       0: aload_1
       1: ldc           #53                 // String Route
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #74                 // Method getMax:(Ljava/lang/Object;)I
      21: istore_2
      22: aload_0
      23: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      26: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      31: iload_2
      32: ireturn
      33: astore_3
      34: aload_0
      35: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_3
      44: athrow
    Exception table:
       from    to  target type
          16    22    33   any
          33    34    33   any

  public org.apache.http.pool.PoolStats getTotalStats();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #107                // class org/apache/http/pool/PoolStats
      12: dup
      13: aload_0
      14: getfield      #24                 // Field leased:Ljava/util/Set;
      17: invokeinterface #79,  1           // InterfaceMethod java/util/Set.size:()I
      22: aload_0
      23: getfield      #28                 // Field pending:Ljava/util/LinkedList;
      26: invokevirtual #80                 // Method java/util/LinkedList.size:()I
      29: aload_0
      30: getfield      #27                 // Field available:Ljava/util/LinkedList;
      33: invokevirtual #80                 // Method java/util/LinkedList.size:()I
      36: aload_0
      37: getfield      #15                 // Field maxTotal:I
      40: invokespecial #108                // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      43: astore_1
      44: aload_0
      45: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      48: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload_1
      54: areturn
      55: astore_2
      56: aload_0
      57: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      60: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload_2
      66: athrow
    Exception table:
       from    to  target type
           9    44    55   any
          55    56    55   any

  public org.apache.http.pool.PoolStats getStats(T);
    Code:
       0: aload_1
       1: ldc           #53                 // String Route
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #63                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      21: astore_2
      22: new           #107                // class org/apache/http/pool/PoolStats
      25: dup
      26: aload_2
      27: invokevirtual #109                // Method org/apache/http/pool/RouteSpecificPool.getLeasedCount:()I
      30: aload_2
      31: invokevirtual #110                // Method org/apache/http/pool/RouteSpecificPool.getPendingCount:()I
      34: aload_2
      35: invokevirtual #111                // Method org/apache/http/pool/RouteSpecificPool.getAvailableCount:()I
      38: aload_0
      39: aload_1
      40: invokespecial #74                 // Method getMax:(Ljava/lang/Object;)I
      43: invokespecial #108                // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      46: astore_3
      47: aload_0
      48: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      51: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      56: aload_3
      57: areturn
      58: astore        4
      60: aload_0
      61: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      64: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      69: aload         4
      71: athrow
    Exception table:
       from    to  target type
          16    47    58   any
          58    60    58   any

  public java.util.Set<T> getRoutes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #22                 // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #21                 // Field routeToPool:Ljava/util/Map;
      17: invokeinterface #112,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokespecial #113                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: astore_1
      26: aload_0
      27: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_1
      36: areturn
      37: astore_2
      38: aload_0
      39: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: aload_2
      48: athrow
    Exception table:
       from    to  target type
           9    26    37   any
          37    38    37   any

  protected void enumAvailable(org.apache.http.pool.PoolEntryCallback<T, C>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #27                 // Field available:Ljava/util/LinkedList;
      13: invokevirtual #114                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          76
      26: aload_2
      27: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #35                 // class org/apache/http/pool/PoolEntry
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokeinterface #115,  2          // InterfaceMethod org/apache/http/pool/PoolEntryCallback.process:(Lorg/apache/http/pool/PoolEntry;)V
      43: aload_3
      44: invokevirtual #69                 // Method org/apache/http/pool/PoolEntry.isClosed:()Z
      47: ifeq          73
      50: aload_0
      51: aload_3
      52: invokevirtual #83                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      55: invokespecial #63                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      58: astore        4
      60: aload         4
      62: aload_3
      63: invokevirtual #78                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
      66: pop
      67: aload_2
      68: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.remove:()V
      73: goto          17
      76: aload_0
      77: invokespecial #117                // Method purgePoolMap:()V
      80: aload_0
      81: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      84: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      89: goto          106
      92: astore        5
      94: aload_0
      95: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      98: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     103: aload         5
     105: athrow
     106: return
    Exception table:
       from    to  target type
           9    80    92   any
          92    94    92   any

  protected void enumLeased(org.apache.http.pool.PoolEntryCallback<T, C>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #24                 // Field leased:Ljava/util/Set;
      13: invokeinterface #118,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          48
      28: aload_2
      29: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #35                 // class org/apache/http/pool/PoolEntry
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokeinterface #115,  2          // InterfaceMethod org/apache/http/pool/PoolEntryCallback.process:(Lorg/apache/http/pool/PoolEntry;)V
      45: goto          19
      48: aload_0
      49: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      52: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: goto          74
      60: astore        4
      62: aload_0
      63: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      66: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
      74: return
    Exception table:
       from    to  target type
           9    48    60   any
          60    62    60   any

  private void purgePoolMap();
    Code:
       0: aload_0
       1: getfield      #21                 // Field routeToPool:Ljava/util/Map;
       4: invokeinterface #119,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #118,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          65
      24: aload_1
      25: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #120                // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #121,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #40                 // class org/apache/http/pool/RouteSpecificPool
      43: astore_3
      44: aload_3
      45: invokevirtual #110                // Method org/apache/http/pool/RouteSpecificPool.getPendingCount:()I
      48: aload_3
      49: invokevirtual #75                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
      52: iadd
      53: ifne          62
      56: aload_1
      57: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.remove:()V
      62: goto          15
      65: return

  public void closeIdle(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ldc           #122                // String Time unit
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: lload_1
       9: invokevirtual #61                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      12: lstore        4
      14: lload         4
      16: lconst_0
      17: lcmp
      18: ifge          24
      21: lconst_0
      22: lstore        4
      24: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
      27: lload         4
      29: lsub
      30: lstore        6
      32: aload_0
      33: new           #123                // class org/apache/http/pool/AbstractConnPool$3
      36: dup
      37: aload_0
      38: lload         6
      40: invokespecial #124                // Method org/apache/http/pool/AbstractConnPool$3."<init>":(Lorg/apache/http/pool/AbstractConnPool;J)V
      43: invokevirtual #125                // Method enumAvailable:(Lorg/apache/http/pool/PoolEntryCallback;)V
      46: return

  public void closeExpired();
    Code:
       0: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: new           #126                // class org/apache/http/pool/AbstractConnPool$4
       8: dup
       9: aload_0
      10: lload_1
      11: invokespecial #127                // Method org/apache/http/pool/AbstractConnPool$4."<init>":(Lorg/apache/http/pool/AbstractConnPool;J)V
      14: invokevirtual #125                // Method enumAvailable:(Lorg/apache/http/pool/PoolEntryCallback;)V
      17: return

  public int getValidateAfterInactivity();
    Code:
       0: aload_0
       1: getfield      #1                  // Field validateAfterInactivity:I
       4: ireturn

  public void setValidateAfterInactivity(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field validateAfterInactivity:I
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #128                // class java/lang/StringBuilder
      12: dup
      13: invokespecial #129                // Method java/lang/StringBuilder."<init>":()V
      16: astore_1
      17: aload_1
      18: ldc           #130                // String [leased:
      20: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #24                 // Field leased:Ljava/util/Set;
      29: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: ldc           #133                // String ][available:
      36: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #27                 // Field available:Ljava/util/LinkedList;
      45: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: pop
      49: aload_1
      50: ldc           #134                // String ][pending:
      52: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: aload_0
      58: getfield      #28                 // Field pending:Ljava/util/LinkedList;
      61: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: pop
      65: aload_1
      66: ldc           #135                // String ]
      68: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: aload_1
      73: invokevirtual #136                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: astore_2
      77: aload_0
      78: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      81: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      86: aload_2
      87: areturn
      88: astore_3
      89: aload_0
      90: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      93: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      98: aload_3
      99: athrow
    Exception table:
       from    to  target type
           9    77    88   any
          88    89    88   any

  public void release(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class org/apache/http/pool/PoolEntry
       5: iload_2
       6: invokevirtual #137                // Method release:(Lorg/apache/http/pool/PoolEntry;Z)V
       9: return

  static java.util.concurrent.locks.Lock access$000(org.apache.http.pool.AbstractConnPool);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  static java.util.concurrent.locks.Condition access$100(org.apache.http.pool.AbstractConnPool);
    Code:
       0: aload_0
       1: getfield      #4                  // Field condition:Ljava/util/concurrent/locks/Condition;
       4: areturn

  static java.lang.Exception access$200();
    Code:
       0: invokestatic  #3                  // Method operationAborted:()Ljava/lang/Exception;
       3: areturn

  static org.apache.http.pool.PoolEntry access$300(org.apache.http.pool.AbstractConnPool, java.lang.Object, java.lang.Object, long, java.util.concurrent.TimeUnit, java.util.concurrent.Future) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: aload         6
       8: invokespecial #2                  // Method getPoolEntryBlocking:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/Future;)Lorg/apache/http/pool/PoolEntry;
      11: areturn

  static int access$400(org.apache.http.pool.AbstractConnPool);
    Code:
       0: aload_0
       1: getfield      #1                  // Field validateAfterInactivity:I
       4: ireturn
}
