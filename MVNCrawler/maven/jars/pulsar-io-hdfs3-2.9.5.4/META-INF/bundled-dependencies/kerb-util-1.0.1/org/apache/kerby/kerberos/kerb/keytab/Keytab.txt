Compiled from "Keytab.java"
public final class org.apache.kerby.kerberos.kerb.keytab.Keytab implements org.apache.kerby.kerberos.kerb.keytab.KrbKeytab {
  public static final int V501;

  public static final int V502;

  private int version;

  private java.util.Map<org.apache.kerby.kerberos.kerb.type.base.PrincipalName, java.util.List<org.apache.kerby.kerberos.kerb.keytab.KeytabEntry>> principalEntries;

  public org.apache.kerby.kerberos.kerb.keytab.Keytab();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        1282
       8: putfield      #2                  // Field version:I
      11: aload_0
      12: new           #3                  // class java/util/HashMap
      15: dup
      16: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      19: putfield      #5                  // Field principalEntries:Ljava/util/Map;
      22: return

  public static org.apache.kerby.kerberos.kerb.keytab.Keytab loadKeytab(java.io.File) throws java.io.IOException;
    Code:
       0: new           #6                  // class org/apache/kerby/kerberos/kerb/keytab/Keytab
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #8                  // Method load:(Ljava/io/File;)V
      13: aload_1
      14: areturn

  public static org.apache.kerby.kerberos.kerb.keytab.Keytab loadKeytab(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #6                  // class org/apache/kerby/kerberos/kerb/keytab/Keytab
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #9                  // Method load:(Ljava/io/InputStream;)V
      13: aload_1
      14: areturn

  public java.util.List<org.apache.kerby.kerberos.kerb.type.base.PrincipalName> getPrincipals();
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #5                  // Field principalEntries:Ljava/util/Map;
       8: invokeinterface #11,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #12                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public void addKeytabEntries(java.util.List<org.apache.kerby.kerberos.kerb.keytab.KeytabEntry>);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #16                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabEntry
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #17                 // Method addEntry:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabEntry;)V
      31: goto          7
      34: return

  public void removeKeytabEntries(org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: aload_0
       1: getfield      #5                  // Field principalEntries:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void removeKeytabEntries(org.apache.kerby.kerberos.kerb.type.base.PrincipalName, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method getKeytabEntries:(Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore        4
      14: aload         4
      16: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          54
      24: aload         4
      26: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #16                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabEntry
      34: astore        5
      36: aload         5
      38: invokevirtual #20                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.getKvno:()I
      41: iload_2
      42: if_icmpne     51
      45: aload_0
      46: aload         5
      48: invokevirtual #21                 // Method removeKeytabEntry:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabEntry;)V
      51: goto          14
      54: return

  public void removeKeytabEntry(org.apache.kerby.kerberos.kerb.keytab.KeytabEntry);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.getPrincipal:()Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field principalEntries:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #24                 // class java/util/List
      18: astore_3
      19: aload_3
      20: ifnull        75
      23: aload_3
      24: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          75
      41: aload         4
      43: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #16                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabEntry
      51: astore        5
      53: aload_1
      54: aload         5
      56: invokevirtual #26                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.equals:(Ljava/lang/Object;)Z
      59: ifeq          72
      62: aload         4
      64: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.remove:()V
      69: goto          75
      72: goto          31
      75: return

  public java.util.List<org.apache.kerby.kerberos.kerb.keytab.KeytabEntry> getKeytabEntries(org.apache.kerby.kerberos.kerb.type.base.PrincipalName);
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field principalEntries:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #24                 // class java/util/List
      21: astore_3
      22: aload_3
      23: ifnonnull     28
      26: aload_2
      27: areturn
      28: aload_3
      29: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore        4
      36: aload         4
      38: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          70
      46: aload         4
      48: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #16                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabEntry
      56: astore        5
      58: aload_2
      59: aload         5
      61: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          36
      70: aload_2
      71: areturn

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey getKey(org.apache.kerby.kerberos.kerb.type.base.PrincipalName, org.apache.kerby.kerberos.kerb.type.base.EncryptionType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method getKeytabEntries:(Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore        4
      14: aload         4
      16: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload         4
      26: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #16                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabEntry
      34: astore        5
      36: aload         5
      38: invokevirtual #30                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.getKey:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      41: invokevirtual #31                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      44: aload_2
      45: if_acmpne     54
      48: aload         5
      50: invokevirtual #30                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.getKey:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      53: areturn
      54: goto          14
      57: aconst_null
      58: areturn

  public void load(java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method java/io/File.exists:()Z
       4: ifeq          14
       7: aload_1
       8: invokevirtual #33                 // Method java/io/File.canRead:()Z
      11: ifne          44
      14: new           #34                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #35                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #37                 // String Invalid keytab file:
      27: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #39                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      34: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_1
      45: invokevirtual #42                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      48: iconst_0
      49: anewarray     #43                 // class java/nio/file/OpenOption
      52: invokestatic  #44                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      55: astore_2
      56: aconst_null
      57: astore_3
      58: aload_0
      59: aload_2
      60: invokevirtual #9                  // Method load:(Ljava/io/InputStream;)V
      63: aload_2
      64: ifnull        139
      67: aload_3
      68: ifnull        89
      71: aload_2
      72: invokevirtual #45                 // Method java/io/InputStream.close:()V
      75: goto          139
      78: astore        4
      80: aload_3
      81: aload         4
      83: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      86: goto          139
      89: aload_2
      90: invokevirtual #45                 // Method java/io/InputStream.close:()V
      93: goto          139
      96: astore        4
      98: aload         4
     100: astore_3
     101: aload         4
     103: athrow
     104: astore        5
     106: aload_2
     107: ifnull        136
     110: aload_3
     111: ifnull        132
     114: aload_2
     115: invokevirtual #45                 // Method java/io/InputStream.close:()V
     118: goto          136
     121: astore        6
     123: aload_3
     124: aload         6
     126: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     129: goto          136
     132: aload_2
     133: invokevirtual #45                 // Method java/io/InputStream.close:()V
     136: aload         5
     138: athrow
     139: return
    Exception table:
       from    to  target type
          71    75    78   Class java/lang/Throwable
          58    63    96   Class java/lang/Throwable
          58    63   104   any
         114   118   121   Class java/lang/Throwable
          96   106   104   any

  public void load(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #34                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #48                 // String Invalid and null input stream
      10: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #49                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream
      17: dup
      18: aload_1
      19: invokespecial #50                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream."<init>":(Ljava/io/InputStream;)V
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokespecial #51                 // Method doLoad:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabInputStream;)V
      28: return

  private void doLoad(org.apache.kerby.kerberos.kerb.keytab.KeytabInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #52                 // Method readVersion:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabInputStream;)I
       6: putfield      #2                  // Field version:I
       9: aload_0
      10: aload_1
      11: invokespecial #53                 // Method readEntries:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabInputStream;)Ljava/util/List;
      14: astore_2
      15: aload_0
      16: aload_2
      17: invokevirtual #54                 // Method addKeytabEntries:(Ljava/util/List;)V
      20: return

  public void addEntry(org.apache.kerby.kerberos.kerb.keytab.KeytabEntry);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.getPrincipal:()Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field principalEntries:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #24                 // class java/util/List
      18: astore_3
      19: aload_3
      20: ifnonnull     43
      23: new           #10                 // class java/util/ArrayList
      26: dup
      27: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      30: astore_3
      31: aload_0
      32: getfield      #5                  // Field principalEntries:Ljava/util/Map;
      35: aload_2
      36: aload_3
      37: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_3
      44: aload_1
      45: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: return

  private int readVersion(org.apache.kerby.kerberos.kerb.keytab.KeytabInputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream.readShort:()S
       4: ireturn

  private java.util.List<org.apache.kerby.kerberos.kerb.keytab.KeytabEntry> readEntries(org.apache.kerby.kerberos.kerb.keytab.KeytabInputStream) throws java.io.IOException;
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #57                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream.available:()I
      12: istore_3
      13: iload_3
      14: ifle          111
      17: aload_1
      18: invokevirtual #58                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream.readInt:()I
      21: istore        4
      23: aload_1
      24: invokevirtual #57                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream.available:()I
      27: iload         4
      29: if_icmpge     60
      32: new           #59                 // class java/io/IOException
      35: dup
      36: new           #35                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #60                 // String Bad input stream with less data than expected:
      45: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: iload         4
      50: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: aload_1
      62: iload         4
      64: invokespecial #63                 // Method readEntry:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabInputStream;I)Lorg/apache/kerby/kerberos/kerb/keytab/KeytabEntry;
      67: astore        5
      69: aload_2
      70: aload         5
      72: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: iload_3
      79: aload_1
      80: invokevirtual #57                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream.available:()I
      83: isub
      84: istore        6
      86: iload         6
      88: iload         4
      90: if_icmpeq     103
      93: aload_1
      94: iload         4
      96: iload         6
      98: isub
      99: invokevirtual #64                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream.skipBytes:(I)I
     102: pop
     103: aload_1
     104: invokevirtual #57                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabInputStream.available:()I
     107: istore_3
     108: goto          13
     111: aload_2
     112: areturn

  private org.apache.kerby.kerberos.kerb.keytab.KeytabEntry readEntry(org.apache.kerby.kerberos.kerb.keytab.KeytabInputStream, int) throws java.io.IOException;
    Code:
       0: new           #16                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabEntry
       3: dup
       4: invokespecial #65                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: aload_0
      11: getfield      #2                  // Field version:I
      14: iload_2
      15: invokevirtual #66                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.load:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabInputStream;II)V
      18: aload_3
      19: areturn

  public void store(java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: iconst_0
       5: anewarray     #43                 // class java/nio/file/OpenOption
       8: invokestatic  #67                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      11: astore_2
      12: aconst_null
      13: astore_3
      14: aload_0
      15: aload_2
      16: invokevirtual #68                 // Method store:(Ljava/io/OutputStream;)V
      19: aload_2
      20: ifnull        95
      23: aload_3
      24: ifnull        45
      27: aload_2
      28: invokevirtual #69                 // Method java/io/OutputStream.close:()V
      31: goto          95
      34: astore        4
      36: aload_3
      37: aload         4
      39: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      42: goto          95
      45: aload_2
      46: invokevirtual #69                 // Method java/io/OutputStream.close:()V
      49: goto          95
      52: astore        4
      54: aload         4
      56: astore_3
      57: aload         4
      59: athrow
      60: astore        5
      62: aload_2
      63: ifnull        92
      66: aload_3
      67: ifnull        88
      70: aload_2
      71: invokevirtual #69                 // Method java/io/OutputStream.close:()V
      74: goto          92
      77: astore        6
      79: aload_3
      80: aload         6
      82: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      85: goto          92
      88: aload_2
      89: invokevirtual #69                 // Method java/io/OutputStream.close:()V
      92: aload         5
      94: athrow
      95: return
    Exception table:
       from    to  target type
          27    31    34   Class java/lang/Throwable
          14    19    52   Class java/lang/Throwable
          14    19    60   any
          70    74    77   Class java/lang/Throwable
          52    62    60   any

  public void store(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #34                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #70                 // String Invalid and null output stream
      10: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #71                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabOutputStream
      17: dup
      18: aload_1
      19: invokespecial #72                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabOutputStream."<init>":(Ljava/io/OutputStream;)V
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokespecial #73                 // Method writeVersion:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabOutputStream;)V
      28: aload_0
      29: aload_2
      30: invokespecial #74                 // Method writeEntries:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabOutputStream;)V
      33: return

  private void writeVersion(org.apache.kerby.kerberos.kerb.keytab.KeytabOutputStream) throws java.io.IOException;
    Code:
       0: iconst_2
       1: newarray       byte
       3: astore_2
       4: aload_2
       5: iconst_0
       6: iconst_5
       7: bastore
       8: aload_2
       9: iconst_1
      10: aload_0
      11: getfield      #2                  // Field version:I
      14: sipush        1282
      17: if_icmpne     24
      20: iconst_2
      21: goto          25
      24: iconst_1
      25: bastore
      26: aload_1
      27: aload_2
      28: invokevirtual #75                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabOutputStream.write:([B)V
      31: return

  private void writeEntries(org.apache.kerby.kerberos.kerb.keytab.KeytabOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field principalEntries:Ljava/util/Map;
       4: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          84
      24: aload_2
      25: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #78                 // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #79,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #24                 // class java/util/List
      43: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore        4
      50: aload         4
      52: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          81
      60: aload         4
      62: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #16                 // class org/apache/kerby/kerberos/kerb/keytab/KeytabEntry
      70: astore        5
      72: aload         5
      74: aload_1
      75: invokevirtual #80                 // Method org/apache/kerby/kerberos/kerb/keytab/KeytabEntry.store:(Lorg/apache/kerby/kerberos/kerb/keytab/KeytabOutputStream;)V
      78: goto          50
      81: goto          15
      84: return
}
