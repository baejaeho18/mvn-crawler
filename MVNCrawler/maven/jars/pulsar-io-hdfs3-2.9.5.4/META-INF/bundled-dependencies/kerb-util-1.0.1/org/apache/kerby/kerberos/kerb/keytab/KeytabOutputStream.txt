Compiled from "KeytabOutputStream.java"
public class org.apache.kerby.kerberos.kerb.keytab.KeytabOutputStream extends org.apache.kerby.kerberos.kerb.KrbOutputStream {
  public org.apache.kerby.kerberos.kerb.keytab.KeytabOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/KrbOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: return

  public void writePrincipal(org.apache.kerby.kerberos.kerb.type.base.PrincipalName, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/apache/kerby/kerberos/kerb/type/base/PrincipalName.getNameStrings:()Ljava/util/List;
       4: astore_3
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/kerby/kerberos/kerb/type/base/PrincipalName.getNameStrings:()Ljava/util/List;
       9: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      14: istore        4
      16: aload_1
      17: invokevirtual #4                  // Method org/apache/kerby/kerberos/kerb/type/base/PrincipalName.getRealm:()Ljava/lang/String;
      20: astore        5
      22: aload_0
      23: iload         4
      25: invokevirtual #5                  // Method writeShort:(I)V
      28: aload_0
      29: aload         5
      31: invokevirtual #6                  // Method writeCountedString:(Ljava/lang/String;)V
      34: aload_3
      35: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        6
      42: aload         6
      44: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          73
      52: aload         6
      54: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #10                 // class java/lang/String
      62: astore        7
      64: aload_0
      65: aload         7
      67: invokevirtual #6                  // Method writeCountedString:(Ljava/lang/String;)V
      70: goto          42
      73: aload_0
      74: aload_1
      75: invokevirtual #11                 // Method org/apache/kerby/kerberos/kerb/type/base/PrincipalName.getNameType:()Lorg/apache/kerby/kerberos/kerb/type/base/NameType;
      78: invokevirtual #12                 // Method org/apache/kerby/kerberos/kerb/type/base/NameType.getValue:()I
      81: invokevirtual #13                 // Method writeInt:(I)V
      84: return

  public void writeKey(org.apache.kerby.kerberos.kerb.type.base.EncryptionKey, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
       5: invokevirtual #15                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionType.getValue:()I
       8: invokevirtual #5                  // Method writeShort:(I)V
      11: aload_0
      12: aload_1
      13: invokevirtual #16                 // Method org/apache/kerby/kerberos/kerb/type/base/EncryptionKey.getKeyData:()[B
      16: invokevirtual #17                 // Method writeCountedOctets:([B)V
      19: return

  public void writeCountedOctets(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: invokevirtual #5                  // Method writeShort:(I)V
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method write:([B)V
      11: return
}
