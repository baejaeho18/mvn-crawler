Compiled from "KrbPreauth.java"
public interface org.apache.kerby.kerberos.kerb.client.preauth.KrbPreauth extends org.apache.kerby.kerberos.kerb.preauth.PreauthPluginMeta {
  public abstract void init(org.apache.kerby.kerberos.kerb.client.KrbContext);

  public abstract org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext initRequestContext(org.apache.kerby.kerberos.kerb.client.request.KdcRequest);

  public abstract void prepareQuestions(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext) throws org.apache.kerby.kerberos.kerb.KrbException;

  public abstract java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType> getEncTypes(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext);

  public abstract void setPreauthOptions(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.KOptions);

  public abstract void tryFirst(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.kerberos.kerb.type.pa.PaData) throws org.apache.kerby.kerberos.kerb.KrbException;

  public abstract boolean process(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.kerberos.kerb.type.pa.PaDataEntry, org.apache.kerby.kerberos.kerb.type.pa.PaData) throws org.apache.kerby.kerberos.kerb.KrbException;

  public abstract boolean tryAgain(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext, org.apache.kerby.kerberos.kerb.type.pa.PaDataType, org.apache.kerby.kerberos.kerb.type.pa.PaData, org.apache.kerby.kerberos.kerb.type.pa.PaData);

  public abstract org.apache.kerby.kerberos.kerb.preauth.PaFlags getFlags(org.apache.kerby.kerberos.kerb.type.pa.PaDataType);

  public abstract void destroy();
}
