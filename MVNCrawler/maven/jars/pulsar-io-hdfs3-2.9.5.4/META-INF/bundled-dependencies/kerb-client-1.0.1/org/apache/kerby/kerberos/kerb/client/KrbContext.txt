Compiled from "KrbContext.java"
public class org.apache.kerby.kerberos.kerb.client.KrbContext {
  private org.apache.kerby.kerberos.kerb.client.KrbSetting krbSetting;

  private org.apache.kerby.kerberos.kerb.client.preauth.PreauthHandler preauthHandler;

  public org.apache.kerby.kerberos.kerb.client.KrbContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.apache.kerby.kerberos.kerb.client.KrbSetting);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field krbSetting:Lorg/apache/kerby/kerberos/kerb/client/KrbSetting;
       5: aload_0
       6: new           #3                  // class org/apache/kerby/kerberos/kerb/client/preauth/PreauthHandler
       9: dup
      10: invokespecial #4                  // Method org/apache/kerby/kerberos/kerb/client/preauth/PreauthHandler."<init>":()V
      13: putfield      #5                  // Field preauthHandler:Lorg/apache/kerby/kerberos/kerb/client/preauth/PreauthHandler;
      16: aload_0
      17: getfield      #5                  // Field preauthHandler:Lorg/apache/kerby/kerberos/kerb/client/preauth/PreauthHandler;
      20: aload_0
      21: invokevirtual #6                  // Method org/apache/kerby/kerberos/kerb/client/preauth/PreauthHandler.init:(Lorg/apache/kerby/kerberos/kerb/client/KrbContext;)V
      24: return

  public org.apache.kerby.kerberos.kerb.client.KrbSetting getKrbSetting();
    Code:
       0: aload_0
       1: getfield      #2                  // Field krbSetting:Lorg/apache/kerby/kerberos/kerb/client/KrbSetting;
       4: areturn

  public org.apache.kerby.kerberos.kerb.client.KrbConfig getConfig();
    Code:
       0: aload_0
       1: getfield      #2                  // Field krbSetting:Lorg/apache/kerby/kerberos/kerb/client/KrbSetting;
       4: invokevirtual #7                  // Method org/apache/kerby/kerberos/kerb/client/KrbSetting.getKrbConfig:()Lorg/apache/kerby/kerberos/kerb/client/KrbConfig;
       7: areturn

  public int generateNonce();
    Code:
       0: invokestatic  #8                  // Method org/apache/kerby/kerberos/kerb/crypto/util/Nonce.value:()I
       3: ireturn

  public long getTicketValidTime();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getConfig:()Lorg/apache/kerby/kerberos/kerb/client/KrbConfig;
       4: invokevirtual #10                 // Method org/apache/kerby/kerberos/kerb/client/KrbConfig.getTicketLifetime:()J
       7: ldc2_w        #11                 // long 1000l
      10: lmul
      11: lreturn

  public org.apache.kerby.kerberos.kerb.client.preauth.PreauthHandler getPreauthHandler();
    Code:
       0: aload_0
       1: getfield      #5                  // Field preauthHandler:Lorg/apache/kerby/kerberos/kerb/client/preauth/PreauthHandler;
       4: areturn
}
