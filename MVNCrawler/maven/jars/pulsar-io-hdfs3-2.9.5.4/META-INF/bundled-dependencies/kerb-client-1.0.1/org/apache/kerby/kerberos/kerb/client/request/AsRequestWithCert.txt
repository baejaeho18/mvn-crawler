Compiled from "AsRequestWithCert.java"
public class org.apache.kerby.kerberos.kerb.client.request.AsRequestWithCert extends org.apache.kerby.kerberos.kerb.client.request.AsRequest {
  public static final java.lang.String ANONYMOUS_PRINCIPAL;

  public org.apache.kerby.kerberos.kerb.client.request.AsRequestWithCert(org.apache.kerby.kerberos.kerb.client.KrbContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/client/request/AsRequest."<init>":(Lorg/apache/kerby/kerberos/kerb/client/KrbContext;)V
       5: aload_0
       6: getstatic     #2                  // Field org/apache/kerby/kerberos/kerb/type/pa/PaDataType.PK_AS_REQ:Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
       9: invokevirtual #3                  // Method setAllowedPreauth:(Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;)V
      12: return

  public void process() throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #4                  // Method getReqBody:(Lorg/apache/kerby/kerberos/kerb/type/KerberosTime;)Lorg/apache/kerby/kerberos/kerb/type/kdc/KdcReqBody;
       5: astore_1
       6: new           #5                  // class org/apache/kerby/kerberos/kerb/type/kdc/AsReq
       9: dup
      10: invokespecial #6                  // Method org/apache/kerby/kerberos/kerb/type/kdc/AsReq."<init>":()V
      13: astore_2
      14: aload_2
      15: aload_1
      16: invokevirtual #7                  // Method org/apache/kerby/kerberos/kerb/type/kdc/AsReq.setReqBody:(Lorg/apache/kerby/kerberos/kerb/type/kdc/KdcReqBody;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #8                  // Method setKdcReq:(Lorg/apache/kerby/kerberos/kerb/type/kdc/KdcReq;)V
      24: aload_0
      25: invokevirtual #9                  // Method preauth:()V
      28: aload_2
      29: aload_0
      30: invokevirtual #10                 // Method getPreauthContext:()Lorg/apache/kerby/kerberos/kerb/client/preauth/PreauthContext;
      33: invokevirtual #11                 // Method org/apache/kerby/kerberos/kerb/client/preauth/PreauthContext.getOutputPaData:()Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;
      36: invokevirtual #12                 // Method org/apache/kerby/kerberos/kerb/type/kdc/AsReq.setPaData:(Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;)V
      39: aload_0
      40: aload_2
      41: invokevirtual #8                  // Method setKdcReq:(Lorg/apache/kerby/kerberos/kerb/type/kdc/KdcReq;)V
      44: return

  public org.apache.kerby.KOptions getPreauthOptions();
    Code:
       0: new           #13                 // class org/apache/kerby/KOptions
       3: dup
       4: invokespecial #14                 // Method org/apache/kerby/KOptions."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #15                 // Method getRequestOptions:()Lorg/apache/kerby/KOptions;
      12: astore_2
      13: aload_1
      14: aload_2
      15: getstatic     #16                 // Field org/apache/kerby/kerberos/kerb/client/PkinitOption.X509_CERTIFICATE:Lorg/apache/kerby/kerberos/kerb/client/PkinitOption;
      18: invokevirtual #17                 // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      21: invokevirtual #18                 // Method org/apache/kerby/KOptions.add:(Lorg/apache/kerby/KOption;)V
      24: aload_1
      25: aload_2
      26: getstatic     #19                 // Field org/apache/kerby/kerberos/kerb/client/PkinitOption.X509_ANCHORS:Lorg/apache/kerby/kerberos/kerb/client/PkinitOption;
      29: invokevirtual #17                 // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      32: invokevirtual #18                 // Method org/apache/kerby/KOptions.add:(Lorg/apache/kerby/KOption;)V
      35: aload_1
      36: aload_2
      37: getstatic     #20                 // Field org/apache/kerby/kerberos/kerb/client/PkinitOption.X509_PRIVATE_KEY:Lorg/apache/kerby/kerberos/kerb/client/PkinitOption;
      40: invokevirtual #17                 // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      43: invokevirtual #18                 // Method org/apache/kerby/KOptions.add:(Lorg/apache/kerby/KOption;)V
      46: aload_1
      47: aload_2
      48: getstatic     #21                 // Field org/apache/kerby/kerberos/kerb/client/PkinitOption.X509_IDENTITY:Lorg/apache/kerby/kerberos/kerb/client/PkinitOption;
      51: invokevirtual #17                 // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      54: invokevirtual #18                 // Method org/apache/kerby/KOptions.add:(Lorg/apache/kerby/KOption;)V
      57: aload_1
      58: aload_2
      59: getstatic     #22                 // Field org/apache/kerby/kerberos/kerb/client/PkinitOption.USING_RSA:Lorg/apache/kerby/kerberos/kerb/client/PkinitOption;
      62: invokevirtual #17                 // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      65: invokevirtual #18                 // Method org/apache/kerby/KOptions.add:(Lorg/apache/kerby/KOption;)V
      68: aload_2
      69: getstatic     #23                 // Field org/apache/kerby/kerberos/kerb/client/PkinitOption.USE_ANONYMOUS:Lorg/apache/kerby/kerberos/kerb/client/PkinitOption;
      72: invokevirtual #24                 // Method org/apache/kerby/KOptions.contains:(Lorg/apache/kerby/KOption;)Z
      75: ifeq          88
      78: aload_0
      79: invokevirtual #25                 // Method getKdcOptions:()Lorg/apache/kerby/kerberos/kerb/type/kdc/KdcOptions;
      82: getstatic     #26                 // Field org/apache/kerby/kerberos/kerb/type/kdc/KdcOption.REQUEST_ANONYMOUS:Lorg/apache/kerby/kerberos/kerb/type/kdc/KdcOption;
      85: invokevirtual #27                 // Method org/apache/kerby/kerberos/kerb/type/kdc/KdcOptions.setFlag:(Lorg/apache/kerby/asn1/EnumType;)V
      88: aload_1
      89: areturn

  public void processResponse(org.apache.kerby.kerberos.kerb.type.kdc.KdcRep) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getPreauthContext:()Lorg/apache/kerby/kerberos/kerb/client/preauth/PreauthContext;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #28                 // Method org/apache/kerby/kerberos/kerb/type/kdc/KdcRep.getPaData:()Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;
      10: invokevirtual #29                 // Method org/apache/kerby/kerberos/kerb/client/preauth/PreauthContext.setInputPaData:(Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;)V
      13: aload_0
      14: invokevirtual #9                  // Method preauth:()V
      17: aload_0
      18: aload_1
      19: invokespecial #30                 // Method org/apache/kerby/kerberos/kerb/client/request/AsRequest.processResponse:(Lorg/apache/kerby/kerberos/kerb/type/kdc/KdcRep;)V
      22: return

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey getClientKey() throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getAsKey:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
       4: areturn
}
