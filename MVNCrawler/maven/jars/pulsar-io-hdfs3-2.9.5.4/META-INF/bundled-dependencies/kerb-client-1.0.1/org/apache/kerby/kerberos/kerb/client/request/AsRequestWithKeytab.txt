Compiled from "AsRequestWithKeytab.java"
public class org.apache.kerby.kerberos.kerb.client.request.AsRequestWithKeytab extends org.apache.kerby.kerberos.kerb.client.request.AsRequest {
  public org.apache.kerby.kerberos.kerb.client.request.AsRequestWithKeytab(org.apache.kerby.kerberos.kerb.client.KrbContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/client/request/AsRequest."<init>":(Lorg/apache/kerby/kerberos/kerb/client/KrbContext;)V
       5: aload_0
       6: getstatic     #2                  // Field org/apache/kerby/kerberos/kerb/type/pa/PaDataType.ENC_TIMESTAMP:Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
       9: invokevirtual #3                  // Method setAllowedPreauth:(Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;)V
      12: return

  private org.apache.kerby.kerberos.kerb.keytab.Keytab getKeytab();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #4                  // Method getRequestOptions:()Lorg/apache/kerby/KOptions;
       6: astore_2
       7: aload_2
       8: getstatic     #5                  // Field org/apache/kerby/kerberos/kerb/client/KrbOption.KEYTAB_FILE:Lorg/apache/kerby/kerberos/kerb/client/KrbOption;
      11: invokevirtual #6                  // Method org/apache/kerby/KOptions.contains:(Lorg/apache/kerby/KOption;)Z
      14: ifeq          25
      17: aload_2
      18: getstatic     #5                  // Field org/apache/kerby/kerberos/kerb/client/KrbOption.KEYTAB_FILE:Lorg/apache/kerby/kerberos/kerb/client/KrbOption;
      21: invokevirtual #7                  // Method org/apache/kerby/KOptions.getFileOption:(Lorg/apache/kerby/KOption;)Ljava/io/File;
      24: astore_1
      25: aload_2
      26: getstatic     #8                  // Field org/apache/kerby/kerberos/kerb/client/KrbOption.USE_DFT_KEYTAB:Lorg/apache/kerby/kerberos/kerb/client/KrbOption;
      29: invokevirtual #6                  // Method org/apache/kerby/KOptions.contains:(Lorg/apache/kerby/KOption;)Z
      32: ifeq          97
      35: ldc           #9                  // String KRB5_CLIENT_KTNAME
      37: invokestatic  #10                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      40: astore_3
      41: aload_0
      42: invokevirtual #11                 // Method getContext:()Lorg/apache/kerby/kerberos/kerb/client/KrbContext;
      45: invokevirtual #12                 // Method org/apache/kerby/kerberos/kerb/client/KrbContext.getConfig:()Lorg/apache/kerby/kerberos/kerb/client/KrbConfig;
      48: ldc           #13                 // String default_client_keytab_name
      50: invokevirtual #14                 // Method org/apache/kerby/kerberos/kerb/client/KrbConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
      53: astore        4
      55: aload_3
      56: ifnull        71
      59: new           #15                 // class java/io/File
      62: dup
      63: aload_3
      64: invokespecial #16                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      67: astore_1
      68: goto          97
      71: aload         4
      73: ifnull        89
      76: new           #15                 // class java/io/File
      79: dup
      80: aload         4
      82: invokespecial #16                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      85: astore_1
      86: goto          97
      89: getstatic     #17                 // Field java/lang/System.err:Ljava/io/PrintStream;
      92: ldc           #18                 // String Default client keytab file not found.
      94: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      97: aconst_null
      98: astore_3
      99: aload_1
     100: invokestatic  #20                 // Method org/apache/kerby/kerberos/kerb/keytab/Keytab.loadKeytab:(Ljava/io/File;)Lorg/apache/kerby/kerberos/kerb/keytab/Keytab;
     103: astore_3
     104: goto          137
     107: astore        4
     109: getstatic     #17                 // Field java/lang/System.err:Ljava/io/PrintStream;
     112: new           #22                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #24                 // String Can not load keytab from file
     121: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_1
     125: invokevirtual #26                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     128: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     137: aload_3
     138: areturn
    Exception table:
       from    to  target type
          99   104   107   Class java/io/IOException

  public org.apache.kerby.kerberos.kerb.type.base.EncryptionKey getClientKey() throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/apache/kerby/kerberos/kerb/client/request/AsRequest.getClientKey:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
       4: ifnonnull     28
       7: aload_0
       8: invokespecial #29                 // Method getKeytab:()Lorg/apache/kerby/kerberos/kerb/keytab/Keytab;
      11: aload_0
      12: invokevirtual #30                 // Method getClientPrincipal:()Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;
      15: aload_0
      16: invokevirtual #31                 // Method getChosenEncryptionType:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;
      19: invokevirtual #32                 // Method org/apache/kerby/kerberos/kerb/keytab/Keytab.getKey:(Lorg/apache/kerby/kerberos/kerb/type/base/PrincipalName;Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionType;)Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      22: astore_1
      23: aload_0
      24: aload_1
      25: invokevirtual #33                 // Method setClientKey:(Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;)V
      28: aload_0
      29: invokespecial #28                 // Method org/apache/kerby/kerberos/kerb/client/request/AsRequest.getClientKey:()Lorg/apache/kerby/kerberos/kerb/type/base/EncryptionKey;
      32: areturn
}
