Compiled from "TgsRequestWithToken.java"
public class org.apache.kerby.kerberos.kerb.client.request.TgsRequestWithToken extends org.apache.kerby.kerberos.kerb.client.request.ArmoredTgsRequest {
  public org.apache.kerby.kerberos.kerb.client.request.TgsRequestWithToken(org.apache.kerby.kerberos.kerb.client.KrbContext) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/client/request/ArmoredTgsRequest."<init>":(Lorg/apache/kerby/kerberos/kerb/client/KrbContext;)V
       5: aload_0
       6: getstatic     #2                  // Field org/apache/kerby/kerberos/kerb/type/pa/PaDataType.TOKEN_REQUEST:Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;
       9: invokevirtual #3                  // Method setAllowedPreauth:(Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;)V
      12: return

  public org.apache.kerby.KOptions getPreauthOptions();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/kerby/kerberos/kerb/client/request/ArmoredTgsRequest.getPreauthOptions:()Lorg/apache/kerby/KOptions;
       4: astore_1
       5: aload_0
       6: invokevirtual #5                  // Method getRequestOptions:()Lorg/apache/kerby/KOptions;
       9: astore_2
      10: aload_1
      11: aload_2
      12: getstatic     #6                  // Field org/apache/kerby/kerberos/kerb/client/TokenOption.USE_TOKEN:Lorg/apache/kerby/kerberos/kerb/client/TokenOption;
      15: invokevirtual #7                  // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      18: invokevirtual #8                  // Method org/apache/kerby/KOptions.add:(Lorg/apache/kerby/KOption;)V
      21: aload_1
      22: aload_2
      23: getstatic     #9                  // Field org/apache/kerby/kerberos/kerb/client/TokenOption.USER_AC_TOKEN:Lorg/apache/kerby/kerberos/kerb/client/TokenOption;
      26: invokevirtual #7                  // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      29: invokevirtual #8                  // Method org/apache/kerby/KOptions.add:(Lorg/apache/kerby/KOption;)V
      32: aload_1
      33: areturn

  public org.apache.kerby.kerberos.kerb.type.base.PrincipalName getClientPrincipal();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getPreauthOptions:()Lorg/apache/kerby/KOptions;
       4: getstatic     #9                  // Field org/apache/kerby/kerberos/kerb/client/TokenOption.USER_AC_TOKEN:Lorg/apache/kerby/kerberos/kerb/client/TokenOption;
       7: invokevirtual #7                  // Method org/apache/kerby/KOptions.getOption:(Lorg/apache/kerby/KOption;)Lorg/apache/kerby/KOption;
      10: astore_1
      11: aload_1
      12: invokeinterface #11,  1           // InterfaceMethod org/apache/kerby/KOption.getOptionInfo:()Lorg/apache/kerby/KOptionInfo;
      17: invokevirtual #12                 // Method org/apache/kerby/KOptionInfo.getValue:()Ljava/lang/Object;
      20: checkcast     #13                 // class org/apache/kerby/kerberos/kerb/type/base/AuthToken
      23: astore_2
      24: new           #14                 // class org/apache/kerby/kerberos/kerb/type/base/PrincipalName
      27: dup
      28: aload_2
      29: invokeinterface #15,  1           // InterfaceMethod org/apache/kerby/kerberos/kerb/type/base/AuthToken.getSubject:()Ljava/lang/String;
      34: invokespecial #16                 // Method org/apache/kerby/kerberos/kerb/type/base/PrincipalName."<init>":(Ljava/lang/String;)V
      37: areturn
}
