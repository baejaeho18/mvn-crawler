Compiled from "KrbConfig.java"
public class org.apache.kerby.kerberos.kerb.client.KrbConfig extends org.apache.kerby.kerberos.kerb.common.Krb5Conf {
  private static final java.lang.String LIBDEFAULT;

  private static final java.lang.String REALMS;

  public org.apache.kerby.kerberos.kerb.client.KrbConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/kerby/kerberos/kerb/common/Krb5Conf."<init>":()V
       4: return

  public boolean enableDebug();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KRB_DEBUG:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public java.lang.String getKdcHost();
    Code:
       0: aload_0
       1: getstatic     #7                  // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_HOST:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #8                  // Method getString:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  public int getKdcPort();
    Code:
       0: aload_0
       1: getstatic     #9                  // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_PORT:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #10                 // Method getInt:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Integer;
      17: astore_1
      18: aload_1
      19: ifnull        27
      22: aload_1
      23: invokevirtual #11                 // Method java/lang/Integer.intValue:()I
      26: ireturn
      27: iconst_m1
      28: ireturn

  public int getKdcTcpPort();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_TCP_PORT:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #10                 // Method getInt:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Integer;
      17: astore_1
      18: aload_1
      19: ifnull        34
      22: aload_1
      23: invokevirtual #11                 // Method java/lang/Integer.intValue:()I
      26: ifle          34
      29: aload_1
      30: invokevirtual #11                 // Method java/lang/Integer.intValue:()I
      33: ireturn
      34: aload_0
      35: invokevirtual #13                 // Method getKdcPort:()I
      38: ireturn

  public boolean allowUdp();
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_ALLOW_UDP:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ifne          63
      23: aload_0
      24: getstatic     #15                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_UDP_PORT:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
      27: iconst_1
      28: iconst_1
      29: anewarray     #3                  // class java/lang/String
      32: dup
      33: iconst_0
      34: ldc           #4                  // String libdefaults
      36: aastore
      37: invokevirtual #10                 // Method getInt:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Integer;
      40: ifnonnull     63
      43: aload_0
      44: getstatic     #9                  // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_PORT:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
      47: iconst_0
      48: iconst_1
      49: anewarray     #3                  // class java/lang/String
      52: dup
      53: iconst_0
      54: ldc           #4                  // String libdefaults
      56: aastore
      57: invokevirtual #10                 // Method getInt:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Integer;
      60: ifnull        67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  public boolean allowTcp();
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_ALLOW_TCP:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ifne          63
      23: aload_0
      24: getstatic     #12                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_TCP_PORT:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
      27: iconst_1
      28: iconst_1
      29: anewarray     #3                  // class java/lang/String
      32: dup
      33: iconst_0
      34: ldc           #4                  // String libdefaults
      36: aastore
      37: invokevirtual #10                 // Method getInt:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Integer;
      40: ifnonnull     63
      43: aload_0
      44: getstatic     #9                  // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_PORT:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
      47: iconst_0
      48: iconst_1
      49: anewarray     #3                  // class java/lang/String
      52: dup
      53: iconst_0
      54: ldc           #4                  // String libdefaults
      56: aastore
      57: invokevirtual #10                 // Method getInt:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Integer;
      60: ifnull        67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  public int getKdcUdpPort();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_UDP_PORT:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #10                 // Method getInt:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Integer;
      17: astore_1
      18: aload_1
      19: ifnull        34
      22: aload_1
      23: invokevirtual #11                 // Method java/lang/Integer.intValue:()I
      26: ifle          34
      29: aload_1
      30: invokevirtual #11                 // Method java/lang/Integer.intValue:()I
      33: ireturn
      34: aload_0
      35: invokevirtual #13                 // Method getKdcPort:()I
      38: ireturn

  public java.lang.String getKdcRealm();
    Code:
       0: aload_0
       1: getstatic     #17                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_REALM:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_0
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #8                  // Method getString:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/String;
      17: astore_1
      18: aload_1
      19: ifnonnull     54
      22: aload_0
      23: getstatic     #18                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.DEFAULT_REALM:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
      26: iconst_0
      27: iconst_1
      28: anewarray     #3                  // class java/lang/String
      31: dup
      32: iconst_0
      33: ldc           #4                  // String libdefaults
      35: aastore
      36: invokevirtual #8                  // Method getString:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/String;
      39: astore_1
      40: aload_1
      41: ifnonnull     54
      44: getstatic     #17                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.KDC_REALM:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
      47: invokevirtual #19                 // Method org/apache/kerby/kerberos/kerb/client/KrbConfigKey.getDefaultValue:()Ljava/lang/Object;
      50: checkcast     #3                  // class java/lang/String
      53: astore_1
      54: aload_1
      55: areturn

  public boolean isPreauthRequired();
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.PREAUTH_REQUIRED:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public java.lang.String getTgsPrincipal();
    Code:
       0: aload_0
       1: getstatic     #21                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.TGS_PRINCIPAL:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #8                  // Method getString:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  public long getAllowableClockSkew();
    Code:
       0: aload_0
       1: getstatic     #22                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.CLOCKSKEW:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #23                 // Method getLong:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Long;
      17: invokevirtual #24                 // Method java/lang/Long.longValue:()J
      20: lreturn

  public boolean isEmptyAddressesAllowed();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.EMPTY_ADDRESSES_ALLOWED:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public boolean isForwardableAllowed();
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.FORWARDABLE:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public boolean isPostdatedAllowed();
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.POSTDATED_ALLOWED:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public boolean isProxiableAllowed();
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.PROXIABLE:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public boolean isRenewableAllowed();
    Code:
       0: aload_0
       1: getstatic     #29                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.RENEWABLE_ALLOWED:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public long getMaximumRenewableLifetime();
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.MAXIMUM_RENEWABLE_LIFETIME:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #23                 // Method getLong:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Long;
      17: invokevirtual #24                 // Method java/lang/Long.longValue:()J
      20: lreturn

  public long getMaximumTicketLifetime();
    Code:
       0: aload_0
       1: getstatic     #31                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.MAXIMUM_TICKET_LIFETIME:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #23                 // Method getLong:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Long;
      17: invokevirtual #24                 // Method java/lang/Long.longValue:()J
      20: lreturn

  public long getMinimumTicketLifetime();
    Code:
       0: aload_0
       1: getstatic     #32                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.MINIMUM_TICKET_LIFETIME:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #23                 // Method getLong:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Long;
      17: invokevirtual #24                 // Method java/lang/Long.longValue:()J
      20: lreturn

  public java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType> getEncryptionTypes();
    Code:
       0: aload_0
       1: getstatic     #33                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.PERMITTED_ENCTYPES:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #34                 // Method getEncTypes:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/util/List;
      17: areturn

  public boolean isPaEncTimestampRequired();
    Code:
       0: aload_0
       1: getstatic     #35                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.PA_ENC_TIMESTAMP_REQUIRED:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public boolean isBodyChecksumVerified();
    Code:
       0: aload_0
       1: getstatic     #36                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.VERIFY_BODY_CHECKSUM:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public java.lang.String getDefaultRealm();
    Code:
       0: aload_0
       1: getstatic     #18                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.DEFAULT_REALM:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #8                  // Method getString:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  public boolean getDnsLookUpKdc();
    Code:
       0: aload_0
       1: getstatic     #37                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.DNS_LOOKUP_KDC:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public boolean getDnsLookUpRealm();
    Code:
       0: aload_0
       1: getstatic     #38                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.DNS_LOOKUP_REALM:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public boolean getAllowWeakCrypto();
    Code:
       0: aload_0
       1: getstatic     #39                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.ALLOW_WEAK_CRYPTO:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #5                  // Method getBoolean:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public long getTicketLifetime();
    Code:
       0: aload_0
       1: getstatic     #40                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.TICKET_LIFETIME:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #23                 // Method getLong:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Long;
      17: invokevirtual #24                 // Method java/lang/Long.longValue:()J
      20: lreturn

  public long getRenewLifetime();
    Code:
       0: aload_0
       1: getstatic     #41                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.RENEW_LIFETIME:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #23                 // Method getLong:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/Long;
      17: invokevirtual #24                 // Method java/lang/Long.longValue:()J
      20: lreturn

  public java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType> getDefaultTgsEnctypes();
    Code:
       0: aload_0
       1: getstatic     #42                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.DEFAULT_TGS_ENCTYPES:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #34                 // Method getEncTypes:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/util/List;
      17: areturn

  public java.util.List<org.apache.kerby.kerberos.kerb.type.base.EncryptionType> getDefaultTktEnctypes();
    Code:
       0: aload_0
       1: getstatic     #43                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.DEFAULT_TKT_ENCTYPES:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #34                 // Method getEncTypes:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/util/List;
      17: areturn

  public java.util.List<java.lang.String> getPkinitAnchors();
    Code:
       0: aload_0
       1: getstatic     #44                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.PKINIT_ANCHORS:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #45                 // Method getStringArray:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)[Ljava/lang/String;
      17: invokestatic  #46                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: areturn

  public java.util.List<java.lang.String> getPkinitIdentities();
    Code:
       0: aload_0
       1: getstatic     #47                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.PKINIT_IDENTITIES:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #45                 // Method getStringArray:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)[Ljava/lang/String;
      17: invokestatic  #46                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: areturn

  public java.lang.String getPkinitKdcHostName();
    Code:
       0: aload_0
       1: getstatic     #48                 // Field org/apache/kerby/kerberos/kerb/client/KrbConfigKey.PKINIT_KDC_HOSTNAME:Lorg/apache/kerby/kerberos/kerb/client/KrbConfigKey;
       4: iconst_1
       5: iconst_1
       6: anewarray     #3                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #4                  // String libdefaults
      13: aastore
      14: invokevirtual #8                  // Method getString:(Lorg/apache/kerby/config/ConfigKey;Z[Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  public java.util.List<java.lang.Object> getRealmSectionItems(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method getRealmSection:(Ljava/lang/String;)Ljava/util/Map;
       5: astore_3
       6: aload_3
       7: invokeinterface #50,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      12: ifeq          19
      15: invokestatic  #51                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      18: areturn
      19: new           #52                 // class java/util/ArrayList
      22: dup
      23: invokespecial #53                 // Method java/util/ArrayList."<init>":()V
      26: astore        4
      28: aload_3
      29: invokeinterface #54,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      34: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore        5
      41: aload         5
      43: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          98
      51: aload         5
      53: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #58                 // class java/util/Map$Entry
      61: astore        6
      63: aload         6
      65: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      70: checkcast     #3                  // class java/lang/String
      73: aload_2
      74: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          95
      80: aload         4
      82: aload         6
      84: invokeinterface #61,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      89: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      94: pop
      95: goto          41
      98: aload         4
     100: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getRealmSection(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #63                 // String realms
       3: invokevirtual #64                 // Method getSection:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_2
       7: aload_2
       8: ifnull        82
      11: aload_2
      12: checkcast     #65                 // class java/util/Map
      15: astore_3
      16: aload_3
      17: invokeinterface #54,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      22: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          82
      39: aload         4
      41: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #58                 // class java/util/Map$Entry
      49: astore        5
      51: aload         5
      53: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: checkcast     #3                  // class java/lang/String
      61: aload_1
      62: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifeq          79
      68: aload         5
      70: invokeinterface #61,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #65                 // class java/util/Map
      78: areturn
      79: goto          29
      82: invokestatic  #66                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      85: areturn
}
