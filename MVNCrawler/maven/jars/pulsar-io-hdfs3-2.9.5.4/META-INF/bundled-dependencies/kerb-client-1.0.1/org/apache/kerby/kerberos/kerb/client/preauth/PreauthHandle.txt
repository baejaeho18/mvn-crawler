Compiled from "PreauthHandle.java"
public class org.apache.kerby.kerberos.kerb.client.preauth.PreauthHandle {
  public org.apache.kerby.kerberos.kerb.client.preauth.KrbPreauth preauth;

  public org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext requestContext;

  public org.apache.kerby.kerberos.kerb.client.preauth.PreauthHandle(org.apache.kerby.kerberos.kerb.client.preauth.KrbPreauth);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       9: return

  public void initRequestContext(org.apache.kerby.kerberos.kerb.client.request.KdcRequest);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       5: aload_1
       6: invokeinterface #3,  2            // InterfaceMethod org/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth.initRequestContext:(Lorg/apache/kerby/kerberos/kerb/client/request/KdcRequest;)Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;
      11: putfield      #4                  // Field requestContext:Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;
      14: return

  public void prepareQuestions(org.apache.kerby.kerberos.kerb.client.request.KdcRequest) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field requestContext:Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;
       9: invokeinterface #5,  3            // InterfaceMethod org/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth.prepareQuestions:(Lorg/apache/kerby/kerberos/kerb/client/request/KdcRequest;Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;)V
      14: return

  public void setPreauthOptions(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.KOptions) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field requestContext:Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;
       9: aload_2
      10: invokeinterface #6,  4            // InterfaceMethod org/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth.setPreauthOptions:(Lorg/apache/kerby/kerberos/kerb/client/request/KdcRequest;Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;Lorg/apache/kerby/KOptions;)V
      15: return

  public void tryFirst(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.type.pa.PaData) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field requestContext:Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;
       9: aload_2
      10: invokeinterface #7,  4            // InterfaceMethod org/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth.tryFirst:(Lorg/apache/kerby/kerberos/kerb/client/request/KdcRequest;Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;)V
      15: return

  public boolean process(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.type.pa.PaDataEntry, org.apache.kerby.kerberos.kerb.type.pa.PaData) throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field requestContext:Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;
       9: aload_2
      10: aload_3
      11: invokeinterface #8,  5            // InterfaceMethod org/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth.process:(Lorg/apache/kerby/kerberos/kerb/client/request/KdcRequest;Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataEntry;Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;)Z
      16: ireturn

  public boolean tryAgain(org.apache.kerby.kerberos.kerb.client.request.KdcRequest, org.apache.kerby.kerberos.kerb.type.pa.PaDataType, org.apache.kerby.kerberos.kerb.type.pa.PaData, org.apache.kerby.kerberos.kerb.type.pa.PaData);
    Code:
       0: aload_0
       1: getfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field requestContext:Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokeinterface #9,  6            // InterfaceMethod org/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth.tryAgain:(Lorg/apache/kerby/kerberos/kerb/client/request/KdcRequest;Lorg/apache/kerby/kerberos/kerb/preauth/PluginRequestContext;Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;Lorg/apache/kerby/kerberos/kerb/type/pa/PaData;)Z
      18: ireturn

  public boolean isReal(org.apache.kerby.kerberos.kerb.type.pa.PaDataType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field preauth:Lorg/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod org/apache/kerby/kerberos/kerb/client/preauth/KrbPreauth.getFlags:(Lorg/apache/kerby/kerberos/kerb/type/pa/PaDataType;)Lorg/apache/kerby/kerberos/kerb/preauth/PaFlags;
      10: astore_2
      11: aload_2
      12: invokevirtual #11                 // Method org/apache/kerby/kerberos/kerb/preauth/PaFlags.isReal:()Z
      15: ireturn
}
