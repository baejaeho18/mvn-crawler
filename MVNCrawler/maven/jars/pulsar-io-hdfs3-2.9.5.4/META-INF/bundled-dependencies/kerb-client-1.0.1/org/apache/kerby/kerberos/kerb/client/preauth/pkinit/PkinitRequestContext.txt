Compiled from "PkinitRequestContext.java"
public class org.apache.kerby.kerberos.kerb.client.preauth.pkinit.PkinitRequestContext implements org.apache.kerby.kerberos.kerb.preauth.PluginRequestContext {
  public org.apache.kerby.kerberos.kerb.client.preauth.pkinit.PkinitRequestOpts requestOpts;

  public org.apache.kerby.kerberos.kerb.preauth.pkinit.IdentityOpts identityOpts;

  public boolean doIdentityMatching;

  public org.apache.kerby.kerberos.kerb.type.pa.PaDataType paType;

  public boolean rfc6112Kdc;

  public boolean identityInitialized;

  public boolean identityPrompted;

  private org.apache.kerby.kerberos.kerb.crypto.dh.DiffieHellmanClient dhClient;

  public org.apache.kerby.kerberos.kerb.client.preauth.pkinit.PkinitRequestContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts
       8: dup
       9: invokespecial #3                  // Method org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts."<init>":()V
      12: putfield      #4                  // Field requestOpts:Lorg/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts;
      15: aload_0
      16: new           #5                  // class org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts
      19: dup
      20: invokespecial #6                  // Method org/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts."<init>":()V
      23: putfield      #7                  // Field identityOpts:Lorg/apache/kerby/kerberos/kerb/preauth/pkinit/IdentityOpts;
      26: return

  public void updateRequestOpts(org.apache.kerby.kerberos.kerb.preauth.pkinit.PluginOpts);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestOpts:Lorg/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts;
       4: aload_1
       5: getfield      #8                  // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/PluginOpts.requireEku:Z
       8: putfield      #9                  // Field org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts.requireEku:Z
      11: aload_0
      12: getfield      #4                  // Field requestOpts:Lorg/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts;
      15: aload_1
      16: getfield      #10                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/PluginOpts.acceptSecondaryEku:Z
      19: putfield      #11                 // Field org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts.acceptSecondaryEku:Z
      22: aload_0
      23: getfield      #4                  // Field requestOpts:Lorg/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts;
      26: aload_1
      27: getfield      #12                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/PluginOpts.allowUpn:Z
      30: putfield      #13                 // Field org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts.allowUpn:Z
      33: aload_0
      34: getfield      #4                  // Field requestOpts:Lorg/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts;
      37: aload_1
      38: getfield      #14                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/PluginOpts.usingRsa:Z
      41: putfield      #15                 // Field org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts.usingRsa:Z
      44: aload_0
      45: getfield      #4                  // Field requestOpts:Lorg/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts;
      48: aload_1
      49: getfield      #16                 // Field org/apache/kerby/kerberos/kerb/preauth/pkinit/PluginOpts.requireCrlChecking:Z
      52: putfield      #17                 // Field org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitRequestOpts.requireCrlChecking:Z
      55: return

  public void setDhClient(org.apache.kerby.kerberos.kerb.crypto.dh.DiffieHellmanClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field dhClient:Lorg/apache/kerby/kerberos/kerb/crypto/dh/DiffieHellmanClient;
       5: return

  public org.apache.kerby.kerberos.kerb.crypto.dh.DiffieHellmanClient getDhClient();
    Code:
       0: aload_0
       1: getfield      #18                 // Field dhClient:Lorg/apache/kerby/kerberos/kerb/crypto/dh/DiffieHellmanClient;
       4: areturn
}
