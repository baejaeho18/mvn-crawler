Compiled from "NonBlockingByteBufferJsonParser.java"
public class com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser extends com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase implements com.fasterxml.jackson.core.async.ByteBufferFeeder {
  private java.nio.ByteBuffer _inputBuffer;

  public com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #1                  // Method com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase."<init>":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V
       7: aload_0
       8: getstatic     #2                  // Field NO_BYTES:[B
      11: invokestatic  #3                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      14: putfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;
      17: return

  public com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder();
    Code:
       0: aload_0
       1: areturn

  public void feedInput(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field _inputPtr:I
       4: aload_0
       5: getfield      #6                  // Field _inputEnd:I
       8: if_icmpge     29
      11: aload_0
      12: ldc           #7                  // String Still have %d undecoded bytes, should not call \'feedInput\'
      14: aload_0
      15: getfield      #6                  // Field _inputEnd:I
      18: aload_0
      19: getfield      #5                  // Field _inputPtr:I
      22: isub
      23: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokevirtual #9                  // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;)V
      29: aload_1
      30: invokevirtual #10                 // Method java/nio/ByteBuffer.position:()I
      33: istore_2
      34: aload_1
      35: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:()I
      38: istore_3
      39: iload_3
      40: iload_2
      41: if_icmpge     58
      44: aload_0
      45: ldc           #12                 // String Input end (%d) may not be before start (%d)
      47: iload_3
      48: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: iload_2
      52: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: invokevirtual #13                 // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      58: aload_0
      59: getfield      #14                 // Field _endOfInput:Z
      62: ifeq          71
      65: aload_0
      66: ldc           #15                 // String Already closed, can not feed more input
      68: invokevirtual #16                 // Method _reportError:(Ljava/lang/String;)V
      71: aload_0
      72: dup
      73: getfield      #17                 // Field _currInputProcessed:J
      76: aload_0
      77: getfield      #18                 // Field _origBufferLen:I
      80: i2l
      81: ladd
      82: putfield      #17                 // Field _currInputProcessed:J
      85: aload_0
      86: iload_2
      87: aload_0
      88: getfield      #6                  // Field _inputEnd:I
      91: aload_0
      92: getfield      #19                 // Field _currInputRowStart:I
      95: isub
      96: isub
      97: putfield      #19                 // Field _currInputRowStart:I
     100: aload_0
     101: iload_2
     102: putfield      #20                 // Field _currBufferStart:I
     105: aload_0
     106: aload_1
     107: putfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;
     110: aload_0
     111: iload_2
     112: putfield      #5                  // Field _inputPtr:I
     115: aload_0
     116: iload_3
     117: putfield      #6                  // Field _inputEnd:I
     120: aload_0
     121: iload_3
     122: iload_2
     123: isub
     124: putfield      #18                 // Field _origBufferLen:I
     127: return

  public int releaseBuffered(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _inputEnd:I
       4: aload_0
       5: getfield      #5                  // Field _inputPtr:I
       8: isub
       9: istore_2
      10: iload_2
      11: ifle          30
      14: aload_1
      15: invokestatic  #21                 // Method java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;
      18: astore_3
      19: aload_3
      20: aload_0
      21: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;
      24: invokeinterface #22,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      29: pop
      30: iload_2
      31: ireturn

  protected byte getNextSignedByteFromBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: dup
       6: getfield      #5                  // Field _inputPtr:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #5                  // Field _inputPtr:I
      15: invokevirtual #23                 // Method java/nio/ByteBuffer.get:(I)B
      18: ireturn

  protected int getNextUnsignedByteFromBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: dup
       6: getfield      #5                  // Field _inputPtr:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #5                  // Field _inputPtr:I
      15: invokevirtual #23                 // Method java/nio/ByteBuffer.get:(I)B
      18: sipush        255
      21: iand
      22: ireturn

  protected byte getByteFromBuffer(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #23                 // Method java/nio/ByteBuffer.get:(I)B
       8: ireturn
}
