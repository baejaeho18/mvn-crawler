Compiled from "ContentReference.java"
public class com.fasterxml.jackson.core.io.ContentReference implements java.io.Serializable {
  private static final long serialVersionUID;

  protected static final com.fasterxml.jackson.core.io.ContentReference UNKNOWN_CONTENT;

  public static final int DEFAULT_MAX_CONTENT_SNIPPET;

  protected final transient java.lang.Object _rawContent;

  protected final int _offset;

  protected final int _length;

  protected final boolean _isContentTextual;

  protected com.fasterxml.jackson.core.io.ContentReference(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_m1
       4: iconst_m1
       5: invokespecial #1                  // Method "<init>":(ZLjava/lang/Object;II)V
       8: return

  protected com.fasterxml.jackson.core.io.ContentReference(boolean, java.lang.Object, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field _isContentTextual:Z
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field _rawContent:Ljava/lang/Object;
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field _offset:I
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field _length:I
      25: return

  public static com.fasterxml.jackson.core.io.ContentReference unknown();
    Code:
       0: getstatic     #7                  // Field UNKNOWN_CONTENT:Lcom/fasterxml/jackson/core/io/ContentReference;
       3: areturn

  public static com.fasterxml.jackson.core.io.ContentReference construct(boolean, java.lang.Object);
    Code:
       0: new           #8                  // class com/fasterxml/jackson/core/io/ContentReference
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #9                  // Method "<init>":(ZLjava/lang/Object;)V
       9: areturn

  public static com.fasterxml.jackson.core.io.ContentReference construct(boolean, java.lang.Object, int, int);
    Code:
       0: new           #8                  // class com/fasterxml/jackson/core/io/ContentReference
       3: dup
       4: iload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #1                  // Method "<init>":(ZLjava/lang/Object;II)V
      11: areturn

  public static com.fasterxml.jackson.core.io.ContentReference rawReference(boolean, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class com/fasterxml/jackson/core/io/ContentReference
       4: ifeq          12
       7: aload_1
       8: checkcast     #8                  // class com/fasterxml/jackson/core/io/ContentReference
      11: areturn
      12: new           #8                  // class com/fasterxml/jackson/core/io/ContentReference
      15: dup
      16: iload_0
      17: aload_1
      18: invokespecial #9                  // Method "<init>":(ZLjava/lang/Object;)V
      21: areturn

  public static com.fasterxml.jackson.core.io.ContentReference rawReference(java.lang.Object);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #10                 // Method rawReference:(ZLjava/lang/Object;)Lcom/fasterxml/jackson/core/io/ContentReference;
       5: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException;
    Code:
       0: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: return

  protected java.lang.Object readResolve();
    Code:
       0: getstatic     #7                  // Field UNKNOWN_CONTENT:Lcom/fasterxml/jackson/core/io/ContentReference;
       3: areturn

  public boolean hasTextualContent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _isContentTextual:Z
       4: ireturn

  public java.lang.Object getRawContent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
       4: areturn

  public int contentOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _offset:I
       4: ireturn

  public int contentLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _length:I
       4: ireturn

  protected int maxContentSnippetLength();
    Code:
       0: sipush        500
       3: ireturn

  public java.lang.String buildSourceDescription();
    Code:
       0: aload_0
       1: new           #11                 // class java/lang/StringBuilder
       4: dup
       5: sipush        200
       8: invokespecial #12                 // Method java/lang/StringBuilder."<init>":(I)V
      11: invokevirtual #13                 // Method appendSourceDescription:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
      14: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  public java.lang.StringBuilder appendSourceDescription(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getRawContent:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     18
       9: aload_1
      10: ldc           #16                 // String UNKNOWN
      12: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload_1
      17: areturn
      18: aload_2
      19: instanceof    #18                 // class java/lang/Class
      22: ifeq          32
      25: aload_2
      26: checkcast     #18                 // class java/lang/Class
      29: goto          36
      32: aload_2
      33: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: astore_3
      37: aload_3
      38: invokevirtual #20                 // Method java/lang/Class.getName:()Ljava/lang/String;
      41: astore        4
      43: aload         4
      45: ldc           #21                 // String java.
      47: invokevirtual #22                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      50: ifeq          62
      53: aload_3
      54: invokevirtual #23                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      57: astore        4
      59: goto          87
      62: aload_2
      63: instanceof    #24                 // class "[B"
      66: ifeq          76
      69: ldc           #25                 // String byte[]
      71: astore        4
      73: goto          87
      76: aload_2
      77: instanceof    #26                 // class "[C"
      80: ifeq          87
      83: ldc           #27                 // String char[]
      85: astore        4
      87: aload_1
      88: bipush        40
      90: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      93: aload         4
      95: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: bipush        41
     100: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     103: pop
     104: aload_0
     105: invokevirtual #29                 // Method hasTextualContent:()Z
     108: ifeq          277
     111: ldc           #30                 // String  chars
     113: astore        5
     115: aload_0
     116: invokevirtual #31                 // Method maxContentSnippetLength:()I
     119: istore        7
     121: iconst_2
     122: newarray       int
     124: dup
     125: iconst_0
     126: aload_0
     127: invokevirtual #32                 // Method contentOffset:()I
     130: iastore
     131: dup
     132: iconst_1
     133: aload_0
     134: invokevirtual #33                 // Method contentLength:()I
     137: iastore
     138: astore        8
     140: aload_2
     141: instanceof    #34                 // class java/lang/CharSequence
     144: ifeq          164
     147: aload_0
     148: aload_2
     149: checkcast     #34                 // class java/lang/CharSequence
     152: aload         8
     154: iload         7
     156: invokevirtual #35                 // Method _truncate:(Ljava/lang/CharSequence;[II)Ljava/lang/String;
     159: astore        6
     161: goto          225
     164: aload_2
     165: instanceof    #26                 // class "[C"
     168: ifeq          191
     171: aload_0
     172: aload_2
     173: checkcast     #26                 // class "[C"
     176: checkcast     #26                 // class "[C"
     179: aload         8
     181: iload         7
     183: invokevirtual #36                 // Method _truncate:([C[II)Ljava/lang/String;
     186: astore        6
     188: goto          225
     191: aload_2
     192: instanceof    #24                 // class "[B"
     195: ifeq          222
     198: aload_0
     199: aload_2
     200: checkcast     #24                 // class "[B"
     203: checkcast     #24                 // class "[B"
     206: aload         8
     208: iload         7
     210: invokevirtual #37                 // Method _truncate:([B[II)Ljava/lang/String;
     213: astore        6
     215: ldc           #38                 // String  bytes
     217: astore        5
     219: goto          225
     222: aconst_null
     223: astore        6
     225: aload         6
     227: ifnull        274
     230: aload_0
     231: aload_1
     232: aload         6
     234: invokevirtual #39                 // Method _append:(Ljava/lang/StringBuilder;Ljava/lang/String;)I
     237: pop
     238: aload         8
     240: iconst_1
     241: iaload
     242: iload         7
     244: if_icmple     274
     247: aload_1
     248: ldc           #40                 // String [truncated
     250: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: aload         8
     255: iconst_1
     256: iaload
     257: iload         7
     259: isub
     260: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     263: aload         5
     265: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: bipush        93
     270: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     273: pop
     274: goto          322
     277: aload_2
     278: instanceof    #24                 // class "[B"
     281: ifeq          322
     284: aload_0
     285: invokevirtual #33                 // Method contentLength:()I
     288: istore        5
     290: iload         5
     292: ifge          305
     295: aload_2
     296: checkcast     #24                 // class "[B"
     299: checkcast     #24                 // class "[B"
     302: arraylength
     303: istore        5
     305: aload_1
     306: bipush        91
     308: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     311: iload         5
     313: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     316: ldc           #42                 // String  bytes]
     318: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: pop
     322: aload_1
     323: areturn

  protected java.lang.String _truncate(java.lang.CharSequence, int[], int);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #43,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       8: invokevirtual #44                 // Method _truncateOffsets:([II)V
      11: aload_2
      12: iconst_0
      13: iaload
      14: istore        4
      16: aload_2
      17: iconst_1
      18: iaload
      19: iload_3
      20: invokestatic  #45                 // Method java/lang/Math.min:(II)I
      23: istore        5
      25: aload_1
      26: iload         4
      28: iload         4
      30: iload         5
      32: iadd
      33: invokeinterface #46,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      38: invokeinterface #47,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      43: areturn

  protected java.lang.String _truncate(char[], int[], int);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: arraylength
       4: invokevirtual #44                 // Method _truncateOffsets:([II)V
       7: aload_2
       8: iconst_0
       9: iaload
      10: istore        4
      12: aload_2
      13: iconst_1
      14: iaload
      15: iload_3
      16: invokestatic  #45                 // Method java/lang/Math.min:(II)I
      19: istore        5
      21: new           #48                 // class java/lang/String
      24: dup
      25: aload_1
      26: iload         4
      28: iload         5
      30: invokespecial #49                 // Method java/lang/String."<init>":([CII)V
      33: areturn

  protected java.lang.String _truncate(byte[], int[], int);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: arraylength
       4: invokevirtual #44                 // Method _truncateOffsets:([II)V
       7: aload_2
       8: iconst_0
       9: iaload
      10: istore        4
      12: aload_2
      13: iconst_1
      14: iaload
      15: iload_3
      16: invokestatic  #45                 // Method java/lang/Math.min:(II)I
      19: istore        5
      21: new           #48                 // class java/lang/String
      24: dup
      25: aload_1
      26: iload         4
      28: iload         5
      30: ldc           #50                 // String UTF-8
      32: invokestatic  #51                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      35: invokespecial #52                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      38: areturn

  protected void _truncateOffsets(int[], int);
    Code:
       0: aload_1
       1: iconst_0
       2: iaload
       3: istore_3
       4: iload_3
       5: ifge          13
       8: iconst_0
       9: istore_3
      10: goto          20
      13: iload_3
      14: iload_2
      15: if_icmplt     20
      18: iload_2
      19: istore_3
      20: aload_1
      21: iconst_0
      22: iload_3
      23: iastore
      24: aload_1
      25: iconst_1
      26: iaload
      27: istore        4
      29: iload_2
      30: iload_3
      31: isub
      32: istore        5
      34: iload         4
      36: iflt          46
      39: iload         4
      41: iload         5
      43: if_icmple     51
      46: aload_1
      47: iconst_1
      48: iload         5
      50: iastore
      51: return

  protected int _append(java.lang.StringBuilder, java.lang.String);
    Code:
       0: aload_1
       1: bipush        34
       3: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: pop
       7: iconst_0
       8: istore_3
       9: aload_2
      10: invokevirtual #53                 // Method java/lang/String.length:()I
      13: istore        4
      15: iload_3
      16: iload         4
      18: if_icmpge     59
      21: aload_2
      22: iload_3
      23: invokevirtual #54                 // Method java/lang/String.charAt:(I)C
      26: istore        5
      28: iload         5
      30: invokestatic  #55                 // Method java/lang/Character.isISOControl:(C)Z
      33: ifeq          46
      36: aload_0
      37: aload_1
      38: iload         5
      40: invokevirtual #56                 // Method _appendEscaped:(Ljava/lang/StringBuilder;I)Z
      43: ifne          53
      46: aload_1
      47: iload         5
      49: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      52: pop
      53: iinc          3, 1
      56: goto          15
      59: aload_1
      60: bipush        34
      62: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: pop
      66: aload_2
      67: invokevirtual #53                 // Method java/lang/String.length:()I
      70: ireturn

  protected boolean _appendEscaped(java.lang.StringBuilder, int);
    Code:
       0: iload_2
       1: bipush        13
       3: if_icmpeq     12
       6: iload_2
       7: bipush        10
       9: if_icmpne     14
      12: iconst_0
      13: ireturn
      14: aload_1
      15: bipush        92
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      20: pop
      21: aload_1
      22: bipush        117
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      27: pop
      28: aload_1
      29: iload_2
      30: bipush        12
      32: ishr
      33: bipush        15
      35: iand
      36: invokestatic  #57                 // Method com/fasterxml/jackson/core/io/CharTypes.hexToChar:(I)C
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      42: pop
      43: aload_1
      44: iload_2
      45: bipush        8
      47: ishr
      48: bipush        15
      50: iand
      51: invokestatic  #57                 // Method com/fasterxml/jackson/core/io/CharTypes.hexToChar:(I)C
      54: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      57: pop
      58: aload_1
      59: iload_2
      60: iconst_4
      61: ishr
      62: bipush        15
      64: iand
      65: invokestatic  #57                 // Method com/fasterxml/jackson/core/io/CharTypes.hexToChar:(I)C
      68: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      71: pop
      72: aload_1
      73: iload_2
      74: bipush        15
      76: iand
      77: invokestatic  #57                 // Method com/fasterxml/jackson/core/io/CharTypes.hexToChar:(I)C
      80: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      83: pop
      84: iconst_1
      85: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #8                  // class com/fasterxml/jackson/core/io/ContentReference
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #8                  // class com/fasterxml/jackson/core/io/ContentReference
      26: astore_2
      27: aload_0
      28: getfield      #5                  // Field _offset:I
      31: aload_2
      32: getfield      #5                  // Field _offset:I
      35: if_icmpne     49
      38: aload_0
      39: getfield      #6                  // Field _length:I
      42: aload_2
      43: getfield      #6                  // Field _length:I
      46: if_icmpeq     51
      49: iconst_0
      50: ireturn
      51: aload_2
      52: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
      55: astore_3
      56: aload_0
      57: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
      60: ifnonnull     73
      63: aload_3
      64: ifnonnull     71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn
      73: aload_3
      74: ifnonnull     79
      77: iconst_0
      78: ireturn
      79: aload_0
      80: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
      83: instanceof    #58                 // class java/io/File
      86: ifne          109
      89: aload_0
      90: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
      93: instanceof    #59                 // class java/net/URL
      96: ifne          109
      99: aload_0
     100: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
     103: instanceof    #60                 // class java/net/URI
     106: ifeq          118
     109: aload_0
     110: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
     113: aload_3
     114: invokevirtual #61                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     117: ireturn
     118: aload_0
     119: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
     122: aload_2
     123: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
     126: if_acmpne     133
     129: iconst_1
     130: goto          134
     133: iconst_0
     134: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _rawContent:Ljava/lang/Object;
       4: invokestatic  #62                 // Method java/util/Objects.hashCode:(Ljava/lang/Object;)I
       7: ireturn

  static {};
    Code:
       0: new           #8                  // class com/fasterxml/jackson/core/io/ContentReference
       3: dup
       4: iconst_0
       5: aconst_null
       6: invokespecial #9                  // Method "<init>":(ZLjava/lang/Object;)V
       9: putstatic     #7                  // Field UNKNOWN_CONTENT:Lcom/fasterxml/jackson/core/io/ContentReference;
      12: return
}
