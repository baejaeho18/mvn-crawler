Compiled from "AMRMClientImpl.java"
public class org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl<T extends org.apache.hadoop.yarn.client.api.AMRMClient$ContainerRequest> extends org.apache.hadoop.yarn.client.api.AMRMClient<T> {
  private static final org.slf4j.Logger LOG;

  private static final java.util.List<java.lang.String> ANY_LIST;

  private int lastResponseId;

  protected java.lang.String appHostName;

  protected int appHostPort;

  protected java.lang.String appTrackingUrl;

  protected java.lang.String newTrackingUrl;

  protected org.apache.hadoop.yarn.api.ApplicationMasterProtocol rmClient;

  protected org.apache.hadoop.yarn.api.records.Resource clusterAvailableResources;

  protected int clusterNodeCount;

  protected final java.util.Set<java.lang.String> blacklistedNodes;

  protected final java.util.Set<java.lang.String> blacklistAdditions;

  protected final java.util.Set<java.lang.String> blacklistRemovals;

  private java.util.Map<java.util.Set<java.lang.String>, org.apache.hadoop.yarn.api.resource.PlacementConstraint> placementConstraints;

  protected java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.Resource> resourceProfilesMap;

  private final java.util.Map<java.lang.Long, org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable<T>> remoteRequests;

  protected final java.util.Set<org.apache.hadoop.yarn.api.records.ResourceRequest> ask;

  protected final java.util.Set<org.apache.hadoop.yarn.api.records.ContainerId> release;

  protected java.util.Set<org.apache.hadoop.yarn.api.records.ContainerId> pendingRelease;

  protected final java.util.Map<org.apache.hadoop.yarn.api.records.ContainerId, java.util.AbstractMap$SimpleEntry<org.apache.hadoop.yarn.api.records.Container, org.apache.hadoop.yarn.api.records.UpdateContainerRequest>> change;

  protected final java.util.Map<org.apache.hadoop.yarn.api.records.ContainerId, java.util.AbstractMap$SimpleEntry<org.apache.hadoop.yarn.api.records.Container, org.apache.hadoop.yarn.api.records.UpdateContainerRequest>> pendingChange;

  private java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest> schedulingRequests;

  private java.util.Map<java.util.Set<java.lang.String>, java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest>> outstandingSchedRequests;

  public org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl();
    Code:
       0: aload_0
       1: ldc           #1                  // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl
       3: invokevirtual #2                  // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokespecial #3                  // Method org/apache/hadoop/yarn/client/api/AMRMClient."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field lastResponseId:I
      14: aload_0
      15: new           #5                  // class java/util/HashSet
      18: dup
      19: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      22: putfield      #7                  // Field blacklistedNodes:Ljava/util/Set;
      25: aload_0
      26: new           #5                  // class java/util/HashSet
      29: dup
      30: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      33: putfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
      36: aload_0
      37: new           #5                  // class java/util/HashSet
      40: dup
      41: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      44: putfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
      47: aload_0
      48: new           #10                 // class java/util/HashMap
      51: dup
      52: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      55: putfield      #12                 // Field placementConstraints:Ljava/util/Map;
      58: aload_0
      59: new           #10                 // class java/util/HashMap
      62: dup
      63: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      66: putfield      #13                 // Field remoteRequests:Ljava/util/Map;
      69: aload_0
      70: new           #14                 // class java/util/TreeSet
      73: dup
      74: new           #15                 // class org/apache/hadoop/yarn/api/records/ResourceRequest$ResourceRequestComparator
      77: dup
      78: invokespecial #16                 // Method org/apache/hadoop/yarn/api/records/ResourceRequest$ResourceRequestComparator."<init>":()V
      81: invokespecial #17                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      84: putfield      #18                 // Field ask:Ljava/util/Set;
      87: aload_0
      88: new           #14                 // class java/util/TreeSet
      91: dup
      92: invokespecial #19                 // Method java/util/TreeSet."<init>":()V
      95: putfield      #20                 // Field release:Ljava/util/Set;
      98: aload_0
      99: new           #14                 // class java/util/TreeSet
     102: dup
     103: invokespecial #19                 // Method java/util/TreeSet."<init>":()V
     106: putfield      #21                 // Field pendingRelease:Ljava/util/Set;
     109: aload_0
     110: new           #10                 // class java/util/HashMap
     113: dup
     114: invokespecial #11                 // Method java/util/HashMap."<init>":()V
     117: putfield      #22                 // Field change:Ljava/util/Map;
     120: aload_0
     121: new           #10                 // class java/util/HashMap
     124: dup
     125: invokespecial #11                 // Method java/util/HashMap."<init>":()V
     128: putfield      #23                 // Field pendingChange:Ljava/util/Map;
     131: aload_0
     132: new           #24                 // class java/util/ArrayList
     135: dup
     136: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     139: putfield      #26                 // Field schedulingRequests:Ljava/util/List;
     142: aload_0
     143: new           #10                 // class java/util/HashMap
     146: dup
     147: invokespecial #11                 // Method java/util/HashMap."<init>":()V
     150: putfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
     153: return

  org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl(org.apache.hadoop.yarn.api.ApplicationMasterProtocol);
    Code:
       0: aload_0
       1: ldc           #1                  // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl
       3: invokevirtual #2                  // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokespecial #3                  // Method org/apache/hadoop/yarn/client/api/AMRMClient."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field lastResponseId:I
      14: aload_0
      15: new           #5                  // class java/util/HashSet
      18: dup
      19: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      22: putfield      #7                  // Field blacklistedNodes:Ljava/util/Set;
      25: aload_0
      26: new           #5                  // class java/util/HashSet
      29: dup
      30: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      33: putfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
      36: aload_0
      37: new           #5                  // class java/util/HashSet
      40: dup
      41: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      44: putfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
      47: aload_0
      48: new           #10                 // class java/util/HashMap
      51: dup
      52: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      55: putfield      #12                 // Field placementConstraints:Ljava/util/Map;
      58: aload_0
      59: new           #10                 // class java/util/HashMap
      62: dup
      63: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      66: putfield      #13                 // Field remoteRequests:Ljava/util/Map;
      69: aload_0
      70: new           #14                 // class java/util/TreeSet
      73: dup
      74: new           #15                 // class org/apache/hadoop/yarn/api/records/ResourceRequest$ResourceRequestComparator
      77: dup
      78: invokespecial #16                 // Method org/apache/hadoop/yarn/api/records/ResourceRequest$ResourceRequestComparator."<init>":()V
      81: invokespecial #17                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      84: putfield      #18                 // Field ask:Ljava/util/Set;
      87: aload_0
      88: new           #14                 // class java/util/TreeSet
      91: dup
      92: invokespecial #19                 // Method java/util/TreeSet."<init>":()V
      95: putfield      #20                 // Field release:Ljava/util/Set;
      98: aload_0
      99: new           #14                 // class java/util/TreeSet
     102: dup
     103: invokespecial #19                 // Method java/util/TreeSet."<init>":()V
     106: putfield      #21                 // Field pendingRelease:Ljava/util/Set;
     109: aload_0
     110: new           #10                 // class java/util/HashMap
     113: dup
     114: invokespecial #11                 // Method java/util/HashMap."<init>":()V
     117: putfield      #22                 // Field change:Ljava/util/Map;
     120: aload_0
     121: new           #10                 // class java/util/HashMap
     124: dup
     125: invokespecial #11                 // Method java/util/HashMap."<init>":()V
     128: putfield      #23                 // Field pendingChange:Ljava/util/Map;
     131: aload_0
     132: new           #24                 // class java/util/ArrayList
     135: dup
     136: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     139: putfield      #26                 // Field schedulingRequests:Ljava/util/List;
     142: aload_0
     143: new           #10                 // class java/util/HashMap
     146: dup
     147: invokespecial #11                 // Method java/util/HashMap."<init>":()V
     150: putfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
     153: aload_0
     154: aload_1
     155: putfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
     158: return

  protected void serviceInit(org.apache.hadoop.conf.Configuration) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokestatic  #29                 // Method org/apache/hadoop/yarn/util/RackResolver.init:(Lorg/apache/hadoop/conf/Configuration;)V
       4: aload_0
       5: aload_1
       6: invokespecial #30                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.serviceInit:(Lorg/apache/hadoop/conf/Configuration;)V
       9: return

  protected void serviceStart() throws java.lang.Exception;
    Code:
       0: new           #31                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
       3: dup
       4: aload_0
       5: invokevirtual #32                 // Method getConfig:()Lorg/apache/hadoop/conf/Configuration;
       8: invokespecial #33                 // Method org/apache/hadoop/yarn/conf/YarnConfiguration."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      11: astore_1
      12: aload_0
      13: getfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
      16: ifnonnull     32
      19: aload_0
      20: aload_1
      21: ldc           #34                 // class org/apache/hadoop/yarn/api/ApplicationMasterProtocol
      23: invokestatic  #35                 // Method org/apache/hadoop/yarn/client/ClientRMProxy.createRMProxy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)Ljava/lang/Object;
      26: checkcast     #34                 // class org/apache/hadoop/yarn/api/ApplicationMasterProtocol
      29: putfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
      32: goto          45
      35: astore_2
      36: new           #37                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      39: dup
      40: aload_2
      41: invokespecial #38                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/Throwable;)V
      44: athrow
      45: aload_0
      46: invokespecial #39                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.serviceStart:()V
      49: return
    Exception table:
       from    to  target type
          12    32    35   Class java/io/IOException

  protected void serviceStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
       4: ifnull        14
       7: aload_0
       8: getfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
      11: invokestatic  #40                 // Method org/apache/hadoop/ipc/RPC.stopProxy:(Ljava/lang/Object;)V
      14: aload_0
      15: invokespecial #41                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.serviceStop:()V
      18: return

  public org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse registerApplicationMaster(java.lang.String, int, java.lang.String) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #42                 // Method registerApplicationMaster:(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse;
       8: areturn

  public org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse registerApplicationMaster(java.lang.String, int, java.lang.String, java.util.Map<java.util.Set<java.lang.String>, org.apache.hadoop.yarn.api.resource.PlacementConstraint>) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field appHostName:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #44                 // Field appHostPort:I
      10: aload_0
      11: aload_3
      12: putfield      #45                 // Field appTrackingUrl:Ljava/lang/String;
      15: aload         4
      17: ifnull        41
      20: aload         4
      22: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      27: ifne          41
      30: aload_0
      31: getfield      #12                 // Field placementConstraints:Ljava/util/Map;
      34: aload         4
      36: invokeinterface #47,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      41: aload_1
      42: ifnull        49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ldc           #48                 // String The host name should not be null
      52: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      55: iload_2
      56: iconst_m1
      57: if_icmplt     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #50                 // String Port number of the host should be any integers larger than or equal to -1
      67: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      70: aload_0
      71: invokespecial #51                 // Method registerApplicationMaster:()Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse;
      74: areturn

  private org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse registerApplicationMaster() throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field appHostName:Ljava/lang/String;
       4: aload_0
       5: getfield      #44                 // Field appHostPort:I
       8: aload_0
       9: getfield      #45                 // Field appTrackingUrl:Ljava/lang/String;
      12: invokestatic  #52                 // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest.newInstance:(Ljava/lang/String;ILjava/lang/String;)Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest;
      15: astore_1
      16: aload_0
      17: getfield      #12                 // Field placementConstraints:Ljava/util/Map;
      20: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      25: ifne          36
      28: aload_1
      29: aload_0
      30: getfield      #12                 // Field placementConstraints:Ljava/util/Map;
      33: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest.setPlacementConstraints:(Ljava/util/Map;)V
      36: aload_0
      37: getfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
      40: aload_1
      41: invokeinterface #54,  2           // InterfaceMethod org/apache/hadoop/yarn/api/ApplicationMasterProtocol.registerApplicationMaster:(Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse;
      46: astore_2
      47: aload_0
      48: dup
      49: astore_3
      50: monitorenter
      51: aload_0
      52: iconst_0
      53: putfield      #4                  // Field lastResponseId:I
      56: aload_2
      57: invokevirtual #55                 // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse.getNMTokensFromPreviousAttempts:()Ljava/util/List;
      60: invokeinterface #56,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      65: ifne          76
      68: aload_0
      69: aload_2
      70: invokevirtual #55                 // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse.getNMTokensFromPreviousAttempts:()Ljava/util/List;
      73: invokevirtual #57                 // Method populateNMTokens:(Ljava/util/List;)V
      76: aload_0
      77: aload_2
      78: invokevirtual #58                 // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse.getResourceProfiles:()Ljava/util/Map;
      81: putfield      #59                 // Field resourceProfilesMap:Ljava/util/Map;
      84: aload_2
      85: invokevirtual #60                 // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse.getContainersFromPreviousAttempts:()Ljava/util/List;
      88: astore        4
      90: aload         4
      92: aload_0
      93: getfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
      96: invokestatic  #61                 // Method org/apache/hadoop/yarn/client/AMRMClientUtils.removeFromOutstandingSchedulingRequests:(Ljava/util/Collection;Ljava/util/Map;)V
      99: aload_3
     100: monitorexit
     101: goto          111
     104: astore        5
     106: aload_3
     107: monitorexit
     108: aload         5
     110: athrow
     111: aload_2
     112: areturn
    Exception table:
       from    to  target type
          51   101   104   any
         104   108   104   any

  public synchronized void addSchedulingRequests(java.util.Collection<org.apache.hadoop.yarn.api.records.SchedulingRequest>);
    Code:
       0: aload_0
       1: getfield      #26                 // Field schedulingRequests:Ljava/util/List;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: getfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
      16: invokestatic  #63                 // Method org/apache/hadoop/yarn/client/AMRMClientUtils.addToOutstandingSchedulingRequests:(Ljava/util/Collection;Ljava/util/Map;)V
      19: return

  public org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse allocate(float) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpl
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #64                 // String Progress indicator should not be negative
      13: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      16: aconst_null
      17: astore_2
      18: aconst_null
      19: astore_3
      20: aconst_null
      21: astore        4
      23: aconst_null
      24: astore        5
      26: new           #24                 // class java/util/ArrayList
      29: dup
      30: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
      33: astore        6
      35: new           #24                 // class java/util/ArrayList
      38: dup
      39: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
      42: astore        7
      44: new           #10                 // class java/util/HashMap
      47: dup
      48: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      51: astore        8
      53: new           #65                 // class java/util/LinkedList
      56: dup
      57: invokespecial #66                 // Method java/util/LinkedList."<init>":()V
      60: astore        9
      62: aload_0
      63: dup
      64: astore        10
      66: monitorenter
      67: aload_0
      68: invokespecial #67                 // Method cloneAsks:()Ljava/util/List;
      71: astore_3
      72: aload         8
      74: aload_0
      75: getfield      #22                 // Field change:Ljava/util/Map;
      78: invokeinterface #47,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      83: aload_0
      84: invokespecial #68                 // Method createUpdateList:()Ljava/util/List;
      87: astore        11
      89: new           #24                 // class java/util/ArrayList
      92: dup
      93: aload_0
      94: getfield      #20                 // Field release:Ljava/util/Set;
      97: invokespecial #69                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     100: astore        4
     102: new           #24                 // class java/util/ArrayList
     105: dup
     106: aload_0
     107: getfield      #26                 // Field schedulingRequests:Ljava/util/List;
     110: invokespecial #69                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     113: astore        9
     115: aload_0
     116: getfield      #18                 // Field ask:Ljava/util/Set;
     119: invokeinterface #70,  1           // InterfaceMethod java/util/Set.clear:()V
     124: aload_0
     125: getfield      #20                 // Field release:Ljava/util/Set;
     128: invokeinterface #70,  1           // InterfaceMethod java/util/Set.clear:()V
     133: aload_0
     134: getfield      #22                 // Field change:Ljava/util/Map;
     137: invokeinterface #71,  1           // InterfaceMethod java/util/Map.clear:()V
     142: aload_0
     143: getfield      #26                 // Field schedulingRequests:Ljava/util/List;
     146: invokeinterface #72,  1           // InterfaceMethod java/util/List.clear:()V
     151: aload         6
     153: aload_0
     154: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
     157: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     162: pop
     163: aload         7
     165: aload_0
     166: getfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
     169: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     174: pop
     175: aload         6
     177: aload         7
     179: invokestatic  #73                 // Method org/apache/hadoop/yarn/api/records/ResourceBlacklistRequest.newInstance:(Ljava/util/List;Ljava/util/List;)Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
     182: astore        12
     184: invokestatic  #74                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest.newBuilder:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     187: aload_0
     188: getfield      #4                  // Field lastResponseId:I
     191: invokevirtual #75                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.responseId:(I)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     194: fload_1
     195: invokevirtual #76                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.progress:(F)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     198: aload_3
     199: invokevirtual #77                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.askList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     202: aload         12
     204: invokevirtual #78                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.resourceBlacklistRequest:(Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     207: aload         4
     209: invokevirtual #79                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.releaseList:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     212: aload         11
     214: invokevirtual #80                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.updateRequests:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     217: aload         9
     219: invokevirtual #81                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.schedulingRequests:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder;
     222: invokevirtual #82                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest$AllocateRequestBuilder.build:()Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest;
     225: astore        5
     227: aload_0
     228: getfield      #83                 // Field newTrackingUrl:Ljava/lang/String;
     231: ifnull        256
     234: aload         5
     236: aload_0
     237: getfield      #83                 // Field newTrackingUrl:Ljava/lang/String;
     240: invokevirtual #84                 // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest.setTrackingUrl:(Ljava/lang/String;)V
     243: aload_0
     244: aload_0
     245: getfield      #83                 // Field newTrackingUrl:Ljava/lang/String;
     248: putfield      #45                 // Field appTrackingUrl:Ljava/lang/String;
     251: aload_0
     252: aconst_null
     253: putfield      #83                 // Field newTrackingUrl:Ljava/lang/String;
     256: aload_0
     257: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
     260: invokeinterface #70,  1           // InterfaceMethod java/util/Set.clear:()V
     265: aload_0
     266: getfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
     269: invokeinterface #70,  1           // InterfaceMethod java/util/Set.clear:()V
     274: aload         10
     276: monitorexit
     277: goto          288
     280: astore        13
     282: aload         10
     284: monitorexit
     285: aload         13
     287: athrow
     288: aload_0
     289: getfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
     292: aload         5
     294: invokeinterface #85,  2           // InterfaceMethod org/apache/hadoop/yarn/api/ApplicationMasterProtocol.allocate:(Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse;
     299: astore_2
     300: goto          777
     303: astore        10
     305: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
     308: ldc           #88                 // String ApplicationMaster is out of sync with ResourceManager, hence resyncing.
     310: invokeinterface #89,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     315: aload_0
     316: dup
     317: astore        11
     319: monitorenter
     320: aload_0
     321: getfield      #20                 // Field release:Ljava/util/Set;
     324: aload_0
     325: getfield      #21                 // Field pendingRelease:Ljava/util/Set;
     328: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     333: pop
     334: aload_0
     335: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
     338: aload_0
     339: getfield      #7                  // Field blacklistedNodes:Ljava/util/Set;
     342: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     347: pop
     348: aload_0
     349: getfield      #13                 // Field remoteRequests:Ljava/util/Map;
     352: invokeinterface #91,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     357: invokeinterface #92,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     362: astore        12
     364: aload         12
     366: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     371: ifeq          426
     374: aload         12
     376: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     381: checkcast     #95                 // class org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable
     384: astore        13
     386: aload         13
     388: invokevirtual #96                 // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.iterator:()Ljava/util/Iterator;
     391: astore        14
     393: aload         14
     395: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     400: ifeq          423
     403: aload_0
     404: aload         14
     406: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     411: checkcast     #97                 // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo
     414: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
     417: invokespecial #99                 // Method addResourceRequestToAsk:(Lorg/apache/hadoop/yarn/api/records/ResourceRequest;)V
     420: goto          393
     423: goto          364
     426: aload_0
     427: getfield      #22                 // Field change:Ljava/util/Map;
     430: aload_0
     431: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     434: invokeinterface #47,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     439: aload_0
     440: getfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
     443: invokeinterface #91,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     448: invokeinterface #92,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     453: astore        12
     455: aload         12
     457: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     462: ifeq          492
     465: aload         12
     467: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     472: checkcast     #100                // class java/util/List
     475: astore        13
     477: aload_0
     478: getfield      #26                 // Field schedulingRequests:Ljava/util/List;
     481: aload         13
     483: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     488: pop
     489: goto          455
     492: aload         11
     494: monitorexit
     495: goto          506
     498: astore        15
     500: aload         11
     502: monitorexit
     503: aload         15
     505: athrow
     506: aload_0
     507: invokespecial #51                 // Method registerApplicationMaster:()Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse;
     510: pop
     511: aload_0
     512: fload_1
     513: invokevirtual #101                // Method allocate:(F)Lorg/apache/hadoop/yarn/api/protocolrecords/AllocateResponse;
     516: astore_2
     517: aload_2
     518: astore        11
     520: aload_2
     521: ifnonnull     774
     524: aload_0
     525: dup
     526: astore        12
     528: monitorenter
     529: aload_0
     530: getfield      #20                 // Field release:Ljava/util/Set;
     533: aload         4
     535: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     540: pop
     541: aload_3
     542: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     547: astore        13
     549: aload         13
     551: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     556: ifeq          600
     559: aload         13
     561: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     566: checkcast     #103                // class org/apache/hadoop/yarn/api/records/ResourceRequest
     569: astore        14
     571: aload_0
     572: getfield      #18                 // Field ask:Ljava/util/Set;
     575: aload         14
     577: invokeinterface #104,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     582: ifne          597
     585: aload_0
     586: getfield      #18                 // Field ask:Ljava/util/Set;
     589: aload         14
     591: invokeinterface #105,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     596: pop
     597: goto          549
     600: aload         8
     602: invokeinterface #106,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     607: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     612: astore        13
     614: aload         13
     616: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     621: ifeq          724
     624: aload         13
     626: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     631: checkcast     #108                // class java/util/Map$Entry
     634: astore        14
     636: aload         14
     638: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     643: checkcast     #110                // class org/apache/hadoop/yarn/api/records/ContainerId
     646: astore        15
     648: aload         14
     650: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     655: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
     658: invokevirtual #113                // Method java/util/AbstractMap$SimpleEntry.getKey:()Ljava/lang/Object;
     661: checkcast     #114                // class org/apache/hadoop/yarn/api/records/Container
     664: astore        16
     666: aload         14
     668: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     673: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
     676: invokevirtual #115                // Method java/util/AbstractMap$SimpleEntry.getValue:()Ljava/lang/Object;
     679: checkcast     #116                // class org/apache/hadoop/yarn/api/records/UpdateContainerRequest
     682: astore        17
     684: aload_0
     685: getfield      #22                 // Field change:Ljava/util/Map;
     688: aload         15
     690: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     695: ifnonnull     721
     698: aload_0
     699: getfield      #22                 // Field change:Ljava/util/Map;
     702: aload         15
     704: new           #112                // class java/util/AbstractMap$SimpleEntry
     707: dup
     708: aload         16
     710: aload         17
     712: invokespecial #118                // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     715: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     720: pop
     721: goto          614
     724: aload_0
     725: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
     728: aload         6
     730: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     735: pop
     736: aload_0
     737: getfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
     740: aload         7
     742: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     747: pop
     748: aload_0
     749: getfield      #26                 // Field schedulingRequests:Ljava/util/List;
     752: aload         9
     754: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     759: pop
     760: aload         12
     762: monitorexit
     763: goto          774
     766: astore        18
     768: aload         12
     770: monitorexit
     771: aload         18
     773: athrow
     774: aload         11
     776: areturn
     777: aload_0
     778: dup
     779: astore        10
     781: monitorenter
     782: aload_0
     783: aload_2
     784: invokevirtual #120                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getNumClusterNodes:()I
     787: putfield      #121                // Field clusterNodeCount:I
     790: aload_0
     791: aload_2
     792: invokevirtual #122                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getResponseId:()I
     795: putfield      #4                  // Field lastResponseId:I
     798: aload_0
     799: aload_2
     800: invokevirtual #123                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getAvailableResources:()Lorg/apache/hadoop/yarn/api/records/Resource;
     803: putfield      #124                // Field clusterAvailableResources:Lorg/apache/hadoop/yarn/api/records/Resource;
     806: aload_2
     807: invokevirtual #125                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getNMTokens:()Ljava/util/List;
     810: invokeinterface #56,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     815: ifne          826
     818: aload_0
     819: aload_2
     820: invokevirtual #125                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getNMTokens:()Ljava/util/List;
     823: invokevirtual #57                 // Method populateNMTokens:(Ljava/util/List;)V
     826: aload_2
     827: invokevirtual #126                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getAMRMToken:()Lorg/apache/hadoop/yarn/api/records/Token;
     830: ifnull        841
     833: aload_0
     834: aload_2
     835: invokevirtual #126                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getAMRMToken:()Lorg/apache/hadoop/yarn/api/records/Token;
     838: invokespecial #127                // Method updateAMRMToken:(Lorg/apache/hadoop/yarn/api/records/Token;)V
     841: aload_0
     842: getfield      #21                 // Field pendingRelease:Ljava/util/Set;
     845: invokeinterface #128,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     850: ifne          873
     853: aload_2
     854: invokevirtual #129                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getCompletedContainersStatuses:()Ljava/util/List;
     857: invokeinterface #56,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     862: ifne          873
     865: aload_0
     866: aload_2
     867: invokevirtual #129                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getCompletedContainersStatuses:()Ljava/util/List;
     870: invokevirtual #130                // Method removePendingReleaseRequests:(Ljava/util/List;)V
     873: aload_0
     874: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     877: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     882: ifne          981
     885: aload_2
     886: invokevirtual #129                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getCompletedContainersStatuses:()Ljava/util/List;
     889: astore        11
     891: new           #24                 // class java/util/ArrayList
     894: dup
     895: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     898: astore        12
     900: aload         12
     902: aload_2
     903: invokevirtual #131                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getUpdatedContainers:()Ljava/util/List;
     906: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     911: pop
     912: aload         11
     914: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     919: astore        13
     921: aload         13
     923: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     928: ifeq          965
     931: aload         13
     933: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     938: checkcast     #132                // class org/apache/hadoop/yarn/api/records/ContainerStatus
     941: astore        14
     943: aload         14
     945: invokevirtual #133                // Method org/apache/hadoop/yarn/api/records/ContainerStatus.getContainerId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     948: astore        15
     950: aload_0
     951: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     954: aload         15
     956: invokeinterface #134,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     961: pop
     962: goto          921
     965: aload         12
     967: invokeinterface #56,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     972: ifne          981
     975: aload_0
     976: aload         12
     978: invokevirtual #135                // Method removePendingChangeRequests:(Ljava/util/List;)V
     981: aload_2
     982: invokevirtual #136                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getAllocatedContainers:()Ljava/util/List;
     985: aload_0
     986: getfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
     989: invokestatic  #61                 // Method org/apache/hadoop/yarn/client/AMRMClientUtils.removeFromOutstandingSchedulingRequests:(Ljava/util/Collection;Ljava/util/Map;)V
     992: aload_2
     993: invokevirtual #137                // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.getContainersFromPreviousAttempts:()Ljava/util/List;
     996: aload_0
     997: getfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
    1000: invokestatic  #61                 // Method org/apache/hadoop/yarn/client/AMRMClientUtils.removeFromOutstandingSchedulingRequests:(Ljava/util/Collection;Ljava/util/Map;)V
    1003: aload         10
    1005: monitorexit
    1006: goto          1017
    1009: astore        19
    1011: aload         10
    1013: monitorexit
    1014: aload         19
    1016: athrow
    1017: aload_2
    1018: ifnonnull     1533
    1021: aload_0
    1022: dup
    1023: astore        10
    1025: monitorenter
    1026: aload_0
    1027: getfield      #20                 // Field release:Ljava/util/Set;
    1030: aload         4
    1032: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
    1037: pop
    1038: aload_3
    1039: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
    1044: astore        11
    1046: aload         11
    1048: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
    1053: ifeq          1097
    1056: aload         11
    1058: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1063: checkcast     #103                // class org/apache/hadoop/yarn/api/records/ResourceRequest
    1066: astore        12
    1068: aload_0
    1069: getfield      #18                 // Field ask:Ljava/util/Set;
    1072: aload         12
    1074: invokeinterface #104,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
    1079: ifne          1094
    1082: aload_0
    1083: getfield      #18                 // Field ask:Ljava/util/Set;
    1086: aload         12
    1088: invokeinterface #105,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
    1093: pop
    1094: goto          1046
    1097: aload         8
    1099: invokeinterface #106,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
    1104: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
    1109: astore        11
    1111: aload         11
    1113: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
    1118: ifeq          1221
    1121: aload         11
    1123: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1128: checkcast     #108                // class java/util/Map$Entry
    1131: astore        12
    1133: aload         12
    1135: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
    1140: checkcast     #110                // class org/apache/hadoop/yarn/api/records/ContainerId
    1143: astore        13
    1145: aload         12
    1147: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
    1152: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
    1155: invokevirtual #113                // Method java/util/AbstractMap$SimpleEntry.getKey:()Ljava/lang/Object;
    1158: checkcast     #114                // class org/apache/hadoop/yarn/api/records/Container
    1161: astore        14
    1163: aload         12
    1165: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
    1170: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
    1173: invokevirtual #115                // Method java/util/AbstractMap$SimpleEntry.getValue:()Ljava/lang/Object;
    1176: checkcast     #116                // class org/apache/hadoop/yarn/api/records/UpdateContainerRequest
    1179: astore        15
    1181: aload_0
    1182: getfield      #22                 // Field change:Ljava/util/Map;
    1185: aload         13
    1187: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1192: ifnonnull     1218
    1195: aload_0
    1196: getfield      #22                 // Field change:Ljava/util/Map;
    1199: aload         13
    1201: new           #112                // class java/util/AbstractMap$SimpleEntry
    1204: dup
    1205: aload         14
    1207: aload         15
    1209: invokespecial #118                // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
    1212: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1217: pop
    1218: goto          1111
    1221: aload_0
    1222: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
    1225: aload         6
    1227: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
    1232: pop
    1233: aload_0
    1234: getfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
    1237: aload         7
    1239: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
    1244: pop
    1245: aload_0
    1246: getfield      #26                 // Field schedulingRequests:Ljava/util/List;
    1249: aload         9
    1251: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
    1256: pop
    1257: aload         10
    1259: monitorexit
    1260: goto          1271
    1263: astore        20
    1265: aload         10
    1267: monitorexit
    1268: aload         20
    1270: athrow
    1271: goto          1533
    1274: astore        21
    1276: aload_2
    1277: ifnonnull     1530
    1280: aload_0
    1281: dup
    1282: astore        22
    1284: monitorenter
    1285: aload_0
    1286: getfield      #20                 // Field release:Ljava/util/Set;
    1289: aload         4
    1291: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
    1296: pop
    1297: aload_3
    1298: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
    1303: astore        23
    1305: aload         23
    1307: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
    1312: ifeq          1356
    1315: aload         23
    1317: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1322: checkcast     #103                // class org/apache/hadoop/yarn/api/records/ResourceRequest
    1325: astore        24
    1327: aload_0
    1328: getfield      #18                 // Field ask:Ljava/util/Set;
    1331: aload         24
    1333: invokeinterface #104,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
    1338: ifne          1353
    1341: aload_0
    1342: getfield      #18                 // Field ask:Ljava/util/Set;
    1345: aload         24
    1347: invokeinterface #105,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
    1352: pop
    1353: goto          1305
    1356: aload         8
    1358: invokeinterface #106,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
    1363: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
    1368: astore        23
    1370: aload         23
    1372: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
    1377: ifeq          1480
    1380: aload         23
    1382: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1387: checkcast     #108                // class java/util/Map$Entry
    1390: astore        24
    1392: aload         24
    1394: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
    1399: checkcast     #110                // class org/apache/hadoop/yarn/api/records/ContainerId
    1402: astore        25
    1404: aload         24
    1406: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
    1411: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
    1414: invokevirtual #113                // Method java/util/AbstractMap$SimpleEntry.getKey:()Ljava/lang/Object;
    1417: checkcast     #114                // class org/apache/hadoop/yarn/api/records/Container
    1420: astore        26
    1422: aload         24
    1424: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
    1429: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
    1432: invokevirtual #115                // Method java/util/AbstractMap$SimpleEntry.getValue:()Ljava/lang/Object;
    1435: checkcast     #116                // class org/apache/hadoop/yarn/api/records/UpdateContainerRequest
    1438: astore        27
    1440: aload_0
    1441: getfield      #22                 // Field change:Ljava/util/Map;
    1444: aload         25
    1446: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1451: ifnonnull     1477
    1454: aload_0
    1455: getfield      #22                 // Field change:Ljava/util/Map;
    1458: aload         25
    1460: new           #112                // class java/util/AbstractMap$SimpleEntry
    1463: dup
    1464: aload         26
    1466: aload         27
    1468: invokespecial #118                // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
    1471: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1476: pop
    1477: goto          1370
    1480: aload_0
    1481: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
    1484: aload         6
    1486: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
    1491: pop
    1492: aload_0
    1493: getfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
    1496: aload         7
    1498: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
    1503: pop
    1504: aload_0
    1505: getfield      #26                 // Field schedulingRequests:Ljava/util/List;
    1508: aload         9
    1510: invokeinterface #62,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
    1515: pop
    1516: aload         22
    1518: monitorexit
    1519: goto          1530
    1522: astore        28
    1524: aload         22
    1526: monitorexit
    1527: aload         28
    1529: athrow
    1530: aload         21
    1532: athrow
    1533: aload_2
    1534: areturn
    Exception table:
       from    to  target type
          67   277   280   any
         280   285   280   any
         288   300   303   Class org/apache/hadoop/yarn/exceptions/ApplicationMasterNotRegisteredException
         320   495   498   any
         498   503   498   any
         529   763   766   any
         766   771   766   any
         782  1006  1009   any
        1009  1014  1009   any
        1026  1260  1263   any
        1263  1268  1263   any
          62   520  1274   any
         777  1017  1274   any
        1285  1519  1522   any
        1522  1527  1522   any
        1274  1276  1274   any

  private java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerRequest> createUpdateList();
    Code:
       0: new           #24                 // class java/util/ArrayList
       3: dup
       4: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #22                 // Field change:Ljava/util/Map;
      12: invokeinterface #106,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          152
      32: aload_2
      33: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #108                // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
      51: invokevirtual #115                // Method java/util/AbstractMap$SimpleEntry.getValue:()Ljava/lang/Object;
      54: checkcast     #116                // class org/apache/hadoop/yarn/api/records/UpdateContainerRequest
      57: invokevirtual #138                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
      60: astore        4
      62: aload_3
      63: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
      71: invokevirtual #115                // Method java/util/AbstractMap$SimpleEntry.getValue:()Ljava/lang/Object;
      74: checkcast     #116                // class org/apache/hadoop/yarn/api/records/UpdateContainerRequest
      77: invokevirtual #139                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      80: astore        5
      82: aload_3
      83: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      88: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
      91: invokevirtual #115                // Method java/util/AbstractMap$SimpleEntry.getValue:()Ljava/lang/Object;
      94: checkcast     #116                // class org/apache/hadoop/yarn/api/records/UpdateContainerRequest
      97: invokevirtual #140                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getContainerUpdateType:()Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;
     100: astore        6
     102: aload_3
     103: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     108: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
     111: invokevirtual #113                // Method java/util/AbstractMap$SimpleEntry.getKey:()Ljava/lang/Object;
     114: checkcast     #114                // class org/apache/hadoop/yarn/api/records/Container
     117: invokevirtual #141                // Method org/apache/hadoop/yarn/api/records/Container.getVersion:()I
     120: istore        7
     122: aload_1
     123: iload         7
     125: aload_3
     126: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     131: checkcast     #110                // class org/apache/hadoop/yarn/api/records/ContainerId
     134: aload         6
     136: aload         4
     138: aload         5
     140: invokestatic  #142                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.newInstance:(ILorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/ExecutionType;)Lorg/apache/hadoop/yarn/api/records/UpdateContainerRequest;
     143: invokeinterface #143,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     148: pop
     149: goto          23
     152: aload_1
     153: areturn

  private java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest> cloneAsks();
    Code:
       0: new           #24                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #18                 // Field ask:Ljava/util/Set;
       8: invokeinterface #144,  1          // InterfaceMethod java/util/Set.size:()I
      13: invokespecial #145                // Method java/util/ArrayList."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #18                 // Field ask:Ljava/util/Set;
      21: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          60
      36: aload_2
      37: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #103                // class org/apache/hadoop/yarn/api/records/ResourceRequest
      45: astore_3
      46: aload_1
      47: aload_3
      48: invokestatic  #146                // Method org/apache/hadoop/yarn/api/records/ResourceRequest.clone:(Lorg/apache/hadoop/yarn/api/records/ResourceRequest;)Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
      51: invokeinterface #143,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          27
      60: aload_1
      61: areturn

  protected void removePendingReleaseRequests(java.util.List<org.apache.hadoop.yarn.api.records.ContainerStatus>);
    Code:
       0: aload_1
       1: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          43
      16: aload_2
      17: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #132                // class org/apache/hadoop/yarn/api/records/ContainerStatus
      25: astore_3
      26: aload_0
      27: getfield      #21                 // Field pendingRelease:Ljava/util/Set;
      30: aload_3
      31: invokevirtual #133                // Method org/apache/hadoop/yarn/api/records/ContainerStatus.getContainerId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      34: invokeinterface #147,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      39: pop
      40: goto          7
      43: return

  protected void removePendingChangeRequests(java.util.List<org.apache.hadoop.yarn.api.records.UpdatedContainer>);
    Code:
       0: aload_1
       1: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          146
      16: aload_2
      17: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #148                // class org/apache/hadoop/yarn/api/records/UpdatedContainer
      25: astore_3
      26: aload_3
      27: invokevirtual #149                // Method org/apache/hadoop/yarn/api/records/UpdatedContainer.getContainer:()Lorg/apache/hadoop/yarn/api/records/Container;
      30: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      33: astore        4
      35: aload_0
      36: getfield      #23                 // Field pendingChange:Ljava/util/Map;
      39: aload         4
      41: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: ifnonnull     52
      49: goto          7
      52: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      55: invokeinterface #151,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      60: ifeq          131
      63: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      66: new           #152                // class java/lang/StringBuilder
      69: dup
      70: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #154                // String RM has confirmed changed resource allocation for container
      75: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload         4
      80: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: ldc           #157                // String . Current resource allocation:
      85: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_3
      89: invokevirtual #149                // Method org/apache/hadoop/yarn/api/records/UpdatedContainer.getContainer:()Lorg/apache/hadoop/yarn/api/records/Container;
      92: invokevirtual #158                // Method org/apache/hadoop/yarn/api/records/Container.getResource:()Lorg/apache/hadoop/yarn/api/records/Resource;
      95: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc           #159                // String . Remove pending change request:
     100: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     107: aload         4
     109: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     114: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
     117: invokevirtual #115                // Method java/util/AbstractMap$SimpleEntry.getValue:()Ljava/lang/Object;
     120: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     131: aload_0
     132: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     135: aload         4
     137: invokeinterface #134,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     142: pop
     143: goto          7
     146: return

  protected void populateNMTokens(java.util.List<org.apache.hadoop.yarn.api.records.NMToken>);
    Code:
       0: aload_1
       1: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          133
      16: aload_2
      17: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #162                // class org/apache/hadoop/yarn/api/records/NMToken
      25: astore_3
      26: aload_3
      27: invokevirtual #163                // Method org/apache/hadoop/yarn/api/records/NMToken.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      30: invokevirtual #164                // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      33: astore        4
      35: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      38: invokeinterface #151,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      43: ifeq          117
      46: aload_0
      47: invokevirtual #165                // Method getNMTokenCache:()Lorg/apache/hadoop/yarn/client/api/NMTokenCache;
      50: aload         4
      52: invokevirtual #166                // Method org/apache/hadoop/yarn/client/api/NMTokenCache.containsToken:(Ljava/lang/String;)Z
      55: ifeq          89
      58: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      61: new           #152                // class java/lang/StringBuilder
      64: dup
      65: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #167                // String Replacing token for :
      70: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload         4
      75: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      86: goto          117
      89: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      92: new           #152                // class java/lang/StringBuilder
      95: dup
      96: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #168                // String Received new token for :
     101: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload         4
     106: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     117: aload_0
     118: invokevirtual #165                // Method getNMTokenCache:()Lorg/apache/hadoop/yarn/client/api/NMTokenCache;
     121: aload         4
     123: aload_3
     124: invokevirtual #169                // Method org/apache/hadoop/yarn/api/records/NMToken.getToken:()Lorg/apache/hadoop/yarn/api/records/Token;
     127: invokevirtual #170                // Method org/apache/hadoop/yarn/client/api/NMTokenCache.setToken:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/Token;)V
     130: goto          7
     133: return

  public void unregisterApplicationMaster(org.apache.hadoop.yarn.api.records.FinalApplicationStatus, java.lang.String, java.lang.String) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #171                // String AppStatus should not be null.
      11: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_1
      15: aload_2
      16: aload_3
      17: invokestatic  #172                // Method org/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterRequest.newInstance:(Lorg/apache/hadoop/yarn/api/records/FinalApplicationStatus;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterRequest;
      20: astore        4
      22: aload_0
      23: getfield      #28                 // Field rmClient:Lorg/apache/hadoop/yarn/api/ApplicationMasterProtocol;
      26: aload         4
      28: invokeinterface #173,  2          // InterfaceMethod org/apache/hadoop/yarn/api/ApplicationMasterProtocol.finishApplicationMaster:(Lorg/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterResponse;
      33: astore        5
      35: aload         5
      37: invokevirtual #174                // Method org/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterResponse.getIsUnregistered:()Z
      40: ifeq          46
      43: goto          65
      46: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      49: ldc           #175                // String Waiting for application to be successfully unregistered.
      51: invokeinterface #176,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      56: ldc2_w        #177                // long 100l
      59: invokestatic  #179                // Method java/lang/Thread.sleep:(J)V
      62: goto          22
      65: goto          107
      68: astore        5
      70: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      73: ldc           #181                // String Interrupted while waiting for application to be removed from RMStateStore
      75: invokeinterface #176,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      80: goto          107
      83: astore        5
      85: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      88: ldc           #88                 // String ApplicationMaster is out of sync with ResourceManager, hence resyncing.
      90: invokeinterface #89,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      95: aload_0
      96: invokespecial #51                 // Method registerApplicationMaster:()Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse;
      99: pop
     100: aload_0
     101: aload_1
     102: aload_2
     103: aload_3
     104: invokevirtual #182                // Method unregisterApplicationMaster:(Lorg/apache/hadoop/yarn/api/records/FinalApplicationStatus;Ljava/lang/String;Ljava/lang/String;)V
     107: return
    Exception table:
       from    to  target type
          22    65    68   Class java/lang/InterruptedException
          22    65    83   Class org/apache/hadoop/yarn/exceptions/ApplicationMasterNotRegisteredException

  public synchronized void addContainerRequest(T);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #183                // String Resource request can not be null.
      11: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: new           #5                  // class java/util/HashSet
      17: dup
      18: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      21: astore_2
      22: aload_1
      23: invokevirtual #184                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRacks:()Ljava/util/List;
      26: ifnull        98
      29: aload_2
      30: aload_1
      31: invokevirtual #184                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRacks:()Ljava/util/List;
      34: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: aload_1
      41: invokevirtual #184                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRacks:()Ljava/util/List;
      44: invokeinterface #185,  1          // InterfaceMethod java/util/List.size:()I
      49: aload_2
      50: invokeinterface #144,  1          // InterfaceMethod java/util/Set.size:()I
      55: if_icmpeq     98
      58: bipush        44
      60: invokestatic  #186                // Method com/google/common/base/Joiner.on:(C)Lcom/google/common/base/Joiner;
      63: astore_3
      64: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      67: new           #152                // class java/lang/StringBuilder
      70: dup
      71: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #187                // String ContainerRequest has duplicate racks:
      76: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_3
      80: aload_1
      81: invokevirtual #184                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRacks:()Ljava/util/List;
      84: invokevirtual #188                // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
      87: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokeinterface #89,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      98: aload_0
      99: aload_1
     100: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
     103: invokespecial #190                // Method resolveRacks:(Ljava/util/List;)Ljava/util/Set;
     106: astore_3
     107: aload_3
     108: aload_2
     109: invokeinterface #191,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     114: pop
     115: aload_0
     116: aload_1
     117: invokevirtual #192                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getResourceProfile:()Ljava/lang/String;
     120: aload_1
     121: invokevirtual #193                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
     124: invokespecial #194                // Method checkAndGetResourceProfile:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/records/Resource;
     127: astore        4
     129: aload_0
     130: aload_1
     131: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
     134: invokestatic  #196                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     137: aload_1
     138: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     141: getstatic     #198                // Field ANY_LIST:Ljava/util/List;
     144: aload_1
     145: invokevirtual #199                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRelaxLocality:()Z
     148: invokespecial #200                // Method checkLocalityRelaxationConflict:(Ljava/lang/Long;Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/util/Collection;Z)V
     151: aload_0
     152: aload_1
     153: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
     156: invokestatic  #196                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     159: aload_1
     160: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     163: aload_2
     164: iconst_1
     165: invokespecial #200                // Method checkLocalityRelaxationConflict:(Ljava/lang/Long;Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/util/Collection;Z)V
     168: aload_0
     169: aload_1
     170: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
     173: invokestatic  #196                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     176: aload_1
     177: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     180: aload_3
     181: aload_1
     182: invokevirtual #199                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRelaxLocality:()Z
     185: invokespecial #200                // Method checkLocalityRelaxationConflict:(Ljava/lang/Long;Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/util/Collection;Z)V
     188: aload_0
     189: aload_1
     190: invokespecial #201                // Method checkNodeLabelExpression:(Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;)V
     193: aload_1
     194: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
     197: ifnull        326
     200: new           #5                  // class java/util/HashSet
     203: dup
     204: aload_1
     205: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
     208: invokespecial #202                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     211: astore        5
     213: aload         5
     215: invokevirtual #203                // Method java/util/HashSet.size:()I
     218: aload_1
     219: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
     222: invokeinterface #185,  1          // InterfaceMethod java/util/List.size:()I
     227: if_icmpeq     272
     230: bipush        44
     232: invokestatic  #186                // Method com/google/common/base/Joiner.on:(C)Lcom/google/common/base/Joiner;
     235: astore        6
     237: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
     240: new           #152                // class java/lang/StringBuilder
     243: dup
     244: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
     247: ldc           #204                // String ContainerRequest has duplicate nodes:
     249: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: aload         6
     254: aload_1
     255: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
     258: invokevirtual #188                // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
     261: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     267: invokeinterface #89,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     272: aload         5
     274: invokevirtual #205                // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     277: astore        6
     279: aload         6
     281: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     286: ifeq          326
     289: aload         6
     291: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     296: checkcast     #206                // class java/lang/String
     299: astore        7
     301: aload_0
     302: aload_1
     303: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     306: aload         7
     308: aload_1
     309: invokevirtual #207                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getExecutionTypeRequest:()Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;
     312: aload         4
     314: aload_1
     315: iconst_1
     316: aload_1
     317: invokevirtual #208                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodeLabelExpression:()Ljava/lang/String;
     320: invokespecial #209                // Method addResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;ZLjava/lang/String;)V
     323: goto          279
     326: aload_2
     327: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     332: astore        5
     334: aload         5
     336: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     341: ifeq          381
     344: aload         5
     346: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     351: checkcast     #206                // class java/lang/String
     354: astore        6
     356: aload_0
     357: aload_1
     358: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     361: aload         6
     363: aload_1
     364: invokevirtual #207                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getExecutionTypeRequest:()Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;
     367: aload         4
     369: aload_1
     370: iconst_1
     371: aload_1
     372: invokevirtual #208                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodeLabelExpression:()Ljava/lang/String;
     375: invokespecial #209                // Method addResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;ZLjava/lang/String;)V
     378: goto          334
     381: aload_3
     382: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     387: astore        5
     389: aload         5
     391: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     396: ifeq          439
     399: aload         5
     401: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     406: checkcast     #206                // class java/lang/String
     409: astore        6
     411: aload_0
     412: aload_1
     413: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     416: aload         6
     418: aload_1
     419: invokevirtual #207                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getExecutionTypeRequest:()Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;
     422: aload         4
     424: aload_1
     425: aload_1
     426: invokevirtual #199                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRelaxLocality:()Z
     429: aload_1
     430: invokevirtual #208                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodeLabelExpression:()Ljava/lang/String;
     433: invokespecial #209                // Method addResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;ZLjava/lang/String;)V
     436: goto          389
     439: aload_0
     440: aload_1
     441: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     444: ldc           #210                // String *
     446: aload_1
     447: invokevirtual #207                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getExecutionTypeRequest:()Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;
     450: aload         4
     452: aload_1
     453: aload_1
     454: invokevirtual #199                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRelaxLocality:()Z
     457: aload_1
     458: invokevirtual #208                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodeLabelExpression:()Ljava/lang/String;
     461: invokespecial #209                // Method addResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;ZLjava/lang/String;)V
     464: return

  public synchronized void removeContainerRequest(T);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #183                // String Resource request can not be null.
      11: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: aload_1
      16: invokevirtual #192                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getResourceProfile:()Ljava/lang/String;
      19: aload_1
      20: invokevirtual #193                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
      23: invokespecial #194                // Method checkAndGetResourceProfile:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/records/Resource;
      26: astore_2
      27: new           #5                  // class java/util/HashSet
      30: dup
      31: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      34: astore_3
      35: aload_1
      36: invokevirtual #184                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRacks:()Ljava/util/List;
      39: ifnull        53
      42: aload_3
      43: aload_1
      44: invokevirtual #184                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getRacks:()Ljava/util/List;
      47: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      52: pop
      53: aload_3
      54: aload_0
      55: aload_1
      56: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
      59: invokespecial #190                // Method resolveRacks:(Ljava/util/List;)Ljava/util/Set;
      62: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      67: pop
      68: aload_1
      69: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
      72: ifnull        132
      75: new           #5                  // class java/util/HashSet
      78: dup
      79: aload_1
      80: invokevirtual #189                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodes:()Ljava/util/List;
      83: invokespecial #202                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      86: invokevirtual #205                // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      89: astore        4
      91: aload         4
      93: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          132
     101: aload         4
     103: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #206                // class java/lang/String
     111: astore        5
     113: aload_0
     114: aload_1
     115: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     118: aload         5
     120: aload_1
     121: invokevirtual #207                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getExecutionTypeRequest:()Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;
     124: aload_2
     125: aload_1
     126: invokespecial #211                // Method decResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;)V
     129: goto          91
     132: aload_3
     133: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     138: astore        4
     140: aload         4
     142: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     147: ifeq          181
     150: aload         4
     152: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     157: checkcast     #206                // class java/lang/String
     160: astore        5
     162: aload_0
     163: aload_1
     164: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     167: aload         5
     169: aload_1
     170: invokevirtual #207                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getExecutionTypeRequest:()Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;
     173: aload_2
     174: aload_1
     175: invokespecial #211                // Method decResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;)V
     178: goto          140
     181: aload_0
     182: aload_1
     183: invokevirtual #197                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     186: ldc           #210                // String *
     188: aload_1
     189: invokevirtual #207                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getExecutionTypeRequest:()Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;
     192: aload_2
     193: aload_1
     194: invokespecial #211                // Method decResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;)V
     197: return

  public synchronized void requestContainerUpdate(org.apache.hadoop.yarn.api.records.Container, org.apache.hadoop.yarn.api.records.UpdateContainerRequest);
    Code:
       0: aload_1
       1: ldc           #212                // String Container cannot be null!!
       3: invokestatic  #213                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #214                // String UpdateContainerRequest cannot be null!!
      10: invokestatic  #213                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      17: new           #152                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #215                // String Requesting Container update : container=
      26: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #216                // String , updateType=
      35: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #140                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getContainerUpdateType:()Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;
      42: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #217                // String , targetCapability=
      47: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: invokevirtual #138                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
      54: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #218                // String , targetExecType=
      59: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_2
      63: invokevirtual #139                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      66: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokeinterface #176,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      77: aload_2
      78: invokevirtual #138                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
      81: ifnull        114
      84: aload_2
      85: invokevirtual #139                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      88: ifnonnull     114
      91: aload_0
      92: aload_2
      93: invokevirtual #140                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getContainerUpdateType:()Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;
      96: aload_1
      97: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     100: aload_1
     101: invokevirtual #158                // Method org/apache/hadoop/yarn/api/records/Container.getResource:()Lorg/apache/hadoop/yarn/api/records/Resource;
     104: aload_2
     105: invokevirtual #138                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
     108: invokespecial #219                // Method validateContainerResourceChangeRequest:(Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)V
     111: goto          185
     114: aload_2
     115: invokevirtual #139                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
     118: ifnull        151
     121: aload_2
     122: invokevirtual #138                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
     125: ifnonnull     151
     128: aload_0
     129: aload_2
     130: invokevirtual #140                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getContainerUpdateType:()Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;
     133: aload_1
     134: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     137: aload_1
     138: invokevirtual #220                // Method org/apache/hadoop/yarn/api/records/Container.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
     141: aload_2
     142: invokevirtual #139                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
     145: invokespecial #221                // Method validateContainerExecTypeChangeRequest:(Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/ExecutionType;Lorg/apache/hadoop/yarn/api/records/ExecutionType;)V
     148: goto          185
     151: aload_2
     152: invokevirtual #139                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
     155: ifnonnull     175
     158: aload_2
     159: invokevirtual #138                // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
     162: ifnonnull     175
     165: new           #222                // class java/lang/IllegalArgumentException
     168: dup
     169: ldc           #223                // String Both target Capability andtarget Execution Type are null
     171: invokespecial #224                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: new           #222                // class java/lang/IllegalArgumentException
     178: dup
     179: ldc           #225                // String Support currently exists only for EITHER update of Capability OR update of Execution Type NOT both
     181: invokespecial #224                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     184: athrow
     185: aload_0
     186: getfield      #22                 // Field change:Ljava/util/Map;
     189: aload_1
     190: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     193: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     198: ifnonnull     227
     201: aload_0
     202: getfield      #22                 // Field change:Ljava/util/Map;
     205: aload_1
     206: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     209: new           #112                // class java/util/AbstractMap$SimpleEntry
     212: dup
     213: aload_1
     214: aload_2
     215: invokespecial #118                // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     218: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     223: pop
     224: goto          248
     227: aload_0
     228: getfield      #22                 // Field change:Ljava/util/Map;
     231: aload_1
     232: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     235: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     240: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
     243: aload_2
     244: invokevirtual #226                // Method java/util/AbstractMap$SimpleEntry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
     247: pop
     248: aload_0
     249: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     252: aload_1
     253: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     256: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     261: ifnonnull     290
     264: aload_0
     265: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     268: aload_1
     269: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     272: new           #112                // class java/util/AbstractMap$SimpleEntry
     275: dup
     276: aload_1
     277: aload_2
     278: invokespecial #118                // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     281: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     286: pop
     287: goto          311
     290: aload_0
     291: getfield      #23                 // Field pendingChange:Ljava/util/Map;
     294: aload_1
     295: invokevirtual #150                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     298: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     303: checkcast     #112                // class java/util/AbstractMap$SimpleEntry
     306: aload_2
     307: invokevirtual #226                // Method java/util/AbstractMap$SimpleEntry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
     310: pop
     311: return

  public synchronized void releaseAssignedContainer(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #227                // String ContainerId can not be null.
      11: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: getfield      #21                 // Field pendingRelease:Ljava/util/Set;
      18: aload_1
      19: invokeinterface #105,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_0
      26: getfield      #20                 // Field release:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #105,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: getfield      #23                 // Field pendingChange:Ljava/util/Map;
      40: aload_1
      41: invokeinterface #134,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: return

  public synchronized org.apache.hadoop.yarn.api.records.Resource getAvailableResources();
    Code:
       0: aload_0
       1: getfield      #124                // Field clusterAvailableResources:Lorg/apache/hadoop/yarn/api/records/Resource;
       4: areturn

  public synchronized int getClusterNodeCount();
    Code:
       0: aload_0
       1: getfield      #121                // Field clusterNodeCount:I
       4: ireturn

  public java.util.Collection<T> getMatchingRequests(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #228                // Method getTable:(J)Lorg/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable;
       5: astore_3
       6: new           #229                // class java/util/LinkedHashSet
       9: dup
      10: invokespecial #230                // Method java/util/LinkedHashSet."<init>":()V
      13: astore        4
      15: aload_3
      16: ifnull        61
      19: aload_3
      20: invokevirtual #96                 // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.iterator:()Ljava/util/Iterator;
      23: astore        5
      25: aload         5
      27: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          61
      35: aload         5
      37: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #97                 // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo
      45: astore        6
      47: aload         4
      49: aload         6
      51: getfield      #231                // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.containerRequests:Ljava/util/LinkedHashSet;
      54: invokevirtual #232                // Method java/util/LinkedHashSet.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: goto          25
      61: aload         4
      63: areturn

  public synchronized java.util.List<? extends java.util.Collection<T>> getMatchingRequests(org.apache.hadoop.yarn.api.records.Priority, java.lang.String, org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #233                // Field org/apache/hadoop/yarn/api/records/ExecutionType.GUARANTEED:Lorg/apache/hadoop/yarn/api/records/ExecutionType;
       6: aload_3
       7: invokevirtual #234                // Method getMatchingRequests:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionType;Lorg/apache/hadoop/yarn/api/records/Resource;)Ljava/util/List;
      10: areturn

  public java.util.List<? extends java.util.Collection<T>> getMatchingRequests(org.apache.hadoop.yarn.api.records.Priority, java.lang.String, org.apache.hadoop.yarn.api.records.ExecutionType, org.apache.hadoop.yarn.api.records.Resource, java.lang.String);
    Code:
       0: aload_0
       1: aload         5
       3: aload         4
       5: invokespecial #194                // Method checkAndGetResourceProfile:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/records/Resource;
       8: astore        4
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokevirtual #234                // Method getMatchingRequests:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionType;Lorg/apache/hadoop/yarn/api/records/Resource;)Ljava/util/List;
      19: areturn

  public synchronized java.util.List<? extends java.util.Collection<T>> getMatchingRequests(org.apache.hadoop.yarn.api.records.Priority, java.lang.String, org.apache.hadoop.yarn.api.records.ExecutionType, org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload         4
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ldc           #235                // String The Resource to be requested should not be null
      12: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      15: aload_1
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #236                // String The priority at which to request containers should not be null
      26: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      29: new           #65                 // class java/util/LinkedList
      32: dup
      33: invokespecial #66                 // Method java/util/LinkedList."<init>":()V
      36: astore        5
      38: aload_0
      39: lconst_0
      40: invokevirtual #228                // Method getTable:(J)Lorg/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable;
      43: astore        6
      45: aconst_null
      46: aload         6
      48: if_acmpeq     143
      51: aload         6
      53: aload_1
      54: aload_2
      55: aload_3
      56: aload         4
      58: invokevirtual #237                // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.getMatchingRequests:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionType;Lorg/apache/hadoop/yarn/api/records/Resource;)Ljava/util/List;
      61: astore        7
      63: aconst_null
      64: aload         7
      66: if_acmpeq     143
      69: aload         7
      71: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      76: astore        8
      78: aload         8
      80: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          143
      88: aload         8
      90: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #97                 // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo
      98: astore        9
     100: aload         9
     102: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
     105: invokevirtual #238                // Method org/apache/hadoop/yarn/api/records/ResourceRequest.getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
     108: aload         4
     110: invokestatic  #239                // Method org/apache/hadoop/yarn/util/resource/Resources.fitsIn:(Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)Z
     113: ifeq          140
     116: aload         9
     118: getfield      #231                // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.containerRequests:Ljava/util/LinkedHashSet;
     121: invokevirtual #240                // Method java/util/LinkedHashSet.isEmpty:()Z
     124: ifne          140
     127: aload         5
     129: aload         9
     131: getfield      #231                // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.containerRequests:Ljava/util/LinkedHashSet;
     134: invokeinterface #143,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     139: pop
     140: goto          78
     143: aload         5
     145: areturn

  private java.util.Set<java.lang.String> resolveRacks(java.util.List<java.lang.String>);
    Code:
       0: new           #5                  // class java/util/HashSet
       3: dup
       4: invokespecial #6                  // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnull        109
      12: aload_1
      13: invokestatic  #241                // Method org/apache/hadoop/yarn/util/RackResolver.resolve:(Ljava/util/List;)Ljava/util/List;
      16: astore_3
      17: aload_3
      18: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          109
      35: aload         4
      37: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #242                // class org/apache/hadoop/net/Node
      45: astore        5
      47: aload         5
      49: invokeinterface #243,  1          // InterfaceMethod org/apache/hadoop/net/Node.getNetworkLocation:()Ljava/lang/String;
      54: astore        6
      56: aload         6
      58: ifnonnull     97
      61: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      64: new           #152                // class java/lang/StringBuilder
      67: dup
      68: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #244                // String Failed to resolve rack for node
      73: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         5
      78: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #245                // String .
      83: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokeinterface #89,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      94: goto          106
      97: aload_2
      98: aload         6
     100: invokeinterface #105,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     105: pop
     106: goto          25
     109: aload_2
     110: areturn

  private void checkLocalityRelaxationConflict(java.lang.Long, org.apache.hadoop.yarn.api.records.Priority, java.util.Collection<java.lang.String>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #246                // Method java/lang/Long.longValue:()J
       5: invokevirtual #228                // Method getTable:(J)Lorg/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable;
       8: astore        5
      10: aload         5
      12: ifnull        130
      15: aload         5
      17: aload_2
      18: aload_3
      19: invokevirtual #247                // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.getAllResourceRequestInfos:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/util/Collection;)Ljava/util/List;
      22: astore        6
      24: aload         6
      26: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore        7
      33: aload         7
      35: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          130
      43: aload         7
      45: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #97                 // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo
      53: astore        8
      55: aload         8
      57: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
      60: astore        9
      62: aload         9
      64: invokevirtual #248                // Method org/apache/hadoop/yarn/api/records/ResourceRequest.getRelaxLocality:()Z
      67: istore        10
      69: iload         4
      71: iload         10
      73: if_icmpeq     127
      76: new           #249                // class org/apache/hadoop/yarn/client/api/InvalidContainerRequestException
      79: dup
      80: new           #152                // class java/lang/StringBuilder
      83: dup
      84: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #250                // String Cannot submit a ContainerRequest asking for location
      89: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload         9
      94: invokevirtual #251                // Method org/apache/hadoop/yarn/api/records/ResourceRequest.getResourceName:()Ljava/lang/String;
      97: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #252                // String  with locality relaxation
     102: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: iload         4
     107: invokevirtual #253                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     110: ldc           #254                // String  when it has already been requestedwith locality relaxation
     112: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: iload         10
     117: invokevirtual #253                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     120: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #255                // Method org/apache/hadoop/yarn/client/api/InvalidContainerRequestException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: goto          33
     130: return

  private org.apache.hadoop.yarn.api.records.Resource checkAndGetResourceProfile(java.lang.String, org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_2
       1: astore_3
       2: aload_1
       3: ifnull        179
       6: aload_1
       7: invokevirtual #256                // Method java/lang/String.isEmpty:()Z
      10: ifne          179
      13: aload_0
      14: getfield      #59                 // Field resourceProfilesMap:Ljava/util/Map;
      17: ifnull        33
      20: aload_0
      21: getfield      #59                 // Field resourceProfilesMap:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #257,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      30: ifne          105
      33: new           #249                // class org/apache/hadoop/yarn/client/api/InvalidContainerRequestException
      36: dup
      37: new           #152                // class java/lang/StringBuilder
      40: dup
      41: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      44: ldc_w         #258                // String Invalid profile name specified=
      47: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #59                 // Field resourceProfilesMap:Ljava/util/Map;
      58: ifnonnull     67
      61: ldc_w         #259                // String
      64: goto          95
      67: new           #152                // class java/lang/StringBuilder
      70: dup
      71: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      74: ldc_w         #260                // String , valid profile names are
      77: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #59                 // Field resourceProfilesMap:Ljava/util/Map;
      84: invokeinterface #261,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      89: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #255                // Method org/apache/hadoop/yarn/client/api/InvalidContainerRequestException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: getfield      #59                 // Field resourceProfilesMap:Ljava/util/Map;
     109: aload_1
     110: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     115: checkcast     #262                // class org/apache/hadoop/yarn/api/records/Resource
     118: invokestatic  #263                // Method org/apache/hadoop/yarn/util/resource/Resources.clone:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/api/records/Resource;
     121: astore_3
     122: aload_2
     123: invokevirtual #264                // Method org/apache/hadoop/yarn/api/records/Resource.getAllResourcesListCopy:()Ljava/util/List;
     126: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     131: astore        4
     133: aload         4
     135: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     140: ifeq          179
     143: aload         4
     145: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     150: checkcast     #265                // class org/apache/hadoop/yarn/api/records/ResourceInformation
     153: astore        5
     155: aload         5
     157: invokevirtual #266                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getValue:()J
     160: lconst_0
     161: lcmp
     162: ifle          176
     165: aload_3
     166: aload         5
     168: invokevirtual #267                // Method org/apache/hadoop/yarn/api/records/ResourceInformation.getName:()Ljava/lang/String;
     171: aload         5
     173: invokevirtual #268                // Method org/apache/hadoop/yarn/api/records/Resource.setResourceInformation:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ResourceInformation;)V
     176: goto          133
     179: aload_3
     180: areturn

  private void checkNodeLabelExpression(T);
    Code:
       0: aload_1
       1: invokevirtual #208                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getNodeLabelExpression:()Ljava/lang/String;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpeq     17
      10: aload_2
      11: invokevirtual #256                // Method java/lang/String.isEmpty:()Z
      14: ifeq          18
      17: return
      18: aload_2
      19: ldc_w         #269                // String &&
      22: invokevirtual #270                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      25: ifne          38
      28: aload_2
      29: ldc_w         #271                // String ||
      32: invokevirtual #270                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      35: ifeq          49
      38: new           #249                // class org/apache/hadoop/yarn/client/api/InvalidContainerRequestException
      41: dup
      42: ldc_w         #272                // String Cannot specify more than one node label in a single node label expression
      45: invokespecial #255                // Method org/apache/hadoop/yarn/client/api/InvalidContainerRequestException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  private void validateContainerResourceChangeRequest(org.apache.hadoop.yarn.api.records.ContainerUpdateType, org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.api.records.Resource, org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_2
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc_w         #273                // String ContainerId cannot be null
      12: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      15: aload_3
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc_w         #274                // String Original resource capability cannot be null
      27: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      30: invokestatic  #275                // Method org/apache/hadoop/yarn/util/resource/Resources.none:()Lorg/apache/hadoop/yarn/api/records/Resource;
      33: aload_3
      34: invokestatic  #276                // Method org/apache/hadoop/yarn/util/resource/Resources.equals:(Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)Z
      37: ifne          54
      40: invokestatic  #275                // Method org/apache/hadoop/yarn/util/resource/Resources.none:()Lorg/apache/hadoop/yarn/api/records/Resource;
      43: aload_3
      44: invokestatic  #239                // Method org/apache/hadoop/yarn/util/resource/Resources.fitsIn:(Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ldc_w         #277                // String Original resource capability must be greater than 0
      58: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      61: aload         4
      63: ifnull        70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ldc_w         #278                // String Target resource capability cannot be null
      74: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      77: invokestatic  #275                // Method org/apache/hadoop/yarn/util/resource/Resources.none:()Lorg/apache/hadoop/yarn/api/records/Resource;
      80: aload         4
      82: invokestatic  #276                // Method org/apache/hadoop/yarn/util/resource/Resources.equals:(Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)Z
      85: ifne          103
      88: invokestatic  #275                // Method org/apache/hadoop/yarn/util/resource/Resources.none:()Lorg/apache/hadoop/yarn/api/records/Resource;
      91: aload         4
      93: invokestatic  #239                // Method org/apache/hadoop/yarn/util/resource/Resources.fitsIn:(Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)Z
      96: ifeq          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ldc_w         #279                // String Target resource capability must be greater than 0
     107: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     110: getstatic     #280                // Field org/apache/hadoop/yarn/api/records/ContainerUpdateType.DECREASE_RESOURCE:Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;
     113: aload_1
     114: if_acmpne     132
     117: aload         4
     119: aload_3
     120: invokestatic  #239                // Method org/apache/hadoop/yarn/util/resource/Resources.fitsIn:(Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)Z
     123: ldc_w         #281                // String Target resource capability must fit in Original capability
     126: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     129: goto          144
     132: aload_3
     133: aload         4
     135: invokestatic  #239                // Method org/apache/hadoop/yarn/util/resource/Resources.fitsIn:(Lorg/apache/hadoop/yarn/api/records/Resource;Lorg/apache/hadoop/yarn/api/records/Resource;)Z
     138: ldc_w         #282                // String Target resource capability must be more than Original capability
     141: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     144: return

  private void validateContainerExecTypeChangeRequest(org.apache.hadoop.yarn.api.records.ContainerUpdateType, org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.api.records.ExecutionType, org.apache.hadoop.yarn.api.records.ExecutionType);
    Code:
       0: aload_2
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc_w         #273                // String ContainerId cannot be null
      12: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      15: aload_3
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc_w         #283                // String Original Execution Type cannot be null
      27: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      30: aload         4
      32: ifnull        39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ldc_w         #284                // String Target Execution Type cannot be null
      43: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      46: getstatic     #285                // Field org/apache/hadoop/yarn/api/records/ContainerUpdateType.DEMOTE_EXECUTION_TYPE:Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;
      49: aload_1
      50: if_acmpne     82
      53: aload         4
      55: getstatic     #286                // Field org/apache/hadoop/yarn/api/records/ExecutionType.OPPORTUNISTIC:Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      58: if_acmpne     72
      61: aload_3
      62: getstatic     #233                // Field org/apache/hadoop/yarn/api/records/ExecutionType.GUARANTEED:Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      65: if_acmpne     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: ldc_w         #287                // String Incorrect Container update request, target should be OPPORTUNISTIC and original should be GUARANTEED
      76: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      79: goto          108
      82: aload         4
      84: getstatic     #233                // Field org/apache/hadoop/yarn/api/records/ExecutionType.GUARANTEED:Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      87: if_acmpne     101
      90: aload_3
      91: getstatic     #286                // Field org/apache/hadoop/yarn/api/records/ExecutionType.OPPORTUNISTIC:Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      94: if_acmpne     101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: ldc_w         #288                // String Incorrect Container update request, target should be GUARANTEED and original should be OPPORTUNISTIC
     105: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     108: return

  private void addResourceRequestToAsk(org.apache.hadoop.yarn.api.records.ResourceRequest);
    Code:
       0: aload_0
       1: getfield      #18                 // Field ask:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #104,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_0
      14: getfield      #18                 // Field ask:Ljava/util/Set;
      17: aload_1
      18: invokeinterface #147,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: getfield      #18                 // Field ask:Ljava/util/Set;
      28: aload_1
      29: invokeinterface #105,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      34: pop
      35: return

  private void addResourceRequest(org.apache.hadoop.yarn.api.records.Priority, java.lang.String, org.apache.hadoop.yarn.api.records.ExecutionTypeRequest, org.apache.hadoop.yarn.api.records.Resource, T, boolean, java.lang.String);
    Code:
       0: aload_0
       1: aload         5
       3: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
       6: invokevirtual #228                // Method getTable:(J)Lorg/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable;
       9: astore        8
      11: aload         8
      13: ifnonnull     37
      16: new           #95                 // class org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable
      19: dup
      20: invokespecial #289                // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable."<init>":()V
      23: astore        8
      25: aload_0
      26: aload         5
      28: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
      31: aload         8
      33: invokevirtual #290                // Method putTable:(JLorg/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable;)Lorg/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable;
      36: pop
      37: aload         8
      39: aload         5
      41: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
      44: invokestatic  #196                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      47: aload_1
      48: aload_2
      49: aload_3
      50: aload         4
      52: aload         5
      54: iload         6
      56: aload         7
      58: invokevirtual #291                // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.addResourceRequest:(Ljava/lang/Long;Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Ljava/lang/Object;ZLjava/lang/String;)Lorg/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo;
      61: astore        9
      63: aload_0
      64: aload         9
      66: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
      69: invokespecial #99                 // Method addResourceRequestToAsk:(Lorg/apache/hadoop/yarn/api/records/ResourceRequest;)V
      72: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      75: invokeinterface #151,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      80: ifeq          191
      83: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      86: new           #152                // class java/lang/StringBuilder
      89: dup
      90: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      93: ldc_w         #292                // String Adding request to ask
      96: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload         9
     101: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
     104: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     115: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
     118: new           #152                // class java/lang/StringBuilder
     121: dup
     122: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
     125: ldc_w         #293                // String addResourceRequest: applicationId= priority=
     128: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_1
     132: invokevirtual #294                // Method org/apache/hadoop/yarn/api/records/Priority.getPriority:()I
     135: invokevirtual #295                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     138: ldc_w         #296                // String  resourceName=
     141: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_2
     145: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc_w         #297                // String  numContainers=
     151: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload         9
     156: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
     159: invokevirtual #298                // Method org/apache/hadoop/yarn/api/records/ResourceRequest.getNumContainers:()I
     162: invokevirtual #295                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     165: ldc_w         #299                // String  #asks=
     168: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload_0
     172: getfield      #18                 // Field ask:Ljava/util/Set;
     175: invokeinterface #144,  1          // InterfaceMethod java/util/Set.size:()I
     180: invokevirtual #295                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     183: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     191: return

  private void decResourceRequest(org.apache.hadoop.yarn.api.records.Priority, java.lang.String, org.apache.hadoop.yarn.api.records.ExecutionTypeRequest, org.apache.hadoop.yarn.api.records.Resource, T);
    Code:
       0: aload_0
       1: aload         5
       3: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
       6: invokevirtual #228                // Method getTable:(J)Lorg/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable;
       9: astore        6
      11: aload         6
      13: ifnull        173
      16: aload         6
      18: aload_1
      19: aload_2
      20: aload_3
      21: aload         4
      23: aload         5
      25: invokevirtual #300                // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.decResourceRequest:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionTypeRequest;Lorg/apache/hadoop/yarn/api/records/Resource;Ljava/lang/Object;)Lorg/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo;
      28: astore        7
      30: aload         7
      32: ifnull        170
      35: aload_0
      36: aload         7
      38: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
      41: invokespecial #99                 // Method addResourceRequestToAsk:(Lorg/apache/hadoop/yarn/api/records/ResourceRequest;)V
      44: aload         7
      46: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
      49: invokevirtual #298                // Method org/apache/hadoop/yarn/api/records/ResourceRequest.getNumContainers:()I
      52: ifne          69
      55: aload         6
      57: aload_1
      58: aload_2
      59: aload_3
      60: invokevirtual #301                // Method org/apache/hadoop/yarn/api/records/ExecutionTypeRequest.getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      63: aload         4
      65: invokevirtual #302                // Method org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.remove:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ExecutionType;Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo;
      68: pop
      69: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      72: invokeinterface #151,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      77: ifeq          170
      80: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      83: new           #152                // class java/lang/StringBuilder
      86: dup
      87: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      90: ldc_w         #303                // String AFTER decResourceRequest: allocationRequestId=
      93: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload         5
      98: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
     101: invokevirtual #304                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     104: ldc_w         #305                // String  priority=
     107: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_1
     111: invokevirtual #294                // Method org/apache/hadoop/yarn/api/records/Priority.getPriority:()I
     114: invokevirtual #295                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: ldc_w         #296                // String  resourceName=
     120: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_2
     124: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc_w         #297                // String  numContainers=
     130: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload         7
     135: getfield      #98                 // Field org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl$ResourceRequestInfo.remoteRequest:Lorg/apache/hadoop/yarn/api/records/ResourceRequest;
     138: invokevirtual #298                // Method org/apache/hadoop/yarn/api/records/ResourceRequest.getNumContainers:()I
     141: invokevirtual #295                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     144: ldc_w         #299                // String  #asks=
     147: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_0
     151: getfield      #18                 // Field ask:Ljava/util/Set;
     154: invokeinterface #144,  1          // InterfaceMethod java/util/Set.size:()I
     159: invokevirtual #295                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     162: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokeinterface #161,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     170: goto          205
     173: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
     176: new           #152                // class java/lang/StringBuilder
     179: dup
     180: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
     183: ldc_w         #306                // String No remoteRequestTable found with allocationRequestId=
     186: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload         5
     191: invokevirtual #195                // Method org/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest.getAllocationRequestId:()J
     194: invokevirtual #304                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     197: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokeinterface #176,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     205: return

  public synchronized void updateBlacklist(java.util.List<java.lang.String>, java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        37
       4: aload_0
       5: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      14: pop
      15: aload_0
      16: getfield      #7                  // Field blacklistedNodes:Ljava/util/Set;
      19: aload_1
      20: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_0
      27: getfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
      30: aload_1
      31: invokeinterface #191,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      36: pop
      37: aload_2
      38: ifnull        74
      41: aload_0
      42: getfield      #9                  // Field blacklistRemovals:Ljava/util/Set;
      45: aload_2
      46: invokeinterface #90,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      51: pop
      52: aload_0
      53: getfield      #7                  // Field blacklistedNodes:Ljava/util/Set;
      56: aload_2
      57: invokeinterface #191,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      62: pop
      63: aload_0
      64: getfield      #8                  // Field blacklistAdditions:Ljava/util/Set;
      67: aload_2
      68: invokeinterface #191,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      73: pop
      74: aload_1
      75: ifnull        103
      78: aload_2
      79: ifnull        103
      82: aload_1
      83: aload_2
      84: invokeinterface #307,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      89: ifeq          103
      92: getstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
      95: ldc_w         #308                // String The same resources appear in both blacklistAdditions and blacklistRemovals in updateBlacklist.
      98: invokeinterface #89,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     103: return

  public synchronized void updateTrackingUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field newTrackingUrl:Ljava/lang/String;
       5: return

  private void updateAMRMToken(org.apache.hadoop.yarn.api.records.Token) throws java.io.IOException;
    Code:
       0: new           #309                // class org/apache/hadoop/security/token/Token
       3: dup
       4: aload_1
       5: invokevirtual #310                // Method org/apache/hadoop/yarn/api/records/Token.getIdentifier:()Ljava/nio/ByteBuffer;
       8: invokevirtual #311                // Method java/nio/ByteBuffer.array:()[B
      11: aload_1
      12: invokevirtual #312                // Method org/apache/hadoop/yarn/api/records/Token.getPassword:()Ljava/nio/ByteBuffer;
      15: invokevirtual #311                // Method java/nio/ByteBuffer.array:()[B
      18: new           #313                // class org/apache/hadoop/io/Text
      21: dup
      22: aload_1
      23: invokevirtual #314                // Method org/apache/hadoop/yarn/api/records/Token.getKind:()Ljava/lang/String;
      26: invokespecial #315                // Method org/apache/hadoop/io/Text."<init>":(Ljava/lang/String;)V
      29: new           #313                // class org/apache/hadoop/io/Text
      32: dup
      33: aload_1
      34: invokevirtual #316                // Method org/apache/hadoop/yarn/api/records/Token.getService:()Ljava/lang/String;
      37: invokespecial #315                // Method org/apache/hadoop/io/Text."<init>":(Ljava/lang/String;)V
      40: invokespecial #317                // Method org/apache/hadoop/security/token/Token."<init>":([B[BLorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
      43: astore_2
      44: invokestatic  #318                // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      47: astore_3
      48: aload_3
      49: aload_2
      50: invokevirtual #319                // Method org/apache/hadoop/security/UserGroupInformation.addToken:(Lorg/apache/hadoop/security/token/Token;)Z
      53: pop
      54: aload_2
      55: aload_0
      56: invokevirtual #32                 // Method getConfig:()Lorg/apache/hadoop/conf/Configuration;
      59: invokestatic  #320                // Method org/apache/hadoop/yarn/client/ClientRMProxy.getAMRMTokenService:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/Text;
      62: invokevirtual #321                // Method org/apache/hadoop/security/token/Token.setService:(Lorg/apache/hadoop/io/Text;)V
      65: return

  org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable<T> getTable(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field remoteRequests:Ljava/util/Map;
       4: lload_1
       5: invokestatic  #196                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #95                 // class org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable
      16: areturn

  java.util.Map<java.util.Set<java.lang.String>, java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest>> getOutstandingSchedRequests();
    Code:
       0: aload_0
       1: getfield      #27                 // Field outstandingSchedRequests:Ljava/util/Map;
       4: areturn

  org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable<T> putTable(long, org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable<T>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field remoteRequests:Ljava/util/Map;
       4: lload_1
       5: invokestatic  #196                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aload_3
       9: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #95                 // class org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable
      17: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl
       2: invokestatic  #322                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #87                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #210                // String *
      10: invokestatic  #323                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      13: putstatic     #198                // Field ANY_LIST:Ljava/util/List;
      16: return
}
