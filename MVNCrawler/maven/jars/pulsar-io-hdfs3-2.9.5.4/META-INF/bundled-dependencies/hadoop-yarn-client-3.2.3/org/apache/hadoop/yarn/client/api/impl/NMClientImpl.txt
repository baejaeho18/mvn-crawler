Compiled from "NMClientImpl.java"
public class org.apache.hadoop.yarn.client.api.impl.NMClientImpl extends org.apache.hadoop.yarn.client.api.NMClient {
  private static final org.slf4j.Logger LOG;

  protected java.util.concurrent.ConcurrentMap<org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.client.api.impl.NMClientImpl$StartedContainer> startedContainers;

  private final java.util.concurrent.atomic.AtomicBoolean cleanupRunningContainers;

  private org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy cmProxy;

  public org.apache.hadoop.yarn.client.api.impl.NMClientImpl();
    Code:
       0: aload_0
       1: ldc           #1                  // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl
       3: invokevirtual #2                  // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokespecial #3                  // Method org/apache/hadoop/yarn/client/api/NMClient."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
      20: aload_0
      21: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
      24: dup
      25: iconst_1
      26: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      29: putfield      #9                  // Field cleanupRunningContainers:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: return

  public org.apache.hadoop.yarn.client.api.impl.NMClientImpl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/apache/hadoop/yarn/client/api/NMClient."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      13: putfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
      16: aload_0
      17: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: iconst_1
      22: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      25: putfield      #9                  // Field cleanupRunningContainers:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: return

  protected void serviceStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getCleanupRunningContainers:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          14
      10: aload_0
      11: invokevirtual #12                 // Method cleanupRunningContainers:()V
      14: aload_0
      15: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      18: invokevirtual #14                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.stopAllProxies:()V
      21: aload_0
      22: invokespecial #15                 // Method org/apache/hadoop/yarn/client/api/NMClient.serviceStop:()V
      25: return

  protected synchronized void cleanupRunningContainers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          127
      24: aload_1
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #20                 // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokevirtual #21                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.getContainerId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      39: aload_2
      40: invokevirtual #22                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      43: invokevirtual #23                 // Method stopContainer:(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/NodeId;)V
      46: goto          124
      49: astore_3
      50: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      53: new           #26                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #28                 // String Failed to stop Container
      62: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #21                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.getContainerId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      69: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #31                 // String when stopping NMClientImpl
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      85: goto          124
      88: astore_3
      89: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      92: new           #26                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #28                 // String Failed to stop Container
     101: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_2
     105: invokevirtual #21                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.getContainerId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     108: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: ldc           #31                 // String when stopping NMClientImpl
     113: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     124: goto          15
     127: return
    Exception table:
       from    to  target type
          34    46    49   Class org/apache/hadoop/yarn/exceptions/YarnException
          34    46    88   Class java/io/IOException

  protected void serviceInit(org.apache.hadoop.conf.Configuration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method org/apache/hadoop/yarn/client/api/NMClient.serviceInit:(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: invokevirtual #36                 // Method getNMTokenCache:()Lorg/apache/hadoop/yarn/client/api/NMTokenCache;
       9: ifnonnull     22
      12: new           #37                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #38                 // String NMTokenCache has not been set
      18: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: new           #40                 // class org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy
      26: dup
      27: aload_1
      28: aload_0
      29: invokevirtual #36                 // Method getNMTokenCache:()Lorg/apache/hadoop/yarn/client/api/NMTokenCache;
      32: invokespecial #41                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/yarn/client/api/NMTokenCache;)V
      35: putfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      38: return

  public void cleanupRunningContainersOnStop(boolean);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getCleanupRunningContainers:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  private void addStartingContainer(org.apache.hadoop.yarn.client.api.impl.NMClientImpl$StartedContainer) throws org.apache.hadoop.yarn.exceptions.YarnException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokestatic  #43                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$000:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;)Lorg/apache/hadoop/yarn/api/records/ContainerId;
       8: aload_1
       9: invokeinterface #44,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: ifnull        51
      17: new           #26                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #45                 // String Container
      26: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokestatic  #43                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$000:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;)Lorg/apache/hadoop/yarn/api/records/ContainerId;
      33: invokevirtual #46                 // Method org/apache/hadoop/yarn/api/records/ContainerId.toString:()Ljava/lang/String;
      36: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #47                 // String  is already started
      41: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokestatic  #48                 // Method org/apache/hadoop/yarn/ipc/RPCUtil.getRemoteException:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/exceptions/YarnException;
      50: athrow
      51: return

  public java.util.Map<java.lang.String, java.nio.ByteBuffer> startContainer(org.apache.hadoop.yarn.api.records.Container, org.apache.hadoop.yarn.api.records.ContainerLaunchContext) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: new           #20                 // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer
       3: dup
       4: aload_1
       5: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
       8: aload_1
       9: invokevirtual #50                 // Method org/apache/hadoop/yarn/api/records/Container.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      12: invokespecial #51                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer."<init>":(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/NodeId;)V
      15: astore_3
      16: aload_3
      17: dup
      18: astore        4
      20: monitorenter
      21: aload_0
      22: aload_3
      23: invokespecial #52                 // Method addStartingContainer:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;)V
      26: aconst_null
      27: astore        6
      29: aload_0
      30: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      33: aload_1
      34: invokevirtual #50                 // Method org/apache/hadoop/yarn/api/records/Container.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      37: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      40: aload_1
      41: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      44: invokevirtual #54                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.getProxy:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;
      47: astore        6
      49: aload_2
      50: aload_1
      51: invokevirtual #55                 // Method org/apache/hadoop/yarn/api/records/Container.getContainerToken:()Lorg/apache/hadoop/yarn/api/records/Token;
      54: invokestatic  #56                 // Method org/apache/hadoop/yarn/api/protocolrecords/StartContainerRequest.newInstance:(Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;Lorg/apache/hadoop/yarn/api/records/Token;)Lorg/apache/hadoop/yarn/api/protocolrecords/StartContainerRequest;
      57: astore        7
      59: new           #57                 // class java/util/ArrayList
      62: dup
      63: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
      66: astore        8
      68: aload         8
      70: aload         7
      72: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: aload         8
      80: invokestatic  #60                 // Method org/apache/hadoop/yarn/api/protocolrecords/StartContainersRequest.newInstance:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/StartContainersRequest;
      83: astore        9
      85: aload         6
      87: invokevirtual #61                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData.getContainerManagementProtocol:()Lorg/apache/hadoop/yarn/api/ContainerManagementProtocol;
      90: aload         9
      92: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.startContainers:(Lorg/apache/hadoop/yarn/api/protocolrecords/StartContainersRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/StartContainersResponse;
      97: astore        10
      99: aload         10
     101: invokevirtual #63                 // Method org/apache/hadoop/yarn/api/protocolrecords/StartContainersResponse.getFailedRequests:()Ljava/util/Map;
     104: ifnull        152
     107: aload         10
     109: invokevirtual #63                 // Method org/apache/hadoop/yarn/api/protocolrecords/StartContainersResponse.getFailedRequests:()Ljava/util/Map;
     112: aload_1
     113: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     116: invokeinterface #64,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     121: ifeq          152
     124: aload         10
     126: invokevirtual #63                 // Method org/apache/hadoop/yarn/api/protocolrecords/StartContainersResponse.getFailedRequests:()Ljava/util/Map;
     129: aload_1
     130: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
     133: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     138: checkcast     #66                 // class org/apache/hadoop/yarn/api/records/SerializedException
     141: invokevirtual #67                 // Method org/apache/hadoop/yarn/api/records/SerializedException.deSerialize:()Ljava/lang/Throwable;
     144: astore        11
     146: aload_0
     147: aload         11
     149: invokespecial #68                 // Method parseAndThrowException:(Ljava/lang/Throwable;)V
     152: aload         10
     154: invokevirtual #69                 // Method org/apache/hadoop/yarn/api/protocolrecords/StartContainersResponse.getAllServicesMetaData:()Ljava/util/Map;
     157: astore        5
     159: aload_3
     160: getstatic     #70                 // Field org/apache/hadoop/yarn/api/records/ContainerState.RUNNING:Lorg/apache/hadoop/yarn/api/records/ContainerState;
     163: invokestatic  #71                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$102:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;Lorg/apache/hadoop/yarn/api/records/ContainerState;)Lorg/apache/hadoop/yarn/api/records/ContainerState;
     166: pop
     167: aload         6
     169: ifnull        260
     172: aload_0
     173: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     176: aload         6
     178: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     181: goto          260
     184: astore        7
     186: aload_3
     187: getstatic     #73                 // Field org/apache/hadoop/yarn/api/records/ContainerState.COMPLETE:Lorg/apache/hadoop/yarn/api/records/ContainerState;
     190: invokestatic  #71                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$102:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;Lorg/apache/hadoop/yarn/api/records/ContainerState;)Lorg/apache/hadoop/yarn/api/records/ContainerState;
     193: pop
     194: aload_0
     195: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
     198: aload_3
     199: invokestatic  #43                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$000:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;)Lorg/apache/hadoop/yarn/api/records/ContainerId;
     202: invokeinterface #74,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     207: pop
     208: aload         7
     210: athrow
     211: astore        7
     213: aload_3
     214: getstatic     #73                 // Field org/apache/hadoop/yarn/api/records/ContainerState.COMPLETE:Lorg/apache/hadoop/yarn/api/records/ContainerState;
     217: invokestatic  #71                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$102:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;Lorg/apache/hadoop/yarn/api/records/ContainerState;)Lorg/apache/hadoop/yarn/api/records/ContainerState;
     220: pop
     221: aload_0
     222: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
     225: aload_3
     226: invokestatic  #43                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$000:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;)Lorg/apache/hadoop/yarn/api/records/ContainerId;
     229: invokeinterface #74,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     234: pop
     235: aload         7
     237: invokestatic  #76                 // Method org/apache/hadoop/yarn/ipc/RPCUtil.getRemoteException:(Ljava/lang/Throwable;)Lorg/apache/hadoop/yarn/exceptions/YarnException;
     240: athrow
     241: astore        12
     243: aload         6
     245: ifnull        257
     248: aload_0
     249: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     252: aload         6
     254: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     257: aload         12
     259: athrow
     260: aload         5
     262: aload         4
     264: monitorexit
     265: areturn
     266: astore        13
     268: aload         4
     270: monitorexit
     271: aload         13
     273: athrow
    Exception table:
       from    to  target type
          29   167   184   Class org/apache/hadoop/yarn/exceptions/YarnException
          29   167   184   Class java/io/IOException
          29   167   211   Class java/lang/Throwable
          29   167   241   any
         184   243   241   any
          21   265   266   any
         266   271   266   any

  public void increaseContainerResource(org.apache.hadoop.yarn.api.records.Container) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
       6: aload_1
       7: invokevirtual #50                 // Method org/apache/hadoop/yarn/api/records/Container.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      10: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      17: invokevirtual #54                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.getProxy:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;
      20: astore_2
      21: new           #57                 // class java/util/ArrayList
      24: dup
      25: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokevirtual #55                 // Method org/apache/hadoop/yarn/api/records/Container.getContainerToken:()Lorg/apache/hadoop/yarn/api/records/Token;
      34: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_3
      41: invokestatic  #77                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateRequest.newInstance:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateRequest;
      44: astore        4
      46: aload_2
      47: invokevirtual #61                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData.getContainerManagementProtocol:()Lorg/apache/hadoop/yarn/api/ContainerManagementProtocol;
      50: aload         4
      52: invokeinterface #78,  2           // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.updateContainer:(Lorg/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse;
      57: astore        5
      59: aload         5
      61: invokevirtual #79                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse.getFailedRequests:()Ljava/util/Map;
      64: ifnull        112
      67: aload         5
      69: invokevirtual #79                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse.getFailedRequests:()Ljava/util/Map;
      72: aload_1
      73: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      76: invokeinterface #64,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      81: ifeq          112
      84: aload         5
      86: invokevirtual #79                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse.getFailedRequests:()Ljava/util/Map;
      89: aload_1
      90: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      93: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #66                 // class org/apache/hadoop/yarn/api/records/SerializedException
     101: invokevirtual #67                 // Method org/apache/hadoop/yarn/api/records/SerializedException.deSerialize:()Ljava/lang/Throwable;
     104: astore        6
     106: aload_0
     107: aload         6
     109: invokespecial #68                 // Method parseAndThrowException:(Ljava/lang/Throwable;)V
     112: aload_2
     113: ifnull        144
     116: aload_0
     117: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     120: aload_2
     121: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     124: goto          144
     127: astore        7
     129: aload_2
     130: ifnull        141
     133: aload_0
     134: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     137: aload_2
     138: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     141: aload         7
     143: athrow
     144: return
    Exception table:
       from    to  target type
           2   112   127   any
         127   129   127   any

  public void updateContainerResource(org.apache.hadoop.yarn.api.records.Container) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
       6: aload_1
       7: invokevirtual #50                 // Method org/apache/hadoop/yarn/api/records/Container.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      10: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      17: invokevirtual #54                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.getProxy:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;
      20: astore_2
      21: new           #57                 // class java/util/ArrayList
      24: dup
      25: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokevirtual #55                 // Method org/apache/hadoop/yarn/api/records/Container.getContainerToken:()Lorg/apache/hadoop/yarn/api/records/Token;
      34: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_3
      41: invokestatic  #77                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateRequest.newInstance:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateRequest;
      44: astore        4
      46: aload_2
      47: invokevirtual #61                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData.getContainerManagementProtocol:()Lorg/apache/hadoop/yarn/api/ContainerManagementProtocol;
      50: aload         4
      52: invokeinterface #78,  2           // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.updateContainer:(Lorg/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse;
      57: astore        5
      59: aload         5
      61: invokevirtual #79                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse.getFailedRequests:()Ljava/util/Map;
      64: ifnull        112
      67: aload         5
      69: invokevirtual #79                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse.getFailedRequests:()Ljava/util/Map;
      72: aload_1
      73: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      76: invokeinterface #64,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      81: ifeq          112
      84: aload         5
      86: invokevirtual #79                 // Method org/apache/hadoop/yarn/api/protocolrecords/ContainerUpdateResponse.getFailedRequests:()Ljava/util/Map;
      89: aload_1
      90: invokevirtual #49                 // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      93: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #66                 // class org/apache/hadoop/yarn/api/records/SerializedException
     101: invokevirtual #67                 // Method org/apache/hadoop/yarn/api/records/SerializedException.deSerialize:()Ljava/lang/Throwable;
     104: astore        6
     106: aload_0
     107: aload         6
     109: invokespecial #68                 // Method parseAndThrowException:(Ljava/lang/Throwable;)V
     112: aload_2
     113: ifnull        144
     116: aload_0
     117: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     120: aload_2
     121: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     124: goto          144
     127: astore        7
     129: aload_2
     130: ifnull        141
     133: aload_0
     134: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     137: aload_2
     138: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     141: aload         7
     143: athrow
     144: return
    Exception table:
       from    to  target type
           2   112   127   any
         127   129   127   any

  public void stopContainer(org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.api.records.NodeId) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #80,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer
      13: astore_3
      14: aload_3
      15: ifnull        82
      18: aload_3
      19: dup
      20: astore        4
      22: monitorenter
      23: aload_3
      24: invokestatic  #81                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$100:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;)Lorg/apache/hadoop/yarn/api/records/ContainerState;
      27: getstatic     #70                 // Field org/apache/hadoop/yarn/api/records/ContainerState.RUNNING:Lorg/apache/hadoop/yarn/api/records/ContainerState;
      30: if_acmpeq     37
      33: aload         4
      35: monitorexit
      36: return
      37: aload_0
      38: aload_1
      39: aload_2
      40: invokespecial #82                 // Method stopContainerInternal:(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/NodeId;)V
      43: aload_3
      44: getstatic     #73                 // Field org/apache/hadoop/yarn/api/records/ContainerState.COMPLETE:Lorg/apache/hadoop/yarn/api/records/ContainerState;
      47: invokestatic  #71                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$102:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;Lorg/apache/hadoop/yarn/api/records/ContainerState;)Lorg/apache/hadoop/yarn/api/records/ContainerState;
      50: pop
      51: aload_0
      52: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
      55: aload_3
      56: invokestatic  #43                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.access$000:(Lorg/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer;)Lorg/apache/hadoop/yarn/api/records/ContainerId;
      59: invokeinterface #74,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload         4
      67: monitorexit
      68: goto          79
      71: astore        5
      73: aload         4
      75: monitorexit
      76: aload         5
      78: athrow
      79: goto          88
      82: aload_0
      83: aload_1
      84: aload_2
      85: invokespecial #82                 // Method stopContainerInternal:(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/NodeId;)V
      88: return
    Exception table:
       from    to  target type
          23    36    71   any
          37    68    71   any
          71    76    71   any

  public org.apache.hadoop.yarn.api.records.ContainerStatus getContainerStatus(org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.api.records.NodeId) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: new           #57                 // class java/util/ArrayList
       5: dup
       6: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
       9: astore        4
      11: aload         4
      13: aload_1
      14: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      24: aload_2
      25: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #54                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.getProxy:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;
      32: astore_3
      33: aload_3
      34: invokevirtual #61                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData.getContainerManagementProtocol:()Lorg/apache/hadoop/yarn/api/ContainerManagementProtocol;
      37: aload         4
      39: invokestatic  #83                 // Method org/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesRequest.newInstance:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesRequest;
      42: invokeinterface #84,  2           // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.getContainerStatuses:(Lorg/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesResponse;
      47: astore        5
      49: aload         5
      51: invokevirtual #85                 // Method org/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesResponse.getFailedRequests:()Ljava/util/Map;
      54: ifnull        96
      57: aload         5
      59: invokevirtual #85                 // Method org/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesResponse.getFailedRequests:()Ljava/util/Map;
      62: aload_1
      63: invokeinterface #64,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      68: ifeq          96
      71: aload         5
      73: invokevirtual #85                 // Method org/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesResponse.getFailedRequests:()Ljava/util/Map;
      76: aload_1
      77: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #66                 // class org/apache/hadoop/yarn/api/records/SerializedException
      85: invokevirtual #67                 // Method org/apache/hadoop/yarn/api/records/SerializedException.deSerialize:()Ljava/lang/Throwable;
      88: astore        6
      90: aload_0
      91: aload         6
      93: invokespecial #68                 // Method parseAndThrowException:(Ljava/lang/Throwable;)V
      96: aload         5
      98: invokevirtual #86                 // Method org/apache/hadoop/yarn/api/protocolrecords/GetContainerStatusesResponse.getContainerStatuses:()Ljava/util/List;
     101: iconst_0
     102: invokeinterface #87,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     107: checkcast     #88                 // class org/apache/hadoop/yarn/api/records/ContainerStatus
     110: astore        6
     112: aload         6
     114: astore        7
     116: aload_3
     117: ifnull        128
     120: aload_0
     121: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     124: aload_3
     125: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     128: aload         7
     130: areturn
     131: astore        8
     133: aload_3
     134: ifnull        145
     137: aload_0
     138: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     141: aload_3
     142: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     145: aload         8
     147: athrow
    Exception table:
       from    to  target type
          20   116   131   any
         131   133   131   any

  public void reInitializeContainer(org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.api.records.ContainerLaunchContext, boolean) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
       7: aload_1
       8: invokeinterface #80,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #20                 // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer
      16: astore        5
      18: aload         5
      20: ifnull        117
      23: aload         5
      25: dup
      26: astore        6
      28: monitorenter
      29: aload_0
      30: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      33: aload         5
      35: invokevirtual #22                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      38: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      41: aload_1
      42: invokevirtual #54                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.getProxy:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;
      45: astore        4
      47: aload         4
      49: invokevirtual #61                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData.getContainerManagementProtocol:()Lorg/apache/hadoop/yarn/api/ContainerManagementProtocol;
      52: aload_1
      53: aload_2
      54: iload_3
      55: invokestatic  #89                 // Method org/apache/hadoop/yarn/api/protocolrecords/ReInitializeContainerRequest.newInstance:(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;Z)Lorg/apache/hadoop/yarn/api/protocolrecords/ReInitializeContainerRequest;
      58: invokeinterface #90,  2           // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.reInitializeContainer:(Lorg/apache/hadoop/yarn/api/protocolrecords/ReInitializeContainerRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/ReInitializeContainerResponse;
      63: pop
      64: aload         4
      66: ifnull        100
      69: aload_0
      70: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      73: aload         4
      75: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
      78: goto          100
      81: astore        7
      83: aload         4
      85: ifnull        97
      88: aload_0
      89: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      92: aload         4
      94: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
      97: aload         7
      99: athrow
     100: aload         6
     102: monitorexit
     103: goto          114
     106: astore        8
     108: aload         6
     110: monitorexit
     111: aload         8
     113: athrow
     114: goto          149
     117: new           #24                 // class org/apache/hadoop/yarn/exceptions/YarnException
     120: dup
     121: new           #26                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #91                 // String Unknown container [
     130: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_1
     134: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     137: ldc           #92                 // String ]
     139: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #93                 // Method org/apache/hadoop/yarn/exceptions/YarnException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: return
    Exception table:
       from    to  target type
          47    64    81   any
          81    83    81   any
          29   103   106   any
         106   111   106   any

  public void restartContainer(org.apache.hadoop.yarn.api.records.ContainerId) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #94                 // Field org/apache/hadoop/yarn/client/api/NMClient$UpgradeOp.RESTART:Lorg/apache/hadoop/yarn/client/api/NMClient$UpgradeOp;
       5: invokespecial #95                 // Method restartCommitOrRollbackContainer:(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/client/api/NMClient$UpgradeOp;)V
       8: return

  public void rollbackLastReInitialization(org.apache.hadoop.yarn.api.records.ContainerId) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #96                 // Field org/apache/hadoop/yarn/client/api/NMClient$UpgradeOp.ROLLBACK:Lorg/apache/hadoop/yarn/client/api/NMClient$UpgradeOp;
       5: invokespecial #95                 // Method restartCommitOrRollbackContainer:(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/client/api/NMClient$UpgradeOp;)V
       8: return

  public void commitLastReInitialization(org.apache.hadoop.yarn.api.records.ContainerId) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #97                 // Field org/apache/hadoop/yarn/client/api/NMClient$UpgradeOp.COMMIT:Lorg/apache/hadoop/yarn/client/api/NMClient$UpgradeOp;
       5: invokespecial #95                 // Method restartCommitOrRollbackContainer:(Lorg/apache/hadoop/yarn/api/records/ContainerId;Lorg/apache/hadoop/yarn/client/api/NMClient$UpgradeOp;)V
       8: return

  private void restartCommitOrRollbackContainer(org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.client.api.NMClient$UpgradeOp) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
       6: aload_1
       7: invokeinterface #80,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #20                 // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer
      15: astore        4
      17: aload         4
      19: ifnull        169
      22: aload         4
      24: dup
      25: astore        5
      27: monitorenter
      28: aload_0
      29: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      32: aload         4
      34: invokevirtual #22                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      37: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      40: aload_1
      41: invokevirtual #54                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.getProxy:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;
      44: astore_3
      45: aload_3
      46: invokevirtual #61                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData.getContainerManagementProtocol:()Lorg/apache/hadoop/yarn/api/ContainerManagementProtocol;
      49: astore        6
      51: getstatic     #98                 // Field org/apache/hadoop/yarn/client/api/impl/NMClientImpl$1.$SwitchMap$org$apache$hadoop$yarn$client$api$NMClient$UpgradeOp:[I
      54: aload_2
      55: invokevirtual #99                 // Method org/apache/hadoop/yarn/client/api/NMClient$UpgradeOp.ordinal:()I
      58: iaload
      59: tableswitch   { // 1 to 3
                     1: 84
                     2: 96
                     3: 108
               default: 120
          }
      84: aload         6
      86: aload_1
      87: invokeinterface #100,  2          // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.restartContainer:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/api/protocolrecords/RestartContainerResponse;
      92: pop
      93: goto          120
      96: aload         6
      98: aload_1
      99: invokeinterface #101,  2          // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.commitLastReInitialization:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/api/protocolrecords/CommitResponse;
     104: pop
     105: goto          120
     108: aload         6
     110: aload_1
     111: invokeinterface #102,  2          // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.rollbackLastReInitialization:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/api/protocolrecords/RollbackResponse;
     116: pop
     117: goto          120
     120: aload_3
     121: ifnull        152
     124: aload_0
     125: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     128: aload_3
     129: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     132: goto          152
     135: astore        7
     137: aload_3
     138: ifnull        149
     141: aload_0
     142: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     145: aload_3
     146: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     149: aload         7
     151: athrow
     152: aload         5
     154: monitorexit
     155: goto          166
     158: astore        8
     160: aload         5
     162: monitorexit
     163: aload         8
     165: athrow
     166: goto          201
     169: new           #24                 // class org/apache/hadoop/yarn/exceptions/YarnException
     172: dup
     173: new           #26                 // class java/lang/StringBuilder
     176: dup
     177: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     180: ldc           #91                 // String Unknown container [
     182: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_1
     186: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     189: ldc           #92                 // String ]
     191: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     197: invokespecial #93                 // Method org/apache/hadoop/yarn/exceptions/YarnException."<init>":(Ljava/lang/String;)V
     200: athrow
     201: return
    Exception table:
       from    to  target type
          51   120   135   any
         135   137   135   any
          28   155   158   any
         158   163   158   any

  private void stopContainerInternal(org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.api.records.NodeId) throws java.io.IOException, org.apache.hadoop.yarn.exceptions.YarnException;
    Code:
       0: aconst_null
       1: astore_3
       2: new           #57                 // class java/util/ArrayList
       5: dup
       6: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
       9: astore        4
      11: aload         4
      13: aload_1
      14: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
      24: aload_2
      25: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/NodeId.toString:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #54                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.getProxy:(Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;
      32: astore_3
      33: aload_3
      34: invokevirtual #61                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData.getContainerManagementProtocol:()Lorg/apache/hadoop/yarn/api/ContainerManagementProtocol;
      37: aload         4
      39: invokestatic  #103                // Method org/apache/hadoop/yarn/api/protocolrecords/StopContainersRequest.newInstance:(Ljava/util/List;)Lorg/apache/hadoop/yarn/api/protocolrecords/StopContainersRequest;
      42: invokeinterface #104,  2          // InterfaceMethod org/apache/hadoop/yarn/api/ContainerManagementProtocol.stopContainers:(Lorg/apache/hadoop/yarn/api/protocolrecords/StopContainersRequest;)Lorg/apache/hadoop/yarn/api/protocolrecords/StopContainersResponse;
      47: astore        5
      49: aload         5
      51: invokevirtual #105                // Method org/apache/hadoop/yarn/api/protocolrecords/StopContainersResponse.getFailedRequests:()Ljava/util/Map;
      54: ifnull        96
      57: aload         5
      59: invokevirtual #105                // Method org/apache/hadoop/yarn/api/protocolrecords/StopContainersResponse.getFailedRequests:()Ljava/util/Map;
      62: aload_1
      63: invokeinterface #64,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      68: ifeq          96
      71: aload         5
      73: invokevirtual #105                // Method org/apache/hadoop/yarn/api/protocolrecords/StopContainersResponse.getFailedRequests:()Ljava/util/Map;
      76: aload_1
      77: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #66                 // class org/apache/hadoop/yarn/api/records/SerializedException
      85: invokevirtual #67                 // Method org/apache/hadoop/yarn/api/records/SerializedException.deSerialize:()Ljava/lang/Throwable;
      88: astore        6
      90: aload_0
      91: aload         6
      93: invokespecial #68                 // Method parseAndThrowException:(Ljava/lang/Throwable;)V
      96: aload_3
      97: ifnull        128
     100: aload_0
     101: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     104: aload_3
     105: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     108: goto          128
     111: astore        7
     113: aload_3
     114: ifnull        125
     117: aload_0
     118: getfield      #13                 // Field cmProxy:Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy;
     121: aload_3
     122: invokevirtual #72                 // Method org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.mayBeCloseProxy:(Lorg/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData;)V
     125: aload         7
     127: athrow
     128: return
    Exception table:
       from    to  target type
          20    96   111   any
         111   113   111   any

  public java.util.concurrent.atomic.AtomicBoolean getCleanupRunningContainers();
    Code:
       0: aload_0
       1: getfield      #9                  // Field cleanupRunningContainers:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  private void parseAndThrowException(java.lang.Throwable) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #24                 // class org/apache/hadoop/yarn/exceptions/YarnException
       4: ifeq          12
       7: aload_1
       8: checkcast     #24                 // class org/apache/hadoop/yarn/exceptions/YarnException
      11: athrow
      12: aload_1
      13: instanceof    #106                // class org/apache/hadoop/security/token/SecretManager$InvalidToken
      16: ifeq          24
      19: aload_1
      20: checkcast     #106                // class org/apache/hadoop/security/token/SecretManager$InvalidToken
      23: athrow
      24: aload_1
      25: checkcast     #34                 // class java/io/IOException
      28: athrow

  public org.apache.hadoop.yarn.api.records.NodeId getNodeIdOfStartedContainer(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: getfield      #6                  // Field startedContainers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #80,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: invokevirtual #22                 // Method org/apache/hadoop/yarn/client/api/impl/NMClientImpl$StartedContainer.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      22: areturn
      23: aconst_null
      24: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/yarn/client/api/impl/NMClientImpl
       2: invokestatic  #107                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
