Compiled from "NodeAttributesCLI.java"
public abstract class org.apache.hadoop.yarn.client.cli.NodeAttributesCLI$CommandHandler extends org.apache.hadoop.conf.Configured {
  private org.apache.commons.cli.Options options;

  private java.util.LinkedList<java.lang.String> order;

  private java.lang.String header;

  protected org.apache.hadoop.yarn.client.cli.NodeAttributesCLI$CommandHandler(java.lang.String);
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/hadoop/yarn/conf/YarnConfiguration
       4: dup
       5: invokespecial #2                  // Method org/apache/hadoop/yarn/conf/YarnConfiguration."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field header:Ljava/lang/String;
      16: return

  protected org.apache.hadoop.yarn.client.cli.NodeAttributesCLI$CommandHandler(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/hadoop/conf/Configured."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: new           #6                  // class java/util/LinkedList
       9: dup
      10: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      13: putfield      #8                  // Field order:Ljava/util/LinkedList;
      16: aload_0
      17: aload_0
      18: invokevirtual #9                  // Method buildOptions:()Lorg/apache/commons/cli/Options;
      21: putfield      #10                 // Field options:Lorg/apache/commons/cli/Options;
      24: return

  public boolean canHandleCommand(org.apache.commons.cli.CommandLine);
    Code:
       0: new           #11                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #10                 // Field options:Lorg/apache/commons/cli/Options;
       8: invokevirtual #12                 // Method org/apache/commons/cli/Options.getOptions:()Ljava/util/Collection;
      11: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: astore_2
      15: aload_2
      16: invokevirtual #14                 // Method java/util/ArrayList.stream:()Ljava/util/stream/Stream;
      19: aload_1
      20: invokedynamic #15,  0             // InvokeDynamic #0:test:(Lorg/apache/commons/cli/CommandLine;)Ljava/util/function/Predicate;
      25: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      30: ireturn

  public abstract int handleCommand(org.apache.commons.cli.CommandLine) throws java.io.IOException, org.apache.hadoop.yarn.exceptions.YarnException;

  public abstract org.apache.commons.cli.Options buildOptions();

  public org.apache.commons.cli.Options getOptions();
    Code:
       0: aload_0
       1: getfield      #10                 // Field options:Lorg/apache/commons/cli/Options;
       4: areturn

  public boolean getHelp(java.lang.String, java.lang.StringBuilder, boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field options:Lorg/apache/commons/cli/Options;
       4: aload_1
       5: invokevirtual #17                 // Method org/apache/commons/cli/Options.getOption:(Ljava/lang/String;)Lorg/apache/commons/cli/Option;
       8: astore        4
      10: aload         4
      12: ifnull        89
      15: aload_2
      16: invokestatic  #18                 // Method org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.access$000:()Ljava/lang/String;
      19: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #20                 // String  -
      24: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload         4
      29: invokevirtual #21                 // Method org/apache/commons/cli/Option.getOpt:()Ljava/lang/String;
      32: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload         4
      38: invokevirtual #22                 // Method org/apache/commons/cli/Option.hasArg:()Z
      41: ifeq          64
      44: aload_2
      45: ldc           #23                 // String  <
      47: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload         4
      52: invokevirtual #24                 // Method org/apache/commons/cli/Option.getArgName:()Ljava/lang/String;
      55: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #25                 // String >
      60: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: pop
      64: iload_3
      65: ifeq          89
      68: aload_2
      69: invokestatic  #18                 // Method org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.access$000:()Ljava/lang/String;
      72: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #26                 // String \t
      77: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         4
      82: invokevirtual #27                 // Method org/apache/commons/cli/Option.getDescription:()Ljava/lang/String;
      85: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: aload         4
      91: ifnonnull     98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: ireturn

  public void getHelp(java.lang.StringBuilder, boolean);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.access$000:()Ljava/lang/String;
       4: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       7: invokestatic  #18                 // Method org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.access$000:()Ljava/lang/String;
      10: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #4                  // Field header:Ljava/lang/String;
      17: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: aload_0
      22: getfield      #8                  // Field order:Ljava/util/LinkedList;
      25: invokevirtual #28                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          61
      38: aload_3
      39: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #31                 // class java/lang/String
      47: astore        4
      49: aload_0
      50: aload         4
      52: aload_1
      53: iload_2
      54: invokevirtual #32                 // Method getHelp:(Ljava/lang/String;Ljava/lang/StringBuilder;Z)Z
      57: pop
      58: goto          29
      61: return

  protected void addOrder(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field order:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #33                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  private static boolean lambda$canHandleCommand$0(org.apache.commons.cli.CommandLine, org.apache.commons.cli.Option);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method org/apache/commons/cli/Option.getOpt:()Ljava/lang/String;
       5: invokevirtual #34                 // Method org/apache/commons/cli/CommandLine.hasOption:(Ljava/lang/String;)Z
       8: ireturn
}
