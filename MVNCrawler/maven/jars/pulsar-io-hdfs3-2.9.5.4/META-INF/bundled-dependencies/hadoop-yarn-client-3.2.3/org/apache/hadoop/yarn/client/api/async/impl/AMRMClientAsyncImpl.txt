Compiled from "AMRMClientAsyncImpl.java"
public class org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl<T extends org.apache.hadoop.yarn.client.api.AMRMClient$ContainerRequest> extends org.apache.hadoop.yarn.client.api.async.AMRMClientAsync<T> {
  private static final org.slf4j.Logger LOG;

  private final org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl<T>.HeartbeatThread heartbeatThread;

  private final org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl<T>.CallbackHandlerThread handlerThread;

  private final java.util.concurrent.BlockingQueue<java.lang.Object> responseQueue;

  private final java.lang.Object unregisterHeartbeatLock;

  private volatile boolean keepRunning;

  private volatile float progress;

  public org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl(int, org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$AbstractCallbackHandler);
    Code:
       0: aload_0
       1: new           #9                  // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl
       4: dup
       5: invokespecial #10                 // Method org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl."<init>":()V
       8: iload_1
       9: aload_2
      10: invokespecial #11                 // Method "<init>":(Lorg/apache/hadoop/yarn/client/api/AMRMClient;ILorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$AbstractCallbackHandler;)V
      13: return

  public org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl(org.apache.hadoop.yarn.client.api.AMRMClient<T>, int, org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$AbstractCallbackHandler);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #12                 // Method org/apache/hadoop/yarn/client/api/async/AMRMClientAsync."<init>":(Lorg/apache/hadoop/yarn/client/api/AMRMClient;ILorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$AbstractCallbackHandler;)V
       7: aload_0
       8: new           #13                 // class java/lang/Object
      11: dup
      12: invokespecial #14                 // Method java/lang/Object."<init>":()V
      15: putfield      #8                  // Field unregisterHeartbeatLock:Ljava/lang/Object;
      18: aload_0
      19: new           #15                 // class org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread
      22: dup
      23: aload_0
      24: invokespecial #16                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread."<init>":(Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl;)V
      27: putfield      #17                 // Field heartbeatThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread;
      30: aload_0
      31: new           #18                 // class org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread
      34: dup
      35: aload_0
      36: invokespecial #19                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread."<init>":(Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl;)V
      39: putfield      #20                 // Field handlerThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread;
      42: aload_0
      43: new           #21                 // class java/util/concurrent/LinkedBlockingQueue
      46: dup
      47: invokespecial #22                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      50: putfield      #4                  // Field responseQueue:Ljava/util/concurrent/BlockingQueue;
      53: aload_0
      54: iconst_1
      55: putfield      #7                  // Field keepRunning:Z
      58: return

  public org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl(int, org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler);
    Code:
       0: aload_0
       1: new           #9                  // class org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl
       4: dup
       5: invokespecial #10                 // Method org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl."<init>":()V
       8: iload_1
       9: aload_2
      10: invokespecial #23                 // Method "<init>":(Lorg/apache/hadoop/yarn/client/api/AMRMClient;ILorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;)V
      13: return

  public org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl(org.apache.hadoop.yarn.client.api.AMRMClient<T>, int, org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #24                 // Method org/apache/hadoop/yarn/client/api/async/AMRMClientAsync."<init>":(Lorg/apache/hadoop/yarn/client/api/AMRMClient;ILorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;)V
       7: aload_0
       8: new           #13                 // class java/lang/Object
      11: dup
      12: invokespecial #14                 // Method java/lang/Object."<init>":()V
      15: putfield      #8                  // Field unregisterHeartbeatLock:Ljava/lang/Object;
      18: aload_0
      19: new           #15                 // class org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread
      22: dup
      23: aload_0
      24: invokespecial #16                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread."<init>":(Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl;)V
      27: putfield      #17                 // Field heartbeatThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread;
      30: aload_0
      31: new           #18                 // class org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread
      34: dup
      35: aload_0
      36: invokespecial #19                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread."<init>":(Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl;)V
      39: putfield      #20                 // Field handlerThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread;
      42: aload_0
      43: new           #21                 // class java/util/concurrent/LinkedBlockingQueue
      46: dup
      47: invokespecial #22                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      50: putfield      #4                  // Field responseQueue:Ljava/util/concurrent/BlockingQueue;
      53: aload_0
      54: iconst_1
      55: putfield      #7                  // Field keepRunning:Z
      58: return

  protected void serviceInit(org.apache.hadoop.conf.Configuration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/apache/hadoop/yarn/client/api/async/AMRMClientAsync.serviceInit:(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       9: aload_1
      10: invokevirtual #26                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.init:(Lorg/apache/hadoop/conf/Configuration;)V
      13: return

  protected void serviceStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #20                 // Field handlerThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread;
       4: iconst_1
       5: invokevirtual #27                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread.setDaemon:(Z)V
       8: aload_0
       9: getfield      #20                 // Field handlerThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread;
      12: invokevirtual #28                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread.start:()V
      15: aload_0
      16: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
      19: invokevirtual #29                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.start:()V
      22: aload_0
      23: invokespecial #30                 // Method org/apache/hadoop/yarn/client/api/async/AMRMClientAsync.serviceStart:()V
      26: return

  protected void serviceStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #7                  // Field keepRunning:Z
       5: aload_0
       6: getfield      #17                 // Field heartbeatThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread;
       9: invokevirtual #31                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread.interrupt:()V
      12: aload_0
      13: getfield      #17                 // Field heartbeatThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread;
      16: invokevirtual #32                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread.join:()V
      19: goto          34
      22: astore_1
      23: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #34                 // String Error joining with heartbeat thread
      28: aload_1
      29: invokeinterface #35,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: aload_0
      35: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
      38: invokevirtual #36                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.stop:()V
      41: aload_0
      42: getfield      #20                 // Field handlerThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread;
      45: invokevirtual #37                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$CallbackHandlerThread.interrupt:()V
      48: aload_0
      49: invokespecial #38                 // Method org/apache/hadoop/yarn/client/api/async/AMRMClientAsync.serviceStop:()V
      52: return
    Exception table:
       from    to  target type
          12    19    22   Class java/lang/InterruptedException

  public java.util.List<? extends java.util.Collection<T>> getMatchingRequests(org.apache.hadoop.yarn.api.records.Priority, java.lang.String, org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #39                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.getMatchingRequests:(Lorg/apache/hadoop/yarn/api/records/Priority;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/Resource;)Ljava/util/List;
      10: areturn

  public void addSchedulingRequests(java.util.Collection<org.apache.hadoop.yarn.api.records.SchedulingRequest>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: invokevirtual #40                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.addSchedulingRequests:(Ljava/util/Collection;)V
       8: return

  public org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse registerApplicationMaster(java.lang.String, int, java.lang.String) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #41                 // Method registerApplicationMaster:(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse;
       8: areturn

  public org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse registerApplicationMaster(java.lang.String, int, java.lang.String, java.util.Map<java.util.Set<java.lang.String>, org.apache.hadoop.yarn.api.resource.PlacementConstraint>) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #42                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.registerApplicationMaster:(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)Lorg/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse;
      12: astore        5
      14: aload_0
      15: getfield      #17                 // Field heartbeatThread:Lorg/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread;
      18: invokevirtual #43                 // Method org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl$HeartbeatThread.start:()V
      21: aload         5
      23: areturn

  public void unregisterApplicationMaster(org.apache.hadoop.yarn.api.records.FinalApplicationStatus, java.lang.String, java.lang.String) throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field unregisterHeartbeatLock:Ljava/lang/Object;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: iconst_0
      10: putfield      #7                  // Field keepRunning:Z
      13: aload_0
      14: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokevirtual #44                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.unregisterApplicationMaster:(Lorg/apache/hadoop/yarn/api/records/FinalApplicationStatus;Ljava/lang/String;Ljava/lang/String;)V
      23: aload         4
      25: monitorexit
      26: goto          37
      29: astore        5
      31: aload         4
      33: monitorexit
      34: aload         5
      36: athrow
      37: return
    Exception table:
       from    to  target type
           8    26    29   any
          29    34    29   any

  public void addContainerRequest(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: invokevirtual #45                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.addContainerRequest:(Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;)V
       8: return

  public void removeContainerRequest(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: invokevirtual #46                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.removeContainerRequest:(Lorg/apache/hadoop/yarn/client/api/AMRMClient$ContainerRequest;)V
       8: return

  public void requestContainerUpdate(org.apache.hadoop.yarn.api.records.Container, org.apache.hadoop.yarn.api.records.UpdateContainerRequest);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: aload_2
       6: invokevirtual #47                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.requestContainerUpdate:(Lorg/apache/hadoop/yarn/api/records/Container;Lorg/apache/hadoop/yarn/api/records/UpdateContainerRequest;)V
       9: return

  public void releaseAssignedContainer(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: invokevirtual #48                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.releaseAssignedContainer:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)V
       8: return

  public org.apache.hadoop.yarn.api.records.Resource getAvailableResources();
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: invokevirtual #49                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.getAvailableResources:()Lorg/apache/hadoop/yarn/api/records/Resource;
       7: areturn

  public int getClusterNodeCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: invokevirtual #50                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.getClusterNodeCount:()I
       7: ireturn

  public void updateBlacklist(java.util.List<java.lang.String>, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: aload_2
       6: invokevirtual #51                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.updateBlacklist:(Ljava/util/List;Ljava/util/List;)V
       9: return

  public void updateTrackingUrl(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: aload_1
       5: invokevirtual #52                 // Method org/apache/hadoop/yarn/client/api/AMRMClient.updateTrackingUrl:(Ljava/lang/String;)V
       8: return

  static java.lang.Object access$000(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field unregisterHeartbeatLock:Ljava/lang/Object;
       4: areturn

  static boolean access$100(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field keepRunning:Z
       4: ireturn

  static float access$200(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field progress:F
       4: freturn

  static org.apache.hadoop.yarn.client.api.AMRMClient access$300(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$400(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.slf4j.Logger access$500();
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.concurrent.BlockingQueue access$600(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field responseQueue:Ljava/util/concurrent/BlockingQueue;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$700(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field heartbeatIntervalMs:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static float access$202(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl, float);
    Code:
       0: aload_0
       1: fload_1
       2: dup_x1
       3: putfield      #6                  // Field progress:F
       6: freturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$800(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$900(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.AMRMClient access$1000(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/hadoop/yarn/client/api/AMRMClient;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1100(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1200(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1300(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1400(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1500(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1600(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1700(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1800(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$1900(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$2000(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$2100(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$2200(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static org.apache.hadoop.yarn.client.api.async.AMRMClientAsync$CallbackHandler access$2300(org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/hadoop/yarn/client/api/async/AMRMClientAsync$CallbackHandler;
       4: areturn

  static {};
    Code:
       0: ldc           #53                 // class org/apache/hadoop/yarn/client/api/async/impl/AMRMClientAsyncImpl
       2: invokestatic  #54                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
