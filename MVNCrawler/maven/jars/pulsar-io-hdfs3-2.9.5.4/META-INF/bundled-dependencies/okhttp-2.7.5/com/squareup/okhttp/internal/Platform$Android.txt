Compiled from "Platform.java"
class com.squareup.okhttp.internal.Platform$Android extends com.squareup.okhttp.internal.Platform {
  private static final int MAX_LOG_LENGTH;

  private final java.lang.Class<?> sslParametersClass;

  private final com.squareup.okhttp.internal.OptionalMethod<java.net.Socket> setUseSessionTickets;

  private final com.squareup.okhttp.internal.OptionalMethod<java.net.Socket> setHostname;

  private final java.lang.reflect.Method trafficStatsTagSocket;

  private final java.lang.reflect.Method trafficStatsUntagSocket;

  private final com.squareup.okhttp.internal.OptionalMethod<java.net.Socket> getAlpnSelectedProtocol;

  private final com.squareup.okhttp.internal.OptionalMethod<java.net.Socket> setAlpnProtocols;

  public com.squareup.okhttp.internal.Platform$Android(java.lang.Class<?>, com.squareup.okhttp.internal.OptionalMethod<java.net.Socket>, com.squareup.okhttp.internal.OptionalMethod<java.net.Socket>, java.lang.reflect.Method, java.lang.reflect.Method, com.squareup.okhttp.internal.OptionalMethod<java.net.Socket>, com.squareup.okhttp.internal.OptionalMethod<java.net.Socket>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/squareup/okhttp/internal/Platform."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sslParametersClass:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field setUseSessionTickets:Lcom/squareup/okhttp/internal/OptionalMethod;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field setHostname:Lcom/squareup/okhttp/internal/OptionalMethod;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field trafficStatsTagSocket:Ljava/lang/reflect/Method;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field trafficStatsUntagSocket:Ljava/lang/reflect/Method;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field getAlpnSelectedProtocol:Lcom/squareup/okhttp/internal/OptionalMethod;
      37: aload_0
      38: aload         7
      40: putfield      #8                  // Field setAlpnProtocols:Lcom/squareup/okhttp/internal/OptionalMethod;
      43: return

  public void connectSocket(java.net.Socket, java.net.InetSocketAddress, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokevirtual #9                  // Method java/net/Socket.connect:(Ljava/net/SocketAddress;I)V
       6: goto          56
       9: astore        4
      11: aload         4
      13: invokestatic  #11                 // Method com/squareup/okhttp/internal/Util.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z
      16: ifeq          29
      19: new           #12                 // class java/io/IOException
      22: dup
      23: aload         4
      25: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
      29: aload         4
      31: athrow
      32: astore        4
      34: new           #12                 // class java/io/IOException
      37: dup
      38: ldc           #15                 // String Exception in connect
      40: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      43: astore        5
      45: aload         5
      47: aload         4
      49: invokevirtual #17                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      52: pop
      53: aload         5
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/AssertionError
           0     6    32   Class java/lang/SecurityException

  public javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field sslParametersClass:Ljava/lang/Class;
       5: ldc           #18                 // String sslParameters
       7: invokestatic  #19                 // Method readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     43
      15: ldc           #20                 // String com.google.android.gms.org.conscrypt.SSLParametersImpl
      17: iconst_0
      18: aload_1
      19: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #22                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      25: invokestatic  #23                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      28: astore_3
      29: aload_1
      30: aload_3
      31: ldc           #18                 // String sslParameters
      33: invokestatic  #19                 // Method readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      36: astore_2
      37: goto          43
      40: astore_3
      41: aconst_null
      42: areturn
      43: aload_2
      44: ldc           #25                 // class javax/net/ssl/X509TrustManager
      46: ldc           #26                 // String x509TrustManager
      48: invokestatic  #19                 // Method readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      51: checkcast     #25                 // class javax/net/ssl/X509TrustManager
      54: astore_3
      55: aload_3
      56: ifnull        61
      59: aload_3
      60: areturn
      61: aload_2
      62: ldc           #25                 // class javax/net/ssl/X509TrustManager
      64: ldc           #27                 // String trustManager
      66: invokestatic  #19                 // Method readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      69: checkcast     #25                 // class javax/net/ssl/X509TrustManager
      72: areturn
    Exception table:
       from    to  target type
          15    37    40   Class java/lang/ClassNotFoundException

  public com.squareup.okhttp.internal.tls.TrustRootIndex trustRootIndex(javax.net.ssl.X509TrustManager);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method com/squareup/okhttp/internal/tls/AndroidTrustRootIndex.get:(Ljavax/net/ssl/X509TrustManager;)Lcom/squareup/okhttp/internal/tls/TrustRootIndex;
       4: astore_2
       5: aload_2
       6: ifnull        11
       9: aload_2
      10: areturn
      11: aload_0
      12: aload_1
      13: invokespecial #29                 // Method com/squareup/okhttp/internal/Platform.trustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lcom/squareup/okhttp/internal/tls/TrustRootIndex;
      16: areturn

  public void configureTlsExtensions(javax.net.ssl.SSLSocket, java.lang.String, java.util.List<com.squareup.okhttp.Protocol>);
    Code:
       0: aload_2
       1: ifnull        41
       4: aload_0
       5: getfield      #3                  // Field setUseSessionTickets:Lcom/squareup/okhttp/internal/OptionalMethod;
       8: aload_1
       9: iconst_1
      10: anewarray     #30                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: iconst_1
      16: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      19: aastore
      20: invokevirtual #32                 // Method com/squareup/okhttp/internal/OptionalMethod.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: getfield      #4                  // Field setHostname:Lcom/squareup/okhttp/internal/OptionalMethod;
      28: aload_1
      29: iconst_1
      30: anewarray     #30                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_2
      36: aastore
      37: invokevirtual #32                 // Method com/squareup/okhttp/internal/OptionalMethod.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: getfield      #8                  // Field setAlpnProtocols:Lcom/squareup/okhttp/internal/OptionalMethod;
      45: ifnull        83
      48: aload_0
      49: getfield      #8                  // Field setAlpnProtocols:Lcom/squareup/okhttp/internal/OptionalMethod;
      52: aload_1
      53: invokevirtual #33                 // Method com/squareup/okhttp/internal/OptionalMethod.isSupported:(Ljava/lang/Object;)Z
      56: ifeq          83
      59: iconst_1
      60: anewarray     #30                 // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload_3
      66: invokestatic  #34                 // Method concatLengthPrefixed:(Ljava/util/List;)[B
      69: aastore
      70: astore        4
      72: aload_0
      73: getfield      #8                  // Field setAlpnProtocols:Lcom/squareup/okhttp/internal/OptionalMethod;
      76: aload_1
      77: aload         4
      79: invokevirtual #35                 // Method com/squareup/okhttp/internal/OptionalMethod.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: return

  public java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: getfield      #7                  // Field getAlpnSelectedProtocol:Lcom/squareup/okhttp/internal/OptionalMethod;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #7                  // Field getAlpnSelectedProtocol:Lcom/squareup/okhttp/internal/OptionalMethod;
      13: aload_1
      14: invokevirtual #33                 // Method com/squareup/okhttp/internal/OptionalMethod.isSupported:(Ljava/lang/Object;)Z
      17: ifne          22
      20: aconst_null
      21: areturn
      22: aload_0
      23: getfield      #7                  // Field getAlpnSelectedProtocol:Lcom/squareup/okhttp/internal/OptionalMethod;
      26: aload_1
      27: iconst_0
      28: anewarray     #30                 // class java/lang/Object
      31: invokevirtual #35                 // Method com/squareup/okhttp/internal/OptionalMethod.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #36                 // class "[B"
      37: checkcast     #36                 // class "[B"
      40: astore_2
      41: aload_2
      42: ifnull        59
      45: new           #37                 // class java/lang/String
      48: dup
      49: aload_2
      50: getstatic     #38                 // Field com/squareup/okhttp/internal/Util.UTF_8:Ljava/nio/charset/Charset;
      53: invokespecial #39                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      56: goto          60
      59: aconst_null
      60: areturn

  public void tagSocket(java.net.Socket) throws java.net.SocketException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field trafficStatsTagSocket:Ljava/lang/reflect/Method;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #5                  // Field trafficStatsTagSocket:Ljava/lang/reflect/Method;
      12: aconst_null
      13: iconst_1
      14: anewarray     #30                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: aastore
      21: invokevirtual #40                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: goto          51
      28: astore_2
      29: new           #42                 // class java/lang/RuntimeException
      32: dup
      33: aload_2
      34: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: astore_2
      39: new           #42                 // class java/lang/RuntimeException
      42: dup
      43: aload_2
      44: invokevirtual #45                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      47: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      50: athrow
      51: return
    Exception table:
       from    to  target type
           8    25    28   Class java/lang/IllegalAccessException
           8    25    38   Class java/lang/reflect/InvocationTargetException

  public void untagSocket(java.net.Socket) throws java.net.SocketException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field trafficStatsUntagSocket:Ljava/lang/reflect/Method;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #6                  // Field trafficStatsUntagSocket:Ljava/lang/reflect/Method;
      12: aconst_null
      13: iconst_1
      14: anewarray     #30                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: aastore
      21: invokevirtual #40                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: goto          51
      28: astore_2
      29: new           #42                 // class java/lang/RuntimeException
      32: dup
      33: aload_2
      34: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: astore_2
      39: new           #42                 // class java/lang/RuntimeException
      42: dup
      43: aload_2
      44: invokevirtual #45                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      47: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      50: athrow
      51: return
    Exception table:
       from    to  target type
           8    25    28   Class java/lang/IllegalAccessException
           8    25    38   Class java/lang/reflect/InvocationTargetException

  public void log(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #46                 // Method java/lang/String.length:()I
       6: istore_3
       7: iload_2
       8: iload_3
       9: if_icmpge     75
      12: aload_1
      13: bipush        10
      15: iload_2
      16: invokevirtual #47                 // Method java/lang/String.indexOf:(II)I
      19: istore        4
      21: iload         4
      23: iconst_m1
      24: if_icmpeq     32
      27: iload         4
      29: goto          33
      32: iload_3
      33: istore        4
      35: iload         4
      37: iload_2
      38: sipush        4000
      41: iadd
      42: invokestatic  #49                 // Method java/lang/Math.min:(II)I
      45: istore        5
      47: ldc           #50                 // String OkHttp
      49: aload_1
      50: iload_2
      51: iload         5
      53: invokevirtual #51                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      56: invokestatic  #52                 // Method android/util/Log.d:(Ljava/lang/String;Ljava/lang/String;)I
      59: pop
      60: iload         5
      62: istore_2
      63: iload_2
      64: iload         4
      66: if_icmplt     35
      69: iinc          2, 1
      72: goto          7
      75: return
}
