Compiled from "Util.java"
public final class com.squareup.okhttp.internal.Util {
  public static final byte[] EMPTY_BYTE_ARRAY;

  public static final java.lang.String[] EMPTY_STRING_ARRAY;

  public static final java.nio.charset.Charset UTF_8;

  private com.squareup.okhttp.internal.Util();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void checkOffsetAndCount(long, long, long);
    Code:
       0: lload_2
       1: lload         4
       3: lor
       4: lconst_0
       5: lcmp
       6: iflt          24
       9: lload_2
      10: lload_0
      11: lcmp
      12: ifgt          24
      15: lload_0
      16: lload_2
      17: lsub
      18: lload         4
      20: lcmp
      21: ifge          32
      24: new           #2                  // class java/lang/ArrayIndexOutOfBoundsException
      27: dup
      28: invokespecial #3                  // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      31: athrow
      32: return

  public static boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     17
       5: aload_0
       6: ifnull        21
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public static void closeQuietly(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        17
       4: aload_0
       5: invokeinterface #5,  1            // InterfaceMethod java/io/Closeable.close:()V
      10: goto          17
      13: astore_1
      14: aload_1
      15: athrow
      16: astore_1
      17: return
    Exception table:
       from    to  target type
           4    10    13   Class java/lang/RuntimeException
           4    10    16   Class java/lang/Exception

  public static void closeQuietly(java.net.Socket);
    Code:
       0: aload_0
       1: ifnull        28
       4: aload_0
       5: invokevirtual #8                  // Method java/net/Socket.close:()V
       8: goto          28
      11: astore_1
      12: aload_1
      13: invokestatic  #10                 // Method isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z
      16: ifne          21
      19: aload_1
      20: athrow
      21: goto          28
      24: astore_1
      25: aload_1
      26: athrow
      27: astore_1
      28: return
    Exception table:
       from    to  target type
           4     8    11   Class java/lang/AssertionError
           4     8    24   Class java/lang/RuntimeException
           4     8    27   Class java/lang/Exception

  public static void closeQuietly(java.net.ServerSocket);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: invokevirtual #11                 // Method java/net/ServerSocket.close:()V
       8: goto          15
      11: astore_1
      12: aload_1
      13: athrow
      14: astore_1
      15: return
    Exception table:
       from    to  target type
           4     8    11   Class java/lang/RuntimeException
           4     8    14   Class java/lang/Exception

  public static void closeAll(java.io.Closeable, java.io.Closeable) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokeinterface #5,  1            // InterfaceMethod java/io/Closeable.close:()V
       8: goto          14
      11: astore_3
      12: aload_3
      13: astore_2
      14: aload_1
      15: invokeinterface #5,  1            // InterfaceMethod java/io/Closeable.close:()V
      20: goto          30
      23: astore_3
      24: aload_2
      25: ifnonnull     30
      28: aload_3
      29: astore_2
      30: aload_2
      31: ifnonnull     35
      34: return
      35: aload_2
      36: instanceof    #13                 // class java/io/IOException
      39: ifeq          47
      42: aload_2
      43: checkcast     #13                 // class java/io/IOException
      46: athrow
      47: aload_2
      48: instanceof    #6                  // class java/lang/RuntimeException
      51: ifeq          59
      54: aload_2
      55: checkcast     #6                  // class java/lang/RuntimeException
      58: athrow
      59: aload_2
      60: instanceof    #14                 // class java/lang/Error
      63: ifeq          71
      66: aload_2
      67: checkcast     #14                 // class java/lang/Error
      70: athrow
      71: new           #9                  // class java/lang/AssertionError
      74: dup
      75: aload_2
      76: invokespecial #15                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      79: athrow
    Exception table:
       from    to  target type
           2     8    11   Class java/lang/Throwable
          14    20    23   Class java/lang/Throwable

  public static boolean discard(okio.Source, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #16                 // Method skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z
       6: ireturn
       7: astore_3
       8: iconst_0
       9: ireturn
    Exception table:
       from    to  target type
           0     6     7   Class java/io/IOException

  public static boolean skipAll(okio.Source, int, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #17                 // Method java/lang/System.nanoTime:()J
       3: lstore_3
       4: aload_0
       5: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
      10: invokevirtual #19                 // Method okio/Timeout.hasDeadline:()Z
      13: ifeq          30
      16: aload_0
      17: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
      22: invokevirtual #20                 // Method okio/Timeout.deadlineNanoTime:()J
      25: lload_3
      26: lsub
      27: goto          33
      30: ldc2_w        #22                 // long 9223372036854775807l
      33: lstore        5
      35: aload_0
      36: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
      41: lload_3
      42: lload         5
      44: aload_2
      45: iload_1
      46: i2l
      47: invokevirtual #24                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      50: invokestatic  #25                 // Method java/lang/Math.min:(JJ)J
      53: ladd
      54: invokevirtual #26                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
      57: pop
      58: new           #27                 // class okio/Buffer
      61: dup
      62: invokespecial #28                 // Method okio/Buffer."<init>":()V
      65: astore        7
      67: aload_0
      68: aload         7
      70: ldc2_w        #29                 // long 2048l
      73: invokeinterface #31,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      78: ldc2_w        #32                 // long -1l
      81: lcmp
      82: ifeq          93
      85: aload         7
      87: invokevirtual #34                 // Method okio/Buffer.clear:()V
      90: goto          67
      93: iconst_1
      94: istore        8
      96: lload         5
      98: ldc2_w        #22                 // long 9223372036854775807l
     101: lcmp
     102: ifne          118
     105: aload_0
     106: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     111: invokevirtual #35                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
     114: pop
     115: goto          132
     118: aload_0
     119: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     124: lload_3
     125: lload         5
     127: ladd
     128: invokevirtual #26                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
     131: pop
     132: iload         8
     134: ireturn
     135: astore        7
     137: iconst_0
     138: istore        8
     140: lload         5
     142: ldc2_w        #22                 // long 9223372036854775807l
     145: lcmp
     146: ifne          162
     149: aload_0
     150: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     155: invokevirtual #35                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
     158: pop
     159: goto          176
     162: aload_0
     163: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     168: lload_3
     169: lload         5
     171: ladd
     172: invokevirtual #26                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
     175: pop
     176: iload         8
     178: ireturn
     179: astore        9
     181: lload         5
     183: ldc2_w        #22                 // long 9223372036854775807l
     186: lcmp
     187: ifne          203
     190: aload_0
     191: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     196: invokevirtual #35                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
     199: pop
     200: goto          217
     203: aload_0
     204: invokeinterface #18,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     209: lload_3
     210: lload         5
     212: ladd
     213: invokevirtual #26                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
     216: pop
     217: aload         9
     219: athrow
    Exception table:
       from    to  target type
          58    96   135   Class java/io/InterruptedIOException
          58    96   179   any
         135   140   179   any
         179   181   179   any

  public static java.lang.String md5Hex(java.lang.String);
    Code:
       0: ldc           #37                 // String MD5
       2: invokestatic  #38                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_1
       6: aload_1
       7: aload_0
       8: ldc           #39                 // String UTF-8
      10: invokevirtual #40                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      13: invokevirtual #41                 // Method java/security/MessageDigest.digest:([B)[B
      16: astore_2
      17: aload_2
      18: invokestatic  #42                 // Method okio/ByteString.of:([B)Lokio/ByteString;
      21: invokevirtual #43                 // Method okio/ByteString.hex:()Ljava/lang/String;
      24: areturn
      25: astore_1
      26: new           #9                  // class java/lang/AssertionError
      29: dup
      30: aload_1
      31: invokespecial #15                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      34: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/security/NoSuchAlgorithmException
           0    24    25   Class java/io/UnsupportedEncodingException

  public static java.lang.String shaBase64(java.lang.String);
    Code:
       0: ldc           #46                 // String SHA-1
       2: invokestatic  #38                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_1
       6: aload_1
       7: aload_0
       8: ldc           #39                 // String UTF-8
      10: invokevirtual #40                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      13: invokevirtual #41                 // Method java/security/MessageDigest.digest:([B)[B
      16: astore_2
      17: aload_2
      18: invokestatic  #42                 // Method okio/ByteString.of:([B)Lokio/ByteString;
      21: invokevirtual #47                 // Method okio/ByteString.base64:()Ljava/lang/String;
      24: areturn
      25: astore_1
      26: new           #9                  // class java/lang/AssertionError
      29: dup
      30: aload_1
      31: invokespecial #15                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      34: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/security/NoSuchAlgorithmException
           0    24    25   Class java/io/UnsupportedEncodingException

  public static okio.ByteString sha1(okio.ByteString);
    Code:
       0: ldc           #46                 // String SHA-1
       2: invokestatic  #38                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_1
       6: aload_1
       7: aload_0
       8: invokevirtual #48                 // Method okio/ByteString.toByteArray:()[B
      11: invokevirtual #41                 // Method java/security/MessageDigest.digest:([B)[B
      14: astore_2
      15: aload_2
      16: invokestatic  #42                 // Method okio/ByteString.of:([B)Lokio/ByteString;
      19: areturn
      20: astore_1
      21: new           #9                  // class java/lang/AssertionError
      24: dup
      25: aload_1
      26: invokespecial #15                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      29: athrow
    Exception table:
       from    to  target type
           0    19    20   Class java/security/NoSuchAlgorithmException

  public static <T> java.util.List<T> immutableList(java.util.List<T>);
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #50                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: invokestatic  #51                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      11: areturn

  public static <T> java.util.List<T> immutableList(T...);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
       4: checkcast     #53                 // class "[Ljava/lang/Object;"
       7: invokestatic  #54                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: invokestatic  #51                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      13: areturn

  public static <K, V> java.util.Map<K, V> immutableMap(java.util.Map<K, V>);
    Code:
       0: new           #55                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
       8: invokestatic  #57                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      11: areturn

  public static java.util.concurrent.ThreadFactory threadFactory(java.lang.String, boolean);
    Code:
       0: new           #58                 // class com/squareup/okhttp/internal/Util$1
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #59                 // Method com/squareup/okhttp/internal/Util$1."<init>":(Ljava/lang/String;Z)V
       9: areturn

  public static <T> T[] intersect(java.lang.Class<T>, T[], T[]);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #60                 // Method intersect:([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: aload_0
       8: aload_3
       9: invokeinterface #61,  1           // InterfaceMethod java/util/List.size:()I
      14: invokestatic  #62                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      17: checkcast     #53                 // class "[Ljava/lang/Object;"
      20: checkcast     #53                 // class "[Ljava/lang/Object;"
      23: invokeinterface #63,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      28: areturn

  private static <T> java.util.List<T> intersect(T[], T[]);
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: invokespecial #64                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     89
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: aload_1
      31: astore        7
      33: aload         7
      35: arraylength
      36: istore        8
      38: iconst_0
      39: istore        9
      41: iload         9
      43: iload         8
      45: if_icmpge     83
      48: aload         7
      50: iload         9
      52: aaload
      53: astore        10
      55: aload         6
      57: aload         10
      59: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      62: ifeq          77
      65: aload_2
      66: aload         10
      68: invokeinterface #65,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          83
      77: iinc          9, 1
      80: goto          41
      83: iinc          5, 1
      86: goto          17
      89: aload_2
      90: areturn

  public static java.lang.String hostHeader(com.squareup.okhttp.HttpUrl);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method com/squareup/okhttp/HttpUrl.port:()I
       4: aload_0
       5: invokevirtual #67                 // Method com/squareup/okhttp/HttpUrl.scheme:()Ljava/lang/String;
       8: invokestatic  #68                 // Method com/squareup/okhttp/HttpUrl.defaultPort:(Ljava/lang/String;)I
      11: if_icmpeq     46
      14: new           #69                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #71                 // Method com/squareup/okhttp/HttpUrl.host:()Ljava/lang/String;
      25: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #73                 // String :
      30: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #66                 // Method com/squareup/okhttp/HttpUrl.port:()I
      37: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: goto          50
      46: aload_0
      47: invokevirtual #71                 // Method com/squareup/okhttp/HttpUrl.host:()Ljava/lang/String;
      50: areturn

  public static java.lang.String toHumanReadableAscii(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #76                 // Method java/lang/String.length:()I
       6: istore_2
       7: iload_1
       8: iload_2
       9: if_icmpge     119
      12: aload_0
      13: iload_1
      14: invokevirtual #77                 // Method java/lang/String.codePointAt:(I)I
      17: istore_3
      18: iload_3
      19: bipush        31
      21: if_icmple     33
      24: iload_3
      25: bipush        127
      27: if_icmpge     33
      30: goto          109
      33: new           #27                 // class okio/Buffer
      36: dup
      37: invokespecial #28                 // Method okio/Buffer."<init>":()V
      40: astore        4
      42: aload         4
      44: aload_0
      45: iconst_0
      46: iload_1
      47: invokevirtual #78                 // Method okio/Buffer.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;
      50: pop
      51: iload_1
      52: istore        5
      54: iload         5
      56: iload_2
      57: if_icmpge     103
      60: aload_0
      61: iload         5
      63: invokevirtual #77                 // Method java/lang/String.codePointAt:(I)I
      66: istore_3
      67: aload         4
      69: iload_3
      70: bipush        31
      72: if_icmple     85
      75: iload_3
      76: bipush        127
      78: if_icmpge     85
      81: iload_3
      82: goto          87
      85: bipush        63
      87: invokevirtual #79                 // Method okio/Buffer.writeUtf8CodePoint:(I)Lokio/Buffer;
      90: pop
      91: iload         5
      93: iload_3
      94: invokestatic  #80                 // Method java/lang/Character.charCount:(I)I
      97: iadd
      98: istore        5
     100: goto          54
     103: aload         4
     105: invokevirtual #81                 // Method okio/Buffer.readUtf8:()Ljava/lang/String;
     108: areturn
     109: iload_1
     110: iload_3
     111: invokestatic  #80                 // Method java/lang/Character.charCount:(I)I
     114: iadd
     115: istore_1
     116: goto          7
     119: aload_0
     120: areturn

  public static boolean isAndroidGetsocknameError(java.lang.AssertionError);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method java/lang/AssertionError.getCause:()Ljava/lang/Throwable;
       4: ifnull        30
       7: aload_0
       8: invokevirtual #83                 // Method java/lang/AssertionError.getMessage:()Ljava/lang/String;
      11: ifnull        30
      14: aload_0
      15: invokevirtual #83                 // Method java/lang/AssertionError.getMessage:()Ljava/lang/String;
      18: ldc           #84                 // String getsockname failed
      20: invokevirtual #85                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static boolean contains(java.lang.String[], java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public static java.lang.String[] concat(java.lang.String[], java.lang.String);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: iadd
       4: anewarray     #87                 // class java/lang/String
       7: astore_2
       8: aload_0
       9: iconst_0
      10: aload_2
      11: iconst_0
      12: aload_0
      13: arraylength
      14: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_2
      18: aload_2
      19: arraylength
      20: iconst_1
      21: isub
      22: aload_1
      23: aastore
      24: aload_2
      25: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #89                 // Field EMPTY_BYTE_ARRAY:[B
       6: iconst_0
       7: anewarray     #87                 // class java/lang/String
      10: putstatic     #90                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      13: ldc           #39                 // String UTF-8
      15: invokestatic  #91                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      18: putstatic     #92                 // Field UTF_8:Ljava/nio/charset/Charset;
      21: return
}
