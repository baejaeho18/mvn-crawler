Compiled from "CopyOnWriteHashMap.java"
public class com.sun.jersey.client.impl.CopyOnWriteHashMap<K, V> implements java.util.Map<K, V> {
  private volatile java.util.Map<K, V> core;

  private volatile java.util.Map<K, V> view;

  private final java.util.concurrent.atomic.AtomicBoolean requiresCopyOnWrite;

  public com.sun.jersey.client.impl.CopyOnWriteHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field core:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #7                  // Field requiresCopyOnWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: return

  private com.sun.jersey.client.impl.CopyOnWriteHashMap(com.sun.jersey.client.impl.CopyOnWriteHashMap<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #4                  // Field core:Ljava/util/Map;
       9: putfield      #4                  // Field core:Ljava/util/Map;
      12: aload_0
      13: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      16: dup
      17: iconst_1
      18: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      21: putfield      #7                  // Field requiresCopyOnWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: return

  public com.sun.jersey.client.impl.CopyOnWriteHashMap<K, V> clone();
    Code:
       0: new           #8                  // class com/sun/jersey/client/impl/CopyOnWriteHashMap
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method "<init>":(Lcom/sun/jersey/client/impl/CopyOnWriteHashMap;)V
       8: astore_1
       9: aload_0
      10: getfield      #7                  // Field requiresCopyOnWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
      13: iconst_1
      14: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      17: aload_1
      18: areturn
      19: astore_2
      20: aload_0
      21: getfield      #7                  // Field requiresCopyOnWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: iconst_1
      25: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           0     9    19   any
          19    20    19   any

  private void copy();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requiresCopyOnWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          32
      12: aload_0
      13: new           #2                  // class java/util/HashMap
      16: dup
      17: aload_0
      18: getfield      #4                  // Field core:Ljava/util/Map;
      21: invokespecial #12                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      24: putfield      #4                  // Field core:Ljava/util/Map;
      27: aload_0
      28: aconst_null
      29: putfield      #13                 // Field view:Ljava/util/Map;
      32: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field core:Ljava/util/Map;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field core:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field core:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field core:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field core:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method copy:()V
       4: aload_0
       5: getfield      #4                  // Field core:Ljava/util/Map;
       8: aload_1
       9: aload_2
      10: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method copy:()V
       4: aload_0
       5: getfield      #4                  // Field core:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #21,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method copy:()V
       4: aload_0
       5: getfield      #4                  // Field core:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #22,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      14: return

  public void clear();
    Code:
       0: aload_0
       1: new           #2                  // class java/util/HashMap
       4: dup
       5: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       8: putfield      #4                  // Field core:Ljava/util/Map;
      11: aload_0
      12: aconst_null
      13: putfield      #13                 // Field view:Ljava/util/Map;
      16: aload_0
      17: invokespecial #19                 // Method copy:()V
      20: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getView:()Ljava/util/Map;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getView:()Ljava/util/Map;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getView:()Ljava/util/Map;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field core:Ljava/util/Map;
       4: invokevirtual #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  private java.util.Map<K, V> getView();
    Code:
       0: aload_0
       1: getfield      #13                 // Field view:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: getfield      #4                  // Field core:Ljava/util/Map;
      12: invokestatic  #28                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      15: putfield      #13                 // Field view:Ljava/util/Map;
      18: aload_0
      19: getfield      #13                 // Field view:Ljava/util/Map;
      22: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method clone:()Lcom/sun/jersey/client/impl/CopyOnWriteHashMap;
       4: areturn
}
