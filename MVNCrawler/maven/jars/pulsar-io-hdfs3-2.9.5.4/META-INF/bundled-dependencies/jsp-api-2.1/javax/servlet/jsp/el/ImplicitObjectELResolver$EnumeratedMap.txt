Compiled from "ImplicitObjectELResolver.java"
abstract class javax.servlet.jsp.el.ImplicitObjectELResolver$EnumeratedMap implements java.util.Map {
  java.util.Map mMap;

  private javax.servlet.jsp.el.ImplicitObjectELResolver$EnumeratedMap();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public void clear();
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getAsMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getAsMap:()Ljava/util/Map;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method enumerateKeys:()Ljava/util/Enumeration;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getAsMap:()Ljava/util/Map;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void putAll(java.util.Map);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getAsMap:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getAsMap:()Ljava/util/Map;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public abstract java.util.Enumeration enumerateKeys();

  public abstract boolean isMutable();

  public abstract java.lang.Object getValue(java.lang.Object);

  public java.util.Map getAsMap();
    Code:
       0: aload_0
       1: getfield      #14                 // Field mMap:Ljava/util/Map;
       4: ifnull        12
       7: aload_0
       8: getfield      #14                 // Field mMap:Ljava/util/Map;
      11: areturn
      12: aload_0
      13: invokevirtual #15                 // Method convertToMap:()Ljava/util/Map;
      16: astore_1
      17: aload_0
      18: invokevirtual #16                 // Method isMutable:()Z
      21: ifne          29
      24: aload_0
      25: aload_1
      26: putfield      #14                 // Field mMap:Ljava/util/Map;
      29: aload_1
      30: areturn

  java.util.Map convertToMap();
    Code:
       0: new           #17                 // class java/util/HashMap
       3: dup
       4: invokespecial #18                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #9                  // Method enumerateKeys:()Ljava/util/Enumeration;
      12: astore_2
      13: aload_2
      14: invokeinterface #10,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          49
      22: aload_2
      23: invokeinterface #19,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokevirtual #5                  // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      34: astore        4
      36: aload_1
      37: aload_3
      38: aload         4
      40: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: goto          13
      49: aload_1
      50: areturn

  javax.servlet.jsp.el.ImplicitObjectELResolver$EnumeratedMap(javax.servlet.jsp.el.ImplicitObjectELResolver$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
