Compiled from "BeanELResolver.java"
public final class javax.el.BeanELResolver$BeanProperty {
  private java.lang.reflect.Method readMethod;

  private java.lang.reflect.Method writeMethod;

  private java.lang.Class baseClass;

  private java.beans.PropertyDescriptor descriptor;

  public javax.el.BeanELResolver$BeanProperty(java.lang.Class<?>, java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field baseClass:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field descriptor:Ljava/beans/PropertyDescriptor;
      14: return

  public java.lang.Class getPropertyType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field descriptor:Ljava/beans/PropertyDescriptor;
       4: invokevirtual #4                  // Method java/beans/PropertyDescriptor.getPropertyType:()Ljava/lang/Class;
       7: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getWriteMethod:()Ljava/lang/reflect/Method;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.reflect.Method getReadMethod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readMethod:Ljava/lang/reflect/Method;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field baseClass:Ljava/lang/Class;
      12: aload_0
      13: getfield      #3                  // Field descriptor:Ljava/beans/PropertyDescriptor;
      16: invokevirtual #7                  // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
      19: invokestatic  #8                  // Method javax/el/BeanELResolver.access$000:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      22: putfield      #6                  // Field readMethod:Ljava/lang/reflect/Method;
      25: aload_0
      26: getfield      #6                  // Field readMethod:Ljava/lang/reflect/Method;
      29: areturn

  public java.lang.reflect.Method getWriteMethod();
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeMethod:Ljava/lang/reflect/Method;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field baseClass:Ljava/lang/Class;
      12: aload_0
      13: getfield      #3                  // Field descriptor:Ljava/beans/PropertyDescriptor;
      16: invokevirtual #10                 // Method java/beans/PropertyDescriptor.getWriteMethod:()Ljava/lang/reflect/Method;
      19: invokestatic  #8                  // Method javax/el/BeanELResolver.access$000:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      22: putfield      #9                  // Field writeMethod:Ljava/lang/reflect/Method;
      25: aload_0
      26: getfield      #9                  // Field writeMethod:Ljava/lang/reflect/Method;
      29: areturn
}
