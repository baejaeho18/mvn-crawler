Compiled from "AMInfoPBImpl.java"
public class org.apache.hadoop.mapreduce.v2.api.records.impl.pb.AMInfoPBImpl extends org.apache.hadoop.yarn.api.records.impl.pb.ProtoBase<org.apache.hadoop.mapreduce.v2.proto.MRProtos$AMInfoProto> implements org.apache.hadoop.mapreduce.v2.api.records.AMInfo {
  org.apache.hadoop.mapreduce.v2.proto.MRProtos$AMInfoProto proto;

  org.apache.hadoop.mapreduce.v2.proto.MRProtos$AMInfoProto$Builder builder;

  boolean viaProto;

  private org.apache.hadoop.yarn.api.records.ApplicationAttemptId appAttemptId;

  private org.apache.hadoop.yarn.api.records.ContainerId containerId;

  public org.apache.hadoop.mapreduce.v2.api.records.impl.pb.AMInfoPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoBase."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto.getDefaultInstance:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: invokestatic  #6                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto.newBuilder:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      25: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      28: return

  public org.apache.hadoop.mapreduce.v2.api.records.impl.pb.AMInfoPBImpl(org.apache.hadoop.mapreduce.v2.proto.MRProtos$AMInfoProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoBase."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto.getDefaultInstance:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aload_1
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  public synchronized org.apache.hadoop.mapreduce.v2.proto.MRProtos$AMInfoProto getProto();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      23: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.build:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      29: aload_0
      30: iconst_1
      31: putfield      #5                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      38: areturn

  private synchronized void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
       4: ifnull        46
       7: aload_0
       8: getfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      11: checkcast     #10                 // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationAttemptIdPBImpl
      14: invokevirtual #11                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationAttemptIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      21: invokevirtual #12                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.getApplicationAttemptId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;
      24: invokevirtual #13                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto.equals:(Ljava/lang/Object;)Z
      27: ifne          46
      30: aload_0
      31: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      34: aload_0
      35: aload_0
      36: getfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      39: invokespecial #14                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;
      42: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.setApplicationAttemptId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      45: pop
      46: aload_0
      47: invokevirtual #16                 // Method getContainerId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      50: ifnull        92
      53: aload_0
      54: getfield      #17                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      57: checkcast     #18                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
      60: invokevirtual #19                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      63: aload_0
      64: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      67: invokevirtual #20                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.getContainerId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      70: invokevirtual #21                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto.equals:(Ljava/lang/Object;)Z
      73: ifne          92
      76: aload_0
      77: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      80: aload_0
      81: aload_0
      82: getfield      #17                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      85: invokespecial #22                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      88: invokevirtual #23                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.setContainerId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      91: pop
      92: return

  private synchronized void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #24                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #25                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      20: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.build:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  private synchronized void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      19: invokestatic  #26                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto.newBuilder:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  public synchronized org.apache.hadoop.yarn.api.records.ApplicationAttemptId getAppAttemptId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      23: ifnull        31
      26: aload_0
      27: getfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      30: areturn
      31: aload_1
      32: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.hasApplicationAttemptId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #28,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.getApplicationAttemptId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;
      50: invokespecial #29                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ApplicationAttemptIdPBImpl;
      53: putfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      56: aload_0
      57: getfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      60: areturn

  public synchronized void setAppAttemptId(org.apache.hadoop.yarn.api.records.ApplicationAttemptId);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      12: invokevirtual #30                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.clearApplicationAttemptId:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field appAttemptId:Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      21: return

  public synchronized long getStartTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.getStartTime:()J
      25: lreturn

  public synchronized void setStartTime(long);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
       8: lload_1
       9: invokevirtual #32                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.setStartTime:(J)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      12: pop
      13: return

  public synchronized org.apache.hadoop.yarn.api.records.ContainerId getContainerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #17                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      23: ifnull        31
      26: aload_0
      27: getfield      #17                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      30: areturn
      31: aload_1
      32: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.hasContainerId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.getContainerId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      50: invokespecial #35                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl;
      53: putfield      #17                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      56: aload_0
      57: getfield      #17                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      60: areturn

  public synchronized void setContainerId(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      12: invokevirtual #36                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.clearContainerId:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #17                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      21: return

  public synchronized java.lang.String getNodeManagerHost();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #37,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.hasNodeManagerHost:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #38,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.getNodeManagerHost:()Ljava/lang/String;
      36: areturn

  public synchronized void setNodeManagerHost(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      12: invokevirtual #39                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.clearNodeManagerHost:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      21: aload_1
      22: invokevirtual #40                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.setNodeManagerHost:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      25: pop
      26: return

  public synchronized int getNodeManagerPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #41,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.getNodeManagerPort:()I
      25: ireturn

  public synchronized void setNodeManagerPort(int);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
       8: iload_1
       9: invokevirtual #42                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.setNodeManagerPort:(I)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      12: pop
      13: return

  public synchronized int getNodeManagerHttpPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #43,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProtoOrBuilder.getNodeManagerHttpPort:()I
      25: ireturn

  public synchronized void setNodeManagerHttpPort(int);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
       8: iload_1
       9: invokevirtual #44                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder.setNodeManagerHttpPort:(I)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto$Builder;
      12: pop
      13: return

  private org.apache.hadoop.yarn.api.records.impl.pb.ApplicationAttemptIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto);
    Code:
       0: new           #10                 // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationAttemptIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #45                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationAttemptIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto);
    Code:
       0: new           #18                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #46                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ApplicationAttemptId);
    Code:
       0: aload_1
       1: checkcast     #10                 // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationAttemptIdPBImpl
       4: invokevirtual #11                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationAttemptIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAttemptIdProto;
       7: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_1
       1: checkcast     #18                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       4: invokevirtual #19                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
       7: areturn

  public com.google.protobuf.Message getProto();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getProto:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$AMInfoProto;
       4: areturn
}
