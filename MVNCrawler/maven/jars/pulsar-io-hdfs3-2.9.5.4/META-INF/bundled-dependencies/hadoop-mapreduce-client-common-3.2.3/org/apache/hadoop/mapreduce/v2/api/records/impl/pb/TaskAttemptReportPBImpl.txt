Compiled from "TaskAttemptReportPBImpl.java"
public class org.apache.hadoop.mapreduce.v2.api.records.impl.pb.TaskAttemptReportPBImpl extends org.apache.hadoop.yarn.api.records.impl.pb.ProtoBase<org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptReportProto> implements org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptReport {
  org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptReportProto proto;

  org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptReportProto$Builder builder;

  boolean viaProto;

  private org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId taskAttemptId;

  private org.apache.hadoop.mapreduce.v2.api.records.Counters counters;

  private org.apache.hadoop.mapreduce.Counters rawCounters;

  private org.apache.hadoop.yarn.api.records.ContainerId containerId;

  public org.apache.hadoop.mapreduce.v2.api.records.impl.pb.TaskAttemptReportPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoBase."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto.getDefaultInstance:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
      36: aload_0
      37: aconst_null
      38: putfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      41: aload_0
      42: invokestatic  #10                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto.newBuilder:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      45: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      48: return

  public org.apache.hadoop.mapreduce.v2.api.records.impl.pb.TaskAttemptReportPBImpl(org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptReportProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoBase."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto.getDefaultInstance:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
      36: aload_0
      37: aconst_null
      38: putfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      41: aload_0
      42: aload_1
      43: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      46: aload_0
      47: iconst_1
      48: putfield      #5                  // Field viaProto:Z
      51: return

  public org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptReportProto getProto();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      23: invokevirtual #12                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.build:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      29: aload_0
      30: iconst_1
      31: putfield      #5                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      38: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      11: aload_0
      12: aload_0
      13: getfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      16: invokespecial #13                 // Method convertToProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptIdProto;
      19: invokevirtual #14                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setTaskAttemptId:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptIdProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      22: pop
      23: aload_0
      24: invokespecial #15                 // Method convertRawCountersToCounters:()V
      27: aload_0
      28: getfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      31: ifnull        50
      34: aload_0
      35: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      38: aload_0
      39: aload_0
      40: getfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      43: invokespecial #16                 // Method convertToProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      46: invokevirtual #17                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setCounters:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      49: pop
      50: aload_0
      51: getfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      54: ifnull        73
      57: aload_0
      58: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      61: aload_0
      62: aload_0
      63: getfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      66: invokespecial #18                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      69: invokevirtual #19                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setContainerId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      72: pop
      73: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #20                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #21                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      20: invokevirtual #12                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.build:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      19: invokestatic  #22                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto.newBuilder:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  public org.apache.hadoop.mapreduce.v2.api.records.Counters getCounters();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_0
      20: invokespecial #15                 // Method convertRawCountersToCounters:()V
      23: aload_0
      24: getfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      27: ifnull        35
      30: aload_0
      31: getfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      34: areturn
      35: aload_1
      36: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasCounters:()Z
      41: ifne          46
      44: aconst_null
      45: areturn
      46: aload_0
      47: aload_0
      48: aload_1
      49: invokeinterface #24,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getCounters:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      54: invokespecial #25                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;)Lorg/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl;
      57: putfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      60: aload_0
      61: getfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      64: areturn

  public void setCounters(org.apache.hadoop.mapreduce.v2.api.records.Counters);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #26                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearCounters:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
      26: return

  public org.apache.hadoop.mapreduce.Counters getRawCounters();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
       4: areturn

  public void setRawCounters(org.apache.hadoop.mapreduce.Counters);
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #27                 // Method setCounters:(Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;)V
       5: aload_0
       6: aload_1
       7: putfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
      10: return

  private void convertRawCountersToCounters();
    Code:
       0: aload_0
       1: getfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
       4: ifnonnull     30
       7: aload_0
       8: getfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
      11: ifnull        30
      14: aload_0
      15: aload_0
      16: getfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
      19: invokestatic  #28                 // Method org/apache/hadoop/mapreduce/TypeConverter.toYarn:(Lorg/apache/hadoop/mapreduce/Counters;)Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      22: putfield      #7                  // Field counters:Lorg/apache/hadoop/mapreduce/v2/api/records/Counters;
      25: aload_0
      26: aconst_null
      27: putfield      #8                  // Field rawCounters:Lorg/apache/hadoop/mapreduce/Counters;
      30: return

  public long getStartTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getStartTime:()J
      25: lreturn

  public void setStartTime(long);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
       8: lload_1
       9: invokevirtual #30                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setStartTime:(J)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: pop
      13: return

  public long getFinishTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getFinishTime:()J
      25: lreturn

  public void setFinishTime(long);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
       8: lload_1
       9: invokevirtual #32                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setFinishTime:(J)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: pop
      13: return

  public long getShuffleFinishTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getShuffleFinishTime:()J
      25: lreturn

  public void setShuffleFinishTime(long);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
       8: lload_1
       9: invokevirtual #34                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setShuffleFinishTime:(J)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: pop
      13: return

  public long getSortFinishTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #35,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getSortFinishTime:()J
      25: lreturn

  public void setSortFinishTime(long);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
       8: lload_1
       9: invokevirtual #36                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setSortFinishTime:(J)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: pop
      13: return

  public org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId getTaskAttemptId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      23: ifnull        31
      26: aload_0
      27: getfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      30: areturn
      31: aload_1
      32: invokeinterface #37,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasTaskAttemptId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #38,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getTaskAttemptId:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptIdProto;
      50: invokespecial #39                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptIdProto;)Lorg/apache/hadoop/mapreduce/v2/api/records/impl/pb/TaskAttemptIdPBImpl;
      53: putfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      56: aload_0
      57: getfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      60: areturn

  public void setTaskAttemptId(org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #40                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearTaskAttemptId:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field taskAttemptId:Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptId;
      21: return

  public org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptState getTaskAttemptState();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #41,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasTaskAttemptState:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_0
      31: aload_1
      32: invokeinterface #42,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getTaskAttemptState:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptStateProto;
      37: invokespecial #43                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptStateProto;)Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptState;
      40: areturn

  public void setTaskAttemptState(org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptState);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #44                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearTaskAttemptState:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      21: aload_0
      22: aload_1
      23: invokespecial #45                 // Method convertToProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptState;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptStateProto;
      26: invokevirtual #46                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setTaskAttemptState:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptStateProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      29: pop
      30: return

  public float getProgress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #47,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getProgress:()F
      25: freturn

  public void setProgress(float);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
       8: fload_1
       9: invokevirtual #48                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setProgress:(F)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: pop
      13: return

  public java.lang.String getDiagnosticInfo();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #49,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasDiagnosticInfo:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getDiagnosticInfo:()Ljava/lang/String;
      36: areturn

  public void setDiagnosticInfo(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #51                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearDiagnosticInfo:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      21: aload_1
      22: invokevirtual #52                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setDiagnosticInfo:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      25: pop
      26: return

  public java.lang.String getStateString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #53,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasStateString:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #54,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getStateString:()Ljava/lang/String;
      36: areturn

  public void setStateString(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #55                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearStateString:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      21: aload_1
      22: invokevirtual #56                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setStateString:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      25: pop
      26: return

  public org.apache.hadoop.mapreduce.v2.api.records.Phase getPhase();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #57,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasPhase:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_0
      31: aload_1
      32: invokeinterface #58,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getPhase:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$PhaseProto;
      37: invokespecial #59                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$PhaseProto;)Lorg/apache/hadoop/mapreduce/v2/api/records/Phase;
      40: areturn

  public void setPhase(org.apache.hadoop.mapreduce.v2.api.records.Phase);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #60                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearPhase:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      21: aload_0
      22: aload_1
      23: invokespecial #61                 // Method convertToProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/api/records/Phase;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$PhaseProto;
      26: invokevirtual #62                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setPhase:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$PhaseProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      29: pop
      30: return

  public java.lang.String getNodeManagerHost();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #63,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasNodeManagerHost:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #64,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getNodeManagerHost:()Ljava/lang/String;
      36: areturn

  public void setNodeManagerHost(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #65                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearNodeManagerHost:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      21: aload_1
      22: invokevirtual #66                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setNodeManagerHost:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      25: pop
      26: return

  public int getNodeManagerPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #67,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getNodeManagerPort:()I
      25: ireturn

  public void setNodeManagerPort(int);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
       8: iload_1
       9: invokevirtual #68                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setNodeManagerPort:(I)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: pop
      13: return

  public int getNodeManagerHttpPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getNodeManagerHttpPort:()I
      25: ireturn

  public void setNodeManagerHttpPort(int);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
       8: iload_1
       9: invokevirtual #70                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.setNodeManagerHttpPort:(I)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: pop
      13: return

  public org.apache.hadoop.yarn.api.records.ContainerId getContainerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      23: ifnull        31
      26: aload_0
      27: getfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      30: areturn
      31: aload_1
      32: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.hasContainerId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #72,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProtoOrBuilder.getContainerId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      50: invokespecial #73                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl;
      53: putfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      56: aload_0
      57: getfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      60: areturn

  public void setContainerId(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      12: invokevirtual #74                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder.clearContainerId:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      21: return

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_1
       1: checkcast     #75                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       4: invokevirtual #76                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto);
    Code:
       0: new           #75                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #77                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)V
       8: areturn

  private org.apache.hadoop.mapreduce.v2.api.records.impl.pb.CountersPBImpl convertFromProtoFormat(org.apache.hadoop.mapreduce.v2.proto.MRProtos$CountersProto);
    Code:
       0: new           #78                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl
       3: dup
       4: aload_1
       5: invokespecial #79                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl."<init>":(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;)V
       8: areturn

  private org.apache.hadoop.mapreduce.v2.proto.MRProtos$CountersProto convertToProtoFormat(org.apache.hadoop.mapreduce.v2.api.records.Counters);
    Code:
       0: aload_1
       1: checkcast     #78                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl
       4: invokevirtual #80                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl.getProto:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
       7: areturn

  private org.apache.hadoop.mapreduce.v2.api.records.impl.pb.TaskAttemptIdPBImpl convertFromProtoFormat(org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptIdProto);
    Code:
       0: new           #81                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/TaskAttemptIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #82                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/TaskAttemptIdPBImpl."<init>":(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptIdProto;)V
       8: areturn

  private org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptIdProto convertToProtoFormat(org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId);
    Code:
       0: aload_1
       1: checkcast     #81                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/TaskAttemptIdPBImpl
       4: invokevirtual #83                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/TaskAttemptIdPBImpl.getProto:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptIdProto;
       7: areturn

  private org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptStateProto convertToProtoFormat(org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptState);
    Code:
       0: aload_1
       1: invokestatic  #84                 // Method org/apache/hadoop/mapreduce/v2/util/MRProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptState;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptStateProto;
       4: areturn

  private org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptState convertFromProtoFormat(org.apache.hadoop.mapreduce.v2.proto.MRProtos$TaskAttemptStateProto);
    Code:
       0: aload_1
       1: invokestatic  #85                 // Method org/apache/hadoop/mapreduce/v2/util/MRProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptStateProto;)Lorg/apache/hadoop/mapreduce/v2/api/records/TaskAttemptState;
       4: areturn

  private org.apache.hadoop.mapreduce.v2.proto.MRProtos$PhaseProto convertToProtoFormat(org.apache.hadoop.mapreduce.v2.api.records.Phase);
    Code:
       0: aload_1
       1: invokestatic  #86                 // Method org/apache/hadoop/mapreduce/v2/util/MRProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/api/records/Phase;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$PhaseProto;
       4: areturn

  private org.apache.hadoop.mapreduce.v2.api.records.Phase convertFromProtoFormat(org.apache.hadoop.mapreduce.v2.proto.MRProtos$PhaseProto);
    Code:
       0: aload_1
       1: invokestatic  #87                 // Method org/apache/hadoop/mapreduce/v2/util/MRProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$PhaseProto;)Lorg/apache/hadoop/mapreduce/v2/api/records/Phase;
       4: areturn

  public com.google.protobuf.Message getProto();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method getProto:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$TaskAttemptReportProto;
       4: areturn
}
