Compiled from "CountersPBImpl.java"
public class org.apache.hadoop.mapreduce.v2.api.records.impl.pb.CountersPBImpl extends org.apache.hadoop.yarn.api.records.impl.pb.ProtoBase<org.apache.hadoop.mapreduce.v2.proto.MRProtos$CountersProto> implements org.apache.hadoop.mapreduce.v2.api.records.Counters {
  org.apache.hadoop.mapreduce.v2.proto.MRProtos$CountersProto proto;

  org.apache.hadoop.mapreduce.v2.proto.MRProtos$CountersProto$Builder builder;

  boolean viaProto;

  private java.util.Map<java.lang.String, org.apache.hadoop.mapreduce.v2.api.records.CounterGroup> counterGroups;

  public org.apache.hadoop.mapreduce.v2.api.records.impl.pb.CountersPBImpl();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoBase."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto.getDefaultInstance:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
       8: putfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #2                  // Field counterGroups:Ljava/util/Map;
      26: aload_0
      27: invokestatic  #8                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto.newBuilder:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      30: putfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      33: return

  public org.apache.hadoop.mapreduce.v2.api.records.impl.pb.CountersPBImpl(org.apache.hadoop.mapreduce.v2.proto.MRProtos$CountersProto);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoBase."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto.getDefaultInstance:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
       8: putfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #2                  // Field counterGroups:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      31: aload_0
      32: iconst_1
      33: putfield      #7                  // Field viaProto:Z
      36: return

  public org.apache.hadoop.mapreduce.v2.proto.MRProtos$CountersProto getProto();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #7                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      16: goto          26
      19: aload_0
      20: getfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      23: invokevirtual #10                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder.build:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      26: putfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field viaProto:Z
      34: aload_0
      35: getfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      38: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       4: ifnull        11
       7: aload_0
       8: invokespecial #11                 // Method addCounterGroupsToProto:()V
      11: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #12                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #13                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      20: invokevirtual #10                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder.build:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      23: putfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      26: aload_0
      27: iconst_1
      28: putfield      #7                  // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      19: invokestatic  #14                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto.newBuilder:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      22: putfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field viaProto:Z
      30: return

  public java.util.Map<java.lang.String, org.apache.hadoop.mapreduce.v2.api.records.CounterGroup> getAllCounterGroups();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method initCounterGroups:()V
       4: aload_0
       5: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       8: areturn

  public org.apache.hadoop.mapreduce.v2.api.records.CounterGroup getCounterGroup(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method initCounterGroups:()V
       4: aload_0
       5: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #17                 // class org/apache/hadoop/mapreduce/v2/api/records/CounterGroup
      17: areturn

  public org.apache.hadoop.mapreduce.v2.api.records.Counter getCounter(java.lang.Enum<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method java/lang/Enum.getDeclaringClass:()Ljava/lang/Class;
       5: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokevirtual #20                 // Method getCounterGroup:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/CounterGroup;
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: aconst_null
      17: goto          30
      20: aload_2
      21: aload_1
      22: invokevirtual #21                 // Method java/lang/Enum.name:()Ljava/lang/String;
      25: invokeinterface #22,  2           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/CounterGroup.getCounter:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/Counter;
      30: areturn

  public void incrCounter(java.lang.Enum<?>, long);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method java/lang/Enum.getDeclaringClass:()Ljava/lang/Class;
       4: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: astore        4
       9: aload_0
      10: aload         4
      12: invokevirtual #20                 // Method getCounterGroup:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/CounterGroup;
      15: ifnonnull     53
      18: new           #23                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterGroupPBImpl
      21: dup
      22: invokespecial #24                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterGroupPBImpl."<init>":()V
      25: astore        5
      27: aload         5
      29: aload         4
      31: invokeinterface #25,  2           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/CounterGroup.setName:(Ljava/lang/String;)V
      36: aload         5
      38: aload         4
      40: invokeinterface #26,  2           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/CounterGroup.setDisplayName:(Ljava/lang/String;)V
      45: aload_0
      46: aload         4
      48: aload         5
      50: invokevirtual #27                 // Method setCounterGroup:(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/v2/api/records/CounterGroup;)V
      53: aload_0
      54: aload         4
      56: invokevirtual #20                 // Method getCounterGroup:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/CounterGroup;
      59: aload_1
      60: invokevirtual #21                 // Method java/lang/Enum.name:()Ljava/lang/String;
      63: invokeinterface #22,  2           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/CounterGroup.getCounter:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/Counter;
      68: ifnonnull     127
      71: new           #28                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterPBImpl
      74: dup
      75: invokespecial #29                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterPBImpl."<init>":()V
      78: astore        5
      80: aload         5
      82: aload_1
      83: invokevirtual #21                 // Method java/lang/Enum.name:()Ljava/lang/String;
      86: invokeinterface #30,  2           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/Counter.setName:(Ljava/lang/String;)V
      91: aload         5
      93: aload_1
      94: invokevirtual #21                 // Method java/lang/Enum.name:()Ljava/lang/String;
      97: invokeinterface #31,  2           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/Counter.setDisplayName:(Ljava/lang/String;)V
     102: aload         5
     104: lconst_0
     105: invokeinterface #32,  3           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/Counter.setValue:(J)V
     110: aload_0
     111: aload         4
     113: invokevirtual #20                 // Method getCounterGroup:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/CounterGroup;
     116: aload_1
     117: invokevirtual #21                 // Method java/lang/Enum.name:()Ljava/lang/String;
     120: aload         5
     122: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/CounterGroup.setCounter:(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/v2/api/records/Counter;)V
     127: aload_0
     128: aload         4
     130: invokevirtual #20                 // Method getCounterGroup:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/CounterGroup;
     133: aload_1
     134: invokevirtual #21                 // Method java/lang/Enum.name:()Ljava/lang/String;
     137: invokeinterface #22,  2           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/CounterGroup.getCounter:(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/v2/api/records/Counter;
     142: astore        5
     144: aload         5
     146: aload         5
     148: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/Counter.getValue:()J
     153: lload_2
     154: ladd
     155: invokeinterface #32,  3           // InterfaceMethod org/apache/hadoop/mapreduce/v2/api/records/Counter.setValue:(J)V
     160: return

  private void initCounterGroups();
    Code:
       0: aload_0
       1: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #7                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
      19: goto          26
      22: aload_0
      23: getfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #35,  1           // InterfaceMethod org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProtoOrBuilder.getCounterGroupsList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #36                 // class java/util/HashMap
      38: dup
      39: invokespecial #37                 // Method java/util/HashMap."<init>":()V
      42: putfield      #2                  // Field counterGroups:Ljava/util/Map;
      45: aload_2
      46: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          99
      61: aload_3
      62: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #41                 // class org/apache/hadoop/mapreduce/v2/proto/MRProtos$StringCounterGroupMapProto
      70: astore        4
      72: aload_0
      73: getfield      #2                  // Field counterGroups:Ljava/util/Map;
      76: aload         4
      78: invokevirtual #42                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$StringCounterGroupMapProto.getKey:()Ljava/lang/String;
      81: aload_0
      82: aload         4
      84: invokevirtual #43                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$StringCounterGroupMapProto.getValue:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CounterGroupProto;
      87: invokespecial #44                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CounterGroupProto;)Lorg/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterGroupPBImpl;
      90: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: goto          52
      99: return

  public void addAllCounterGroups(java.util.Map<java.lang.String, org.apache.hadoop.mapreduce.v2.api.records.CounterGroup>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #15                 // Method initCounterGroups:()V
       9: aload_0
      10: getfield      #2                  // Field counterGroups:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #46,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      19: return

  private void addCounterGroupsToProto();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
       8: invokevirtual #47                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder.clearCounterGroups:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #2                  // Field counterGroups:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #48                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl$1
      23: dup
      24: aload_0
      25: invokespecial #49                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl$1."<init>":(Lorg/apache/hadoop/mapreduce/v2/api/records/impl/pb/CountersPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #6                  // Field builder:Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      33: aload_1
      34: invokevirtual #50                 // Method org/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder.addAllCounterGroups:(Ljava/lang/Iterable;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto$Builder;
      37: pop
      38: return

  public void setCounterGroup(java.lang.String, org.apache.hadoop.mapreduce.v2.api.records.CounterGroup);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method initCounterGroups:()V
       4: aload_0
       5: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       8: aload_1
       9: aload_2
      10: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public void removeCounterGroup(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method initCounterGroups:()V
       4: aload_0
       5: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public void clearCounterGroups();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method initCounterGroups:()V
       4: aload_0
       5: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       8: invokeinterface #52,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  private org.apache.hadoop.mapreduce.v2.api.records.impl.pb.CounterGroupPBImpl convertFromProtoFormat(org.apache.hadoop.mapreduce.v2.proto.MRProtos$CounterGroupProto);
    Code:
       0: new           #23                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterGroupPBImpl
       3: dup
       4: aload_1
       5: invokespecial #53                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterGroupPBImpl."<init>":(Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CounterGroupProto;)V
       8: areturn

  private org.apache.hadoop.mapreduce.v2.proto.MRProtos$CounterGroupProto convertToProtoFormat(org.apache.hadoop.mapreduce.v2.api.records.CounterGroup);
    Code:
       0: aload_1
       1: checkcast     #23                 // class org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterGroupPBImpl
       4: invokevirtual #54                 // Method org/apache/hadoop/mapreduce/v2/api/records/impl/pb/CounterGroupPBImpl.getProto:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CounterGroupProto;
       7: areturn

  public com.google.protobuf.Message getProto();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getProto:()Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CountersProto;
       4: areturn

  static java.util.Map access$000(org.apache.hadoop.mapreduce.v2.api.records.impl.pb.CountersPBImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field counterGroups:Ljava/util/Map;
       4: areturn

  static org.apache.hadoop.mapreduce.v2.proto.MRProtos$CounterGroupProto access$100(org.apache.hadoop.mapreduce.v2.api.records.impl.pb.CountersPBImpl, org.apache.hadoop.mapreduce.v2.api.records.CounterGroup);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method convertToProtoFormat:(Lorg/apache/hadoop/mapreduce/v2/api/records/CounterGroup;)Lorg/apache/hadoop/mapreduce/v2/proto/MRProtos$CounterGroupProto;
       5: areturn
}
