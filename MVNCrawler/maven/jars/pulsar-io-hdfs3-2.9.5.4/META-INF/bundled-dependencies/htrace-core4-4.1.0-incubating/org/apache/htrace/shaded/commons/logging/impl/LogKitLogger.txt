Compiled from "LogKitLogger.java"
public class org.apache.htrace.shaded.commons.logging.impl.LogKitLogger implements org.apache.htrace.shaded.commons.logging.Log,java.io.Serializable {
  protected transient org.apache.log.Logger logger;

  protected java.lang.String name;

  public org.apache.htrace.shaded.commons.logging.impl.LogKitLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #20                 // Field logger:Lorg/apache/log/Logger;
       9: aload_0
      10: aconst_null
      11: putfield      #22                 // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_1
      16: putfield      #22                 // Field name:Ljava/lang/String;
      19: aload_0
      20: aload_0
      21: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
      24: putfield      #20                 // Field logger:Lorg/apache/log/Logger;
      27: return

  public org.apache.log.Logger getLogger();
    Code:
       0: aload_0
       1: getfield      #20                 // Field logger:Lorg/apache/log/Logger;
       4: ifnonnull     21
       7: aload_0
       8: invokestatic  #34                 // Method org/apache/log/Hierarchy.getDefaultHierarchy:()Lorg/apache/log/Hierarchy;
      11: aload_0
      12: getfield      #22                 // Field name:Ljava/lang/String;
      15: invokevirtual #38                 // Method org/apache/log/Hierarchy.getLoggerFor:(Ljava/lang/String;)Lorg/apache/log/Logger;
      18: putfield      #20                 // Field logger:Lorg/apache/log/Logger;
      21: aload_0
      22: getfield      #20                 // Field logger:Lorg/apache/log/Logger;
      25: areturn

  public void trace(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method debug:(Ljava/lang/Object;)V
       5: return

  public void trace(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #48                 // Method debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
       6: return

  public void debug(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #60                 // Method org/apache/log/Logger.debug:(Ljava/lang/String;)V
      15: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #63                 // Method org/apache/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void info(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #66                 // Method org/apache/log/Logger.info:(Ljava/lang/String;)V
      15: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #68                 // Method org/apache/log/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void warn(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #71                 // Method org/apache/log/Logger.warn:(Ljava/lang/String;)V
      15: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #73                 // Method org/apache/log/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void error(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #76                 // Method org/apache/log/Logger.error:(Ljava/lang/String;)V
      15: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #78                 // Method org/apache/log/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void fatal(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #82                 // Method org/apache/log/Logger.fatalError:(Ljava/lang/String;)V
      15: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: aload_2
      13: invokevirtual #84                 // Method org/apache/log/Logger.fatalError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #88                 // Method org/apache/log/Logger.isDebugEnabled:()Z
       7: ireturn

  public boolean isErrorEnabled();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #91                 // Method org/apache/log/Logger.isErrorEnabled:()Z
       7: ireturn

  public boolean isFatalEnabled();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #95                 // Method org/apache/log/Logger.isFatalErrorEnabled:()Z
       7: ireturn

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #98                 // Method org/apache/log/Logger.isInfoEnabled:()Z
       7: ireturn

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #88                 // Method org/apache/log/Logger.isDebugEnabled:()Z
       7: ireturn

  public boolean isWarnEnabled();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getLogger:()Lorg/apache/log/Logger;
       4: invokevirtual #102                // Method org/apache/log/Logger.isWarnEnabled:()Z
       7: ireturn
}
