Compiled from "TypeBase.java"
public abstract class org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBase extends org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType implements org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializable {
  private static final long serialVersionUID;

  volatile transient java.lang.String _canonicalName;

  protected org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBase(java.lang.Class<?>, int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: iconst_0
       7: invokespecial #19                 // Method "<init>":(Ljava/lang/Class;ILjava/lang/Object;Ljava/lang/Object;Z)V
      10: return

  protected org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBase(java.lang.Class<?>, int, java.lang.Object, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: invokespecial #30                 // Method org/apache/htrace/shaded/fasterxml/jackson/databind/JavaType."<init>":(Ljava/lang/Class;ILjava/lang/Object;Ljava/lang/Object;Z)V
      11: return

  public java.lang.String toCanonical();
    Code:
       0: aload_0
       1: getfield      #36                 // Field _canonicalName:Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: aload_0
      10: invokevirtual #39                 // Method buildCanonicalName:()Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: areturn

  protected abstract java.lang.String buildCanonicalName();

  public abstract java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder);

  public abstract java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder);

  public <T> T getValueHandler();
    Code:
       0: aload_0
       1: getfield      #50                 // Field _valueHandler:Ljava/lang/Object;
       4: areturn

  public <T> T getTypeHandler();
    Code:
       0: aload_0
       1: getfield      #54                 // Field _typeHandler:Ljava/lang/Object;
       4: areturn

  public void serializeWithType(org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator, org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider, org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException, org.apache.htrace.shaded.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: invokevirtual #66                 // Method org/apache/htrace/shaded/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForScalar:(Ljava/lang/Object;Lorg/apache/htrace/shaded/fasterxml/jackson/core/JsonGenerator;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #70                 // Method serialize:(Lorg/apache/htrace/shaded/fasterxml/jackson/core/JsonGenerator;Lorg/apache/htrace/shaded/fasterxml/jackson/databind/SerializerProvider;)V
      12: aload_3
      13: aload_0
      14: aload_1
      15: invokevirtual #73                 // Method org/apache/htrace/shaded/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffixForScalar:(Ljava/lang/Object;Lorg/apache/htrace/shaded/fasterxml/jackson/core/JsonGenerator;)V
      18: return

  public void serialize(org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator, org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.htrace.shaded.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #81                 // Method toCanonical:()Ljava/lang/String;
       5: invokevirtual #87                 // Method org/apache/htrace/shaded/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
       8: return

  protected static java.lang.StringBuilder _classSignature(java.lang.Class<?>, java.lang.StringBuilder, boolean);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method java/lang/Class.isPrimitive:()Z
       4: ifeq          190
       7: aload_0
       8: getstatic     #100                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      11: if_acmpne     24
      14: aload_1
      15: bipush        90
      17: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      20: pop
      21: goto          261
      24: aload_0
      25: getstatic     #109                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      28: if_acmpne     41
      31: aload_1
      32: bipush        66
      34: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      37: pop
      38: goto          261
      41: aload_0
      42: getstatic     #112                // Field java/lang/Short.TYPE:Ljava/lang/Class;
      45: if_acmpne     58
      48: aload_1
      49: bipush        83
      51: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: goto          261
      58: aload_0
      59: getstatic     #115                // Field java/lang/Character.TYPE:Ljava/lang/Class;
      62: if_acmpne     75
      65: aload_1
      66: bipush        67
      68: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      71: pop
      72: goto          261
      75: aload_0
      76: getstatic     #118                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      79: if_acmpne     92
      82: aload_1
      83: bipush        73
      85: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: goto          261
      92: aload_0
      93: getstatic     #121                // Field java/lang/Long.TYPE:Ljava/lang/Class;
      96: if_acmpne     109
      99: aload_1
     100: bipush        74
     102: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     105: pop
     106: goto          261
     109: aload_0
     110: getstatic     #124                // Field java/lang/Float.TYPE:Ljava/lang/Class;
     113: if_acmpne     126
     116: aload_1
     117: bipush        70
     119: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     122: pop
     123: goto          261
     126: aload_0
     127: getstatic     #127                // Field java/lang/Double.TYPE:Ljava/lang/Class;
     130: if_acmpne     143
     133: aload_1
     134: bipush        68
     136: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     139: pop
     140: goto          261
     143: aload_0
     144: getstatic     #130                // Field java/lang/Void.TYPE:Ljava/lang/Class;
     147: if_acmpne     160
     150: aload_1
     151: bipush        86
     153: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     156: pop
     157: goto          261
     160: new           #132                // class java/lang/IllegalStateException
     163: dup
     164: new           #102                // class java/lang/StringBuilder
     167: dup
     168: invokespecial #135                // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #137                // String Unrecognized primitive type:
     173: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: aload_0
     177: invokevirtual #143                // Method java/lang/Class.getName:()Ljava/lang/String;
     180: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokespecial #148                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     189: athrow
     190: aload_1
     191: bipush        76
     193: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     196: pop
     197: aload_0
     198: invokevirtual #143                // Method java/lang/Class.getName:()Ljava/lang/String;
     201: astore_3
     202: iconst_0
     203: istore        4
     205: aload_3
     206: invokevirtual #152                // Method java/lang/String.length:()I
     209: istore        5
     211: iload         4
     213: iload         5
     215: if_icmpge     250
     218: aload_3
     219: iload         4
     221: invokevirtual #156                // Method java/lang/String.charAt:(I)C
     224: istore        6
     226: iload         6
     228: bipush        46
     230: if_icmpne     237
     233: bipush        47
     235: istore        6
     237: aload_1
     238: iload         6
     240: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     243: pop
     244: iinc          4, 1
     247: goto          211
     250: iload_2
     251: ifeq          261
     254: aload_1
     255: bipush        59
     257: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     260: pop
     261: aload_1
     262: areturn
}
