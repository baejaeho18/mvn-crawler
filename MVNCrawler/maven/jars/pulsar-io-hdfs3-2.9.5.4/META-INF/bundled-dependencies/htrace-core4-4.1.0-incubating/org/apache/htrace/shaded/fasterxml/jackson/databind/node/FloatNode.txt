Compiled from "FloatNode.java"
public class org.apache.htrace.shaded.fasterxml.jackson.databind.node.FloatNode extends org.apache.htrace.shaded.fasterxml.jackson.databind.node.NumericNode {
  protected final float _value;

  public org.apache.htrace.shaded.fasterxml.jackson.databind.node.FloatNode(float);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/htrace/shaded/fasterxml/jackson/databind/node/NumericNode."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #19                 // Field _value:F
       9: return

  public static org.apache.htrace.shaded.fasterxml.jackson.databind.node.FloatNode valueOf(float);
    Code:
       0: new           #2                  // class org/apache/htrace/shaded/fasterxml/jackson/databind/node/FloatNode
       3: dup
       4: fload_0
       5: invokespecial #26                 // Method "<init>":(F)V
       8: areturn

  public org.apache.htrace.shaded.fasterxml.jackson.core.JsonToken asToken();
    Code:
       0: getstatic     #34                 // Field org/apache/htrace/shaded/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lorg/apache/htrace/shaded/fasterxml/jackson/core/JsonToken;
       3: areturn

  public org.apache.htrace.shaded.fasterxml.jackson.core.JsonParser$NumberType numberType();
    Code:
       0: getstatic     #40                 // Field org/apache/htrace/shaded/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lorg/apache/htrace/shaded/fasterxml/jackson/core/JsonParser$NumberType;
       3: areturn

  public boolean isFloatingPointNumber();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isFloat();
    Code:
       0: iconst_1
       1: ireturn

  public boolean canConvertToInt();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: ldc           #45                 // float -2.14748365E9f
       6: fcmpl
       7: iflt          24
      10: aload_0
      11: getfield      #19                 // Field _value:F
      14: ldc           #46                 // float 2.14748365E9f
      16: fcmpg
      17: ifgt          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean canConvertToLong();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: ldc           #48                 // float -9.223372E18f
       6: fcmpl
       7: iflt          24
      10: aload_0
      11: getfield      #19                 // Field _value:F
      14: ldc           #49                 // float 9.223372E18f
      16: fcmpg
      17: ifgt          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.Number numberValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: invokestatic  #56                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  public short shortValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: f2i
       5: i2s
       6: ireturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: f2i
       5: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: f2l
       5: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: f2d
       5: dreturn

  public java.math.BigDecimal decimalValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: f2d
       5: invokestatic  #73                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
       8: areturn

  public java.math.BigInteger bigIntegerValue();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method decimalValue:()Ljava/math/BigDecimal;
       4: invokevirtual #80                 // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
       7: areturn

  public java.lang.String asText();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: f2d
       5: invokestatic  #88                 // Method org/apache/htrace/shaded/fasterxml/jackson/core/io/NumberOutput.toString:(D)Ljava/lang/String;
       8: areturn

  public final void serialize(org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator, org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.htrace.shaded.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #19                 // Field _value:F
       5: invokevirtual #99                 // Method org/apache/htrace/shaded/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V
       8: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #2                  // class org/apache/htrace/shaded/fasterxml/jackson/databind/node/FloatNode
      17: ifeq          45
      20: aload_1
      21: checkcast     #2                  // class org/apache/htrace/shaded/fasterxml/jackson/databind/node/FloatNode
      24: getfield      #19                 // Field _value:F
      27: fstore_2
      28: aload_0
      29: getfield      #19                 // Field _value:F
      32: fload_2
      33: invokestatic  #109                // Method java/lang/Float.compare:(FF)I
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
      45: iconst_0
      46: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _value:F
       4: invokestatic  #117                // Method java/lang/Float.floatToIntBits:(F)I
       7: ireturn
}
