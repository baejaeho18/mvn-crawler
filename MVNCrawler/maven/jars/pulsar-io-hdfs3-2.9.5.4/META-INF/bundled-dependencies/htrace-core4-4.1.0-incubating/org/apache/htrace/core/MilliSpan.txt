Compiled from "MilliSpan.java"
public class org.apache.htrace.core.MilliSpan implements org.apache.htrace.core.Span {
  private static org.apache.htrace.shaded.fasterxml.jackson.databind.ObjectMapper OBJECT_MAPPER;

  private static org.apache.htrace.shaded.fasterxml.jackson.databind.ObjectReader JSON_READER;

  private static org.apache.htrace.shaded.fasterxml.jackson.databind.ObjectWriter JSON_WRITER;

  private static final org.apache.htrace.core.SpanId[] EMPTY_PARENT_ARRAY;

  private static final java.lang.String EMPTY_STRING;

  private long begin;

  private long end;

  private final java.lang.String description;

  private org.apache.htrace.core.SpanId[] parents;

  private final org.apache.htrace.core.SpanId spanId;

  private java.util.Map<java.lang.String, java.lang.String> traceInfo;

  private java.lang.String tracerId;

  private java.util.List<org.apache.htrace.core.TimelineAnnotation> timeline;

  public org.apache.htrace.core.Span child(java.lang.String);
    Code:
       0: new           #17                 // class org/apache/htrace/core/MilliSpan$Builder
       3: dup
       4: invokespecial #50                 // Method org/apache/htrace/core/MilliSpan$Builder."<init>":()V
       7: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
      10: invokevirtual #59                 // Method org/apache/htrace/core/MilliSpan$Builder.begin:(J)Lorg/apache/htrace/core/MilliSpan$Builder;
      13: lconst_0
      14: invokevirtual #61                 // Method org/apache/htrace/core/MilliSpan$Builder.end:(J)Lorg/apache/htrace/core/MilliSpan$Builder;
      17: aload_1
      18: invokevirtual #64                 // Method org/apache/htrace/core/MilliSpan$Builder.description:(Ljava/lang/String;)Lorg/apache/htrace/core/MilliSpan$Builder;
      21: iconst_1
      22: anewarray     #66                 // class org/apache/htrace/core/SpanId
      25: dup
      26: iconst_0
      27: aload_0
      28: getfield      #68                 // Field spanId:Lorg/apache/htrace/core/SpanId;
      31: aastore
      32: invokevirtual #71                 // Method org/apache/htrace/core/MilliSpan$Builder.parents:([Lorg/apache/htrace/core/SpanId;)Lorg/apache/htrace/core/MilliSpan$Builder;
      35: aload_0
      36: getfield      #68                 // Field spanId:Lorg/apache/htrace/core/SpanId;
      39: invokevirtual #75                 // Method org/apache/htrace/core/SpanId.newChildId:()Lorg/apache/htrace/core/SpanId;
      42: invokevirtual #78                 // Method org/apache/htrace/core/MilliSpan$Builder.spanId:(Lorg/apache/htrace/core/SpanId;)Lorg/apache/htrace/core/MilliSpan$Builder;
      45: aload_0
      46: getfield      #80                 // Field tracerId:Ljava/lang/String;
      49: invokevirtual #82                 // Method org/apache/htrace/core/MilliSpan$Builder.tracerId:(Ljava/lang/String;)Lorg/apache/htrace/core/MilliSpan$Builder;
      52: invokevirtual #86                 // Method org/apache/htrace/core/MilliSpan$Builder.build:()Lorg/apache/htrace/core/MilliSpan;
      55: areturn

  public org.apache.htrace.core.MilliSpan();
    Code:
       0: aload_0
       1: invokespecial #90                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #92                 // Field traceInfo:Ljava/util/Map;
       9: aload_0
      10: aconst_null
      11: putfield      #94                 // Field timeline:Ljava/util/List;
      14: aload_0
      15: lconst_0
      16: putfield      #96                 // Field begin:J
      19: aload_0
      20: lconst_0
      21: putfield      #98                 // Field end:J
      24: aload_0
      25: ldc           #30                 // String
      27: putfield      #100                // Field description:Ljava/lang/String;
      30: aload_0
      31: getstatic     #102                // Field EMPTY_PARENT_ARRAY:[Lorg/apache/htrace/core/SpanId;
      34: putfield      #104                // Field parents:[Lorg/apache/htrace/core/SpanId;
      37: aload_0
      38: getstatic     #107                // Field org/apache/htrace/core/SpanId.INVALID:Lorg/apache/htrace/core/SpanId;
      41: putfield      #68                 // Field spanId:Lorg/apache/htrace/core/SpanId;
      44: aload_0
      45: aconst_null
      46: putfield      #92                 // Field traceInfo:Ljava/util/Map;
      49: aload_0
      50: ldc           #30                 // String
      52: putfield      #80                 // Field tracerId:Ljava/lang/String;
      55: aload_0
      56: aconst_null
      57: putfield      #94                 // Field timeline:Ljava/util/List;
      60: return

  private org.apache.htrace.core.MilliSpan(org.apache.htrace.core.MilliSpan$Builder);
    Code:
       0: aload_0
       1: invokespecial #90                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #92                 // Field traceInfo:Ljava/util/Map;
       9: aload_0
      10: aconst_null
      11: putfield      #94                 // Field timeline:Ljava/util/List;
      14: aload_0
      15: aload_1
      16: invokestatic  #112                // Method org/apache/htrace/core/MilliSpan$Builder.access$200:(Lorg/apache/htrace/core/MilliSpan$Builder;)J
      19: putfield      #96                 // Field begin:J
      22: aload_0
      23: aload_1
      24: invokestatic  #115                // Method org/apache/htrace/core/MilliSpan$Builder.access$300:(Lorg/apache/htrace/core/MilliSpan$Builder;)J
      27: putfield      #98                 // Field end:J
      30: aload_0
      31: aload_1
      32: invokestatic  #119                // Method org/apache/htrace/core/MilliSpan$Builder.access$400:(Lorg/apache/htrace/core/MilliSpan$Builder;)Ljava/lang/String;
      35: putfield      #100                // Field description:Ljava/lang/String;
      38: aload_0
      39: aload_1
      40: invokestatic  #123                // Method org/apache/htrace/core/MilliSpan$Builder.access$500:(Lorg/apache/htrace/core/MilliSpan$Builder;)[Lorg/apache/htrace/core/SpanId;
      43: putfield      #104                // Field parents:[Lorg/apache/htrace/core/SpanId;
      46: aload_0
      47: aload_1
      48: invokestatic  #127                // Method org/apache/htrace/core/MilliSpan$Builder.access$600:(Lorg/apache/htrace/core/MilliSpan$Builder;)Lorg/apache/htrace/core/SpanId;
      51: putfield      #68                 // Field spanId:Lorg/apache/htrace/core/SpanId;
      54: aload_0
      55: aload_1
      56: invokestatic  #131                // Method org/apache/htrace/core/MilliSpan$Builder.access$700:(Lorg/apache/htrace/core/MilliSpan$Builder;)Ljava/util/Map;
      59: putfield      #92                 // Field traceInfo:Ljava/util/Map;
      62: aload_0
      63: aload_1
      64: invokestatic  #134                // Method org/apache/htrace/core/MilliSpan$Builder.access$800:(Lorg/apache/htrace/core/MilliSpan$Builder;)Ljava/lang/String;
      67: putfield      #80                 // Field tracerId:Ljava/lang/String;
      70: aload_0
      71: aload_1
      72: invokestatic  #138                // Method org/apache/htrace/core/MilliSpan$Builder.access$900:(Lorg/apache/htrace/core/MilliSpan$Builder;)Ljava/util/List;
      75: putfield      #94                 // Field timeline:Ljava/util/List;
      78: return

  public synchronized void stop();
    Code:
       0: aload_0
       1: getfield      #98                 // Field end:J
       4: lconst_0
       5: lcmp
       6: ifne          60
       9: aload_0
      10: getfield      #96                 // Field begin:J
      13: lconst_0
      14: lcmp
      15: ifne          53
      18: new           #143                // class java/lang/IllegalStateException
      21: dup
      22: new           #145                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #148                // String Span for
      31: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #100                // Field description:Ljava/lang/String;
      38: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #154                // String  has not been started
      43: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #161                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
      57: putfield      #98                 // Field end:J
      60: return

  protected long currentTimeMillis();
    Code:
       0: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
       3: lreturn

  public synchronized boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #96                 // Field begin:J
       4: lconst_0
       5: lcmp
       6: ifeq          22
       9: aload_0
      10: getfield      #98                 // Field end:J
      13: lconst_0
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public synchronized long getAccumulatedMillis();
    Code:
       0: aload_0
       1: getfield      #96                 // Field begin:J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: lconst_0
      10: lreturn
      11: aload_0
      12: getfield      #98                 // Field end:J
      15: lconst_0
      16: lcmp
      17: ifle          30
      20: aload_0
      21: getfield      #98                 // Field end:J
      24: aload_0
      25: getfield      #96                 // Field begin:J
      28: lsub
      29: lreturn
      30: aload_0
      31: invokevirtual #165                // Method currentTimeMillis:()J
      34: aload_0
      35: getfield      #96                 // Field begin:J
      38: lsub
      39: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method toJson:()Ljava/lang/String;
       4: areturn

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #100                // Field description:Ljava/lang/String;
       4: areturn

  public org.apache.htrace.core.SpanId getSpanId();
    Code:
       0: aload_0
       1: getfield      #68                 // Field spanId:Lorg/apache/htrace/core/SpanId;
       4: areturn

  public org.apache.htrace.core.SpanId[] getParents();
    Code:
       0: aload_0
       1: getfield      #104                // Field parents:[Lorg/apache/htrace/core/SpanId;
       4: areturn

  public void setParents(org.apache.htrace.core.SpanId[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #104                // Field parents:[Lorg/apache/htrace/core/SpanId;
       5: return

  public long getStartTimeMillis();
    Code:
       0: aload_0
       1: getfield      #96                 // Field begin:J
       4: lreturn

  public long getStopTimeMillis();
    Code:
       0: aload_0
       1: getfield      #98                 // Field end:J
       4: lreturn

  public void addKVAnnotation(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #92                 // Field traceInfo:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #180                // class java/util/HashMap
      11: dup
      12: invokespecial #181                // Method java/util/HashMap."<init>":()V
      15: putfield      #92                 // Field traceInfo:Ljava/util/Map;
      18: aload_0
      19: getfield      #92                 // Field traceInfo:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #187,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public void addTimelineAnnotation(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #94                 // Field timeline:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #192                // class java/util/ArrayList
      11: dup
      12: invokespecial #193                // Method java/util/ArrayList."<init>":()V
      15: putfield      #94                 // Field timeline:Ljava/util/List;
      18: aload_0
      19: getfield      #94                 // Field timeline:Ljava/util/List;
      22: new           #195                // class org/apache/htrace/core/TimelineAnnotation
      25: dup
      26: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
      29: aload_1
      30: invokespecial #198                // Method org/apache/htrace/core/TimelineAnnotation."<init>":(JLjava/lang/String;)V
      33: invokeinterface #204,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      38: pop
      39: return

  public java.util.Map<java.lang.String, java.lang.String> getKVAnnotations();
    Code:
       0: aload_0
       1: getfield      #92                 // Field traceInfo:Ljava/util/Map;
       4: ifnonnull     11
       7: invokestatic  #212                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      10: areturn
      11: aload_0
      12: getfield      #92                 // Field traceInfo:Ljava/util/Map;
      15: invokestatic  #216                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      18: areturn

  public java.util.List<org.apache.htrace.core.TimelineAnnotation> getTimelineAnnotations();
    Code:
       0: aload_0
       1: getfield      #94                 // Field timeline:Ljava/util/List;
       4: ifnonnull     11
       7: invokestatic  #221                // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #94                 // Field timeline:Ljava/util/List;
      15: invokestatic  #225                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      18: areturn

  public java.lang.String getTracerId();
    Code:
       0: aload_0
       1: getfield      #80                 // Field tracerId:Ljava/lang/String;
       4: areturn

  public void setTracerId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field tracerId:Ljava/lang/String;
       5: return

  public java.lang.String toJson();
    Code:
       0: new           #231                // class java/io/StringWriter
       3: dup
       4: invokespecial #232                // Method java/io/StringWriter."<init>":()V
       7: astore_1
       8: getstatic     #234                // Field JSON_WRITER:Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectWriter;
      11: aload_1
      12: aload_0
      13: invokevirtual #240                // Method org/apache/htrace/shaded/fasterxml/jackson/databind/ObjectWriter.writeValue:(Ljava/io/Writer;Ljava/lang/Object;)V
      16: goto          29
      19: astore_2
      20: new           #242                // class java/lang/RuntimeException
      23: dup
      24: aload_2
      25: invokespecial #245                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
      29: aload_1
      30: invokevirtual #246                // Method java/io/StringWriter.toString:()Ljava/lang/String;
      33: areturn
    Exception table:
       from    to  target type
           8    16    19   Class java/io/IOException

  public static org.apache.htrace.core.MilliSpan fromJson(java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #254                // Field JSON_READER:Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectReader;
       3: aload_0
       4: invokevirtual #260                // Method org/apache/htrace/shaded/fasterxml/jackson/databind/ObjectReader.readValue:(Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #2                  // class org/apache/htrace/core/MilliSpan
      10: areturn

  static org.apache.htrace.core.SpanId[] access$000();
    Code:
       0: getstatic     #102                // Field EMPTY_PARENT_ARRAY:[Lorg/apache/htrace/core/SpanId;
       3: areturn

  org.apache.htrace.core.MilliSpan(org.apache.htrace.core.MilliSpan$Builder, org.apache.htrace.core.MilliSpan$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #265                // Method "<init>":(Lorg/apache/htrace/core/MilliSpan$Builder;)V
       5: return

  static {};
    Code:
       0: new           #271                // class org/apache/htrace/shaded/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #272                // Method org/apache/htrace/shaded/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: putstatic     #274                // Field OBJECT_MAPPER:Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectMapper;
      10: getstatic     #274                // Field OBJECT_MAPPER:Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectMapper;
      13: ldc           #2                  // class org/apache/htrace/core/MilliSpan
      15: invokevirtual #278                // Method org/apache/htrace/shaded/fasterxml/jackson/databind/ObjectMapper.reader:(Ljava/lang/Class;)Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectReader;
      18: putstatic     #254                // Field JSON_READER:Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectReader;
      21: getstatic     #274                // Field OBJECT_MAPPER:Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectMapper;
      24: invokevirtual #281                // Method org/apache/htrace/shaded/fasterxml/jackson/databind/ObjectMapper.writer:()Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectWriter;
      27: putstatic     #234                // Field JSON_WRITER:Lorg/apache/htrace/shaded/fasterxml/jackson/databind/ObjectWriter;
      30: iconst_0
      31: anewarray     #66                 // class org/apache/htrace/core/SpanId
      34: putstatic     #102                // Field EMPTY_PARENT_ARRAY:[Lorg/apache/htrace/core/SpanId;
      37: return
}
