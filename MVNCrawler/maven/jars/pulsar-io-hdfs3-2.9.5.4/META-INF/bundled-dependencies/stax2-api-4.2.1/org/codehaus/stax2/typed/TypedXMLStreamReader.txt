Compiled from "TypedXMLStreamReader.java"
public interface org.codehaus.stax2.typed.TypedXMLStreamReader extends javax.xml.stream.XMLStreamReader {
  public abstract boolean getElementAsBoolean() throws javax.xml.stream.XMLStreamException;

  public abstract int getElementAsInt() throws javax.xml.stream.XMLStreamException;

  public abstract long getElementAsLong() throws javax.xml.stream.XMLStreamException;

  public abstract float getElementAsFloat() throws javax.xml.stream.XMLStreamException;

  public abstract double getElementAsDouble() throws javax.xml.stream.XMLStreamException;

  public abstract java.math.BigInteger getElementAsInteger() throws javax.xml.stream.XMLStreamException;

  public abstract java.math.BigDecimal getElementAsDecimal() throws javax.xml.stream.XMLStreamException;

  public abstract javax.xml.namespace.QName getElementAsQName() throws javax.xml.stream.XMLStreamException;

  public abstract byte[] getElementAsBinary() throws javax.xml.stream.XMLStreamException;

  public abstract byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException;

  public abstract void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException;

  public abstract int readElementAsBinary(byte[], int, int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException;

  public abstract int readElementAsBinary(byte[], int, int) throws javax.xml.stream.XMLStreamException;

  public abstract int readElementAsIntArray(int[], int, int) throws javax.xml.stream.XMLStreamException;

  public abstract int readElementAsLongArray(long[], int, int) throws javax.xml.stream.XMLStreamException;

  public abstract int readElementAsFloatArray(float[], int, int) throws javax.xml.stream.XMLStreamException;

  public abstract int readElementAsDoubleArray(double[], int, int) throws javax.xml.stream.XMLStreamException;

  public abstract int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException;

  public abstract int getAttributeIndex(java.lang.String, java.lang.String);

  public abstract boolean getAttributeAsBoolean(int) throws javax.xml.stream.XMLStreamException;

  public abstract int getAttributeAsInt(int) throws javax.xml.stream.XMLStreamException;

  public abstract long getAttributeAsLong(int) throws javax.xml.stream.XMLStreamException;

  public abstract float getAttributeAsFloat(int) throws javax.xml.stream.XMLStreamException;

  public abstract double getAttributeAsDouble(int) throws javax.xml.stream.XMLStreamException;

  public abstract java.math.BigInteger getAttributeAsInteger(int) throws javax.xml.stream.XMLStreamException;

  public abstract java.math.BigDecimal getAttributeAsDecimal(int) throws javax.xml.stream.XMLStreamException;

  public abstract javax.xml.namespace.QName getAttributeAsQName(int) throws javax.xml.stream.XMLStreamException;

  public abstract void getAttributeAs(int, org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException;

  public abstract byte[] getAttributeAsBinary(int) throws javax.xml.stream.XMLStreamException;

  public abstract byte[] getAttributeAsBinary(int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException;

  public abstract int[] getAttributeAsIntArray(int) throws javax.xml.stream.XMLStreamException;

  public abstract long[] getAttributeAsLongArray(int) throws javax.xml.stream.XMLStreamException;

  public abstract float[] getAttributeAsFloatArray(int) throws javax.xml.stream.XMLStreamException;

  public abstract double[] getAttributeAsDoubleArray(int) throws javax.xml.stream.XMLStreamException;

  public abstract int getAttributeAsArray(int, org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException;
}
