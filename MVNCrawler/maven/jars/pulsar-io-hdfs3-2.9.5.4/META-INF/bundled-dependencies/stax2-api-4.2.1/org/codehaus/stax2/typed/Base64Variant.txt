Compiled from "Base64Variant.java"
public final class org.codehaus.stax2.typed.Base64Variant {
  static final char PADDING_CHAR_NONE;

  public static final int BASE64_VALUE_INVALID;

  public static final int BASE64_VALUE_PADDING;

  private final int[] _asciiToBase64;

  private final char[] _base64ToAsciiC;

  private final byte[] _base64ToAsciiB;

  final java.lang.String _name;

  final boolean _usesPadding;

  final char _paddingChar;

  final int _maxLineLength;

  public org.codehaus.stax2.typed.Base64Variant(java.lang.String, java.lang.String, boolean, char, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        128
       8: newarray       int
      10: putfield      #2                  // Field _asciiToBase64:[I
      13: aload_0
      14: bipush        64
      16: newarray       char
      18: putfield      #3                  // Field _base64ToAsciiC:[C
      21: aload_0
      22: bipush        64
      24: newarray       byte
      26: putfield      #4                  // Field _base64ToAsciiB:[B
      29: aload_0
      30: aload_1
      31: putfield      #5                  // Field _name:Ljava/lang/String;
      34: aload_0
      35: iload_3
      36: putfield      #6                  // Field _usesPadding:Z
      39: aload_0
      40: iload         4
      42: putfield      #7                  // Field _paddingChar:C
      45: aload_0
      46: iload         5
      48: putfield      #8                  // Field _maxLineLength:I
      51: aload_2
      52: invokevirtual #9                  // Method java/lang/String.length:()I
      55: istore        6
      57: iload         6
      59: bipush        64
      61: if_icmpeq     97
      64: new           #10                 // class java/lang/IllegalArgumentException
      67: dup
      68: new           #11                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #13                 // String Base64Alphabet length must be exactly 64 (was
      77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: iload         6
      82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: ldc           #16                 // String )
      87: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_2
      98: iconst_0
      99: iload         6
     101: aload_0
     102: getfield      #3                  // Field _base64ToAsciiC:[C
     105: iconst_0
     106: invokevirtual #19                 // Method java/lang/String.getChars:(II[CI)V
     109: aload_0
     110: getfield      #2                  // Field _asciiToBase64:[I
     113: iconst_m1
     114: invokestatic  #21                 // Method java/util/Arrays.fill:([II)V
     117: iconst_0
     118: istore        7
     120: iload         7
     122: iload         6
     124: if_icmpge     161
     127: aload_0
     128: getfield      #3                  // Field _base64ToAsciiC:[C
     131: iload         7
     133: caload
     134: istore        8
     136: aload_0
     137: getfield      #4                  // Field _base64ToAsciiB:[B
     140: iload         7
     142: iload         8
     144: i2b
     145: bastore
     146: aload_0
     147: getfield      #2                  // Field _asciiToBase64:[I
     150: iload         8
     152: iload         7
     154: iastore
     155: iinc          7, 1
     158: goto          120
     161: iload_3
     162: ifeq          174
     165: aload_0
     166: getfield      #2                  // Field _asciiToBase64:[I
     169: iload         4
     171: bipush        -2
     173: iastore
     174: return

  public org.codehaus.stax2.typed.Base64Variant(org.codehaus.stax2.typed.Base64Variant, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: getfield      #6                  // Field _usesPadding:Z
       7: aload_1
       8: getfield      #7                  // Field _paddingChar:C
      11: iload_3
      12: invokespecial #22                 // Method "<init>":(Lorg/codehaus/stax2/typed/Base64Variant;Ljava/lang/String;ZCI)V
      15: return

  public org.codehaus.stax2.typed.Base64Variant(org.codehaus.stax2.typed.Base64Variant, java.lang.String, boolean, char, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        128
       8: newarray       int
      10: putfield      #2                  // Field _asciiToBase64:[I
      13: aload_0
      14: bipush        64
      16: newarray       char
      18: putfield      #3                  // Field _base64ToAsciiC:[C
      21: aload_0
      22: bipush        64
      24: newarray       byte
      26: putfield      #4                  // Field _base64ToAsciiB:[B
      29: aload_0
      30: aload_2
      31: putfield      #5                  // Field _name:Ljava/lang/String;
      34: aload_1
      35: getfield      #4                  // Field _base64ToAsciiB:[B
      38: astore        6
      40: aload         6
      42: iconst_0
      43: aload_0
      44: getfield      #4                  // Field _base64ToAsciiB:[B
      47: iconst_0
      48: aload         6
      50: arraylength
      51: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: aload_1
      55: getfield      #3                  // Field _base64ToAsciiC:[C
      58: astore        7
      60: aload         7
      62: iconst_0
      63: aload_0
      64: getfield      #3                  // Field _base64ToAsciiC:[C
      67: iconst_0
      68: aload         7
      70: arraylength
      71: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_1
      75: getfield      #2                  // Field _asciiToBase64:[I
      78: astore        8
      80: aload         8
      82: iconst_0
      83: aload_0
      84: getfield      #2                  // Field _asciiToBase64:[I
      87: iconst_0
      88: aload         8
      90: arraylength
      91: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: aload_0
      95: iload_3
      96: putfield      #6                  // Field _usesPadding:Z
      99: aload_0
     100: iload         4
     102: putfield      #7                  // Field _paddingChar:C
     105: aload_0
     106: iload         5
     108: putfield      #8                  // Field _maxLineLength:I
     111: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _name:Ljava/lang/String;
       4: areturn

  public boolean usesPadding();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _usesPadding:Z
       4: ireturn

  public boolean usesPaddingChar(char);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field _paddingChar:C
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public char getPaddingChar();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _paddingChar:C
       4: ireturn

  public byte getPaddingByte();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _paddingChar:C
       4: i2b
       5: ireturn

  public int getMaxLineLength();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _maxLineLength:I
       4: ireturn

  public int decodeBase64Char(char);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: bipush        127
       5: if_icmpgt     17
       8: aload_0
       9: getfield      #2                  // Field _asciiToBase64:[I
      12: iload_2
      13: iaload
      14: goto          18
      17: iconst_m1
      18: ireturn

  public int decodeBase64Byte(byte);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: bipush        127
       5: if_icmpgt     17
       8: aload_0
       9: getfield      #2                  // Field _asciiToBase64:[I
      12: iload_2
      13: iaload
      14: goto          18
      17: iconst_m1
      18: ireturn

  public char encodeBase64BitsAsChar(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _base64ToAsciiC:[C
       4: iload_1
       5: caload
       6: ireturn

  public int encodeBase64Chunk(int, char[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iinc          3, 1
       5: aload_0
       6: getfield      #3                  // Field _base64ToAsciiC:[C
       9: iload_1
      10: bipush        18
      12: ishr
      13: bipush        63
      15: iand
      16: caload
      17: castore
      18: aload_2
      19: iload_3
      20: iinc          3, 1
      23: aload_0
      24: getfield      #3                  // Field _base64ToAsciiC:[C
      27: iload_1
      28: bipush        12
      30: ishr
      31: bipush        63
      33: iand
      34: caload
      35: castore
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: aload_0
      42: getfield      #3                  // Field _base64ToAsciiC:[C
      45: iload_1
      46: bipush        6
      48: ishr
      49: bipush        63
      51: iand
      52: caload
      53: castore
      54: aload_2
      55: iload_3
      56: iinc          3, 1
      59: aload_0
      60: getfield      #3                  // Field _base64ToAsciiC:[C
      63: iload_1
      64: bipush        63
      66: iand
      67: caload
      68: castore
      69: iload_3
      70: ireturn

  public int encodeBase64Partial(int, int, char[], int);
    Code:
       0: aload_3
       1: iload         4
       3: iinc          4, 1
       6: aload_0
       7: getfield      #3                  // Field _base64ToAsciiC:[C
      10: iload_1
      11: bipush        18
      13: ishr
      14: bipush        63
      16: iand
      17: caload
      18: castore
      19: aload_3
      20: iload         4
      22: iinc          4, 1
      25: aload_0
      26: getfield      #3                  // Field _base64ToAsciiC:[C
      29: iload_1
      30: bipush        12
      32: ishr
      33: bipush        63
      35: iand
      36: caload
      37: castore
      38: aload_0
      39: getfield      #6                  // Field _usesPadding:Z
      42: ifeq          90
      45: aload_3
      46: iload         4
      48: iinc          4, 1
      51: iload_2
      52: iconst_2
      53: if_icmpne     71
      56: aload_0
      57: getfield      #3                  // Field _base64ToAsciiC:[C
      60: iload_1
      61: bipush        6
      63: ishr
      64: bipush        63
      66: iand
      67: caload
      68: goto          75
      71: aload_0
      72: getfield      #7                  // Field _paddingChar:C
      75: castore
      76: aload_3
      77: iload         4
      79: iinc          4, 1
      82: aload_0
      83: getfield      #7                  // Field _paddingChar:C
      86: castore
      87: goto          114
      90: iload_2
      91: iconst_2
      92: if_icmpne     114
      95: aload_3
      96: iload         4
      98: iinc          4, 1
     101: aload_0
     102: getfield      #3                  // Field _base64ToAsciiC:[C
     105: iload_1
     106: bipush        6
     108: ishr
     109: bipush        63
     111: iand
     112: caload
     113: castore
     114: iload         4
     116: ireturn

  public byte encodeBase64BitsAsByte(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _base64ToAsciiB:[B
       4: iload_1
       5: baload
       6: ireturn

  public int encodeBase64Chunk(int, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iinc          3, 1
       5: aload_0
       6: getfield      #4                  // Field _base64ToAsciiB:[B
       9: iload_1
      10: bipush        18
      12: ishr
      13: bipush        63
      15: iand
      16: baload
      17: bastore
      18: aload_2
      19: iload_3
      20: iinc          3, 1
      23: aload_0
      24: getfield      #4                  // Field _base64ToAsciiB:[B
      27: iload_1
      28: bipush        12
      30: ishr
      31: bipush        63
      33: iand
      34: baload
      35: bastore
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: aload_0
      42: getfield      #4                  // Field _base64ToAsciiB:[B
      45: iload_1
      46: bipush        6
      48: ishr
      49: bipush        63
      51: iand
      52: baload
      53: bastore
      54: aload_2
      55: iload_3
      56: iinc          3, 1
      59: aload_0
      60: getfield      #4                  // Field _base64ToAsciiB:[B
      63: iload_1
      64: bipush        63
      66: iand
      67: baload
      68: bastore
      69: iload_3
      70: ireturn

  public int encodeBase64Partial(int, int, byte[], int);
    Code:
       0: aload_3
       1: iload         4
       3: iinc          4, 1
       6: aload_0
       7: getfield      #4                  // Field _base64ToAsciiB:[B
      10: iload_1
      11: bipush        18
      13: ishr
      14: bipush        63
      16: iand
      17: baload
      18: bastore
      19: aload_3
      20: iload         4
      22: iinc          4, 1
      25: aload_0
      26: getfield      #4                  // Field _base64ToAsciiB:[B
      29: iload_1
      30: bipush        12
      32: ishr
      33: bipush        63
      35: iand
      36: baload
      37: bastore
      38: aload_0
      39: getfield      #6                  // Field _usesPadding:Z
      42: ifeq          93
      45: aload_0
      46: getfield      #7                  // Field _paddingChar:C
      49: i2b
      50: istore        5
      52: aload_3
      53: iload         4
      55: iinc          4, 1
      58: iload_2
      59: iconst_2
      60: if_icmpne     78
      63: aload_0
      64: getfield      #4                  // Field _base64ToAsciiB:[B
      67: iload_1
      68: bipush        6
      70: ishr
      71: bipush        63
      73: iand
      74: baload
      75: goto          80
      78: iload         5
      80: bastore
      81: aload_3
      82: iload         4
      84: iinc          4, 1
      87: iload         5
      89: bastore
      90: goto          117
      93: iload_2
      94: iconst_2
      95: if_icmpne     117
      98: aload_3
      99: iload         4
     101: iinc          4, 1
     104: aload_0
     105: getfield      #4                  // Field _base64ToAsciiB:[B
     108: iload_1
     109: bipush        6
     111: ishr
     112: bipush        63
     114: iand
     115: baload
     116: bastore
     117: iload         4
     119: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _name:Ljava/lang/String;
       4: areturn
}
