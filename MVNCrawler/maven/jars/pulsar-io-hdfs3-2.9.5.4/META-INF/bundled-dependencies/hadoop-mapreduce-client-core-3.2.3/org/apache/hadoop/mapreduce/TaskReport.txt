Compiled from "TaskReport.java"
public class org.apache.hadoop.mapreduce.TaskReport implements org.apache.hadoop.io.Writable {
  private org.apache.hadoop.mapred.TaskID taskid;

  private float progress;

  private java.lang.String state;

  private java.lang.String[] diagnostics;

  private long startTime;

  private long finishTime;

  private org.apache.hadoop.mapreduce.Counters counters;

  private org.apache.hadoop.mapred.TIPStatus currentStatus;

  private java.util.Collection<org.apache.hadoop.mapreduce.TaskAttemptID> runningAttempts;

  private org.apache.hadoop.mapreduce.TaskAttemptID successfulAttempt;

  public org.apache.hadoop.mapreduce.TaskReport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field runningAttempts:Ljava/util/Collection;
      15: aload_0
      16: new           #5                  // class org/apache/hadoop/mapreduce/TaskAttemptID
      19: dup
      20: invokespecial #6                  // Method org/apache/hadoop/mapreduce/TaskAttemptID."<init>":()V
      23: putfield      #7                  // Field successfulAttempt:Lorg/apache/hadoop/mapreduce/TaskAttemptID;
      26: aload_0
      27: new           #8                  // class org/apache/hadoop/mapred/TaskID
      30: dup
      31: invokespecial #9                  // Method org/apache/hadoop/mapred/TaskID."<init>":()V
      34: putfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
      37: return

  public org.apache.hadoop.mapreduce.TaskReport(org.apache.hadoop.mapred.TaskID, float, java.lang.String, java.lang.String[], org.apache.hadoop.mapred.TIPStatus, long, long, org.apache.hadoop.mapreduce.Counters);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field runningAttempts:Ljava/util/Collection;
      15: aload_0
      16: new           #5                  // class org/apache/hadoop/mapreduce/TaskAttemptID
      19: dup
      20: invokespecial #6                  // Method org/apache/hadoop/mapreduce/TaskAttemptID."<init>":()V
      23: putfield      #7                  // Field successfulAttempt:Lorg/apache/hadoop/mapreduce/TaskAttemptID;
      26: aload_0
      27: aload_1
      28: putfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
      31: aload_0
      32: fload_2
      33: putfield      #11                 // Field progress:F
      36: aload_0
      37: aload_3
      38: putfield      #12                 // Field state:Ljava/lang/String;
      41: aload_0
      42: aload         4
      44: putfield      #13                 // Field diagnostics:[Ljava/lang/String;
      47: aload_0
      48: aload         5
      50: putfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
      53: aload_0
      54: lload         6
      56: putfield      #15                 // Field startTime:J
      59: aload_0
      60: lload         8
      62: putfield      #16                 // Field finishTime:J
      65: aload_0
      66: aload         10
      68: putfield      #17                 // Field counters:Lorg/apache/hadoop/mapreduce/Counters;
      71: return

  public java.lang.String getTaskId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
       4: invokevirtual #18                 // Method org/apache/hadoop/mapred/TaskID.toString:()Ljava/lang/String;
       7: areturn

  public org.apache.hadoop.mapred.TaskID getTaskID();
    Code:
       0: aload_0
       1: getfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
       4: areturn

  public float getProgress();
    Code:
       0: aload_0
       1: getfield      #11                 // Field progress:F
       4: freturn

  public java.lang.String getState();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:Ljava/lang/String;
       4: areturn

  public java.lang.String[] getDiagnostics();
    Code:
       0: aload_0
       1: getfield      #13                 // Field diagnostics:[Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.mapreduce.Counters getTaskCounters();
    Code:
       0: aload_0
       1: getfield      #17                 // Field counters:Lorg/apache/hadoop/mapreduce/Counters;
       4: areturn

  public org.apache.hadoop.mapred.TIPStatus getCurrentStatus();
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
       4: areturn

  public long getFinishTime();
    Code:
       0: aload_0
       1: getfield      #16                 // Field finishTime:J
       4: lreturn

  protected void setFinishTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field finishTime:J
       5: return

  public long getStartTime();
    Code:
       0: aload_0
       1: getfield      #15                 // Field startTime:J
       4: lreturn

  protected void setStartTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field startTime:J
       5: return

  protected void setSuccessfulAttemptId(org.apache.hadoop.mapreduce.TaskAttemptID);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field successfulAttempt:Lorg/apache/hadoop/mapreduce/TaskAttemptID;
       5: return

  public org.apache.hadoop.mapreduce.TaskAttemptID getSuccessfulTaskAttemptId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field successfulAttempt:Lorg/apache/hadoop/mapreduce/TaskAttemptID;
       4: areturn

  protected void setRunningTaskAttemptIds(java.util.Collection<org.apache.hadoop.mapreduce.TaskAttemptID>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field runningAttempts:Ljava/util/Collection;
       5: return

  public java.util.Collection<org.apache.hadoop.mapreduce.TaskAttemptID> getRunningTaskAttemptIds();
    Code:
       0: aload_0
       1: getfield      #4                  // Field runningAttempts:Ljava/util/Collection;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          129
      20: aload_1
      21: checkcast     #21                 // class org/apache/hadoop/mapreduce/TaskReport
      24: astore_2
      25: aload_0
      26: getfield      #17                 // Field counters:Lorg/apache/hadoop/mapreduce/Counters;
      29: aload_2
      30: invokevirtual #22                 // Method getTaskCounters:()Lorg/apache/hadoop/mapreduce/Counters;
      33: invokevirtual #23                 // Method org/apache/hadoop/mapreduce/Counters.equals:(Ljava/lang/Object;)Z
      36: ifeq          127
      39: aload_0
      40: getfield      #13                 // Field diagnostics:[Ljava/lang/String;
      43: invokestatic  #24                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      46: aload_2
      47: invokevirtual #25                 // Method getDiagnostics:()[Ljava/lang/String;
      50: invokestatic  #24                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      53: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          127
      59: aload_0
      60: getfield      #16                 // Field finishTime:J
      63: aload_2
      64: invokevirtual #27                 // Method getFinishTime:()J
      67: lcmp
      68: ifne          127
      71: aload_0
      72: getfield      #11                 // Field progress:F
      75: aload_2
      76: invokevirtual #28                 // Method getProgress:()F
      79: fcmpl
      80: ifne          127
      83: aload_0
      84: getfield      #15                 // Field startTime:J
      87: aload_2
      88: invokevirtual #29                 // Method getStartTime:()J
      91: lcmp
      92: ifne          127
      95: aload_0
      96: getfield      #12                 // Field state:Ljava/lang/String;
      99: aload_2
     100: invokevirtual #30                 // Method getState:()Ljava/lang/String;
     103: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: ifeq          127
     109: aload_0
     110: getfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
     113: aload_2
     114: invokevirtual #31                 // Method getTaskID:()Lorg/apache/hadoop/mapred/TaskID;
     117: invokevirtual #32                 // Method org/apache/hadoop/mapred/TaskID.equals:(Ljava/lang/Object;)Z
     120: ifeq          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: ireturn
     129: iconst_0
     130: ireturn

  public int hashCode();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #17                 // Field counters:Lorg/apache/hadoop/mapreduce/Counters;
      11: invokevirtual #35                 // Method org/apache/hadoop/mapreduce/Counters.toString:()Ljava/lang/String;
      14: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: getfield      #13                 // Field diagnostics:[Ljava/lang/String;
      21: invokestatic  #24                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      24: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #16                 // Field finishTime:J
      31: invokevirtual #37                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #11                 // Field progress:F
      38: invokevirtual #38                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #15                 // Field startTime:J
      45: invokevirtual #37                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #12                 // Field state:Ljava/lang/String;
      52: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
      59: invokevirtual #18                 // Method org/apache/hadoop/mapred/TaskID.toString:()Ljava/lang/String;
      62: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokevirtual #40                 // Method java/lang/String.hashCode:()I
      71: ireturn

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
       4: aload_1
       5: invokevirtual #41                 // Method org/apache/hadoop/mapred/TaskID.write:(Ljava/io/DataOutput;)V
       8: aload_1
       9: aload_0
      10: getfield      #11                 // Field progress:F
      13: invokeinterface #42,  2           // InterfaceMethod java/io/DataOutput.writeFloat:(F)V
      18: aload_1
      19: aload_0
      20: getfield      #12                 // Field state:Ljava/lang/String;
      23: invokestatic  #43                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      26: pop
      27: aload_1
      28: aload_0
      29: getfield      #15                 // Field startTime:J
      32: invokeinterface #44,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      37: aload_1
      38: aload_0
      39: getfield      #16                 // Field finishTime:J
      42: invokeinterface #44,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      47: aload_1
      48: aload_0
      49: getfield      #13                 // Field diagnostics:[Ljava/lang/String;
      52: invokestatic  #45                 // Method org/apache/hadoop/io/WritableUtils.writeStringArray:(Ljava/io/DataOutput;[Ljava/lang/String;)V
      55: aload_0
      56: getfield      #17                 // Field counters:Lorg/apache/hadoop/mapreduce/Counters;
      59: aload_1
      60: invokevirtual #46                 // Method org/apache/hadoop/mapreduce/Counters.write:(Ljava/io/DataOutput;)V
      63: aload_1
      64: aload_0
      65: getfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
      68: invokestatic  #47                 // Method org/apache/hadoop/io/WritableUtils.writeEnum:(Ljava/io/DataOutput;Ljava/lang/Enum;)V
      71: aload_0
      72: getfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
      75: getstatic     #48                 // Field org/apache/hadoop/mapred/TIPStatus.RUNNING:Lorg/apache/hadoop/mapred/TIPStatus;
      78: if_acmpne     137
      81: aload_1
      82: aload_0
      83: getfield      #4                  // Field runningAttempts:Ljava/util/Collection;
      86: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.size:()I
      91: invokestatic  #50                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      94: iconst_0
      95: anewarray     #5                  // class org/apache/hadoop/mapreduce/TaskAttemptID
      98: astore_2
      99: aload_0
     100: getfield      #4                  // Field runningAttempts:Ljava/util/Collection;
     103: aload_2
     104: invokeinterface #51,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     109: checkcast     #52                 // class "[Lorg/apache/hadoop/mapreduce/TaskAttemptID;"
     112: astore_2
     113: iconst_0
     114: istore_3
     115: iload_3
     116: aload_2
     117: arraylength
     118: if_icmpge     134
     121: aload_2
     122: iload_3
     123: aaload
     124: aload_1
     125: invokevirtual #53                 // Method org/apache/hadoop/mapreduce/TaskAttemptID.write:(Ljava/io/DataOutput;)V
     128: iinc          3, 1
     131: goto          115
     134: goto          155
     137: aload_0
     138: getfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
     141: getstatic     #54                 // Field org/apache/hadoop/mapred/TIPStatus.COMPLETE:Lorg/apache/hadoop/mapred/TIPStatus;
     144: if_acmpne     155
     147: aload_0
     148: getfield      #7                  // Field successfulAttempt:Lorg/apache/hadoop/mapreduce/TaskAttemptID;
     151: aload_1
     152: invokevirtual #53                 // Method org/apache/hadoop/mapreduce/TaskAttemptID.write:(Ljava/io/DataOutput;)V
     155: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field taskid:Lorg/apache/hadoop/mapred/TaskID;
       4: aload_1
       5: invokevirtual #55                 // Method org/apache/hadoop/mapred/TaskID.readFields:(Ljava/io/DataInput;)V
       8: aload_0
       9: aload_1
      10: invokeinterface #56,  1           // InterfaceMethod java/io/DataInput.readFloat:()F
      15: putfield      #11                 // Field progress:F
      18: aload_0
      19: aload_1
      20: invokestatic  #57                 // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
      23: invokestatic  #58                 // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      26: putfield      #12                 // Field state:Ljava/lang/String;
      29: aload_0
      30: aload_1
      31: invokeinterface #59,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      36: putfield      #15                 // Field startTime:J
      39: aload_0
      40: aload_1
      41: invokeinterface #59,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      46: putfield      #16                 // Field finishTime:J
      49: aload_0
      50: aload_1
      51: invokestatic  #60                 // Method org/apache/hadoop/io/WritableUtils.readStringArray:(Ljava/io/DataInput;)[Ljava/lang/String;
      54: putfield      #13                 // Field diagnostics:[Ljava/lang/String;
      57: aload_0
      58: new           #61                 // class org/apache/hadoop/mapreduce/Counters
      61: dup
      62: invokespecial #62                 // Method org/apache/hadoop/mapreduce/Counters."<init>":()V
      65: putfield      #17                 // Field counters:Lorg/apache/hadoop/mapreduce/Counters;
      68: aload_0
      69: getfield      #17                 // Field counters:Lorg/apache/hadoop/mapreduce/Counters;
      72: aload_1
      73: invokevirtual #63                 // Method org/apache/hadoop/mapreduce/Counters.readFields:(Ljava/io/DataInput;)V
      76: aload_0
      77: aload_1
      78: ldc           #64                 // class org/apache/hadoop/mapred/TIPStatus
      80: invokestatic  #65                 // Method org/apache/hadoop/io/WritableUtils.readEnum:(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
      83: checkcast     #64                 // class org/apache/hadoop/mapred/TIPStatus
      86: putfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
      89: aload_0
      90: getfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
      93: getstatic     #48                 // Field org/apache/hadoop/mapred/TIPStatus.RUNNING:Lorg/apache/hadoop/mapred/TIPStatus;
      96: if_acmpne     147
      99: aload_1
     100: invokestatic  #66                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     103: istore_2
     104: iconst_0
     105: istore_3
     106: iload_3
     107: iload_2
     108: if_icmpge     144
     111: new           #5                  // class org/apache/hadoop/mapreduce/TaskAttemptID
     114: dup
     115: invokespecial #6                  // Method org/apache/hadoop/mapreduce/TaskAttemptID."<init>":()V
     118: astore        4
     120: aload         4
     122: aload_1
     123: invokevirtual #67                 // Method org/apache/hadoop/mapreduce/TaskAttemptID.readFields:(Ljava/io/DataInput;)V
     126: aload_0
     127: getfield      #4                  // Field runningAttempts:Ljava/util/Collection;
     130: aload         4
     132: invokeinterface #68,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     137: pop
     138: iinc          3, 1
     141: goto          106
     144: goto          165
     147: aload_0
     148: getfield      #14                 // Field currentStatus:Lorg/apache/hadoop/mapred/TIPStatus;
     151: getstatic     #54                 // Field org/apache/hadoop/mapred/TIPStatus.COMPLETE:Lorg/apache/hadoop/mapred/TIPStatus;
     154: if_acmpne     165
     157: aload_0
     158: getfield      #7                  // Field successfulAttempt:Lorg/apache/hadoop/mapreduce/TaskAttemptID;
     161: aload_1
     162: invokevirtual #67                 // Method org/apache/hadoop/mapreduce/TaskAttemptID.readFields:(Ljava/io/DataInput;)V
     165: return
}
