Compiled from "SequenceFileOutputFormat.java"
public class org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat<K, V> extends org.apache.hadoop.mapreduce.lib.output.FileOutputFormat<K, V> {
  public org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/lib/output/FileOutputFormat."<init>":()V
       4: return

  protected org.apache.hadoop.io.SequenceFile$Writer getSequenceWriter(org.apache.hadoop.mapreduce.TaskAttemptContext, java.lang.Class<?>, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: astore        4
       8: aconst_null
       9: astore        5
      11: getstatic     #3                  // Field org/apache/hadoop/io/SequenceFile$CompressionType.NONE:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      14: astore        6
      16: aload_1
      17: invokestatic  #4                  // Method getCompressOutput:(Lorg/apache/hadoop/mapreduce/JobContext;)Z
      20: ifeq          49
      23: aload_1
      24: invokestatic  #5                  // Method getOutputCompressionType:(Lorg/apache/hadoop/mapreduce/JobContext;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      27: astore        6
      29: aload_1
      30: ldc           #6                  // class org/apache/hadoop/io/compress/DefaultCodec
      32: invokestatic  #7                  // Method getOutputCompressorClass:(Lorg/apache/hadoop/mapreduce/JobContext;Ljava/lang/Class;)Ljava/lang/Class;
      35: astore        7
      37: aload         7
      39: aload         4
      41: invokestatic  #8                  // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      44: checkcast     #9                  // class org/apache/hadoop/io/compress/CompressionCodec
      47: astore        5
      49: aload_0
      50: aload_1
      51: ldc           #10                 // String
      53: invokevirtual #11                 // Method getDefaultWorkFile:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      56: astore        7
      58: aload         7
      60: aload         4
      62: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      65: astore        8
      67: aload         8
      69: aload         4
      71: aload         7
      73: aload_2
      74: aload_3
      75: aload         6
      77: aload         5
      79: aload_1
      80: invokestatic  #13                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      83: areturn

  public org.apache.hadoop.mapreduce.RecordWriter<K, V> getRecordWriter(org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getOutputKeyClass:()Ljava/lang/Class;
       8: aload_1
       9: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getOutputValueClass:()Ljava/lang/Class;
      14: invokevirtual #16                 // Method getSequenceWriter:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      17: astore_2
      18: new           #17                 // class org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat$1
      21: dup
      22: aload_0
      23: aload_2
      24: invokespecial #18                 // Method org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat$1."<init>":(Lorg/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat;Lorg/apache/hadoop/io/SequenceFile$Writer;)V
      27: areturn

  public static org.apache.hadoop.io.SequenceFile$CompressionType getOutputCompressionType(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #21                 // String mapreduce.output.fileoutputformat.compress.type
       8: getstatic     #22                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.RECORD:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      11: invokevirtual #23                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.toString:()Ljava/lang/String;
      14: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      17: astore_1
      18: aload_1
      19: invokestatic  #25                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      22: areturn

  public static void setOutputCompressionType(org.apache.hadoop.mapreduce.Job, org.apache.hadoop.io.SequenceFile$CompressionType);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #26                 // Method setCompressOutput:(Lorg/apache/hadoop/mapreduce/Job;Z)V
       5: aload_0
       6: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       9: ldc           #21                 // String mapreduce.output.fileoutputformat.compress.type
      11: aload_1
      12: invokevirtual #23                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.toString:()Ljava/lang/String;
      15: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      18: return
}
