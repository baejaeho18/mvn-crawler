Compiled from "MultithreadedMapper.java"
class org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapRecordWriter extends org.apache.hadoop.mapreduce.RecordWriter<K2, V2> {
  final org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper this$0;

  private org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapRecordWriter(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       5: aload_0
       6: invokespecial #3                  // Method org/apache/hadoop/mapreduce/RecordWriter."<init>":()V
       9: return

  public void close(org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: return

  public void write(K2, V2) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       4: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
       7: dup
       8: astore_3
       9: monitorenter
      10: aload_0
      11: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
      14: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      17: aload_1
      18: aload_2
      19: invokevirtual #5                  // Method org/apache/hadoop/mapreduce/Mapper$Context.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      22: aload_3
      23: monitorexit
      24: goto          34
      27: astore        4
      29: aload_3
      30: monitorexit
      31: aload         4
      33: athrow
      34: return
    Exception table:
       from    to  target type
          10    24    27   any
          27    31    27   any

  org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapRecordWriter(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper, org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)V
       5: return
}
