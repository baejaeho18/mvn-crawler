Compiled from "Merger.java"
public class org.apache.hadoop.mapred.Merger$Segment<K, V> {
  org.apache.hadoop.mapred.IFile$Reader<K, V> reader;

  final org.apache.hadoop.io.DataInputBuffer key;

  org.apache.hadoop.conf.Configuration conf;

  org.apache.hadoop.fs.FileSystem fs;

  org.apache.hadoop.fs.Path file;

  boolean preserve;

  org.apache.hadoop.io.compress.CompressionCodec codec;

  long segmentOffset;

  long segmentLength;

  long rawDataLength;

  org.apache.hadoop.mapred.Counters$Counter mapOutputsCounter;

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.io.compress.CompressionCodec, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: aconst_null
       9: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/io/compress/CompressionCodec;ZLorg/apache/hadoop/mapred/Counters$Counter;)V
      12: return

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.io.compress.CompressionCodec, boolean, org.apache.hadoop.mapred.Counters$Counter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lconst_0
       5: aload_2
       6: aload_3
       7: invokevirtual #2                  // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      10: invokevirtual #3                  // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      13: aload         4
      15: iload         5
      17: aload         6
      19: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJLorg/apache/hadoop/io/compress/CompressionCodec;ZLorg/apache/hadoop/mapred/Counters$Counter;)V
      22: return

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.io.compress.CompressionCodec, boolean, org.apache.hadoop.mapred.Counters$Counter, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lconst_0
       5: aload_2
       6: aload_3
       7: invokevirtual #2                  // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      10: invokevirtual #3                  // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      13: aload         4
      15: iload         5
      17: aload         6
      19: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJLorg/apache/hadoop/io/compress/CompressionCodec;ZLorg/apache/hadoop/mapred/Counters$Counter;)V
      22: aload_0
      23: lload         7
      25: putfield      #5                  // Field rawDataLength:J
      28: return

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, long, long, org.apache.hadoop.io.compress.CompressionCodec, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lload         4
       6: lload         6
       8: aload         8
      10: iload         9
      12: aconst_null
      13: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJLorg/apache/hadoop/io/compress/CompressionCodec;ZLorg/apache/hadoop/mapred/Counters$Counter;)V
      16: return

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, long, long, org.apache.hadoop.io.compress.CompressionCodec, boolean, org.apache.hadoop.mapred.Counters$Counter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       9: aload_0
      10: new           #8                  // class org/apache/hadoop/io/DataInputBuffer
      13: dup
      14: invokespecial #9                  // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
      17: putfield      #10                 // Field key:Lorg/apache/hadoop/io/DataInputBuffer;
      20: aload_0
      21: aconst_null
      22: putfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      25: aload_0
      26: aconst_null
      27: putfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      30: aload_0
      31: aconst_null
      32: putfield      #13                 // Field file:Lorg/apache/hadoop/fs/Path;
      35: aload_0
      36: iconst_0
      37: putfield      #14                 // Field preserve:Z
      40: aload_0
      41: aconst_null
      42: putfield      #15                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      45: aload_0
      46: lconst_0
      47: putfield      #16                 // Field segmentOffset:J
      50: aload_0
      51: ldc2_w        #17                 // long -1l
      54: putfield      #19                 // Field segmentLength:J
      57: aload_0
      58: ldc2_w        #17                 // long -1l
      61: putfield      #5                  // Field rawDataLength:J
      64: aload_0
      65: aconst_null
      66: putfield      #20                 // Field mapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      69: aload_0
      70: aload_1
      71: putfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      74: aload_0
      75: aload_2
      76: putfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      79: aload_0
      80: aload_3
      81: putfield      #13                 // Field file:Lorg/apache/hadoop/fs/Path;
      84: aload_0
      85: aload         8
      87: putfield      #15                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      90: aload_0
      91: iload         9
      93: putfield      #14                 // Field preserve:Z
      96: aload_0
      97: lload         4
      99: putfield      #16                 // Field segmentOffset:J
     102: aload_0
     103: lload         6
     105: putfield      #19                 // Field segmentLength:J
     108: aload_0
     109: aload         10
     111: putfield      #20                 // Field mapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     114: return

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.mapred.IFile$Reader<K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #21                 // Method "<init>":(Lorg/apache/hadoop/mapred/IFile$Reader;ZLorg/apache/hadoop/mapred/Counters$Counter;)V
       7: return

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.mapred.IFile$Reader<K, V>, boolean, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #21                 // Method "<init>":(Lorg/apache/hadoop/mapred/IFile$Reader;ZLorg/apache/hadoop/mapred/Counters$Counter;)V
       7: aload_0
       8: lload_3
       9: putfield      #5                  // Field rawDataLength:J
      12: return

  public org.apache.hadoop.mapred.Merger$Segment(org.apache.hadoop.mapred.IFile$Reader<K, V>, boolean, org.apache.hadoop.mapred.Counters$Counter);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       9: aload_0
      10: new           #8                  // class org/apache/hadoop/io/DataInputBuffer
      13: dup
      14: invokespecial #9                  // Method org/apache/hadoop/io/DataInputBuffer."<init>":()V
      17: putfield      #10                 // Field key:Lorg/apache/hadoop/io/DataInputBuffer;
      20: aload_0
      21: aconst_null
      22: putfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      25: aload_0
      26: aconst_null
      27: putfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      30: aload_0
      31: aconst_null
      32: putfield      #13                 // Field file:Lorg/apache/hadoop/fs/Path;
      35: aload_0
      36: iconst_0
      37: putfield      #14                 // Field preserve:Z
      40: aload_0
      41: aconst_null
      42: putfield      #15                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      45: aload_0
      46: lconst_0
      47: putfield      #16                 // Field segmentOffset:J
      50: aload_0
      51: ldc2_w        #17                 // long -1l
      54: putfield      #19                 // Field segmentLength:J
      57: aload_0
      58: ldc2_w        #17                 // long -1l
      61: putfield      #5                  // Field rawDataLength:J
      64: aload_0
      65: aconst_null
      66: putfield      #20                 // Field mapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      69: aload_0
      70: aload_1
      71: putfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
      74: aload_0
      75: iload_2
      76: putfield      #14                 // Field preserve:Z
      79: aload_0
      80: aload_1
      81: invokevirtual #22                 // Method org/apache/hadoop/mapred/IFile$Reader.getLength:()J
      84: putfield      #19                 // Field segmentLength:J
      87: aload_0
      88: aload_3
      89: putfield      #20                 // Field mapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      92: return

  void init(org.apache.hadoop.mapred.Counters$Counter) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       4: ifnonnull     74
       7: aload_0
       8: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      11: aload_0
      12: getfield      #13                 // Field file:Lorg/apache/hadoop/fs/Path;
      15: invokevirtual #23                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      18: astore_2
      19: aload_2
      20: aload_0
      21: getfield      #16                 // Field segmentOffset:J
      24: invokevirtual #24                 // Method org/apache/hadoop/fs/FSDataInputStream.seek:(J)V
      27: aload_0
      28: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      31: aload_2
      32: aload_0
      33: getfield      #13                 // Field file:Lorg/apache/hadoop/fs/Path;
      36: invokestatic  #25                 // Method org/apache/hadoop/mapreduce/security/IntermediateEncryptedStream.wrapIfNecessary:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      39: astore_2
      40: aload_0
      41: new           #26                 // class org/apache/hadoop/mapred/IFile$Reader
      44: dup
      45: aload_0
      46: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      49: aload_2
      50: aload_0
      51: getfield      #19                 // Field segmentLength:J
      54: aload_0
      55: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      58: invokestatic  #27                 // Method org/apache/hadoop/mapreduce/CryptoUtils.cryptoPadding:(Lorg/apache/hadoop/conf/Configuration;)I
      61: i2l
      62: lsub
      63: aload_0
      64: getfield      #15                 // Field codec:Lorg/apache/hadoop/io/compress/CompressionCodec;
      67: aload_1
      68: invokespecial #28                 // Method org/apache/hadoop/mapred/IFile$Reader."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/mapred/Counters$Counter;)V
      71: putfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
      74: aload_0
      75: getfield      #20                 // Field mapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      78: ifnull        89
      81: aload_0
      82: getfield      #20                 // Field mapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      85: lconst_1
      86: invokevirtual #29                 // Method org/apache/hadoop/mapred/Counters$Counter.increment:(J)V
      89: return

  boolean inMemory();
    Code:
       0: aload_0
       1: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  org.apache.hadoop.io.DataInputBuffer getKey();
    Code:
       0: aload_0
       1: getfield      #10                 // Field key:Lorg/apache/hadoop/io/DataInputBuffer;
       4: areturn

  org.apache.hadoop.io.DataInputBuffer getValue(org.apache.hadoop.io.DataInputBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method nextRawValue:(Lorg/apache/hadoop/io/DataInputBuffer;)V
       5: aload_1
       6: areturn

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #19                 // Field segmentLength:J
      11: goto          21
      14: aload_0
      15: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
      18: invokevirtual #22                 // Method org/apache/hadoop/mapred/IFile$Reader.getLength:()J
      21: lreturn

  public long getRawDataLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rawDataLength:J
       4: lconst_0
       5: lcmp
       6: ifle          16
       9: aload_0
      10: getfield      #5                  // Field rawDataLength:J
      13: goto          20
      16: aload_0
      17: invokevirtual #31                 // Method getLength:()J
      20: lreturn

  boolean nextRawKey() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       4: aload_0
       5: getfield      #10                 // Field key:Lorg/apache/hadoop/io/DataInputBuffer;
       8: invokevirtual #32                 // Method org/apache/hadoop/mapred/IFile$Reader.nextRawKey:(Lorg/apache/hadoop/io/DataInputBuffer;)Z
      11: ireturn

  void nextRawValue(org.apache.hadoop.io.DataInputBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       4: aload_1
       5: invokevirtual #33                 // Method org/apache/hadoop/mapred/IFile$Reader.nextRawValue:(Lorg/apache/hadoop/io/DataInputBuffer;)V
       8: return

  void closeReader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       4: ifnull        19
       7: aload_0
       8: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
      11: invokevirtual #34                 // Method org/apache/hadoop/mapred/IFile$Reader.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
      19: return

  void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method closeReader:()V
       4: aload_0
       5: getfield      #14                 // Field preserve:Z
       8: ifne          31
      11: aload_0
      12: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      15: ifnull        31
      18: aload_0
      19: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      22: aload_0
      23: getfield      #13                 // Field file:Lorg/apache/hadoop/fs/Path;
      26: iconst_0
      27: invokevirtual #36                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      30: pop
      31: return

  public long getPosition() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       4: invokevirtual #37                 // Method org/apache/hadoop/mapred/IFile$Reader.getPosition:()J
       7: lreturn

  long getActualPosition() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field segmentOffset:J
       4: aload_0
       5: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       8: invokevirtual #37                 // Method org/apache/hadoop/mapred/IFile$Reader.getPosition:()J
      11: ladd
      12: lreturn

  org.apache.hadoop.mapred.IFile$Reader<K, V> getReader();
    Code:
       0: aload_0
       1: getfield      #7                  // Field reader:Lorg/apache/hadoop/mapred/IFile$Reader;
       4: areturn

  void reinitReader(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method inMemory:()Z
       4: ifne          45
       7: aload_0
       8: invokevirtual #35                 // Method closeReader:()V
      11: aload_0
      12: iload_1
      13: i2l
      14: putfield      #16                 // Field segmentOffset:J
      17: aload_0
      18: aload_0
      19: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      22: aload_0
      23: getfield      #13                 // Field file:Lorg/apache/hadoop/fs/Path;
      26: invokevirtual #2                  // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      29: invokevirtual #3                  // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      32: aload_0
      33: getfield      #16                 // Field segmentOffset:J
      36: lsub
      37: putfield      #19                 // Field segmentLength:J
      40: aload_0
      41: aconst_null
      42: invokevirtual #39                 // Method init:(Lorg/apache/hadoop/mapred/Counters$Counter;)V
      45: return
}
