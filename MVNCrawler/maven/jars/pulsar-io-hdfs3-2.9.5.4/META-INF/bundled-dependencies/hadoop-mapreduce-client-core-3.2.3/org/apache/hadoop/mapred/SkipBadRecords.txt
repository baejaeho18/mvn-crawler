Compiled from "SkipBadRecords.java"
public class org.apache.hadoop.mapred.SkipBadRecords {
  public static final java.lang.String COUNTER_GROUP;

  public static final java.lang.String COUNTER_MAP_PROCESSED_RECORDS;

  public static final java.lang.String COUNTER_REDUCE_PROCESSED_GROUPS;

  private static final java.lang.String ATTEMPTS_TO_START_SKIPPING;

  private static final java.lang.String AUTO_INCR_MAP_PROC_COUNT;

  private static final java.lang.String AUTO_INCR_REDUCE_PROC_COUNT;

  private static final java.lang.String OUT_PATH;

  private static final java.lang.String MAPPER_MAX_SKIP_RECORDS;

  private static final java.lang.String REDUCER_MAX_SKIP_GROUPS;

  public org.apache.hadoop.mapred.SkipBadRecords();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static int getAttemptsToStartSkipping(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #4                  // String mapreduce.task.skip.start.attempts
       3: iconst_2
       4: invokevirtual #5                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
       7: ireturn

  public static void setAttemptsToStartSkipping(org.apache.hadoop.conf.Configuration, int);
    Code:
       0: aload_0
       1: ldc           #4                  // String mapreduce.task.skip.start.attempts
       3: iload_1
       4: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
       7: return

  public static boolean getAutoIncrMapperProcCount(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #7                  // String mapreduce.map.skip.proc-count.auto-incr
       3: iconst_1
       4: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public static void setAutoIncrMapperProcCount(org.apache.hadoop.conf.Configuration, boolean);
    Code:
       0: aload_0
       1: ldc           #7                  // String mapreduce.map.skip.proc-count.auto-incr
       3: iload_1
       4: invokevirtual #9                  // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       7: return

  public static boolean getAutoIncrReducerProcCount(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #10                 // String mapreduce.reduce.skip.proc-count.auto-incr
       3: iconst_1
       4: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public static void setAutoIncrReducerProcCount(org.apache.hadoop.conf.Configuration, boolean);
    Code:
       0: aload_0
       1: ldc           #10                 // String mapreduce.reduce.skip.proc-count.auto-incr
       3: iload_1
       4: invokevirtual #9                  // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       7: return

  public static org.apache.hadoop.fs.Path getSkipOutputPath(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #11                 // String mapreduce.job.skip.outdir
       3: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        31
      11: ldc           #13                 // String none
      13: aload_1
      14: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          22
      20: aconst_null
      21: areturn
      22: new           #15                 // class org/apache/hadoop/fs/Path
      25: dup
      26: aload_1
      27: invokespecial #16                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      30: areturn
      31: new           #17                 // class org/apache/hadoop/mapred/JobConf
      34: dup
      35: aload_0
      36: invokespecial #18                 // Method org/apache/hadoop/mapred/JobConf."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      39: invokestatic  #19                 // Method org/apache/hadoop/mapred/FileOutputFormat.getOutputPath:(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/fs/Path;
      42: astore_2
      43: aload_2
      44: ifnonnull     51
      47: aconst_null
      48: goto          61
      51: new           #15                 // class org/apache/hadoop/fs/Path
      54: dup
      55: aload_2
      56: ldc           #20                 // String _logs/skip
      58: invokespecial #21                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      61: areturn

  public static void setSkipOutputPath(org.apache.hadoop.mapred.JobConf, org.apache.hadoop.fs.Path);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnonnull     12
       6: ldc           #13                 // String none
       8: astore_2
       9: goto          17
      12: aload_1
      13: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      16: astore_2
      17: aload_0
      18: ldc           #11                 // String mapreduce.job.skip.outdir
      20: aload_2
      21: invokevirtual #23                 // Method org/apache/hadoop/mapred/JobConf.set:(Ljava/lang/String;Ljava/lang/String;)V
      24: return

  public static long getMapperMaxSkipRecords(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #24                 // String mapreduce.map.skip.maxrecords
       3: lconst_0
       4: invokevirtual #25                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
       7: lreturn

  public static void setMapperMaxSkipRecords(org.apache.hadoop.conf.Configuration, long);
    Code:
       0: aload_0
       1: ldc           #24                 // String mapreduce.map.skip.maxrecords
       3: lload_1
       4: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.setLong:(Ljava/lang/String;J)V
       7: return

  public static long getReducerMaxSkipGroups(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #27                 // String mapreduce.reduce.skip.maxgroups
       3: lconst_0
       4: invokevirtual #25                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
       7: lreturn

  public static void setReducerMaxSkipGroups(org.apache.hadoop.conf.Configuration, long);
    Code:
       0: aload_0
       1: ldc           #27                 // String mapreduce.reduce.skip.maxgroups
       3: lload_1
       4: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.setLong:(Ljava/lang/String;J)V
       7: return
}
