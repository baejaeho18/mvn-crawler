Compiled from "BinaryProtocol.java"
class org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream extends java.io.FilterOutputStream {
  private java.io.OutputStream file;

  org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream(java.lang.String, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: new           #2                  // class java/io/FileOutputStream
       9: dup
      10: aload_1
      11: invokespecial #3                  // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;)V
      14: putfield      #4                  // Field file:Ljava/io/OutputStream;
      17: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/OutputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #5                  // Method java/io/OutputStream.write:([BII)V
      10: aload_0
      11: getfield      #6                  // Field out:Ljava/io/OutputStream;
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokevirtual #5                  // Method java/io/OutputStream.write:([BII)V
      20: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/OutputStream;
       4: iload_1
       5: invokevirtual #7                  // Method java/io/OutputStream.write:(I)V
       8: aload_0
       9: getfield      #6                  // Field out:Ljava/io/OutputStream;
      12: iload_1
      13: invokevirtual #7                  // Method java/io/OutputStream.write:(I)V
      16: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/OutputStream;
       4: invokevirtual #8                  // Method java/io/OutputStream.flush:()V
       7: aload_0
       8: getfield      #6                  // Field out:Ljava/io/OutputStream;
      11: invokevirtual #8                  // Method java/io/OutputStream.flush:()V
      14: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method flush:()V
       4: aload_0
       5: getfield      #4                  // Field file:Ljava/io/OutputStream;
       8: invokestatic  #10                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      11: aload_0
      12: getfield      #6                  // Field out:Ljava/io/OutputStream;
      15: invokestatic  #10                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      18: goto          38
      21: astore_1
      22: aload_0
      23: getfield      #4                  // Field file:Ljava/io/OutputStream;
      26: invokestatic  #10                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      29: aload_0
      30: getfield      #6                  // Field out:Ljava/io/OutputStream;
      33: invokestatic  #10                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      36: aload_1
      37: athrow
      38: return
    Exception table:
       from    to  target type
           0     4    21   any
}
