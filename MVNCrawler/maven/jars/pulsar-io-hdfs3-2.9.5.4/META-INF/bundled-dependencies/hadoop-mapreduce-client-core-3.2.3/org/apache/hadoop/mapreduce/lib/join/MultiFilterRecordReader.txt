Compiled from "MultiFilterRecordReader.java"
public abstract class org.apache.hadoop.mapreduce.lib.join.MultiFilterRecordReader<K extends org.apache.hadoop.io.WritableComparable<?>, V extends org.apache.hadoop.io.Writable> extends org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader<K, V, V> {
  private org.apache.hadoop.mapreduce.lib.join.TupleWritable ivalue;

  public org.apache.hadoop.mapreduce.lib.join.MultiFilterRecordReader(int, org.apache.hadoop.conf.Configuration, int, java.lang.Class<? extends org.apache.hadoop.io.WritableComparator>) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_3
       3: aload         4
       5: invokespecial #2                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader."<init>":(IILjava/lang/Class;)V
       8: aload_0
       9: aconst_null
      10: putfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
      13: aload_0
      14: aload_2
      15: invokevirtual #3                  // Method setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      18: return

  protected abstract V emit(org.apache.hadoop.mapreduce.lib.join.TupleWritable) throws java.io.IOException;

  protected boolean combine(java.lang.Object[], org.apache.hadoop.mapreduce.lib.join.TupleWritable);
    Code:
       0: iconst_1
       1: ireturn

  public boolean nextKeyValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field key:Lorg/apache/hadoop/io/WritableComparable;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #5                  // Method createKey:()Lorg/apache/hadoop/io/WritableComparable;
      12: putfield      #4                  // Field key:Lorg/apache/hadoop/io/WritableComparable;
      15: aload_0
      16: getfield      #6                  // Field value:Lorg/apache/hadoop/io/Writable;
      19: ifnonnull     30
      22: aload_0
      23: aload_0
      24: invokevirtual #7                  // Method createValue:()Lorg/apache/hadoop/io/Writable;
      27: putfield      #6                  // Field value:Lorg/apache/hadoop/io/Writable;
      30: aload_0
      31: getfield      #8                  // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      34: aload_0
      35: getfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
      38: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.flush:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Z
      41: ifeq          85
      44: aload_0
      45: getfield      #10                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      48: aload_0
      49: getfield      #8                  // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      52: invokevirtual #11                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.key:()Lorg/apache/hadoop/io/WritableComparable;
      55: aload_0
      56: getfield      #4                  // Field key:Lorg/apache/hadoop/io/WritableComparable;
      59: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: getfield      #10                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      67: aload_0
      68: aload_0
      69: getfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
      72: invokevirtual #13                 // Method emit:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Lorg/apache/hadoop/io/Writable;
      75: aload_0
      76: getfield      #6                  // Field value:Lorg/apache/hadoop/io/Writable;
      79: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: iconst_1
      84: ireturn
      85: aload_0
      86: getfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
      89: ifnonnull     100
      92: aload_0
      93: aload_0
      94: invokevirtual #14                 // Method createTupleWritable:()Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
      97: putfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
     100: aload_0
     101: getfield      #8                  // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
     104: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.clear:()V
     107: aload_0
     108: invokevirtual #16                 // Method getRecordReaderQueue:()Ljava/util/PriorityQueue;
     111: astore_1
     112: aload_0
     113: invokevirtual #5                  // Method createKey:()Lorg/apache/hadoop/io/WritableComparable;
     116: astore_2
     117: aload_1
     118: ifnull        206
     121: aload_1
     122: invokevirtual #17                 // Method java/util/PriorityQueue.isEmpty:()Z
     125: ifne          206
     128: aload_0
     129: aload_2
     130: invokevirtual #18                 // Method fillJoinCollector:(Lorg/apache/hadoop/io/WritableComparable;)V
     133: aload_0
     134: getfield      #8                  // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
     137: aload_2
     138: invokevirtual #19                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.reset:(Lorg/apache/hadoop/io/WritableComparable;)V
     141: aload_0
     142: getfield      #8                  // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
     145: aload_0
     146: getfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
     149: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.flush:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Z
     152: ifeq          196
     155: aload_0
     156: getfield      #10                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
     159: aload_0
     160: getfield      #8                  // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
     163: invokevirtual #11                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.key:()Lorg/apache/hadoop/io/WritableComparable;
     166: aload_0
     167: getfield      #4                  // Field key:Lorg/apache/hadoop/io/WritableComparable;
     170: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     173: pop
     174: aload_0
     175: getfield      #10                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
     178: aload_0
     179: aload_0
     180: getfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
     183: invokevirtual #13                 // Method emit:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Lorg/apache/hadoop/io/Writable;
     186: aload_0
     187: getfield      #6                  // Field value:Lorg/apache/hadoop/io/Writable;
     190: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     193: pop
     194: iconst_1
     195: ireturn
     196: aload_0
     197: getfield      #8                  // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
     200: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.clear:()V
     203: goto          117
     206: iconst_0
     207: ireturn

  public void initialize(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #20                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader.initialize:(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
       6: return

  protected org.apache.hadoop.mapreduce.lib.join.ResetableIterator<V> getDelegate();
    Code:
       0: new           #21                 // class org/apache/hadoop/mapreduce/lib/join/MultiFilterRecordReader$MultiFilterDelegationIterator
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method org/apache/hadoop/mapreduce/lib/join/MultiFilterRecordReader$MultiFilterDelegationIterator."<init>":(Lorg/apache/hadoop/mapreduce/lib/join/MultiFilterRecordReader;)V
       8: areturn

  static org.apache.hadoop.mapreduce.lib.join.TupleWritable access$000(org.apache.hadoop.mapreduce.lib.join.MultiFilterRecordReader);
    Code:
       0: aload_0
       1: getfield      #1                  // Field ivalue:Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;
       4: areturn
}
