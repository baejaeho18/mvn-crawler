Compiled from "MultithreadedMapper.java"
class org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapRecordReader extends org.apache.hadoop.mapreduce.RecordReader<K1, V1> {
  private K1 key;

  private V1 value;

  private org.apache.hadoop.conf.Configuration conf;

  final org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper this$0;

  private org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapRecordReader(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       5: aload_0
       6: invokespecial #3                  // Method org/apache/hadoop/mapreduce/RecordReader."<init>":()V
       9: return

  public void close() throws java.io.IOException;
    Code:
       0: return

  public float getProgress() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: fconst_0
       1: freturn

  public void initialize(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       7: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      10: return

  public boolean nextKeyValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       4: invokestatic  #6                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
      14: invokestatic  #6                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      17: invokevirtual #7                  // Method org/apache/hadoop/mapreduce/Mapper$Context.nextKeyValue:()Z
      20: ifne          27
      23: iconst_0
      24: aload_1
      25: monitorexit
      26: ireturn
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
      32: invokestatic  #6                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      35: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/Mapper$Context.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      38: aload_0
      39: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
      42: invokestatic  #6                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      45: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/Mapper$Context.getCurrentKey:()Ljava/lang/Object;
      48: aload_0
      49: getfield      #10                 // Field key:Ljava/lang/Object;
      52: invokestatic  #11                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: putfield      #10                 // Field key:Ljava/lang/Object;
      58: aload_0
      59: aload_0
      60: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      63: aload_0
      64: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
      67: invokestatic  #6                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      70: invokevirtual #12                 // Method org/apache/hadoop/mapreduce/Mapper$Context.getCurrentValue:()Ljava/lang/Object;
      73: aload_0
      74: getfield      #13                 // Field value:Ljava/lang/Object;
      77: invokestatic  #11                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: putfield      #13                 // Field value:Ljava/lang/Object;
      83: iconst_1
      84: aload_1
      85: monitorexit
      86: ireturn
      87: astore_2
      88: aload_1
      89: monitorexit
      90: aload_2
      91: athrow
    Exception table:
       from    to  target type
          10    26    87   any
          27    86    87   any
          87    90    87   any

  public K1 getCurrentKey();
    Code:
       0: aload_0
       1: getfield      #10                 // Field key:Ljava/lang/Object;
       4: areturn

  public V1 getCurrentValue();
    Code:
       0: aload_0
       1: getfield      #13                 // Field value:Ljava/lang/Object;
       4: areturn

  org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapRecordReader(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper, org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)V
       5: return
}
