Compiled from "TaskLog.java"
public class org.apache.hadoop.mapred.TaskLog {
  private static final org.slf4j.Logger LOG;

  static final java.lang.String USERLOGS_DIR_NAME;

  private static final java.io.File LOG_DIR;

  static org.apache.hadoop.fs.LocalFileSystem localFS;

  private static long prevOutLength;

  private static long prevErrLength;

  private static long prevLogLength;

  private static volatile org.apache.hadoop.mapred.TaskAttemptID currentTaskid;

  private static final java.lang.String bashCommand;

  private static final java.lang.String tailCommand;

  public org.apache.hadoop.mapred.TaskLog();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getMRv2LogDir();
    Code:
       0: ldc           #4                  // String yarn.app.container.log.dir
       2: invokestatic  #5                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public static java.io.File getTaskLogFile(org.apache.hadoop.mapred.TaskAttemptID, boolean, org.apache.hadoop.mapred.TaskLog$LogName);
    Code:
       0: invokestatic  #6                  // Method getMRv2LogDir:()Ljava/lang/String;
       3: ifnull        21
       6: new           #7                  // class java/io/File
       9: dup
      10: invokestatic  #6                  // Method getMRv2LogDir:()Ljava/lang/String;
      13: aload_2
      14: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
      17: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: areturn
      21: new           #7                  // class java/io/File
      24: dup
      25: aload_0
      26: iload_1
      27: invokestatic  #10                 // Method getAttemptDir:(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Ljava/io/File;
      30: aload_2
      31: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
      34: invokespecial #11                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      37: areturn

  static java.io.File getRealTaskLogFileLocation(org.apache.hadoop.mapred.TaskAttemptID, boolean, org.apache.hadoop.mapred.TaskLog$LogName);
    Code:
       0: aload_0
       1: aload_2
       2: iload_1
       3: invokestatic  #1                  // Method getLogFileDetail:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskLog$LogName;Z)Lorg/apache/hadoop/mapred/TaskLog$LogFileDetail;
       6: astore_3
       7: goto          42
      10: astore        4
      12: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      15: new           #14                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #16                 // String getTaskLogFileDetail threw an exception
      24: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload         4
      29: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      40: aconst_null
      41: areturn
      42: new           #7                  // class java/io/File
      45: dup
      46: aload_3
      47: getfield      #21                 // Field org/apache/hadoop/mapred/TaskLog$LogFileDetail.location:Ljava/lang/String;
      50: aload_2
      51: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
      54: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      57: areturn
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  private static org.apache.hadoop.mapred.TaskLog$LogFileDetail getLogFileDetail(org.apache.hadoop.mapred.TaskAttemptID, org.apache.hadoop.mapred.TaskLog$LogName, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokestatic  #22                 // Method getIndexFile:(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Ljava/io/File;
       5: astore_3
       6: new           #23                 // class java/io/BufferedReader
       9: dup
      10: new           #24                 // class java/io/InputStreamReader
      13: dup
      14: aload_3
      15: aload_0
      16: invokestatic  #25                 // Method obtainLogDirOwner:(Lorg/apache/hadoop/mapred/TaskAttemptID;)Ljava/lang/String;
      19: aconst_null
      20: invokestatic  #26                 // Method org/apache/hadoop/io/SecureIOUtils.openForRead:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Ljava/io/FileInputStream;
      23: getstatic     #27                 // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      26: invokespecial #28                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      29: invokespecial #29                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      32: astore        4
      34: new           #30                 // class org/apache/hadoop/mapred/TaskLog$LogFileDetail
      37: dup
      38: aconst_null
      39: invokespecial #31                 // Method org/apache/hadoop/mapred/TaskLog$LogFileDetail."<init>":(Lorg/apache/hadoop/mapred/TaskLog$1;)V
      42: astore        5
      44: aconst_null
      45: astore        6
      47: aload         4
      49: invokevirtual #32                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      52: astore        6
      54: aload         6
      56: ifnonnull     91
      59: new           #12                 // class java/io/IOException
      62: dup
      63: new           #14                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #33                 // String Index file for the log of
      72: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #34                 // String  doesn\'t exist.
      81: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #35                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload         5
      93: aload         6
      95: aload         6
      97: ldc           #36                 // String LOG_DIR:
      99: invokevirtual #37                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     102: ldc           #36                 // String LOG_DIR:
     104: invokevirtual #38                 // Method java/lang/String.length:()I
     107: iadd
     108: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     111: putfield      #21                 // Field org/apache/hadoop/mapred/TaskLog$LogFileDetail.location:Ljava/lang/String;
     114: aload_1
     115: getstatic     #40                 // Field org/apache/hadoop/mapred/TaskLog$LogName.DEBUGOUT:Lorg/apache/hadoop/mapred/TaskLog$LogName;
     118: invokevirtual #41                 // Method org/apache/hadoop/mapred/TaskLog$LogName.equals:(Ljava/lang/Object;)Z
     121: ifne          134
     124: aload_1
     125: getstatic     #42                 // Field org/apache/hadoop/mapred/TaskLog$LogName.PROFILE:Lorg/apache/hadoop/mapred/TaskLog$LogName;
     128: invokevirtual #41                 // Method org/apache/hadoop/mapred/TaskLog$LogName.equals:(Ljava/lang/Object;)Z
     131: ifeq          191
     134: aload         5
     136: new           #7                  // class java/io/File
     139: dup
     140: aload         5
     142: getfield      #21                 // Field org/apache/hadoop/mapred/TaskLog$LogFileDetail.location:Ljava/lang/String;
     145: aload_1
     146: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
     149: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     152: invokevirtual #43                 // Method java/io/File.length:()J
     155: putfield      #44                 // Field org/apache/hadoop/mapred/TaskLog$LogFileDetail.length:J
     158: aload         5
     160: lconst_0
     161: putfield      #45                 // Field org/apache/hadoop/mapred/TaskLog$LogFileDetail.start:J
     164: aload         4
     166: invokevirtual #46                 // Method java/io/BufferedReader.close:()V
     169: aload         5
     171: astore        7
     173: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
     176: iconst_1
     177: anewarray     #47                 // class java/io/Closeable
     180: dup
     181: iconst_0
     182: aload         4
     184: aastore
     185: invokestatic  #48                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     188: aload         7
     190: areturn
     191: aload         4
     193: invokevirtual #32                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     196: astore        6
     198: aload         6
     200: ifnull        277
     203: aload         6
     205: aload_1
     206: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
     209: invokevirtual #49                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     212: ifeq          267
     215: aload         6
     217: aload_1
     218: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
     221: invokevirtual #38                 // Method java/lang/String.length:()I
     224: iconst_1
     225: iadd
     226: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     229: astore        6
     231: aload         6
     233: ldc           #50                 // String
     235: invokevirtual #51                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     238: astore        7
     240: aload         5
     242: aload         7
     244: iconst_0
     245: aaload
     246: invokestatic  #52                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     249: putfield      #45                 // Field org/apache/hadoop/mapred/TaskLog$LogFileDetail.start:J
     252: aload         5
     254: aload         7
     256: iconst_1
     257: aaload
     258: invokestatic  #52                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     261: putfield      #44                 // Field org/apache/hadoop/mapred/TaskLog$LogFileDetail.length:J
     264: goto          277
     267: aload         4
     269: invokevirtual #32                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     272: astore        6
     274: goto          198
     277: aload         4
     279: invokevirtual #46                 // Method java/io/BufferedReader.close:()V
     282: aconst_null
     283: astore        4
     285: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
     288: iconst_1
     289: anewarray     #47                 // class java/io/Closeable
     292: dup
     293: iconst_0
     294: aload         4
     296: aastore
     297: invokestatic  #48                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     300: goto          323
     303: astore        8
     305: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
     308: iconst_1
     309: anewarray     #47                 // class java/io/Closeable
     312: dup
     313: iconst_0
     314: aload         4
     316: aastore
     317: invokestatic  #48                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     320: aload         8
     322: athrow
     323: aload         5
     325: areturn
    Exception table:
       from    to  target type
          47   173   303   any
         191   285   303   any
         303   305   303   any

  private static java.io.File getTmpIndexFile(org.apache.hadoop.mapred.TaskAttemptID, boolean);
    Code:
       0: new           #7                  // class java/io/File
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #10                 // Method getAttemptDir:(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Ljava/io/File;
       9: ldc           #53                 // String log.tmp
      11: invokespecial #11                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      14: areturn

  static java.io.File getIndexFile(org.apache.hadoop.mapred.TaskAttemptID, boolean);
    Code:
       0: new           #7                  // class java/io/File
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #10                 // Method getAttemptDir:(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Ljava/io/File;
       9: ldc           #54                 // String log.index
      11: invokespecial #11                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      14: areturn

  static java.lang.String obtainLogDirOwner(org.apache.hadoop.mapred.TaskAttemptID) throws java.io.IOException;
    Code:
       0: new           #55                 // class org/apache/hadoop/conf/Configuration
       3: dup
       4: invokespecial #56                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
       7: astore_1
       8: aload_1
       9: invokestatic  #57                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      12: invokevirtual #58                 // Method org/apache/hadoop/fs/LocalFileSystem.getRaw:()Lorg/apache/hadoop/fs/FileSystem;
      15: astore_2
      16: new           #59                 // class org/apache/hadoop/fs/Path
      19: dup
      20: aload_0
      21: invokevirtual #60                 // Method org/apache/hadoop/mapred/TaskAttemptID.getJobID:()Lorg/apache/hadoop/mapred/JobID;
      24: invokestatic  #61                 // Method getJobDir:(Lorg/apache/hadoop/mapreduce/JobID;)Ljava/io/File;
      27: invokevirtual #62                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      30: invokespecial #63                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      33: astore_3
      34: aload_2
      35: aload_3
      36: invokevirtual #64                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      39: astore        4
      41: aload         4
      43: invokevirtual #65                 // Method org/apache/hadoop/fs/FileStatus.getOwner:()Ljava/lang/String;
      46: areturn

  static java.lang.String getBaseLogDir();
    Code:
       0: ldc           #66                 // String hadoop.log.dir
       2: invokestatic  #5                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.io.File getAttemptDir(org.apache.hadoop.mapred.TaskAttemptID, boolean);
    Code:
       0: iload_1
       1: ifeq          9
       4: ldc           #67                 // String .cleanup
       6: goto          11
       9: ldc           #68                 // String
      11: astore_2
      12: new           #7                  // class java/io/File
      15: dup
      16: aload_0
      17: invokevirtual #60                 // Method org/apache/hadoop/mapred/TaskAttemptID.getJobID:()Lorg/apache/hadoop/mapred/JobID;
      20: invokestatic  #61                 // Method getJobDir:(Lorg/apache/hadoop/mapreduce/JobID;)Ljava/io/File;
      23: new           #14                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #11                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      44: areturn

  private static synchronized void writeToIndexFile(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #69                 // Field currentTaskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
       3: iload_1
       4: invokestatic  #70                 // Method getTmpIndexFile:(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Ljava/io/File;
       7: astore_2
       8: aconst_null
       9: astore_3
      10: aconst_null
      11: astore        4
      13: new           #71                 // class java/io/BufferedOutputStream
      16: dup
      17: aload_2
      18: sipush        420
      21: invokestatic  #72                 // Method org/apache/hadoop/io/SecureIOUtils.createForWrite:(Ljava/io/File;I)Ljava/io/FileOutputStream;
      24: invokespecial #73                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      27: astore_3
      28: new           #74                 // class java/io/DataOutputStream
      31: dup
      32: aload_3
      33: invokespecial #75                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      36: astore        4
      38: aload         4
      40: new           #14                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #36                 // String LOG_DIR:
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #76                 // String \n
      58: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: getstatic     #77                 // Field org/apache/hadoop/mapred/TaskLog$LogName.STDOUT:Lorg/apache/hadoop/mapred/TaskLog$LogName;
      64: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
      67: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #78                 // String :
      72: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokevirtual #79                 // Method java/io/DataOutputStream.writeBytes:(Ljava/lang/String;)V
      81: aload         4
      83: new           #14                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      90: getstatic     #80                 // Field prevOutLength:J
      93: invokestatic  #81                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      96: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #50                 // String
     101: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokevirtual #79                 // Method java/io/DataOutputStream.writeBytes:(Ljava/lang/String;)V
     110: aload         4
     112: new           #14                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     119: new           #7                  // class java/io/File
     122: dup
     123: aload_0
     124: getstatic     #77                 // Field org/apache/hadoop/mapred/TaskLog$LogName.STDOUT:Lorg/apache/hadoop/mapred/TaskLog$LogName;
     127: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
     130: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     133: invokevirtual #43                 // Method java/io/File.length:()J
     136: getstatic     #80                 // Field prevOutLength:J
     139: lsub
     140: invokestatic  #81                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     143: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: ldc           #76                 // String \n
     148: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: getstatic     #82                 // Field org/apache/hadoop/mapred/TaskLog$LogName.STDERR:Lorg/apache/hadoop/mapred/TaskLog$LogName;
     154: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     157: ldc           #78                 // String :
     159: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokevirtual #79                 // Method java/io/DataOutputStream.writeBytes:(Ljava/lang/String;)V
     168: aload         4
     170: new           #14                 // class java/lang/StringBuilder
     173: dup
     174: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     177: getstatic     #83                 // Field prevErrLength:J
     180: invokestatic  #81                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     183: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: ldc           #50                 // String
     188: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     194: invokevirtual #79                 // Method java/io/DataOutputStream.writeBytes:(Ljava/lang/String;)V
     197: aload         4
     199: new           #14                 // class java/lang/StringBuilder
     202: dup
     203: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     206: new           #7                  // class java/io/File
     209: dup
     210: aload_0
     211: getstatic     #82                 // Field org/apache/hadoop/mapred/TaskLog$LogName.STDERR:Lorg/apache/hadoop/mapred/TaskLog$LogName;
     214: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
     217: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     220: invokevirtual #43                 // Method java/io/File.length:()J
     223: getstatic     #83                 // Field prevErrLength:J
     226: lsub
     227: invokestatic  #81                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     230: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: ldc           #76                 // String \n
     235: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: getstatic     #84                 // Field org/apache/hadoop/mapred/TaskLog$LogName.SYSLOG:Lorg/apache/hadoop/mapred/TaskLog$LogName;
     241: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
     244: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: ldc           #78                 // String :
     249: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     255: invokevirtual #79                 // Method java/io/DataOutputStream.writeBytes:(Ljava/lang/String;)V
     258: aload         4
     260: new           #14                 // class java/lang/StringBuilder
     263: dup
     264: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     267: getstatic     #85                 // Field prevLogLength:J
     270: invokestatic  #81                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     273: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #50                 // String
     278: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #79                 // Method java/io/DataOutputStream.writeBytes:(Ljava/lang/String;)V
     287: aload         4
     289: new           #14                 // class java/lang/StringBuilder
     292: dup
     293: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     296: new           #7                  // class java/io/File
     299: dup
     300: aload_0
     301: getstatic     #84                 // Field org/apache/hadoop/mapred/TaskLog$LogName.SYSLOG:Lorg/apache/hadoop/mapred/TaskLog$LogName;
     304: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
     307: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     310: invokevirtual #43                 // Method java/io/File.length:()J
     313: getstatic     #85                 // Field prevLogLength:J
     316: lsub
     317: invokestatic  #81                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     320: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     323: ldc           #76                 // String \n
     325: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     331: invokevirtual #79                 // Method java/io/DataOutputStream.writeBytes:(Ljava/lang/String;)V
     334: aload         4
     336: invokevirtual #86                 // Method java/io/DataOutputStream.close:()V
     339: aconst_null
     340: astore        4
     342: aload_3
     343: invokevirtual #87                 // Method java/io/BufferedOutputStream.close:()V
     346: aconst_null
     347: astore_3
     348: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
     351: iconst_2
     352: anewarray     #47                 // class java/io/Closeable
     355: dup
     356: iconst_0
     357: aload         4
     359: aastore
     360: dup
     361: iconst_1
     362: aload_3
     363: aastore
     364: invokestatic  #48                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     367: goto          394
     370: astore        5
     372: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
     375: iconst_2
     376: anewarray     #47                 // class java/io/Closeable
     379: dup
     380: iconst_0
     381: aload         4
     383: aastore
     384: dup
     385: iconst_1
     386: aload_3
     387: aastore
     388: invokestatic  #48                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     391: aload         5
     393: athrow
     394: getstatic     #69                 // Field currentTaskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
     397: iload_1
     398: invokestatic  #22                 // Method getIndexFile:(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Ljava/io/File;
     401: astore        5
     403: new           #59                 // class org/apache/hadoop/fs/Path
     406: dup
     407: aload         5
     409: invokevirtual #62                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     412: invokespecial #63                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     415: astore        6
     417: new           #59                 // class org/apache/hadoop/fs/Path
     420: dup
     421: aload_2
     422: invokevirtual #62                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     425: invokespecial #63                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     428: astore        7
     430: getstatic     #88                 // Field localFS:Lorg/apache/hadoop/fs/LocalFileSystem;
     433: ifnonnull     449
     436: new           #55                 // class org/apache/hadoop/conf/Configuration
     439: dup
     440: invokespecial #56                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
     443: invokestatic  #57                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
     446: putstatic     #88                 // Field localFS:Lorg/apache/hadoop/fs/LocalFileSystem;
     449: getstatic     #88                 // Field localFS:Lorg/apache/hadoop/fs/LocalFileSystem;
     452: aload         7
     454: aload         6
     456: invokevirtual #89                 // Method org/apache/hadoop/fs/LocalFileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     459: pop
     460: return
    Exception table:
       from    to  target type
          13   348   370   any
         370   372   370   any

  private static void resetPrevLengths(java.lang.String);
    Code:
       0: new           #7                  // class java/io/File
       3: dup
       4: aload_0
       5: getstatic     #77                 // Field org/apache/hadoop/mapred/TaskLog$LogName.STDOUT:Lorg/apache/hadoop/mapred/TaskLog$LogName;
       8: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
      11: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      14: invokevirtual #43                 // Method java/io/File.length:()J
      17: putstatic     #80                 // Field prevOutLength:J
      20: new           #7                  // class java/io/File
      23: dup
      24: aload_0
      25: getstatic     #82                 // Field org/apache/hadoop/mapred/TaskLog$LogName.STDERR:Lorg/apache/hadoop/mapred/TaskLog$LogName;
      28: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
      31: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      34: invokevirtual #43                 // Method java/io/File.length:()J
      37: putstatic     #83                 // Field prevErrLength:J
      40: new           #7                  // class java/io/File
      43: dup
      44: aload_0
      45: getstatic     #84                 // Field org/apache/hadoop/mapred/TaskLog$LogName.SYSLOG:Lorg/apache/hadoop/mapred/TaskLog$LogName;
      48: invokevirtual #8                  // Method org/apache/hadoop/mapred/TaskLog$LogName.toString:()Ljava/lang/String;
      51: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      54: invokevirtual #43                 // Method java/io/File.length:()J
      57: putstatic     #85                 // Field prevLogLength:J
      60: return

  public static synchronized void syncLogs(java.lang.String, org.apache.hadoop.mapred.TaskAttemptID, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #90                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: invokevirtual #91                 // Method java/io/PrintStream.flush:()V
       6: getstatic     #92                 // Field java/lang/System.err:Ljava/io/PrintStream;
       9: invokevirtual #91                 // Method java/io/PrintStream.flush:()V
      12: invokestatic  #93                 // Method org/apache/log4j/LogManager.getCurrentLoggers:()Ljava/util/Enumeration;
      15: astore_3
      16: aload_3
      17: invokeinterface #94,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      22: ifeq          87
      25: aload_3
      26: invokeinterface #95,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      31: checkcast     #96                 // class org/apache/log4j/Logger
      34: astore        4
      36: aload         4
      38: invokevirtual #97                 // Method org/apache/log4j/Logger.getAllAppenders:()Ljava/util/Enumeration;
      41: astore        5
      43: aload         5
      45: invokeinterface #94,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      50: ifeq          84
      53: aload         5
      55: invokeinterface #95,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      60: checkcast     #98                 // class org/apache/log4j/Appender
      63: astore        6
      65: aload         6
      67: instanceof    #99                 // class org/apache/hadoop/mapred/TaskLogAppender
      70: ifeq          81
      73: aload         6
      75: checkcast     #99                 // class org/apache/hadoop/mapred/TaskLogAppender
      78: invokevirtual #100                // Method org/apache/hadoop/mapred/TaskLogAppender.flush:()V
      81: goto          43
      84: goto          16
      87: getstatic     #69                 // Field currentTaskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      90: aload_1
      91: if_acmpeq     102
      94: aload_1
      95: putstatic     #69                 // Field currentTaskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      98: aload_0
      99: invokestatic  #101                // Method resetPrevLengths:(Ljava/lang/String;)V
     102: aload_0
     103: iload_2
     104: invokestatic  #102                // Method writeToIndexFile:(Ljava/lang/String;Z)V
     107: return

  public static synchronized void syncLogsShutdown(java.util.concurrent.ScheduledExecutorService);
    Code:
       0: getstatic     #90                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: invokevirtual #91                 // Method java/io/PrintStream.flush:()V
       6: getstatic     #92                 // Field java/lang/System.err:Ljava/io/PrintStream;
       9: invokevirtual #91                 // Method java/io/PrintStream.flush:()V
      12: aload_0
      13: ifnull        23
      16: aload_0
      17: invokeinterface #103,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
      22: pop
      23: invokestatic  #104                // Method org/apache/log4j/LogManager.shutdown:()V
      26: return

  public static synchronized void syncLogs();
    Code:
       0: getstatic     #90                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: invokevirtual #91                 // Method java/io/PrintStream.flush:()V
       6: getstatic     #92                 // Field java/lang/System.err:Ljava/io/PrintStream;
       9: invokevirtual #91                 // Method java/io/PrintStream.flush:()V
      12: invokestatic  #105                // Method org/apache/log4j/Logger.getRootLogger:()Lorg/apache/log4j/Logger;
      15: astore_0
      16: aload_0
      17: invokestatic  #106                // Method flushAppenders:(Lorg/apache/log4j/Logger;)V
      20: aload_0
      21: invokevirtual #107                // Method org/apache/log4j/Logger.getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
      24: invokeinterface #108,  1          // InterfaceMethod org/apache/log4j/spi/LoggerRepository.getCurrentLoggers:()Ljava/util/Enumeration;
      29: astore_1
      30: aload_1
      31: invokeinterface #94,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      36: ifeq          56
      39: aload_1
      40: invokeinterface #95,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      45: checkcast     #96                 // class org/apache/log4j/Logger
      48: astore_2
      49: aload_2
      50: invokestatic  #106                // Method flushAppenders:(Lorg/apache/log4j/Logger;)V
      53: goto          30
      56: return

  private static void flushAppenders(org.apache.log4j.Logger);
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method org/apache/log4j/Logger.getAllAppenders:()Ljava/util/Enumeration;
       4: astore_1
       5: aload_1
       6: invokeinterface #94,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          79
      14: aload_1
      15: invokeinterface #95,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #98                 // class org/apache/log4j/Appender
      23: astore_2
      24: aload_2
      25: instanceof    #109                // class java/io/Flushable
      28: ifeq          76
      31: aload_2
      32: checkcast     #109                // class java/io/Flushable
      35: invokeinterface #110,  1          // InterfaceMethod java/io/Flushable.flush:()V
      40: goto          76
      43: astore_3
      44: getstatic     #92                 // Field java/lang/System.err:Ljava/io/PrintStream;
      47: new           #14                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      54: aload_2
      55: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: ldc           #111                // String : Failed to flush!
      60: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_3
      64: invokestatic  #112                // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      67: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokevirtual #113                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      76: goto          5
      79: return
    Exception table:
       from    to  target type
          31    40    43   Class java/io/IOException

  public static java.util.concurrent.ScheduledExecutorService createLogSyncer();
    Code:
       0: new           #114                // class org/apache/hadoop/mapred/TaskLog$1
       3: dup
       4: invokespecial #115                // Method org/apache/hadoop/mapred/TaskLog$1."<init>":()V
       7: invokestatic  #116                // Method org/apache/hadoop/util/concurrent/HadoopExecutors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      10: astore_0
      11: invokestatic  #117                // Method org/apache/hadoop/util/ShutdownHookManager.get:()Lorg/apache/hadoop/util/ShutdownHookManager;
      14: new           #118                // class org/apache/hadoop/mapred/TaskLog$2
      17: dup
      18: aload_0
      19: invokespecial #119                // Method org/apache/hadoop/mapred/TaskLog$2."<init>":(Ljava/util/concurrent/ScheduledExecutorService;)V
      22: bipush        50
      24: invokevirtual #120                // Method org/apache/hadoop/util/ShutdownHookManager.addShutdownHook:(Ljava/lang/Runnable;I)V
      27: aload_0
      28: new           #121                // class org/apache/hadoop/mapred/TaskLog$3
      31: dup
      32: invokespecial #122                // Method org/apache/hadoop/mapred/TaskLog$3."<init>":()V
      35: lconst_0
      36: ldc2_w        #123                // long 5l
      39: getstatic     #125                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      42: invokeinterface #126,  7          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      47: pop
      48: aload_0
      49: areturn

  public static long getTaskLogLength(org.apache.hadoop.mapred.JobConf);
    Code:
       0: aload_0
       1: invokestatic  #127                // Method getTaskLogLimitBytes:(Lorg/apache/hadoop/conf/Configuration;)J
       4: lreturn

  public static long getTaskLogLimitBytes(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #129                // String mapreduce.task.userlog.limit.kb
       3: lconst_0
       4: invokevirtual #130                // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
       7: ldc2_w        #131                // long 1024l
      10: lmul
      11: lreturn

  public static java.util.List<java.lang.String> captureOutAndError(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.io.File, java.io.File, long, boolean) throws java.io.IOException;
    Code:
       0: new           #133                // class java/util/ArrayList
       3: dup
       4: iconst_3
       5: invokespecial #134                // Method java/util/ArrayList."<init>":(I)V
       8: astore        7
      10: aload         7
      12: ldc           #136                // String bash
      14: invokeinterface #137,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload         7
      22: ldc           #138                // String -c
      24: invokeinterface #137,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: lload         4
      36: iload         6
      38: invokestatic  #139                // Method buildCommandLine:(Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/io/File;JZ)Ljava/lang/String;
      41: astore        8
      43: aload         7
      45: aload         8
      47: invokeinterface #137,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload         7
      55: areturn

  static java.lang.String buildCommandLine(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.io.File, java.io.File, long, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #140                // Method org/apache/hadoop/fs/FileUtil.makeShellPath:(Ljava/io/File;)Ljava/lang/String;
       4: astore        7
       6: aload_3
       7: invokestatic  #140                // Method org/apache/hadoop/fs/FileUtil.makeShellPath:(Ljava/io/File;)Ljava/lang/String;
      10: astore        8
      12: new           #141                // class java/lang/StringBuffer
      15: dup
      16: invokespecial #142                // Method java/lang/StringBuffer."<init>":()V
      19: astore        9
      21: getstatic     #143                // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      24: ifne          35
      27: aload         9
      29: ldc           #144                // String  export JVM_PID=`echo $$` ;
      31: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: pop
      35: aload_0
      36: ifnull        67
      39: aload_0
      40: invokeinterface #146,  1          // InterfaceMethod java/util/List.size:()I
      45: ifle          67
      48: aload         9
      50: aload_0
      51: iconst_0
      52: invokestatic  #147                // Method addCommand:(Ljava/util/List;Z)Ljava/lang/String;
      55: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: aload         9
      61: ldc           #148                // String ;
      63: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      66: pop
      67: lload         4
      69: lconst_0
      70: lcmp
      71: ifle          85
      74: aload         9
      76: ldc           #149                // String (
      78: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      81: pop
      82: goto          121
      85: getstatic     #150                // Field org/apache/hadoop/mapreduce/util/ProcessTree.isSetsidAvailable:Z
      88: ifeq          113
      91: iload         6
      93: ifeq          113
      96: getstatic     #143                // Field org/apache/hadoop/util/Shell.WINDOWS:Z
      99: ifne          113
     102: aload         9
     104: ldc           #151                // String exec setsid
     106: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     109: pop
     110: goto          121
     113: aload         9
     115: ldc           #152                // String exec
     117: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     120: pop
     121: aload         9
     123: aload_1
     124: iconst_1
     125: invokestatic  #147                // Method addCommand:(Ljava/util/List;Z)Ljava/lang/String;
     128: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     131: pop
     132: aload         9
     134: ldc           #153                // String  < /dev/null
     136: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     139: pop
     140: lload         4
     142: lconst_0
     143: lcmp
     144: ifle          254
     147: aload         9
     149: ldc           #154                // String  |
     151: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     154: pop
     155: aload         9
     157: ldc           #155                // String tail
     159: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     162: pop
     163: aload         9
     165: ldc           #156                // String  -c
     167: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     170: pop
     171: aload         9
     173: lload         4
     175: invokevirtual #157                // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     178: pop
     179: aload         9
     181: ldc           #158                // String  >>
     183: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     186: pop
     187: aload         9
     189: aload         7
     191: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     194: pop
     195: aload         9
     197: ldc           #159                // String  ; exit $PIPESTATUS ) 2>&1 |
     199: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     202: pop
     203: aload         9
     205: ldc           #155                // String tail
     207: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     210: pop
     211: aload         9
     213: ldc           #156                // String  -c
     215: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     218: pop
     219: aload         9
     221: lload         4
     223: invokevirtual #157                // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     226: pop
     227: aload         9
     229: ldc           #158                // String  >>
     231: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     234: pop
     235: aload         9
     237: aload         8
     239: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     242: pop
     243: aload         9
     245: ldc           #160                // String  ; exit $PIPESTATUS
     247: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     250: pop
     251: goto          286
     254: aload         9
     256: ldc           #161                // String  1>>
     258: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     261: pop
     262: aload         9
     264: aload         7
     266: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     269: pop
     270: aload         9
     272: ldc           #162                // String  2>>
     274: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     277: pop
     278: aload         9
     280: aload         8
     282: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     285: pop
     286: aload         9
     288: invokevirtual #163                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     291: areturn

  static java.lang.String buildDebugScriptCommandLine(java.util.List<java.lang.String>, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #152                // String exec
      11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: iconst_1
      16: istore_3
      17: aload_0
      18: invokeinterface #164,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #165,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          90
      35: aload         4
      37: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #167                // class java/lang/String
      45: astore        5
      47: iload_3
      48: ifeq          73
      51: aload_2
      52: new           #7                  // class java/io/File
      55: dup
      56: aload         5
      58: invokespecial #168                // Method java/io/File."<init>":(Ljava/lang/String;)V
      61: invokestatic  #140                // Method org/apache/hadoop/fs/FileUtil.makeShellPath:(Ljava/io/File;)Ljava/lang/String;
      64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: iconst_0
      69: istore_3
      70: goto          80
      73: aload_2
      74: aload         5
      76: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_2
      81: ldc           #50                 // String
      83: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: pop
      87: goto          25
      90: aload_2
      91: ldc           #153                // String  < /dev/null
      93: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: aload_2
      98: ldc           #169                // String  >
     100: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_2
     105: aload_1
     106: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: pop
     110: aload_2
     111: ldc           #170                // String  2>&1
     113: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: pop
     117: aload_2
     118: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: areturn

  public static java.lang.String addCommand(java.util.List<java.lang.String>, boolean) throws java.io.IOException;
    Code:
       0: new           #141                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #142                // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #164,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #165,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          92
      24: aload_3
      25: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #167                // class java/lang/String
      33: astore        4
      35: aload_2
      36: bipush        39
      38: invokevirtual #171                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      41: pop
      42: iload_1
      43: ifeq          68
      46: aload_2
      47: new           #7                  // class java/io/File
      50: dup
      51: aload         4
      53: invokespecial #168                // Method java/io/File."<init>":(Ljava/lang/String;)V
      56: invokestatic  #140                // Method org/apache/hadoop/fs/FileUtil.makeShellPath:(Ljava/io/File;)Ljava/lang/String;
      59: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: pop
      63: iconst_0
      64: istore_1
      65: goto          75
      68: aload_2
      69: aload         4
      71: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      74: pop
      75: aload_2
      76: bipush        39
      78: invokevirtual #171                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      81: pop
      82: aload_2
      83: ldc           #50                 // String
      85: invokevirtual #145                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      88: pop
      89: goto          15
      92: aload_2
      93: invokevirtual #163                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      96: areturn

  static java.io.File getUserLogDir();
    Code:
       0: getstatic     #172                // Field LOG_DIR:Ljava/io/File;
       3: invokevirtual #173                // Method java/io/File.exists:()Z
       6: ifne          30
       9: getstatic     #172                // Field LOG_DIR:Ljava/io/File;
      12: invokevirtual #174                // Method java/io/File.mkdirs:()Z
      15: istore_0
      16: iload_0
      17: ifne          30
      20: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      23: ldc           #175                // String mkdirs failed. Ignoring.
      25: invokeinterface #176,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      30: getstatic     #172                // Field LOG_DIR:Ljava/io/File;
      33: areturn

  public static java.io.File getJobDir(org.apache.hadoop.mapreduce.JobID);
    Code:
       0: new           #7                  // class java/io/File
       3: dup
       4: invokestatic  #177                // Method getUserLogDir:()Ljava/io/File;
       7: aload_0
       8: invokevirtual #178                // Method org/apache/hadoop/mapreduce/JobID.toString:()Ljava/lang/String;
      11: invokespecial #11                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      14: areturn

  static org.apache.hadoop.mapred.TaskLog$LogFileDetail access$100(org.apache.hadoop.mapred.TaskAttemptID, org.apache.hadoop.mapred.TaskLog$LogName, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1                  // Method getLogFileDetail:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskLog$LogName;Z)Lorg/apache/hadoop/mapred/TaskLog$LogFileDetail;
       6: areturn

  static {};
    Code:
       0: ldc           #135                // class org/apache/hadoop/mapred/TaskLog
       2: invokestatic  #179                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
       8: new           #7                  // class java/io/File
      11: dup
      12: invokestatic  #180                // Method getBaseLogDir:()Ljava/lang/String;
      15: ldc           #181                // String userlogs
      17: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: invokevirtual #182                // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      23: putstatic     #172                // Field LOG_DIR:Ljava/io/File;
      26: aconst_null
      27: putstatic     #88                 // Field localFS:Lorg/apache/hadoop/fs/LocalFileSystem;
      30: aconst_null
      31: putstatic     #69                 // Field currentTaskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      34: return
}
