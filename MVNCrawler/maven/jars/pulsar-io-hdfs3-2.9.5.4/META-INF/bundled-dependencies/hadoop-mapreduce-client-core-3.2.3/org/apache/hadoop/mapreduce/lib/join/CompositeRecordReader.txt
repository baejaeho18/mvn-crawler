Compiled from "CompositeRecordReader.java"
public abstract class org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader<K extends org.apache.hadoop.io.WritableComparable<?>, V extends org.apache.hadoop.io.Writable, X extends org.apache.hadoop.io.Writable> extends org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, X> implements org.apache.hadoop.conf.Configurable {
  private int id;

  protected org.apache.hadoop.conf.Configuration conf;

  private final org.apache.hadoop.mapreduce.lib.join.ResetableIterator<X> EMPTY;

  private org.apache.hadoop.io.WritableComparator cmp;

  protected java.lang.Class<? extends org.apache.hadoop.io.WritableComparable> keyclass;

  private java.util.PriorityQueue<org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, ?>> q;

  protected final org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader<K, V, X>.JoinCollector jc;

  protected final org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, ? extends V>[] kids;

  protected K key;

  protected X value;

  static final boolean $assertionsDisabled;

  protected abstract boolean combine(java.lang.Object[], org.apache.hadoop.mapreduce.lib.join.TupleWritable);

  public org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader(int, int, java.lang.Class<? extends org.apache.hadoop.io.WritableComparator>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader."<init>":()V
       4: aload_0
       5: new           #4                  // class org/apache/hadoop/mapreduce/lib/join/ResetableIterator$EMPTY
       8: dup
       9: invokespecial #5                  // Method org/apache/hadoop/mapreduce/lib/join/ResetableIterator$EMPTY."<init>":()V
      12: putfield      #1                  // Field EMPTY:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
      15: aload_0
      16: aconst_null
      17: putfield      #6                  // Field keyclass:Ljava/lang/Class;
      20: getstatic     #7                  // Field $assertionsDisabled:Z
      23: ifne          40
      26: iload_2
      27: ifgt          40
      30: new           #8                  // class java/lang/AssertionError
      33: dup
      34: ldc           #9                  // String Invalid capacity
      36: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #11                 // Field id:I
      45: aconst_null
      46: aload_3
      47: if_acmpeq     82
      50: aload_0
      51: aload_3
      52: aconst_null
      53: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      56: checkcast     #13                 // class org/apache/hadoop/io/WritableComparator
      59: putfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      62: aload_0
      63: new           #14                 // class java/util/PriorityQueue
      66: dup
      67: iconst_3
      68: new           #15                 // class org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$1
      71: dup
      72: aload_0
      73: invokespecial #16                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$1."<init>":(Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader;)V
      76: invokespecial #17                 // Method java/util/PriorityQueue."<init>":(ILjava/util/Comparator;)V
      79: putfield      #18                 // Field q:Ljava/util/PriorityQueue;
      82: aload_0
      83: new           #19                 // class org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector
      86: dup
      87: aload_0
      88: iload_2
      89: invokespecial #20                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector."<init>":(Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader;I)V
      92: putfield      #21                 // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      95: aload_0
      96: iload_2
      97: anewarray     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
     100: putfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
     103: return

  public void initialize(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
       4: ifnull        186
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_0
      11: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
      14: arraylength
      15: if_icmpge     186
      18: aload_0
      19: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
      22: iload_3
      23: aaload
      24: aload_1
      25: checkcast     #24                 // class org/apache/hadoop/mapreduce/lib/join/CompositeInputSplit
      28: iload_3
      29: invokevirtual #25                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeInputSplit.get:(I)Lorg/apache/hadoop/mapreduce/InputSplit;
      32: aload_2
      33: invokevirtual #26                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.initialize:(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
      36: aload_0
      37: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
      40: iload_3
      41: aaload
      42: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:()Lorg/apache/hadoop/io/WritableComparable;
      45: ifnonnull     51
      48: goto          180
      51: aload_0
      52: getfield      #6                  // Field keyclass:Ljava/lang/Class;
      55: ifnonnull     79
      58: aload_0
      59: aload_0
      60: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
      63: iload_3
      64: aaload
      65: invokevirtual #28                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.createKey:()Lorg/apache/hadoop/io/WritableComparable;
      68: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      71: ldc           #30                 // class org/apache/hadoop/io/WritableComparable
      73: invokevirtual #31                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      76: putfield      #6                  // Field keyclass:Ljava/lang/Class;
      79: aconst_null
      80: aload_0
      81: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      84: if_acmpne     122
      87: aload_0
      88: aload_0
      89: getfield      #6                  // Field keyclass:Ljava/lang/Class;
      92: aload_0
      93: getfield      #32                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      96: invokestatic  #33                 // Method org/apache/hadoop/io/WritableComparator.get:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/WritableComparator;
      99: putfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
     102: aload_0
     103: new           #14                 // class java/util/PriorityQueue
     106: dup
     107: iconst_3
     108: new           #34                 // class org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$2
     111: dup
     112: aload_0
     113: invokespecial #35                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$2."<init>":(Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader;)V
     116: invokespecial #17                 // Method java/util/PriorityQueue."<init>":(ILjava/util/Comparator;)V
     119: putfield      #18                 // Field q:Ljava/util/PriorityQueue;
     122: aload_0
     123: getfield      #6                  // Field keyclass:Ljava/lang/Class;
     126: aload_0
     127: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
     130: iload_3
     131: aaload
     132: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:()Lorg/apache/hadoop/io/WritableComparable;
     135: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     138: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     141: ifne          154
     144: new           #37                 // class java/lang/ClassCastException
     147: dup
     148: ldc           #38                 // String Child key classes fail to agree
     150: invokespecial #39                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
     153: athrow
     154: aload_0
     155: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
     158: iload_3
     159: aaload
     160: invokevirtual #40                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.hasNext:()Z
     163: ifeq          180
     166: aload_0
     167: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
     170: aload_0
     171: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
     174: iload_3
     175: aaload
     176: invokevirtual #41                 // Method java/util/PriorityQueue.add:(Ljava/lang/Object;)Z
     179: pop
     180: iinc          3, 1
     183: goto          9
     186: return

  public int id();
    Code:
       0: aload_0
       1: getfield      #11                 // Field id:I
       4: ireturn

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #32                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  protected java.util.PriorityQueue<org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, ?>> getRecordReaderQueue();
    Code:
       0: aload_0
       1: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
       4: areturn

  protected org.apache.hadoop.io.WritableComparator getComparator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
       4: areturn

  public void add(org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, ? extends V>) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
       4: aload_1
       5: invokevirtual #42                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.id:()I
       8: aload_1
       9: aastore
      10: return

  public K key();
    Code:
       0: aload_0
       1: getfield      #21                 // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       4: invokevirtual #43                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.hasNext:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #21                 // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      14: invokevirtual #44                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.key:()Lorg/apache/hadoop/io/WritableComparable;
      17: areturn
      18: aload_0
      19: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      22: invokevirtual #45                 // Method java/util/PriorityQueue.isEmpty:()Z
      25: ifne          42
      28: aload_0
      29: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      32: invokevirtual #46                 // Method java/util/PriorityQueue.peek:()Ljava/lang/Object;
      35: checkcast     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
      38: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:()Lorg/apache/hadoop/io/WritableComparable;
      41: areturn
      42: aconst_null
      43: areturn

  public void key(K) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: aload_0
       5: invokevirtual #47                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
       8: aload_1
       9: invokestatic  #48                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public K getCurrentKey();
    Code:
       0: aload_0
       1: getfield      #49                 // Field key:Lorg/apache/hadoop/io/WritableComparable;
       4: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       4: invokevirtual #43                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.hasNext:()Z
       7: ifne          20
      10: aload_0
      11: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      14: invokevirtual #45                 // Method java/util/PriorityQueue.isEmpty:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void skip(K) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: new           #50                 // class java/util/ArrayList
       3: dup
       4: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      12: invokevirtual #45                 // Method java/util/PriorityQueue.isEmpty:()Z
      15: ifne          57
      18: aload_0
      19: getfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      22: aload_0
      23: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      26: invokevirtual #46                 // Method java/util/PriorityQueue.peek:()Ljava/lang/Object;
      29: checkcast     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
      32: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:()Lorg/apache/hadoop/io/WritableComparable;
      35: aload_1
      36: invokevirtual #52                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      39: ifgt          57
      42: aload_2
      43: aload_0
      44: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      47: invokevirtual #53                 // Method java/util/PriorityQueue.poll:()Ljava/lang/Object;
      50: invokevirtual #54                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          8
      57: aload_2
      58: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      61: astore_3
      62: aload_3
      63: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          109
      71: aload_3
      72: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
      80: astore        4
      82: aload         4
      84: aload_1
      85: invokevirtual #58                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.skip:(Lorg/apache/hadoop/io/WritableComparable;)V
      88: aload         4
      90: invokevirtual #40                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.hasNext:()Z
      93: ifeq          106
      96: aload_0
      97: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
     100: aload         4
     102: invokevirtual #41                 // Method java/util/PriorityQueue.add:(Ljava/lang/Object;)Z
     105: pop
     106: goto          62
     109: return

  protected abstract org.apache.hadoop.mapreduce.lib.join.ResetableIterator<X> getDelegate();

  public void accept(org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader$JoinCollector, K) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method hasNext:()Z
       4: ifeq          44
       7: iconst_0
       8: aload_0
       9: getfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      12: aload_2
      13: aload_0
      14: invokevirtual #47                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
      17: invokevirtual #52                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      20: if_icmpne     44
      23: aload_0
      24: aload_0
      25: invokevirtual #60                 // Method createKey:()Lorg/apache/hadoop/io/WritableComparable;
      28: invokevirtual #61                 // Method fillJoinCollector:(Lorg/apache/hadoop/io/WritableComparable;)V
      31: aload_1
      32: aload_0
      33: getfield      #11                 // Field id:I
      36: aload_0
      37: invokevirtual #62                 // Method getDelegate:()Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
      40: invokevirtual #63                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.add:(ILorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;)V
      43: return
      44: aload_1
      45: aload_0
      46: getfield      #11                 // Field id:I
      49: aload_0
      50: getfield      #1                  // Field EMPTY:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
      53: invokevirtual #63                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.add:(ILorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;)V
      56: return

  protected void fillJoinCollector(K) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
       4: invokevirtual #45                 // Method java/util/PriorityQueue.isEmpty:()Z
       7: ifne          102
      10: aload_0
      11: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      14: invokevirtual #46                 // Method java/util/PriorityQueue.peek:()Ljava/lang/Object;
      17: checkcast     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
      20: aload_1
      21: invokevirtual #64                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:(Lorg/apache/hadoop/io/WritableComparable;)V
      24: iconst_0
      25: aload_0
      26: getfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      29: aload_0
      30: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      33: invokevirtual #46                 // Method java/util/PriorityQueue.peek:()Ljava/lang/Object;
      36: checkcast     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
      39: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:()Lorg/apache/hadoop/io/WritableComparable;
      42: aload_1
      43: invokevirtual #52                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      46: if_icmpne     102
      49: aload_0
      50: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      53: invokevirtual #53                 // Method java/util/PriorityQueue.poll:()Ljava/lang/Object;
      56: checkcast     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
      59: astore_2
      60: aload_2
      61: aload_0
      62: getfield      #21                 // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      65: aload_1
      66: invokevirtual #65                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.accept:(Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;Lorg/apache/hadoop/io/WritableComparable;)V
      69: aload_2
      70: invokevirtual #40                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.hasNext:()Z
      73: ifeq          88
      76: aload_0
      77: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      80: aload_2
      81: invokevirtual #41                 // Method java/util/PriorityQueue.add:(Ljava/lang/Object;)Z
      84: pop
      85: goto          99
      88: aload_0
      89: getfield      #18                 // Field q:Ljava/util/PriorityQueue;
      92: invokevirtual #45                 // Method java/util/PriorityQueue.isEmpty:()Z
      95: ifeq          99
      98: return
      99: goto          24
     102: return

  public int compareTo(org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, ?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
       4: aload_0
       5: invokevirtual #47                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
       8: aload_1
       9: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:()Lorg/apache/hadoop/io/WritableComparable;
      12: invokevirtual #52                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      15: ireturn

  protected K createKey();
    Code:
       0: aload_0
       1: getfield      #6                  // Field keyclass:Ljava/lang/Class;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field keyclass:Ljava/lang/Class;
      11: ldc           #66                 // class org/apache/hadoop/io/NullWritable
      13: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: invokestatic  #67                 // Method org/apache/hadoop/io/NullWritable.get:()Lorg/apache/hadoop/io/NullWritable;
      22: areturn
      23: aload_0
      24: getfield      #6                  // Field keyclass:Ljava/lang/Class;
      27: aload_0
      28: invokevirtual #68                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      31: invokestatic  #12                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      34: checkcast     #30                 // class org/apache/hadoop/io/WritableComparable
      37: areturn

  protected org.apache.hadoop.mapreduce.lib.join.TupleWritable createTupleWritable();
    Code:
       0: aload_0
       1: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
       4: arraylength
       5: anewarray     #69                 // class org/apache/hadoop/io/Writable
       8: astore_1
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_1
      13: arraylength
      14: if_icmpge     35
      17: aload_1
      18: iload_2
      19: aload_0
      20: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
      23: iload_2
      24: aaload
      25: invokevirtual #70                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.createValue:()Lorg/apache/hadoop/io/Writable;
      28: aastore
      29: iinc          2, 1
      32: goto          11
      35: new           #71                 // class org/apache/hadoop/mapreduce/lib/join/TupleWritable
      38: dup
      39: aload_1
      40: invokespecial #72                 // Method org/apache/hadoop/mapreduce/lib/join/TupleWritable."<init>":([Lorg/apache/hadoop/io/Writable;)V
      43: areturn

  public X getCurrentValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #73                 // Field value:Lorg/apache/hadoop/io/Writable;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
       4: ifnull        38
       7: aload_0
       8: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
      11: astore_1
      12: aload_1
      13: arraylength
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     38
      22: aload_1
      23: iload_3
      24: aaload
      25: astore        4
      27: aload         4
      29: invokevirtual #74                 // Method org/apache/hadoop/mapreduce/RecordReader.close:()V
      32: iinc          3, 1
      35: goto          17
      38: aload_0
      39: getfield      #21                 // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      42: ifnull        52
      45: aload_0
      46: getfield      #21                 // Field jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      49: invokevirtual #75                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.close:()V
      52: return

  public float getProgress() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: fconst_1
       1: fstore_1
       2: aload_0
       3: getfield      #23                 // Field kids:[Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     41
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: fload_1
      26: aload         5
      28: invokevirtual #76                 // Method org/apache/hadoop/mapreduce/RecordReader.getProgress:()F
      31: invokestatic  #77                 // Method java/lang/Math.min:(FF)F
      34: fstore_1
      35: iinc          4, 1
      38: goto          13
      41: fload_1
      42: freturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
       5: invokevirtual #78                 // Method compareTo:(Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;)I
       8: ireturn

  public java.lang.Object getCurrentValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method getCurrentValue:()Lorg/apache/hadoop/io/Writable;
       4: areturn

  public java.lang.Object getCurrentKey() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method getCurrentKey:()Lorg/apache/hadoop/io/WritableComparable;
       4: areturn

  static org.apache.hadoop.io.WritableComparator access$000(org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
       4: areturn

  static org.apache.hadoop.mapreduce.lib.join.ResetableIterator access$100(org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader);
    Code:
       0: aload_0
       1: getfield      #1                  // Field EMPTY:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
       4: areturn

  static {};
    Code:
       0: ldc           #81                 // class org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader
       2: invokevirtual #82                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
