Compiled from "MRJobConfUtil.java"
public final class org.apache.hadoop.mapreduce.util.MRJobConfUtil {
  private static final org.slf4j.Logger LOG;

  public static final java.lang.String REDACTION_REPLACEMENT_VAL;

  public static final float TASK_REPORT_INTERVAL_TO_TIMEOUT_RATIO;

  public static final double PROGRESS_MIN_DELTA_FACTOR;

  private static volatile java.lang.Double progressMinDeltaThreshold;

  private static volatile java.lang.Long progressMaxWaitDeltaTimeThreshold;

  private static final java.lang.String TEST_JVM_SECURITY_EGD_OPT;

  public static void redact(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #2                  // String mapreduce.job.redacted-properties
       3: invokevirtual #3                  // Method org/apache/hadoop/conf/Configuration.getTrimmedStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
       6: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_1
      12: aload_1
      13: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          41
      21: aload_1
      22: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #7                  // class java/lang/String
      30: astore_2
      31: aload_0
      32: aload_2
      33: ldc           #9                  // String *********(redacted)
      35: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      38: goto          12
      41: return

  private org.apache.hadoop.mapreduce.util.MRJobConfUtil();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: return

  public static long getTaskProgressReportInterval(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #12                 // String mapreduce.task.timeout
       3: ldc2_w        #13                 // long 300000l
       6: invokevirtual #15                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
       9: lstore_1
      10: aload_0
      11: ldc           #16                 // String mapreduce.task.progress-report.interval
      13: ldc           #17                 // float 0.01f
      15: lload_1
      16: l2f
      17: fmul
      18: f2l
      19: invokevirtual #15                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      22: lreturn

  public static void setTaskLogProgressDeltaThresholds(org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #18                 // Field progressMinDeltaThreshold:Ljava/lang/Double;
       3: ifnonnull     29
       6: new           #19                 // class java/lang/Double
       9: dup
      10: ldc2_w        #20                 // double 100.0d
      13: aload_0
      14: ldc           #22                 // String mapreduce.task.log.progress.delta.threshold
      16: ldc2_w        #23                 // double 0.05d
      19: invokevirtual #25                 // Method org/apache/hadoop/conf/Configuration.getDouble:(Ljava/lang/String;D)D
      22: dmul
      23: invokespecial #26                 // Method java/lang/Double."<init>":(D)V
      26: putstatic     #18                 // Field progressMinDeltaThreshold:Ljava/lang/Double;
      29: getstatic     #27                 // Field progressMaxWaitDeltaTimeThreshold:Ljava/lang/Long;
      32: ifnonnull     56
      35: getstatic     #28                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      38: aload_0
      39: ldc           #29                 // String mapreduce.task.log.progress.wait.interval-seconds
      41: ldc2_w        #30                 // long 60l
      44: invokevirtual #15                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      47: invokevirtual #32                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      50: invokestatic  #33                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: putstatic     #27                 // Field progressMaxWaitDeltaTimeThreshold:Ljava/lang/Long;
      56: return

  public static double getTaskProgressMinDeltaThreshold();
    Code:
       0: getstatic     #18                 // Field progressMinDeltaThreshold:Ljava/lang/Double;
       3: ifnonnull     10
       6: ldc2_w        #34                 // double 5.0d
       9: dreturn
      10: getstatic     #18                 // Field progressMinDeltaThreshold:Ljava/lang/Double;
      13: invokevirtual #36                 // Method java/lang/Double.doubleValue:()D
      16: dreturn

  public static long getTaskProgressWaitDeltaTimeThreshold();
    Code:
       0: getstatic     #27                 // Field progressMaxWaitDeltaTimeThreshold:Ljava/lang/Long;
       3: ifnonnull     16
       6: getstatic     #28                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       9: ldc2_w        #30                 // long 60l
      12: invokevirtual #32                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      15: lreturn
      16: getstatic     #27                 // Field progressMaxWaitDeltaTimeThreshold:Ljava/lang/Long;
      19: invokevirtual #37                 // Method java/lang/Long.longValue:()J
      22: lreturn

  public static double convertTaskProgressToFactor(float);
    Code:
       0: fload_0
       1: f2d
       2: ldc2_w        #20                 // double 100.0d
       5: dmul
       6: invokestatic  #38                 // Method java/lang/Math.floor:(D)D
       9: dreturn

  public static org.apache.hadoop.conf.Configuration initEncryptedIntermediateConfigsForTesting(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #39                 // class org/apache/hadoop/conf/Configuration
       7: dup
       8: invokespecial #40                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
      11: goto          15
      14: aload_0
      15: astore_1
      16: ldc           #41                 // String -Djava.security.egd=file:/dev/./urandom
      18: ldc           #42                 // String
      20: invokevirtual #43                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      23: aload_1
      24: ldc           #44                 // String mapred.child.java.opts
      26: ldc           #42                 // String
      28: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      31: invokevirtual #43                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      34: astore_2
      35: aload_1
      36: ldc           #46                 // String yarn.app.mapreduce.am.admin-command-opts
      38: ldc           #41                 // String -Djava.security.egd=file:/dev/./urandom
      40: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      43: aload_1
      44: ldc           #44                 // String mapred.child.java.opts
      46: aload_2
      47: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      50: aload_1
      51: ldc           #47                 // String mapreduce.job.encrypted-intermediate-data
      53: iconst_1
      54: invokevirtual #48                 // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
      57: aload_1
      58: areturn

  public static org.apache.hadoop.conf.Configuration setLocalDirectoriesConfigForTesting(org.apache.hadoop.conf.Configuration, java.io.File);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #39                 // class org/apache/hadoop/conf/Configuration
       7: dup
       8: invokespecial #40                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
      11: goto          15
      14: aload_0
      15: astore_2
      16: new           #49                 // class java/io/File
      19: dup
      20: aload_1
      21: ldc           #50                 // String hadoop-dir
      23: invokespecial #51                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #52                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      31: invokevirtual #53                 // Method java/io/File.mkdirs:()Z
      34: ifne          51
      37: getstatic     #54                 // Field LOG:Lorg/slf4j/Logger;
      40: ldc           #55                 // String {} directory already exists
      42: aload_3
      43: invokevirtual #56                 // Method java/io/File.getPath:()Ljava/lang/String;
      46: invokeinterface #57,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      51: new           #58                 // class org/apache/hadoop/fs/Path
      54: dup
      55: aload_3
      56: invokevirtual #56                 // Method java/io/File.getPath:()Ljava/lang/String;
      59: invokespecial #59                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      62: astore        4
      64: new           #58                 // class org/apache/hadoop/fs/Path
      67: dup
      68: aload         4
      70: ldc           #60                 // String system
      72: invokespecial #61                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      75: astore        5
      77: new           #58                 // class org/apache/hadoop/fs/Path
      80: dup
      81: aload         4
      83: ldc           #62                 // String tmp/staging
      85: invokespecial #61                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      88: astore        6
      90: aload_2
      91: ldc           #63                 // String mapreduce.jobtracker.staging.root.dir
      93: aload         6
      95: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      98: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
     101: aload_2
     102: ldc           #65                 // String mapreduce.jobtracker.system.dir
     104: aload         5
     106: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     109: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
     112: aload_2
     113: ldc           #66                 // String mapreduce.cluster.temp.dir
     115: aload         4
     117: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     120: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
     123: aload_2
     124: ldc           #67                 // String mapreduce.cluster.local.dir
     126: new           #58                 // class org/apache/hadoop/fs/Path
     129: dup
     130: aload         4
     132: ldc           #68                 // String local
     134: invokespecial #61                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     137: invokevirtual #64                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     140: invokevirtual #10                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
     143: aload_2
     144: areturn

  static {};
    Code:
       0: ldc           #8                  // class org/apache/hadoop/mapreduce/util/MRJobConfUtil
       2: invokestatic  #69                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #54                 // Field LOG:Lorg/slf4j/Logger;
       8: aconst_null
       9: putstatic     #18                 // Field progressMinDeltaThreshold:Ljava/lang/Double;
      12: aconst_null
      13: putstatic     #27                 // Field progressMaxWaitDeltaTimeThreshold:Ljava/lang/Long;
      16: return
}
