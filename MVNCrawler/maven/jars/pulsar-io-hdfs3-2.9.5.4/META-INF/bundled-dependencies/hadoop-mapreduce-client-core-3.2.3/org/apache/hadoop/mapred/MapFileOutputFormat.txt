Compiled from "MapFileOutputFormat.java"
public class org.apache.hadoop.mapred.MapFileOutputFormat extends org.apache.hadoop.mapred.FileOutputFormat<org.apache.hadoop.io.WritableComparable, org.apache.hadoop.io.Writable> {
  public org.apache.hadoop.mapred.MapFileOutputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapred/FileOutputFormat."<init>":()V
       4: return

  public org.apache.hadoop.mapred.RecordWriter<org.apache.hadoop.io.WritableComparable, org.apache.hadoop.io.Writable> getRecordWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.mapred.JobConf, java.lang.String, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_3
       2: invokestatic  #2                  // Method org/apache/hadoop/mapred/FileOutputFormat.getTaskOutputPath:(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       5: astore        5
       7: aload         5
       9: aload_2
      10: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      13: astore        6
      15: aconst_null
      16: astore        7
      18: getstatic     #4                  // Field org/apache/hadoop/io/SequenceFile$CompressionType.NONE:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      21: astore        8
      23: aload_2
      24: invokestatic  #5                  // Method getCompressOutput:(Lorg/apache/hadoop/mapred/JobConf;)Z
      27: ifeq          55
      30: aload_2
      31: invokestatic  #6                  // Method org/apache/hadoop/mapred/SequenceFileOutputFormat.getOutputCompressionType:(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      34: astore        8
      36: aload_2
      37: ldc           #7                  // class org/apache/hadoop/io/compress/DefaultCodec
      39: invokestatic  #8                  // Method getOutputCompressorClass:(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)Ljava/lang/Class;
      42: astore        9
      44: aload         9
      46: aload_2
      47: invokestatic  #9                  // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      50: checkcast     #10                 // class org/apache/hadoop/io/compress/CompressionCodec
      53: astore        7
      55: new           #11                 // class org/apache/hadoop/io/MapFile$Writer
      58: dup
      59: aload_2
      60: aload         6
      62: aload         5
      64: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      67: aload_2
      68: invokevirtual #13                 // Method org/apache/hadoop/mapred/JobConf.getOutputKeyClass:()Ljava/lang/Class;
      71: ldc           #14                 // class org/apache/hadoop/io/WritableComparable
      73: invokevirtual #15                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      76: aload_2
      77: invokevirtual #16                 // Method org/apache/hadoop/mapred/JobConf.getOutputValueClass:()Ljava/lang/Class;
      80: ldc           #17                 // class org/apache/hadoop/io/Writable
      82: invokevirtual #15                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      85: aload         8
      87: aload         7
      89: aload         4
      91: invokespecial #18                 // Method org/apache/hadoop/io/MapFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)V
      94: astore        9
      96: new           #19                 // class org/apache/hadoop/mapred/MapFileOutputFormat$1
      99: dup
     100: aload_0
     101: aload         9
     103: invokespecial #20                 // Method org/apache/hadoop/mapred/MapFileOutputFormat$1."<init>":(Lorg/apache/hadoop/mapred/MapFileOutputFormat;Lorg/apache/hadoop/io/MapFile$Writer;)V
     106: areturn

  public static org.apache.hadoop.io.MapFile$Reader[] getReaders(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #21                 // Method org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.getReaders:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/io/MapFile$Reader;
       5: areturn

  public static <K extends org.apache.hadoop.io.WritableComparable, V extends org.apache.hadoop.io.Writable> org.apache.hadoop.io.Writable getEntry(org.apache.hadoop.io.MapFile$Reader[], org.apache.hadoop.mapred.Partitioner<K, V>, K, V) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: istore        4
       4: iload         4
       6: iconst_1
       7: if_icmpgt     16
      10: iconst_0
      11: istore        5
      13: goto          28
      16: aload_1
      17: aload_2
      18: aload_3
      19: aload_0
      20: arraylength
      21: invokeinterface #22,  4           // InterfaceMethod org/apache/hadoop/mapred/Partitioner.getPartition:(Ljava/lang/Object;Ljava/lang/Object;I)I
      26: istore        5
      28: aload_0
      29: iload         5
      31: aaload
      32: aload_2
      33: aload_3
      34: invokevirtual #23                 // Method org/apache/hadoop/io/MapFile$Reader.get:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
      37: areturn
}
