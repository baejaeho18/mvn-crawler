Compiled from "MultithreadedMapRunner.java"
class org.apache.hadoop.mapred.lib.MultithreadedMapRunner$BlockingArrayQueue extends java.util.concurrent.ArrayBlockingQueue<java.lang.Runnable> {
  private static final long serialVersionUID;

  public org.apache.hadoop.mapred.lib.MultithreadedMapRunner$BlockingArrayQueue(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
       5: return

  public boolean offer(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method add:(Ljava/lang/Runnable;)Z
       5: ireturn

  public boolean add(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method put:(Ljava/lang/Object;)V
       5: goto          15
       8: astore_2
       9: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      12: invokevirtual #6                  // Method java/lang/Thread.interrupt:()V
      15: iconst_1
      16: ireturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/InterruptedException

  public boolean offer(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/Runnable
       5: invokevirtual #8                  // Method offer:(Ljava/lang/Runnable;)Z
       8: ireturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/Runnable
       5: invokevirtual #2                  // Method add:(Ljava/lang/Runnable;)Z
       8: ireturn
}
