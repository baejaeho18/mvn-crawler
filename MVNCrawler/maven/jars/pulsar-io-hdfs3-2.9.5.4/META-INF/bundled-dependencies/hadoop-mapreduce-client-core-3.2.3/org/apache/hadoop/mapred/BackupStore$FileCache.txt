Compiled from "BackupStore.java"
class org.apache.hadoop.mapred.BackupStore$FileCache {
  private org.apache.hadoop.fs.LocalDirAllocator lDirAlloc;

  private final org.apache.hadoop.conf.Configuration conf;

  private final org.apache.hadoop.fs.FileSystem fs;

  private boolean isActive;

  private org.apache.hadoop.fs.Path file;

  private org.apache.hadoop.mapred.IFile$Writer<K, V> writer;

  private int spillNumber;

  static final boolean $assertionsDisabled;

  final org.apache.hadoop.mapred.BackupStore this$0;

  public org.apache.hadoop.mapred.BackupStore$FileCache(org.apache.hadoop.mapred.BackupStore, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/hadoop/mapred/BackupStore;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field isActive:Z
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field file:Lorg/apache/hadoop/fs/Path;
      19: aload_0
      20: aconst_null
      21: putfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field spillNumber:I
      29: aload_0
      30: aload_2
      31: putfield      #7                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      34: aload_0
      35: aload_2
      36: invokestatic  #8                  // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      39: putfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      42: aload_0
      43: new           #10                 // class org/apache/hadoop/fs/LocalDirAllocator
      46: dup
      47: ldc           #12                 // String mapreduce.cluster.local.dir
      49: invokespecial #13                 // Method org/apache/hadoop/fs/LocalDirAllocator."<init>":(Ljava/lang/String;)V
      52: putfield      #14                 // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
      55: return

  void write(org.apache.hadoop.io.DataInputBuffer, org.apache.hadoop.io.DataInputBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
       4: ifnonnull     36
       7: getstatic     #15                 // Field $assertionsDisabled:Z
      10: ifne          28
      13: aload_0
      14: getfield      #6                  // Field spillNumber:I
      17: ifne          28
      20: new           #16                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_0
      30: invokespecial #18                 // Method createSpillFile:()Lorg/apache/hadoop/mapred/IFile$Writer;
      33: putfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      36: aload_0
      37: getfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      40: aload_1
      41: aload_2
      42: invokevirtual #19                 // Method org/apache/hadoop/mapred/IFile$Writer.append:(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/DataInputBuffer;)V
      45: invokestatic  #20                 // Method org/apache/hadoop/mapred/BackupStore.access$400:()Lorg/slf4j/Logger;
      48: new           #21                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #23                 // String ID:
      57: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #3                  // Field this$0:Lorg/apache/hadoop/mapred/BackupStore;
      64: getfield      #25                 // Field org/apache/hadoop/mapred/BackupStore.segmentList:Ljava/util/List;
      67: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      72: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      75: ldc           #28                 // String  WRITE TO DISK
      77: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      88: return

  void reinitialize();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #6                  // Field spillNumber:I
       5: aload_0
       6: aconst_null
       7: putfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      10: aload_0
      11: iconst_0
      12: putfield      #2                  // Field isActive:Z
      15: return

  void activate() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field isActive:Z
       5: aload_0
       6: aload_0
       7: invokespecial #18                 // Method createSpillFile:()Lorg/apache/hadoop/mapred/IFile$Writer;
      10: putfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      13: return

  void createInDiskSegment() throws java.io.IOException;
    Code:
       0: getstatic     #15                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      10: ifnonnull     21
      13: new           #16                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      25: invokevirtual #31                 // Method org/apache/hadoop/mapred/IFile$Writer.close:()V
      28: new           #32                 // class org/apache/hadoop/mapred/Merger$Segment
      31: dup
      32: aload_0
      33: getfield      #7                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      36: aload_0
      37: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      40: aload_0
      41: getfield      #5                  // Field file:Lorg/apache/hadoop/fs/Path;
      44: aconst_null
      45: iconst_1
      46: invokespecial #33                 // Method org/apache/hadoop/mapred/Merger$Segment."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/io/compress/CompressionCodec;Z)V
      49: astore_1
      50: aload_0
      51: aconst_null
      52: putfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
      55: aload_0
      56: getfield      #3                  // Field this$0:Lorg/apache/hadoop/mapred/BackupStore;
      59: getfield      #25                 // Field org/apache/hadoop/mapred/BackupStore.segmentList:Ljava/util/List;
      62: aload_1
      63: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: invokestatic  #20                 // Method org/apache/hadoop/mapred/BackupStore.access$400:()Lorg/slf4j/Logger;
      72: new           #21                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #35                 // String Disk Segment added to List. Size is
      81: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #3                  // Field this$0:Lorg/apache/hadoop/mapred/BackupStore;
      88: getfield      #25                 // Field org/apache/hadoop/mapred/BackupStore.segmentList:Ljava/util/List;
      91: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      96: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      99: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     107: return

  boolean isActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isActive:Z
       4: ireturn

  private org.apache.hadoop.mapred.IFile$Writer<K, V> createSpillFile() throws java.io.IOException;
    Code:
       0: new           #36                 // class org/apache/hadoop/fs/Path
       3: dup
       4: new           #21                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #38                 // String output/backup_
      13: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #3                  // Field this$0:Lorg/apache/hadoop/mapred/BackupStore;
      20: invokestatic  #39                 // Method org/apache/hadoop/mapred/BackupStore.access$600:(Lorg/apache/hadoop/mapred/BackupStore;)Lorg/apache/hadoop/mapreduce/TaskAttemptID;
      23: invokevirtual #40                 // Method org/apache/hadoop/mapreduce/TaskAttemptID.getId:()I
      26: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #41                 // String _
      31: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: dup
      36: getfield      #6                  // Field spillNumber:I
      39: dup_x1
      40: iconst_1
      41: iadd
      42: putfield      #6                  // Field spillNumber:I
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #42                 // String .out
      50: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #43                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      59: astore_1
      60: invokestatic  #20                 // Method org/apache/hadoop/mapred/BackupStore.access$400:()Lorg/slf4j/Logger;
      63: new           #21                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #44                 // String Created file:
      72: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      87: aload_0
      88: aload_0
      89: getfield      #14                 // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
      92: aload_1
      93: invokevirtual #47                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      96: invokevirtual #48                 // Method java/net/URI.getPath:()Ljava/lang/String;
      99: ldc2_w        #49                 // long -1l
     102: aload_0
     103: getfield      #7                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     106: invokevirtual #51                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathForWrite:(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
     109: putfield      #5                  // Field file:Lorg/apache/hadoop/fs/Path;
     112: aload_0
     113: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     116: aload_0
     117: getfield      #5                  // Field file:Lorg/apache/hadoop/fs/Path;
     120: invokevirtual #52                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
     123: astore_2
     124: aload_0
     125: getfield      #7                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     128: aload_2
     129: aload_1
     130: invokestatic  #53                 // Method org/apache/hadoop/mapreduce/security/IntermediateEncryptedStream.wrapIfNecessary:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
     133: astore_2
     134: new           #54                 // class org/apache/hadoop/mapred/IFile$Writer
     137: dup
     138: aload_0
     139: getfield      #7                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     142: aload_2
     143: aconst_null
     144: aconst_null
     145: aconst_null
     146: aconst_null
     147: iconst_1
     148: invokespecial #55                 // Method org/apache/hadoop/mapred/IFile$Writer."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/mapred/Counters$Counter;Z)V
     151: areturn

  static boolean access$000(org.apache.hadoop.mapred.BackupStore$FileCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field isActive:Z
       4: ireturn

  static org.apache.hadoop.mapred.IFile$Writer access$200(org.apache.hadoop.mapred.BackupStore$FileCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field writer:Lorg/apache/hadoop/mapred/IFile$Writer;
       4: areturn

  static {};
    Code:
       0: ldc           #56                 // class org/apache/hadoop/mapred/BackupStore
       2: invokevirtual #57                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #15                 // Field $assertionsDisabled:Z
      16: return
}
