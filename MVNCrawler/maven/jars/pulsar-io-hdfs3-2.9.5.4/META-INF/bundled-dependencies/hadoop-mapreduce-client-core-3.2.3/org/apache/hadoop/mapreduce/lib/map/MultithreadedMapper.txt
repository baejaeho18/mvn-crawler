Compiled from "MultithreadedMapper.java"
public class org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper<K1, V1, K2, V2> extends org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2> {
  private static final org.slf4j.Logger LOG;

  public static java.lang.String NUM_THREADS;

  public static java.lang.String MAP_CLASS;

  private java.lang.Class<? extends org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2>> mapClass;

  private org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2>.Context outer;

  private java.util.List<org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper<K1, V1, K2, V2>.MapRunner> runners;

  public org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/mapreduce/Mapper."<init>":()V
       4: return

  public static int getNumberOfThreads(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: getstatic     #5                  // Field NUM_THREADS:Ljava/lang/String;
       9: bipush        10
      11: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      14: ireturn

  public static void setNumberOfThreads(org.apache.hadoop.mapreduce.Job, int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: getstatic     #5                  // Field NUM_THREADS:Ljava/lang/String;
       7: iload_1
       8: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
      11: return

  public static <K1, V1, K2, V2> java.lang.Class<org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2>> getMapperClass(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: getstatic     #9                  // Field MAP_CLASS:Ljava/lang/String;
       9: ldc           #10                 // class org/apache/hadoop/mapreduce/Mapper
      11: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
      14: areturn

  public static <K1, V1, K2, V2> void setMapperClass(org.apache.hadoop.mapreduce.Job, java.lang.Class<? extends org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2>>);
    Code:
       0: ldc           #12                 // class org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper
       2: aload_1
       3: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          19
       9: new           #14                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #15                 // String Can\'t have recursive MultithreadedMapper instances.
      15: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #7                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      23: getstatic     #9                  // Field MAP_CLASS:Ljava/lang/String;
      26: aload_1
      27: ldc           #10                 // class org/apache/hadoop/mapreduce/Mapper
      29: invokevirtual #17                 // Method org/apache/hadoop/conf/Configuration.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      32: return

  public void run(org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2>.Context) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field outer:Lorg/apache/hadoop/mapreduce/Mapper$Context;
       5: aload_1
       6: invokestatic  #18                 // Method getNumberOfThreads:(Lorg/apache/hadoop/mapreduce/JobContext;)I
       9: istore_2
      10: aload_0
      11: aload_1
      12: invokestatic  #19                 // Method getMapperClass:(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/Class;
      15: putfield      #1                  // Field mapClass:Ljava/lang/Class;
      18: getstatic     #20                 // Field LOG:Lorg/slf4j/Logger;
      21: invokeinterface #21,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      26: ifeq          61
      29: getstatic     #20                 // Field LOG:Lorg/slf4j/Logger;
      32: new           #22                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #24                 // String Configuring multithread runner to use
      41: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_2
      45: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #27                 // String  threads
      50: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #29,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      61: aload_0
      62: new           #30                 // class java/util/ArrayList
      65: dup
      66: iload_2
      67: invokespecial #31                 // Method java/util/ArrayList."<init>":(I)V
      70: putfield      #32                 // Field runners:Ljava/util/List;
      73: iconst_0
      74: istore_3
      75: iload_3
      76: iload_2
      77: if_icmpge     114
      80: new           #33                 // class org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$MapRunner
      83: dup
      84: aload_0
      85: aload_1
      86: invokespecial #34                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$MapRunner."<init>":(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
      89: astore        4
      91: aload         4
      93: invokevirtual #35                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$MapRunner.start:()V
      96: aload_0
      97: getfield      #32                 // Field runners:Ljava/util/List;
     100: iload_3
     101: aload         4
     103: invokeinterface #36,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
     108: iinc          3, 1
     111: goto          75
     114: iconst_0
     115: istore_3
     116: iload_3
     117: iload_2
     118: if_icmpge     197
     121: aload_0
     122: getfield      #32                 // Field runners:Ljava/util/List;
     125: iload_3
     126: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     131: checkcast     #33                 // class org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$MapRunner
     134: astore        4
     136: aload         4
     138: invokevirtual #38                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$MapRunner.join:()V
     141: aload         4
     143: invokestatic  #39                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$MapRunner.access$000:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$MapRunner;)Ljava/lang/Throwable;
     146: astore        5
     148: aload         5
     150: ifnull        191
     153: aload         5
     155: instanceof    #40                 // class java/io/IOException
     158: ifeq          167
     161: aload         5
     163: checkcast     #40                 // class java/io/IOException
     166: athrow
     167: aload         5
     169: instanceof    #41                 // class java/lang/InterruptedException
     172: ifeq          181
     175: aload         5
     177: checkcast     #41                 // class java/lang/InterruptedException
     180: athrow
     181: new           #42                 // class java/lang/RuntimeException
     184: dup
     185: aload         5
     187: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     190: athrow
     191: iinc          3, 1
     194: goto          116
     197: return

  static org.apache.hadoop.mapreduce.Mapper$Context access$100(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper);
    Code:
       0: aload_0
       1: getfield      #2                  // Field outer:Lorg/apache/hadoop/mapreduce/Mapper$Context;
       4: areturn

  static java.lang.Class access$300(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper);
    Code:
       0: aload_0
       1: getfield      #1                  // Field mapClass:Ljava/lang/Class;
       4: areturn

  static {};
    Code:
       0: ldc           #12                 // class org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper
       2: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #20                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #45                 // String mapreduce.mapper.multithreadedmapper.threads
      10: putstatic     #5                  // Field NUM_THREADS:Ljava/lang/String;
      13: ldc           #46                 // String mapreduce.mapper.multithreadedmapper.mapclass
      15: putstatic     #9                  // Field MAP_CLASS:Ljava/lang/String;
      18: return
}
