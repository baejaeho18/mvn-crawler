Compiled from "ShuffleHeader.java"
public class org.apache.hadoop.mapreduce.task.reduce.ShuffleHeader implements org.apache.hadoop.io.Writable {
  public static final java.lang.String HTTP_HEADER_NAME;

  public static final java.lang.String DEFAULT_HTTP_HEADER_NAME;

  public static final java.lang.String HTTP_HEADER_VERSION;

  public static final java.lang.String DEFAULT_HTTP_HEADER_VERSION;

  private static final int MAX_ID_LENGTH;

  java.lang.String mapId;

  long uncompressedLength;

  long compressedLength;

  int forReduce;

  public org.apache.hadoop.mapreduce.task.reduce.ShuffleHeader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.mapreduce.task.reduce.ShuffleHeader(java.lang.String, long, long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field mapId:Ljava/lang/String;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field compressedLength:J
      14: aload_0
      15: lload         4
      17: putfield      #4                  // Field uncompressedLength:J
      20: aload_0
      21: iload         6
      23: putfield      #5                  // Field forReduce:I
      26: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1000
       5: invokestatic  #7                  // Method org/apache/hadoop/io/WritableUtils.readStringSafely:(Ljava/io/DataInput;I)Ljava/lang/String;
       8: putfield      #2                  // Field mapId:Ljava/lang/String;
      11: aload_0
      12: aload_1
      13: invokestatic  #8                  // Method org/apache/hadoop/io/WritableUtils.readVLong:(Ljava/io/DataInput;)J
      16: putfield      #3                  // Field compressedLength:J
      19: aload_0
      20: aload_1
      21: invokestatic  #8                  // Method org/apache/hadoop/io/WritableUtils.readVLong:(Ljava/io/DataInput;)J
      24: putfield      #4                  // Field uncompressedLength:J
      27: aload_0
      28: aload_1
      29: invokestatic  #9                  // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      32: putfield      #5                  // Field forReduce:I
      35: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field mapId:Ljava/lang/String;
       5: invokestatic  #10                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
       8: pop
       9: aload_1
      10: aload_0
      11: getfield      #3                  // Field compressedLength:J
      14: invokestatic  #11                 // Method org/apache/hadoop/io/WritableUtils.writeVLong:(Ljava/io/DataOutput;J)V
      17: aload_1
      18: aload_0
      19: getfield      #4                  // Field uncompressedLength:J
      22: invokestatic  #11                 // Method org/apache/hadoop/io/WritableUtils.writeVLong:(Ljava/io/DataOutput;J)V
      25: aload_1
      26: aload_0
      27: getfield      #5                  // Field forReduce:I
      30: invokestatic  #12                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      33: return
}
