Compiled from "SequenceFileOutputFormat.java"
public class org.apache.hadoop.mapred.SequenceFileOutputFormat<K, V> extends org.apache.hadoop.mapred.FileOutputFormat<K, V> {
  public org.apache.hadoop.mapred.SequenceFileOutputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapred/FileOutputFormat."<init>":()V
       4: return

  public org.apache.hadoop.mapred.RecordWriter<K, V> getRecordWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.mapred.JobConf, java.lang.String, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_3
       2: invokestatic  #2                  // Method org/apache/hadoop/mapred/FileOutputFormat.getTaskOutputPath:(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       5: astore        5
       7: aload         5
       9: aload_2
      10: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      13: astore        6
      15: aconst_null
      16: astore        7
      18: getstatic     #4                  // Field org/apache/hadoop/io/SequenceFile$CompressionType.NONE:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      21: astore        8
      23: aload_2
      24: invokestatic  #5                  // Method getCompressOutput:(Lorg/apache/hadoop/mapred/JobConf;)Z
      27: ifeq          55
      30: aload_2
      31: invokestatic  #6                  // Method getOutputCompressionType:(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      34: astore        8
      36: aload_2
      37: ldc           #7                  // class org/apache/hadoop/io/compress/DefaultCodec
      39: invokestatic  #8                  // Method getOutputCompressorClass:(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)Ljava/lang/Class;
      42: astore        9
      44: aload         9
      46: aload_2
      47: invokestatic  #9                  // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      50: checkcast     #10                 // class org/apache/hadoop/io/compress/CompressionCodec
      53: astore        7
      55: aload         6
      57: aload_2
      58: aload         5
      60: aload_2
      61: invokevirtual #11                 // Method org/apache/hadoop/mapred/JobConf.getOutputKeyClass:()Ljava/lang/Class;
      64: aload_2
      65: invokevirtual #12                 // Method org/apache/hadoop/mapred/JobConf.getOutputValueClass:()Ljava/lang/Class;
      68: aload         8
      70: aload         7
      72: aload         4
      74: invokestatic  #13                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      77: astore        9
      79: new           #14                 // class org/apache/hadoop/mapred/SequenceFileOutputFormat$1
      82: dup
      83: aload_0
      84: aload         9
      86: invokespecial #15                 // Method org/apache/hadoop/mapred/SequenceFileOutputFormat$1."<init>":(Lorg/apache/hadoop/mapred/SequenceFileOutputFormat;Lorg/apache/hadoop/io/SequenceFile$Writer;)V
      89: areturn

  public static org.apache.hadoop.io.SequenceFile$Reader[] getReaders(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       5: astore_2
       6: aload_2
       7: aload_1
       8: invokevirtual #16                 // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      11: invokestatic  #17                 // Method org/apache/hadoop/fs/FileUtil.stat2Paths:([Lorg/apache/hadoop/fs/FileStatus;)[Lorg/apache/hadoop/fs/Path;
      14: astore_3
      15: aload_3
      16: invokestatic  #18                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      19: aload_3
      20: arraylength
      21: anewarray     #19                 // class org/apache/hadoop/io/SequenceFile$Reader
      24: astore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: aload_3
      32: arraylength
      33: if_icmpge     60
      36: aload         4
      38: iload         5
      40: new           #19                 // class org/apache/hadoop/io/SequenceFile$Reader
      43: dup
      44: aload_2
      45: aload_3
      46: iload         5
      48: aaload
      49: aload_0
      50: invokespecial #20                 // Method org/apache/hadoop/io/SequenceFile$Reader."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
      53: aastore
      54: iinc          5, 1
      57: goto          29
      60: aload         4
      62: areturn

  public static org.apache.hadoop.io.SequenceFile$CompressionType getOutputCompressionType(org.apache.hadoop.mapred.JobConf);
    Code:
       0: aload_0
       1: ldc           #22                 // String mapreduce.output.fileoutputformat.compress.type
       3: getstatic     #23                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.RECORD:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
       6: invokevirtual #24                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.toString:()Ljava/lang/String;
       9: invokevirtual #25                 // Method org/apache/hadoop/mapred/JobConf.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: astore_1
      13: aload_1
      14: invokestatic  #26                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      17: areturn

  public static void setOutputCompressionType(org.apache.hadoop.mapred.JobConf, org.apache.hadoop.io.SequenceFile$CompressionType);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #27                 // Method setCompressOutput:(Lorg/apache/hadoop/mapred/JobConf;Z)V
       5: aload_0
       6: ldc           #22                 // String mapreduce.output.fileoutputformat.compress.type
       8: aload_1
       9: invokevirtual #24                 // Method org/apache/hadoop/io/SequenceFile$CompressionType.toString:()Ljava/lang/String;
      12: invokevirtual #28                 // Method org/apache/hadoop/mapred/JobConf.set:(Ljava/lang/String;Ljava/lang/String;)V
      15: return
}
