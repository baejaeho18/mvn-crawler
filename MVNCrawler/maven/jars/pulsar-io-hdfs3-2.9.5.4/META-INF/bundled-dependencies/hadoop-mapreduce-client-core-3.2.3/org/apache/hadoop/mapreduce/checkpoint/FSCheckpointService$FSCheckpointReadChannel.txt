Compiled from "FSCheckpointService.java"
class org.apache.hadoop.mapreduce.checkpoint.FSCheckpointService$FSCheckpointReadChannel implements org.apache.hadoop.mapreduce.checkpoint.CheckpointService$CheckpointReadChannel {
  private boolean isOpen;

  private final java.nio.channels.ReadableByteChannel in;

  org.apache.hadoop.mapreduce.checkpoint.FSCheckpointService$FSCheckpointReadChannel(org.apache.hadoop.fs.FSDataInputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field isOpen:Z
       9: aload_0
      10: aload_1
      11: invokestatic  #3                  // Method java/nio/channels/Channels.newChannel:(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;
      14: putfield      #4                  // Field in:Ljava/nio/channels/ReadableByteChannel;
      17: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/nio/channels/ReadableByteChannel;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      10: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field isOpen:Z
       5: aload_0
       6: getfield      #4                  // Field in:Ljava/nio/channels/ReadableByteChannel;
       9: invokeinterface #6,  1            // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
      14: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isOpen:Z
       4: ireturn
}
