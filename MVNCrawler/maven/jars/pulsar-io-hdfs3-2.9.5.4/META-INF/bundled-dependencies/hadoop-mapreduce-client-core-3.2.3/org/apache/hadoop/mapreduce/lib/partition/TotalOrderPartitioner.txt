Compiled from "TotalOrderPartitioner.java"
public class org.apache.hadoop.mapreduce.lib.partition.TotalOrderPartitioner<K, V> extends org.apache.hadoop.mapreduce.Partitioner<K, V> implements org.apache.hadoop.conf.Configurable {
  private org.apache.hadoop.mapreduce.lib.partition.TotalOrderPartitioner$Node partitions;

  public static final java.lang.String DEFAULT_PATH;

  public static final java.lang.String PARTITIONER_PATH;

  public static final java.lang.String MAX_TRIE_DEPTH;

  public static final java.lang.String NATURAL_ORDER;

  org.apache.hadoop.conf.Configuration conf;

  private static final org.slf4j.Logger LOG;

  public org.apache.hadoop.mapreduce.lib.partition.TotalOrderPartitioner();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/Partitioner."<init>":()V
       4: return

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_1
       6: invokestatic  #3                  // Method getPartitionFile:(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
       9: astore_2
      10: new           #4                  // class org/apache/hadoop/fs/Path
      13: dup
      14: aload_2
      15: invokespecial #5                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      18: astore_3
      19: ldc           #7                  // String _partition.lst
      21: aload_2
      22: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          35
      28: aload_1
      29: invokestatic  #9                  // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      32: goto          40
      35: aload_3
      36: aload_1
      37: invokevirtual #10                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      40: astore        4
      42: aload_1
      43: invokestatic  #11                 // Method org/apache/hadoop/mapreduce/Job.getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/mapreduce/Job;
      46: astore        5
      48: aload         5
      50: invokevirtual #12                 // Method org/apache/hadoop/mapreduce/Job.getMapOutputKeyClass:()Ljava/lang/Class;
      53: astore        6
      55: aload_0
      56: aload         4
      58: aload_3
      59: aload         6
      61: aload_1
      62: invokespecial #13                 // Method readPartitions:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/Object;
      65: astore        7
      67: aload         7
      69: arraylength
      70: aload         5
      72: invokevirtual #14                 // Method org/apache/hadoop/mapreduce/Job.getNumReduceTasks:()I
      75: iconst_1
      76: isub
      77: if_icmpeq     90
      80: new           #15                 // class java/io/IOException
      83: dup
      84: ldc           #16                 // String Wrong number of partitions in keyset
      86: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload         5
      92: invokevirtual #18                 // Method org/apache/hadoop/mapreduce/Job.getSortComparator:()Lorg/apache/hadoop/io/RawComparator;
      95: astore        8
      97: iconst_0
      98: istore        9
     100: iload         9
     102: aload         7
     104: arraylength
     105: iconst_1
     106: isub
     107: if_icmpge     148
     110: aload         8
     112: aload         7
     114: iload         9
     116: aaload
     117: aload         7
     119: iload         9
     121: iconst_1
     122: iadd
     123: aaload
     124: invokeinterface #19,  3           // InterfaceMethod org/apache/hadoop/io/RawComparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
     129: iflt          142
     132: new           #15                 // class java/io/IOException
     135: dup
     136: ldc           #20                 // String Split points are out of order
     138: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: iinc          9, 1
     145: goto          100
     148: aload_1
     149: ldc           #21                 // String mapreduce.totalorderpartitioner.naturalorder
     151: iconst_1
     152: invokevirtual #22                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     155: istore        9
     157: iload         9
     159: ifeq          207
     162: ldc           #23                 // class org/apache/hadoop/io/BinaryComparable
     164: aload         6
     166: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     169: ifeq          207
     172: aload_0
     173: aload_0
     174: aload         7
     176: checkcast     #25                 // class "[Lorg/apache/hadoop/io/BinaryComparable;"
     179: checkcast     #25                 // class "[Lorg/apache/hadoop/io/BinaryComparable;"
     182: iconst_0
     183: aload         7
     185: arraylength
     186: iconst_0
     187: newarray       byte
     189: aload_1
     190: ldc           #26                 // String mapreduce.totalorderpartitioner.trie.maxdepth
     192: sipush        200
     195: invokevirtual #27                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     198: invokespecial #28                 // Method buildTrie:([Lorg/apache/hadoop/io/BinaryComparable;II[BI)Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
     201: putfield      #29                 // Field partitions:Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$Node;
     204: goto          223
     207: aload_0
     208: new           #30                 // class org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$BinarySearchNode
     211: dup
     212: aload_0
     213: aload         7
     215: aload         8
     217: invokespecial #31                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$BinarySearchNode."<init>":(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner;[Ljava/lang/Object;Lorg/apache/hadoop/io/RawComparator;)V
     220: putfield      #29                 // Field partitions:Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$Node;
     223: goto          238
     226: astore_2
     227: new           #32                 // class java/lang/IllegalArgumentException
     230: dup
     231: ldc           #33                 // String Can\'t read partitions file
     233: aload_2
     234: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     237: athrow
     238: return
    Exception table:
       from    to  target type
           0   223   226   Class java/io/IOException

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public int getPartition(K, V, int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field partitions:Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$Node;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$Node.findPartition:(Ljava/lang/Object;)I
      10: ireturn

  public static void setPartitionFile(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: ldc           #36                 // String mapreduce.totalorderpartitioner.path
       3: aload_1
       4: invokevirtual #37                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       7: invokevirtual #38                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public static java.lang.String getPartitionFile(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #36                 // String mapreduce.totalorderpartitioner.path
       3: ldc           #7                  // String _partition.lst
       5: invokevirtual #39                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  private org.apache.hadoop.mapreduce.lib.partition.TotalOrderPartitioner$TrieNode LeafTrieNodeFactory(int, org.apache.hadoop.io.BinaryComparable[], int, int);
    Code:
       0: iload         4
       2: iload_3
       3: isub
       4: lookupswitch  { // 2
                     0: 32
                     1: 43
               default: 55
          }
      32: new           #40                 // class org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$UnsplitTrieNode
      35: dup
      36: aload_0
      37: iload_1
      38: iload_3
      39: invokespecial #41                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$UnsplitTrieNode."<init>":(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner;II)V
      42: areturn
      43: new           #42                 // class org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$SinglySplitTrieNode
      46: dup
      47: aload_0
      48: iload_1
      49: aload_2
      50: iload_3
      51: invokespecial #43                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$SinglySplitTrieNode."<init>":(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner;I[Lorg/apache/hadoop/io/BinaryComparable;I)V
      54: areturn
      55: new           #44                 // class org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$LeafTrieNode
      58: dup
      59: aload_0
      60: iload_1
      61: aload_2
      62: iload_3
      63: iload         4
      65: invokespecial #45                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$LeafTrieNode."<init>":(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner;I[Lorg/apache/hadoop/io/BinaryComparable;II)V
      68: areturn

  private K[] readPartitions(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, java.lang.Class<K>, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: new           #46                 // class org/apache/hadoop/io/SequenceFile$Reader
       3: dup
       4: aload         4
       6: iconst_1
       7: anewarray     #47                 // class org/apache/hadoop/io/SequenceFile$Reader$Option
      10: dup
      11: iconst_0
      12: aload_2
      13: invokestatic  #48                 // Method org/apache/hadoop/io/SequenceFile$Reader.file:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Reader$Option;
      16: aastore
      17: invokespecial #49                 // Method org/apache/hadoop/io/SequenceFile$Reader."<init>":(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Reader$Option;)V
      20: astore        5
      22: new           #50                 // class java/util/ArrayList
      25: dup
      26: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
      29: astore        6
      31: aload_3
      32: aload         4
      34: invokestatic  #52                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      37: astore        7
      39: aload         5
      41: aload         7
      43: invokevirtual #53                 // Method org/apache/hadoop/io/SequenceFile$Reader.next:(Ljava/lang/Object;)Ljava/lang/Object;
      46: dup
      47: astore        7
      49: ifnull        71
      52: aload         6
      54: aload         7
      56: invokevirtual #54                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_3
      61: aload         4
      63: invokestatic  #52                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      66: astore        7
      68: goto          39
      71: aload         5
      73: invokevirtual #55                 // Method org/apache/hadoop/io/SequenceFile$Reader.close:()V
      76: aconst_null
      77: astore        5
      79: getstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
      82: iconst_1
      83: anewarray     #57                 // class java/io/Closeable
      86: dup
      87: iconst_0
      88: aload         5
      90: aastore
      91: invokestatic  #58                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      94: goto          117
      97: astore        8
      99: getstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
     102: iconst_1
     103: anewarray     #57                 // class java/io/Closeable
     106: dup
     107: iconst_0
     108: aload         5
     110: aastore
     111: invokestatic  #58                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
     114: aload         8
     116: athrow
     117: aload         6
     119: aload_3
     120: aload         6
     122: invokevirtual #59                 // Method java/util/ArrayList.size:()I
     125: invokestatic  #60                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
     128: checkcast     #61                 // class "[Ljava/lang/Object;"
     131: checkcast     #61                 // class "[Ljava/lang/Object;"
     134: invokevirtual #62                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     137: areturn
    Exception table:
       from    to  target type
          39    79    97   any
          97    99    97   any

  private org.apache.hadoop.mapreduce.lib.partition.TotalOrderPartitioner$TrieNode buildTrie(org.apache.hadoop.io.BinaryComparable[], int, int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: iload         5
       8: new           #63                 // class org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef
      11: dup
      12: aload_0
      13: invokespecial #64                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef."<init>":(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner;)V
      16: invokespecial #65                 // Method buildTrieRec:([Lorg/apache/hadoop/io/BinaryComparable;II[BILorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef;)Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
      19: areturn

  private org.apache.hadoop.mapreduce.lib.partition.TotalOrderPartitioner$TrieNode buildTrieRec(org.apache.hadoop.io.BinaryComparable[], int, int, byte[], int, org.apache.hadoop.mapreduce.lib.partition.TotalOrderPartitioner<K, V>.CarriedTrieNodeRef);
    Code:
       0: aload         4
       2: arraylength
       3: istore        7
       5: iload         7
       7: iload         5
       9: if_icmpge     19
      12: iload_2
      13: iload_3
      14: iconst_1
      15: isub
      16: if_icmplt     68
      19: iload_2
      20: iload_3
      21: if_icmpne     38
      24: aload         6
      26: getfield      #66                 // Field org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef.content:Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
      29: ifnull        38
      32: aload         6
      34: getfield      #66                 // Field org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef.content:Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
      37: areturn
      38: aload_0
      39: iload         7
      41: aload_1
      42: iload_2
      43: iload_3
      44: invokespecial #67                 // Method LeafTrieNodeFactory:(I[Lorg/apache/hadoop/io/BinaryComparable;II)Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
      47: astore        8
      49: aload         6
      51: iload_2
      52: iload_3
      53: if_icmpne     61
      56: aload         8
      58: goto          62
      61: aconst_null
      62: putfield      #66                 // Field org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef.content:Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
      65: aload         8
      67: areturn
      68: new           #68                 // class org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$InnerTrieNode
      71: dup
      72: aload_0
      73: iload         7
      75: invokespecial #69                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$InnerTrieNode."<init>":(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner;I)V
      78: astore        8
      80: aload         4
      82: aload         4
      84: arraylength
      85: iconst_1
      86: iadd
      87: invokestatic  #70                 // Method java/util/Arrays.copyOf:([BI)[B
      90: astore        9
      92: iload_2
      93: istore        10
      95: iconst_0
      96: istore        11
      98: iload         11
     100: sipush        255
     103: if_icmpge     190
     106: aload         9
     108: iload         7
     110: iload         11
     112: iconst_1
     113: iadd
     114: i2b
     115: bastore
     116: iload         10
     118: istore_2
     119: iload         10
     121: iload_3
     122: if_icmpge     150
     125: aload_1
     126: iload         10
     128: aaload
     129: aload         9
     131: iconst_0
     132: aload         9
     134: arraylength
     135: invokevirtual #71                 // Method org/apache/hadoop/io/BinaryComparable.compareTo:([BII)I
     138: iflt          144
     141: goto          150
     144: iinc          10, 1
     147: goto          119
     150: aload         9
     152: iload         7
     154: iload         11
     156: i2b
     157: bastore
     158: aload         8
     160: invokestatic  #72                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$InnerTrieNode.access$000:(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$InnerTrieNode;)[Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
     163: sipush        255
     166: iload         11
     168: iand
     169: aload_0
     170: aload_1
     171: iload_2
     172: iload         10
     174: aload         9
     176: iload         5
     178: aload         6
     180: invokespecial #65                 // Method buildTrieRec:([Lorg/apache/hadoop/io/BinaryComparable;II[BILorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef;)Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
     183: aastore
     184: iinc          11, 1
     187: goto          98
     190: aload         9
     192: iload         7
     194: iconst_m1
     195: bastore
     196: aload         8
     198: invokestatic  #72                 // Method org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$InnerTrieNode.access$000:(Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$InnerTrieNode;)[Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
     201: sipush        255
     204: aload_0
     205: aload_1
     206: iload_2
     207: iload         10
     209: aload         9
     211: iload         5
     213: aload         6
     215: invokespecial #65                 // Method buildTrieRec:([Lorg/apache/hadoop/io/BinaryComparable;II[BILorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$CarriedTrieNodeRef;)Lorg/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner$TrieNode;
     218: aastore
     219: aload         8
     221: areturn

  static {};
    Code:
       0: ldc           #6                  // class org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner
       2: invokestatic  #73                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
