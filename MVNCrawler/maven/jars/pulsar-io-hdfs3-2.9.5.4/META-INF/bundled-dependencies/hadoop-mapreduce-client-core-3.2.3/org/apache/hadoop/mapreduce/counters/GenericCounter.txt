Compiled from "GenericCounter.java"
public class org.apache.hadoop.mapreduce.counters.GenericCounter extends org.apache.hadoop.mapreduce.counters.AbstractCounter {
  private java.lang.String name;

  private java.lang.String displayName;

  private long value;

  public org.apache.hadoop.mapreduce.counters.GenericCounter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/counters/AbstractCounter."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field value:J
       9: return

  public org.apache.hadoop.mapreduce.counters.GenericCounter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/counters/AbstractCounter."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field value:J
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field displayName:Ljava/lang/String;
      19: return

  public org.apache.hadoop.mapreduce.counters.GenericCounter(java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/counters/AbstractCounter."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field value:J
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field displayName:Ljava/lang/String;
      19: aload_0
      20: lload_3
      21: putfield      #2                  // Field value:J
      24: return

  public synchronized void setDisplayName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field displayName:Ljava/lang/String;
       5: return

  public synchronized void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
       5: invokestatic  #6                  // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
       8: putfield      #3                  // Field name:Ljava/lang/String;
      11: aload_0
      12: aload_1
      13: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readBoolean:()Z
      18: ifeq          31
      21: aload_1
      22: invokestatic  #5                  // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
      25: invokestatic  #6                  // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      28: goto          35
      31: aload_0
      32: getfield      #3                  // Field name:Ljava/lang/String;
      35: putfield      #4                  // Field displayName:Ljava/lang/String;
      38: aload_0
      39: aload_1
      40: invokestatic  #8                  // Method org/apache/hadoop/io/WritableUtils.readVLong:(Ljava/io/DataInput;)J
      43: putfield      #2                  // Field value:J
      46: return

  public synchronized void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field name:Ljava/lang/String;
       5: invokestatic  #9                  // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
       8: pop
       9: aload_0
      10: getfield      #3                  // Field name:Ljava/lang/String;
      13: aload_0
      14: getfield      #4                  // Field displayName:Ljava/lang/String;
      17: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: istore_2
      29: aload_1
      30: iload_2
      31: invokeinterface #11,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      36: iload_2
      37: ifeq          49
      40: aload_1
      41: aload_0
      42: getfield      #4                  // Field displayName:Ljava/lang/String;
      45: invokestatic  #9                  // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      48: pop
      49: aload_1
      50: aload_0
      51: getfield      #2                  // Field value:J
      54: invokestatic  #12                 // Method org/apache/hadoop/io/WritableUtils.writeVLong:(Ljava/io/DataOutput;J)V
      57: return

  public synchronized java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  public synchronized java.lang.String getDisplayName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field displayName:Ljava/lang/String;
       4: areturn

  public synchronized long getValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:J
       4: lreturn

  public synchronized void setValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field value:J
       5: return

  public synchronized void increment(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:J
       5: lload_1
       6: ladd
       7: putfield      #2                  // Field value:J
      10: return

  public org.apache.hadoop.mapreduce.Counter getUnderlyingCounter();
    Code:
       0: aload_0
       1: areturn
}
