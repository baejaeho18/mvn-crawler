Compiled from "InMemoryWriter.java"
public class org.apache.hadoop.mapreduce.task.reduce.InMemoryWriter<K, V> extends org.apache.hadoop.mapred.IFile$Writer<K, V> {
  private java.io.DataOutputStream out;

  public org.apache.hadoop.mapreduce.task.reduce.InMemoryWriter(org.apache.hadoop.io.BoundedByteArrayOutputStream);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method org/apache/hadoop/mapred/IFile$Writer."<init>":(Lorg/apache/hadoop/mapred/Counters$Counter;)V
       5: aload_0
       6: new           #2                  // class java/io/DataOutputStream
       9: dup
      10: new           #3                  // class org/apache/hadoop/mapred/IFileOutputStream
      13: dup
      14: aload_1
      15: invokespecial #4                  // Method org/apache/hadoop/mapred/IFileOutputStream."<init>":(Ljava/io/OutputStream;)V
      18: invokespecial #5                  // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      21: putfield      #6                  // Field out:Ljava/io/DataOutputStream;
      24: return

  public void append(K, V) throws java.io.IOException;
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #8                  // String InMemoryWriter.append(K key, V value
       6: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void append(org.apache.hadoop.io.DataInputBuffer, org.apache.hadoop.io.DataInputBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/apache/hadoop/io/DataInputBuffer.getLength:()I
       4: aload_1
       5: invokevirtual #11                 // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
       8: isub
       9: istore_3
      10: iload_3
      11: ifge          50
      14: new           #12                 // class java/io/IOException
      17: dup
      18: new           #13                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #15                 // String Negative key-length not allowed:
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_3
      31: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #18                 // String  for
      36: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #10                 // Method org/apache/hadoop/io/DataInputBuffer.getLength:()I
      54: aload_2
      55: invokevirtual #11                 // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
      58: isub
      59: istore        4
      61: iload         4
      63: ifge          103
      66: new           #12                 // class java/io/IOException
      69: dup
      70: new           #13                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #22                 // String Negative value-length not allowed:
      79: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: iload         4
      84: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #18                 // String  for
      89: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_2
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_0
     104: getfield      #6                  // Field out:Ljava/io/DataOutputStream;
     107: iload_3
     108: invokestatic  #23                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     111: aload_0
     112: getfield      #6                  // Field out:Ljava/io/DataOutputStream;
     115: iload         4
     117: invokestatic  #23                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     120: aload_0
     121: getfield      #6                  // Field out:Ljava/io/DataOutputStream;
     124: aload_1
     125: invokevirtual #24                 // Method org/apache/hadoop/io/DataInputBuffer.getData:()[B
     128: aload_1
     129: invokevirtual #11                 // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     132: iload_3
     133: invokevirtual #25                 // Method java/io/DataOutputStream.write:([BII)V
     136: aload_0
     137: getfield      #6                  // Field out:Ljava/io/DataOutputStream;
     140: aload_2
     141: invokevirtual #24                 // Method org/apache/hadoop/io/DataInputBuffer.getData:()[B
     144: aload_2
     145: invokevirtual #11                 // Method org/apache/hadoop/io/DataInputBuffer.getPosition:()I
     148: iload         4
     150: invokevirtual #25                 // Method java/io/DataOutputStream.write:([BII)V
     153: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field out:Ljava/io/DataOutputStream;
       4: iconst_m1
       5: invokestatic  #23                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
       8: aload_0
       9: getfield      #6                  // Field out:Ljava/io/DataOutputStream;
      12: iconst_m1
      13: invokestatic  #23                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      16: aload_0
      17: getfield      #6                  // Field out:Ljava/io/DataOutputStream;
      20: invokevirtual #27                 // Method java/io/DataOutputStream.close:()V
      23: aload_0
      24: aconst_null
      25: putfield      #6                  // Field out:Ljava/io/DataOutputStream;
      28: return
}
