Compiled from "SequenceFileRecordReader.java"
public class org.apache.hadoop.mapred.SequenceFileRecordReader<K, V> implements org.apache.hadoop.mapred.RecordReader<K, V> {
  private org.apache.hadoop.io.SequenceFile$Reader in;

  private long start;

  private long end;

  private boolean more;

  protected org.apache.hadoop.conf.Configuration conf;

  public org.apache.hadoop.mapred.SequenceFileRecordReader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.mapred.FileSplit) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field more:Z
       9: aload_2
      10: invokevirtual #3                  // Method org/apache/hadoop/mapred/FileSplit.getPath:()Lorg/apache/hadoop/fs/Path;
      13: astore_3
      14: aload_3
      15: aload_1
      16: invokevirtual #4                  // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      19: astore        4
      21: aload_0
      22: new           #5                  // class org/apache/hadoop/io/SequenceFile$Reader
      25: dup
      26: aload         4
      28: aload_3
      29: aload_1
      30: invokespecial #6                  // Method org/apache/hadoop/io/SequenceFile$Reader."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
      33: putfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      36: aload_0
      37: aload_2
      38: invokevirtual #8                  // Method org/apache/hadoop/mapred/FileSplit.getStart:()J
      41: aload_2
      42: invokevirtual #9                  // Method org/apache/hadoop/mapred/FileSplit.getLength:()J
      45: ladd
      46: putfield      #10                 // Field end:J
      49: aload_0
      50: aload_1
      51: putfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      54: aload_2
      55: invokevirtual #8                  // Method org/apache/hadoop/mapred/FileSplit.getStart:()J
      58: aload_0
      59: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      62: invokevirtual #12                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      65: lcmp
      66: ifle          80
      69: aload_0
      70: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      73: aload_2
      74: invokevirtual #8                  // Method org/apache/hadoop/mapred/FileSplit.getStart:()J
      77: invokevirtual #13                 // Method org/apache/hadoop/io/SequenceFile$Reader.sync:(J)V
      80: aload_0
      81: aload_0
      82: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      85: invokevirtual #12                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      88: putfield      #14                 // Field start:J
      91: aload_0
      92: aload_0
      93: getfield      #14                 // Field start:J
      96: aload_0
      97: getfield      #10                 // Field end:J
     100: lcmp
     101: ifge          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: putfield      #2                  // Field more:Z
     112: return

  public java.lang.Class getKeyClass();
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #15                 // Method org/apache/hadoop/io/SequenceFile$Reader.getKeyClass:()Ljava/lang/Class;
       7: areturn

  public java.lang.Class getValueClass();
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #16                 // Method org/apache/hadoop/io/SequenceFile$Reader.getValueClass:()Ljava/lang/Class;
       7: areturn

  public K createKey();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getKeyClass:()Ljava/lang/Class;
       4: aload_0
       5: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       8: invokestatic  #18                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      11: areturn

  public V createValue();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getValueClass:()Ljava/lang/Class;
       4: aload_0
       5: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       8: invokestatic  #18                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      11: areturn

  public synchronized boolean next(K, V) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field more:Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      13: invokevirtual #12                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      16: lstore_3
      17: aload_0
      18: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      21: aload_1
      22: invokevirtual #20                 // Method org/apache/hadoop/io/SequenceFile$Reader.next:(Ljava/lang/Object;)Ljava/lang/Object;
      25: ifnull        32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore        5
      35: iload         5
      37: ifeq          45
      40: aload_0
      41: aload_2
      42: invokevirtual #21                 // Method getCurrentValue:(Ljava/lang/Object;)V
      45: lload_3
      46: aload_0
      47: getfield      #10                 // Field end:J
      50: lcmp
      51: iflt          72
      54: aload_0
      55: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      58: invokevirtual #22                 // Method org/apache/hadoop/io/SequenceFile$Reader.syncSeen:()Z
      61: ifeq          72
      64: aload_0
      65: iconst_0
      66: putfield      #2                  // Field more:Z
      69: goto          78
      72: aload_0
      73: iload         5
      75: putfield      #2                  // Field more:Z
      78: aload_0
      79: getfield      #2                  // Field more:Z
      82: ireturn

  protected synchronized boolean next(K) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field more:Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      13: invokevirtual #12                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      16: lstore_2
      17: aload_0
      18: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      21: aload_1
      22: invokevirtual #20                 // Method org/apache/hadoop/io/SequenceFile$Reader.next:(Ljava/lang/Object;)Ljava/lang/Object;
      25: ifnull        32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore        4
      35: lload_2
      36: aload_0
      37: getfield      #10                 // Field end:J
      40: lcmp
      41: iflt          62
      44: aload_0
      45: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      48: invokevirtual #22                 // Method org/apache/hadoop/io/SequenceFile$Reader.syncSeen:()Z
      51: ifeq          62
      54: aload_0
      55: iconst_0
      56: putfield      #2                  // Field more:Z
      59: goto          68
      62: aload_0
      63: iload         4
      65: putfield      #2                  // Field more:Z
      68: aload_0
      69: getfield      #2                  // Field more:Z
      72: ireturn

  protected synchronized void getCurrentValue(V) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: aload_1
       5: invokevirtual #23                 // Method org/apache/hadoop/io/SequenceFile$Reader.getCurrentValue:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public float getProgress() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field end:J
       4: aload_0
       5: getfield      #14                 // Field start:J
       8: lcmp
       9: ifne          14
      12: fconst_0
      13: freturn
      14: fconst_1
      15: aload_0
      16: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      19: invokevirtual #12                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      22: aload_0
      23: getfield      #14                 // Field start:J
      26: lsub
      27: l2f
      28: aload_0
      29: getfield      #10                 // Field end:J
      32: aload_0
      33: getfield      #14                 // Field start:J
      36: lsub
      37: l2f
      38: fdiv
      39: invokestatic  #24                 // Method java/lang/Math.min:(FF)F
      42: freturn

  public synchronized long getPos() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #12                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
       7: lreturn

  protected synchronized void seek(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: lload_1
       5: invokevirtual #25                 // Method org/apache/hadoop/io/SequenceFile$Reader.seek:(J)V
       8: return

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #26                 // Method org/apache/hadoop/io/SequenceFile$Reader.close:()V
       7: return
}
