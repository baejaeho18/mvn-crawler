Compiled from "JoinRecordReader.java"
public class org.apache.hadoop.mapreduce.lib.join.JoinRecordReader$JoinDelegationIterator implements org.apache.hadoop.mapreduce.lib.join.ResetableIterator<org.apache.hadoop.mapreduce.lib.join.TupleWritable> {
  final org.apache.hadoop.mapreduce.lib.join.JoinRecordReader this$0;

  protected org.apache.hadoop.mapreduce.lib.join.JoinRecordReader$JoinDelegationIterator(org.apache.hadoop.mapreduce.lib.join.JoinRecordReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
       4: getfield      #3                  // Field org/apache/hadoop/mapreduce/lib/join/JoinRecordReader.jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       7: invokevirtual #4                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.hasNext:()Z
      10: ireturn

  public boolean next(org.apache.hadoop.mapreduce.lib.join.TupleWritable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
       4: getfield      #3                  // Field org/apache/hadoop/mapreduce/lib/join/JoinRecordReader.jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       7: aload_1
       8: invokevirtual #5                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.flush:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Z
      11: ireturn

  public boolean replay(org.apache.hadoop.mapreduce.lib.join.TupleWritable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
       4: getfield      #3                  // Field org/apache/hadoop/mapreduce/lib/join/JoinRecordReader.jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       7: aload_1
       8: invokevirtual #6                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.replay:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Z
      11: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
       4: getfield      #3                  // Field org/apache/hadoop/mapreduce/lib/join/JoinRecordReader.jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
      11: getfield      #3                  // Field org/apache/hadoop/mapreduce/lib/join/JoinRecordReader.jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
      14: invokevirtual #7                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.key:()Lorg/apache/hadoop/io/WritableComparable;
      17: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.reset:(Lorg/apache/hadoop/io/WritableComparable;)V
      20: return

  public void add(org.apache.hadoop.mapreduce.lib.join.TupleWritable) throws java.io.IOException;
    Code:
       0: new           #9                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
       4: getfield      #3                  // Field org/apache/hadoop/mapreduce/lib/join/JoinRecordReader.jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       7: invokevirtual #11                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.close:()V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/join/JoinRecordReader;
       4: getfield      #3                  // Field org/apache/hadoop/mapreduce/lib/join/JoinRecordReader.jc:Lorg/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector;
       7: invokevirtual #12                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.clear:()V
      10: return

  public void add(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/apache/hadoop/mapreduce/lib/join/TupleWritable
       5: invokevirtual #14                 // Method add:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)V
       8: return

  public boolean replay(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/apache/hadoop/mapreduce/lib/join/TupleWritable
       5: invokevirtual #15                 // Method replay:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Z
       8: ireturn

  public boolean next(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/apache/hadoop/mapreduce/lib/join/TupleWritable
       5: invokevirtual #16                 // Method next:(Lorg/apache/hadoop/mapreduce/lib/join/TupleWritable;)Z
       8: ireturn
}
