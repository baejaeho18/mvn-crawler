Compiled from "Task.java"
public abstract class org.apache.hadoop.mapred.Task implements org.apache.hadoop.io.Writable,org.apache.hadoop.conf.Configurable {
  private static final org.slf4j.Logger LOG;

  public static java.lang.String MERGED_OUTPUT_PREFIX;

  public static final long DEFAULT_COMBINE_RECORDS_BEFORE_PROGRESS;

  private static final java.lang.String HDFS_URI_SCHEME;

  protected static final java.lang.String FILESYSTEM_COUNTER_GROUP;

  private static final java.text.NumberFormat NUMBER_FORMAT;

  private java.lang.String jobFile;

  private java.lang.String user;

  private org.apache.hadoop.mapred.TaskAttemptID taskId;

  private int partition;

  private byte[] encryptedSpillKey;

  org.apache.hadoop.mapred.TaskStatus taskStatus;

  protected org.apache.hadoop.mapreduce.JobStatus$State jobRunStateForCleanup;

  protected boolean jobCleanup;

  protected boolean jobSetup;

  protected boolean taskCleanup;

  protected org.apache.hadoop.io.BytesWritable extraData;

  private org.apache.hadoop.mapred.SortedRanges skipRanges;

  private boolean skipping;

  private boolean writeSkipRecs;

  private volatile long currentRecStartIndex;

  private java.util.Iterator<java.lang.Long> currentRecIndexIterator;

  private org.apache.hadoop.yarn.util.ResourceCalculatorProcessTree pTree;

  private long initCpuCumulativeTime;

  protected org.apache.hadoop.mapred.JobConf conf;

  protected org.apache.hadoop.mapred.MapOutputFile mapOutputFile;

  protected org.apache.hadoop.fs.LocalDirAllocator lDirAlloc;

  private static final int MAX_RETRIES;

  protected org.apache.hadoop.mapred.JobContext jobContext;

  protected org.apache.hadoop.mapred.TaskAttemptContext taskContext;

  protected org.apache.hadoop.mapreduce.OutputFormat<?, ?> outputFormat;

  protected org.apache.hadoop.mapreduce.OutputCommitter committer;

  protected final org.apache.hadoop.mapred.Counters$Counter spilledRecordsCounter;

  protected final org.apache.hadoop.mapred.Counters$Counter failedShuffleCounter;

  protected final org.apache.hadoop.mapred.Counters$Counter mergedMapOutputsCounter;

  private int numSlotsRequired;

  protected org.apache.hadoop.mapred.TaskUmbilicalProtocol umbilical;

  protected javax.crypto.SecretKey tokenSecret;

  protected javax.crypto.SecretKey shuffleSecret;

  protected org.apache.hadoop.mapred.Task$GcTimeUpdater gcUpdater;

  final java.util.concurrent.atomic.AtomicBoolean mustPreempt;

  private boolean uberized;

  private transient org.apache.hadoop.util.Progress taskProgress;

  private transient org.apache.hadoop.mapred.Counters counters;

  private java.util.concurrent.atomic.AtomicBoolean taskDone;

  private java.util.Map<java.lang.String, org.apache.hadoop.mapred.Task$FileSystemStatisticUpdater> statisticUpdaters;

  protected static java.lang.String[] getFileSystemCounterNames(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/apache/hadoop/util/StringUtils.toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: iconst_2
       6: anewarray     #11                 // class java/lang/String
       9: dup
      10: iconst_0
      11: new           #12                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_1
      19: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #15                 // String _BYTES_READ
      24: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_1
      33: new           #12                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      40: aload_1
      41: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #17                 // String _BYTES_WRITTEN
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aastore
      53: areturn

  static synchronized java.lang.String getOutputName(int);
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String part-
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: getstatic     #19                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      15: iload_0
      16: i2l
      17: invokevirtual #20                 // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
      20: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  public org.apache.hadoop.mapred.Task();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: dup
       9: iconst_0
      10: iconst_0
      11: bastore
      12: putfield      #22                 // Field encryptedSpillKey:[B
      15: aload_0
      16: iconst_0
      17: putfield      #23                 // Field jobCleanup:Z
      20: aload_0
      21: iconst_0
      22: putfield      #24                 // Field jobSetup:Z
      25: aload_0
      26: iconst_0
      27: putfield      #25                 // Field taskCleanup:Z
      30: aload_0
      31: new           #26                 // class org/apache/hadoop/io/BytesWritable
      34: dup
      35: invokespecial #27                 // Method org/apache/hadoop/io/BytesWritable."<init>":()V
      38: putfield      #28                 // Field extraData:Lorg/apache/hadoop/io/BytesWritable;
      41: aload_0
      42: new           #29                 // class org/apache/hadoop/mapred/SortedRanges
      45: dup
      46: invokespecial #30                 // Method org/apache/hadoop/mapred/SortedRanges."<init>":()V
      49: putfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
      52: aload_0
      53: iconst_0
      54: putfield      #8                  // Field skipping:Z
      57: aload_0
      58: iconst_1
      59: putfield      #32                 // Field writeSkipRecs:Z
      62: aload_0
      63: aload_0
      64: getfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
      67: invokevirtual #33                 // Method org/apache/hadoop/mapred/SortedRanges.skipRangeIterator:()Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
      70: putfield      #6                  // Field currentRecIndexIterator:Ljava/util/Iterator;
      73: aload_0
      74: ldc2_w        #35                 // long -1l
      77: putfield      #37                 // Field initCpuCumulativeTime:J
      80: aload_0
      81: new           #38                 // class java/util/concurrent/atomic/AtomicBoolean
      84: dup
      85: iconst_0
      86: invokespecial #39                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      89: putfield      #40                 // Field mustPreempt:Ljava/util/concurrent/atomic/AtomicBoolean;
      92: aload_0
      93: iconst_0
      94: putfield      #1                  // Field uberized:Z
      97: aload_0
      98: new           #41                 // class org/apache/hadoop/util/Progress
     101: dup
     102: invokespecial #42                 // Method org/apache/hadoop/util/Progress."<init>":()V
     105: putfield      #43                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
     108: aload_0
     109: new           #44                 // class org/apache/hadoop/mapred/Counters
     112: dup
     113: invokespecial #45                 // Method org/apache/hadoop/mapred/Counters."<init>":()V
     116: putfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     119: aload_0
     120: new           #38                 // class java/util/concurrent/atomic/AtomicBoolean
     123: dup
     124: iconst_0
     125: invokespecial #39                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     128: putfield      #5                  // Field taskDone:Ljava/util/concurrent/atomic/AtomicBoolean;
     131: aload_0
     132: new           #46                 // class java/util/HashMap
     135: dup
     136: invokespecial #47                 // Method java/util/HashMap."<init>":()V
     139: putfield      #48                 // Field statisticUpdaters:Ljava/util/Map;
     142: aload_0
     143: aload_0
     144: invokevirtual #49                 // Method isMapTask:()Z
     147: invokestatic  #50                 // Method org/apache/hadoop/mapred/TaskStatus.createTaskStatus:(Z)Lorg/apache/hadoop/mapred/TaskStatus;
     150: putfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     153: aload_0
     154: new           #52                 // class org/apache/hadoop/mapred/TaskAttemptID
     157: dup
     158: invokespecial #53                 // Method org/apache/hadoop/mapred/TaskAttemptID."<init>":()V
     161: putfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
     164: aload_0
     165: aload_0
     166: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     169: getstatic     #54                 // Field org/apache/hadoop/mapreduce/TaskCounter.SPILLED_RECORDS:Lorg/apache/hadoop/mapreduce/TaskCounter;
     172: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     175: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     178: putfield      #57                 // Field spilledRecordsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     181: aload_0
     182: aload_0
     183: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     186: getstatic     #58                 // Field org/apache/hadoop/mapreduce/TaskCounter.FAILED_SHUFFLE:Lorg/apache/hadoop/mapreduce/TaskCounter;
     189: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     192: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     195: putfield      #59                 // Field failedShuffleCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     198: aload_0
     199: aload_0
     200: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     203: getstatic     #60                 // Field org/apache/hadoop/mapreduce/TaskCounter.MERGED_MAP_OUTPUTS:Lorg/apache/hadoop/mapreduce/TaskCounter;
     206: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     209: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     212: putfield      #61                 // Field mergedMapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     215: aload_0
     216: new           #62                 // class org/apache/hadoop/mapred/Task$GcTimeUpdater
     219: dup
     220: aload_0
     221: invokespecial #63                 // Method org/apache/hadoop/mapred/Task$GcTimeUpdater."<init>":(Lorg/apache/hadoop/mapred/Task;)V
     224: putfield      #64                 // Field gcUpdater:Lorg/apache/hadoop/mapred/Task$GcTimeUpdater;
     227: return

  public org.apache.hadoop.mapred.Task(java.lang.String, org.apache.hadoop.mapred.TaskAttemptID, int, int);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: dup
       9: iconst_0
      10: iconst_0
      11: bastore
      12: putfield      #22                 // Field encryptedSpillKey:[B
      15: aload_0
      16: iconst_0
      17: putfield      #23                 // Field jobCleanup:Z
      20: aload_0
      21: iconst_0
      22: putfield      #24                 // Field jobSetup:Z
      25: aload_0
      26: iconst_0
      27: putfield      #25                 // Field taskCleanup:Z
      30: aload_0
      31: new           #26                 // class org/apache/hadoop/io/BytesWritable
      34: dup
      35: invokespecial #27                 // Method org/apache/hadoop/io/BytesWritable."<init>":()V
      38: putfield      #28                 // Field extraData:Lorg/apache/hadoop/io/BytesWritable;
      41: aload_0
      42: new           #29                 // class org/apache/hadoop/mapred/SortedRanges
      45: dup
      46: invokespecial #30                 // Method org/apache/hadoop/mapred/SortedRanges."<init>":()V
      49: putfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
      52: aload_0
      53: iconst_0
      54: putfield      #8                  // Field skipping:Z
      57: aload_0
      58: iconst_1
      59: putfield      #32                 // Field writeSkipRecs:Z
      62: aload_0
      63: aload_0
      64: getfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
      67: invokevirtual #33                 // Method org/apache/hadoop/mapred/SortedRanges.skipRangeIterator:()Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
      70: putfield      #6                  // Field currentRecIndexIterator:Ljava/util/Iterator;
      73: aload_0
      74: ldc2_w        #35                 // long -1l
      77: putfield      #37                 // Field initCpuCumulativeTime:J
      80: aload_0
      81: new           #38                 // class java/util/concurrent/atomic/AtomicBoolean
      84: dup
      85: iconst_0
      86: invokespecial #39                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      89: putfield      #40                 // Field mustPreempt:Ljava/util/concurrent/atomic/AtomicBoolean;
      92: aload_0
      93: iconst_0
      94: putfield      #1                  // Field uberized:Z
      97: aload_0
      98: new           #41                 // class org/apache/hadoop/util/Progress
     101: dup
     102: invokespecial #42                 // Method org/apache/hadoop/util/Progress."<init>":()V
     105: putfield      #43                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
     108: aload_0
     109: new           #44                 // class org/apache/hadoop/mapred/Counters
     112: dup
     113: invokespecial #45                 // Method org/apache/hadoop/mapred/Counters."<init>":()V
     116: putfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     119: aload_0
     120: new           #38                 // class java/util/concurrent/atomic/AtomicBoolean
     123: dup
     124: iconst_0
     125: invokespecial #39                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     128: putfield      #5                  // Field taskDone:Ljava/util/concurrent/atomic/AtomicBoolean;
     131: aload_0
     132: new           #46                 // class java/util/HashMap
     135: dup
     136: invokespecial #47                 // Method java/util/HashMap."<init>":()V
     139: putfield      #48                 // Field statisticUpdaters:Ljava/util/Map;
     142: aload_0
     143: aload_1
     144: putfield      #65                 // Field jobFile:Ljava/lang/String;
     147: aload_0
     148: aload_2
     149: putfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
     152: aload_0
     153: iload_3
     154: putfield      #66                 // Field partition:I
     157: aload_0
     158: iload         4
     160: putfield      #67                 // Field numSlotsRequired:I
     163: aload_0
     164: aload_0
     165: invokevirtual #49                 // Method isMapTask:()Z
     168: aload_0
     169: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
     172: fconst_0
     173: iload         4
     175: getstatic     #68                 // Field org/apache/hadoop/mapred/TaskStatus$State.UNASSIGNED:Lorg/apache/hadoop/mapred/TaskStatus$State;
     178: ldc           #69                 // String
     180: ldc           #69                 // String
     182: ldc           #69                 // String
     184: aload_0
     185: invokevirtual #49                 // Method isMapTask:()Z
     188: ifeq          197
     191: getstatic     #70                 // Field org/apache/hadoop/mapred/TaskStatus$Phase.MAP:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
     194: goto          200
     197: getstatic     #71                 // Field org/apache/hadoop/mapred/TaskStatus$Phase.SHUFFLE:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
     200: aload_0
     201: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     204: invokestatic  #72                 // Method org/apache/hadoop/mapred/TaskStatus.createTaskStatus:(ZLorg/apache/hadoop/mapred/TaskAttemptID;FILorg/apache/hadoop/mapred/TaskStatus$State;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskStatus$Phase;Lorg/apache/hadoop/mapred/Counters;)Lorg/apache/hadoop/mapred/TaskStatus;
     207: putfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     210: aload_0
     211: aload_0
     212: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     215: getstatic     #54                 // Field org/apache/hadoop/mapreduce/TaskCounter.SPILLED_RECORDS:Lorg/apache/hadoop/mapreduce/TaskCounter;
     218: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     221: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     224: putfield      #57                 // Field spilledRecordsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     227: aload_0
     228: aload_0
     229: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     232: getstatic     #58                 // Field org/apache/hadoop/mapreduce/TaskCounter.FAILED_SHUFFLE:Lorg/apache/hadoop/mapreduce/TaskCounter;
     235: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     238: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     241: putfield      #59                 // Field failedShuffleCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     244: aload_0
     245: aload_0
     246: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     249: getstatic     #60                 // Field org/apache/hadoop/mapreduce/TaskCounter.MERGED_MAP_OUTPUTS:Lorg/apache/hadoop/mapreduce/TaskCounter;
     252: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     255: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     258: putfield      #61                 // Field mergedMapOutputsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     261: aload_0
     262: new           #62                 // class org/apache/hadoop/mapred/Task$GcTimeUpdater
     265: dup
     266: aload_0
     267: invokespecial #63                 // Method org/apache/hadoop/mapred/Task$GcTimeUpdater."<init>":(Lorg/apache/hadoop/mapred/Task;)V
     270: putfield      #64                 // Field gcUpdater:Lorg/apache/hadoop/mapred/Task$GcTimeUpdater;
     273: return

  void setTaskDone();
    Code:
       0: aload_0
       1: getfield      #5                  // Field taskDone:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public void setJobFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field jobFile:Ljava/lang/String;
       5: return

  public java.lang.String getJobFile();
    Code:
       0: aload_0
       1: getfield      #65                 // Field jobFile:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.mapred.TaskAttemptID getTaskID();
    Code:
       0: aload_0
       1: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
       4: areturn

  public int getNumSlotsRequired();
    Code:
       0: aload_0
       1: getfield      #67                 // Field numSlotsRequired:I
       4: ireturn

  org.apache.hadoop.mapred.Counters getCounters();
    Code:
       0: aload_0
       1: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
       4: areturn

  public org.apache.hadoop.mapred.JobID getJobID();
    Code:
       0: aload_0
       1: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
       4: invokevirtual #74                 // Method org/apache/hadoop/mapred/TaskAttemptID.getJobID:()Lorg/apache/hadoop/mapred/JobID;
       7: areturn

  public void setJobTokenSecret(javax.crypto.SecretKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field tokenSecret:Ljavax/crypto/SecretKey;
       5: return

  public byte[] getEncryptedSpillKey();
    Code:
       0: aload_0
       1: getfield      #22                 // Field encryptedSpillKey:[B
       4: areturn

  public void setEncryptedSpillKey(byte[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_0
       5: aload_1
       6: putfield      #22                 // Field encryptedSpillKey:[B
       9: return

  public javax.crypto.SecretKey getJobTokenSecret();
    Code:
       0: aload_0
       1: getfield      #75                 // Field tokenSecret:Ljavax/crypto/SecretKey;
       4: areturn

  public void setShuffleSecret(javax.crypto.SecretKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field shuffleSecret:Ljavax/crypto/SecretKey;
       5: return

  public javax.crypto.SecretKey getShuffleSecret();
    Code:
       0: aload_0
       1: getfield      #76                 // Field shuffleSecret:Ljavax/crypto/SecretKey;
       4: areturn

  public int getPartition();
    Code:
       0: aload_0
       1: getfield      #66                 // Field partition:I
       4: ireturn

  public synchronized org.apache.hadoop.mapred.TaskStatus$Phase getPhase();
    Code:
       0: aload_0
       1: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
       4: invokevirtual #77                 // Method org/apache/hadoop/mapred/TaskStatus.getPhase:()Lorg/apache/hadoop/mapred/TaskStatus$Phase;
       7: areturn

  protected synchronized void setPhase(org.apache.hadoop.mapred.TaskStatus$Phase);
    Code:
       0: aload_0
       1: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
       4: aload_1
       5: invokevirtual #78                 // Method org/apache/hadoop/mapred/TaskStatus.setPhase:(Lorg/apache/hadoop/mapred/TaskStatus$Phase;)V
       8: return

  protected boolean toWriteSkipRecs();
    Code:
       0: aload_0
       1: getfield      #32                 // Field writeSkipRecs:Z
       4: ireturn

  protected void setWriteSkipRecs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field writeSkipRecs:Z
       5: return

  protected void reportFatalError(org.apache.hadoop.mapred.TaskAttemptID, java.lang.Throwable, java.lang.String, boolean);
    Code:
       0: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
       3: aload_3
       4: invokeinterface #79,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
       9: invokestatic  #80                 // Method org/apache/hadoop/util/ShutdownHookManager.get:()Lorg/apache/hadoop/util/ShutdownHookManager;
      12: invokevirtual #81                 // Method org/apache/hadoop/util/ShutdownHookManager.isShutdownInProgress:()Z
      15: ifeq          19
      18: return
      19: aload_2
      20: invokevirtual #82                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      23: astore        5
      25: aload         5
      27: ifnonnull     37
      30: aload_2
      31: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      34: goto          42
      37: aload         5
      39: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      42: astore        6
      44: aload_0
      45: getfield      #84                 // Field umbilical:Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;
      48: aload_1
      49: aload         6
      51: iload         4
      53: invokeinterface #85,  4           // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.fatalError:(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Z)V
      58: goto          79
      61: astore        7
      63: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      66: ldc           #87                 // String Failed to contact the tasktracker
      68: aload         7
      70: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: iconst_m1
      76: invokestatic  #89                 // Method java/lang/System.exit:(I)V
      79: return
    Exception table:
       from    to  target type
          44    58    61   Class java/io/IOException

  protected static java.util.List<org.apache.hadoop.fs.FileSystem$Statistics> getFsStatistics(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: new           #90                 // class java/util/ArrayList
       3: dup
       4: invokespecial #91                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokevirtual #92                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      13: aload_0
      14: invokevirtual #93                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      17: astore_0
      18: aload_0
      19: invokevirtual #94                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      22: invokevirtual #95                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      25: astore_3
      26: invokestatic  #96                 // Method org/apache/hadoop/fs/FileSystem.getAllStatistics:()Ljava/util/List;
      29: invokeinterface #97,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore        4
      36: aload         4
      38: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          82
      46: aload         4
      48: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #100                // class org/apache/hadoop/fs/FileSystem$Statistics
      56: astore        5
      58: aload         5
      60: invokevirtual #101                // Method org/apache/hadoop/fs/FileSystem$Statistics.getScheme:()Ljava/lang/String;
      63: aload_3
      64: invokevirtual #102                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          79
      70: aload_2
      71: aload         5
      73: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: goto          36
      82: aload_2
      83: areturn

  public org.apache.hadoop.mapred.SortedRanges getSkipRanges();
    Code:
       0: aload_0
       1: getfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
       4: areturn

  public void setSkipRanges(org.apache.hadoop.mapred.SortedRanges);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
       5: return

  public boolean isSkipping();
    Code:
       0: aload_0
       1: getfield      #8                  // Field skipping:Z
       4: ireturn

  public void setSkipping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field skipping:Z
       5: return

  synchronized org.apache.hadoop.mapred.TaskStatus$State getState();
    Code:
       0: aload_0
       1: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
       4: invokevirtual #104                // Method org/apache/hadoop/mapred/TaskStatus.getRunState:()Lorg/apache/hadoop/mapred/TaskStatus$State;
       7: areturn

  synchronized void setState(org.apache.hadoop.mapred.TaskStatus$State);
    Code:
       0: aload_0
       1: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
       4: aload_1
       5: invokevirtual #105                // Method org/apache/hadoop/mapred/TaskStatus.setRunState:(Lorg/apache/hadoop/mapred/TaskStatus$State;)V
       8: return

  void setTaskCleanupTask();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #25                 // Field taskCleanup:Z
       5: return

  boolean isTaskCleanupTask();
    Code:
       0: aload_0
       1: getfield      #25                 // Field taskCleanup:Z
       4: ireturn

  boolean isJobCleanupTask();
    Code:
       0: aload_0
       1: getfield      #23                 // Field jobCleanup:Z
       4: ireturn

  boolean isJobAbortTask();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method isJobCleanupTask:()Z
       4: ifeq          31
       7: aload_0
       8: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      11: getstatic     #108                // Field org/apache/hadoop/mapreduce/JobStatus$State.KILLED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      14: if_acmpeq     27
      17: aload_0
      18: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      21: getstatic     #109                // Field org/apache/hadoop/mapreduce/JobStatus$State.FAILED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      24: if_acmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  boolean isJobSetupTask();
    Code:
       0: aload_0
       1: getfield      #24                 // Field jobSetup:Z
       4: ireturn

  void setJobSetupTask();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #24                 // Field jobSetup:Z
       5: return

  void setJobCleanupTask();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #23                 // Field jobCleanup:Z
       5: return

  void setJobCleanupTaskState(org.apache.hadoop.mapreduce.JobStatus$State);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
       5: return

  boolean isMapOrReduce();
    Code:
       0: aload_0
       1: getfield      #24                 // Field jobSetup:Z
       4: ifne          25
       7: aload_0
       8: getfield      #23                 // Field jobCleanup:Z
      11: ifne          25
      14: aload_0
      15: getfield      #25                 // Field taskCleanup:Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #110                // Field user:Ljava/lang/String;
       4: areturn

  void setUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #110                // Field user:Ljava/lang/String;
       5: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #65                 // Field jobFile:Ljava/lang/String;
       5: invokestatic  #111                // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
       8: pop
       9: aload_0
      10: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      13: aload_1
      14: invokevirtual #112                // Method org/apache/hadoop/mapred/TaskAttemptID.write:(Ljava/io/DataOutput;)V
      17: aload_1
      18: aload_0
      19: getfield      #66                 // Field partition:I
      22: invokeinterface #113,  2          // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      27: aload_1
      28: aload_0
      29: getfield      #67                 // Field numSlotsRequired:I
      32: invokeinterface #113,  2          // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      37: aload_0
      38: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
      41: aload_1
      42: invokevirtual #114                // Method org/apache/hadoop/mapred/TaskStatus.write:(Ljava/io/DataOutput;)V
      45: aload_0
      46: getfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
      49: aload_1
      50: invokevirtual #115                // Method org/apache/hadoop/mapred/SortedRanges.write:(Ljava/io/DataOutput;)V
      53: aload_1
      54: aload_0
      55: getfield      #8                  // Field skipping:Z
      58: invokeinterface #116,  2          // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      63: aload_1
      64: aload_0
      65: getfield      #23                 // Field jobCleanup:Z
      68: invokeinterface #116,  2          // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      73: aload_0
      74: getfield      #23                 // Field jobCleanup:Z
      77: ifeq          88
      80: aload_1
      81: aload_0
      82: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      85: invokestatic  #117                // Method org/apache/hadoop/io/WritableUtils.writeEnum:(Ljava/io/DataOutput;Ljava/lang/Enum;)V
      88: aload_1
      89: aload_0
      90: getfield      #24                 // Field jobSetup:Z
      93: invokeinterface #116,  2          // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      98: aload_1
      99: aload_0
     100: getfield      #32                 // Field writeSkipRecs:Z
     103: invokeinterface #116,  2          // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
     108: aload_1
     109: aload_0
     110: getfield      #25                 // Field taskCleanup:Z
     113: invokeinterface #116,  2          // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
     118: aload_1
     119: aload_0
     120: getfield      #110                // Field user:Ljava/lang/String;
     123: invokestatic  #111                // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
     126: pop
     127: aload_1
     128: aload_0
     129: getfield      #22                 // Field encryptedSpillKey:[B
     132: arraylength
     133: invokeinterface #113,  2          // InterfaceMethod java/io/DataOutput.writeInt:(I)V
     138: aload_0
     139: getfield      #28                 // Field extraData:Lorg/apache/hadoop/io/BytesWritable;
     142: aload_1
     143: invokevirtual #118                // Method org/apache/hadoop/io/BytesWritable.write:(Ljava/io/DataOutput;)V
     146: aload_1
     147: aload_0
     148: getfield      #22                 // Field encryptedSpillKey:[B
     151: invokeinterface #119,  2          // InterfaceMethod java/io/DataOutput.write:([B)V
     156: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
       5: invokestatic  #121                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
       8: putfield      #65                 // Field jobFile:Ljava/lang/String;
      11: aload_0
      12: aload_1
      13: invokestatic  #122                // Method org/apache/hadoop/mapred/TaskAttemptID.read:(Ljava/io/DataInput;)Lorg/apache/hadoop/mapred/TaskAttemptID;
      16: putfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      19: aload_0
      20: aload_1
      21: invokeinterface #123,  1          // InterfaceMethod java/io/DataInput.readInt:()I
      26: putfield      #66                 // Field partition:I
      29: aload_0
      30: aload_1
      31: invokeinterface #123,  1          // InterfaceMethod java/io/DataInput.readInt:()I
      36: putfield      #67                 // Field numSlotsRequired:I
      39: aload_0
      40: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
      43: aload_1
      44: invokevirtual #124                // Method org/apache/hadoop/mapred/TaskStatus.readFields:(Ljava/io/DataInput;)V
      47: aload_0
      48: getfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
      51: aload_1
      52: invokevirtual #125                // Method org/apache/hadoop/mapred/SortedRanges.readFields:(Ljava/io/DataInput;)V
      55: aload_0
      56: aload_0
      57: getfield      #31                 // Field skipRanges:Lorg/apache/hadoop/mapred/SortedRanges;
      60: invokevirtual #33                 // Method org/apache/hadoop/mapred/SortedRanges.skipRangeIterator:()Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
      63: putfield      #6                  // Field currentRecIndexIterator:Ljava/util/Iterator;
      66: aload_0
      67: aload_0
      68: getfield      #6                  // Field currentRecIndexIterator:Ljava/util/Iterator;
      71: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #126                // class java/lang/Long
      79: invokevirtual #127                // Method java/lang/Long.longValue:()J
      82: putfield      #7                  // Field currentRecStartIndex:J
      85: aload_0
      86: aload_1
      87: invokeinterface #128,  1          // InterfaceMethod java/io/DataInput.readBoolean:()Z
      92: putfield      #8                  // Field skipping:Z
      95: aload_0
      96: aload_1
      97: invokeinterface #128,  1          // InterfaceMethod java/io/DataInput.readBoolean:()Z
     102: putfield      #23                 // Field jobCleanup:Z
     105: aload_0
     106: getfield      #23                 // Field jobCleanup:Z
     109: ifeq          125
     112: aload_0
     113: aload_1
     114: ldc           #129                // class org/apache/hadoop/mapreduce/JobStatus$State
     116: invokestatic  #130                // Method org/apache/hadoop/io/WritableUtils.readEnum:(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
     119: checkcast     #129                // class org/apache/hadoop/mapreduce/JobStatus$State
     122: putfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     125: aload_0
     126: aload_1
     127: invokeinterface #128,  1          // InterfaceMethod java/io/DataInput.readBoolean:()Z
     132: putfield      #24                 // Field jobSetup:Z
     135: aload_0
     136: aload_1
     137: invokeinterface #128,  1          // InterfaceMethod java/io/DataInput.readBoolean:()Z
     142: putfield      #32                 // Field writeSkipRecs:Z
     145: aload_0
     146: aload_1
     147: invokeinterface #128,  1          // InterfaceMethod java/io/DataInput.readBoolean:()Z
     152: putfield      #25                 // Field taskCleanup:Z
     155: aload_0
     156: getfield      #25                 // Field taskCleanup:Z
     159: ifeq          169
     162: aload_0
     163: getstatic     #131                // Field org/apache/hadoop/mapred/TaskStatus$Phase.CLEANUP:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
     166: invokevirtual #132                // Method setPhase:(Lorg/apache/hadoop/mapred/TaskStatus$Phase;)V
     169: aload_0
     170: aload_1
     171: invokestatic  #120                // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
     174: invokestatic  #121                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
     177: putfield      #110                // Field user:Ljava/lang/String;
     180: aload_1
     181: invokeinterface #123,  1          // InterfaceMethod java/io/DataInput.readInt:()I
     186: istore_2
     187: aload_0
     188: iload_2
     189: newarray       byte
     191: putfield      #22                 // Field encryptedSpillKey:[B
     194: aload_0
     195: getfield      #28                 // Field extraData:Lorg/apache/hadoop/io/BytesWritable;
     198: aload_1
     199: invokevirtual #133                // Method org/apache/hadoop/io/BytesWritable.readFields:(Ljava/io/DataInput;)V
     202: aload_1
     203: aload_0
     204: getfield      #22                 // Field encryptedSpillKey:[B
     207: invokeinterface #134,  2          // InterfaceMethod java/io/DataInput.readFully:([B)V
     212: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
       4: invokevirtual #135                // Method org/apache/hadoop/mapred/TaskAttemptID.toString:()Ljava/lang/String;
       7: areturn

  public void localizeConfiguration(org.apache.hadoop.mapred.JobConf) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #137                // String mapreduce.task.id
       3: aload_0
       4: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
       7: invokevirtual #138                // Method org/apache/hadoop/mapred/TaskAttemptID.getTaskID:()Lorg/apache/hadoop/mapred/TaskID;
      10: invokevirtual #139                // Method org/apache/hadoop/mapred/TaskID.toString:()Ljava/lang/String;
      13: invokevirtual #140                // Method org/apache/hadoop/mapred/JobConf.set:(Ljava/lang/String;Ljava/lang/String;)V
      16: aload_1
      17: ldc           #141                // String mapreduce.task.attempt.id
      19: aload_0
      20: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      23: invokevirtual #135                // Method org/apache/hadoop/mapred/TaskAttemptID.toString:()Ljava/lang/String;
      26: invokevirtual #140                // Method org/apache/hadoop/mapred/JobConf.set:(Ljava/lang/String;Ljava/lang/String;)V
      29: aload_1
      30: ldc           #142                // String mapreduce.task.ismap
      32: aload_0
      33: invokevirtual #49                 // Method isMapTask:()Z
      36: invokevirtual #143                // Method org/apache/hadoop/mapred/JobConf.setBoolean:(Ljava/lang/String;Z)V
      39: aload_1
      40: ldc           #144                // String mapreduce.task.partition
      42: aload_0
      43: getfield      #66                 // Field partition:I
      46: invokevirtual #145                // Method org/apache/hadoop/mapred/JobConf.setInt:(Ljava/lang/String;I)V
      49: aload_1
      50: ldc           #146                // String mapreduce.job.id
      52: aload_0
      53: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      56: invokevirtual #74                 // Method org/apache/hadoop/mapred/TaskAttemptID.getJobID:()Lorg/apache/hadoop/mapred/JobID;
      59: invokevirtual #147                // Method org/apache/hadoop/mapred/JobID.toString:()Ljava/lang/String;
      62: invokevirtual #140                // Method org/apache/hadoop/mapred/JobConf.set:(Ljava/lang/String;Ljava/lang/String;)V
      65: return

  public abstract void run(org.apache.hadoop.mapred.JobConf, org.apache.hadoop.mapred.TaskUmbilicalProtocol) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.InterruptedException;

  public abstract boolean isMapTask();

  public org.apache.hadoop.util.Progress getProgress();
    Code:
       0: aload_0
       1: getfield      #43                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
       4: areturn

  public void initialize(org.apache.hadoop.mapred.JobConf, org.apache.hadoop.mapred.JobID, org.apache.hadoop.mapred.Reporter, boolean) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: new           #148                // class org/apache/hadoop/mapred/JobContextImpl
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #149                // Method org/apache/hadoop/mapred/JobContextImpl."<init>":(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapreduce/JobID;Lorg/apache/hadoop/util/Progressable;)V
      11: putfield      #150                // Field jobContext:Lorg/apache/hadoop/mapred/JobContext;
      14: aload_0
      15: new           #151                // class org/apache/hadoop/mapred/TaskAttemptContextImpl
      18: dup
      19: aload_1
      20: aload_0
      21: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      24: aload_3
      25: invokespecial #152                // Method org/apache/hadoop/mapred/TaskAttemptContextImpl."<init>":(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/Reporter;)V
      28: putfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
      31: aload_0
      32: invokevirtual #154                // Method getState:()Lorg/apache/hadoop/mapred/TaskStatus$State;
      35: getstatic     #68                 // Field org/apache/hadoop/mapred/TaskStatus$State.UNASSIGNED:Lorg/apache/hadoop/mapred/TaskStatus$State;
      38: if_acmpne     48
      41: aload_0
      42: getstatic     #155                // Field org/apache/hadoop/mapred/TaskStatus$State.RUNNING:Lorg/apache/hadoop/mapred/TaskStatus$State;
      45: invokevirtual #156                // Method setState:(Lorg/apache/hadoop/mapred/TaskStatus$State;)V
      48: iload         4
      50: ifeq          112
      53: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      56: invokeinterface #157,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      61: ifeq          74
      64: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      67: ldc           #158                // String using new api for output committer
      69: invokeinterface #159,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      74: aload_0
      75: aload_0
      76: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
      79: invokeinterface #160,  1          // InterfaceMethod org/apache/hadoop/mapred/TaskAttemptContext.getOutputFormatClass:()Ljava/lang/Class;
      84: aload_1
      85: invokestatic  #161                // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      88: checkcast     #162                // class org/apache/hadoop/mapreduce/OutputFormat
      91: putfield      #163                // Field outputFormat:Lorg/apache/hadoop/mapreduce/OutputFormat;
      94: aload_0
      95: aload_0
      96: getfield      #163                // Field outputFormat:Lorg/apache/hadoop/mapreduce/OutputFormat;
      99: aload_0
     100: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
     103: invokevirtual #164                // Method org/apache/hadoop/mapreduce/OutputFormat.getOutputCommitter:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;
     106: putfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     109: goto          123
     112: aload_0
     113: aload_0
     114: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
     117: invokevirtual #167                // Method org/apache/hadoop/mapred/JobConf.getOutputCommitter:()Lorg/apache/hadoop/mapred/OutputCommitter;
     120: putfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     123: aload_0
     124: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
     127: invokestatic  #168                // Method org/apache/hadoop/mapred/FileOutputFormat.getOutputPath:(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/fs/Path;
     130: astore        5
     132: aload         5
     134: ifnull        180
     137: aload_0
     138: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     141: instanceof    #169                // class org/apache/hadoop/mapred/FileOutputCommitter
     144: ifeq          171
     147: aload_0
     148: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
     151: aload_0
     152: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     155: checkcast     #169                // class org/apache/hadoop/mapred/FileOutputCommitter
     158: aload_0
     159: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
     162: invokevirtual #170                // Method org/apache/hadoop/mapred/FileOutputCommitter.getTaskAttemptPath:(Lorg/apache/hadoop/mapred/TaskAttemptContext;)Lorg/apache/hadoop/fs/Path;
     165: invokestatic  #171                // Method org/apache/hadoop/mapred/FileOutputFormat.setWorkOutputPath:(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;)V
     168: goto          180
     171: aload_0
     172: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
     175: aload         5
     177: invokestatic  #171                // Method org/apache/hadoop/mapred/FileOutputFormat.setWorkOutputPath:(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;)V
     180: aload_0
     181: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     184: aload_0
     185: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
     188: invokevirtual #172                // Method org/apache/hadoop/mapreduce/OutputCommitter.setupTask:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
     191: aload_0
     192: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
     195: ldc           #174                // String mapreduce.job.process-tree.class
     197: aconst_null
     198: ldc           #34                 // class org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree
     200: invokevirtual #175                // Method org/apache/hadoop/mapred/JobConf.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
     203: astore        6
     205: aload_0
     206: invokestatic  #176                // Method java/lang/System.getenv:()Ljava/util/Map;
     209: ldc           #177                // String JVM_PID
     211: invokeinterface #178,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     216: checkcast     #11                 // class java/lang/String
     219: aload         6
     221: aload_0
     222: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
     225: invokestatic  #179                // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.getResourceCalculatorProcessTree:(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
     228: putfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
     231: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
     234: new           #12                 // class java/lang/StringBuilder
     237: dup
     238: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     241: ldc           #181                // String  Using ResourceCalculatorProcessTree :
     243: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: aload_0
     247: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
     250: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     253: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     256: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     261: aload_0
     262: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
     265: ifnull        286
     268: aload_0
     269: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
     272: invokevirtual #184                // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.updateProcessTree:()V
     275: aload_0
     276: aload_0
     277: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
     280: invokevirtual #185                // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.getCumulativeCpuTime:()J
     283: putfield      #37                 // Field initCpuCumulativeTime:J
     286: return

  public static java.lang.String normalizeStatus(java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: ldc           #186                // String mapreduce.task.max.status.length
       3: sipush        512
       6: invokevirtual #187                // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
       9: istore_2
      10: aload_0
      11: invokevirtual #188                // Method java/lang/String.length:()I
      14: iload_2
      15: if_icmple     66
      18: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      21: new           #12                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #189                // String Task status: \"
      30: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #190                // String \" truncated to max limit (
      39: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #191                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #192                // String  characters)
      48: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      59: aload_0
      60: iconst_0
      61: iload_2
      62: invokevirtual #194                // Method java/lang/String.substring:(II)Ljava/lang/String;
      65: astore_0
      66: aload_0
      67: areturn

  protected void reportNextRecordRange(org.apache.hadoop.mapred.TaskUmbilicalProtocol, long) throws java.io.IOException;
    Code:
       0: lload_2
       1: aload_0
       2: getfield      #7                  // Field currentRecStartIndex:J
       5: lsub
       6: lconst_1
       7: ladd
       8: lstore        4
      10: new           #195                // class org/apache/hadoop/mapred/SortedRanges$Range
      13: dup
      14: aload_0
      15: getfield      #7                  // Field currentRecStartIndex:J
      18: lload         4
      20: invokespecial #196                // Method org/apache/hadoop/mapred/SortedRanges$Range."<init>":(JJ)V
      23: astore        6
      25: aload_0
      26: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
      29: aload         6
      31: invokevirtual #197                // Method org/apache/hadoop/mapred/TaskStatus.setNextRecordRange:(Lorg/apache/hadoop/mapred/SortedRanges$Range;)V
      34: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      37: invokeinterface #157,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      42: ifeq          73
      45: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      48: new           #12                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #198                // String sending reportNextRecordRange
      57: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload         6
      62: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokeinterface #159,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      73: aload_1
      74: aload_0
      75: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      78: aload         6
      80: invokeinterface #199,  3          // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.reportNextRecordRange:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/SortedRanges$Range;)V
      85: return

  org.apache.hadoop.mapred.Task$TaskReporter startReporter(org.apache.hadoop.mapred.TaskUmbilicalProtocol);
    Code:
       0: new           #200                // class org/apache/hadoop/mapred/Task$TaskReporter
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #201                // Method getProgress:()Lorg/apache/hadoop/util/Progress;
       9: aload_1
      10: invokespecial #202                // Method org/apache/hadoop/mapred/Task$TaskReporter."<init>":(Lorg/apache/hadoop/mapred/Task;Lorg/apache/hadoop/util/Progress;Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
      13: astore_2
      14: aload_2
      15: invokevirtual #203                // Method org/apache/hadoop/mapred/Task$TaskReporter.startCommunicationThread:()V
      18: aload_2
      19: areturn

  void updateResourceCounters();
    Code:
       0: aload_0
       1: invokespecial #204                // Method updateHeapUsageCounter:()V
       4: aload_0
       5: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
       8: ifnonnull     12
      11: return
      12: aload_0
      13: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
      16: invokevirtual #184                // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.updateProcessTree:()V
      19: aload_0
      20: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
      23: invokevirtual #185                // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.getCumulativeCpuTime:()J
      26: lstore_1
      27: aload_0
      28: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
      31: invokevirtual #205                // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.getRssMemorySize:()J
      34: lstore_3
      35: aload_0
      36: getfield      #180                // Field pTree:Lorg/apache/hadoop/yarn/util/ResourceCalculatorProcessTree;
      39: invokevirtual #206                // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.getVirtualMemorySize:()J
      42: lstore        5
      44: lload_1
      45: ldc2_w        #35                 // long -1l
      48: lcmp
      49: ifeq          70
      52: aload_0
      53: getfield      #37                 // Field initCpuCumulativeTime:J
      56: ldc2_w        #35                 // long -1l
      59: lcmp
      60: ifeq          70
      63: lload_1
      64: aload_0
      65: getfield      #37                 // Field initCpuCumulativeTime:J
      68: lsub
      69: lstore_1
      70: lload_1
      71: ldc2_w        #35                 // long -1l
      74: lcmp
      75: ifeq          95
      78: aload_0
      79: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
      82: getstatic     #207                // Field org/apache/hadoop/mapreduce/TaskCounter.CPU_MILLISECONDS:Lorg/apache/hadoop/mapreduce/TaskCounter;
      85: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
      88: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
      91: lload_1
      92: invokevirtual #208                // Method org/apache/hadoop/mapred/Counters$Counter.setValue:(J)V
      95: lload_3
      96: ldc2_w        #35                 // long -1l
      99: lcmp
     100: ifeq          120
     103: aload_0
     104: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     107: getstatic     #209                // Field org/apache/hadoop/mapreduce/TaskCounter.PHYSICAL_MEMORY_BYTES:Lorg/apache/hadoop/mapreduce/TaskCounter;
     110: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     113: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     116: lload_3
     117: invokevirtual #208                // Method org/apache/hadoop/mapred/Counters$Counter.setValue:(J)V
     120: lload         5
     122: ldc2_w        #35                 // long -1l
     125: lcmp
     126: ifeq          147
     129: aload_0
     130: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     133: getstatic     #210                // Field org/apache/hadoop/mapreduce/TaskCounter.VIRTUAL_MEMORY_BYTES:Lorg/apache/hadoop/mapreduce/TaskCounter;
     136: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     139: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     142: lload         5
     144: invokevirtual #208                // Method org/apache/hadoop/mapred/Counters$Counter.setValue:(J)V
     147: lload_3
     148: ldc2_w        #35                 // long -1l
     151: lcmp
     152: ifeq          201
     155: aload_0
     156: invokevirtual #49                 // Method isMapTask:()Z
     159: ifeq          168
     162: getstatic     #211                // Field org/apache/hadoop/mapreduce/TaskCounter.MAP_PHYSICAL_MEMORY_BYTES_MAX:Lorg/apache/hadoop/mapreduce/TaskCounter;
     165: goto          171
     168: getstatic     #212                // Field org/apache/hadoop/mapreduce/TaskCounter.REDUCE_PHYSICAL_MEMORY_BYTES_MAX:Lorg/apache/hadoop/mapreduce/TaskCounter;
     171: astore        7
     173: aload_0
     174: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     177: aload         7
     179: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     182: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     185: astore        8
     187: aload         8
     189: aload         8
     191: invokevirtual #213                // Method org/apache/hadoop/mapred/Counters$Counter.getValue:()J
     194: lload_3
     195: invokestatic  #214                // Method java/lang/Math.max:(JJ)J
     198: invokevirtual #208                // Method org/apache/hadoop/mapred/Counters$Counter.setValue:(J)V
     201: lload         5
     203: ldc2_w        #35                 // long -1l
     206: lcmp
     207: ifeq          257
     210: aload_0
     211: invokevirtual #49                 // Method isMapTask:()Z
     214: ifeq          223
     217: getstatic     #215                // Field org/apache/hadoop/mapreduce/TaskCounter.MAP_VIRTUAL_MEMORY_BYTES_MAX:Lorg/apache/hadoop/mapreduce/TaskCounter;
     220: goto          226
     223: getstatic     #216                // Field org/apache/hadoop/mapreduce/TaskCounter.REDUCE_VIRTUAL_MEMORY_BYTES_MAX:Lorg/apache/hadoop/mapreduce/TaskCounter;
     226: astore        7
     228: aload_0
     229: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
     232: aload         7
     234: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
     237: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
     240: astore        8
     242: aload         8
     244: aload         8
     246: invokevirtual #213                // Method org/apache/hadoop/mapred/Counters$Counter.getValue:()J
     249: lload         5
     251: invokestatic  #214                // Method java/lang/Math.max:(JJ)J
     254: invokevirtual #208                // Method org/apache/hadoop/mapred/Counters$Counter.setValue:(J)V
     257: return

  private synchronized void updateCounters();
    Code:
       0: new           #46                 // class java/util/HashMap
       3: dup
       4: invokespecial #47                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: invokestatic  #96                 // Method org/apache/hadoop/fs/FileSystem.getAllStatistics:()Ljava/util/List;
      11: invokeinterface #97,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          110
      26: aload_2
      27: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #100                // class org/apache/hadoop/fs/FileSystem$Statistics
      35: astore_3
      36: aload_3
      37: invokevirtual #101                // Method org/apache/hadoop/fs/FileSystem$Statistics.getScheme:()Ljava/lang/String;
      40: astore        4
      42: aload_1
      43: aload         4
      45: invokeinterface #217,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      50: ifeq          78
      53: aload_1
      54: aload         4
      56: invokeinterface #178,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #218                // class java/util/List
      64: astore        5
      66: aload         5
      68: aload_3
      69: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: goto          107
      78: new           #90                 // class java/util/ArrayList
      81: dup
      82: invokespecial #91                 // Method java/util/ArrayList."<init>":()V
      85: astore        5
      87: aload         5
      89: aload_3
      90: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: aload_1
      97: aload         4
      99: aload         5
     101: invokeinterface #219,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          17
     110: aload_1
     111: invokeinterface #220,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     116: invokeinterface #221,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     121: astore_2
     122: aload_2
     123: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     128: ifeq          220
     131: aload_2
     132: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #222                // class java/util/Map$Entry
     140: astore_3
     141: aload_0
     142: getfield      #48                 // Field statisticUpdaters:Ljava/util/Map;
     145: aload_3
     146: invokeinterface #223,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     151: invokeinterface #178,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     156: checkcast     #224                // class org/apache/hadoop/mapred/Task$FileSystemStatisticUpdater
     159: astore        4
     161: aload         4
     163: ifnonnull     212
     166: new           #224                // class org/apache/hadoop/mapred/Task$FileSystemStatisticUpdater
     169: dup
     170: aload_0
     171: aload_3
     172: invokeinterface #225,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     177: checkcast     #218                // class java/util/List
     180: aload_3
     181: invokeinterface #223,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     186: checkcast     #11                 // class java/lang/String
     189: invokespecial #226                // Method org/apache/hadoop/mapred/Task$FileSystemStatisticUpdater."<init>":(Lorg/apache/hadoop/mapred/Task;Ljava/util/List;Ljava/lang/String;)V
     192: astore        4
     194: aload_0
     195: getfield      #48                 // Field statisticUpdaters:Ljava/util/Map;
     198: aload_3
     199: invokeinterface #223,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     204: aload         4
     206: invokeinterface #219,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     211: pop
     212: aload         4
     214: invokevirtual #227                // Method org/apache/hadoop/mapred/Task$FileSystemStatisticUpdater.updateCounters:()V
     217: goto          122
     220: aload_0
     221: getfield      #64                 // Field gcUpdater:Lorg/apache/hadoop/mapred/Task$GcTimeUpdater;
     224: invokevirtual #228                // Method org/apache/hadoop/mapred/Task$GcTimeUpdater.incrementGcCounter:()V
     227: aload_0
     228: invokevirtual #229                // Method updateResourceCounters:()V
     231: return

  private void updateHeapUsageCounter();
    Code:
       0: invokestatic  #230                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: invokevirtual #231                // Method java/lang/Runtime.totalMemory:()J
       6: lstore_1
       7: aload_0
       8: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
      11: getstatic     #232                // Field org/apache/hadoop/mapreduce/TaskCounter.COMMITTED_HEAP_BYTES:Lorg/apache/hadoop/mapreduce/TaskCounter;
      14: invokevirtual #55                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
      17: checkcast     #56                 // class org/apache/hadoop/mapred/Counters$Counter
      20: lload_1
      21: invokevirtual #208                // Method org/apache/hadoop/mapred/Counters$Counter.setValue:(J)V
      24: return

  public void done(org.apache.hadoop.mapred.TaskUmbilicalProtocol, org.apache.hadoop.mapred.Task$TaskReporter) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method updateCounters:()V
       4: aload_0
       5: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
       8: invokevirtual #104                // Method org/apache/hadoop/mapred/TaskStatus.getRunState:()Lorg/apache/hadoop/mapred/TaskStatus$State;
      11: getstatic     #233                // Field org/apache/hadoop/mapred/TaskStatus$State.PREEMPTED:Lorg/apache/hadoop/mapred/TaskStatus$State;
      14: if_acmpne     55
      17: aload_0
      18: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
      21: aload_0
      22: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
      25: invokevirtual #234                // Method org/apache/hadoop/mapreduce/OutputCommitter.commitTask:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
      28: aload_1
      29: aload_0
      30: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      33: aload_0
      34: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
      37: invokeinterface #235,  3          // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.preempted:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)V
      42: aload_0
      43: getfield      #5                  // Field taskDone:Ljava/util/concurrent/atomic/AtomicBoolean;
      46: iconst_1
      47: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      50: aload_2
      51: invokevirtual #236                // Method org/apache/hadoop/mapred/Task$TaskReporter.stopCommunicationThread:()V
      54: return
      55: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      58: new           #12                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #237                // String Task:
      67: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      74: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: ldc           #238                // String  is done. And is in the process of committing
      79: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      90: aload_0
      91: invokevirtual #239                // Method isCommitRequired:()Z
      94: istore_3
      95: iload_3
      96: ifeq          191
      99: bipush        10
     101: istore        4
     103: aload_0
     104: getstatic     #241                // Field org/apache/hadoop/mapred/TaskStatus$State.COMMIT_PENDING:Lorg/apache/hadoop/mapred/TaskStatus$State;
     107: invokevirtual #156                // Method setState:(Lorg/apache/hadoop/mapred/TaskStatus$State;)V
     110: aload_1
     111: aload_0
     112: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
     115: aload_0
     116: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     119: invokeinterface #242,  3          // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.commitPending:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)V
     124: goto          181
     127: astore        5
     129: goto          110
     132: astore        5
     134: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
     137: new           #12                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #244                // String Failure sending commit pending:
     146: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload         5
     151: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
     154: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     165: iinc          4, -1
     168: iload         4
     170: ifne          178
     173: bipush        67
     175: invokestatic  #89                 // Method java/lang/System.exit:(I)V
     178: goto          110
     181: aload_0
     182: aload_1
     183: aload_2
     184: aload_0
     185: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     188: invokespecial #245                // Method commit:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;Lorg/apache/hadoop/mapred/Task$TaskReporter;Lorg/apache/hadoop/mapreduce/OutputCommitter;)V
     191: aload_0
     192: getfield      #5                  // Field taskDone:Ljava/util/concurrent/atomic/AtomicBoolean;
     195: iconst_1
     196: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     199: aload_2
     200: invokevirtual #236                // Method org/apache/hadoop/mapred/Task$TaskReporter.stopCommunicationThread:()V
     203: aload_0
     204: invokespecial #3                  // Method updateCounters:()V
     207: aload_0
     208: aload_1
     209: invokespecial #246                // Method sendLastUpdate:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
     212: aload_0
     213: aload_1
     214: invokespecial #247                // Method sendDone:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
     217: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
     220: new           #12                 // class java/lang/StringBuilder
     223: dup
     224: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     227: ldc           #248                // String Final Counters for
     229: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload_0
     233: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
     236: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     239: ldc           #249                // String :
     241: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: aload_0
     245: invokevirtual #250                // Method getCounters:()Lorg/apache/hadoop/mapred/Counters;
     248: invokevirtual #251                // Method org/apache/hadoop/mapred/Counters.toString:()Ljava/lang/String;
     251: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     257: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     262: return
    Exception table:
       from    to  target type
         110   124   127   Class java/lang/InterruptedException
         110   124   132   Class java/io/IOException

  boolean isCommitRequired() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #252                // Method isMapOrReduce:()Z
       6: ifeq          21
       9: aload_0
      10: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
      13: aload_0
      14: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
      17: invokevirtual #253                // Method org/apache/hadoop/mapreduce/OutputCommitter.needsTaskCommit:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Z
      20: istore_1
      21: iload_1
      22: ireturn

  public void statusUpdate(org.apache.hadoop.mapred.TaskUmbilicalProtocol) throws java.io.IOException;
    Code:
       0: bipush        10
       2: istore_2
       3: aload_1
       4: aload_0
       5: invokevirtual #254                // Method getTaskID:()Lorg/apache/hadoop/mapred/TaskAttemptID;
       8: aload_0
       9: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
      12: invokeinterface #255,  3          // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.statusUpdate:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)Lorg/apache/hadoop/mapred/AMFeedback;
      17: invokevirtual #256                // Method org/apache/hadoop/mapred/AMFeedback.getTaskFound:()Z
      20: ifne          100
      23: aload_0
      24: getfield      #1                  // Field uberized:Z
      27: ifeq          64
      30: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      33: new           #12                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc_w         #257                // String Task no longer available:
      43: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      50: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      61: goto          162
      64: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      67: new           #12                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc_w         #258                // String Parent died.  Exiting
      77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      84: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      95: bipush        66
      97: invokestatic  #259                // Method org/apache/hadoop/util/ExitUtil.terminate:(I)V
     100: aload_0
     101: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     104: invokevirtual #260                // Method org/apache/hadoop/mapred/TaskStatus.clearStatus:()V
     107: return
     108: astore_3
     109: invokestatic  #261                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     112: invokevirtual #262                // Method java/lang/Thread.interrupt:()V
     115: goto          3
     118: astore_3
     119: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
     122: new           #12                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc_w         #263                // String Failure sending status update:
     132: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_3
     136: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
     139: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     150: iinc          2, -1
     153: iload_2
     154: ifne          159
     157: aload_3
     158: athrow
     159: goto          3
     162: return
    Exception table:
       from    to  target type
           3    61   108   Class java/lang/InterruptedException
          64   107   108   Class java/lang/InterruptedException
           3    61   118   Class java/io/IOException
          64   107   118   Class java/io/IOException

  private void sendLastUpdate(org.apache.hadoop.mapred.TaskUmbilicalProtocol) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
       4: aload_0
       5: invokespecial #264                // Method calculateOutputSize:()J
       8: invokevirtual #265                // Method org/apache/hadoop/mapred/TaskStatus.setOutputSize:(J)V
      11: aload_0
      12: getfield      #51                 // Field taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
      15: aload_0
      16: getfield      #43                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
      19: invokevirtual #266                // Method org/apache/hadoop/util/Progress.get:()F
      22: aload_0
      23: getfield      #43                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
      26: invokevirtual #267                // Method org/apache/hadoop/util/Progress.toString:()Ljava/lang/String;
      29: aload_0
      30: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
      33: invokevirtual #268                // Method org/apache/hadoop/mapred/TaskStatus.statusUpdate:(FLjava/lang/String;Lorg/apache/hadoop/mapred/Counters;)V
      36: aload_0
      37: aload_1
      38: invokevirtual #269                // Method statusUpdate:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
      41: return

  private long calculateOutputSize() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #252                // Method isMapOrReduce:()Z
       4: ifne          11
       7: ldc2_w        #35                 // long -1l
      10: lreturn
      11: aload_0
      12: invokevirtual #49                 // Method isMapTask:()Z
      15: ifeq          66
      18: aload_0
      19: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
      22: invokevirtual #270                // Method org/apache/hadoop/mapred/JobConf.getNumReduceTasks:()I
      25: ifle          66
      28: aload_0
      29: getfield      #271                // Field mapOutputFile:Lorg/apache/hadoop/mapred/MapOutputFile;
      32: invokevirtual #272                // Method org/apache/hadoop/mapred/MapOutputFile.getOutputFile:()Lorg/apache/hadoop/fs/Path;
      35: astore_1
      36: aload_0
      37: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
      40: invokestatic  #273                // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      43: astore_2
      44: aload_2
      45: aload_1
      46: invokevirtual #274                // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      49: invokevirtual #275                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      52: lreturn
      53: astore_1
      54: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      57: ldc_w         #276                // String Could not find output size
      60: aload_1
      61: invokeinterface #277,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      66: ldc2_w        #35                 // long -1l
      69: lreturn
    Exception table:
       from    to  target type
          28    52    53   Class java/io/IOException

  private void sendDone(org.apache.hadoop.mapred.TaskUmbilicalProtocol) throws java.io.IOException;
    Code:
       0: bipush        10
       2: istore_2
       3: aload_1
       4: aload_0
       5: invokevirtual #254                // Method getTaskID:()Lorg/apache/hadoop/mapred/TaskAttemptID;
       8: invokeinterface #278,  2          // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.done:(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
      13: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      16: new           #12                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc_w         #279                // String Task \'
      26: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
      33: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc_w         #280                // String \' done.
      39: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      50: return
      51: astore_3
      52: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      55: new           #12                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc_w         #281                // String Failure signalling completion:
      65: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      72: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      83: iinc          2, -1
      86: iload_2
      87: ifne          92
      90: aload_3
      91: athrow
      92: goto          3
    Exception table:
       from    to  target type
           3    50    51   Class java/io/IOException

  private void commit(org.apache.hadoop.mapred.TaskUmbilicalProtocol, org.apache.hadoop.mapred.Task$TaskReporter, org.apache.hadoop.mapreduce.OutputCommitter) throws java.io.IOException;
    Code:
       0: bipush        10
       2: istore        4
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
       9: invokeinterface #282,  2          // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.canCommit:(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
      14: ifne          35
      17: ldc2_w        #283                // long 1000l
      20: invokestatic  #285                // Method java/lang/Thread.sleep:(J)V
      23: goto          28
      26: astore        5
      28: aload_2
      29: invokevirtual #286                // Method org/apache/hadoop/mapred/Task$TaskReporter.setProgressFlag:()V
      32: goto          4
      35: goto          96
      38: astore        5
      40: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      43: new           #12                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc_w         #287                // String Failure asking whether task can commit:
      53: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         5
      58: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      61: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      72: iinc          4, -1
      75: iload         4
      77: ifne          93
      80: aload_0
      81: aload_0
      82: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
      85: invokespecial #288                // Method discardOutput:(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
      88: bipush        68
      90: invokestatic  #89                 // Method java/lang/System.exit:(I)V
      93: goto          4
      96: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      99: new           #12                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc_w         #289                // String Task
     109: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
     116: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: ldc_w         #290                // String  is allowed to commit now
     122: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     133: aload_3
     134: aload_0
     135: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
     138: invokevirtual #234                // Method org/apache/hadoop/mapreduce/OutputCommitter.commitTask:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
     141: return
     142: astore        5
     144: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
     147: new           #12                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc_w         #291                // String Failure committing:
     157: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload         5
     162: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
     165: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     176: aload_0
     177: aload_0
     178: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
     181: invokespecial #288                // Method discardOutput:(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
     184: aload         5
     186: athrow
    Exception table:
       from    to  target type
          17    23    26   Class java/lang/InterruptedException
           4    35    38   Class java/io/IOException
          96   141   142   Class java/io/IOException

  private void discardOutput(org.apache.hadoop.mapred.TaskAttemptContext);
    Code:
       0: aload_0
       1: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
       4: aload_1
       5: invokevirtual #292                // Method org/apache/hadoop/mapreduce/OutputCommitter.abortTask:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
       8: goto          43
      11: astore_2
      12: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      15: new           #12                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc_w         #293                // String Failure cleaning up:
      25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokestatic  #83                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokeinterface #193,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      43: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  protected void runTaskCleanupTask(org.apache.hadoop.mapred.TaskUmbilicalProtocol, org.apache.hadoop.mapred.Task$TaskReporter) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #294                // Method taskCleanup:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #295                // Method done:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;Lorg/apache/hadoop/mapred/Task$TaskReporter;)V
      11: return

  void taskCleanup(org.apache.hadoop.mapred.TaskUmbilicalProtocol) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #131                // Field org/apache/hadoop/mapred/TaskStatus$Phase.CLEANUP:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
       4: invokevirtual #132                // Method setPhase:(Lorg/apache/hadoop/mapred/TaskStatus$Phase;)V
       7: aload_0
       8: invokevirtual #201                // Method getProgress:()Lorg/apache/hadoop/util/Progress;
      11: ldc_w         #296                // String cleanup
      14: invokevirtual #297                // Method org/apache/hadoop/util/Progress.setStatus:(Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: invokevirtual #269                // Method statusUpdate:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
      22: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      25: ldc_w         #298                // String Running cleanup for the task
      28: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: aload_0
      34: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
      37: aload_0
      38: getfield      #153                // Field taskContext:Lorg/apache/hadoop/mapred/TaskAttemptContext;
      41: invokevirtual #292                // Method org/apache/hadoop/mapreduce/OutputCommitter.abortTask:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
      44: return

  protected void runJobCleanupTask(org.apache.hadoop.mapred.TaskUmbilicalProtocol, org.apache.hadoop.mapred.Task$TaskReporter) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getstatic     #131                // Field org/apache/hadoop/mapred/TaskStatus$Phase.CLEANUP:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
       4: invokevirtual #132                // Method setPhase:(Lorg/apache/hadoop/mapred/TaskStatus$Phase;)V
       7: aload_0
       8: invokevirtual #201                // Method getProgress:()Lorg/apache/hadoop/util/Progress;
      11: ldc_w         #296                // String cleanup
      14: invokevirtual #297                // Method org/apache/hadoop/util/Progress.setStatus:(Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: invokevirtual #269                // Method statusUpdate:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
      22: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      25: ldc_w         #299                // String Cleaning up job
      28: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: aload_0
      34: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      37: getstatic     #109                // Field org/apache/hadoop/mapreduce/JobStatus$State.FAILED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      40: if_acmpeq     53
      43: aload_0
      44: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      47: getstatic     #108                // Field org/apache/hadoop/mapreduce/JobStatus$State.KILLED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      50: if_acmpne     138
      53: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
      56: new           #12                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc_w         #300                // String Aborting job with runstate :
      66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
      73: invokevirtual #301                // Method org/apache/hadoop/mapreduce/JobStatus$State.name:()Ljava/lang/String;
      76: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      87: aload_0
      88: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
      91: invokevirtual #302                // Method org/apache/hadoop/mapred/JobConf.getUseNewMapper:()Z
      94: ifeq          115
      97: aload_0
      98: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     101: aload_0
     102: getfield      #150                // Field jobContext:Lorg/apache/hadoop/mapred/JobContext;
     105: aload_0
     106: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     109: invokevirtual #303                // Method org/apache/hadoop/mapreduce/OutputCommitter.abortJob:(Lorg/apache/hadoop/mapreduce/JobContext;Lorg/apache/hadoop/mapreduce/JobStatus$State;)V
     112: goto          240
     115: aload_0
     116: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     119: checkcast     #304                // class org/apache/hadoop/mapred/OutputCommitter
     122: astore_3
     123: aload_3
     124: aload_0
     125: getfield      #150                // Field jobContext:Lorg/apache/hadoop/mapred/JobContext;
     128: aload_0
     129: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     132: invokevirtual #305                // Method org/apache/hadoop/mapred/OutputCommitter.abortJob:(Lorg/apache/hadoop/mapreduce/JobContext;Lorg/apache/hadoop/mapreduce/JobStatus$State;)V
     135: goto          240
     138: aload_0
     139: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     142: getstatic     #306                // Field org/apache/hadoop/mapreduce/JobStatus$State.SUCCEEDED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     145: if_acmpne     173
     148: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
     151: ldc_w         #307                // String Committing job
     154: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     159: aload_0
     160: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
     163: aload_0
     164: getfield      #150                // Field jobContext:Lorg/apache/hadoop/mapred/JobContext;
     167: invokevirtual #308                // Method org/apache/hadoop/mapreduce/OutputCommitter.commitJob:(Lorg/apache/hadoop/mapreduce/JobContext;)V
     170: goto          240
     173: new           #86                 // class java/io/IOException
     176: dup
     177: new           #12                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc_w         #309                // String Invalid state of the job for cleanup. State found
     187: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: getfield      #107                // Field jobRunStateForCleanup:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     194: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     197: ldc_w         #310                // String  expecting
     200: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: getstatic     #306                // Field org/apache/hadoop/mapreduce/JobStatus$State.SUCCEEDED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     206: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     209: ldc_w         #311                // String ,
     212: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: getstatic     #109                // Field org/apache/hadoop/mapreduce/JobStatus$State.FAILED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     218: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     221: ldc_w         #312                // String  or
     224: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: getstatic     #108                // Field org/apache/hadoop/mapreduce/JobStatus$State.KILLED:Lorg/apache/hadoop/mapreduce/JobStatus$State;
     230: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     233: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     236: invokespecial #313                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     239: athrow
     240: new           #314                // class org/apache/hadoop/mapred/JobConf
     243: dup
     244: aload_0
     245: getfield      #150                // Field jobContext:Lorg/apache/hadoop/mapred/JobContext;
     248: invokeinterface #315,  1          // InterfaceMethod org/apache/hadoop/mapred/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
     253: invokespecial #316                // Method org/apache/hadoop/mapred/JobConf."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
     256: astore_3
     257: aload_0
     258: aload_3
     259: invokevirtual #317                // Method keepTaskFiles:(Lorg/apache/hadoop/mapred/JobConf;)Z
     262: ifne          302
     265: aload_3
     266: ldc_w         #319                // String mapreduce.job.dir
     269: invokevirtual #320                // Method org/apache/hadoop/mapred/JobConf.get:(Ljava/lang/String;)Ljava/lang/String;
     272: astore        4
     274: new           #321                // class org/apache/hadoop/fs/Path
     277: dup
     278: aload         4
     280: invokespecial #322                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     283: astore        5
     285: aload         5
     287: aload_3
     288: invokevirtual #92                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     291: astore        6
     293: aload         6
     295: aload         5
     297: iconst_1
     298: invokevirtual #323                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     301: pop
     302: aload_0
     303: aload_1
     304: aload_2
     305: invokevirtual #295                // Method done:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;Lorg/apache/hadoop/mapred/Task$TaskReporter;)V
     308: return

  protected boolean keepTaskFiles(org.apache.hadoop.mapred.JobConf);
    Code:
       0: aload_1
       1: invokevirtual #324                // Method org/apache/hadoop/mapred/JobConf.getKeepTaskFilesPattern:()Ljava/lang/String;
       4: ifnonnull     14
       7: aload_1
       8: invokevirtual #325                // Method org/apache/hadoop/mapred/JobConf.getKeepFailedTaskFiles:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected void runJobSetupTask(org.apache.hadoop.mapred.TaskUmbilicalProtocol, org.apache.hadoop.mapred.Task$TaskReporter) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #201                // Method getProgress:()Lorg/apache/hadoop/util/Progress;
       4: ldc_w         #326                // String setup
       7: invokevirtual #297                // Method org/apache/hadoop/util/Progress.setStatus:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #165                // Field committer:Lorg/apache/hadoop/mapreduce/OutputCommitter;
      14: aload_0
      15: getfield      #150                // Field jobContext:Lorg/apache/hadoop/mapred/JobContext;
      18: invokevirtual #327                // Method org/apache/hadoop/mapreduce/OutputCommitter.setupJob:(Lorg/apache/hadoop/mapreduce/JobContext;)V
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokevirtual #295                // Method done:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;Lorg/apache/hadoop/mapred/Task$TaskReporter;)V
      27: return

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: instanceof    #314                // class org/apache/hadoop/mapred/JobConf
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #314                // class org/apache/hadoop/mapred/JobConf
      12: putfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
      15: goto          30
      18: aload_0
      19: new           #314                // class org/apache/hadoop/mapred/JobConf
      22: dup
      23: aload_1
      24: invokespecial #316                // Method org/apache/hadoop/mapred/JobConf."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      27: putfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
      30: aload_0
      31: aload_1
      32: ldc_w         #328                // String mapreduce.task.local.output.class
      35: ldc_w         #329                // class org/apache/hadoop/mapred/MROutputFiles
      38: ldc_w         #330                // class org/apache/hadoop/mapred/MapOutputFile
      41: invokevirtual #331                // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      44: aload_1
      45: invokestatic  #161                // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      48: checkcast     #330                // class org/apache/hadoop/mapred/MapOutputFile
      51: putfield      #271                // Field mapOutputFile:Lorg/apache/hadoop/mapred/MapOutputFile;
      54: aload_0
      55: new           #332                // class org/apache/hadoop/fs/LocalDirAllocator
      58: dup
      59: ldc_w         #333                // String mapreduce.cluster.local.dir
      62: invokespecial #334                // Method org/apache/hadoop/fs/LocalDirAllocator."<init>":(Ljava/lang/String;)V
      65: putfield      #335                // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
      68: aload_1
      69: ldc_w         #336                // String mapreduce.job.net.static.resolutions
      72: invokevirtual #337                // Method org/apache/hadoop/conf/Configuration.getStrings:(Ljava/lang/String;)[Ljava/lang/String;
      75: astore_2
      76: aload_2
      77: ifnull        146
      80: aload_2
      81: astore_3
      82: aload_3
      83: arraylength
      84: istore        4
      86: iconst_0
      87: istore        5
      89: iload         5
      91: iload         4
      93: if_icmpge     146
      96: aload_3
      97: iload         5
      99: aaload
     100: astore        6
     102: aload         6
     104: iconst_0
     105: aload         6
     107: bipush        61
     109: invokevirtual #338                // Method java/lang/String.indexOf:(I)I
     112: invokevirtual #194                // Method java/lang/String.substring:(II)Ljava/lang/String;
     115: astore        7
     117: aload         6
     119: aload         6
     121: bipush        61
     123: invokevirtual #338                // Method java/lang/String.indexOf:(I)I
     126: iconst_1
     127: iadd
     128: invokevirtual #339                // Method java/lang/String.substring:(I)Ljava/lang/String;
     131: astore        8
     133: aload         7
     135: aload         8
     137: invokestatic  #340                // Method org/apache/hadoop/net/NetUtils.addStaticResolution:(Ljava/lang/String;Ljava/lang/String;)V
     140: iinc          5, 1
     143: goto          89
     146: aload_0
     147: aload_1
     148: ldc_w         #341                // String mapreduce.task.uberized
     151: iconst_0
     152: invokevirtual #342                // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     155: putfield      #1                  // Field uberized:Z
     158: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #166                // Field conf:Lorg/apache/hadoop/mapred/JobConf;
       4: areturn

  public org.apache.hadoop.mapred.MapOutputFile getMapOutputFile();
    Code:
       0: aload_0
       1: getfield      #271                // Field mapOutputFile:Lorg/apache/hadoop/mapred/MapOutputFile;
       4: areturn

  protected static <INKEY, INVALUE, OUTKEY, OUTVALUE> org.apache.hadoop.mapreduce.Reducer<INKEY, INVALUE, OUTKEY, OUTVALUE>.Context createReduceContext(org.apache.hadoop.mapreduce.Reducer<INKEY, INVALUE, OUTKEY, OUTVALUE>, org.apache.hadoop.conf.Configuration, org.apache.hadoop.mapreduce.TaskAttemptID, org.apache.hadoop.mapred.RawKeyValueIterator, org.apache.hadoop.mapreduce.Counter, org.apache.hadoop.mapreduce.Counter, org.apache.hadoop.mapreduce.RecordWriter<OUTKEY, OUTVALUE>, org.apache.hadoop.mapreduce.OutputCommitter, org.apache.hadoop.mapreduce.StatusReporter, org.apache.hadoop.io.RawComparator<INKEY>, java.lang.Class<INKEY>, java.lang.Class<INVALUE>) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: new           #343                // class org/apache/hadoop/mapreduce/task/ReduceContextImpl
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: aload         9
      19: aload         10
      21: aload         11
      23: invokespecial #344                // Method org/apache/hadoop/mapreduce/task/ReduceContextImpl."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;Lorg/apache/hadoop/mapred/RawKeyValueIterator;Lorg/apache/hadoop/mapreduce/Counter;Lorg/apache/hadoop/mapreduce/Counter;Lorg/apache/hadoop/mapreduce/RecordWriter;Lorg/apache/hadoop/mapreduce/OutputCommitter;Lorg/apache/hadoop/mapreduce/StatusReporter;Lorg/apache/hadoop/io/RawComparator;Ljava/lang/Class;Ljava/lang/Class;)V
      26: astore        12
      28: new           #345                // class org/apache/hadoop/mapreduce/lib/reduce/WrappedReducer
      31: dup
      32: invokespecial #346                // Method org/apache/hadoop/mapreduce/lib/reduce/WrappedReducer."<init>":()V
      35: aload         12
      37: invokevirtual #347                // Method org/apache/hadoop/mapreduce/lib/reduce/WrappedReducer.getReducerContext:(Lorg/apache/hadoop/mapreduce/ReduceContext;)Lorg/apache/hadoop/mapreduce/Reducer$Context;
      40: astore        13
      42: aload         13
      44: areturn

  org.apache.hadoop.io.BytesWritable getExtraData();
    Code:
       0: aload_0
       1: getfield      #28                 // Field extraData:Lorg/apache/hadoop/io/BytesWritable;
       4: areturn

  void setExtraData(org.apache.hadoop.io.BytesWritable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field extraData:Lorg/apache/hadoop/io/BytesWritable;
       5: return

  static org.apache.hadoop.mapred.Counters access$000(org.apache.hadoop.mapred.Task);
    Code:
       0: aload_0
       1: getfield      #9                  // Field counters:Lorg/apache/hadoop/mapred/Counters;
       4: areturn

  static boolean access$100(org.apache.hadoop.mapred.Task);
    Code:
       0: aload_0
       1: getfield      #8                  // Field skipping:Z
       4: ireturn

  static long access$202(org.apache.hadoop.mapred.Task, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #7                  // Field currentRecStartIndex:J
       6: lreturn

  static java.util.Iterator access$300(org.apache.hadoop.mapred.Task);
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentRecIndexIterator:Ljava/util/Iterator;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$400(org.apache.hadoop.mapred.Task);
    Code:
       0: aload_0
       1: getfield      #5                  // Field taskDone:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static org.slf4j.Logger access$500();
    Code:
       0: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static void access$700(org.apache.hadoop.mapred.Task);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method updateCounters:()V
       4: return

  static org.apache.hadoop.mapred.TaskAttemptID access$800(org.apache.hadoop.mapred.Task);
    Code:
       0: aload_0
       1: getfield      #2                  // Field taskId:Lorg/apache/hadoop/mapred/TaskAttemptID;
       4: areturn

  static boolean access$900(org.apache.hadoop.mapred.Task);
    Code:
       0: aload_0
       1: getfield      #1                  // Field uberized:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #240                // class org/apache/hadoop/mapred/Task
       2: invokestatic  #348                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
       8: ldc_w         #349                // String .merged
      11: putstatic     #350                // Field MERGED_OUTPUT_PREFIX:Ljava/lang/String;
      14: invokestatic  #351                // Method java/text/NumberFormat.getInstance:()Ljava/text/NumberFormat;
      17: putstatic     #19                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      20: getstatic     #19                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      23: iconst_5
      24: invokevirtual #352                // Method java/text/NumberFormat.setMinimumIntegerDigits:(I)V
      27: getstatic     #19                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      30: iconst_0
      31: invokevirtual #353                // Method java/text/NumberFormat.setGroupingUsed:(Z)V
      34: return
}
