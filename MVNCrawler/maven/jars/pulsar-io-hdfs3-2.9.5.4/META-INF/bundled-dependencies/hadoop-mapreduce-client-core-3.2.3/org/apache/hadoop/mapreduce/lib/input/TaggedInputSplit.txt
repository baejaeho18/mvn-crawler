Compiled from "TaggedInputSplit.java"
class org.apache.hadoop.mapreduce.lib.input.TaggedInputSplit extends org.apache.hadoop.mapreduce.InputSplit implements org.apache.hadoop.conf.Configurable,org.apache.hadoop.io.Writable {
  private java.lang.Class<? extends org.apache.hadoop.mapreduce.InputSplit> inputSplitClass;

  private org.apache.hadoop.mapreduce.InputSplit inputSplit;

  private java.lang.Class<? extends org.apache.hadoop.mapreduce.InputFormat> inputFormatClass;

  private java.lang.Class<? extends org.apache.hadoop.mapreduce.Mapper> mapperClass;

  private org.apache.hadoop.conf.Configuration conf;

  public org.apache.hadoop.mapreduce.lib.input.TaggedInputSplit();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/InputSplit."<init>":()V
       4: return

  public org.apache.hadoop.mapreduce.lib.input.TaggedInputSplit(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.conf.Configuration, java.lang.Class<? extends org.apache.hadoop.mapreduce.InputFormat>, java.lang.Class<? extends org.apache.hadoop.mapreduce.Mapper>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/InputSplit."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: putfield      #3                  // Field inputSplitClass:Ljava/lang/Class;
      12: aload_0
      13: aload_1
      14: putfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      22: aload_0
      23: aload_3
      24: putfield      #6                  // Field inputFormatClass:Ljava/lang/Class;
      27: aload_0
      28: aload         4
      30: putfield      #7                  // Field mapperClass:Ljava/lang/Class;
      33: return

  public org.apache.hadoop.mapreduce.InputSplit getInputSplit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
       4: areturn

  public java.lang.Class<? extends org.apache.hadoop.mapreduce.InputFormat> getInputFormatClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputFormatClass:Ljava/lang/Class;
       4: areturn

  public java.lang.Class<? extends org.apache.hadoop.mapreduce.Mapper> getMapperClass();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mapperClass:Ljava/lang/Class;
       4: areturn

  public long getLength() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
       4: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/InputSplit.getLength:()J
       7: lreturn

  public java.lang.String[] getLocations() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
       4: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/InputSplit.getLocations:()[Ljava/lang/String;
       7: areturn

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #10                 // Method readClass:(Ljava/io/DataInput;)Ljava/lang/Class;
       6: putfield      #3                  // Field inputSplitClass:Ljava/lang/Class;
       9: aload_0
      10: aload_0
      11: aload_1
      12: invokespecial #10                 // Method readClass:(Ljava/io/DataInput;)Ljava/lang/Class;
      15: putfield      #6                  // Field inputFormatClass:Ljava/lang/Class;
      18: aload_0
      19: aload_0
      20: aload_1
      21: invokespecial #10                 // Method readClass:(Ljava/io/DataInput;)Ljava/lang/Class;
      24: putfield      #7                  // Field mapperClass:Ljava/lang/Class;
      27: aload_0
      28: aload_0
      29: getfield      #3                  // Field inputSplitClass:Ljava/lang/Class;
      32: aload_0
      33: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      36: invokestatic  #11                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      39: checkcast     #12                 // class org/apache/hadoop/mapreduce/InputSplit
      42: putfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
      45: new           #13                 // class org/apache/hadoop/io/serializer/SerializationFactory
      48: dup
      49: aload_0
      50: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      53: invokespecial #14                 // Method org/apache/hadoop/io/serializer/SerializationFactory."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      56: astore_2
      57: aload_2
      58: aload_0
      59: getfield      #3                  // Field inputSplitClass:Ljava/lang/Class;
      62: invokevirtual #15                 // Method org/apache/hadoop/io/serializer/SerializationFactory.getDeserializer:(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
      65: astore_3
      66: aload_3
      67: aload_1
      68: checkcast     #16                 // class java/io/DataInputStream
      71: invokeinterface #17,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.open:(Ljava/io/InputStream;)V
      76: aload_0
      77: aload_3
      78: aload_0
      79: getfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
      82: invokeinterface #18,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Deserializer.deserialize:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #12                 // class org/apache/hadoop/mapreduce/InputSplit
      90: putfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
      93: return

  private java.lang.Class<?> readClass(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #19                 // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
       4: invokestatic  #20                 // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      12: aload_2
      13: invokevirtual #21                 // Method org/apache/hadoop/conf/Configuration.getClassByName:(Ljava/lang/String;)Ljava/lang/Class;
      16: areturn
      17: astore_3
      18: new           #23                 // class java/lang/RuntimeException
      21: dup
      22: ldc           #24                 // String readObject can\'t find class
      24: aload_3
      25: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: athrow
    Exception table:
       from    to  target type
           8    16    17   Class java/lang/ClassNotFoundException

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field inputSplitClass:Ljava/lang/Class;
       5: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokestatic  #27                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      11: pop
      12: aload_1
      13: aload_0
      14: getfield      #6                  // Field inputFormatClass:Ljava/lang/Class;
      17: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokestatic  #27                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #7                  // Field mapperClass:Ljava/lang/Class;
      29: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      32: invokestatic  #27                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      35: pop
      36: new           #13                 // class org/apache/hadoop/io/serializer/SerializationFactory
      39: dup
      40: aload_0
      41: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      44: invokespecial #14                 // Method org/apache/hadoop/io/serializer/SerializationFactory."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      47: astore_2
      48: aload_2
      49: aload_0
      50: getfield      #3                  // Field inputSplitClass:Ljava/lang/Class;
      53: invokevirtual #28                 // Method org/apache/hadoop/io/serializer/SerializationFactory.getSerializer:(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;
      56: astore_3
      57: aload_3
      58: aload_1
      59: checkcast     #29                 // class java/io/DataOutputStream
      62: invokeinterface #30,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.open:(Ljava/io/OutputStream;)V
      67: aload_3
      68: aload_0
      69: getfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
      72: invokeinterface #31,  2           // InterfaceMethod org/apache/hadoop/io/serializer/Serializer.serialize:(Ljava/lang/Object;)V
      77: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputSplit:Lorg/apache/hadoop/mapreduce/InputSplit;
       4: invokevirtual #32                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn
}
