Compiled from "SecureShuffleUtils.java"
public class org.apache.hadoop.mapreduce.security.SecureShuffleUtils {
  private static final org.slf4j.Logger LOG;

  public static final java.lang.String HTTP_HEADER_URL_HASH;

  public static final java.lang.String HTTP_HEADER_REPLY_URL_HASH;

  public org.apache.hadoop.mapreduce.security.SecureShuffleUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String generateHash(byte[], javax.crypto.SecretKey);
    Code:
       0: new           #2                  // class java/lang/String
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method generateByteHash:([BLjavax/crypto/SecretKey;)[B
       9: invokestatic  #4                  // Method org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B
      12: getstatic     #5                  // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      15: invokespecial #6                  // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      18: areturn

  private static byte[] generateByteHash(byte[], javax.crypto.SecretKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method org/apache/hadoop/mapreduce/security/token/JobTokenSecretManager.computeHash:([BLjavax/crypto/SecretKey;)[B
       5: areturn

  private static boolean verifyHash(byte[], byte[], javax.crypto.SecretKey);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #3                  // Method generateByteHash:([BLjavax/crypto/SecretKey;)[B
       5: astore_3
       6: aload_3
       7: iconst_0
       8: aload_3
       9: arraylength
      10: aload_0
      11: iconst_0
      12: aload_0
      13: arraylength
      14: invokestatic  #8                  // Method org/apache/hadoop/io/WritableComparator.compareBytes:([BII[BII)I
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public static java.lang.String hashFromString(java.lang.String, javax.crypto.SecretKey) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #5                  // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
       4: invokevirtual #9                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: aload_1
       8: invokestatic  #10                 // Method generateHash:([BLjavax/crypto/SecretKey;)Ljava/lang/String;
      11: areturn

  public static void verifyReply(java.lang.String, java.lang.String, javax.crypto.SecretKey) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #5                  // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
       4: invokevirtual #9                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: invokestatic  #11                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B
      10: astore_3
      11: aload_3
      12: aload_1
      13: getstatic     #5                  // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      16: invokevirtual #9                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      19: aload_2
      20: invokestatic  #12                 // Method verifyHash:([B[BLjavax/crypto/SecretKey;)Z
      23: istore        4
      25: iload         4
      27: iconst_1
      28: if_icmpeq     41
      31: new           #13                 // class java/io/IOException
      34: dup
      35: ldc           #14                 // String Verification of the hashReply failed
      37: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  public static java.lang.String buildMsgFrom(java.net.URL);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/net/URL.getPath:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #17                 // Method java/net/URL.getQuery:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #18                 // Method java/net/URL.getPort:()I
      12: invokestatic  #19                 // Method buildMsgFrom:(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
      15: areturn

  public static java.lang.String buildMsgFrom(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokeinterface #20,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
       6: aload_0
       7: invokeinterface #21,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      12: aload_0
      13: invokeinterface #22,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocalPort:()I
      18: invokestatic  #19                 // Method buildMsgFrom:(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
      21: areturn

  private static java.lang.String buildMsgFrom(java.lang.String, java.lang.String, int);
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: iload_2
       8: invokestatic  #25                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      11: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #27                 // String ?
      20: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public static java.lang.String toHex(byte[]);
    Code:
       0: new           #29                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #30                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: ldc           #31                 // String
      10: astore_2
      11: new           #32                 // class java/io/PrintStream
      14: dup
      15: aload_1
      16: iconst_0
      17: ldc           #33                 // String UTF-8
      19: invokespecial #34                 // Method java/io/PrintStream."<init>":(Ljava/io/OutputStream;ZLjava/lang/String;)V
      22: astore_3
      23: aload_0
      24: astore        4
      26: aload         4
      28: arraylength
      29: istore        5
      31: iconst_0
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpge     73
      41: aload         4
      43: iload         6
      45: baload
      46: istore        7
      48: aload_3
      49: ldc           #35                 // String %x
      51: iconst_1
      52: anewarray     #36                 // class java/lang/Object
      55: dup
      56: iconst_0
      57: iload         7
      59: invokestatic  #37                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      62: aastore
      63: invokevirtual #38                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      66: pop
      67: iinc          6, 1
      70: goto          34
      73: aload_1
      74: ldc           #33                 // String UTF-8
      76: invokevirtual #39                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
      79: astore_2
      80: goto          84
      83: astore_3
      84: aload_2
      85: areturn
    Exception table:
       from    to  target type
          11    80    83   Class java/io/UnsupportedEncodingException

  static {};
    Code:
       0: ldc           #41                 // class org/apache/hadoop/mapreduce/security/SecureShuffleUtils
       2: invokestatic  #42                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
