Compiled from "MROutputFiles.java"
public class org.apache.hadoop.mapred.MROutputFiles extends org.apache.hadoop.mapred.MapOutputFile {
  private org.apache.hadoop.fs.LocalDirAllocator lDirAlloc;

  public org.apache.hadoop.mapred.MROutputFiles();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapred/MapOutputFile."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/hadoop/fs/LocalDirAllocator
       8: dup
       9: ldc           #4                  // String mapreduce.cluster.local.dir
      11: invokespecial #5                  // Method org/apache/hadoop/fs/LocalDirAllocator."<init>":(Ljava/lang/String;)V
      14: putfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
      17: return

  public org.apache.hadoop.fs.Path getOutputFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: ldc           #10                 // String output/file.out
       6: aload_0
       7: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      10: invokevirtual #12                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathToRead:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      13: areturn

  public org.apache.hadoop.fs.Path getOutputFileForWrite(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: ldc           #10                 // String output/file.out
       6: lload_1
       7: aload_0
       8: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      11: invokevirtual #13                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathForWrite:(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      14: areturn

  public org.apache.hadoop.fs.Path getOutputFileForWriteInVolume(org.apache.hadoop.fs.Path);
    Code:
       0: new           #8                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_1
       5: invokevirtual #14                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       8: ldc           #15                 // String file.out
      10: invokespecial #16                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      13: areturn

  public org.apache.hadoop.fs.Path getOutputIndexFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: ldc           #17                 // String output/file.out.index
       6: aload_0
       7: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      10: invokevirtual #12                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathToRead:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      13: areturn

  public org.apache.hadoop.fs.Path getOutputIndexFileForWrite(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: ldc           #17                 // String output/file.out.index
       6: lload_1
       7: aload_0
       8: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      11: invokevirtual #13                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathForWrite:(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      14: areturn

  public org.apache.hadoop.fs.Path getOutputIndexFileForWriteInVolume(org.apache.hadoop.fs.Path);
    Code:
       0: new           #8                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_1
       5: invokevirtual #14                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       8: ldc           #18                 // String file.out.index
      10: invokespecial #16                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      13: areturn

  public org.apache.hadoop.fs.Path getSpillFile(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: new           #19                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #21                 // String output/spill
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #24                 // String .out
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: aload_0
      29: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      32: invokevirtual #12                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathToRead:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      35: areturn

  public org.apache.hadoop.fs.Path getSpillFileForWrite(int, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: new           #19                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #21                 // String output/spill
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #24                 // String .out
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: lload_2
      29: aload_0
      30: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      33: invokevirtual #13                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathForWrite:(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      36: areturn

  public org.apache.hadoop.fs.Path getSpillIndexFile(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: new           #19                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #21                 // String output/spill
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #26                 // String .out.index
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: aload_0
      29: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      32: invokevirtual #12                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathToRead:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      35: areturn

  public org.apache.hadoop.fs.Path getSpillIndexFileForWrite(int, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: new           #19                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #21                 // String output/spill
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #26                 // String .out.index
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: lload_2
      29: aload_0
      30: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      33: invokevirtual #13                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathForWrite:(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      36: areturn

  public org.apache.hadoop.fs.Path getInputFile(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: ldc           #27                 // String %s/map_%d.out
       6: iconst_2
       7: anewarray     #28                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: ldc           #29                 // String output
      14: aastore
      15: dup
      16: iconst_1
      17: iload_1
      18: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aastore
      22: invokestatic  #31                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: aload_0
      26: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      29: invokevirtual #12                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathToRead:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      32: areturn

  public org.apache.hadoop.fs.Path getInputFileForWrite(org.apache.hadoop.mapreduce.TaskID, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lDirAlloc:Lorg/apache/hadoop/fs/LocalDirAllocator;
       4: ldc           #27                 // String %s/map_%d.out
       6: iconst_2
       7: anewarray     #28                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: ldc           #29                 // String output
      14: aastore
      15: dup
      16: iconst_1
      17: aload_1
      18: invokevirtual #32                 // Method org/apache/hadoop/mapreduce/TaskID.getId:()I
      21: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: aastore
      25: invokestatic  #31                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: lload_2
      29: aload_0
      30: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      33: invokevirtual #13                 // Method org/apache/hadoop/fs/LocalDirAllocator.getLocalPathForWrite:(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      36: areturn

  public void removeAll() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: checkcast     #33                 // class org/apache/hadoop/mapred/JobConf
       7: ldc           #29                 // String output
       9: invokevirtual #34                 // Method org/apache/hadoop/mapred/JobConf.deleteLocalFiles:(Ljava/lang/String;)V
      12: return

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: instanceof    #33                 // class org/apache/hadoop/mapred/JobConf
       4: ifne          16
       7: new           #33                 // class org/apache/hadoop/mapred/JobConf
      10: dup
      11: aload_1
      12: invokespecial #35                 // Method org/apache/hadoop/mapred/JobConf."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      15: astore_1
      16: aload_0
      17: aload_1
      18: invokespecial #36                 // Method org/apache/hadoop/mapred/MapOutputFile.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
      21: return
}
