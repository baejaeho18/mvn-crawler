Compiled from "MultithreadedMapper.java"
class org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$MapRunner extends java.lang.Thread {
  private org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2> mapper;

  private org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2>.Context subcontext;

  private java.lang.Throwable throwable;

  private org.apache.hadoop.mapreduce.RecordReader<K1, V1> reader;

  final org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper this$0;

  org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$MapRunner(org.apache.hadoop.mapreduce.Mapper<K1, V1, K2, V2>.Context) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Thread."<init>":()V
       9: aload_0
      10: new           #4                  // class org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$SubMapRecordReader
      13: dup
      14: aload_0
      15: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
      18: aconst_null
      19: invokespecial #5                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$SubMapRecordReader."<init>":(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$1;)V
      22: putfield      #6                  // Field reader:Lorg/apache/hadoop/mapreduce/RecordReader;
      25: aload_0
      26: aload_1
      27: invokestatic  #7                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$300:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Ljava/lang/Class;
      30: aload_2
      31: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/Mapper$Context.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      34: invokestatic  #9                  // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      37: checkcast     #10                 // class org/apache/hadoop/mapreduce/Mapper
      40: putfield      #11                 // Field mapper:Lorg/apache/hadoop/mapreduce/Mapper;
      43: new           #12                 // class org/apache/hadoop/mapreduce/task/MapContextImpl
      46: dup
      47: aload_1
      48: invokestatic  #13                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      51: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/Mapper$Context.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      54: aload_1
      55: invokestatic  #13                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      58: invokevirtual #14                 // Method org/apache/hadoop/mapreduce/Mapper$Context.getTaskAttemptID:()Lorg/apache/hadoop/mapreduce/TaskAttemptID;
      61: aload_0
      62: getfield      #6                  // Field reader:Lorg/apache/hadoop/mapreduce/RecordReader;
      65: new           #15                 // class org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$SubMapRecordWriter
      68: dup
      69: aload_1
      70: aconst_null
      71: invokespecial #16                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$SubMapRecordWriter."<init>":(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$1;)V
      74: aload_2
      75: invokevirtual #17                 // Method org/apache/hadoop/mapreduce/Mapper$Context.getOutputCommitter:()Lorg/apache/hadoop/mapreduce/OutputCommitter;
      78: new           #18                 // class org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$SubMapStatusReporter
      81: dup
      82: aload_1
      83: aconst_null
      84: invokespecial #19                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$SubMapStatusReporter."<init>":(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper$1;)V
      87: aload_1
      88: invokestatic  #13                 // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
      91: invokevirtual #20                 // Method org/apache/hadoop/mapreduce/Mapper$Context.getInputSplit:()Lorg/apache/hadoop/mapreduce/InputSplit;
      94: invokespecial #21                 // Method org/apache/hadoop/mapreduce/task/MapContextImpl."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;Lorg/apache/hadoop/mapreduce/RecordReader;Lorg/apache/hadoop/mapreduce/RecordWriter;Lorg/apache/hadoop/mapreduce/OutputCommitter;Lorg/apache/hadoop/mapreduce/StatusReporter;Lorg/apache/hadoop/mapreduce/InputSplit;)V
      97: astore_3
      98: aload_0
      99: new           #22                 // class org/apache/hadoop/mapreduce/lib/map/WrappedMapper
     102: dup
     103: invokespecial #23                 // Method org/apache/hadoop/mapreduce/lib/map/WrappedMapper."<init>":()V
     106: aload_3
     107: invokevirtual #24                 // Method org/apache/hadoop/mapreduce/lib/map/WrappedMapper.getMapContext:(Lorg/apache/hadoop/mapreduce/MapContext;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
     110: putfield      #25                 // Field subcontext:Lorg/apache/hadoop/mapreduce/Mapper$Context;
     113: aload_0
     114: getfield      #6                  // Field reader:Lorg/apache/hadoop/mapreduce/RecordReader;
     117: aload_2
     118: invokevirtual #20                 // Method org/apache/hadoop/mapreduce/Mapper$Context.getInputSplit:()Lorg/apache/hadoop/mapreduce/InputSplit;
     121: aload_2
     122: invokevirtual #26                 // Method org/apache/hadoop/mapreduce/RecordReader.initialize:(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
     125: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mapper:Lorg/apache/hadoop/mapreduce/Mapper;
       4: aload_0
       5: getfield      #25                 // Field subcontext:Lorg/apache/hadoop/mapreduce/Mapper$Context;
       8: invokevirtual #27                 // Method org/apache/hadoop/mapreduce/Mapper.run:(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
      11: aload_0
      12: getfield      #6                  // Field reader:Lorg/apache/hadoop/mapreduce/RecordReader;
      15: invokevirtual #28                 // Method org/apache/hadoop/mapreduce/RecordReader.close:()V
      18: goto          27
      21: astore_1
      22: aload_0
      23: aload_1
      24: putfield      #1                  // Field throwable:Ljava/lang/Throwable;
      27: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Throwable

  static java.lang.Throwable access$000(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$MapRunner);
    Code:
       0: aload_0
       1: getfield      #1                  // Field throwable:Ljava/lang/Throwable;
       4: areturn
}
