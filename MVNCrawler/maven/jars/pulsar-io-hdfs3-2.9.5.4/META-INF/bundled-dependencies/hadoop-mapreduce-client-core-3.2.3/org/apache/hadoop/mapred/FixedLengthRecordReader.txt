Compiled from "FixedLengthRecordReader.java"
public class org.apache.hadoop.mapred.FixedLengthRecordReader implements org.apache.hadoop.mapred.RecordReader<org.apache.hadoop.io.LongWritable, org.apache.hadoop.io.BytesWritable> {
  private int recordLength;

  private org.apache.hadoop.mapreduce.lib.input.FixedLengthRecordReader reader;

  public org.apache.hadoop.mapred.FixedLengthRecordReader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.mapred.FileSplit, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_3
       6: putfield      #2                  // Field recordLength:I
       9: aload_0
      10: new           #3                  // class org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader
      13: dup
      14: iload_3
      15: invokespecial #4                  // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader."<init>":(I)V
      18: putfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
      21: aload_0
      22: getfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
      25: aload_1
      26: aload_2
      27: invokevirtual #6                  // Method org/apache/hadoop/mapred/FileSplit.getStart:()J
      30: aload_2
      31: invokevirtual #7                  // Method org/apache/hadoop/mapred/FileSplit.getLength:()J
      34: aload_2
      35: invokevirtual #8                  // Method org/apache/hadoop/mapred/FileSplit.getPath:()Lorg/apache/hadoop/fs/Path;
      38: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader.initialize:(Lorg/apache/hadoop/conf/Configuration;JJLorg/apache/hadoop/fs/Path;)V
      41: return

  public org.apache.hadoop.io.LongWritable createKey();
    Code:
       0: new           #10                 // class org/apache/hadoop/io/LongWritable
       3: dup
       4: invokespecial #11                 // Method org/apache/hadoop/io/LongWritable."<init>":()V
       7: areturn

  public org.apache.hadoop.io.BytesWritable createValue();
    Code:
       0: new           #12                 // class org/apache/hadoop/io/BytesWritable
       3: dup
       4: aload_0
       5: getfield      #2                  // Field recordLength:I
       8: newarray       byte
      10: invokespecial #13                 // Method org/apache/hadoop/io/BytesWritable."<init>":([B)V
      13: areturn

  public synchronized boolean next(org.apache.hadoop.io.LongWritable, org.apache.hadoop.io.BytesWritable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
       4: invokevirtual #14                 // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader.nextKeyValue:()Z
       7: istore_3
       8: iload_3
       9: ifeq          45
      12: aload_0
      13: getfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
      16: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader.getCurrentKey:()Lorg/apache/hadoop/io/LongWritable;
      19: astore        4
      21: aload_0
      22: getfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
      25: invokevirtual #16                 // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader.getCurrentValue:()Lorg/apache/hadoop/io/BytesWritable;
      28: astore        5
      30: aload_1
      31: aload         4
      33: invokevirtual #17                 // Method org/apache/hadoop/io/LongWritable.get:()J
      36: invokevirtual #18                 // Method org/apache/hadoop/io/LongWritable.set:(J)V
      39: aload_2
      40: aload         5
      42: invokevirtual #19                 // Method org/apache/hadoop/io/BytesWritable.set:(Lorg/apache/hadoop/io/BytesWritable;)V
      45: iload_3
      46: ireturn

  public float getProgress() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
       4: invokevirtual #20                 // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader.getProgress:()F
       7: freturn

  public synchronized long getPos() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
       4: invokevirtual #21                 // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader.getPos:()J
       7: lreturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Lorg/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader;
       4: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/lib/input/FixedLengthRecordReader.close:()V
       7: return

  public java.lang.Object createValue();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method createValue:()Lorg/apache/hadoop/io/BytesWritable;
       4: areturn

  public java.lang.Object createKey();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method createKey:()Lorg/apache/hadoop/io/LongWritable;
       4: areturn

  public boolean next(java.lang.Object, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class org/apache/hadoop/io/LongWritable
       5: aload_2
       6: checkcast     #12                 // class org/apache/hadoop/io/BytesWritable
       9: invokevirtual #25                 // Method next:(Lorg/apache/hadoop/io/LongWritable;Lorg/apache/hadoop/io/BytesWritable;)Z
      12: ireturn
}
