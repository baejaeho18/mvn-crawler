Compiled from "JobResourceUploader.java"
class org.apache.hadoop.mapreduce.JobResourceUploader {
  protected static final org.slf4j.Logger LOG;

  private static final java.lang.String ROOT_PATH;

  private final boolean useWildcard;

  private final org.apache.hadoop.fs.FileSystem jtFs;

  private org.apache.hadoop.yarn.client.api.SharedCacheClient scClient;

  private org.apache.hadoop.mapreduce.SharedCacheConfig scConfig;

  private org.apache.hadoop.yarn.api.records.ApplicationId appId;

  protected static final java.lang.String MAX_RESOURCE_ERR_MSG;

  protected static final java.lang.String MAX_TOTAL_RESOURCE_MB_ERR_MSG;

  protected static final java.lang.String MAX_SINGLE_RESOURCE_MB_ERR_MSG;

  org.apache.hadoop.mapreduce.JobResourceUploader(org.apache.hadoop.fs.FileSystem, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
       9: aload_0
      10: new           #3                  // class org/apache/hadoop/mapreduce/SharedCacheConfig
      13: dup
      14: invokespecial #4                  // Method org/apache/hadoop/mapreduce/SharedCacheConfig."<init>":()V
      17: putfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field appId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      30: aload_0
      31: iload_2
      32: putfield      #8                  // Field useWildcard:Z
      35: return

  private void initSharedCache(org.apache.hadoop.mapreduce.JobID, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
       4: aload_2
       5: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/SharedCacheConfig.init:(Lorg/apache/hadoop/conf/Configuration;)V
       8: aload_0
       9: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
      12: invokevirtual #10                 // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheEnabled:()Z
      15: ifeq          36
      18: aload_0
      19: aload_0
      20: aload_2
      21: invokevirtual #11                 // Method createSharedCacheClient:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
      24: putfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
      27: aload_0
      28: aload_0
      29: aload_1
      30: invokespecial #12                 // Method jobIDToAppId:(Lorg/apache/hadoop/mapreduce/JobID;)Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      33: putfield      #6                  // Field appId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      36: return

  private org.apache.hadoop.yarn.api.records.ApplicationId jobIDToAppId(org.apache.hadoop.mapreduce.JobID);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method org/apache/hadoop/mapreduce/JobID.getJtIdentifier:()Ljava/lang/String;
       4: invokestatic  #14                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
       7: aload_1
       8: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/JobID.getId:()I
      11: invokestatic  #16                 // Method org/apache/hadoop/yarn/api/records/ApplicationId.newInstance:(JI)Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      14: areturn

  private void stopSharedCache();
    Code:
       0: aload_0
       1: getfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
       4: ifnull        19
       7: aload_0
       8: getfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
      11: invokevirtual #17                 // Method org/apache/hadoop/yarn/client/api/SharedCacheClient.stop:()V
      14: aload_0
      15: aconst_null
      16: putfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
      19: return

  protected org.apache.hadoop.yarn.client.api.SharedCacheClient createSharedCacheClient(org.apache.hadoop.conf.Configuration);
    Code:
       0: invokestatic  #18                 // Method org/apache/hadoop/yarn/client/api/SharedCacheClient.createSharedCacheClient:()Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
       3: astore_2
       4: aload_2
       5: aload_1
       6: invokevirtual #19                 // Method org/apache/hadoop/yarn/client/api/SharedCacheClient.init:(Lorg/apache/hadoop/conf/Configuration;)V
       9: aload_2
      10: invokevirtual #20                 // Method org/apache/hadoop/yarn/client/api/SharedCacheClient.start:()V
      13: aload_2
      14: areturn

  public void uploadResources(org.apache.hadoop.mapreduce.Job, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method org/apache/hadoop/mapreduce/Job.getJobID:()Lorg/apache/hadoop/mapreduce/JobID;
       5: aload_1
       6: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       9: invokespecial #23                 // Method initSharedCache:(Lorg/apache/hadoop/mapreduce/JobID;Lorg/apache/hadoop/conf/Configuration;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #24                 // Method uploadResourcesInternal:(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/fs/Path;)V
      18: aload_0
      19: invokespecial #25                 // Method stopSharedCache:()V
      22: goto          32
      25: astore_3
      26: aload_0
      27: invokespecial #25                 // Method stopSharedCache:()V
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    18    25   any

  private void uploadResourcesInternal(org.apache.hadoop.mapreduce.Job, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: astore_3
       5: aload_3
       6: ldc           #27                 // String mapreduce.client.submit.file.replication
       8: bipush        10
      10: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      13: i2s
      14: istore        4
      16: aload_3
      17: ldc           #29                 // String mapreduce.client.genericoptionsparser.used
      19: iconst_0
      20: invokevirtual #30                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      23: ifne          36
      26: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #32                 // String Hadoop command-line option parsing not performed. Implement the Tool interface and execute your application with ToolRunner to remedy this.
      31: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      36: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      39: new           #34                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #36                 // String default FileSystem:
      48: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      55: invokevirtual #38                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      58: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #41,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      69: aload_0
      70: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      73: aload_2
      74: invokevirtual #42                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      77: ifeq          112
      80: new           #43                 // class java/io/IOException
      83: dup
      84: new           #34                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #44                 // String Not submitting job. Job directory
      93: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_2
      97: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: ldc           #45                 // String  already exists!! This is unexpected.Please check what\'s there in that directory
     102: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: aload_0
     113: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     116: aload_2
     117: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     120: astore_2
     121: new           #48                 // class org/apache/hadoop/fs/Path
     124: dup
     125: aload_2
     126: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
     129: invokevirtual #50                 // Method java/net/URI.getPath:()Ljava/lang/String;
     132: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     135: astore_2
     136: new           #52                 // class org/apache/hadoop/fs/permission/FsPermission
     139: dup
     140: getstatic     #53                 // Field org/apache/hadoop/mapreduce/JobSubmissionFiles.JOB_DIR_PERMISSION:Lorg/apache/hadoop/fs/permission/FsPermission;
     143: invokespecial #54                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
     146: astore        5
     148: aload_0
     149: aload_0
     150: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     153: aload_2
     154: aload         5
     156: invokevirtual #55                 // Method mkdirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
     159: pop
     160: aload_3
     161: ldc           #57                 // String yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled
     163: iconst_0
     164: invokevirtual #30                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     167: ifne          175
     170: aload_0
     171: aload_2
     172: invokespecial #58                 // Method disableErasureCodingForPath:(Lorg/apache/hadoop/fs/Path;)V
     175: aload_3
     176: ldc           #59                 // String tmpfiles
     178: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
     181: astore        6
     183: aload_3
     184: ldc           #61                 // String tmpjars
     186: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
     189: astore        7
     191: aload_3
     192: ldc           #62                 // String tmparchives
     194: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
     197: astore        8
     199: aload_1
     200: invokevirtual #63                 // Method org/apache/hadoop/mapreduce/Job.getJar:()Ljava/lang/String;
     203: astore        9
     205: aload         6
     207: aload_3
     208: ldc           #64                 // String mapreduce.job.cache.sharedcache.files
     210: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
     213: invokeinterface #65,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
     218: pop
     219: aload         7
     221: aload_3
     222: ldc           #66                 // String mapreduce.job.cache.sharedcache.files.addtoclasspath
     224: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
     227: invokeinterface #65,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
     232: pop
     233: aload         8
     235: aload_3
     236: ldc           #67                 // String mapreduce.job.cache.sharedcache.archives
     238: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
     241: invokeinterface #65,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
     246: pop
     247: new           #68                 // class java/util/HashMap
     250: dup
     251: invokespecial #69                 // Method java/util/HashMap."<init>":()V
     254: astore        10
     256: aload_0
     257: aload_3
     258: aload         6
     260: aload         7
     262: aload         8
     264: aload         9
     266: aload         10
     268: invokevirtual #70                 // Method checkLocalizationLimits:(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/String;Ljava/util/Map;)V
     271: new           #71                 // class java/util/LinkedHashMap
     274: dup
     275: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":()V
     278: astore        11
     280: new           #71                 // class java/util/LinkedHashMap
     283: dup
     284: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":()V
     287: astore        12
     289: aload_0
     290: aload_1
     291: aload         6
     293: aload_2
     294: aload         5
     296: iload         4
     298: aload         11
     300: aload         10
     302: invokevirtual #73                 // Method uploadFiles:(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/Collection;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;SLjava/util/Map;Ljava/util/Map;)V
     305: aload_0
     306: aload_1
     307: aload         7
     309: aload_2
     310: aload         5
     312: iload         4
     314: aload         11
     316: aload         10
     318: invokevirtual #74                 // Method uploadLibJars:(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/Collection;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;SLjava/util/Map;Ljava/util/Map;)V
     321: aload_0
     322: aload_1
     323: aload         8
     325: aload_2
     326: aload         5
     328: iload         4
     330: aload         12
     332: aload         10
     334: invokevirtual #75                 // Method uploadArchives:(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/Collection;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;SLjava/util/Map;Ljava/util/Map;)V
     337: aload_0
     338: aload_1
     339: aload         9
     341: aload_2
     342: iload         4
     344: aload         10
     346: invokevirtual #76                 // Method uploadJobJar:(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;SLjava/util/Map;)V
     349: aload_0
     350: aload_1
     351: aload_2
     352: invokespecial #77                 // Method addLog4jToDistributedCache:(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/fs/Path;)V
     355: aload_3
     356: aload         11
     358: invokestatic  #78                 // Method org/apache/hadoop/mapreduce/Job.setFileSharedCacheUploadPolicies:(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;)V
     361: aload_3
     362: aload         12
     364: invokestatic  #79                 // Method org/apache/hadoop/mapreduce/Job.setArchiveSharedCacheUploadPolicies:(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;)V
     367: aload_3
     368: aload         10
     370: invokestatic  #80                 // Method org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.determineTimestampsAndCacheVisibilities:(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;)V
     373: aload_3
     374: aload_1
     375: invokevirtual #81                 // Method org/apache/hadoop/mapreduce/Job.getCredentials:()Lorg/apache/hadoop/security/Credentials;
     378: invokestatic  #82                 // Method org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.getDelegationTokens:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/Credentials;)V
     381: return

  void uploadFiles(org.apache.hadoop.mapreduce.Job, java.util.Collection<java.lang.String>, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, short, java.util.Map<java.lang.String, java.lang.Boolean>, java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        8
       6: aload_3
       7: invokestatic  #83                 // Method org/apache/hadoop/mapreduce/JobSubmissionFiles.getJobDistCacheFiles:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      10: astore        9
      12: aload_2
      13: invokeinterface #84,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      18: ifne          280
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      26: aload         9
      28: aload         4
      30: invokevirtual #55                 // Method mkdirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      33: pop
      34: aload_2
      35: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      40: astore        10
      42: aload         10
      44: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          280
      52: aload         10
      54: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #88                 // class java/lang/String
      62: astore        11
      64: aconst_null
      65: astore        12
      67: new           #89                 // class java/net/URI
      70: dup
      71: aload         11
      73: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      76: astore        12
      78: goto          113
      81: astore        13
      83: new           #92                 // class java/lang/IllegalArgumentException
      86: dup
      87: new           #34                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #93                 // String Error parsing files argument. Argument must be a valid URI:
      96: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload         11
     101: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: aload         13
     109: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     112: athrow
     113: new           #48                 // class org/apache/hadoop/fs/Path
     116: dup
     117: aload         12
     119: invokespecial #95                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
     122: astore        13
     124: aconst_null
     125: astore        14
     127: iconst_0
     128: istore        15
     130: aload_0
     131: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     134: invokevirtual #96                 // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheFilesEnabled:()Z
     137: ifeq          166
     140: aload_0
     141: aload         12
     143: aload         13
     145: invokevirtual #97                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     148: aload         7
     150: aload         8
     152: iconst_1
     153: invokespecial #98                 // Method useSharedCache:(Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Z)Ljava/net/URI;
     156: astore        14
     158: aload         14
     160: ifnonnull     166
     163: iconst_1
     164: istore        15
     166: aload         14
     168: ifnonnull     243
     171: aload_0
     172: aload         9
     174: aload         13
     176: aload         8
     178: iload         5
     180: invokevirtual #99                 // Method copyRemoteFiles:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;S)Lorg/apache/hadoop/fs/Path;
     183: astore        16
     185: aload_0
     186: aload         16
     188: aload         12
     190: invokevirtual #100                // Method java/net/URI.getFragment:()Ljava/lang/String;
     193: invokespecial #101                // Method getPathURI:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/net/URI;
     196: astore        14
     198: goto          243
     201: astore        17
     203: new           #43                 // class java/io/IOException
     206: dup
     207: new           #34                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #102                // String Failed to create a URI (URISyntaxException) for the remote path
     216: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload         16
     221: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     224: ldc           #103                // String . This was based on the files parameter:
     226: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: aload         11
     231: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     237: aload         17
     239: invokespecial #104                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     242: athrow
     243: aload_1
     244: aload         14
     246: invokevirtual #105                // Method org/apache/hadoop/mapreduce/Job.addCacheFile:(Ljava/net/URI;)V
     249: aload_0
     250: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     253: invokevirtual #96                 // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheFilesEnabled:()Z
     256: ifeq          277
     259: aload         6
     261: aload         14
     263: invokevirtual #106                // Method java/net/URI.toString:()Ljava/lang/String;
     266: iload         15
     268: invokestatic  #107                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     271: invokeinterface #108,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     276: pop
     277: goto          42
     280: return
    Exception table:
       from    to  target type
          67    78    81   Class java/net/URISyntaxException
         185   198   201   Class java/net/URISyntaxException

  void uploadLibJars(org.apache.hadoop.mapreduce.Job, java.util.Collection<java.lang.String>, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, short, java.util.Map<java.lang.String, java.lang.Boolean>, java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        8
       6: aload_3
       7: invokestatic  #109                // Method org/apache/hadoop/mapreduce/JobSubmissionFiles.getJobDistCacheLibjars:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      10: astore        9
      12: aload_2
      13: invokeinterface #84,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      18: ifne          453
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      26: aload         9
      28: aload         4
      30: invokevirtual #55                 // Method mkdirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      33: pop
      34: new           #110                // class java/util/LinkedList
      37: dup
      38: invokespecial #111                // Method java/util/LinkedList."<init>":()V
      41: astore        10
      43: iconst_0
      44: istore        11
      46: aload_2
      47: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      52: astore        12
      54: aload         12
      56: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          367
      64: aload         12
      66: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #88                 // class java/lang/String
      74: astore        13
      76: aconst_null
      77: astore        14
      79: new           #89                 // class java/net/URI
      82: dup
      83: aload         13
      85: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      88: astore        14
      90: goto          125
      93: astore        15
      95: new           #92                 // class java/lang/IllegalArgumentException
      98: dup
      99: new           #34                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #112                // String Error parsing libjars argument. Argument must be a valid URI:
     108: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload         13
     113: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: aload         15
     121: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     124: athrow
     125: new           #48                 // class org/apache/hadoop/fs/Path
     128: dup
     129: aload         14
     131: invokespecial #95                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
     134: astore        15
     136: aconst_null
     137: astore        16
     139: iconst_0
     140: istore        17
     142: iconst_0
     143: istore        18
     145: aload_0
     146: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     149: invokevirtual #113                // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheLibjarsEnabled:()Z
     152: ifeq          187
     155: aload_0
     156: aload         14
     158: aload         15
     160: invokevirtual #97                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     163: aload         7
     165: aload         8
     167: iconst_1
     168: invokespecial #98                 // Method useSharedCache:(Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Z)Ljava/net/URI;
     171: astore        16
     173: aload         16
     175: ifnonnull     184
     178: iconst_1
     179: istore        17
     181: goto          187
     184: iconst_1
     185: istore        18
     187: aload         16
     189: ifnonnull     264
     192: aload_0
     193: aload         9
     195: aload         15
     197: aload         8
     199: iload         5
     201: invokevirtual #99                 // Method copyRemoteFiles:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;S)Lorg/apache/hadoop/fs/Path;
     204: astore        19
     206: aload_0
     207: aload         19
     209: aload         14
     211: invokevirtual #100                // Method java/net/URI.getFragment:()Ljava/lang/String;
     214: invokespecial #101                // Method getPathURI:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/net/URI;
     217: astore        16
     219: goto          264
     222: astore        20
     224: new           #43                 // class java/io/IOException
     227: dup
     228: new           #34                 // class java/lang/StringBuilder
     231: dup
     232: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     235: ldc           #102                // String Failed to create a URI (URISyntaxException) for the remote path
     237: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: aload         19
     242: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     245: ldc           #114                // String . This was based on the libjar parameter:
     247: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: aload         13
     252: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     258: aload         20
     260: invokespecial #104                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     263: athrow
     264: iload         11
     266: ifne          289
     269: aload         16
     271: invokevirtual #100                // Method java/net/URI.getFragment:()Ljava/lang/String;
     274: ifnull        286
     277: iload         18
     279: ifne          286
     282: iconst_1
     283: goto          287
     286: iconst_0
     287: istore        11
     289: new           #48                 // class org/apache/hadoop/fs/Path
     292: dup
     293: aload         16
     295: invokevirtual #50                 // Method java/net/URI.getPath:()Ljava/lang/String;
     298: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     301: aload         8
     303: aload_0
     304: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     307: iconst_0
     308: invokestatic  #115                // Method org/apache/hadoop/mapreduce/filecache/DistributedCache.addFileToClassPath:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Z)V
     311: iload         18
     313: ifeq          326
     316: aload         16
     318: aload         8
     320: invokestatic  #116                // Method org/apache/hadoop/mapreduce/filecache/DistributedCache.addCacheFile:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
     323: goto          336
     326: aload         10
     328: aload         16
     330: invokeinterface #117,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     335: pop
     336: aload_0
     337: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     340: invokevirtual #113                // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheLibjarsEnabled:()Z
     343: ifeq          364
     346: aload         6
     348: aload         16
     350: invokevirtual #106                // Method java/net/URI.toString:()Ljava/lang/String;
     353: iload         17
     355: invokestatic  #107                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     358: invokeinterface #108,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     363: pop
     364: goto          54
     367: aload_0
     368: getfield      #8                  // Field useWildcard:Z
     371: ifeq          412
     374: iload         11
     376: ifne          412
     379: aload_0
     380: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     383: new           #48                 // class org/apache/hadoop/fs/Path
     386: dup
     387: aload         9
     389: ldc           #119                // String *
     391: invokespecial #120                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     394: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     397: astore        12
     399: aload         12
     401: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
     404: aload         8
     406: invokestatic  #116                // Method org/apache/hadoop/mapreduce/filecache/DistributedCache.addCacheFile:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
     409: goto          453
     412: aload         10
     414: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     419: astore        12
     421: aload         12
     423: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     428: ifeq          453
     431: aload         12
     433: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     438: checkcast     #89                 // class java/net/URI
     441: astore        13
     443: aload         13
     445: aload         8
     447: invokestatic  #116                // Method org/apache/hadoop/mapreduce/filecache/DistributedCache.addCacheFile:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
     450: goto          421
     453: return
    Exception table:
       from    to  target type
          79    90    93   Class java/net/URISyntaxException
         206   219   222   Class java/net/URISyntaxException

  void uploadArchives(org.apache.hadoop.mapreduce.Job, java.util.Collection<java.lang.String>, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, short, java.util.Map<java.lang.String, java.lang.Boolean>, java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        8
       6: aload_3
       7: invokestatic  #121                // Method org/apache/hadoop/mapreduce/JobSubmissionFiles.getJobDistCacheArchives:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      10: astore        9
      12: aload_2
      13: invokeinterface #84,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      18: ifne          277
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      26: aload         9
      28: aload         4
      30: invokevirtual #55                 // Method mkdirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      33: pop
      34: aload_2
      35: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      40: astore        10
      42: aload         10
      44: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          277
      52: aload         10
      54: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #88                 // class java/lang/String
      62: astore        11
      64: new           #89                 // class java/net/URI
      67: dup
      68: aload         11
      70: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      73: astore        12
      75: goto          110
      78: astore        13
      80: new           #92                 // class java/lang/IllegalArgumentException
      83: dup
      84: new           #34                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #122                // String Error parsing archives argument. Argument must be a valid URI:
      93: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload         11
      98: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: aload         13
     106: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     109: athrow
     110: new           #48                 // class org/apache/hadoop/fs/Path
     113: dup
     114: aload         12
     116: invokespecial #95                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
     119: astore        13
     121: aconst_null
     122: astore        14
     124: iconst_0
     125: istore        15
     127: aload_0
     128: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     131: invokevirtual #123                // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheArchivesEnabled:()Z
     134: ifeq          163
     137: aload_0
     138: aload         12
     140: aload         13
     142: invokevirtual #97                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     145: aload         7
     147: aload         8
     149: iconst_1
     150: invokespecial #98                 // Method useSharedCache:(Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Z)Ljava/net/URI;
     153: astore        14
     155: aload         14
     157: ifnonnull     163
     160: iconst_1
     161: istore        15
     163: aload         14
     165: ifnonnull     240
     168: aload_0
     169: aload         9
     171: aload         13
     173: aload         8
     175: iload         5
     177: invokevirtual #99                 // Method copyRemoteFiles:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;S)Lorg/apache/hadoop/fs/Path;
     180: astore        16
     182: aload_0
     183: aload         16
     185: aload         12
     187: invokevirtual #100                // Method java/net/URI.getFragment:()Ljava/lang/String;
     190: invokespecial #101                // Method getPathURI:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Ljava/net/URI;
     193: astore        14
     195: goto          240
     198: astore        17
     200: new           #43                 // class java/io/IOException
     203: dup
     204: new           #34                 // class java/lang/StringBuilder
     207: dup
     208: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     211: ldc           #102                // String Failed to create a URI (URISyntaxException) for the remote path
     213: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload         16
     218: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     221: ldc           #124                // String . This was based on the archive parameter:
     223: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload         11
     228: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     234: aload         17
     236: invokespecial #104                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     239: athrow
     240: aload_1
     241: aload         14
     243: invokevirtual #125                // Method org/apache/hadoop/mapreduce/Job.addCacheArchive:(Ljava/net/URI;)V
     246: aload_0
     247: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     250: invokevirtual #123                // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheArchivesEnabled:()Z
     253: ifeq          274
     256: aload         6
     258: aload         14
     260: invokevirtual #106                // Method java/net/URI.toString:()Ljava/lang/String;
     263: iload         15
     265: invokestatic  #107                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     268: invokeinterface #108,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     273: pop
     274: goto          42
     277: return
    Exception table:
       from    to  target type
          64    75    78   Class java/net/URISyntaxException
         182   195   198   Class java/net/URISyntaxException

  void uploadJobJar(org.apache.hadoop.mapreduce.Job, java.lang.String, org.apache.hadoop.fs.Path, short, java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        6
       6: aload_2
       7: ifnull        270
      10: ldc           #126                // String
      12: aload_1
      13: invokevirtual #127                // Method org/apache/hadoop/mapreduce/Job.getJobName:()Ljava/lang/String;
      16: invokevirtual #128                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          37
      22: aload_1
      23: new           #48                 // class org/apache/hadoop/fs/Path
      26: dup
      27: aload_2
      28: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      31: invokevirtual #97                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      34: invokevirtual #129                // Method org/apache/hadoop/mapreduce/Job.setJobName:(Ljava/lang/String;)V
      37: new           #48                 // class org/apache/hadoop/fs/Path
      40: dup
      41: aload_2
      42: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      45: astore        7
      47: aload         7
      49: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      52: astore        8
      54: aconst_null
      55: astore        9
      57: iconst_0
      58: istore        10
      60: aload         8
      62: invokevirtual #130                // Method java/net/URI.getScheme:()Ljava/lang/String;
      65: ifnull        81
      68: aload         8
      70: invokevirtual #130                // Method java/net/URI.getScheme:()Ljava/lang/String;
      73: ldc           #131                // String file
      75: invokevirtual #128                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifeq          174
      81: aload_0
      82: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
      85: invokevirtual #132                // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheJobjarEnabled:()Z
      88: ifeq          150
      91: aload         6
      93: invokestatic  #133                // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      96: aload         7
      98: invokevirtual #134                // Method org/apache/hadoop/fs/LocalFileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     101: astore        7
     103: aload_0
     104: aload         7
     106: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
     109: aconst_null
     110: aload         5
     112: aload         6
     114: iconst_0
     115: invokespecial #98                 // Method useSharedCache:(Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Z)Ljava/net/URI;
     118: astore        11
     120: aload         11
     122: ifnonnull     131
     125: iconst_1
     126: istore        10
     128: goto          150
     131: aload_0
     132: aload         11
     134: invokevirtual #106                // Method java/net/URI.toString:()Ljava/lang/String;
     137: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     140: astore        9
     142: aload         6
     144: ldc           #136                // String mapreduce.job.jobjar.visibility
     146: iconst_1
     147: invokevirtual #137                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
     150: aload         9
     152: ifnonnull     239
     155: aload_3
     156: invokestatic  #138                // Method org/apache/hadoop/mapreduce/JobSubmissionFiles.getJobJar:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     159: astore        9
     161: aload_0
     162: aload         7
     164: aload         9
     166: iload         4
     168: invokevirtual #139                // Method copyJar:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;S)V
     171: goto          239
     174: aload_0
     175: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     178: invokevirtual #132                // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheJobjarEnabled:()Z
     181: ifeq          235
     184: aload_0
     185: aload         8
     187: aconst_null
     188: aload         5
     190: aload         6
     192: iconst_0
     193: invokespecial #98                 // Method useSharedCache:(Ljava/net/URI;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Z)Ljava/net/URI;
     196: astore        11
     198: aload         11
     200: ifnonnull     213
     203: iconst_1
     204: istore        10
     206: aload         7
     208: astore        9
     210: goto          232
     213: aload_0
     214: aload         11
     216: invokevirtual #106                // Method java/net/URI.toString:()Ljava/lang/String;
     219: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     222: astore        9
     224: aload         6
     226: ldc           #136                // String mapreduce.job.jobjar.visibility
     228: iconst_1
     229: invokevirtual #137                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
     232: goto          239
     235: aload         7
     237: astore        9
     239: aload_1
     240: aload         9
     242: invokevirtual #140                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     245: invokevirtual #141                // Method org/apache/hadoop/mapreduce/Job.setJar:(Ljava/lang/String;)V
     248: aload_0
     249: getfield      #5                  // Field scConfig:Lorg/apache/hadoop/mapreduce/SharedCacheConfig;
     252: invokevirtual #132                // Method org/apache/hadoop/mapreduce/SharedCacheConfig.isSharedCacheJobjarEnabled:()Z
     255: ifeq          267
     258: aload         6
     260: ldc           #142                // String mapreduce.job.jobjar.sharedcache.uploadpolicy
     262: iload         10
     264: invokevirtual #137                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
     267: goto          280
     270: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
     273: ldc           #143                // String No job jar file set.  User classes may not be found. See Job or Job#setJar(String).
     275: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     280: return

  void checkLocalizationLimits(org.apache.hadoop.conf.Configuration, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.lang.String, java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>) throws java.io.IOException;
    Code:
       0: new           #144                // class org/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker
       3: dup
       4: aload_1
       5: invokespecial #145                // Method org/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       8: astore        7
      10: aload         7
      12: invokestatic  #146                // Method org/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker.access$000:(Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;)Z
      15: ifne          19
      18: return
      19: aload_1
      20: ldc           #147                // String mapreduce.job.cache.files
      22: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
      25: astore        8
      27: aload_1
      28: ldc           #148                // String mapreduce.job.cache.archives
      30: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getStringCollection:(Ljava/lang/String;)Ljava/util/Collection;
      33: astore        9
      35: aload         8
      37: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      42: astore        10
      44: aload         10
      46: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          84
      54: aload         10
      56: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #88                 // class java/lang/String
      64: astore        11
      66: aload_0
      67: aload_1
      68: aload_0
      69: aload         11
      71: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      74: aload         7
      76: aload         6
      78: invokespecial #149                // Method explorePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Ljava/util/Map;)V
      81: goto          44
      84: aload         9
      86: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      91: astore        10
      93: aload         10
      95: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          133
     103: aload         10
     105: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #88                 // class java/lang/String
     113: astore        11
     115: aload_0
     116: aload_1
     117: aload_0
     118: aload         11
     120: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     123: aload         7
     125: aload         6
     127: invokespecial #149                // Method explorePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Ljava/util/Map;)V
     130: goto          93
     133: aload_2
     134: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     139: astore        10
     141: aload         10
     143: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     148: ifeq          181
     151: aload         10
     153: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     158: checkcast     #88                 // class java/lang/String
     161: astore        11
     163: aload_0
     164: aload_1
     165: aload_0
     166: aload         11
     168: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     171: aload         7
     173: aload         6
     175: invokespecial #149                // Method explorePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Ljava/util/Map;)V
     178: goto          141
     181: aload_3
     182: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     187: astore        10
     189: aload         10
     191: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     196: ifeq          229
     199: aload         10
     201: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     206: checkcast     #88                 // class java/lang/String
     209: astore        11
     211: aload_0
     212: aload_1
     213: aload_0
     214: aload         11
     216: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     219: aload         7
     221: aload         6
     223: invokespecial #149                // Method explorePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Ljava/util/Map;)V
     226: goto          189
     229: aload         4
     231: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     236: astore        10
     238: aload         10
     240: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     245: ifeq          278
     248: aload         10
     250: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     255: checkcast     #88                 // class java/lang/String
     258: astore        11
     260: aload_0
     261: aload_1
     262: aload_0
     263: aload         11
     265: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     268: aload         7
     270: aload         6
     272: invokespecial #149                // Method explorePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Ljava/util/Map;)V
     275: goto          238
     278: aload         5
     280: ifnull        298
     283: aload_0
     284: aload_1
     285: aload_0
     286: aload         5
     288: invokevirtual #135                // Method stringToPath:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
     291: aload         7
     293: aload         6
     295: invokespecial #149                // Method explorePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Ljava/util/Map;)V
     298: return

  org.apache.hadoop.fs.Path stringToPath(java.lang.String);
    Code:
       0: new           #89                 // class java/net/URI
       3: dup
       4: aload_1
       5: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: new           #48                 // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_2
      14: invokevirtual #130                // Method java/net/URI.getScheme:()Ljava/lang/String;
      17: aload_2
      18: invokevirtual #150                // Method java/net/URI.getAuthority:()Ljava/lang/String;
      21: aload_2
      22: invokevirtual #50                 // Method java/net/URI.getPath:()Ljava/lang/String;
      25: invokespecial #151                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      28: areturn
      29: astore_2
      30: new           #92                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #34                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #152                // String Error parsing argument. Argument must be a valid URI:
      43: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: aload_2
      54: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/net/URISyntaxException

  private void explorePath(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, org.apache.hadoop.mapreduce.JobResourceUploader$LimitChecker, java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>) throws java.io.IOException;
    Code:
       0: aload_2
       1: astore        5
       3: aload         5
       5: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       8: invokevirtual #153                // Method java/net/URI.isAbsolute:()Z
      11: ifne          28
      14: aload_1
      15: invokestatic  #133                // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      18: astore        6
      20: aload         6
      22: aload_2
      23: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      26: astore        5
      28: aload_0
      29: aload         4
      31: aload_1
      32: aload         5
      34: invokevirtual #154                // Method getFileStatus:(Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      37: astore        6
      39: aload         6
      41: invokevirtual #155                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      44: ifeq          108
      47: aload         5
      49: aload_1
      50: invokevirtual #156                // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      53: aload         5
      55: invokevirtual #157                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      58: astore        7
      60: aload         7
      62: astore        8
      64: aload         8
      66: arraylength
      67: istore        9
      69: iconst_0
      70: istore        10
      72: iload         10
      74: iload         9
      76: if_icmpge     105
      79: aload         8
      81: iload         10
      83: aaload
      84: astore        11
      86: aload_0
      87: aload_1
      88: aload         11
      90: invokevirtual #158                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      93: aload_3
      94: aload         4
      96: invokespecial #149                // Method explorePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Ljava/util/Map;)V
      99: iinc          10, 1
     102: goto          72
     105: goto          119
     108: aload_3
     109: aload         5
     111: aload         6
     113: invokevirtual #159                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
     116: invokestatic  #160                // Method org/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker.access$100:(Lorg/apache/hadoop/mapreduce/JobResourceUploader$LimitChecker;Lorg/apache/hadoop/fs/Path;J)V
     119: return

  org.apache.hadoop.fs.FileStatus getFileStatus(java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: astore        4
       6: aload_1
       7: aload         4
       9: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #162                // class org/apache/hadoop/fs/FileStatus
      17: astore        5
      19: aload         5
      21: ifnonnull     46
      24: aload_3
      25: aload_2
      26: invokevirtual #156                // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      29: aload_3
      30: invokevirtual #163                // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      33: astore        5
      35: aload_1
      36: aload         4
      38: aload         5
      40: invokeinterface #108,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload         5
      48: areturn

  boolean mkdirs(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #164                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
       6: ireturn

  org.apache.hadoop.fs.Path copyRemoteFiles(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, short) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload_2
       4: aload_3
       5: invokevirtual #156                // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: astore        5
      10: aload         5
      12: aload_0
      13: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      16: invokestatic  #165                // Method org/apache/hadoop/fs/FileUtil.compareFs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)Z
      19: ifeq          24
      22: aload_2
      23: areturn
      24: iconst_0
      25: istore        6
      27: ldc           #167                // String /
      29: aload_2
      30: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      33: invokevirtual #50                 // Method java/net/URI.getPath:()Ljava/lang/String;
      36: invokevirtual #128                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          48
      42: iconst_1
      43: istore        6
      45: goto          116
      48: aload_2
      49: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      52: invokevirtual #106                // Method java/net/URI.toString:()Ljava/lang/String;
      55: astore        7
      57: aload         7
      59: ldc           #167                // String /
      61: invokevirtual #168                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      64: ifeq          116
      67: new           #89                 // class java/net/URI
      70: dup
      71: aload         7
      73: iconst_0
      74: aload         7
      76: invokevirtual #169                // Method java/lang/String.length:()I
      79: iconst_1
      80: isub
      81: invokevirtual #170                // Method java/lang/String.substring:(II)Ljava/lang/String;
      84: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      87: astore        8
      89: new           #48                 // class org/apache/hadoop/fs/Path
      92: dup
      93: aload         8
      95: invokespecial #95                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
      98: astore_2
      99: goto          116
     102: astore        8
     104: new           #92                 // class java/lang/IllegalArgumentException
     107: dup
     108: ldc           #171                // String Error processing URI
     110: aload         8
     112: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     115: athrow
     116: iload         6
     118: ifeq          125
     121: aload_1
     122: goto          137
     125: new           #48                 // class org/apache/hadoop/fs/Path
     128: dup
     129: aload_1
     130: aload_2
     131: invokevirtual #97                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     134: invokespecial #120                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     137: astore        7
     139: aload         5
     141: aload_2
     142: aload_0
     143: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     146: aload         7
     148: iconst_0
     149: aload_3
     150: invokestatic  #172                // Method org/apache/hadoop/fs/FileUtil.copy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
     153: pop
     154: aload_0
     155: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     158: aload         7
     160: iload         4
     162: invokevirtual #173                // Method org/apache/hadoop/fs/FileSystem.setReplication:(Lorg/apache/hadoop/fs/Path;S)Z
     165: pop
     166: aload_0
     167: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     170: aload         7
     172: invokevirtual #47                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     175: pop
     176: aload         7
     178: areturn
    Exception table:
       from    to  target type
          67    99   102   Class java/net/URISyntaxException

  private java.net.URI useSharedCache(java.net.URI, java.lang.String, java.util.Map<java.net.URI, org.apache.hadoop.fs.FileStatus>, org.apache.hadoop.conf.Configuration, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #48                 // class org/apache/hadoop/fs/Path
      12: dup
      13: aload_1
      14: invokespecial #95                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
      17: astore        6
      19: aload_0
      20: aload_3
      21: aload         4
      23: aload         6
      25: invokevirtual #154                // Method getFileStatus:(Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      28: invokevirtual #155                // Method org/apache/hadoop/fs/FileStatus.isDirectory:()Z
      31: ifeq          69
      34: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      37: new           #34                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #174                // String Shared cache does not support directories (see YARN-6097). Will not upload
      46: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload         6
      51: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: ldc           #175                // String  to the shared cache.
      56: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      67: aconst_null
      68: areturn
      69: aload_2
      70: astore        7
      72: iload         5
      74: ifeq          90
      77: aload_1
      78: invokevirtual #100                // Method java/net/URI.getFragment:()Ljava/lang/String;
      81: ifnull        90
      84: aload_1
      85: invokevirtual #100                // Method java/net/URI.getFragment:()Ljava/lang/String;
      88: astore        7
      90: aload_0
      91: getfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
      94: aload         6
      96: invokevirtual #176                // Method org/apache/hadoop/yarn/client/api/SharedCacheClient.getFileChecksum:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      99: astore        8
     101: aconst_null
     102: astore        9
     104: aload_0
     105: getfield      #2                  // Field scClient:Lorg/apache/hadoop/yarn/client/api/SharedCacheClient;
     108: aload_0
     109: getfield      #6                  // Field appId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
     112: aload         8
     114: invokevirtual #177                // Method org/apache/hadoop/yarn/client/api/SharedCacheClient.use:(Lorg/apache/hadoop/yarn/api/records/ApplicationId;Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/URL;
     117: astore        9
     119: goto          140
     122: astore        10
     124: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
     127: ldc           #179                // String Error trying to contact the shared cache manager, disabling the SCMClient for the rest of this job submission
     129: aload         10
     131: invokeinterface #180,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     136: aload_0
     137: invokespecial #25                 // Method stopSharedCache:()V
     140: aload         9
     142: ifnull        294
     145: aconst_null
     146: astore        10
     148: new           #48                 // class org/apache/hadoop/fs/Path
     151: dup
     152: aload         9
     154: invokevirtual #181                // Method org/apache/hadoop/yarn/api/records/URL.getFile:()Ljava/lang/String;
     157: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     160: invokevirtual #97                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     163: astore        11
     165: aload         7
     167: ifnull        220
     170: aload         11
     172: aload         7
     174: invokevirtual #128                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     177: ifne          220
     180: new           #89                 // class java/net/URI
     183: dup
     184: aload         9
     186: invokevirtual #182                // Method org/apache/hadoop/yarn/api/records/URL.getScheme:()Ljava/lang/String;
     189: aload         9
     191: invokevirtual #183                // Method org/apache/hadoop/yarn/api/records/URL.getUserInfo:()Ljava/lang/String;
     194: aload         9
     196: invokevirtual #184                // Method org/apache/hadoop/yarn/api/records/URL.getHost:()Ljava/lang/String;
     199: aload         9
     201: invokevirtual #185                // Method org/apache/hadoop/yarn/api/records/URL.getPort:()I
     204: aload         9
     206: invokevirtual #181                // Method org/apache/hadoop/yarn/api/records/URL.getFile:()Ljava/lang/String;
     209: aconst_null
     210: aload         7
     212: invokespecial #186                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     215: astore        10
     217: goto          256
     220: new           #89                 // class java/net/URI
     223: dup
     224: aload         9
     226: invokevirtual #182                // Method org/apache/hadoop/yarn/api/records/URL.getScheme:()Ljava/lang/String;
     229: aload         9
     231: invokevirtual #183                // Method org/apache/hadoop/yarn/api/records/URL.getUserInfo:()Ljava/lang/String;
     234: aload         9
     236: invokevirtual #184                // Method org/apache/hadoop/yarn/api/records/URL.getHost:()Ljava/lang/String;
     239: aload         9
     241: invokevirtual #185                // Method org/apache/hadoop/yarn/api/records/URL.getPort:()I
     244: aload         9
     246: invokevirtual #181                // Method org/apache/hadoop/yarn/api/records/URL.getFile:()Ljava/lang/String;
     249: aconst_null
     250: aconst_null
     251: invokespecial #186                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     254: astore        10
     256: aload         10
     258: areturn
     259: astore        11
     261: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
     264: new           #34                 // class java/lang/StringBuilder
     267: dup
     268: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     271: ldc           #187                // String Error trying to convert URL received from shared cache to a URI:
     273: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: aload         9
     278: invokevirtual #188                // Method java/lang/Object.toString:()Ljava/lang/String;
     281: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     287: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     292: aconst_null
     293: areturn
     294: aconst_null
     295: areturn
    Exception table:
       from    to  target type
         104   119   122   Class org/apache/hadoop/yarn/exceptions/YarnException
         148   258   259   Class java/net/URISyntaxException

  void copyJar(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, short) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: aload_2
       6: invokevirtual #189                // Method org/apache/hadoop/fs/FileSystem.copyFromLocalFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
       9: aload_0
      10: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      13: aload_2
      14: iload_3
      15: invokevirtual #173                // Method org/apache/hadoop/fs/FileSystem.setReplication:(Lorg/apache/hadoop/fs/Path;S)Z
      18: pop
      19: aload_0
      20: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      23: aload_2
      24: new           #52                 // class org/apache/hadoop/fs/permission/FsPermission
      27: dup
      28: getstatic     #190                // Field org/apache/hadoop/mapreduce/JobSubmissionFiles.JOB_FILE_PERMISSION:Lorg/apache/hadoop/fs/permission/FsPermission;
      31: invokespecial #54                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
      34: invokevirtual #191                // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      37: return

  private void addLog4jToDistributedCache(org.apache.hadoop.mapreduce.Job, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: astore_3
       5: aload_3
       6: ldc           #192                // String mapreduce.job.log4j-properties-file
       8: ldc           #126                // String
      10: invokevirtual #193                // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: astore        4
      15: aload         4
      17: invokevirtual #194                // Method java/lang/String.isEmpty:()Z
      20: ifne          42
      23: aload_3
      24: ldc           #27                 // String mapreduce.client.submit.file.replication
      26: bipush        10
      28: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      31: i2s
      32: istore        5
      34: aload_0
      35: aload_1
      36: aload_2
      37: iload         5
      39: invokespecial #195                // Method copyLog4jPropertyFile:(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/fs/Path;S)V
      42: return

  private java.net.URI getPathURI(org.apache.hadoop.fs.Path, java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_1
       1: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: astore_3
       5: aload_3
       6: invokevirtual #100                // Method java/net/URI.getFragment:()Ljava/lang/String;
       9: ifnonnull     53
      12: aload_2
      13: ifnonnull     19
      16: goto          53
      19: new           #89                 // class java/net/URI
      22: dup
      23: new           #34                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_3
      31: invokevirtual #106                // Method java/net/URI.toString:()Ljava/lang/String;
      34: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #196                // String #
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      52: astore_3
      53: aload_3
      54: areturn

  private void copyLog4jPropertyFile(org.apache.hadoop.mapreduce.Job, org.apache.hadoop.fs.Path, short) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: astore        4
       6: aload_0
       7: aload         4
       9: ldc           #192                // String mapreduce.job.log4j-properties-file
      11: invokevirtual #197                // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      14: aload         4
      16: invokespecial #198                // Method validateFilePath:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
      19: astore        5
      21: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      24: new           #34                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #36                 // String default FileSystem:
      33: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      40: invokevirtual #38                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      43: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #41,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      54: new           #52                 // class org/apache/hadoop/fs/permission/FsPermission
      57: dup
      58: getstatic     #53                 // Field org/apache/hadoop/mapreduce/JobSubmissionFiles.JOB_DIR_PERMISSION:Lorg/apache/hadoop/fs/permission/FsPermission;
      61: invokespecial #54                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
      64: astore        6
      66: aload_0
      67: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      70: aload_2
      71: invokevirtual #163                // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      74: pop
      75: goto          92
      78: astore        7
      80: new           #43                 // class java/io/IOException
      83: dup
      84: ldc           #200                // String Cannot find job submission directory! It should just be created, so something wrong here.
      86: aload         7
      88: invokespecial #104                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      91: athrow
      92: aload_2
      93: invokestatic  #201                // Method org/apache/hadoop/mapreduce/JobSubmissionFiles.getJobLog4jFile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      96: astore        7
      98: aload         5
     100: ifnull        188
     103: aload_0
     104: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
     107: aload         7
     109: aload         6
     111: invokestatic  #164                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
     114: pop
     115: aconst_null
     116: astore        8
     118: new           #89                 // class java/net/URI
     121: dup
     122: aload         5
     124: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     127: astore        8
     129: goto          144
     132: astore        9
     134: new           #92                 // class java/lang/IllegalArgumentException
     137: dup
     138: aload         9
     140: invokespecial #202                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     143: athrow
     144: new           #48                 // class org/apache/hadoop/fs/Path
     147: dup
     148: aload         8
     150: invokespecial #95                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
     153: astore        9
     155: aload_0
     156: aload         7
     158: aload         9
     160: aload         4
     162: iload_3
     163: invokevirtual #99                 // Method copyRemoteFiles:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;S)Lorg/apache/hadoop/fs/Path;
     166: astore        10
     168: new           #48                 // class org/apache/hadoop/fs/Path
     171: dup
     172: aload         10
     174: invokevirtual #49                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
     177: invokevirtual #50                 // Method java/net/URI.getPath:()Ljava/lang/String;
     180: invokespecial #51                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     183: aload         4
     185: invokestatic  #203                // Method org/apache/hadoop/mapreduce/filecache/DistributedCache.addFileToClassPath:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
     188: return
    Exception table:
       from    to  target type
          66    75    78   Class java/io/FileNotFoundException
         118   129   132   Class java/net/URISyntaxException

  private java.lang.String validateFilePath(java.lang.String, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokevirtual #194                // Method java/lang/String.isEmpty:()Z
      10: ifeq          23
      13: new           #92                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #204                // String File name can\'t be empty string
      19: invokespecial #205                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: new           #89                 // class java/net/URI
      26: dup
      27: aload_1
      28: invokespecial #90                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      31: astore        4
      33: goto          48
      36: astore        5
      38: new           #92                 // class java/lang/IllegalArgumentException
      41: dup
      42: aload         5
      44: invokespecial #202                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      47: athrow
      48: new           #48                 // class org/apache/hadoop/fs/Path
      51: dup
      52: aload         4
      54: invokespecial #95                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
      57: astore        5
      59: aload         4
      61: invokevirtual #130                // Method java/net/URI.getScheme:()Ljava/lang/String;
      64: ifnonnull     103
      67: aload_2
      68: invokestatic  #133                // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      71: astore        6
      73: aload         6
      75: aload         5
      77: invokevirtual #163                // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      80: pop
      81: aload         5
      83: aload         6
      85: invokevirtual #38                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      88: aload         6
      90: invokevirtual #206                // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      93: invokevirtual #207                // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      96: invokevirtual #140                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      99: astore_3
     100: goto          138
     103: aload         5
     105: aload_2
     106: invokevirtual #156                // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     109: astore        6
     111: aload         6
     113: aload         5
     115: invokevirtual #163                // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     118: pop
     119: aload         5
     121: aload         6
     123: invokevirtual #38                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
     126: aload         6
     128: invokevirtual #206                // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
     131: invokevirtual #207                // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     134: invokevirtual #140                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     137: astore_3
     138: aload_3
     139: areturn
    Exception table:
       from    to  target type
          23    33    36   Class java/net/URISyntaxException

  private void disableErasureCodingForPath(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
       4: instanceof    #208                // class org/apache/hadoop/hdfs/DistributedFileSystem
       7: ifeq          56
      10: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      13: new           #34                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #209                // String Disabling Erasure Coding for path:
      22: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokeinterface #210,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      37: aload_0
      38: getfield      #7                  // Field jtFs:Lorg/apache/hadoop/fs/FileSystem;
      41: checkcast     #208                // class org/apache/hadoop/hdfs/DistributedFileSystem
      44: astore_2
      45: aload_2
      46: aload_1
      47: invokestatic  #211                // Method org/apache/hadoop/hdfs/protocol/SystemErasureCodingPolicies.getReplicationPolicy:()Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      50: invokevirtual #212                // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getName:()Ljava/lang/String;
      53: invokevirtual #213                // Method org/apache/hadoop/hdfs/DistributedFileSystem.setErasureCodingPolicy:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      56: goto          103
      59: astore_2
      60: ldc           #215                // class org/apache/hadoop/ipc/RpcNoSuchMethodException
      62: invokevirtual #216                // Method java/lang/Class.getName:()Ljava/lang/String;
      65: aload_2
      66: invokevirtual #217                // Method org/apache/hadoop/ipc/RemoteException.getClassName:()Ljava/lang/String;
      69: invokevirtual #128                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifne          77
      75: aload_2
      76: athrow
      77: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      80: invokeinterface #218,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      85: ifeq          103
      88: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      91: ldc           #219                // String Ignore disabling erasure coding for path {} because method disableErasureCodingForPath doesn\'t exist, probably talking to a lower version HDFS.
      93: aload_1
      94: invokevirtual #140                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      97: aload_2
      98: invokeinterface #220,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     103: return
    Exception table:
       from    to  target type
           0    56    59   Class org/apache/hadoop/ipc/RemoteException

  static {};
    Code:
       0: ldc           #166                // class org/apache/hadoop/mapreduce/JobResourceUploader
       2: invokestatic  #221                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
