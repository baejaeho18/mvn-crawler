Compiled from "TaskStatus.java"
public abstract class org.apache.hadoop.mapred.TaskStatus implements org.apache.hadoop.io.Writable,java.lang.Cloneable {
  static final org.slf4j.Logger LOG;

  private final org.apache.hadoop.mapred.TaskAttemptID taskid;

  private float progress;

  private volatile org.apache.hadoop.mapred.TaskStatus$State runState;

  private java.lang.String diagnosticInfo;

  private java.lang.String stateString;

  private java.lang.String taskTracker;

  private int numSlots;

  private long startTime;

  private long finishTime;

  private long outputSize;

  private volatile org.apache.hadoop.mapred.TaskStatus$Phase phase;

  private org.apache.hadoop.mapred.Counters counters;

  private boolean includeAllCounters;

  private org.apache.hadoop.mapred.SortedRanges$Range nextRecordRange;

  static final int MAX_STRING_SIZE;

  protected int getMaxStringSize();
    Code:
       0: sipush        1024
       3: ireturn

  public org.apache.hadoop.mapred.TaskStatus();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #3                  // long -1l
       8: putfield      #5                  // Field outputSize:J
      11: aload_0
      12: getstatic     #6                  // Field org/apache/hadoop/mapred/TaskStatus$Phase.STARTING:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      15: putfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      18: aload_0
      19: new           #8                  // class org/apache/hadoop/mapred/SortedRanges$Range
      22: dup
      23: invokespecial #9                  // Method org/apache/hadoop/mapred/SortedRanges$Range."<init>":()V
      26: putfield      #10                 // Field nextRecordRange:Lorg/apache/hadoop/mapred/SortedRanges$Range;
      29: aload_0
      30: new           #11                 // class org/apache/hadoop/mapred/TaskAttemptID
      33: dup
      34: invokespecial #12                 // Method org/apache/hadoop/mapred/TaskAttemptID."<init>":()V
      37: putfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      40: aload_0
      41: iconst_0
      42: putfield      #14                 // Field numSlots:I
      45: return

  public org.apache.hadoop.mapred.TaskStatus(org.apache.hadoop.mapred.TaskAttemptID, float, int, org.apache.hadoop.mapred.TaskStatus$State, java.lang.String, java.lang.String, java.lang.String, org.apache.hadoop.mapred.TaskStatus$Phase, org.apache.hadoop.mapred.Counters);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #3                  // long -1l
       8: putfield      #5                  // Field outputSize:J
      11: aload_0
      12: getstatic     #6                  // Field org/apache/hadoop/mapred/TaskStatus$Phase.STARTING:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      15: putfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      18: aload_0
      19: new           #8                  // class org/apache/hadoop/mapred/SortedRanges$Range
      22: dup
      23: invokespecial #9                  // Method org/apache/hadoop/mapred/SortedRanges$Range."<init>":()V
      26: putfield      #10                 // Field nextRecordRange:Lorg/apache/hadoop/mapred/SortedRanges$Range;
      29: aload_0
      30: aload_1
      31: putfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      34: aload_0
      35: fload_2
      36: putfield      #15                 // Field progress:F
      39: aload_0
      40: iload_3
      41: putfield      #14                 // Field numSlots:I
      44: aload_0
      45: aload         4
      47: putfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
      50: aload_0
      51: aload         5
      53: invokevirtual #17                 // Method setDiagnosticInfo:(Ljava/lang/String;)V
      56: aload_0
      57: aload         6
      59: invokevirtual #18                 // Method setStateString:(Ljava/lang/String;)V
      62: aload_0
      63: aload         7
      65: putfield      #19                 // Field taskTracker:Ljava/lang/String;
      68: aload_0
      69: aload         8
      71: putfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      74: aload_0
      75: aload         9
      77: putfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
      80: aload_0
      81: iconst_1
      82: putfield      #21                 // Field includeAllCounters:Z
      85: return

  public org.apache.hadoop.mapred.TaskAttemptID getTaskID();
    Code:
       0: aload_0
       1: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
       4: areturn

  public abstract boolean getIsMap();

  public int getNumSlots();
    Code:
       0: aload_0
       1: getfield      #14                 // Field numSlots:I
       4: ireturn

  public float getProgress();
    Code:
       0: aload_0
       1: getfield      #15                 // Field progress:F
       4: freturn

  public void setProgress(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #15                 // Field progress:F
       5: return

  public org.apache.hadoop.mapred.TaskStatus$State getRunState();
    Code:
       0: aload_0
       1: getfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
       4: areturn

  public java.lang.String getTaskTracker();
    Code:
       0: aload_0
       1: getfield      #19                 // Field taskTracker:Ljava/lang/String;
       4: areturn

  public void setTaskTracker(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field taskTracker:Ljava/lang/String;
       5: return

  public void setRunState(org.apache.hadoop.mapred.TaskStatus$State);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
       5: return

  public java.lang.String getDiagnosticInfo();
    Code:
       0: aload_0
       1: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
       4: areturn

  public void setDiagnosticInfo(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
       4: ifnull        61
       7: aload_0
       8: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
      11: invokevirtual #23                 // Method java/lang/String.length:()I
      14: aload_0
      15: invokevirtual #24                 // Method getMaxStringSize:()I
      18: if_icmpne     61
      21: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      24: new           #26                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #28                 // String task-diagnostic-info for task
      33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #31                 // String  :
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      60: return
      61: aload_0
      62: aload_0
      63: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
      66: ifnonnull     73
      69: aload_1
      70: goto          81
      73: aload_0
      74: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
      77: aload_1
      78: invokevirtual #34                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      81: putfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
      84: aload_0
      85: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
      88: ifnull        163
      91: aload_0
      92: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
      95: invokevirtual #23                 // Method java/lang/String.length:()I
      98: aload_0
      99: invokevirtual #24                 // Method getMaxStringSize:()I
     102: if_icmple     163
     105: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     108: new           #26                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #28                 // String task-diagnostic-info for task
     117: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
     124: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: ldc           #31                 // String  :
     129: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
     136: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     147: aload_0
     148: aload_0
     149: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
     152: iconst_0
     153: aload_0
     154: invokevirtual #24                 // Method getMaxStringSize:()I
     157: invokevirtual #35                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     160: putfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
     163: return

  public java.lang.String getStateString();
    Code:
       0: aload_0
       1: getfield      #36                 // Field stateString:Ljava/lang/String;
       4: areturn

  public void setStateString(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        75
       4: aload_1
       5: invokevirtual #23                 // Method java/lang/String.length:()I
       8: aload_0
       9: invokevirtual #24                 // Method getMaxStringSize:()I
      12: if_icmpgt     23
      15: aload_0
      16: aload_1
      17: putfield      #36                 // Field stateString:Ljava/lang/String;
      20: goto          75
      23: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      26: new           #26                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #37                 // String state-string for task
      35: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      42: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #31                 // String  :
      47: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      62: aload_0
      63: aload_1
      64: iconst_0
      65: aload_0
      66: invokevirtual #24                 // Method getMaxStringSize:()I
      69: invokevirtual #35                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      72: putfield      #36                 // Field stateString:Ljava/lang/String;
      75: return

  public org.apache.hadoop.mapred.SortedRanges$Range getNextRecordRange();
    Code:
       0: aload_0
       1: getfield      #10                 // Field nextRecordRange:Lorg/apache/hadoop/mapred/SortedRanges$Range;
       4: areturn

  public void setNextRecordRange(org.apache.hadoop.mapred.SortedRanges$Range);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field nextRecordRange:Lorg/apache/hadoop/mapred/SortedRanges$Range;
       5: return

  public long getFinishTime();
    Code:
       0: aload_0
       1: getfield      #38                 // Field finishTime:J
       4: lreturn

  void setFinishTime(long);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getStartTime:()J
       4: lconst_0
       5: lcmp
       6: ifle          23
       9: lload_1
      10: lconst_0
      11: lcmp
      12: ifle          23
      15: aload_0
      16: lload_1
      17: putfield      #38                 // Field finishTime:J
      20: goto          71
      23: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      26: new           #26                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #40                 // String Trying to set finish time for task
      35: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      42: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #41                 // String  when no start time is set, stackTrace is :
      47: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: new           #42                 // class java/lang/Exception
      53: dup
      54: invokespecial #43                 // Method java/lang/Exception."<init>":()V
      57: invokestatic  #44                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      60: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      71: return

  public long getShuffleFinishTime();
    Code:
       0: lconst_0
       1: lreturn

  void setShuffleFinishTime(long);
    Code:
       0: return

  public long getMapFinishTime();
    Code:
       0: lconst_0
       1: lreturn

  void setMapFinishTime(long);
    Code:
       0: return

  public long getSortFinishTime();
    Code:
       0: lconst_0
       1: lreturn

  void setSortFinishTime(long);
    Code:
       0: return

  public long getStartTime();
    Code:
       0: aload_0
       1: getfield      #46                 // Field startTime:J
       4: lreturn

  void setStartTime(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          14
       6: aload_0
       7: lload_1
       8: putfield      #46                 // Field startTime:J
      11: goto          62
      14: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      17: new           #26                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #47                 // String Trying to set illegal startTime for task :
      26: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
      33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #48                 // String .Stack trace is :
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: new           #42                 // class java/lang/Exception
      44: dup
      45: invokespecial #43                 // Method java/lang/Exception."<init>":()V
      48: invokestatic  #44                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      51: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      62: return

  public org.apache.hadoop.mapred.TaskStatus$Phase getPhase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
       4: areturn

  public void setPhase(org.apache.hadoop.mapred.TaskStatus$Phase);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getPhase:()Lorg/apache/hadoop/mapred/TaskStatus$Phase;
       4: astore_2
       5: aload_2
       6: aload_1
       7: if_acmpeq     63
      10: aload_1
      11: getstatic     #50                 // Field org/apache/hadoop/mapred/TaskStatus$Phase.SORT:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      14: if_acmpne     44
      17: aload_2
      18: getstatic     #51                 // Field org/apache/hadoop/mapred/TaskStatus$Phase.MAP:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      21: if_acmpne     34
      24: aload_0
      25: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
      28: invokevirtual #53                 // Method setMapFinishTime:(J)V
      31: goto          58
      34: aload_0
      35: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
      38: invokevirtual #54                 // Method setShuffleFinishTime:(J)V
      41: goto          58
      44: aload_1
      45: getstatic     #55                 // Field org/apache/hadoop/mapred/TaskStatus$Phase.REDUCE:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      48: if_acmpne     58
      51: aload_0
      52: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
      55: invokevirtual #56                 // Method setSortFinishTime:(J)V
      58: aload_0
      59: aload_1
      60: putfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      63: return

  boolean inTaskCleanupPhase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
       4: getstatic     #57                 // Field org/apache/hadoop/mapred/TaskStatus$Phase.CLEANUP:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
       7: if_acmpne     34
      10: aload_0
      11: getfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
      14: getstatic     #58                 // Field org/apache/hadoop/mapred/TaskStatus$State.FAILED_UNCLEAN:Lorg/apache/hadoop/mapred/TaskStatus$State;
      17: if_acmpeq     30
      20: aload_0
      21: getfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
      24: getstatic     #59                 // Field org/apache/hadoop/mapred/TaskStatus$State.KILLED_UNCLEAN:Lorg/apache/hadoop/mapred/TaskStatus$State;
      27: if_acmpne     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean getIncludeAllCounters();
    Code:
       0: aload_0
       1: getfield      #21                 // Field includeAllCounters:Z
       4: ireturn

  public void setIncludeAllCounters(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field includeAllCounters:Z
       5: aload_0
       6: getfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
       9: iload_1
      10: invokevirtual #60                 // Method org/apache/hadoop/mapred/Counters.setWriteAllCounters:(Z)V
      13: return

  public org.apache.hadoop.mapred.Counters getCounters();
    Code:
       0: aload_0
       1: getfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
       4: areturn

  public void setCounters(org.apache.hadoop.mapred.Counters);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
       5: return

  public long getOutputSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field outputSize:J
       4: lreturn

  void setOutputSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field outputSize:J
       5: return

  public java.util.List<org.apache.hadoop.mapred.TaskAttemptID> getFetchFailedMaps();
    Code:
       0: aconst_null
       1: areturn

  public abstract void addFetchFailedMap(org.apache.hadoop.mapred.TaskAttemptID);

  synchronized void statusUpdate(float, java.lang.String, org.apache.hadoop.mapred.Counters);
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #61                 // Method setProgress:(F)V
       5: aload_0
       6: aload_2
       7: invokevirtual #18                 // Method setStateString:(Ljava/lang/String;)V
      10: aload_0
      11: aload_3
      12: invokevirtual #62                 // Method setCounters:(Lorg/apache/hadoop/mapred/Counters;)V
      15: return

  synchronized void statusUpdate(org.apache.hadoop.mapred.TaskStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method getProgress:()F
       5: invokevirtual #61                 // Method setProgress:(F)V
       8: aload_0
       9: aload_1
      10: invokevirtual #64                 // Method getRunState:()Lorg/apache/hadoop/mapred/TaskStatus$State;
      13: putfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
      16: aload_0
      17: aload_1
      18: invokevirtual #65                 // Method getStateString:()Ljava/lang/String;
      21: invokevirtual #18                 // Method setStateString:(Ljava/lang/String;)V
      24: aload_0
      25: aload_1
      26: invokevirtual #66                 // Method getNextRecordRange:()Lorg/apache/hadoop/mapred/SortedRanges$Range;
      29: putfield      #10                 // Field nextRecordRange:Lorg/apache/hadoop/mapred/SortedRanges$Range;
      32: aload_0
      33: aload_1
      34: invokevirtual #67                 // Method getDiagnosticInfo:()Ljava/lang/String;
      37: invokevirtual #17                 // Method setDiagnosticInfo:(Ljava/lang/String;)V
      40: aload_1
      41: invokevirtual #39                 // Method getStartTime:()J
      44: lconst_0
      45: lcmp
      46: ifle          57
      49: aload_0
      50: aload_1
      51: invokevirtual #39                 // Method getStartTime:()J
      54: invokevirtual #68                 // Method setStartTime:(J)V
      57: aload_1
      58: invokevirtual #69                 // Method getFinishTime:()J
      61: lconst_0
      62: lcmp
      63: ifle          74
      66: aload_0
      67: aload_1
      68: invokevirtual #69                 // Method getFinishTime:()J
      71: invokevirtual #70                 // Method setFinishTime:(J)V
      74: aload_0
      75: aload_1
      76: invokevirtual #49                 // Method getPhase:()Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      79: putfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      82: aload_0
      83: aload_1
      84: invokevirtual #71                 // Method getCounters:()Lorg/apache/hadoop/mapred/Counters;
      87: putfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
      90: aload_0
      91: aload_1
      92: getfield      #5                  // Field outputSize:J
      95: putfield      #5                  // Field outputSize:J
      98: return

  synchronized void statusUpdate(org.apache.hadoop.mapred.TaskStatus$State, float, java.lang.String, org.apache.hadoop.mapred.TaskStatus$Phase, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method setRunState:(Lorg/apache/hadoop/mapred/TaskStatus$State;)V
       5: aload_0
       6: fload_2
       7: invokevirtual #61                 // Method setProgress:(F)V
      10: aload_0
      11: aload_3
      12: invokevirtual #18                 // Method setStateString:(Ljava/lang/String;)V
      15: aload_0
      16: aload         4
      18: invokevirtual #73                 // Method setPhase:(Lorg/apache/hadoop/mapred/TaskStatus$Phase;)V
      21: lload         5
      23: lconst_0
      24: lcmp
      25: ifle          34
      28: aload_0
      29: lload         5
      31: invokevirtual #70                 // Method setFinishTime:(J)V
      34: return

  synchronized void clearStatus();
    Code:
       0: aload_0
       1: ldc           #74                 // String
       3: putfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
       6: return

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn
       5: astore_1
       6: new           #77                 // class java/lang/InternalError
       9: dup
      10: aload_1
      11: invokevirtual #78                 // Method java/lang/CloneNotSupportedException.toString:()Ljava/lang/String;
      14: invokespecial #79                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/CloneNotSupportedException

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
       4: aload_1
       5: invokevirtual #80                 // Method org/apache/hadoop/mapred/TaskAttemptID.write:(Ljava/io/DataOutput;)V
       8: aload_1
       9: aload_0
      10: getfield      #15                 // Field progress:F
      13: invokeinterface #81,  2           // InterfaceMethod java/io/DataOutput.writeFloat:(F)V
      18: aload_1
      19: aload_0
      20: getfield      #14                 // Field numSlots:I
      23: invokeinterface #82,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      28: aload_1
      29: aload_0
      30: getfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
      33: invokestatic  #83                 // Method org/apache/hadoop/io/WritableUtils.writeEnum:(Ljava/io/DataOutput;Ljava/lang/Enum;)V
      36: aload_1
      37: aload_0
      38: getfield      #22                 // Field diagnosticInfo:Ljava/lang/String;
      41: invokestatic  #84                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      44: pop
      45: aload_1
      46: aload_0
      47: getfield      #36                 // Field stateString:Ljava/lang/String;
      50: invokestatic  #84                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      53: pop
      54: aload_1
      55: aload_0
      56: getfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      59: invokestatic  #83                 // Method org/apache/hadoop/io/WritableUtils.writeEnum:(Ljava/io/DataOutput;Ljava/lang/Enum;)V
      62: aload_1
      63: aload_0
      64: getfield      #46                 // Field startTime:J
      67: invokeinterface #85,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      72: aload_1
      73: aload_0
      74: getfield      #38                 // Field finishTime:J
      77: invokeinterface #85,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      82: aload_1
      83: aload_0
      84: getfield      #21                 // Field includeAllCounters:Z
      87: invokeinterface #86,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      92: aload_1
      93: aload_0
      94: getfield      #5                  // Field outputSize:J
      97: invokeinterface #85,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
     102: aload_0
     103: getfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
     106: aload_1
     107: invokevirtual #87                 // Method org/apache/hadoop/mapred/Counters.write:(Ljava/io/DataOutput;)V
     110: aload_0
     111: getfield      #10                 // Field nextRecordRange:Lorg/apache/hadoop/mapred/SortedRanges$Range;
     114: aload_1
     115: invokevirtual #88                 // Method org/apache/hadoop/mapred/SortedRanges$Range.write:(Ljava/io/DataOutput;)V
     118: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field taskid:Lorg/apache/hadoop/mapred/TaskAttemptID;
       4: aload_1
       5: invokevirtual #89                 // Method org/apache/hadoop/mapred/TaskAttemptID.readFields:(Ljava/io/DataInput;)V
       8: aload_0
       9: aload_1
      10: invokeinterface #90,  1           // InterfaceMethod java/io/DataInput.readFloat:()F
      15: invokevirtual #61                 // Method setProgress:(F)V
      18: aload_0
      19: aload_1
      20: invokeinterface #91,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      25: putfield      #14                 // Field numSlots:I
      28: aload_0
      29: aload_1
      30: ldc           #92                 // class org/apache/hadoop/mapred/TaskStatus$State
      32: invokestatic  #93                 // Method org/apache/hadoop/io/WritableUtils.readEnum:(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
      35: checkcast     #92                 // class org/apache/hadoop/mapred/TaskStatus$State
      38: putfield      #16                 // Field runState:Lorg/apache/hadoop/mapred/TaskStatus$State;
      41: aload_0
      42: aload_1
      43: invokestatic  #94                 // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
      46: invokestatic  #95                 // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      49: invokevirtual #17                 // Method setDiagnosticInfo:(Ljava/lang/String;)V
      52: aload_0
      53: aload_1
      54: invokestatic  #94                 // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
      57: invokestatic  #95                 // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      60: invokevirtual #18                 // Method setStateString:(Ljava/lang/String;)V
      63: aload_0
      64: aload_1
      65: ldc           #96                 // class org/apache/hadoop/mapred/TaskStatus$Phase
      67: invokestatic  #93                 // Method org/apache/hadoop/io/WritableUtils.readEnum:(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
      70: checkcast     #96                 // class org/apache/hadoop/mapred/TaskStatus$Phase
      73: putfield      #7                  // Field phase:Lorg/apache/hadoop/mapred/TaskStatus$Phase;
      76: aload_0
      77: aload_1
      78: invokeinterface #97,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      83: putfield      #46                 // Field startTime:J
      86: aload_0
      87: aload_1
      88: invokeinterface #97,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      93: putfield      #38                 // Field finishTime:J
      96: aload_0
      97: new           #98                 // class org/apache/hadoop/mapred/Counters
     100: dup
     101: invokespecial #99                 // Method org/apache/hadoop/mapred/Counters."<init>":()V
     104: putfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
     107: aload_0
     108: aload_1
     109: invokeinterface #100,  1          // InterfaceMethod java/io/DataInput.readBoolean:()Z
     114: putfield      #21                 // Field includeAllCounters:Z
     117: aload_0
     118: aload_1
     119: invokeinterface #97,  1           // InterfaceMethod java/io/DataInput.readLong:()J
     124: putfield      #5                  // Field outputSize:J
     127: aload_0
     128: getfield      #20                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
     131: aload_1
     132: invokevirtual #101                // Method org/apache/hadoop/mapred/Counters.readFields:(Ljava/io/DataInput;)V
     135: aload_0
     136: getfield      #10                 // Field nextRecordRange:Lorg/apache/hadoop/mapred/SortedRanges$Range;
     139: aload_1
     140: invokevirtual #102                // Method org/apache/hadoop/mapred/SortedRanges$Range.readFields:(Ljava/io/DataInput;)V
     143: return

  static org.apache.hadoop.mapred.TaskStatus createTaskStatus(java.io.DataInput, org.apache.hadoop.mapred.TaskAttemptID, float, int, org.apache.hadoop.mapred.TaskStatus$State, java.lang.String, java.lang.String, java.lang.String, org.apache.hadoop.mapred.TaskStatus$Phase, org.apache.hadoop.mapred.Counters) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #100,  1          // InterfaceMethod java/io/DataInput.readBoolean:()Z
       6: istore        10
       8: iload         10
      10: aload_1
      11: fload_2
      12: iload_3
      13: aload         4
      15: aload         5
      17: aload         6
      19: aload         7
      21: aload         8
      23: aload         9
      25: invokestatic  #103                // Method createTaskStatus:(ZLorg/apache/hadoop/mapred/TaskAttemptID;FILorg/apache/hadoop/mapred/TaskStatus$State;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskStatus$Phase;Lorg/apache/hadoop/mapred/Counters;)Lorg/apache/hadoop/mapred/TaskStatus;
      28: areturn

  static org.apache.hadoop.mapred.TaskStatus createTaskStatus(boolean, org.apache.hadoop.mapred.TaskAttemptID, float, int, org.apache.hadoop.mapred.TaskStatus$State, java.lang.String, java.lang.String, java.lang.String, org.apache.hadoop.mapred.TaskStatus$Phase, org.apache.hadoop.mapred.Counters);
    Code:
       0: iload_0
       1: ifeq          29
       4: new           #104                // class org/apache/hadoop/mapred/MapTaskStatus
       7: dup
       8: aload_1
       9: fload_2
      10: iload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: aload         7
      19: aload         8
      21: aload         9
      23: invokespecial #105                // Method org/apache/hadoop/mapred/MapTaskStatus."<init>":(Lorg/apache/hadoop/mapred/TaskAttemptID;FILorg/apache/hadoop/mapred/TaskStatus$State;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskStatus$Phase;Lorg/apache/hadoop/mapred/Counters;)V
      26: goto          51
      29: new           #106                // class org/apache/hadoop/mapred/ReduceTaskStatus
      32: dup
      33: aload_1
      34: fload_2
      35: iload_3
      36: aload         4
      38: aload         5
      40: aload         6
      42: aload         7
      44: aload         8
      46: aload         9
      48: invokespecial #107                // Method org/apache/hadoop/mapred/ReduceTaskStatus."<init>":(Lorg/apache/hadoop/mapred/TaskAttemptID;FILorg/apache/hadoop/mapred/TaskStatus$State;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskStatus$Phase;Lorg/apache/hadoop/mapred/Counters;)V
      51: areturn

  static org.apache.hadoop.mapred.TaskStatus createTaskStatus(boolean);
    Code:
       0: iload_0
       1: ifeq          14
       4: new           #104                // class org/apache/hadoop/mapred/MapTaskStatus
       7: dup
       8: invokespecial #108                // Method org/apache/hadoop/mapred/MapTaskStatus."<init>":()V
      11: goto          21
      14: new           #106                // class org/apache/hadoop/mapred/ReduceTaskStatus
      17: dup
      18: invokespecial #109                // Method org/apache/hadoop/mapred/ReduceTaskStatus."<init>":()V
      21: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/mapred/TaskStatus
       2: invokevirtual #110                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #111                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       8: putstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      11: return
}
