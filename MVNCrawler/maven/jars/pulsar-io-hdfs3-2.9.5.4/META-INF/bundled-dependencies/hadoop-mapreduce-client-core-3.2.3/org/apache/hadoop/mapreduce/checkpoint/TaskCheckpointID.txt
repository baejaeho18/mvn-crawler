Compiled from "TaskCheckpointID.java"
public class org.apache.hadoop.mapreduce.checkpoint.TaskCheckpointID implements org.apache.hadoop.mapreduce.checkpoint.CheckpointID {
  final org.apache.hadoop.mapreduce.checkpoint.FSCheckpointID rawId;

  private final java.util.List<org.apache.hadoop.fs.Path> partialOutput;

  private final org.apache.hadoop.mapred.Counters counters;

  public org.apache.hadoop.mapreduce.checkpoint.TaskCheckpointID();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID
       4: dup
       5: invokespecial #2                  // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID."<init>":()V
       8: new           #3                  // class java/util/ArrayList
      11: dup
      12: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      15: new           #5                  // class org/apache/hadoop/mapred/Counters
      18: dup
      19: invokespecial #6                  // Method org/apache/hadoop/mapred/Counters."<init>":()V
      22: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;Ljava/util/List;Lorg/apache/hadoop/mapred/Counters;)V
      25: return

  public org.apache.hadoop.mapreduce.checkpoint.TaskCheckpointID(org.apache.hadoop.mapreduce.checkpoint.FSCheckpointID, java.util.List<org.apache.hadoop.fs.Path>, org.apache.hadoop.mapred.Counters);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field rawId:Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;
       9: aload_0
      10: aload_3
      11: putfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
      14: aload_0
      15: aconst_null
      16: aload_2
      17: if_acmpne     30
      20: new           #3                  // class java/util/ArrayList
      23: dup
      24: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      27: goto          31
      30: aload_2
      31: putfield      #11                 // Field partialOutput:Ljava/util/List;
      34: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
       4: aload_1
       5: invokevirtual #12                 // Method org/apache/hadoop/mapred/Counters.write:(Ljava/io/DataOutput;)V
       8: aload_1
       9: aload_0
      10: getfield      #11                 // Field partialOutput:Ljava/util/List;
      13: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      18: i2l
      19: invokestatic  #14                 // Method org/apache/hadoop/io/WritableUtils.writeVLong:(Ljava/io/DataOutput;J)V
      22: aload_0
      23: getfield      #11                 // Field partialOutput:Ljava/util/List;
      26: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          63
      41: aload_2
      42: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #18                 // class org/apache/hadoop/fs/Path
      50: astore_3
      51: aload_1
      52: aload_3
      53: invokevirtual #19                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      56: invokestatic  #20                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      59: pop
      60: goto          32
      63: aload_0
      64: getfield      #9                  // Field rawId:Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;
      67: aload_1
      68: invokevirtual #21                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID.write:(Ljava/io/DataOutput;)V
      71: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field partialOutput:Ljava/util/List;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
      13: aload_1
      14: invokevirtual #23                 // Method org/apache/hadoop/mapred/Counters.readFields:(Ljava/io/DataInput;)V
      17: aload_1
      18: invokestatic  #24                 // Method org/apache/hadoop/io/WritableUtils.readVLong:(Ljava/io/DataInput;)J
      21: lstore_2
      22: iconst_0
      23: istore        4
      25: iload         4
      27: i2l
      28: lload_2
      29: lcmp
      30: ifge          60
      33: aload_0
      34: getfield      #11                 // Field partialOutput:Ljava/util/List;
      37: new           #18                 // class org/apache/hadoop/fs/Path
      40: dup
      41: aload_1
      42: invokestatic  #25                 // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
      45: invokespecial #26                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      48: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: iinc          4, 1
      57: goto          25
      60: aload_0
      61: getfield      #9                  // Field rawId:Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;
      64: aload_1
      65: invokevirtual #28                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID.readFields:(Ljava/io/DataInput;)V
      68: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #29                 // class org/apache/hadoop/mapreduce/checkpoint/TaskCheckpointID
       4: ifeq          78
       7: aload_1
       8: checkcast     #29                 // class org/apache/hadoop/mapreduce/checkpoint/TaskCheckpointID
      11: astore_2
      12: aload_0
      13: getfield      #9                  // Field rawId:Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;
      16: aload_2
      17: getfield      #9                  // Field rawId:Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;
      20: invokevirtual #30                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID.equals:(Ljava/lang/Object;)Z
      23: ifeq          76
      26: aload_0
      27: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
      30: aload_2
      31: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
      34: invokevirtual #31                 // Method org/apache/hadoop/mapred/Counters.equals:(Ljava/lang/Object;)Z
      37: ifeq          76
      40: aload_0
      41: getfield      #11                 // Field partialOutput:Ljava/util/List;
      44: aload_2
      45: getfield      #11                 // Field partialOutput:Ljava/util/List;
      48: invokeinterface #32,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      53: ifeq          76
      56: aload_2
      57: getfield      #11                 // Field partialOutput:Ljava/util/List;
      60: aload_0
      61: getfield      #11                 // Field partialOutput:Ljava/util/List;
      64: invokeinterface #32,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn
      78: iconst_0
      79: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field rawId:Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;
       4: invokevirtual #33                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID.hashCode:()I
       7: ireturn

  public long getCheckpointBytes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
       4: getstatic     #34                 // Field org/apache/hadoop/mapreduce/checkpoint/EnumCounter.CHECKPOINT_BYTES:Lorg/apache/hadoop/mapreduce/checkpoint/EnumCounter;
       7: invokevirtual #35                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
      10: checkcast     #36                 // class org/apache/hadoop/mapred/Counters$Counter
      13: invokevirtual #37                 // Method org/apache/hadoop/mapred/Counters$Counter.getValue:()J
      16: lreturn

  public long getCheckpointTime();
    Code:
       0: aload_0
       1: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
       4: getstatic     #38                 // Field org/apache/hadoop/mapreduce/checkpoint/EnumCounter.CHECKPOINT_MS:Lorg/apache/hadoop/mapreduce/checkpoint/EnumCounter;
       7: invokevirtual #35                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
      10: checkcast     #36                 // class org/apache/hadoop/mapred/Counters$Counter
      13: invokevirtual #37                 // Method org/apache/hadoop/mapred/Counters$Counter.getValue:()J
      16: lreturn

  public java.lang.String toString();
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #9                  // Field rawId:Lorg/apache/hadoop/mapreduce/checkpoint/FSCheckpointID;
      11: invokevirtual #41                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID.toString:()Ljava/lang/String;
      14: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #43                 // String  counters:
      19: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
      26: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public java.util.List<org.apache.hadoop.fs.Path> getPartialCommittedOutput();
    Code:
       0: aload_0
       1: getfield      #11                 // Field partialOutput:Ljava/util/List;
       4: areturn

  public org.apache.hadoop.mapred.Counters getCounters();
    Code:
       0: aload_0
       1: getfield      #10                 // Field counters:Lorg/apache/hadoop/mapred/Counters;
       4: areturn
}
