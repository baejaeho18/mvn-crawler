Compiled from "SequenceFileAsBinaryInputFormat.java"
public class org.apache.hadoop.mapred.SequenceFileAsBinaryInputFormat$SequenceFileAsBinaryRecordReader implements org.apache.hadoop.mapred.RecordReader<org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable> {
  private org.apache.hadoop.io.SequenceFile$Reader in;

  private long start;

  private long end;

  private boolean done;

  private org.apache.hadoop.io.DataOutputBuffer buffer;

  private org.apache.hadoop.io.SequenceFile$ValueBytes vbytes;

  public org.apache.hadoop.mapred.SequenceFileAsBinaryInputFormat$SequenceFileAsBinaryRecordReader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.mapred.FileSplit) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field done:Z
       9: aload_0
      10: new           #3                  // class org/apache/hadoop/io/DataOutputBuffer
      13: dup
      14: invokespecial #4                  // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      17: putfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      20: aload_2
      21: invokevirtual #6                  // Method org/apache/hadoop/mapred/FileSplit.getPath:()Lorg/apache/hadoop/fs/Path;
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokevirtual #7                  // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      30: astore        4
      32: aload_0
      33: new           #8                  // class org/apache/hadoop/io/SequenceFile$Reader
      36: dup
      37: aload         4
      39: aload_3
      40: aload_1
      41: invokespecial #9                  // Method org/apache/hadoop/io/SequenceFile$Reader."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
      44: putfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      47: aload_0
      48: aload_2
      49: invokevirtual #11                 // Method org/apache/hadoop/mapred/FileSplit.getStart:()J
      52: aload_2
      53: invokevirtual #12                 // Method org/apache/hadoop/mapred/FileSplit.getLength:()J
      56: ladd
      57: putfield      #13                 // Field end:J
      60: aload_2
      61: invokevirtual #11                 // Method org/apache/hadoop/mapred/FileSplit.getStart:()J
      64: aload_0
      65: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      68: invokevirtual #14                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      71: lcmp
      72: ifle          86
      75: aload_0
      76: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      79: aload_2
      80: invokevirtual #11                 // Method org/apache/hadoop/mapred/FileSplit.getStart:()J
      83: invokevirtual #15                 // Method org/apache/hadoop/io/SequenceFile$Reader.sync:(J)V
      86: aload_0
      87: aload_0
      88: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      91: invokevirtual #14                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      94: putfield      #16                 // Field start:J
      97: aload_0
      98: aload_0
      99: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
     102: invokevirtual #17                 // Method org/apache/hadoop/io/SequenceFile$Reader.createValueBytes:()Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
     105: putfield      #18                 // Field vbytes:Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
     108: aload_0
     109: aload_0
     110: getfield      #16                 // Field start:J
     113: aload_0
     114: getfield      #13                 // Field end:J
     117: lcmp
     118: iflt          125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: putfield      #2                  // Field done:Z
     129: return

  public org.apache.hadoop.io.BytesWritable createKey();
    Code:
       0: new           #19                 // class org/apache/hadoop/io/BytesWritable
       3: dup
       4: invokespecial #20                 // Method org/apache/hadoop/io/BytesWritable."<init>":()V
       7: areturn

  public org.apache.hadoop.io.BytesWritable createValue();
    Code:
       0: new           #19                 // class org/apache/hadoop/io/BytesWritable
       3: dup
       4: invokespecial #20                 // Method org/apache/hadoop/io/BytesWritable."<init>":()V
       7: areturn

  public java.lang.String getKeyClassName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #21                 // Method org/apache/hadoop/io/SequenceFile$Reader.getKeyClassName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getValueClassName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #22                 // Method org/apache/hadoop/io/SequenceFile$Reader.getValueClassName:()Ljava/lang/String;
       7: areturn

  public synchronized boolean next(org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field done:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      13: invokevirtual #14                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      16: lstore_3
      17: iconst_m1
      18: aload_0
      19: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      22: aload_0
      23: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      26: invokevirtual #23                 // Method org/apache/hadoop/io/SequenceFile$Reader.nextRawKey:(Lorg/apache/hadoop/io/DataOutputBuffer;)I
      29: if_icmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: istore        5
      39: iload         5
      41: ifne          123
      44: aload_1
      45: aload_0
      46: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      49: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      52: iconst_0
      53: aload_0
      54: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      57: invokevirtual #25                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      60: invokevirtual #26                 // Method org/apache/hadoop/io/BytesWritable.set:([BII)V
      63: aload_0
      64: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      67: invokevirtual #27                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      70: pop
      71: aload_0
      72: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      75: aload_0
      76: getfield      #18                 // Field vbytes:Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
      79: invokevirtual #28                 // Method org/apache/hadoop/io/SequenceFile$Reader.nextRawValue:(Lorg/apache/hadoop/io/SequenceFile$ValueBytes;)I
      82: pop
      83: aload_0
      84: getfield      #18                 // Field vbytes:Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
      87: aload_0
      88: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      91: invokeinterface #29,  2           // InterfaceMethod org/apache/hadoop/io/SequenceFile$ValueBytes.writeUncompressedBytes:(Ljava/io/DataOutputStream;)V
      96: aload_2
      97: aload_0
      98: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     101: invokevirtual #24                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
     104: iconst_0
     105: aload_0
     106: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     109: invokevirtual #25                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     112: invokevirtual #26                 // Method org/apache/hadoop/io/BytesWritable.set:([BII)V
     115: aload_0
     116: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     119: invokevirtual #27                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
     122: pop
     123: aload_0
     124: iload         5
     126: ifne          148
     129: lload_3
     130: aload_0
     131: getfield      #13                 // Field end:J
     134: lcmp
     135: iflt          152
     138: aload_0
     139: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
     142: invokevirtual #30                 // Method org/apache/hadoop/io/SequenceFile$Reader.syncSeen:()Z
     145: ifeq          152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: dup_x1
     154: putfield      #2                  // Field done:Z
     157: ifne          164
     160: iconst_1
     161: goto          165
     164: iconst_0
     165: ireturn

  public long getPos() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #14                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
       7: lreturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #31                 // Method org/apache/hadoop/io/SequenceFile$Reader.close:()V
       7: return

  public float getProgress() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field end:J
       4: aload_0
       5: getfield      #16                 // Field start:J
       8: lcmp
       9: ifne          14
      12: fconst_0
      13: freturn
      14: fconst_1
      15: aload_0
      16: getfield      #10                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      19: invokevirtual #14                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      22: aload_0
      23: getfield      #16                 // Field start:J
      26: lsub
      27: l2d
      28: aload_0
      29: getfield      #13                 // Field end:J
      32: aload_0
      33: getfield      #16                 // Field start:J
      36: lsub
      37: l2d
      38: ddiv
      39: d2f
      40: invokestatic  #32                 // Method java/lang/Math.min:(FF)F
      43: freturn

  public java.lang.Object createValue();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method createValue:()Lorg/apache/hadoop/io/BytesWritable;
       4: areturn

  public java.lang.Object createKey();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method createKey:()Lorg/apache/hadoop/io/BytesWritable;
       4: areturn

  public boolean next(java.lang.Object, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class org/apache/hadoop/io/BytesWritable
       5: aload_2
       6: checkcast     #19                 // class org/apache/hadoop/io/BytesWritable
       9: invokevirtual #35                 // Method next:(Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/io/BytesWritable;)Z
      12: ireturn
}
