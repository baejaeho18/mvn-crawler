Compiled from "JobConf.java"
public class org.apache.hadoop.mapred.JobConf extends org.apache.hadoop.conf.Configuration {
  private static final org.slf4j.Logger LOG;

  private static final java.util.regex.Pattern JAVA_OPTS_XMX_PATTERN;

  public static final java.lang.String MAPRED_TASK_MAXVMEM_PROPERTY;

  public static final java.lang.String UPPER_LIMIT_ON_TASK_VMEM_PROPERTY;

  public static final java.lang.String MAPRED_TASK_DEFAULT_MAXVMEM_PROPERTY;

  public static final java.lang.String MAPRED_TASK_MAXPMEM_PROPERTY;

  public static final long DISABLED_MEMORY_LIMIT;

  public static final java.lang.String MAPRED_LOCAL_DIR_PROPERTY;

  public static final java.lang.String DEFAULT_QUEUE_NAME;

  static final java.lang.String MAPREDUCE_JOB_MAP_MEMORY_MB_PROPERTY;

  static final java.lang.String MAPREDUCE_JOB_REDUCE_MEMORY_MB_PROPERTY;

  public static final java.lang.String MAPRED_JOB_MAP_MEMORY_MB_PROPERTY;

  public static final java.lang.String MAPRED_JOB_REDUCE_MEMORY_MB_PROPERTY;

  public static final java.util.regex.Pattern UNPACK_JAR_PATTERN_DEFAULT;

  public static final java.lang.String MAPRED_TASK_JAVA_OPTS;

  public static final java.lang.String MAPRED_MAP_TASK_JAVA_OPTS;

  public static final java.lang.String MAPRED_REDUCE_TASK_JAVA_OPTS;

  public static final java.lang.String DEFAULT_MAPRED_TASK_JAVA_OPTS;

  public static final java.lang.String MAPRED_TASK_ULIMIT;

  public static final java.lang.String MAPRED_MAP_TASK_ULIMIT;

  public static final java.lang.String MAPRED_REDUCE_TASK_ULIMIT;

  public static final java.lang.String MAPRED_TASK_ENV;

  public static final java.lang.String MAPRED_MAP_TASK_ENV;

  public static final java.lang.String MAPRED_REDUCE_TASK_ENV;

  private org.apache.hadoop.security.Credentials credentials;

  public static final java.lang.String MAPRED_MAP_TASK_LOG_LEVEL;

  public static final java.lang.String MAPRED_REDUCE_TASK_LOG_LEVEL;

  public static final java.lang.String DEFAULT_LOG_LEVEL;

  public static final java.lang.String WORKFLOW_ID;

  public static final java.lang.String WORKFLOW_NAME;

  public static final java.lang.String WORKFLOW_NODE_NAME;

  public static final java.lang.String WORKFLOW_ADJACENCY_PREFIX_STRING;

  public static final java.lang.String WORKFLOW_ADJACENCY_PREFIX_PATTERN;

  public static final java.lang.String WORKFLOW_TAGS;

  public static final java.lang.String MAPREDUCE_RECOVER_JOB;

  public static final boolean DEFAULT_MAPREDUCE_RECOVER_JOB;

  public org.apache.hadoop.mapred.JobConf();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
       4: aload_0
       5: new           #5                  // class org/apache/hadoop/security/Credentials
       8: dup
       9: invokespecial #6                  // Method org/apache/hadoop/security/Credentials."<init>":()V
      12: putfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
      15: aload_0
      16: invokespecial #8                  // Method checkAndWarnDeprecation:()V
      19: return

  public org.apache.hadoop.mapred.JobConf(java.lang.Class);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
       4: aload_0
       5: new           #5                  // class org/apache/hadoop/security/Credentials
       8: dup
       9: invokespecial #6                  // Method org/apache/hadoop/security/Credentials."<init>":()V
      12: putfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
      15: aload_0
      16: aload_1
      17: invokevirtual #9                  // Method setJarByClass:(Ljava/lang/Class;)V
      20: aload_0
      21: invokespecial #8                  // Method checkAndWarnDeprecation:()V
      24: return

  public org.apache.hadoop.mapred.JobConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/apache/hadoop/conf/Configuration."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: new           #5                  // class org/apache/hadoop/security/Credentials
       9: dup
      10: invokespecial #6                  // Method org/apache/hadoop/security/Credentials."<init>":()V
      13: putfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
      16: aload_1
      17: instanceof    #11                 // class org/apache/hadoop/mapred/JobConf
      20: ifeq          36
      23: aload_1
      24: checkcast     #11                 // class org/apache/hadoop/mapred/JobConf
      27: astore_2
      28: aload_0
      29: aload_2
      30: getfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
      33: putfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
      36: aload_0
      37: invokespecial #8                  // Method checkAndWarnDeprecation:()V
      40: return

  public org.apache.hadoop.mapred.JobConf(org.apache.hadoop.conf.Configuration, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #9                  // Method setJarByClass:(Ljava/lang/Class;)V
      10: return

  public org.apache.hadoop.mapred.JobConf(java.lang.String);
    Code:
       0: aload_0
       1: new           #13                 // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
       9: invokespecial #15                 // Method "<init>":(Lorg/apache/hadoop/fs/Path;)V
      12: return

  public org.apache.hadoop.mapred.JobConf(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
       4: aload_0
       5: new           #5                  // class org/apache/hadoop/security/Credentials
       8: dup
       9: invokespecial #6                  // Method org/apache/hadoop/security/Credentials."<init>":()V
      12: putfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
      15: aload_0
      16: aload_1
      17: invokevirtual #16                 // Method addResource:(Lorg/apache/hadoop/fs/Path;)V
      20: aload_0
      21: invokespecial #8                  // Method checkAndWarnDeprecation:()V
      24: return

  public org.apache.hadoop.mapred.JobConf(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #17                 // Method org/apache/hadoop/conf/Configuration."<init>":(Z)V
       5: aload_0
       6: new           #5                  // class org/apache/hadoop/security/Credentials
       9: dup
      10: invokespecial #6                  // Method org/apache/hadoop/security/Credentials."<init>":()V
      13: putfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
      16: aload_0
      17: invokespecial #8                  // Method checkAndWarnDeprecation:()V
      20: return

  public org.apache.hadoop.security.Credentials getCredentials();
    Code:
       0: aload_0
       1: getfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
       4: areturn

  public void setCredentials(org.apache.hadoop.security.Credentials);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field credentials:Lorg/apache/hadoop/security/Credentials;
       5: return

  public java.lang.String getJar();
    Code:
       0: aload_0
       1: ldc           #18                 // String mapreduce.job.jar
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setJar(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // String mapreduce.job.jar
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.util.regex.Pattern getJarUnpackPattern();
    Code:
       0: aload_0
       1: ldc           #21                 // String mapreduce.job.jar.unpack.pattern
       3: getstatic     #22                 // Field UNPACK_JAR_PATTERN_DEFAULT:Ljava/util/regex/Pattern;
       6: invokevirtual #23                 // Method getPattern:(Ljava/lang/String;Ljava/util/regex/Pattern;)Ljava/util/regex/Pattern;
       9: areturn

  public void setJarByClass(java.lang.Class);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method org/apache/hadoop/util/ClassUtil.findContainingJar:(Ljava/lang/Class;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        14
       9: aload_0
      10: aload_2
      11: invokevirtual #25                 // Method setJar:(Ljava/lang/String;)V
      14: return

  public java.lang.String[] getLocalDirs() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #26                 // String mapreduce.cluster.local.dir
       3: invokevirtual #27                 // Method getTrimmedStrings:(Ljava/lang/String;)[Ljava/lang/String;
       6: areturn

  public void deleteLocalFiles() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getLocalDirs:()[Ljava/lang/String;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpge     38
      13: aload_0
      14: invokestatic  #29                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      17: new           #13                 // class org/apache/hadoop/fs/Path
      20: dup
      21: aload_1
      22: iload_2
      23: aaload
      24: invokespecial #14                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      27: iconst_1
      28: invokevirtual #30                 // Method org/apache/hadoop/fs/LocalFileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      31: pop
      32: iinc          2, 1
      35: goto          7
      38: return

  public void deleteLocalFiles(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getLocalDirs:()[Ljava/lang/String;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_2
       9: arraylength
      10: if_icmpge     39
      13: aload_0
      14: invokestatic  #29                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      17: new           #13                 // class org/apache/hadoop/fs/Path
      20: dup
      21: aload_2
      22: iload_3
      23: aaload
      24: aload_1
      25: invokespecial #31                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      28: iconst_1
      29: invokevirtual #30                 // Method org/apache/hadoop/fs/LocalFileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      32: pop
      33: iinc          3, 1
      36: goto          7
      39: return

  public org.apache.hadoop.fs.Path getLocalPath(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #26                 // String mapreduce.cluster.local.dir
       3: aload_1
       4: invokevirtual #32                 // Method getLocalPath:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       7: areturn

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: ldc           #33                 // String mapreduce.job.user.name
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setUser(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #33                 // String mapreduce.job.user.name
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setKeepFailedTaskFiles(boolean);
    Code:
       0: aload_0
       1: ldc           #34                 // String mapreduce.task.files.preserve.failedtasks
       3: iload_1
       4: invokevirtual #35                 // Method setBoolean:(Ljava/lang/String;Z)V
       7: return

  public boolean getKeepFailedTaskFiles();
    Code:
       0: aload_0
       1: ldc           #34                 // String mapreduce.task.files.preserve.failedtasks
       3: iconst_0
       4: invokevirtual #36                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setKeepTaskFilesPattern(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #37                 // String mapreduce.task.files.preserve.filepattern
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getKeepTaskFilesPattern();
    Code:
       0: aload_0
       1: ldc           #37                 // String mapreduce.task.files.preserve.filepattern
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setWorkingDirectory(org.apache.hadoop.fs.Path);
    Code:
       0: new           #13                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: invokevirtual #38                 // Method getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
       8: aload_1
       9: invokespecial #39                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      12: astore_1
      13: aload_0
      14: ldc           #40                 // String mapreduce.job.working.dir
      16: aload_1
      17: invokevirtual #41                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      20: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      23: return

  public org.apache.hadoop.fs.Path getWorkingDirectory();
    Code:
       0: aload_0
       1: ldc           #40                 // String mapreduce.job.working.dir
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        20
      11: new           #13                 // class org/apache/hadoop/fs/Path
      14: dup
      15: aload_1
      16: invokespecial #14                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      19: areturn
      20: aload_0
      21: invokestatic  #42                 // Method org/apache/hadoop/fs/FileSystem.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      24: invokevirtual #43                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      27: astore_2
      28: aload_0
      29: ldc           #40                 // String mapreduce.job.working.dir
      31: aload_2
      32: invokevirtual #41                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      35: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      38: aload_2
      39: areturn
      40: astore_2
      41: new           #45                 // class java/lang/RuntimeException
      44: dup
      45: aload_2
      46: invokespecial #46                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      49: athrow
    Exception table:
       from    to  target type
          20    39    40   Class java/io/IOException

  public void setNumTasksToExecutePerJvm(int);
    Code:
       0: aload_0
       1: ldc           #47                 // String mapreduce.job.jvm.numtasks
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public int getNumTasksToExecutePerJvm();
    Code:
       0: aload_0
       1: ldc           #47                 // String mapreduce.job.jvm.numtasks
       3: iconst_1
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.hadoop.mapred.InputFormat getInputFormat();
    Code:
       0: aload_0
       1: ldc           #50                 // String mapred.input.format.class
       3: ldc           #51                 // class org/apache/hadoop/mapred/TextInputFormat
       5: ldc           #52                 // class org/apache/hadoop/mapred/InputFormat
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: aload_0
      11: invokestatic  #54                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      14: checkcast     #52                 // class org/apache/hadoop/mapred/InputFormat
      17: areturn

  public void setInputFormat(java.lang.Class<? extends org.apache.hadoop.mapred.InputFormat>);
    Code:
       0: aload_0
       1: ldc           #50                 // String mapred.input.format.class
       3: aload_1
       4: ldc           #52                 // class org/apache/hadoop/mapred/InputFormat
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public org.apache.hadoop.mapred.OutputFormat getOutputFormat();
    Code:
       0: aload_0
       1: ldc           #56                 // String mapred.output.format.class
       3: ldc           #57                 // class org/apache/hadoop/mapred/TextOutputFormat
       5: ldc           #58                 // class org/apache/hadoop/mapred/OutputFormat
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: aload_0
      11: invokestatic  #54                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      14: checkcast     #58                 // class org/apache/hadoop/mapred/OutputFormat
      17: areturn

  public org.apache.hadoop.mapred.OutputCommitter getOutputCommitter();
    Code:
       0: aload_0
       1: ldc           #59                 // String mapred.output.committer.class
       3: ldc           #60                 // class org/apache/hadoop/mapred/FileOutputCommitter
       5: ldc           #61                 // class org/apache/hadoop/mapred/OutputCommitter
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: aload_0
      11: invokestatic  #54                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      14: checkcast     #61                 // class org/apache/hadoop/mapred/OutputCommitter
      17: areturn

  public void setOutputCommitter(java.lang.Class<? extends org.apache.hadoop.mapred.OutputCommitter>);
    Code:
       0: aload_0
       1: ldc           #59                 // String mapred.output.committer.class
       3: aload_1
       4: ldc           #61                 // class org/apache/hadoop/mapred/OutputCommitter
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public void setOutputFormat(java.lang.Class<? extends org.apache.hadoop.mapred.OutputFormat>);
    Code:
       0: aload_0
       1: ldc           #56                 // String mapred.output.format.class
       3: aload_1
       4: ldc           #58                 // class org/apache/hadoop/mapred/OutputFormat
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public void setCompressMapOutput(boolean);
    Code:
       0: aload_0
       1: ldc           #62                 // String mapreduce.map.output.compress
       3: iload_1
       4: invokevirtual #35                 // Method setBoolean:(Ljava/lang/String;Z)V
       7: return

  public boolean getCompressMapOutput();
    Code:
       0: aload_0
       1: ldc           #62                 // String mapreduce.map.output.compress
       3: iconst_0
       4: invokevirtual #36                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setMapOutputCompressorClass(java.lang.Class<? extends org.apache.hadoop.io.compress.CompressionCodec>);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #63                 // Method setCompressMapOutput:(Z)V
       5: aload_0
       6: ldc           #64                 // String mapreduce.map.output.compress.codec
       8: aload_1
       9: ldc           #65                 // class org/apache/hadoop/io/compress/CompressionCodec
      11: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      14: return

  public java.lang.Class<? extends org.apache.hadoop.io.compress.CompressionCodec> getMapOutputCompressorClass(java.lang.Class<? extends org.apache.hadoop.io.compress.CompressionCodec>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: ldc           #64                 // String mapreduce.map.output.compress.codec
       5: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_3
       9: aload_3
      10: ifnull        63
      13: aload_0
      14: aload_3
      15: invokevirtual #66                 // Method getClassByName:(Ljava/lang/String;)Ljava/lang/Class;
      18: ldc           #65                 // class org/apache/hadoop/io/compress/CompressionCodec
      20: invokevirtual #67                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      23: astore_2
      24: goto          63
      27: astore        4
      29: new           #69                 // class java/lang/IllegalArgumentException
      32: dup
      33: new           #70                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #72                 // String Compression codec
      42: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #74                 // String  was not found.
      51: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload         4
      59: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: athrow
      63: aload_2
      64: areturn
    Exception table:
       from    to  target type
          13    24    27   Class java/lang/ClassNotFoundException

  public java.lang.Class<?> getMapOutputKeyClass();
    Code:
       0: aload_0
       1: ldc           #77                 // String mapreduce.map.output.key.class
       3: aconst_null
       4: ldc           #78                 // class java/lang/Object
       6: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: ifnonnull     19
      14: aload_0
      15: invokevirtual #79                 // Method getOutputKeyClass:()Ljava/lang/Class;
      18: astore_1
      19: aload_1
      20: areturn

  public void setMapOutputKeyClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #77                 // String mapreduce.map.output.key.class
       3: aload_1
       4: ldc           #78                 // class java/lang/Object
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public java.lang.Class<?> getMapOutputValueClass();
    Code:
       0: aload_0
       1: ldc           #80                 // String mapreduce.map.output.value.class
       3: aconst_null
       4: ldc           #78                 // class java/lang/Object
       6: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: ifnonnull     19
      14: aload_0
      15: invokevirtual #81                 // Method getOutputValueClass:()Ljava/lang/Class;
      18: astore_1
      19: aload_1
      20: areturn

  public void setMapOutputValueClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #80                 // String mapreduce.map.output.value.class
       3: aload_1
       4: ldc           #78                 // class java/lang/Object
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public java.lang.Class<?> getOutputKeyClass();
    Code:
       0: aload_0
       1: ldc           #82                 // String mapreduce.job.output.key.class
       3: ldc           #83                 // class org/apache/hadoop/io/LongWritable
       5: ldc           #78                 // class java/lang/Object
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: areturn

  public void setOutputKeyClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #82                 // String mapreduce.job.output.key.class
       3: aload_1
       4: ldc           #78                 // class java/lang/Object
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public org.apache.hadoop.io.RawComparator getOutputKeyComparator();
    Code:
       0: aload_0
       1: ldc           #84                 // String mapreduce.job.output.key.comparator.class
       3: aconst_null
       4: ldc           #85                 // class org/apache/hadoop/io/RawComparator
       6: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: ifnull        23
      14: aload_1
      15: aload_0
      16: invokestatic  #54                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      19: checkcast     #85                 // class org/apache/hadoop/io/RawComparator
      22: areturn
      23: aload_0
      24: invokevirtual #86                 // Method getMapOutputKeyClass:()Ljava/lang/Class;
      27: ldc           #87                 // class org/apache/hadoop/io/WritableComparable
      29: invokevirtual #67                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      32: aload_0
      33: invokestatic  #88                 // Method org/apache/hadoop/io/WritableComparator.get:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/WritableComparator;
      36: areturn

  public void setOutputKeyComparatorClass(java.lang.Class<? extends org.apache.hadoop.io.RawComparator>);
    Code:
       0: aload_0
       1: ldc           #84                 // String mapreduce.job.output.key.comparator.class
       3: aload_1
       4: ldc           #85                 // class org/apache/hadoop/io/RawComparator
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public void setKeyFieldComparatorOptions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #89                 // class org/apache/hadoop/mapred/lib/KeyFieldBasedComparator
       3: invokevirtual #90                 // Method setOutputKeyComparatorClass:(Ljava/lang/Class;)V
       6: aload_0
       7: getstatic     #91                 // Field org/apache/hadoop/mapred/lib/KeyFieldBasedComparator.COMPARATOR_OPTIONS:Ljava/lang/String;
      10: aload_1
      11: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public java.lang.String getKeyFieldComparatorOption();
    Code:
       0: aload_0
       1: getstatic     #91                 // Field org/apache/hadoop/mapred/lib/KeyFieldBasedComparator.COMPARATOR_OPTIONS:Ljava/lang/String;
       4: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public void setKeyFieldPartitionerOptions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #92                 // class org/apache/hadoop/mapred/lib/KeyFieldBasedPartitioner
       3: invokevirtual #93                 // Method setPartitionerClass:(Ljava/lang/Class;)V
       6: aload_0
       7: getstatic     #94                 // Field org/apache/hadoop/mapred/lib/KeyFieldBasedPartitioner.PARTITIONER_OPTIONS:Ljava/lang/String;
      10: aload_1
      11: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public java.lang.String getKeyFieldPartitionerOption();
    Code:
       0: aload_0
       1: getstatic     #94                 // Field org/apache/hadoop/mapred/lib/KeyFieldBasedPartitioner.PARTITIONER_OPTIONS:Ljava/lang/String;
       4: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public org.apache.hadoop.io.RawComparator getCombinerKeyGroupingComparator();
    Code:
       0: aload_0
       1: ldc           #95                 // String mapreduce.job.combiner.group.comparator.class
       3: aconst_null
       4: ldc           #85                 // class org/apache/hadoop/io/RawComparator
       6: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: ifnonnull     19
      14: aload_0
      15: invokevirtual #96                 // Method getOutputKeyComparator:()Lorg/apache/hadoop/io/RawComparator;
      18: areturn
      19: aload_1
      20: aload_0
      21: invokestatic  #54                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      24: checkcast     #85                 // class org/apache/hadoop/io/RawComparator
      27: areturn

  public org.apache.hadoop.io.RawComparator getOutputValueGroupingComparator();
    Code:
       0: aload_0
       1: ldc           #97                 // String mapreduce.job.output.group.comparator.class
       3: aconst_null
       4: ldc           #85                 // class org/apache/hadoop/io/RawComparator
       6: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: ifnonnull     19
      14: aload_0
      15: invokevirtual #96                 // Method getOutputKeyComparator:()Lorg/apache/hadoop/io/RawComparator;
      18: areturn
      19: aload_1
      20: aload_0
      21: invokestatic  #54                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      24: checkcast     #85                 // class org/apache/hadoop/io/RawComparator
      27: areturn

  public void setCombinerKeyGroupingComparator(java.lang.Class<? extends org.apache.hadoop.io.RawComparator>);
    Code:
       0: aload_0
       1: ldc           #95                 // String mapreduce.job.combiner.group.comparator.class
       3: aload_1
       4: ldc           #85                 // class org/apache/hadoop/io/RawComparator
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public void setOutputValueGroupingComparator(java.lang.Class<? extends org.apache.hadoop.io.RawComparator>);
    Code:
       0: aload_0
       1: ldc           #97                 // String mapreduce.job.output.group.comparator.class
       3: aload_1
       4: ldc           #85                 // class org/apache/hadoop/io/RawComparator
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public boolean getUseNewMapper();
    Code:
       0: aload_0
       1: ldc           #98                 // String mapred.mapper.new-api
       3: iconst_0
       4: invokevirtual #36                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setUseNewMapper(boolean);
    Code:
       0: aload_0
       1: ldc           #98                 // String mapred.mapper.new-api
       3: iload_1
       4: invokevirtual #35                 // Method setBoolean:(Ljava/lang/String;Z)V
       7: return

  public boolean getUseNewReducer();
    Code:
       0: aload_0
       1: ldc           #99                 // String mapred.reducer.new-api
       3: iconst_0
       4: invokevirtual #36                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setUseNewReducer(boolean);
    Code:
       0: aload_0
       1: ldc           #99                 // String mapred.reducer.new-api
       3: iload_1
       4: invokevirtual #35                 // Method setBoolean:(Ljava/lang/String;Z)V
       7: return

  public java.lang.Class<?> getOutputValueClass();
    Code:
       0: aload_0
       1: ldc           #100                // String mapreduce.job.output.value.class
       3: ldc           #101                // class org/apache/hadoop/io/Text
       5: ldc           #78                 // class java/lang/Object
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: areturn

  public void setOutputValueClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #100                // String mapreduce.job.output.value.class
       3: aload_1
       4: ldc           #78                 // class java/lang/Object
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public java.lang.Class<? extends org.apache.hadoop.mapred.Mapper> getMapperClass();
    Code:
       0: aload_0
       1: ldc           #102                // String mapred.mapper.class
       3: ldc           #103                // class org/apache/hadoop/mapred/lib/IdentityMapper
       5: ldc           #104                // class org/apache/hadoop/mapred/Mapper
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: areturn

  public void setMapperClass(java.lang.Class<? extends org.apache.hadoop.mapred.Mapper>);
    Code:
       0: aload_0
       1: ldc           #102                // String mapred.mapper.class
       3: aload_1
       4: ldc           #104                // class org/apache/hadoop/mapred/Mapper
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public java.lang.Class<? extends org.apache.hadoop.mapred.MapRunnable> getMapRunnerClass();
    Code:
       0: aload_0
       1: ldc           #105                // String mapred.map.runner.class
       3: ldc           #106                // class org/apache/hadoop/mapred/MapRunner
       5: ldc           #107                // class org/apache/hadoop/mapred/MapRunnable
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: areturn

  public void setMapRunnerClass(java.lang.Class<? extends org.apache.hadoop.mapred.MapRunnable>);
    Code:
       0: aload_0
       1: ldc           #105                // String mapred.map.runner.class
       3: aload_1
       4: ldc           #107                // class org/apache/hadoop/mapred/MapRunnable
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public java.lang.Class<? extends org.apache.hadoop.mapred.Partitioner> getPartitionerClass();
    Code:
       0: aload_0
       1: ldc           #108                // String mapred.partitioner.class
       3: ldc           #109                // class org/apache/hadoop/mapred/lib/HashPartitioner
       5: ldc           #110                // class org/apache/hadoop/mapred/Partitioner
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: areturn

  public void setPartitionerClass(java.lang.Class<? extends org.apache.hadoop.mapred.Partitioner>);
    Code:
       0: aload_0
       1: ldc           #108                // String mapred.partitioner.class
       3: aload_1
       4: ldc           #110                // class org/apache/hadoop/mapred/Partitioner
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public java.lang.Class<? extends org.apache.hadoop.mapred.Reducer> getReducerClass();
    Code:
       0: aload_0
       1: ldc           #111                // String mapred.reducer.class
       3: ldc           #112                // class org/apache/hadoop/mapred/lib/IdentityReducer
       5: ldc           #113                // class org/apache/hadoop/mapred/Reducer
       7: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      10: areturn

  public void setReducerClass(java.lang.Class<? extends org.apache.hadoop.mapred.Reducer>);
    Code:
       0: aload_0
       1: ldc           #111                // String mapred.reducer.class
       3: aload_1
       4: ldc           #113                // class org/apache/hadoop/mapred/Reducer
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public java.lang.Class<? extends org.apache.hadoop.mapred.Reducer> getCombinerClass();
    Code:
       0: aload_0
       1: ldc           #114                // String mapred.combiner.class
       3: aconst_null
       4: ldc           #113                // class org/apache/hadoop/mapred/Reducer
       6: invokevirtual #53                 // Method getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: areturn

  public void setCombinerClass(java.lang.Class<? extends org.apache.hadoop.mapred.Reducer>);
    Code:
       0: aload_0
       1: ldc           #114                // String mapred.combiner.class
       3: aload_1
       4: ldc           #113                // class org/apache/hadoop/mapred/Reducer
       6: invokevirtual #55                 // Method setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
       9: return

  public boolean getSpeculativeExecution();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method getMapSpeculativeExecution:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #116                // Method getReduceSpeculativeExecution:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void setSpeculativeExecution(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #117                // Method setMapSpeculativeExecution:(Z)V
       5: aload_0
       6: iload_1
       7: invokevirtual #118                // Method setReduceSpeculativeExecution:(Z)V
      10: return

  public boolean getMapSpeculativeExecution();
    Code:
       0: aload_0
       1: ldc           #119                // String mapreduce.map.speculative
       3: iconst_1
       4: invokevirtual #36                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setMapSpeculativeExecution(boolean);
    Code:
       0: aload_0
       1: ldc           #119                // String mapreduce.map.speculative
       3: iload_1
       4: invokevirtual #35                 // Method setBoolean:(Ljava/lang/String;Z)V
       7: return

  public boolean getReduceSpeculativeExecution();
    Code:
       0: aload_0
       1: ldc           #120                // String mapreduce.reduce.speculative
       3: iconst_1
       4: invokevirtual #36                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setReduceSpeculativeExecution(boolean);
    Code:
       0: aload_0
       1: ldc           #120                // String mapreduce.reduce.speculative
       3: iload_1
       4: invokevirtual #35                 // Method setBoolean:(Ljava/lang/String;Z)V
       7: return

  public int getNumMapTasks();
    Code:
       0: aload_0
       1: ldc           #121                // String mapreduce.job.maps
       3: iconst_1
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public void setNumMapTasks(int);
    Code:
       0: aload_0
       1: ldc           #121                // String mapreduce.job.maps
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public int getNumReduceTasks();
    Code:
       0: aload_0
       1: ldc           #122                // String mapreduce.job.reduces
       3: iconst_1
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public void setNumReduceTasks(int);
    Code:
       0: aload_0
       1: ldc           #122                // String mapreduce.job.reduces
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public int getMaxMapAttempts();
    Code:
       0: aload_0
       1: ldc           #123                // String mapreduce.map.maxattempts
       3: iconst_4
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public void setMaxMapAttempts(int);
    Code:
       0: aload_0
       1: ldc           #123                // String mapreduce.map.maxattempts
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public int getMaxReduceAttempts();
    Code:
       0: aload_0
       1: ldc           #124                // String mapreduce.reduce.maxattempts
       3: iconst_4
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public void setMaxReduceAttempts(int);
    Code:
       0: aload_0
       1: ldc           #124                // String mapreduce.reduce.maxattempts
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public java.lang.String getJobName();
    Code:
       0: aload_0
       1: ldc           #125                // String mapreduce.job.name
       3: ldc           #126                // String
       5: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public void setJobName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #125                // String mapreduce.job.name
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getSessionId();
    Code:
       0: aload_0
       1: ldc           #128                // String session.id
       3: ldc           #126                // String
       5: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public void setSessionId(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #128                // String session.id
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setMaxTaskFailuresPerTracker(int);
    Code:
       0: aload_0
       1: ldc           #129                // String mapreduce.job.maxtaskfailures.per.tracker
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public int getMaxTaskFailuresPerTracker();
    Code:
       0: aload_0
       1: ldc           #129                // String mapreduce.job.maxtaskfailures.per.tracker
       3: iconst_3
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public int getMaxMapTaskFailuresPercent();
    Code:
       0: aload_0
       1: ldc           #130                // String mapreduce.map.failures.maxpercent
       3: iconst_0
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public void setMaxMapTaskFailuresPercent(int);
    Code:
       0: aload_0
       1: ldc           #130                // String mapreduce.map.failures.maxpercent
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public int getMaxReduceTaskFailuresPercent();
    Code:
       0: aload_0
       1: ldc           #131                // String mapreduce.reduce.failures.maxpercent
       3: iconst_0
       4: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public void setMaxReduceTaskFailuresPercent(int);
    Code:
       0: aload_0
       1: ldc           #131                // String mapreduce.reduce.failures.maxpercent
       3: iload_1
       4: invokevirtual #48                 // Method setInt:(Ljava/lang/String;I)V
       7: return

  public void setJobPriority(org.apache.hadoop.mapred.JobPriority);
    Code:
       0: aload_0
       1: ldc           #132                // String mapreduce.job.priority
       3: aload_1
       4: invokevirtual #133                // Method org/apache/hadoop/mapred/JobPriority.toString:()Ljava/lang/String;
       7: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void setJobPriorityAsInteger(int);
    Code:
       0: aload_0
       1: ldc           #132                // String mapreduce.job.priority
       3: iload_1
       4: invokestatic  #134                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public org.apache.hadoop.mapred.JobPriority getJobPriority();
    Code:
       0: aload_0
       1: ldc           #132                // String mapreduce.job.priority
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     15
      11: getstatic     #135                // Field org/apache/hadoop/mapred/JobPriority.DEFAULT:Lorg/apache/hadoop/mapred/JobPriority;
      14: areturn
      15: getstatic     #135                // Field org/apache/hadoop/mapred/JobPriority.DEFAULT:Lorg/apache/hadoop/mapred/JobPriority;
      18: astore_2
      19: aload_1
      20: invokestatic  #136                // Method org/apache/hadoop/mapred/JobPriority.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobPriority;
      23: astore_2
      24: goto          37
      27: astore_3
      28: aload_0
      29: aload_1
      30: invokestatic  #137                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      33: invokespecial #138                // Method convertToJobPriority:(I)Lorg/apache/hadoop/mapred/JobPriority;
      36: areturn
      37: aload_2
      38: areturn
    Exception table:
       from    to  target type
          19    24    27   Class java/lang/IllegalArgumentException

  public int getJobPriorityAsInteger();
    Code:
       0: aload_0
       1: ldc           #132                // String mapreduce.job.priority
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: iconst_0
      14: istore_2
      15: aload_0
      16: aload_1
      17: invokespecial #139                // Method convertPriorityToInteger:(Ljava/lang/String;)I
      20: istore_2
      21: goto          30
      24: astore_3
      25: aload_1
      26: invokestatic  #137                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      29: ireturn
      30: iload_2
      31: ireturn
    Exception table:
       from    to  target type
          15    21    24   Class java/lang/IllegalArgumentException

  private int convertPriorityToInteger(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #136                // Method org/apache/hadoop/mapred/JobPriority.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobPriority;
       4: astore_2
       5: getstatic     #140                // Field org/apache/hadoop/mapred/JobConf$1.$SwitchMap$org$apache$hadoop$mapred$JobPriority:[I
       8: aload_2
       9: invokevirtual #141                // Method org/apache/hadoop/mapred/JobPriority.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 6
                     1: 52
                     2: 54
                     3: 56
                     4: 58
                     5: 60
                     6: 62
               default: 64
          }
      52: iconst_5
      53: ireturn
      54: iconst_4
      55: ireturn
      56: iconst_3
      57: ireturn
      58: iconst_2
      59: ireturn
      60: iconst_1
      61: ireturn
      62: iconst_0
      63: ireturn
      64: iconst_0
      65: ireturn

  private org.apache.hadoop.mapred.JobPriority convertToJobPriority(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 5
                     0: 60
                     1: 56
                     2: 52
                     3: 48
                     4: 44
                     5: 40
               default: 64
          }
      40: getstatic     #142                // Field org/apache/hadoop/mapred/JobPriority.VERY_HIGH:Lorg/apache/hadoop/mapred/JobPriority;
      43: areturn
      44: getstatic     #143                // Field org/apache/hadoop/mapred/JobPriority.HIGH:Lorg/apache/hadoop/mapred/JobPriority;
      47: areturn
      48: getstatic     #144                // Field org/apache/hadoop/mapred/JobPriority.NORMAL:Lorg/apache/hadoop/mapred/JobPriority;
      51: areturn
      52: getstatic     #145                // Field org/apache/hadoop/mapred/JobPriority.LOW:Lorg/apache/hadoop/mapred/JobPriority;
      55: areturn
      56: getstatic     #146                // Field org/apache/hadoop/mapred/JobPriority.VERY_LOW:Lorg/apache/hadoop/mapred/JobPriority;
      59: areturn
      60: getstatic     #135                // Field org/apache/hadoop/mapred/JobPriority.DEFAULT:Lorg/apache/hadoop/mapred/JobPriority;
      63: areturn
      64: getstatic     #147                // Field org/apache/hadoop/mapred/JobPriority.UNDEFINED_PRIORITY:Lorg/apache/hadoop/mapred/JobPriority;
      67: areturn

  void setJobSubmitHostName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #148                // String mapreduce.job.submithostname
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  java.lang.String getJobSubmitHostName();
    Code:
       0: aload_0
       1: ldc           #148                // String mapreduce.job.submithostname
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: areturn

  void setJobSubmitHostAddress(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #149                // String mapreduce.job.submithostaddress
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  java.lang.String getJobSubmitHostAddress();
    Code:
       0: aload_0
       1: ldc           #149                // String mapreduce.job.submithostaddress
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: areturn

  public boolean getProfileEnabled();
    Code:
       0: aload_0
       1: ldc           #150                // String mapreduce.task.profile
       3: iconst_0
       4: invokevirtual #36                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setProfileEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #150                // String mapreduce.task.profile
       3: iload_1
       4: invokevirtual #35                 // Method setBoolean:(Ljava/lang/String;Z)V
       7: return

  public java.lang.String getProfileParams();
    Code:
       0: aload_0
       1: ldc           #151                // String mapreduce.task.profile.params
       3: ldc           #152                // String -agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s
       5: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public void setProfileParams(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #151                // String mapreduce.task.profile.params
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public org.apache.hadoop.conf.Configuration$IntegerRanges getProfileTaskRange(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          10
       5: ldc           #153                // String mapreduce.task.profile.maps
       7: goto          12
      10: ldc           #154                // String mapreduce.task.profile.reduces
      12: ldc           #155                // String 0-2
      14: invokevirtual #156                // Method getRange:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
      17: areturn

  public void setProfileTaskRange(boolean, java.lang.String);
    Code:
       0: new           #157                // class org/apache/hadoop/conf/Configuration$IntegerRanges
       3: dup
       4: aload_2
       5: invokespecial #158                // Method org/apache/hadoop/conf/Configuration$IntegerRanges."<init>":(Ljava/lang/String;)V
       8: pop
       9: aload_0
      10: iload_1
      11: ifeq          19
      14: ldc           #153                // String mapreduce.task.profile.maps
      16: goto          21
      19: ldc           #154                // String mapreduce.task.profile.reduces
      21: aload_2
      22: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      25: return

  public void setMapDebugScript(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #159                // String mapreduce.map.debug.script
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getMapDebugScript();
    Code:
       0: aload_0
       1: ldc           #159                // String mapreduce.map.debug.script
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setReduceDebugScript(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #160                // String mapreduce.reduce.debug.script
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getReduceDebugScript();
    Code:
       0: aload_0
       1: ldc           #160                // String mapreduce.reduce.debug.script
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public java.lang.String getJobEndNotificationURI();
    Code:
       0: aload_0
       1: ldc           #161                // String mapreduce.job.end-notification.url
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setJobEndNotificationURI(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #161                // String mapreduce.job.end-notification.url
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getJobEndNotificationCustomNotifierClass();
    Code:
       0: aload_0
       1: ldc           #162                // String mapreduce.job.end-notification.custom-notifier-class
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setJobEndNotificationCustomNotifierClass(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #162                // String mapreduce.job.end-notification.custom-notifier-class
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getJobLocalDir();
    Code:
       0: aload_0
       1: ldc           #163                // String mapreduce.job.local.dir
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public long getMemoryForMapTask();
    Code:
       0: aload_0
       1: invokespecial #164                // Method getDeprecatedMemoryValue:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifge          20
      11: aload_0
      12: getstatic     #165                // Field org/apache/hadoop/mapreduce/TaskType.MAP:Lorg/apache/hadoop/mapreduce/TaskType;
      15: invokevirtual #166                // Method getMemoryRequired:(Lorg/apache/hadoop/mapreduce/TaskType;)I
      18: i2l
      19: lreturn
      20: lload_1
      21: lreturn

  public void setMemoryForMapTask(long);
    Code:
       0: aload_0
       1: ldc           #167                // String mapreduce.map.memory.mb
       3: lload_1
       4: invokevirtual #168                // Method setLong:(Ljava/lang/String;J)V
       7: aload_0
       8: ldc           #169                // String mapred.job.map.memory.mb
      10: lload_1
      11: invokevirtual #168                // Method setLong:(Ljava/lang/String;J)V
      14: return

  public long getMemoryForReduceTask();
    Code:
       0: aload_0
       1: invokespecial #164                // Method getDeprecatedMemoryValue:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifge          20
      11: aload_0
      12: getstatic     #170                // Field org/apache/hadoop/mapreduce/TaskType.REDUCE:Lorg/apache/hadoop/mapreduce/TaskType;
      15: invokevirtual #166                // Method getMemoryRequired:(Lorg/apache/hadoop/mapreduce/TaskType;)I
      18: i2l
      19: lreturn
      20: lload_1
      21: lreturn

  private long getDeprecatedMemoryValue();
    Code:
       0: aload_0
       1: ldc           #171                // String mapred.task.maxvmem
       3: ldc2_w        #172                // long -1l
       6: invokevirtual #174                // Method getLong:(Ljava/lang/String;J)J
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifle          22
      16: lload_1
      17: ldc2_w        #175                // long 1048576l
      20: ldiv
      21: lstore_1
      22: lload_1
      23: lreturn

  public void setMemoryForReduceTask(long);
    Code:
       0: aload_0
       1: ldc           #177                // String mapreduce.reduce.memory.mb
       3: lload_1
       4: invokevirtual #168                // Method setLong:(Ljava/lang/String;J)V
       7: aload_0
       8: ldc           #178                // String mapred.job.reduce.memory.mb
      10: lload_1
      11: invokevirtual #168                // Method setLong:(Ljava/lang/String;J)V
      14: return

  public java.lang.String getQueueName();
    Code:
       0: aload_0
       1: ldc           #179                // String mapreduce.job.queuename
       3: ldc           #180                // String default
       5: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public void setQueueName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #179                // String mapreduce.job.queuename
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public static long normalizeMemoryConfigValue(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifge          10
       6: ldc2_w        #172                // long -1l
       9: lstore_0
      10: lload_0
      11: lreturn

  public static java.lang.String findContainingJar(java.lang.Class);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method org/apache/hadoop/util/ClassUtil.findContainingJar:(Ljava/lang/Class;)Ljava/lang/String;
       4: areturn

  public long getMaxVirtualMemoryForTask();
    Code:
       0: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #182                // String getMaxVirtualMemoryForTask() is deprecated. Instead use getMemoryForMapTask() and getMemoryForReduceTask()
       5: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: aload_0
      11: ldc           #171                // String mapred.task.maxvmem
      13: aload_0
      14: invokevirtual #184                // Method getMemoryForMapTask:()J
      17: aload_0
      18: invokevirtual #185                // Method getMemoryForReduceTask:()J
      21: invokestatic  #186                // Method java/lang/Math.max:(JJ)J
      24: ldc2_w        #187                // long 1024l
      27: lmul
      28: ldc2_w        #187                // long 1024l
      31: lmul
      32: invokevirtual #174                // Method getLong:(Ljava/lang/String;J)J
      35: lstore_1
      36: lload_1
      37: lreturn

  public void setMaxVirtualMemoryForTask(long);
    Code:
       0: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #189                // String setMaxVirtualMemoryForTask() is deprecated.Instead use setMemoryForMapTask() and setMemoryForReduceTask()
       5: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifge          26
      16: new           #69                 // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #190                // String Task memory allocation may not be < 0
      22: invokespecial #191                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: ldc           #171                // String mapred.task.maxvmem
      29: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
      32: ifnonnull     56
      35: aload_0
      36: lload_1
      37: ldc2_w        #175                // long 1048576l
      40: ldiv
      41: invokevirtual #192                // Method setMemoryForMapTask:(J)V
      44: aload_0
      45: lload_1
      46: ldc2_w        #175                // long 1048576l
      49: ldiv
      50: invokevirtual #193                // Method setMemoryForReduceTask:(J)V
      53: goto          63
      56: aload_0
      57: ldc           #171                // String mapred.task.maxvmem
      59: lload_1
      60: invokevirtual #168                // Method setLong:(Ljava/lang/String;J)V
      63: return

  public long getMaxPhysicalMemoryForTask();
    Code:
       0: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #194                // String The API getMaxPhysicalMemoryForTask() is deprecated. Refer to the APIs getMemoryForMapTask() and getMemoryForReduceTask() for details.
       5: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: ldc2_w        #172                // long -1l
      13: lreturn

  public void setMaxPhysicalMemoryForTask(long);
    Code:
       0: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #195                // String The API setMaxPhysicalMemoryForTask() is deprecated. The value set is ignored. Refer to  setMemoryForMapTask() and setMemoryForReduceTask() for details.
       5: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  static java.lang.String deprecatedString(java.lang.String);
    Code:
       0: new           #70                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #196                // String The variable
       9: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #197                // String  is no longer used.
      18: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  private void checkAndWarnDeprecation();
    Code:
       0: aload_0
       1: ldc           #171                // String mapred.task.maxvmem
       3: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
       6: ifnull        55
       9: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
      12: new           #70                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #171                // String mapred.task.maxvmem
      21: invokestatic  #198                // Method deprecatedString:(Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #199                // String  Instead use
      29: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #167                // String mapreduce.map.memory.mb
      34: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #200                // String  and
      39: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #177                // String mapreduce.reduce.memory.mb
      44: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      55: aload_0
      56: ldc           #201                // String mapred.child.ulimit
      58: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
      61: ifnull        77
      64: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
      67: ldc           #201                // String mapred.child.ulimit
      69: invokestatic  #198                // Method deprecatedString:(Ljava/lang/String;)Ljava/lang/String;
      72: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      77: aload_0
      78: ldc           #202                // String mapreduce.map.ulimit
      80: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
      83: ifnull        99
      86: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
      89: ldc           #202                // String mapreduce.map.ulimit
      91: invokestatic  #198                // Method deprecatedString:(Ljava/lang/String;)Ljava/lang/String;
      94: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      99: aload_0
     100: ldc           #203                // String mapreduce.reduce.ulimit
     102: invokevirtual #19                 // Method get:(Ljava/lang/String;)Ljava/lang/String;
     105: ifnull        121
     108: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
     111: ldc           #203                // String mapreduce.reduce.ulimit
     113: invokestatic  #198                // Method deprecatedString:(Ljava/lang/String;)Ljava/lang/String;
     116: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     121: return

  private java.lang.String getConfiguredTaskJavaOpts(org.apache.hadoop.mapreduce.TaskType);
    Code:
       0: ldc           #126                // String
       2: astore_2
       3: ldc           #126                // String
       5: astore_3
       6: aload_1
       7: getstatic     #165                // Field org/apache/hadoop/mapreduce/TaskType.MAP:Lorg/apache/hadoop/mapreduce/TaskType;
      10: if_acmpne     40
      13: aload_0
      14: ldc           #204                // String mapreduce.map.java.opts
      16: aload_0
      17: ldc           #205                // String mapred.child.java.opts
      19: ldc           #126                // String
      21: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: astore_2
      28: aload_0
      29: ldc           #206                // String mapreduce.admin.map.child.java.opts
      31: ldc           #207                // String -Djava.net.preferIPv4Stack=true -Dhadoop.metrics.log.level=WARN
      33: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      36: astore_3
      37: goto          64
      40: aload_0
      41: ldc           #208                // String mapreduce.reduce.java.opts
      43: aload_0
      44: ldc           #205                // String mapred.child.java.opts
      46: ldc           #126                // String
      48: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      51: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      54: astore_2
      55: aload_0
      56: ldc           #209                // String mapreduce.admin.reduce.child.java.opts
      58: ldc           #207                // String -Djava.net.preferIPv4Stack=true -Dhadoop.metrics.log.level=WARN
      60: invokevirtual #127                // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      63: astore_3
      64: new           #70                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      71: aload_3
      72: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #210                // String
      77: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_2
      81: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public java.lang.String getTaskJavaOpts(org.apache.hadoop.mapreduce.TaskType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #211                // Method getConfiguredTaskJavaOpts:(Lorg/apache/hadoop/mapreduce/TaskType;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ldc           #212                // String -Xmx
       9: invokevirtual #213                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      12: ifne          140
      15: aload_0
      16: ldc           #214                // String mapreduce.job.heap.memory-mb.ratio
      18: ldc           #215                // float 0.8f
      20: invokevirtual #216                // Method getFloat:(Ljava/lang/String;F)F
      23: fstore_3
      24: fload_3
      25: fconst_1
      26: fcmpl
      27: ifgt          36
      30: fload_3
      31: fconst_0
      32: fcmpg
      33: ifge          49
      36: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #217                // String Invalid value for mapreduce.job.heap.memory-mb.ratio, using the default.
      41: invokeinterface #183,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      46: ldc           #215                // float 0.8f
      48: fstore_3
      49: aload_0
      50: aload_1
      51: invokevirtual #166                // Method getMemoryRequired:(Lorg/apache/hadoop/mapreduce/TaskType;)I
      54: istore        4
      56: iload         4
      58: i2f
      59: fload_3
      60: fmul
      61: f2d
      62: invokestatic  #218                // Method java/lang/Math.ceil:(D)D
      65: d2i
      66: istore        5
      68: ldc           #219                // String -Xmx%dm
      70: iconst_1
      71: anewarray     #78                 // class java/lang/Object
      74: dup
      75: iconst_0
      76: iload         5
      78: invokestatic  #220                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: aastore
      82: invokestatic  #221                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      85: astore        6
      87: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
      90: new           #70                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #222                // String Task java-opts do not specify heap size. Setting task attempt jvm max heap size to
      99: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload         6
     104: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #223,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     115: new           #70                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     122: aload_2
     123: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #210                // String
     128: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload         6
     133: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: astore_2
     140: aload_2
     141: areturn

  public static int parseMaximumHeapSizeMB(java.lang.String);
    Code:
       0: getstatic     #224                // Field JAVA_OPTS_XMX_PATTERN:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #225                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_1
       8: aload_1
       9: invokevirtual #226                // Method java/util/regex/Matcher.matches:()Z
      12: ifeq          137
      15: aload_1
      16: iconst_1
      17: invokevirtual #227                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      20: invokestatic  #228                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      23: lstore_2
      24: lload_2
      25: lconst_0
      26: lcmp
      27: ifgt          32
      30: iconst_m1
      31: ireturn
      32: aload_1
      33: iconst_2
      34: invokevirtual #227                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      37: invokevirtual #229                // Method java/lang/String.isEmpty:()Z
      40: ifeq          50
      43: lload_2
      44: ldc2_w        #175                // long 1048576l
      47: ldiv
      48: l2i
      49: ireturn
      50: aload_1
      51: iconst_2
      52: invokevirtual #227                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      55: iconst_0
      56: invokevirtual #230                // Method java/lang/String.charAt:(I)C
      59: istore        4
      61: iload         4
      63: lookupswitch  { // 6
                    71: 120
                    75: 130
                    77: 127
                   103: 120
                   107: 130
                   109: 127
               default: 137
          }
     120: lload_2
     121: ldc2_w        #187                // long 1024l
     124: lmul
     125: l2i
     126: ireturn
     127: lload_2
     128: l2i
     129: ireturn
     130: lload_2
     131: ldc2_w        #187                // long 1024l
     134: ldiv
     135: l2i
     136: ireturn
     137: iconst_m1
     138: ireturn

  private int getMemoryRequiredHelper(java.lang.String, int, int, float);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokevirtual #49                 // Method getInt:(Ljava/lang/String;I)I
       6: istore        5
       8: iload         5
      10: ifgt          67
      13: iload_3
      14: ifle          64
      17: iload_3
      18: i2f
      19: fload         4
      21: fdiv
      22: f2d
      23: invokestatic  #218                // Method java/lang/Math.ceil:(D)D
      26: d2i
      27: istore        5
      29: getstatic     #181                // Field LOG:Lorg/slf4j/Logger;
      32: new           #70                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #231                // String Figured value for
      41: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #232                // String  from javaOpts
      50: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #223,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      61: goto          67
      64: iload_2
      65: istore        5
      67: iload         5
      69: ireturn

  public int getMemoryRequired(org.apache.hadoop.mapreduce.TaskType);
    Code:
       0: sipush        1024
       3: istore_2
       4: aload_0
       5: aload_1
       6: invokespecial #211                // Method getConfiguredTaskJavaOpts:(Lorg/apache/hadoop/mapreduce/TaskType;)Ljava/lang/String;
       9: invokestatic  #233                // Method parseMaximumHeapSizeMB:(Ljava/lang/String;)I
      12: istore_3
      13: aload_0
      14: ldc           #214                // String mapreduce.job.heap.memory-mb.ratio
      16: ldc           #215                // float 0.8f
      18: invokevirtual #216                // Method getFloat:(Ljava/lang/String;F)F
      21: fstore        4
      23: aload_1
      24: getstatic     #165                // Field org/apache/hadoop/mapreduce/TaskType.MAP:Lorg/apache/hadoop/mapreduce/TaskType;
      27: if_acmpne     43
      30: aload_0
      31: ldc           #167                // String mapreduce.map.memory.mb
      33: sipush        1024
      36: iload_3
      37: fload         4
      39: invokespecial #234                // Method getMemoryRequiredHelper:(Ljava/lang/String;IIF)I
      42: ireturn
      43: aload_1
      44: getstatic     #170                // Field org/apache/hadoop/mapreduce/TaskType.REDUCE:Lorg/apache/hadoop/mapreduce/TaskType;
      47: if_acmpne     63
      50: aload_0
      51: ldc           #177                // String mapreduce.reduce.memory.mb
      53: sipush        1024
      56: iload_3
      57: fload         4
      59: invokespecial #234                // Method getMemoryRequiredHelper:(Ljava/lang/String;IIF)I
      62: ireturn
      63: iload_2
      64: ireturn

  public static void main(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: new           #11                 // class org/apache/hadoop/mapred/JobConf
       3: dup
       4: new           #235                // class org/apache/hadoop/conf/Configuration
       7: dup
       8: invokespecial #4                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
      11: invokespecial #12                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      14: getstatic     #236                // Field java/lang/System.out:Ljava/io/PrintStream;
      17: invokevirtual #237                // Method writeXml:(Ljava/io/OutputStream;)V
      20: return

  static {};
    Code:
       0: ldc           #11                 // class org/apache/hadoop/mapred/JobConf
       2: invokestatic  #238                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #181                // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #239                // String .*(?:^|\\s)-Xmx(\\d+)([gGmMkK]?)(?:$|\\s).*
      10: invokestatic  #240                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #224                // Field JAVA_OPTS_XMX_PATTERN:Ljava/util/regex/Pattern;
      16: invokestatic  #241                // Method org/apache/hadoop/mapreduce/util/ConfigUtil.loadResources:()V
      19: ldc           #242                // String (?:classes/|lib/).*
      21: invokestatic  #240                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      24: putstatic     #22                 // Field UNPACK_JAR_PATTERN_DEFAULT:Ljava/util/regex/Pattern;
      27: return
}
