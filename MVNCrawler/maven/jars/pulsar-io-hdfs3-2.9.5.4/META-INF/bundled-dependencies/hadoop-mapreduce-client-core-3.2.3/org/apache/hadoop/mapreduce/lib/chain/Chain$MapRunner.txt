Compiled from "Chain.java"
class org.apache.hadoop.mapreduce.lib.chain.Chain$MapRunner<KEYIN, VALUEIN, KEYOUT, VALUEOUT> extends java.lang.Thread {
  private org.apache.hadoop.mapreduce.Mapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT> mapper;

  private org.apache.hadoop.mapreduce.Mapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT>.Context chainContext;

  private org.apache.hadoop.mapreduce.RecordReader<KEYIN, VALUEIN> rr;

  private org.apache.hadoop.mapreduce.RecordWriter<KEYOUT, VALUEOUT> rw;

  final org.apache.hadoop.mapreduce.lib.chain.Chain this$0;

  public org.apache.hadoop.mapreduce.lib.chain.Chain$MapRunner(org.apache.hadoop.mapreduce.Mapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT>, org.apache.hadoop.mapreduce.Mapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT>.Context, org.apache.hadoop.mapreduce.RecordReader<KEYIN, VALUEIN>, org.apache.hadoop.mapreduce.RecordWriter<KEYOUT, VALUEOUT>) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/chain/Chain;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Thread."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lorg/apache/hadoop/mapreduce/Mapper;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field rw:Lorg/apache/hadoop/mapreduce/RecordWriter;
      26: aload_0
      27: aload_3
      28: putfield      #6                  // Field chainContext:Lorg/apache/hadoop/mapreduce/Mapper$Context;
      31: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/chain/Chain;
       4: invokestatic  #7                  // Method org/apache/hadoop/mapreduce/lib/chain/Chain.access$000:(Lorg/apache/hadoop/mapreduce/lib/chain/Chain;)Ljava/lang/Throwable;
       7: ifnull        11
      10: return
      11: aload_0
      12: getfield      #3                  // Field mapper:Lorg/apache/hadoop/mapreduce/Mapper;
      15: aload_0
      16: getfield      #6                  // Field chainContext:Lorg/apache/hadoop/mapreduce/Mapper$Context;
      19: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/Mapper.run:(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
      22: aload_0
      23: getfield      #4                  // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
      26: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/RecordReader.close:()V
      29: aload_0
      30: getfield      #5                  // Field rw:Lorg/apache/hadoop/mapreduce/RecordWriter;
      33: aload_0
      34: getfield      #6                  // Field chainContext:Lorg/apache/hadoop/mapreduce/Mapper$Context;
      37: invokevirtual #10                 // Method org/apache/hadoop/mapreduce/RecordWriter.close:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
      40: goto          62
      43: astore_1
      44: aload_0
      45: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/chain/Chain;
      48: aload_1
      49: invokestatic  #12                 // Method org/apache/hadoop/mapreduce/lib/chain/Chain.access$100:(Lorg/apache/hadoop/mapreduce/lib/chain/Chain;Ljava/lang/Throwable;)Z
      52: ifeq          62
      55: aload_0
      56: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/chain/Chain;
      59: invokestatic  #13                 // Method org/apache/hadoop/mapreduce/lib/chain/Chain.access$200:(Lorg/apache/hadoop/mapreduce/lib/chain/Chain;)V
      62: return
    Exception table:
       from    to  target type
          11    40    43   Class java/lang/Throwable
}
