Compiled from "UncompressedSplitLineReader.java"
public class org.apache.hadoop.mapreduce.lib.input.UncompressedSplitLineReader extends org.apache.hadoop.mapreduce.lib.input.SplitLineReader {
  private boolean needAdditionalRecord;

  private long splitLength;

  private long totalBytesRead;

  private boolean finished;

  private boolean usingCRLF;

  public org.apache.hadoop.mapreduce.lib.input.UncompressedSplitLineReader(org.apache.hadoop.fs.FSDataInputStream, org.apache.hadoop.conf.Configuration, byte[], long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/apache/hadoop/mapreduce/lib/input/SplitLineReader."<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/conf/Configuration;[B)V
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field needAdditionalRecord:Z
      12: aload_0
      13: lconst_0
      14: putfield      #3                  // Field totalBytesRead:J
      17: aload_0
      18: iconst_0
      19: putfield      #4                  // Field finished:Z
      22: aload_0
      23: lload         4
      25: putfield      #5                  // Field splitLength:J
      28: aload_0
      29: aload_3
      30: ifnonnull     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: putfield      #6                  // Field usingCRLF:Z
      41: return

  protected int fillBuffer(java.io.InputStream, byte[], boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: arraylength
       2: istore        4
       4: aload_0
       5: getfield      #3                  // Field totalBytesRead:J
       8: aload_0
       9: getfield      #5                  // Field splitLength:J
      12: lcmp
      13: ifge          41
      16: aload_0
      17: getfield      #5                  // Field splitLength:J
      20: aload_0
      21: getfield      #3                  // Field totalBytesRead:J
      24: lsub
      25: lstore        5
      27: lload         5
      29: iload         4
      31: i2l
      32: lcmp
      33: ifge          41
      36: lload         5
      38: l2i
      39: istore        4
      41: aload_1
      42: aload_2
      43: iconst_0
      44: iload         4
      46: invokevirtual #7                  // Method java/io/InputStream.read:([BII)I
      49: istore        5
      51: aload_0
      52: getfield      #3                  // Field totalBytesRead:J
      55: aload_0
      56: getfield      #5                  // Field splitLength:J
      59: lcmp
      60: ifne          104
      63: iload_3
      64: ifeq          104
      67: iload         5
      69: ifle          104
      72: aload_0
      73: getfield      #6                  // Field usingCRLF:Z
      76: ifeq          99
      79: aload_0
      80: aload_2
      81: iconst_0
      82: baload
      83: bipush        10
      85: if_icmpeq     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: putfield      #2                  // Field needAdditionalRecord:Z
      96: goto          104
      99: aload_0
     100: iconst_1
     101: putfield      #2                  // Field needAdditionalRecord:Z
     104: iload         5
     106: ifle          121
     109: aload_0
     110: dup
     111: getfield      #3                  // Field totalBytesRead:J
     114: iload         5
     116: i2l
     117: ladd
     118: putfield      #3                  // Field totalBytesRead:J
     121: iload         5
     123: ireturn

  public int readLine(org.apache.hadoop.io.Text, int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #4                  // Field finished:Z
       7: ifne          36
      10: aload_0
      11: getfield      #3                  // Field totalBytesRead:J
      14: aload_0
      15: getfield      #5                  // Field splitLength:J
      18: lcmp
      19: ifle          27
      22: aload_0
      23: iconst_1
      24: putfield      #4                  // Field finished:Z
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokespecial #8                  // Method org/apache/hadoop/mapreduce/lib/input/SplitLineReader.readLine:(Lorg/apache/hadoop/io/Text;II)I
      34: istore        4
      36: iload         4
      38: ireturn

  public boolean needAdditionalRecordAfterSplit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field finished:Z
       4: ifne          18
       7: aload_0
       8: getfield      #2                  // Field needAdditionalRecord:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected void unsetNeedAdditionalRecordAfterSplit();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field needAdditionalRecord:Z
       5: return
}
