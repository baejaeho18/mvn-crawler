Compiled from "MultithreadedMapRunner.java"
public class org.apache.hadoop.mapred.lib.MultithreadedMapRunner<K1, V1, K2, V2> implements org.apache.hadoop.mapred.MapRunnable<K1, V1, K2, V2> {
  private static final org.slf4j.Logger LOG;

  private org.apache.hadoop.mapred.JobConf job;

  private org.apache.hadoop.mapred.Mapper<K1, V1, K2, V2> mapper;

  private java.util.concurrent.ExecutorService executorService;

  private volatile java.io.IOException ioException;

  private volatile java.lang.RuntimeException runtimeException;

  private boolean incrProcCount;

  public org.apache.hadoop.mapred.lib.MultithreadedMapRunner();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  public void configure(org.apache.hadoop.mapred.JobConf);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.NUM_THREADS:Ljava/lang/String;
       4: bipush        10
       6: invokevirtual #7                  // Method org/apache/hadoop/mapred/JobConf.getInt:(Ljava/lang/String;I)I
       9: istore_2
      10: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      13: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      18: ifeq          65
      21: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      24: new           #10                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #12                 // String Configuring jobConf
      33: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #14                 // Method org/apache/hadoop/mapred/JobConf.getJobName:()Ljava/lang/String;
      40: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #15                 // String  to use
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: iload_2
      49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #17                 // String  threads
      54: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      65: aload_0
      66: aload_1
      67: putfield      #20                 // Field job:Lorg/apache/hadoop/mapred/JobConf;
      70: aload_0
      71: aload_0
      72: getfield      #20                 // Field job:Lorg/apache/hadoop/mapred/JobConf;
      75: invokestatic  #21                 // Method org/apache/hadoop/mapred/SkipBadRecords.getMapperMaxSkipRecords:(Lorg/apache/hadoop/conf/Configuration;)J
      78: lconst_0
      79: lcmp
      80: ifle          97
      83: aload_0
      84: getfield      #20                 // Field job:Lorg/apache/hadoop/mapred/JobConf;
      87: invokestatic  #22                 // Method org/apache/hadoop/mapred/SkipBadRecords.getAutoIncrMapperProcCount:(Lorg/apache/hadoop/conf/Configuration;)Z
      90: ifeq          97
      93: iconst_1
      94: goto          98
      97: iconst_0
      98: putfield      #3                  // Field incrProcCount:Z
     101: aload_0
     102: aload_1
     103: invokevirtual #23                 // Method org/apache/hadoop/mapred/JobConf.getMapperClass:()Ljava/lang/Class;
     106: aload_1
     107: invokestatic  #24                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
     110: checkcast     #25                 // class org/apache/hadoop/mapred/Mapper
     113: putfield      #4                  // Field mapper:Lorg/apache/hadoop/mapred/Mapper;
     116: aload_0
     117: new           #26                 // class org/apache/hadoop/util/concurrent/HadoopThreadPoolExecutor
     120: dup
     121: iload_2
     122: iload_2
     123: lconst_0
     124: getstatic     #27                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     127: new           #28                 // class org/apache/hadoop/mapred/lib/MultithreadedMapRunner$BlockingArrayQueue
     130: dup
     131: iload_2
     132: invokespecial #29                 // Method org/apache/hadoop/mapred/lib/MultithreadedMapRunner$BlockingArrayQueue."<init>":(I)V
     135: invokespecial #30                 // Method org/apache/hadoop/util/concurrent/HadoopThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
     138: putfield      #31                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     141: return

  private void checkForExceptionsFromProcessingThreads() throws java.io.IOException, java.lang.RuntimeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field ioException:Ljava/io/IOException;
       4: ifnull        12
       7: aload_0
       8: getfield      #2                  // Field ioException:Ljava/io/IOException;
      11: athrow
      12: aload_0
      13: getfield      #1                  // Field runtimeException:Ljava/lang/RuntimeException;
      16: ifnull        24
      19: aload_0
      20: getfield      #1                  // Field runtimeException:Ljava/lang/RuntimeException;
      23: athrow
      24: return

  public void run(org.apache.hadoop.mapred.RecordReader<K1, V1>, org.apache.hadoop.mapred.OutputCollector<K2, V2>, org.apache.hadoop.mapred.Reporter) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod org/apache/hadoop/mapred/RecordReader.createKey:()Ljava/lang/Object;
       6: astore        4
       8: aload_1
       9: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/mapred/RecordReader.createValue:()Ljava/lang/Object;
      14: astore        5
      16: aload_1
      17: aload         4
      19: aload         5
      21: invokeinterface #34,  3           // InterfaceMethod org/apache/hadoop/mapred/RecordReader.next:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ifeq          75
      29: aload_0
      30: getfield      #31                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      33: new           #35                 // class org/apache/hadoop/mapred/lib/MultithreadedMapRunner$MapperInvokeRunable
      36: dup
      37: aload_0
      38: aload         4
      40: aload         5
      42: aload_2
      43: aload_3
      44: invokespecial #36                 // Method org/apache/hadoop/mapred/lib/MultithreadedMapRunner$MapperInvokeRunable."<init>":(Lorg/apache/hadoop/mapred/lib/MultithreadedMapRunner;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
      47: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      52: aload_0
      53: invokespecial #38                 // Method checkForExceptionsFromProcessingThreads:()V
      56: aload_1
      57: invokeinterface #32,  1           // InterfaceMethod org/apache/hadoop/mapred/RecordReader.createKey:()Ljava/lang/Object;
      62: astore        4
      64: aload_1
      65: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/mapred/RecordReader.createValue:()Ljava/lang/Object;
      70: astore        5
      72: goto          16
      75: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      78: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      83: ifeq          119
      86: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      89: new           #10                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #39                 // String Finished dispatching all Mappper.map calls, job
      98: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: getfield      #20                 // Field job:Lorg/apache/hadoop/mapred/JobConf;
     105: invokevirtual #14                 // Method org/apache/hadoop/mapred/JobConf.getJobName:()Ljava/lang/String;
     108: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     119: aload_0
     120: getfield      #31                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     123: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
     128: aload_0
     129: getfield      #31                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     132: ldc2_w        #41                 // long 100l
     135: getstatic     #27                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     138: invokeinterface #43,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     143: ifne          197
     146: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     149: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     154: ifeq          190
     157: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
     160: new           #10                 // class java/lang/StringBuilder
     163: dup
     164: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     167: ldc           #44                 // String Awaiting all running Mappper.map calls to finish, job
     169: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_0
     173: getfield      #20                 // Field job:Lorg/apache/hadoop/mapred/JobConf;
     176: invokevirtual #14                 // Method org/apache/hadoop/mapred/JobConf.getJobName:()Ljava/lang/String;
     179: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     190: aload_0
     191: invokespecial #38                 // Method checkForExceptionsFromProcessingThreads:()V
     194: goto          128
     197: aload_0
     198: invokespecial #38                 // Method checkForExceptionsFromProcessingThreads:()V
     201: goto          231
     204: astore        6
     206: aload_0
     207: getfield      #31                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     210: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     215: pop
     216: aload         6
     218: athrow
     219: astore        6
     221: new           #48                 // class java/lang/RuntimeException
     224: dup
     225: aload         6
     227: invokespecial #49                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     230: athrow
     231: aload_0
     232: getfield      #4                  // Field mapper:Lorg/apache/hadoop/mapred/Mapper;
     235: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/mapred/Mapper.close:()V
     240: goto          257
     243: astore        7
     245: aload_0
     246: getfield      #4                  // Field mapper:Lorg/apache/hadoop/mapred/Mapper;
     249: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/mapred/Mapper.close:()V
     254: aload         7
     256: athrow
     257: return
    Exception table:
       from    to  target type
         128   201   204   Class java/io/IOException
         128   201   219   Class java/lang/InterruptedException
           0   231   243   any
         243   245   243   any

  static org.apache.hadoop.mapred.Mapper access$000(org.apache.hadoop.mapred.lib.MultithreadedMapRunner);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mapper:Lorg/apache/hadoop/mapred/Mapper;
       4: areturn

  static boolean access$100(org.apache.hadoop.mapred.lib.MultithreadedMapRunner);
    Code:
       0: aload_0
       1: getfield      #3                  // Field incrProcCount:Z
       4: ireturn

  static java.io.IOException access$200(org.apache.hadoop.mapred.lib.MultithreadedMapRunner);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ioException:Ljava/io/IOException;
       4: areturn

  static java.io.IOException access$202(org.apache.hadoop.mapred.lib.MultithreadedMapRunner, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field ioException:Ljava/io/IOException;
       6: areturn

  static java.lang.RuntimeException access$300(org.apache.hadoop.mapred.lib.MultithreadedMapRunner);
    Code:
       0: aload_0
       1: getfield      #1                  // Field runtimeException:Ljava/lang/RuntimeException;
       4: areturn

  static java.lang.RuntimeException access$302(org.apache.hadoop.mapred.lib.MultithreadedMapRunner, java.lang.RuntimeException);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field runtimeException:Ljava/lang/RuntimeException;
       6: areturn

  static {};
    Code:
       0: ldc           #51                 // class org/apache/hadoop/mapred/lib/MultithreadedMapRunner
       2: invokevirtual #52                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #53                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       8: putstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      11: return
}
