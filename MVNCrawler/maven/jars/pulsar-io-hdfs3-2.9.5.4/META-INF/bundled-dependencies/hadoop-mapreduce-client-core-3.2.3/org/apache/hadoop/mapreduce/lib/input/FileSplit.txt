Compiled from "FileSplit.java"
public class org.apache.hadoop.mapreduce.lib.input.FileSplit extends org.apache.hadoop.mapreduce.InputSplit implements org.apache.hadoop.io.Writable {
  private org.apache.hadoop.fs.Path file;

  private long start;

  private long length;

  private java.lang.String[] hosts;

  private org.apache.hadoop.mapred.SplitLocationInfo[] hostInfos;

  public org.apache.hadoop.mapreduce.lib.input.FileSplit();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/InputSplit."<init>":()V
       4: return

  public org.apache.hadoop.mapreduce.lib.input.FileSplit(org.apache.hadoop.fs.Path, long, long, java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/InputSplit."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field start:J
      14: aload_0
      15: lload         4
      17: putfield      #4                  // Field length:J
      20: aload_0
      21: aload         6
      23: putfield      #5                  // Field hosts:[Ljava/lang/String;
      26: return

  public org.apache.hadoop.mapreduce.lib.input.FileSplit(org.apache.hadoop.fs.Path, long, long, java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: aload         6
       7: invokespecial #6                  // Method "<init>":(Lorg/apache/hadoop/fs/Path;JJ[Ljava/lang/String;)V
      10: aload_0
      11: aload         6
      13: arraylength
      14: anewarray     #7                  // class org/apache/hadoop/mapred/SplitLocationInfo
      17: putfield      #8                  // Field hostInfos:[Lorg/apache/hadoop/mapred/SplitLocationInfo;
      20: iconst_0
      21: istore        8
      23: iload         8
      25: aload         6
      27: arraylength
      28: if_icmpge     112
      31: iconst_0
      32: istore        9
      34: aload         7
      36: astore        10
      38: aload         10
      40: arraylength
      41: istore        11
      43: iconst_0
      44: istore        12
      46: iload         12
      48: iload         11
      50: if_icmpge     85
      53: aload         10
      55: iload         12
      57: aaload
      58: astore        13
      60: aload         13
      62: aload         6
      64: iload         8
      66: aaload
      67: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          79
      73: iconst_1
      74: istore        9
      76: goto          85
      79: iinc          12, 1
      82: goto          46
      85: aload_0
      86: getfield      #8                  // Field hostInfos:[Lorg/apache/hadoop/mapred/SplitLocationInfo;
      89: iload         8
      91: new           #7                  // class org/apache/hadoop/mapred/SplitLocationInfo
      94: dup
      95: aload         6
      97: iload         8
      99: aaload
     100: iload         9
     102: invokespecial #10                 // Method org/apache/hadoop/mapred/SplitLocationInfo."<init>":(Ljava/lang/String;Z)V
     105: aastore
     106: iinc          8, 1
     109: goto          23
     112: return

  public org.apache.hadoop.fs.Path getPath();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public long getStart();
    Code:
       0: aload_0
       1: getfield      #3                  // Field start:J
       4: lreturn

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:J
       4: lreturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
      11: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #14                 // String :
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field start:J
      23: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #17                 // String +
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #4                  // Field length:J
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      38: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       5: invokevirtual #19                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       8: invokestatic  #20                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      11: pop
      12: aload_1
      13: aload_0
      14: getfield      #3                  // Field start:J
      17: invokeinterface #21,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      22: aload_1
      23: aload_0
      24: getfield      #4                  // Field length:J
      27: invokeinterface #21,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      32: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #22                 // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_1
       6: invokestatic  #23                 // Method org/apache/hadoop/io/Text.readString:(Ljava/io/DataInput;)Ljava/lang/String;
       9: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      12: putfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
      15: aload_0
      16: aload_1
      17: invokeinterface #25,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      22: putfield      #3                  // Field start:J
      25: aload_0
      26: aload_1
      27: invokeinterface #25,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      32: putfield      #4                  // Field length:J
      35: aload_0
      36: aconst_null
      37: putfield      #5                  // Field hosts:[Ljava/lang/String;
      40: return

  public java.lang.String[] getLocations() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field hosts:[Ljava/lang/String;
       4: ifnonnull     12
       7: iconst_0
       8: anewarray     #26                 // class java/lang/String
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field hosts:[Ljava/lang/String;
      16: areturn

  public org.apache.hadoop.mapred.SplitLocationInfo[] getLocationInfo() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field hostInfos:[Lorg/apache/hadoop/mapred/SplitLocationInfo;
       4: areturn
}
