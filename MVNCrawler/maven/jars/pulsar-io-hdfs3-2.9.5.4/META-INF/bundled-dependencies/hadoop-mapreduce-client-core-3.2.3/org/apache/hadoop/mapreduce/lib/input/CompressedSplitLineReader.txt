Compiled from "CompressedSplitLineReader.java"
public class org.apache.hadoop.mapreduce.lib.input.CompressedSplitLineReader extends org.apache.hadoop.mapreduce.lib.input.SplitLineReader {
  org.apache.hadoop.io.compress.SplitCompressionInputStream scin;

  private boolean usingCRLF;

  private boolean needAdditionalRecord;

  private boolean finished;

  public org.apache.hadoop.mapreduce.lib.input.CompressedSplitLineReader(org.apache.hadoop.io.compress.SplitCompressionInputStream, org.apache.hadoop.conf.Configuration, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/apache/hadoop/mapreduce/lib/input/SplitLineReader."<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/conf/Configuration;[B)V
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field needAdditionalRecord:Z
      12: aload_0
      13: iconst_0
      14: putfield      #3                  // Field finished:Z
      17: aload_0
      18: aload_1
      19: putfield      #4                  // Field scin:Lorg/apache/hadoop/io/compress/SplitCompressionInputStream;
      22: aload_0
      23: aload_3
      24: ifnonnull     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: putfield      #5                  // Field usingCRLF:Z
      35: return

  protected int fillBuffer(java.io.InputStream, byte[], boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #6                  // Method java/io/InputStream.read:([B)I
       5: istore        4
       7: iload_3
       8: ifeq          48
      11: iload         4
      13: ifle          48
      16: aload_0
      17: getfield      #5                  // Field usingCRLF:Z
      20: ifeq          43
      23: aload_0
      24: aload_2
      25: iconst_0
      26: baload
      27: bipush        10
      29: if_icmpeq     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: putfield      #2                  // Field needAdditionalRecord:Z
      40: goto          48
      43: aload_0
      44: iconst_1
      45: putfield      #2                  // Field needAdditionalRecord:Z
      48: iload         4
      50: ireturn

  public int readLine(org.apache.hadoop.io.Text, int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #3                  // Field finished:Z
       7: ifne          42
      10: aload_0
      11: getfield      #4                  // Field scin:Lorg/apache/hadoop/io/compress/SplitCompressionInputStream;
      14: invokevirtual #7                  // Method org/apache/hadoop/io/compress/SplitCompressionInputStream.getPos:()J
      17: aload_0
      18: getfield      #4                  // Field scin:Lorg/apache/hadoop/io/compress/SplitCompressionInputStream;
      21: invokevirtual #8                  // Method org/apache/hadoop/io/compress/SplitCompressionInputStream.getAdjustedEnd:()J
      24: lcmp
      25: ifle          33
      28: aload_0
      29: iconst_1
      30: putfield      #3                  // Field finished:Z
      33: aload_0
      34: aload_1
      35: iload_2
      36: iload_3
      37: invokespecial #9                  // Method org/apache/hadoop/mapreduce/lib/input/SplitLineReader.readLine:(Lorg/apache/hadoop/io/Text;II)I
      40: istore        4
      42: iload         4
      44: ireturn

  public boolean needAdditionalRecordAfterSplit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field finished:Z
       4: ifne          18
       7: aload_0
       8: getfield      #2                  // Field needAdditionalRecord:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected void unsetNeedAdditionalRecordAfterSplit();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field needAdditionalRecord:Z
       5: return
}
