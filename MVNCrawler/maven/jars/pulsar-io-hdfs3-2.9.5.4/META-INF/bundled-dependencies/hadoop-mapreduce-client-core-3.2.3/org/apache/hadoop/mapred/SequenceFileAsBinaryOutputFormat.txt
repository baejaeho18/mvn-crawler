Compiled from "SequenceFileAsBinaryOutputFormat.java"
public class org.apache.hadoop.mapred.SequenceFileAsBinaryOutputFormat extends org.apache.hadoop.mapred.SequenceFileOutputFormat<org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable> {
  public org.apache.hadoop.mapred.SequenceFileAsBinaryOutputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapred/SequenceFileOutputFormat."<init>":()V
       4: return

  public static void setSequenceFileOutputKeyClass(org.apache.hadoop.mapred.JobConf, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat.KEY_CLASS:Ljava/lang/String;
       4: aload_1
       5: ldc           #3                  // class java/lang/Object
       7: invokevirtual #4                  // Method org/apache/hadoop/mapred/JobConf.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      10: return

  public static void setSequenceFileOutputValueClass(org.apache.hadoop.mapred.JobConf, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getstatic     #5                  // Field org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat.VALUE_CLASS:Ljava/lang/String;
       4: aload_1
       5: ldc           #3                  // class java/lang/Object
       7: invokevirtual #4                  // Method org/apache/hadoop/mapred/JobConf.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      10: return

  public static java.lang.Class<? extends org.apache.hadoop.io.WritableComparable> getSequenceFileOutputKeyClass(org.apache.hadoop.mapred.JobConf);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat.KEY_CLASS:Ljava/lang/String;
       4: aload_0
       5: invokevirtual #6                  // Method org/apache/hadoop/mapred/JobConf.getOutputKeyClass:()Ljava/lang/Class;
       8: ldc           #7                  // class org/apache/hadoop/io/WritableComparable
      10: invokevirtual #8                  // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      13: ldc           #7                  // class org/apache/hadoop/io/WritableComparable
      15: invokevirtual #9                  // Method org/apache/hadoop/mapred/JobConf.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      18: areturn

  public static java.lang.Class<? extends org.apache.hadoop.io.Writable> getSequenceFileOutputValueClass(org.apache.hadoop.mapred.JobConf);
    Code:
       0: aload_0
       1: getstatic     #5                  // Field org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat.VALUE_CLASS:Ljava/lang/String;
       4: aload_0
       5: invokevirtual #10                 // Method org/apache/hadoop/mapred/JobConf.getOutputValueClass:()Ljava/lang/Class;
       8: ldc           #11                 // class org/apache/hadoop/io/Writable
      10: invokevirtual #8                  // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      13: ldc           #11                 // class org/apache/hadoop/io/Writable
      15: invokevirtual #9                  // Method org/apache/hadoop/mapred/JobConf.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      18: areturn

  public org.apache.hadoop.mapred.RecordWriter<org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable> getRecordWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.mapred.JobConf, java.lang.String, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_3
       2: invokestatic  #12                 // Method org/apache/hadoop/mapred/FileOutputFormat.getTaskOutputPath:(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       5: astore        5
       7: aload         5
       9: aload_2
      10: invokevirtual #13                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      13: astore        6
      15: aconst_null
      16: astore        7
      18: getstatic     #14                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.NONE:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      21: astore        8
      23: aload_2
      24: invokestatic  #15                 // Method getCompressOutput:(Lorg/apache/hadoop/mapred/JobConf;)Z
      27: ifeq          55
      30: aload_2
      31: invokestatic  #16                 // Method getOutputCompressionType:(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      34: astore        8
      36: aload_2
      37: ldc           #17                 // class org/apache/hadoop/io/compress/DefaultCodec
      39: invokestatic  #18                 // Method getOutputCompressorClass:(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)Ljava/lang/Class;
      42: astore        9
      44: aload         9
      46: aload_2
      47: invokestatic  #19                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      50: checkcast     #20                 // class org/apache/hadoop/io/compress/CompressionCodec
      53: astore        7
      55: aload         6
      57: aload_2
      58: aload         5
      60: aload_2
      61: invokestatic  #21                 // Method getSequenceFileOutputKeyClass:(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/Class;
      64: aload_2
      65: invokestatic  #22                 // Method getSequenceFileOutputValueClass:(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/Class;
      68: aload         8
      70: aload         7
      72: aload         4
      74: invokestatic  #23                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      77: astore        9
      79: new           #24                 // class org/apache/hadoop/mapred/SequenceFileAsBinaryOutputFormat$1
      82: dup
      83: aload_0
      84: aload         9
      86: invokespecial #25                 // Method org/apache/hadoop/mapred/SequenceFileAsBinaryOutputFormat$1."<init>":(Lorg/apache/hadoop/mapred/SequenceFileAsBinaryOutputFormat;Lorg/apache/hadoop/io/SequenceFile$Writer;)V
      89: areturn

  public void checkOutputSpecs(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.mapred.JobConf) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #26                 // Method org/apache/hadoop/mapred/SequenceFileOutputFormat.checkOutputSpecs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;)V
       6: aload_2
       7: invokestatic  #15                 // Method getCompressOutput:(Lorg/apache/hadoop/mapred/JobConf;)Z
      10: ifeq          33
      13: aload_2
      14: invokestatic  #16                 // Method getOutputCompressionType:(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      17: getstatic     #27                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.RECORD:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      20: if_acmpne     33
      23: new           #28                 // class org/apache/hadoop/mapred/InvalidJobConfException
      26: dup
      27: ldc           #29                 // String SequenceFileAsBinaryOutputFormat doesn\'t support Record Compression
      29: invokespecial #30                 // Method org/apache/hadoop/mapred/InvalidJobConfException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: return
}
