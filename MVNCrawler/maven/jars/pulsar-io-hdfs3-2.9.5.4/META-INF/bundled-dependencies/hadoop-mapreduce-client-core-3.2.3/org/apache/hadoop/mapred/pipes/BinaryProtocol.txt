Compiled from "BinaryProtocol.java"
class org.apache.hadoop.mapred.pipes.BinaryProtocol<K1 extends org.apache.hadoop.io.WritableComparable, V1 extends org.apache.hadoop.io.Writable, K2 extends org.apache.hadoop.io.WritableComparable, V2 extends org.apache.hadoop.io.Writable> implements org.apache.hadoop.mapred.pipes.DownwardProtocol<K1, V1> {
  public static final int CURRENT_PROTOCOL_VERSION;

  private static final int BUFFER_SIZE;

  private java.io.DataOutputStream stream;

  private org.apache.hadoop.io.DataOutputBuffer buffer;

  private static final org.slf4j.Logger LOG;

  private org.apache.hadoop.mapred.pipes.BinaryProtocol$UplinkReaderThread uplink;

  public org.apache.hadoop.mapred.pipes.BinaryProtocol(java.net.Socket, org.apache.hadoop.mapred.pipes.UpwardProtocol<K2, V2>, K2, V2, org.apache.hadoop.mapred.JobConf) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/apache/hadoop/io/DataOutputBuffer
       8: dup
       9: invokespecial #4                  // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      12: putfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      15: aload_1
      16: invokevirtual #6                  // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      19: astore        6
      21: aload         5
      23: invokestatic  #7                  // Method org/apache/hadoop/mapred/pipes/Submitter.getKeepCommandFile:(Lorg/apache/hadoop/mapred/JobConf;)Z
      26: ifeq          42
      29: new           #8                  // class org/apache/hadoop/mapred/pipes/BinaryProtocol$TeeOutputStream
      32: dup
      33: ldc           #9                  // String downlink.data
      35: aload         6
      37: invokespecial #10                 // Method org/apache/hadoop/mapred/pipes/BinaryProtocol$TeeOutputStream."<init>":(Ljava/lang/String;Ljava/io/OutputStream;)V
      40: astore        6
      42: aload_0
      43: new           #11                 // class java/io/DataOutputStream
      46: dup
      47: new           #12                 // class java/io/BufferedOutputStream
      50: dup
      51: aload         6
      53: ldc           #14                 // int 131072
      55: invokespecial #15                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      58: invokespecial #16                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      61: putfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      64: aload_0
      65: new           #18                 // class org/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread
      68: dup
      69: aload_1
      70: invokevirtual #19                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      73: aload_2
      74: aload_3
      75: aload         4
      77: invokespecial #20                 // Method org/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread."<init>":(Ljava/io/InputStream;Lorg/apache/hadoop/mapred/pipes/UpwardProtocol;Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)V
      80: putfield      #21                 // Field uplink:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread;
      83: aload_0
      84: getfield      #21                 // Field uplink:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread;
      87: ldc           #22                 // String pipe-uplink-handler
      89: invokevirtual #23                 // Method org/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread.setName:(Ljava/lang/String;)V
      92: aload_0
      93: getfield      #21                 // Field uplink:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread;
      96: invokevirtual #24                 // Method org/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread.start:()V
      99: return

  public void close() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #25                 // String closing connection
       5: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      14: invokevirtual #27                 // Method java/io/DataOutputStream.close:()V
      17: aload_0
      18: getfield      #21                 // Field uplink:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread;
      21: invokevirtual #28                 // Method org/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread.closeConnection:()V
      24: aload_0
      25: getfield      #21                 // Field uplink:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread;
      28: invokevirtual #29                 // Method org/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread.interrupt:()V
      31: aload_0
      32: getfield      #21                 // Field uplink:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread;
      35: invokevirtual #30                 // Method org/apache/hadoop/mapred/pipes/BinaryProtocol$UplinkReaderThread.join:()V
      38: return

  public void authenticate(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: new           #31                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #33                 // String Sending AUTHENTICATION_REQ, digest=
      12: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #35                 // String , challenge=
      21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_2
      25: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      36: aload_0
      37: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      40: getstatic     #37                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.AUTHENTICATION_REQ:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
      43: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      46: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      49: aload_0
      50: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      53: aload_1
      54: invokestatic  #40                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      57: pop
      58: aload_0
      59: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      62: aload_2
      63: invokestatic  #40                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      66: pop
      67: return

  public void start() throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #41                 // String starting downlink
       5: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      14: getstatic     #42                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.START:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
      17: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      20: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      23: aload_0
      24: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      27: iconst_0
      28: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      31: return

  public void setJobConf(org.apache.hadoop.mapred.JobConf) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #43                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.SET_JOB_CONF:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: new           #44                 // class java/util/ArrayList
      16: dup
      17: invokespecial #45                 // Method java/util/ArrayList."<init>":()V
      20: astore_2
      21: aload_1
      22: invokevirtual #46                 // Method org/apache/hadoop/mapred/JobConf.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          77
      35: aload_3
      36: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #49                 // class java/util/Map$Entry
      44: astore        4
      46: aload_2
      47: aload         4
      49: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_2
      61: aload         4
      63: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          26
      77: aload_0
      78: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      81: aload_2
      82: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      87: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      90: aload_2
      91: invokeinterface #54,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      96: astore_3
      97: aload_3
      98: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          130
     106: aload_3
     107: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #55                 // class java/lang/String
     115: astore        4
     117: aload_0
     118: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
     121: aload         4
     123: invokestatic  #40                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
     126: pop
     127: goto          97
     130: return

  public void setInputTypes(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #56                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.SET_INPUT_TYPES:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: aload_0
      14: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      17: aload_1
      18: invokestatic  #40                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      21: pop
      22: aload_0
      23: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      26: aload_2
      27: invokestatic  #40                 // Method org/apache/hadoop/io/Text.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)I
      30: pop
      31: return

  public void runMap(org.apache.hadoop.mapred.InputSplit, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #57                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.RUN_MAP:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: aload_0
      14: aload_1
      15: invokespecial #58                 // Method writeObject:(Lorg/apache/hadoop/io/Writable;)V
      18: aload_0
      19: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      22: iload_2
      23: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      26: aload_0
      27: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      30: iload_3
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      42: return

  public void mapItem(org.apache.hadoop.io.WritableComparable, org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #59                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.MAP_ITEM:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: aload_0
      14: aload_1
      15: invokespecial #58                 // Method writeObject:(Lorg/apache/hadoop/io/Writable;)V
      18: aload_0
      19: aload_2
      20: invokespecial #58                 // Method writeObject:(Lorg/apache/hadoop/io/Writable;)V
      23: return

  public void runReduce(int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #60                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.RUN_REDUCE:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: aload_0
      14: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      17: iload_1
      18: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      21: aload_0
      22: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      25: iload_2
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      37: return

  public void reduceKey(org.apache.hadoop.io.WritableComparable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #61                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.REDUCE_KEY:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: aload_0
      14: aload_1
      15: invokespecial #58                 // Method writeObject:(Lorg/apache/hadoop/io/Writable;)V
      18: return

  public void reduceValue(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #62                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.REDUCE_VALUE:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: aload_0
      14: aload_1
      15: invokespecial #58                 // Method writeObject:(Lorg/apache/hadoop/io/Writable;)V
      18: return

  public void endOfInput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #63                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.CLOSE:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      16: ldc           #64                 // String Sent close command
      18: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      23: return

  public void abort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: getstatic     #65                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.ABORT:Lorg/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType;
       7: getfield      #38                 // Field org/apache/hadoop/mapred/pipes/BinaryProtocol$MessageType.code:I
      10: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      13: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      16: ldc           #66                 // String Sent abort command
      18: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      23: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
       4: invokevirtual #67                 // Method java/io/DataOutputStream.flush:()V
       7: return

  private void writeObject(org.apache.hadoop.io.Writable) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #68                 // class org/apache/hadoop/io/Text
       4: ifeq          41
       7: aload_1
       8: checkcast     #68                 // class org/apache/hadoop/io/Text
      11: astore_2
      12: aload_2
      13: invokevirtual #69                 // Method org/apache/hadoop/io/Text.getLength:()I
      16: istore_3
      17: aload_0
      18: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      21: iload_3
      22: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      25: aload_0
      26: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      29: aload_2
      30: invokevirtual #70                 // Method org/apache/hadoop/io/Text.getBytes:()[B
      33: iconst_0
      34: iload_3
      35: invokevirtual #71                 // Method java/io/DataOutputStream.write:([BII)V
      38: goto          132
      41: aload_1
      42: instanceof    #72                 // class org/apache/hadoop/io/BytesWritable
      45: ifeq          82
      48: aload_1
      49: checkcast     #72                 // class org/apache/hadoop/io/BytesWritable
      52: astore_2
      53: aload_2
      54: invokevirtual #73                 // Method org/apache/hadoop/io/BytesWritable.getLength:()I
      57: istore_3
      58: aload_0
      59: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      62: iload_3
      63: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      66: aload_0
      67: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
      70: aload_2
      71: invokevirtual #74                 // Method org/apache/hadoop/io/BytesWritable.getBytes:()[B
      74: iconst_0
      75: iload_3
      76: invokevirtual #71                 // Method java/io/DataOutputStream.write:([BII)V
      79: goto          132
      82: aload_0
      83: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      86: invokevirtual #75                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
      89: pop
      90: aload_1
      91: aload_0
      92: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      95: invokeinterface #76,  2           // InterfaceMethod org/apache/hadoop/io/Writable.write:(Ljava/io/DataOutput;)V
     100: aload_0
     101: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     104: invokevirtual #77                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     107: istore_2
     108: aload_0
     109: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
     112: iload_2
     113: invokestatic  #39                 // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     116: aload_0
     117: getfield      #17                 // Field stream:Ljava/io/DataOutputStream;
     120: aload_0
     121: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     124: invokevirtual #78                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
     127: iconst_0
     128: iload_2
     129: invokevirtual #71                 // Method java/io/DataOutputStream.write:([BII)V
     132: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #13                 // class org/apache/hadoop/mapred/pipes/BinaryProtocol
       2: invokevirtual #79                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #80                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       8: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      11: return
}
