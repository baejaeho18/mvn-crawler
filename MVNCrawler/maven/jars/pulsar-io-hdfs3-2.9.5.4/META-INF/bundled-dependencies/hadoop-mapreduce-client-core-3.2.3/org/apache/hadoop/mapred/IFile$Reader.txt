Compiled from "IFile.java"
public class org.apache.hadoop.mapred.IFile$Reader<K, V> {
  private static final int DEFAULT_BUFFER_SIZE;

  private static final int MAX_VINT_SIZE;

  private long numRecordsRead;

  private final org.apache.hadoop.mapred.Counters$Counter readRecordsCounter;

  final java.io.InputStream in;

  org.apache.hadoop.io.compress.Decompressor decompressor;

  public long bytesRead;

  protected final long fileLength;

  protected boolean eof;

  final org.apache.hadoop.mapred.IFileInputStream checksumIn;

  protected byte[] buffer;

  protected int bufferSize;

  protected java.io.DataInputStream dataIn;

  protected int recNo;

  protected int currentKeyLength;

  protected int currentValueLength;

  byte[] keyBytes;

  public org.apache.hadoop.mapred.IFile$Reader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.mapred.Counters$Counter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #2                  // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
       7: aload_2
       8: aload_3
       9: invokevirtual #3                  // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      12: invokevirtual #4                  // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      15: aload         4
      17: aload         5
      19: invokespecial #5                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/mapred/Counters$Counter;)V
      22: return

  public org.apache.hadoop.mapred.IFile$Reader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FSDataInputStream, long, org.apache.hadoop.io.compress.CompressionCodec, org.apache.hadoop.mapred.Counters$Counter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #7                  // Field numRecordsRead:J
       9: aload_0
      10: lconst_0
      11: putfield      #8                  // Field bytesRead:J
      14: aload_0
      15: iconst_0
      16: putfield      #9                  // Field eof:Z
      19: aload_0
      20: aconst_null
      21: putfield      #10                 // Field buffer:[B
      24: aload_0
      25: ldc           #12                 // int 131072
      27: putfield      #13                 // Field bufferSize:I
      30: aload_0
      31: iconst_1
      32: putfield      #14                 // Field recNo:I
      35: aload_0
      36: iconst_0
      37: newarray       byte
      39: putfield      #15                 // Field keyBytes:[B
      42: aload_0
      43: aload         6
      45: putfield      #16                 // Field readRecordsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      48: aload_0
      49: new           #17                 // class org/apache/hadoop/mapred/IFileInputStream
      52: dup
      53: aload_2
      54: lload_3
      55: aload_1
      56: invokespecial #18                 // Method org/apache/hadoop/mapred/IFileInputStream."<init>":(Ljava/io/InputStream;JLorg/apache/hadoop/conf/Configuration;)V
      59: putfield      #19                 // Field checksumIn:Lorg/apache/hadoop/mapred/IFileInputStream;
      62: aload         5
      64: ifnull        126
      67: aload_0
      68: aload         5
      70: invokestatic  #20                 // Method org/apache/hadoop/io/compress/CodecPool.getDecompressor:(Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/compress/Decompressor;
      73: putfield      #21                 // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      76: aload_0
      77: getfield      #21                 // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      80: ifnull        105
      83: aload_0
      84: aload         5
      86: aload_0
      87: getfield      #19                 // Field checksumIn:Lorg/apache/hadoop/mapred/IFileInputStream;
      90: aload_0
      91: getfield      #21                 // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      94: invokeinterface #22,  3           // InterfaceMethod org/apache/hadoop/io/compress/CompressionCodec.createInputStream:(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
      99: putfield      #23                 // Field in:Ljava/io/InputStream;
     102: goto          134
     105: invokestatic  #24                 // Method org/apache/hadoop/mapred/IFile.access$000:()Lorg/slf4j/Logger;
     108: ldc           #25                 // String Could not obtain decompressor from CodecPool
     110: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     115: aload_0
     116: aload_0
     117: getfield      #19                 // Field checksumIn:Lorg/apache/hadoop/mapred/IFileInputStream;
     120: putfield      #23                 // Field in:Ljava/io/InputStream;
     123: goto          134
     126: aload_0
     127: aload_0
     128: getfield      #19                 // Field checksumIn:Lorg/apache/hadoop/mapred/IFileInputStream;
     131: putfield      #23                 // Field in:Ljava/io/InputStream;
     134: aload_0
     135: new           #27                 // class java/io/DataInputStream
     138: dup
     139: aload_0
     140: getfield      #23                 // Field in:Ljava/io/InputStream;
     143: invokespecial #28                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     146: putfield      #29                 // Field dataIn:Ljava/io/DataInputStream;
     149: aload_0
     150: lload_3
     151: putfield      #30                 // Field fileLength:J
     154: aload_1
     155: ifnull        170
     158: aload_0
     159: aload_1
     160: ldc           #31                 // String io.file.buffer.size
     162: ldc           #12                 // int 131072
     164: invokevirtual #32                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     167: putfield      #13                 // Field bufferSize:I
     170: return

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #30                 // Field fileLength:J
       4: aload_0
       5: getfield      #19                 // Field checksumIn:Lorg/apache/hadoop/mapred/IFileInputStream;
       8: invokevirtual #33                 // Method org/apache/hadoop/mapred/IFileInputStream.getSize:()J
      11: lsub
      12: lreturn

  public long getPosition() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field checksumIn:Lorg/apache/hadoop/mapred/IFileInputStream;
       4: invokevirtual #34                 // Method org/apache/hadoop/mapred/IFileInputStream.getPosition:()J
       7: lreturn

  private int readData(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     45
       9: aload_0
      10: getfield      #23                 // Field in:Ljava/io/InputStream;
      13: aload_1
      14: iload_2
      15: iload         4
      17: iadd
      18: iload_3
      19: iload         4
      21: isub
      22: invokestatic  #35                 // Method org/apache/hadoop/io/IOUtils.wrappedReadForCompressedData:(Ljava/io/InputStream;[BII)I
      25: istore        5
      27: iload         5
      29: ifge          35
      32: iload         4
      34: ireturn
      35: iload         4
      37: iload         5
      39: iadd
      40: istore        4
      42: goto          3
      45: iload_3
      46: ireturn

  protected boolean positionToNextRecord(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field eof:Z
       4: ifeq          37
       7: new           #36                 // class java/io/EOFException
      10: dup
      11: new           #37                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #39                 // String Completed reading
      20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #8                  // Field bytesRead:J
      27: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      30: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #43                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: aload_1
      39: invokestatic  #44                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      42: putfield      #45                 // Field currentKeyLength:I
      45: aload_0
      46: aload_1
      47: invokestatic  #44                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      50: putfield      #46                 // Field currentValueLength:I
      53: aload_0
      54: dup
      55: getfield      #8                  // Field bytesRead:J
      58: aload_0
      59: getfield      #45                 // Field currentKeyLength:I
      62: i2l
      63: invokestatic  #47                 // Method org/apache/hadoop/io/WritableUtils.getVIntSize:(J)I
      66: aload_0
      67: getfield      #46                 // Field currentValueLength:I
      70: i2l
      71: invokestatic  #47                 // Method org/apache/hadoop/io/WritableUtils.getVIntSize:(J)I
      74: iadd
      75: i2l
      76: ladd
      77: putfield      #8                  // Field bytesRead:J
      80: aload_0
      81: getfield      #45                 // Field currentKeyLength:I
      84: iconst_m1
      85: if_icmpne     103
      88: aload_0
      89: getfield      #46                 // Field currentValueLength:I
      92: iconst_m1
      93: if_icmpne     103
      96: aload_0
      97: iconst_1
      98: putfield      #9                  // Field eof:Z
     101: iconst_0
     102: ireturn
     103: aload_0
     104: getfield      #45                 // Field currentKeyLength:I
     107: ifge          152
     110: new           #48                 // class java/io/IOException
     113: dup
     114: new           #37                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #49                 // String Rec#
     123: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: getfield      #14                 // Field recNo:I
     130: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     133: ldc           #51                 // String : Negative key-length:
     135: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #45                 // Field currentKeyLength:I
     142: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #52                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: aload_0
     153: getfield      #46                 // Field currentValueLength:I
     156: ifge          201
     159: new           #48                 // class java/io/IOException
     162: dup
     163: new           #37                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     170: ldc           #49                 // String Rec#
     172: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload_0
     176: getfield      #14                 // Field recNo:I
     179: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     182: ldc           #53                 // String : Negative value-length:
     184: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: aload_0
     188: getfield      #46                 // Field currentValueLength:I
     191: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     194: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     197: invokespecial #52                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     200: athrow
     201: iconst_1
     202: ireturn

  public boolean nextRawKey(org.apache.hadoop.io.DataInputBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #29                 // Field dataIn:Ljava/io/DataInputStream;
       5: invokevirtual #54                 // Method positionToNextRecord:(Ljava/io/DataInput;)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #15                 // Field keyBytes:[B
      17: arraylength
      18: aload_0
      19: getfield      #45                 // Field currentKeyLength:I
      22: if_icmpge     37
      25: aload_0
      26: aload_0
      27: getfield      #45                 // Field currentKeyLength:I
      30: iconst_1
      31: ishl
      32: newarray       byte
      34: putfield      #15                 // Field keyBytes:[B
      37: aload_0
      38: aload_0
      39: getfield      #15                 // Field keyBytes:[B
      42: iconst_0
      43: aload_0
      44: getfield      #45                 // Field currentKeyLength:I
      47: invokespecial #55                 // Method readData:([BII)I
      50: istore_2
      51: iload_2
      52: aload_0
      53: getfield      #45                 // Field currentKeyLength:I
      56: if_icmpeq     98
      59: new           #48                 // class java/io/IOException
      62: dup
      63: new           #37                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #56                 // String Asked for
      72: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: getfield      #45                 // Field currentKeyLength:I
      79: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: ldc           #57                 // String  Got:
      84: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: iload_2
      88: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #52                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_1
      99: aload_0
     100: getfield      #15                 // Field keyBytes:[B
     103: aload_0
     104: getfield      #45                 // Field currentKeyLength:I
     107: invokevirtual #58                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
     110: aload_0
     111: dup
     112: getfield      #8                  // Field bytesRead:J
     115: aload_0
     116: getfield      #45                 // Field currentKeyLength:I
     119: i2l
     120: ladd
     121: putfield      #8                  // Field bytesRead:J
     124: iconst_1
     125: ireturn

  public void nextRawValue(org.apache.hadoop.io.DataInputBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method org/apache/hadoop/io/DataInputBuffer.getData:()[B
       4: arraylength
       5: aload_0
       6: getfield      #46                 // Field currentValueLength:I
       9: if_icmpge     23
      12: aload_0
      13: getfield      #46                 // Field currentValueLength:I
      16: iconst_1
      17: ishl
      18: newarray       byte
      20: goto          27
      23: aload_1
      24: invokevirtual #59                 // Method org/apache/hadoop/io/DataInputBuffer.getData:()[B
      27: astore_2
      28: aload_0
      29: aload_2
      30: iconst_0
      31: aload_0
      32: getfield      #46                 // Field currentValueLength:I
      35: invokespecial #55                 // Method readData:([BII)I
      38: istore_3
      39: iload_3
      40: aload_0
      41: getfield      #46                 // Field currentValueLength:I
      44: if_icmpeq     86
      47: new           #48                 // class java/io/IOException
      50: dup
      51: new           #37                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #56                 // String Asked for
      60: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #46                 // Field currentValueLength:I
      67: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: ldc           #57                 // String  Got:
      72: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: iload_3
      76: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #52                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: aload_1
      87: aload_2
      88: aload_0
      89: getfield      #46                 // Field currentValueLength:I
      92: invokevirtual #58                 // Method org/apache/hadoop/io/DataInputBuffer.reset:([BI)V
      95: aload_0
      96: dup
      97: getfield      #8                  // Field bytesRead:J
     100: aload_0
     101: getfield      #46                 // Field currentValueLength:I
     104: i2l
     105: ladd
     106: putfield      #8                  // Field bytesRead:J
     109: aload_0
     110: dup
     111: getfield      #14                 // Field recNo:I
     114: iconst_1
     115: iadd
     116: putfield      #14                 // Field recNo:I
     119: aload_0
     120: dup
     121: getfield      #7                  // Field numRecordsRead:J
     124: lconst_1
     125: ladd
     126: putfield      #7                  // Field numRecordsRead:J
     129: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field in:Ljava/io/InputStream;
       4: invokevirtual #60                 // Method java/io/InputStream.close:()V
       7: aload_0
       8: aconst_null
       9: putfield      #29                 // Field dataIn:Ljava/io/DataInputStream;
      12: aload_0
      13: aconst_null
      14: putfield      #10                 // Field buffer:[B
      17: aload_0
      18: getfield      #16                 // Field readRecordsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      21: ifnull        35
      24: aload_0
      25: getfield      #16                 // Field readRecordsCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      28: aload_0
      29: getfield      #7                  // Field numRecordsRead:J
      32: invokevirtual #61                 // Method org/apache/hadoop/mapred/Counters$Counter.increment:(J)V
      35: aload_0
      36: getfield      #21                 // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      39: ifnull        63
      42: aload_0
      43: getfield      #21                 // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      46: invokeinterface #62,  1           // InterfaceMethod org/apache/hadoop/io/compress/Decompressor.reset:()V
      51: aload_0
      52: getfield      #21                 // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      55: invokestatic  #63                 // Method org/apache/hadoop/io/compress/CodecPool.returnDecompressor:(Lorg/apache/hadoop/io/compress/Decompressor;)V
      58: aload_0
      59: aconst_null
      60: putfield      #21                 // Field decompressor:Lorg/apache/hadoop/io/compress/Decompressor;
      63: return

  public void reset(int);
    Code:
       0: return

  public void disableChecksumValidation();
    Code:
       0: aload_0
       1: getfield      #19                 // Field checksumIn:Lorg/apache/hadoop/mapred/IFileInputStream;
       4: invokevirtual #64                 // Method org/apache/hadoop/mapred/IFileInputStream.disableChecksumValidation:()V
       7: return
}
