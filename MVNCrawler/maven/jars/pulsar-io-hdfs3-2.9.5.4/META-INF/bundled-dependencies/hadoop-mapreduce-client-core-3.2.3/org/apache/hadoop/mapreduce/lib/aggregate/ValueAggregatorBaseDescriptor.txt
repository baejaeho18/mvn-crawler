Compiled from "ValueAggregatorBaseDescriptor.java"
public class org.apache.hadoop.mapreduce.lib.aggregate.ValueAggregatorBaseDescriptor implements org.apache.hadoop.mapreduce.lib.aggregate.ValueAggregatorDescriptor {
  public static final java.lang.String UNIQ_VALUE_COUNT;

  public static final java.lang.String LONG_VALUE_SUM;

  public static final java.lang.String DOUBLE_VALUE_SUM;

  public static final java.lang.String VALUE_HISTOGRAM;

  public static final java.lang.String LONG_VALUE_MAX;

  public static final java.lang.String LONG_VALUE_MIN;

  public static final java.lang.String STRING_VALUE_MAX;

  public static final java.lang.String STRING_VALUE_MIN;

  public java.lang.String inputFile;

  public org.apache.hadoop.mapreduce.lib.aggregate.ValueAggregatorBaseDescriptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field inputFile:Ljava/lang/String;
       9: return

  public static java.util.Map$Entry<org.apache.hadoop.io.Text, org.apache.hadoop.io.Text> generateEntry(java.lang.String, java.lang.String, org.apache.hadoop.io.Text);
    Code:
       0: new           #3                  // class org/apache/hadoop/io/Text
       3: dup
       4: new           #4                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #8                  // String :
      17: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #10                 // Method org/apache/hadoop/io/Text."<init>":(Ljava/lang/String;)V
      30: astore_3
      31: new           #11                 // class org/apache/hadoop/mapreduce/lib/aggregate/ValueAggregatorBaseDescriptor$MyEntry
      34: dup
      35: aload_3
      36: aload_2
      37: invokespecial #12                 // Method org/apache/hadoop/mapreduce/lib/aggregate/ValueAggregatorBaseDescriptor$MyEntry."<init>":(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
      40: areturn

  public static org.apache.hadoop.mapreduce.lib.aggregate.ValueAggregator generateValueAggregator(java.lang.String, long);
    Code:
       0: aload_0
       1: ldc           #14                 // String LongValueSum
       3: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
       6: ifne          17
       9: new           #16                 // class org/apache/hadoop/mapreduce/lib/aggregate/LongValueSum
      12: dup
      13: invokespecial #17                 // Method org/apache/hadoop/mapreduce/lib/aggregate/LongValueSum."<init>":()V
      16: areturn
      17: aload_0
      18: ldc           #18                 // String LongValueMax
      20: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      23: ifne          34
      26: new           #19                 // class org/apache/hadoop/mapreduce/lib/aggregate/LongValueMax
      29: dup
      30: invokespecial #20                 // Method org/apache/hadoop/mapreduce/lib/aggregate/LongValueMax."<init>":()V
      33: areturn
      34: aload_0
      35: ldc           #21                 // String LongValueMin
      37: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      40: ifne          51
      43: new           #22                 // class org/apache/hadoop/mapreduce/lib/aggregate/LongValueMin
      46: dup
      47: invokespecial #23                 // Method org/apache/hadoop/mapreduce/lib/aggregate/LongValueMin."<init>":()V
      50: areturn
      51: aload_0
      52: ldc           #24                 // String StringValueMax
      54: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      57: ifne          68
      60: new           #25                 // class org/apache/hadoop/mapreduce/lib/aggregate/StringValueMax
      63: dup
      64: invokespecial #26                 // Method org/apache/hadoop/mapreduce/lib/aggregate/StringValueMax."<init>":()V
      67: areturn
      68: aload_0
      69: ldc           #27                 // String StringValueMin
      71: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      74: ifne          85
      77: new           #28                 // class org/apache/hadoop/mapreduce/lib/aggregate/StringValueMin
      80: dup
      81: invokespecial #29                 // Method org/apache/hadoop/mapreduce/lib/aggregate/StringValueMin."<init>":()V
      84: areturn
      85: aload_0
      86: ldc           #30                 // String DoubleValueSum
      88: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      91: ifne          102
      94: new           #31                 // class org/apache/hadoop/mapreduce/lib/aggregate/DoubleValueSum
      97: dup
      98: invokespecial #32                 // Method org/apache/hadoop/mapreduce/lib/aggregate/DoubleValueSum."<init>":()V
     101: areturn
     102: aload_0
     103: ldc           #33                 // String UniqValueCount
     105: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
     108: ifne          120
     111: new           #34                 // class org/apache/hadoop/mapreduce/lib/aggregate/UniqValueCount
     114: dup
     115: lload_1
     116: invokespecial #35                 // Method org/apache/hadoop/mapreduce/lib/aggregate/UniqValueCount."<init>":(J)V
     119: areturn
     120: aload_0
     121: ldc           #36                 // String ValueHistogram
     123: invokevirtual #15                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
     126: ifne          137
     129: new           #37                 // class org/apache/hadoop/mapreduce/lib/aggregate/ValueHistogram
     132: dup
     133: invokespecial #38                 // Method org/apache/hadoop/mapreduce/lib/aggregate/ValueHistogram."<init>":()V
     136: areturn
     137: aconst_null
     138: areturn

  public java.util.ArrayList<java.util.Map$Entry<org.apache.hadoop.io.Text, org.apache.hadoop.io.Text>> generateKeyValPairs(java.lang.Object, java.lang.Object);
    Code:
       0: new           #39                 // class java/util/ArrayList
       3: dup
       4: invokespecial #40                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: ldc           #14                 // String LongValueSum
      10: astore        4
      12: ldc           #41                 // String record_count
      14: astore        5
      16: aload         4
      18: aload         5
      20: getstatic     #42                 // Field ONE:Lorg/apache/hadoop/io/Text;
      23: invokestatic  #43                 // Method generateEntry:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/io/Text;)Ljava/util/Map$Entry;
      26: astore        6
      28: aload         6
      30: ifnull        40
      33: aload_3
      34: aload         6
      36: invokevirtual #44                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: getfield      #2                  // Field inputFile:Ljava/lang/String;
      44: ifnull        73
      47: aload         4
      49: aload_0
      50: getfield      #2                  // Field inputFile:Ljava/lang/String;
      53: getstatic     #42                 // Field ONE:Lorg/apache/hadoop/io/Text;
      56: invokestatic  #43                 // Method generateEntry:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/io/Text;)Ljava/util/Map$Entry;
      59: astore        6
      61: aload         6
      63: ifnull        73
      66: aload_3
      67: aload         6
      69: invokevirtual #44                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_3
      74: areturn

  public void configure(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #46                 // String mapreduce.map.input.file
       4: invokevirtual #47                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
       7: putfield      #2                  // Field inputFile:Ljava/lang/String;
      10: return
}
