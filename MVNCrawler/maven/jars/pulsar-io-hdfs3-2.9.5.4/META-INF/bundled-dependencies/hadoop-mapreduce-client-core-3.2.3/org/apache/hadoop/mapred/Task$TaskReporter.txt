Compiled from "Task.java"
public class org.apache.hadoop.mapred.Task$TaskReporter extends org.apache.hadoop.mapreduce.StatusReporter implements java.lang.Runnable,org.apache.hadoop.mapred.Reporter {
  private org.apache.hadoop.mapred.TaskUmbilicalProtocol umbilical;

  private org.apache.hadoop.mapred.InputSplit split;

  private org.apache.hadoop.util.Progress taskProgress;

  private java.lang.Thread pingThread;

  private boolean done;

  private java.lang.Object lock;

  private volatile java.lang.String diskLimitCheckStatus;

  private java.lang.Thread diskLimitCheckThread;

  private java.util.concurrent.atomic.AtomicBoolean progressFlag;

  final org.apache.hadoop.mapred.Task this$0;

  public org.apache.hadoop.mapred.Task$TaskReporter(org.apache.hadoop.mapred.Task, org.apache.hadoop.util.Progress, org.apache.hadoop.mapred.TaskUmbilicalProtocol);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
       5: aload_0
       6: invokespecial #3                  // Method org/apache/hadoop/mapreduce/StatusReporter."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field split:Lorg/apache/hadoop/mapred/InputSplit;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field pingThread:Ljava/lang/Thread;
      19: aload_0
      20: iconst_1
      21: putfield      #6                  // Field done:Z
      24: aload_0
      25: new           #7                  // class java/lang/Object
      28: dup
      29: invokespecial #8                  // Method java/lang/Object."<init>":()V
      32: putfield      #9                  // Field lock:Ljava/lang/Object;
      35: aload_0
      36: aconst_null
      37: putfield      #1                  // Field diskLimitCheckStatus:Ljava/lang/String;
      40: aload_0
      41: aconst_null
      42: putfield      #10                 // Field diskLimitCheckThread:Ljava/lang/Thread;
      45: aload_0
      46: new           #11                 // class java/util/concurrent/atomic/AtomicBoolean
      49: dup
      50: iconst_0
      51: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      54: putfield      #13                 // Field progressFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
      57: aload_0
      58: aload_3
      59: putfield      #14                 // Field umbilical:Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;
      62: aload_0
      63: aload_2
      64: putfield      #15                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
      67: return

  void setProgressFlag();
    Code:
       0: aload_0
       1: getfield      #13                 // Field progressFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  boolean resetProgressFlag();
    Code:
       0: aload_0
       1: getfield      #13                 // Field progressFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ireturn

  public void setStatus(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
       9: getfield      #18                 // Field org/apache/hadoop/mapred/Task.conf:Lorg/apache/hadoop/mapred/JobConf;
      12: invokestatic  #19                 // Method org/apache/hadoop/mapred/Task.normalizeStatus:(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
      15: invokevirtual #20                 // Method org/apache/hadoop/util/Progress.setStatus:(Ljava/lang/String;)V
      18: aload_0
      19: invokevirtual #21                 // Method setProgressFlag:()V
      22: return

  public void setProgress(float);
    Code:
       0: aload_0
       1: getfield      #15                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
       4: invokevirtual #22                 // Method org/apache/hadoop/util/Progress.phase:()Lorg/apache/hadoop/util/Progress;
       7: fload_1
       8: invokevirtual #23                 // Method org/apache/hadoop/util/Progress.set:(F)V
      11: aload_0
      12: invokevirtual #21                 // Method setProgressFlag:()V
      15: return

  public float getProgress();
    Code:
       0: aload_0
       1: getfield      #15                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
       4: invokevirtual #24                 // Method org/apache/hadoop/util/Progress.getProgress:()F
       7: freturn

  public void progress();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method setProgressFlag:()V
       4: return

  public org.apache.hadoop.mapred.Counters$Counter getCounter(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
       6: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
       9: ifnull        25
      12: aload_0
      13: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      16: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
      19: aload_1
      20: aload_2
      21: invokevirtual #26                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;
      24: astore_3
      25: aload_3
      26: areturn

  public org.apache.hadoop.mapred.Counters$Counter getCounter(java.lang.Enum<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
       4: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
       7: ifnonnull     14
      10: aconst_null
      11: goto          28
      14: aload_0
      15: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      18: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
      21: aload_1
      22: invokevirtual #27                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
      25: checkcast     #28                 // class org/apache/hadoop/mapred/Counters$Counter
      28: areturn

  public void incrCounter(java.lang.Enum, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
       4: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
       7: ifnull        22
      10: aload_0
      11: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      14: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
      17: aload_1
      18: lload_2
      19: invokevirtual #29                 // Method org/apache/hadoop/mapred/Counters.incrCounter:(Ljava/lang/Enum;J)V
      22: aload_0
      23: invokevirtual #21                 // Method setProgressFlag:()V
      26: return

  public void incrCounter(java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
       4: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
       7: ifnull        23
      10: aload_0
      11: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      14: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
      17: aload_1
      18: aload_2
      19: lload_3
      20: invokevirtual #30                 // Method org/apache/hadoop/mapred/Counters.incrCounter:(Ljava/lang/String;Ljava/lang/String;J)V
      23: aload_0
      24: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      27: invokestatic  #31                 // Method org/apache/hadoop/mapred/Task.access$100:(Lorg/apache/hadoop/mapred/Task;)Z
      30: ifeq          103
      33: ldc           #33                 // String SkippingTaskCounters
      35: aload_1
      36: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          103
      42: ldc           #35                 // String MapProcessedRecords
      44: aload_2
      45: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifne          60
      51: ldc           #36                 // String ReduceProcessedGroups
      53: aload_2
      54: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          103
      60: iconst_0
      61: istore        5
      63: iload         5
      65: i2l
      66: lload_3
      67: lcmp
      68: ifge          103
      71: aload_0
      72: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      75: aload_0
      76: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      79: invokestatic  #37                 // Method org/apache/hadoop/mapred/Task.access$300:(Lorg/apache/hadoop/mapred/Task;)Ljava/util/Iterator;
      82: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #39                 // class java/lang/Long
      90: invokevirtual #40                 // Method java/lang/Long.longValue:()J
      93: invokestatic  #41                 // Method org/apache/hadoop/mapred/Task.access$202:(Lorg/apache/hadoop/mapred/Task;J)J
      96: pop2
      97: iinc          5, 1
     100: goto          63
     103: aload_0
     104: invokevirtual #21                 // Method setProgressFlag:()V
     107: return

  public void setInputSplit(org.apache.hadoop.mapred.InputSplit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field split:Lorg/apache/hadoop/mapred/InputSplit;
       5: return

  public org.apache.hadoop.mapred.InputSplit getInputSplit() throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field split:Lorg/apache/hadoop/mapred/InputSplit;
       4: ifnonnull     17
       7: new           #42                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #43                 // String Input only available on map
      13: invokespecial #44                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field split:Lorg/apache/hadoop/mapred/InputSplit;
      21: areturn

  protected void checkTaskLimits() throws org.apache.hadoop.mapred.Task$TaskReporter$TaskLimitException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
       4: getfield      #18                 // Field org/apache/hadoop/mapred/Task.conf:Lorg/apache/hadoop/mapred/JobConf;
       7: ldc           #46                 // String mapreduce.task.local-fs.write-limit.bytes
       9: ldc2_w        #47                 // long -1l
      12: invokevirtual #49                 // Method org/apache/hadoop/mapred/JobConf.getLong:(Ljava/lang/String;J)J
      15: lstore_1
      16: lload_1
      17: lconst_0
      18: lcmp
      19: iflt          126
      22: aconst_null
      23: astore_3
      24: aload_0
      25: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      28: getfield      #18                 // Field org/apache/hadoop/mapred/Task.conf:Lorg/apache/hadoop/mapred/JobConf;
      31: invokestatic  #50                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
      34: astore        4
      36: aload_0
      37: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      40: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
      43: aload         4
      45: invokevirtual #51                 // Method org/apache/hadoop/fs/LocalFileSystem.getScheme:()Ljava/lang/String;
      48: getstatic     #52                 // Field org/apache/hadoop/mapreduce/FileSystemCounter.BYTES_WRITTEN:Lorg/apache/hadoop/mapreduce/FileSystemCounter;
      51: invokevirtual #53                 // Method org/apache/hadoop/mapred/Counters.findCounter:(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/FileSystemCounter;)Lorg/apache/hadoop/mapreduce/Counter;
      54: checkcast     #28                 // class org/apache/hadoop/mapred/Counters$Counter
      57: astore_3
      58: goto          73
      61: astore        4
      63: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
      66: ldc           #56                 // String Could not get LocalFileSystem BYTES_WRITTEN counter
      68: invokeinterface #57,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      73: aload_3
      74: ifnull        126
      77: aload_3
      78: invokevirtual #58                 // Method org/apache/hadoop/mapred/Counters$Counter.getCounter:()J
      81: lload_1
      82: lcmp
      83: ifle          126
      86: new           #59                 // class org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException
      89: dup
      90: aload_0
      91: new           #60                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #62                 // String too much write to local file system. current value is
     100: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_3
     104: invokevirtual #58                 // Method org/apache/hadoop/mapred/Counters$Counter.getCounter:()J
     107: invokevirtual #64                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     110: ldc           #65                 // String  the limit is
     112: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: lload_1
     116: invokevirtual #64                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     119: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokespecial #67                 // Method org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException."<init>":(Lorg/apache/hadoop/mapred/Task$TaskReporter;Ljava/lang/String;)V
     125: athrow
     126: aload_0
     127: getfield      #1                  // Field diskLimitCheckStatus:Ljava/lang/String;
     130: ifnull        146
     133: new           #59                 // class org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException
     136: dup
     137: aload_0
     138: aload_0
     139: getfield      #1                  // Field diskLimitCheckStatus:Ljava/lang/String;
     142: invokespecial #67                 // Method org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException."<init>":(Lorg/apache/hadoop/mapred/Task$TaskReporter;Ljava/lang/String;)V
     145: athrow
     146: return
    Exception table:
       from    to  target type
          24    58    61   Class java/io/IOException

  public void run();
    Code:
       0: iconst_3
       1: istore_1
       2: iconst_3
       3: istore_2
       4: aload_0
       5: invokevirtual #68                 // Method resetProgressFlag:()Z
       8: istore_3
       9: aload_0
      10: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      13: getfield      #18                 // Field org/apache/hadoop/mapred/Task.conf:Lorg/apache/hadoop/mapred/JobConf;
      16: invokestatic  #69                 // Method org/apache/hadoop/mapreduce/util/MRJobConfUtil.getTaskProgressReportInterval:(Lorg/apache/hadoop/conf/Configuration;)J
      19: lstore        4
      21: aload_0
      22: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      25: invokestatic  #70                 // Method org/apache/hadoop/mapred/Task.access$400:(Lorg/apache/hadoop/mapred/Task;)Ljava/util/concurrent/atomic/AtomicBoolean;
      28: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      31: ifne          689
      34: aload_0
      35: getfield      #9                  // Field lock:Ljava/lang/Object;
      38: dup
      39: astore        6
      41: monitorenter
      42: aload_0
      43: iconst_0
      44: putfield      #6                  // Field done:Z
      47: aload         6
      49: monitorexit
      50: goto          61
      53: astore        7
      55: aload         6
      57: monitorexit
      58: aload         7
      60: athrow
      61: iconst_1
      62: istore        6
      64: aconst_null
      65: astore        7
      67: aload_0
      68: getfield      #9                  // Field lock:Ljava/lang/Object;
      71: dup
      72: astore        8
      74: monitorenter
      75: aload_0
      76: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      79: invokestatic  #70                 // Method org/apache/hadoop/mapred/Task.access$400:(Lorg/apache/hadoop/mapred/Task;)Ljava/util/concurrent/atomic/AtomicBoolean;
      82: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      85: ifeq          94
      88: aload         8
      90: monitorexit
      91: goto          689
      94: aload_0
      95: getfield      #9                  // Field lock:Ljava/lang/Object;
      98: lload         4
     100: invokevirtual #72                 // Method java/lang/Object.wait:(J)V
     103: aload         8
     105: monitorexit
     106: goto          117
     109: astore        9
     111: aload         8
     113: monitorexit
     114: aload         9
     116: athrow
     117: aload_0
     118: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     121: invokestatic  #70                 // Method org/apache/hadoop/mapred/Task.access$400:(Lorg/apache/hadoop/mapred/Task;)Ljava/util/concurrent/atomic/AtomicBoolean;
     124: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     127: ifeq          133
     130: goto          689
     133: iload_3
     134: ifeq          224
     137: aload_0
     138: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     141: invokestatic  #73                 // Method org/apache/hadoop/mapred/Task.access$700:(Lorg/apache/hadoop/mapred/Task;)V
     144: aload_0
     145: invokevirtual #74                 // Method checkTaskLimits:()V
     148: aload_0
     149: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     152: getfield      #75                 // Field org/apache/hadoop/mapred/Task.taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     155: aload_0
     156: getfield      #15                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
     159: invokevirtual #76                 // Method org/apache/hadoop/util/Progress.get:()F
     162: aload_0
     163: getfield      #15                 // Field taskProgress:Lorg/apache/hadoop/util/Progress;
     166: invokevirtual #77                 // Method org/apache/hadoop/util/Progress.toString:()Ljava/lang/String;
     169: aload_0
     170: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     173: invokestatic  #25                 // Method org/apache/hadoop/mapred/Task.access$000:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/Counters;
     176: invokevirtual #78                 // Method org/apache/hadoop/mapred/TaskStatus.statusUpdate:(FLjava/lang/String;Lorg/apache/hadoop/mapred/Counters;)V
     179: aload_0
     180: getfield      #14                 // Field umbilical:Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;
     183: aload_0
     184: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     187: invokestatic  #79                 // Method org/apache/hadoop/mapred/Task.access$800:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/TaskAttemptID;
     190: aload_0
     191: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     194: getfield      #75                 // Field org/apache/hadoop/mapred/Task.taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     197: invokeinterface #80,  3           // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.statusUpdate:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)Lorg/apache/hadoop/mapred/AMFeedback;
     202: astore        7
     204: aload         7
     206: invokevirtual #81                 // Method org/apache/hadoop/mapred/AMFeedback.getTaskFound:()Z
     209: istore        6
     211: aload_0
     212: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     215: getfield      #75                 // Field org/apache/hadoop/mapred/Task.taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     218: invokevirtual #82                 // Method org/apache/hadoop/mapred/TaskStatus.clearStatus:()V
     221: goto          250
     224: aload_0
     225: getfield      #14                 // Field umbilical:Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;
     228: aload_0
     229: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     232: invokestatic  #79                 // Method org/apache/hadoop/mapred/Task.access$800:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/TaskAttemptID;
     235: aconst_null
     236: invokeinterface #80,  3           // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.statusUpdate:(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)Lorg/apache/hadoop/mapred/AMFeedback;
     241: astore        7
     243: aload         7
     245: invokevirtual #81                 // Method org/apache/hadoop/mapred/AMFeedback.getTaskFound:()Z
     248: istore        6
     250: iload         6
     252: ifne          321
     255: aload_0
     256: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     259: invokestatic  #83                 // Method org/apache/hadoop/mapred/Task.access$900:(Lorg/apache/hadoop/mapred/Task;)Z
     262: ifeq          279
     265: aload_0
     266: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     269: invokestatic  #70                 // Method org/apache/hadoop/mapred/Task.access$400:(Lorg/apache/hadoop/mapred/Task;)Ljava/util/concurrent/atomic/AtomicBoolean;
     272: iconst_1
     273: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     276: goto          689
     279: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     282: new           #60                 // class java/lang/StringBuilder
     285: dup
     286: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     289: ldc           #84                 // String Parent died.  Exiting
     291: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: aload_0
     295: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     298: invokestatic  #79                 // Method org/apache/hadoop/mapred/Task.access$800:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/TaskAttemptID;
     301: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     304: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     307: invokeinterface #57,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     312: aload_0
     313: invokevirtual #86                 // Method resetDoneFlag:()V
     316: bipush        66
     318: invokestatic  #87                 // Method java/lang/System.exit:(I)V
     321: aload_0
     322: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     325: getfield      #88                 // Field org/apache/hadoop/mapred/Task.mustPreempt:Ljava/util/concurrent/atomic/AtomicBoolean;
     328: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     331: istore        8
     333: aload_0
     334: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     337: getfield      #88                 // Field org/apache/hadoop/mapred/Task.mustPreempt:Ljava/util/concurrent/atomic/AtomicBoolean;
     340: aload_0
     341: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     344: getfield      #88                 // Field org/apache/hadoop/mapred/Task.mustPreempt:Ljava/util/concurrent/atomic/AtomicBoolean;
     347: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     350: ifne          361
     353: aload         7
     355: invokevirtual #89                 // Method org/apache/hadoop/mapred/AMFeedback.getPreemption:()Z
     358: ifeq          365
     361: iconst_1
     362: goto          366
     365: iconst_0
     366: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     369: iload         8
     371: aload_0
     372: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     375: getfield      #88                 // Field org/apache/hadoop/mapred/Task.mustPreempt:Ljava/util/concurrent/atomic/AtomicBoolean;
     378: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     381: ixor
     382: ifeq          467
     385: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     388: new           #60                 // class java/lang/StringBuilder
     391: dup
     392: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     395: ldc           #90                 // String PREEMPTION TASK: setting mustPreempt to
     397: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     400: aload_0
     401: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     404: getfield      #88                 // Field org/apache/hadoop/mapred/Task.mustPreempt:Ljava/util/concurrent/atomic/AtomicBoolean;
     407: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     410: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     413: ldc           #92                 // String  given
     415: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     418: aload         7
     420: invokevirtual #89                 // Method org/apache/hadoop/mapred/AMFeedback.getPreemption:()Z
     423: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     426: ldc           #93                 // String  for
     428: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     431: aload_0
     432: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     435: invokestatic  #79                 // Method org/apache/hadoop/mapred/Task.access$800:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/TaskAttemptID;
     438: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     441: ldc           #94                 // String  task status:
     443: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     446: aload_0
     447: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     450: getfield      #75                 // Field org/apache/hadoop/mapred/Task.taskStatus:Lorg/apache/hadoop/mapred/TaskStatus;
     453: invokevirtual #95                 // Method org/apache/hadoop/mapred/TaskStatus.getPhase:()Lorg/apache/hadoop/mapred/TaskStatus$Phase;
     456: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     459: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     462: invokeinterface #96,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     467: aload_0
     468: invokevirtual #68                 // Method resetProgressFlag:()Z
     471: istore_3
     472: iconst_3
     473: istore_2
     474: goto          21
     477: astore        6
     479: new           #60                 // class java/lang/StringBuilder
     482: dup
     483: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     486: ldc           #97                 // String Task exceeded the limits:
     488: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     491: aload         6
     493: invokestatic  #98                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
     496: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     499: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     502: astore        7
     504: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     507: aload         7
     509: invokeinterface #99,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     514: aload_0
     515: getfield      #14                 // Field umbilical:Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;
     518: aload_0
     519: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     522: invokestatic  #79                 // Method org/apache/hadoop/mapred/Task.access$800:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/TaskAttemptID;
     525: aload         7
     527: iconst_1
     528: invokeinterface #100,  4          // InterfaceMethod org/apache/hadoop/mapred/TaskUmbilicalProtocol.fatalError:(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Z)V
     533: goto          550
     536: astore        8
     538: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     541: ldc           #101                // String Failed to update failure diagnosis
     543: aload         8
     545: invokeinterface #102,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     550: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     553: new           #60                 // class java/lang/StringBuilder
     556: dup
     557: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     560: ldc           #103                // String Killing
     562: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     565: aload_0
     566: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     569: invokestatic  #79                 // Method org/apache/hadoop/mapred/Task.access$800:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/TaskAttemptID;
     572: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     575: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     578: invokeinterface #99,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     583: aload_0
     584: invokevirtual #86                 // Method resetDoneFlag:()V
     587: bipush        69
     589: invokestatic  #104                // Method org/apache/hadoop/util/ExitUtil.terminate:(I)V
     592: goto          21
     595: astore        6
     597: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     600: new           #60                 // class java/lang/StringBuilder
     603: dup
     604: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     607: ldc           #106                // String Communication exception:
     609: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     612: aload         6
     614: invokestatic  #98                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
     617: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     623: invokeinterface #96,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     628: iinc          2, -1
     631: iload_2
     632: ifne          686
     635: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     638: ldc           #107                // String Communication exception
     640: lconst_0
     641: invokestatic  #108                // Method org/apache/hadoop/util/ReflectionUtils.logThreadInfo:(Lorg/slf4j/Logger;Ljava/lang/String;J)V
     644: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
     647: new           #60                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #109                // String Last retry, killing
     656: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
     663: invokestatic  #79                 // Method org/apache/hadoop/mapred/Task.access$800:(Lorg/apache/hadoop/mapred/Task;)Lorg/apache/hadoop/mapred/TaskAttemptID;
     666: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     669: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     672: invokeinterface #57,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     677: aload_0
     678: invokevirtual #86                 // Method resetDoneFlag:()V
     681: bipush        65
     683: invokestatic  #87                 // Method java/lang/System.exit:(I)V
     686: goto          21
     689: aload_0
     690: invokevirtual #86                 // Method resetDoneFlag:()V
     693: return
    Exception table:
       from    to  target type
          42    50    53   any
          53    58    53   any
          75    91   109   any
          94   106   109   any
         109   114   109   any
          61    91   477   Class org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException
          94   130   477   Class org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException
         133   276   477   Class org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException
         279   474   477   Class org/apache/hadoop/mapred/Task$TaskReporter$TaskLimitException
         514   533   536   Class java/io/IOException
          61    91   595   Class java/lang/Throwable
          94   130   595   Class java/lang/Throwable
         133   276   595   Class java/lang/Throwable
         279   474   595   Class java/lang/Throwable

  void resetDoneFlag();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #6                  // Field done:Z
      12: aload_0
      13: getfield      #9                  // Field lock:Ljava/lang/Object;
      16: invokevirtual #110                // Method java/lang/Object.notify:()V
      19: aload_1
      20: monitorexit
      21: goto          29
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  public void startCommunicationThread();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pingThread:Ljava/lang/Thread;
       4: ifnonnull     36
       7: aload_0
       8: new           #111                // class java/lang/Thread
      11: dup
      12: aload_0
      13: ldc           #112                // String communication thread
      15: invokespecial #113                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      18: putfield      #5                  // Field pingThread:Ljava/lang/Thread;
      21: aload_0
      22: getfield      #5                  // Field pingThread:Ljava/lang/Thread;
      25: iconst_1
      26: invokevirtual #114                // Method java/lang/Thread.setDaemon:(Z)V
      29: aload_0
      30: getfield      #5                  // Field pingThread:Ljava/lang/Thread;
      33: invokevirtual #115                // Method java/lang/Thread.start:()V
      36: aload_0
      37: invokevirtual #116                // Method startDiskLimitCheckerThreadIfNeeded:()V
      40: return

  public void startDiskLimitCheckerThreadIfNeeded();
    Code:
       0: aload_0
       1: getfield      #10                 // Field diskLimitCheckThread:Ljava/lang/Thread;
       4: ifnonnull     105
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      11: getfield      #18                 // Field org/apache/hadoop/mapred/Task.conf:Lorg/apache/hadoop/mapred/JobConf;
      14: ldc           #117                // String mapreduce.job.local-fs.single-disk-limit.bytes
      16: ldc2_w        #47                 // long -1l
      19: invokevirtual #49                 // Method org/apache/hadoop/mapred/JobConf.getLong:(Ljava/lang/String;J)J
      22: lconst_0
      23: lcmp
      24: iflt          105
      27: aload_0
      28: new           #111                // class java/lang/Thread
      31: dup
      32: new           #118                // class org/apache/hadoop/mapred/Task$TaskReporter$DiskLimitCheck
      35: dup
      36: aload_0
      37: aload_0
      38: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapred/Task;
      41: getfield      #18                 // Field org/apache/hadoop/mapred/Task.conf:Lorg/apache/hadoop/mapred/JobConf;
      44: invokespecial #119                // Method org/apache/hadoop/mapred/Task$TaskReporter$DiskLimitCheck."<init>":(Lorg/apache/hadoop/mapred/Task$TaskReporter;Lorg/apache/hadoop/mapred/JobConf;)V
      47: ldc           #120                // String disk limit check thread
      49: invokespecial #113                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      52: putfield      #10                 // Field diskLimitCheckThread:Ljava/lang/Thread;
      55: aload_0
      56: getfield      #10                 // Field diskLimitCheckThread:Ljava/lang/Thread;
      59: iconst_1
      60: invokevirtual #114                // Method java/lang/Thread.setDaemon:(Z)V
      63: aload_0
      64: getfield      #10                 // Field diskLimitCheckThread:Ljava/lang/Thread;
      67: invokevirtual #115                // Method java/lang/Thread.start:()V
      70: goto          105
      73: astore_1
      74: invokestatic  #55                 // Method org/apache/hadoop/mapred/Task.access$500:()Lorg/slf4j/Logger;
      77: new           #60                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #121                // String Issues starting disk monitor thread:
      86: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #122                // Method java/io/IOException.getMessage:()Ljava/lang/String;
      93: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: aload_1
     100: invokeinterface #102,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: return
    Exception table:
       from    to  target type
          27    70    73   Class java/io/IOException

  public void stopCommunicationThread() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pingThread:Ljava/lang/Thread;
       4: ifnull        79
       7: aload_0
       8: getfield      #9                  // Field lock:Ljava/lang/Object;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: getfield      #9                  // Field lock:Ljava/lang/Object;
      18: invokevirtual #110                // Method java/lang/Object.notify:()V
      21: aload_1
      22: monitorexit
      23: goto          31
      26: astore_2
      27: aload_1
      28: monitorexit
      29: aload_2
      30: athrow
      31: aload_0
      32: getfield      #9                  // Field lock:Ljava/lang/Object;
      35: dup
      36: astore_1
      37: monitorenter
      38: aload_0
      39: getfield      #6                  // Field done:Z
      42: ifne          55
      45: aload_0
      46: getfield      #9                  // Field lock:Ljava/lang/Object;
      49: invokevirtual #123                // Method java/lang/Object.wait:()V
      52: goto          38
      55: aload_1
      56: monitorexit
      57: goto          65
      60: astore_3
      61: aload_1
      62: monitorexit
      63: aload_3
      64: athrow
      65: aload_0
      66: getfield      #5                  // Field pingThread:Ljava/lang/Thread;
      69: invokevirtual #124                // Method java/lang/Thread.interrupt:()V
      72: aload_0
      73: getfield      #5                  // Field pingThread:Ljava/lang/Thread;
      76: invokevirtual #125                // Method java/lang/Thread.join:()V
      79: return
    Exception table:
       from    to  target type
          14    23    26   any
          26    29    26   any
          38    57    60   any
          60    63    60   any

  public org.apache.hadoop.mapreduce.Counter getCounter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #126                // Method getCounter:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;
       6: areturn

  public org.apache.hadoop.mapreduce.Counter getCounter(java.lang.Enum);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method getCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapred/Counters$Counter;
       5: areturn

  static java.lang.String access$602(org.apache.hadoop.mapred.Task$TaskReporter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field diskLimitCheckStatus:Ljava/lang/String;
       6: areturn
}
