Compiled from "MapHost.java"
public class org.apache.hadoop.mapreduce.task.reduce.MapHost {
  private org.apache.hadoop.mapreduce.task.reduce.MapHost$State state;

  private final java.lang.String hostName;

  private final java.lang.String baseUrl;

  private java.util.List<org.apache.hadoop.mapreduce.TaskAttemptID> maps;

  public org.apache.hadoop.mapreduce.task.reduce.MapHost(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/hadoop/mapreduce/task/reduce/MapHost$State.IDLE:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
       8: putfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      11: aload_0
      12: new           #4                  // class java/util/ArrayList
      15: dup
      16: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      19: putfield      #6                  // Field maps:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field hostName:Ljava/lang/String;
      27: aload_0
      28: aload_2
      29: putfield      #8                  // Field baseUrl:Ljava/lang/String;
      32: return

  public org.apache.hadoop.mapreduce.task.reduce.MapHost$State getState();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
       4: areturn

  public java.lang.String getHostName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field hostName:Ljava/lang/String;
       4: areturn

  public java.lang.String getBaseUrl();
    Code:
       0: aload_0
       1: getfield      #8                  // Field baseUrl:Ljava/lang/String;
       4: areturn

  public synchronized void addKnownMap(org.apache.hadoop.mapreduce.TaskAttemptID);
    Code:
       0: aload_0
       1: getfield      #6                  // Field maps:Ljava/util/List;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      15: getstatic     #2                  // Field org/apache/hadoop/mapreduce/task/reduce/MapHost$State.IDLE:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      18: if_acmpne     28
      21: aload_0
      22: getstatic     #10                 // Field org/apache/hadoop/mapreduce/task/reduce/MapHost$State.PENDING:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      25: putfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      28: return

  public synchronized java.util.List<org.apache.hadoop.mapreduce.TaskAttemptID> getAndClearKnownMaps();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maps:Ljava/util/List;
       4: astore_1
       5: aload_0
       6: new           #4                  // class java/util/ArrayList
       9: dup
      10: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #6                  // Field maps:Ljava/util/List;
      16: aload_1
      17: areturn

  public synchronized void markBusy();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/apache/hadoop/mapreduce/task/reduce/MapHost$State.BUSY:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
       4: putfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
       7: return

  public synchronized int getNumKnownMapOutputs();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maps:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public synchronized org.apache.hadoop.mapreduce.task.reduce.MapHost$State markAvailable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maps:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          22
      12: aload_0
      13: getstatic     #2                  // Field org/apache/hadoop/mapreduce/task/reduce/MapHost$State.IDLE:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      16: putfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      19: goto          29
      22: aload_0
      23: getstatic     #10                 // Field org/apache/hadoop/mapreduce/task/reduce/MapHost$State.PENDING:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      26: putfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      29: aload_0
      30: getfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
      33: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field hostName:Ljava/lang/String;
       4: areturn

  public synchronized void penalize();
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/apache/hadoop/mapreduce/task/reduce/MapHost$State.PENALIZED:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
       4: putfield      #3                  // Field state:Lorg/apache/hadoop/mapreduce/task/reduce/MapHost$State;
       7: return
}
