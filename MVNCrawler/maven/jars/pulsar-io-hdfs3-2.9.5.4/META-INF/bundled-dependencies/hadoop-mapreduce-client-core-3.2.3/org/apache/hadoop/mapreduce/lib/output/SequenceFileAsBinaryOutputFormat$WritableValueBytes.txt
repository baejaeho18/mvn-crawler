Compiled from "SequenceFileAsBinaryOutputFormat.java"
public class org.apache.hadoop.mapreduce.lib.output.SequenceFileAsBinaryOutputFormat$WritableValueBytes implements org.apache.hadoop.io.SequenceFile$ValueBytes {
  private org.apache.hadoop.io.BytesWritable value;

  public org.apache.hadoop.mapreduce.lib.output.SequenceFileAsBinaryOutputFormat$WritableValueBytes();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
       9: return

  public org.apache.hadoop.mapreduce.lib.output.SequenceFileAsBinaryOutputFormat$WritableValueBytes(org.apache.hadoop.io.BytesWritable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
       9: return

  public void reset(org.apache.hadoop.io.BytesWritable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
       5: return

  public void writeUncompressedBytes(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
       5: invokevirtual #3                  // Method org/apache/hadoop/io/BytesWritable.getBytes:()[B
       8: iconst_0
       9: aload_0
      10: getfield      #2                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
      13: invokevirtual #4                  // Method org/apache/hadoop/io/BytesWritable.getLength:()I
      16: invokevirtual #5                  // Method java/io/DataOutputStream.write:([BII)V
      19: return

  public void writeCompressedBytes(java.io.DataOutputStream) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #7                  // String WritableValueBytes doesn\'t support RECORD compression
       6: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
       4: invokevirtual #4                  // Method org/apache/hadoop/io/BytesWritable.getLength:()I
       7: ireturn
}
