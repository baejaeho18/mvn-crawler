Compiled from "CounterGroupFactory.java"
public abstract class org.apache.hadoop.mapreduce.counters.CounterGroupFactory<C extends org.apache.hadoop.mapreduce.Counter, G extends org.apache.hadoop.mapreduce.counters.CounterGroupBase<C>> {
  private static final java.util.Map<java.lang.String, java.lang.Integer> s2i;

  private static final java.util.List<java.lang.String> i2s;

  private static final int VERSION;

  private static final java.lang.String FS_GROUP_NAME;

  private final java.util.Map<java.lang.String, org.apache.hadoop.mapreduce.counters.CounterGroupFactory$FrameworkGroupFactory<G>> fmap;

  public org.apache.hadoop.mapreduce.counters.CounterGroupFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       8: putfield      #3                  // Field fmap:Ljava/util/Map;
      11: aload_0
      12: ldc           #4                  // class org/apache/hadoop/mapreduce/TaskCounter
      14: invokespecial #5                  // Method addFrameworkGroup:(Ljava/lang/Class;)V
      17: aload_0
      18: ldc           #6                  // class org/apache/hadoop/mapreduce/JobCounter
      20: invokespecial #5                  // Method addFrameworkGroup:(Ljava/lang/Class;)V
      23: return

  private synchronized <T extends java.lang.Enum<T>> void addFrameworkGroup(java.lang.Class<T>);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method updateFrameworkGroupMapping:(Ljava/lang/Class;)V
       4: aload_0
       5: getfield      #3                  // Field fmap:Ljava/util/Map;
       8: aload_1
       9: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokevirtual #9                  // Method newFrameworkGroupFactory:(Ljava/lang/Class;)Lorg/apache/hadoop/mapreduce/counters/CounterGroupFactory$FrameworkGroupFactory;
      17: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return

  private static synchronized void updateFrameworkGroupMapping(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
       4: astore_1
       5: getstatic     #11                 // Field s2i:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #13                 // class java/lang/Integer
      17: astore_2
      18: aload_2
      19: ifnull        23
      22: return
      23: getstatic     #14                 // Field i2s:Ljava/util/List;
      26: aload_1
      27: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: getstatic     #11                 // Field s2i:Ljava/util/Map;
      36: aload_1
      37: getstatic     #14                 // Field i2s:Ljava/util/List;
      40: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      45: iconst_1
      46: isub
      47: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: return

  protected abstract <T extends java.lang.Enum<T>> org.apache.hadoop.mapreduce.counters.CounterGroupFactory$FrameworkGroupFactory<G> newFrameworkGroupFactory(java.lang.Class<T>);

  public G newGroup(java.lang.String, org.apache.hadoop.mapreduce.counters.Limits);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: aload_1
       4: invokestatic  #18                 // Method org/apache/hadoop/mapreduce/util/ResourceBundles.getCounterGroupName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: aload_2
       8: invokevirtual #19                 // Method newGroup:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapreduce/counters/Limits;)Lorg/apache/hadoop/mapreduce/counters/CounterGroupBase;
      11: areturn

  public G newGroup(java.lang.String, java.lang.String, org.apache.hadoop.mapreduce.counters.Limits);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fmap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class org/apache/hadoop/mapreduce/counters/CounterGroupFactory$FrameworkGroupFactory
      13: astore        4
      15: aload         4
      17: ifnull        32
      20: aload         4
      22: aload_1
      23: invokeinterface #21,  2           // InterfaceMethod org/apache/hadoop/mapreduce/counters/CounterGroupFactory$FrameworkGroupFactory.newGroup:(Ljava/lang/String;)Ljava/lang/Object;
      28: checkcast     #22                 // class org/apache/hadoop/mapreduce/counters/CounterGroupBase
      31: areturn
      32: aload_1
      33: getstatic     #23                 // Field FS_GROUP_NAME:Ljava/lang/String;
      36: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          47
      42: aload_0
      43: invokevirtual #25                 // Method newFileSystemGroup:()Lorg/apache/hadoop/mapreduce/counters/CounterGroupBase;
      46: areturn
      47: getstatic     #11                 // Field s2i:Ljava/util/Map;
      50: aload_1
      51: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: ifnull        79
      59: aload_0
      60: getstatic     #11                 // Field s2i:Ljava/util/Map;
      63: aload_1
      64: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #13                 // class java/lang/Integer
      72: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      75: invokevirtual #27                 // Method newFrameworkGroup:(I)Lorg/apache/hadoop/mapreduce/counters/CounterGroupBase;
      78: areturn
      79: aload_0
      80: aload_1
      81: aload_2
      82: aload_3
      83: invokevirtual #28                 // Method newGenericGroup:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapreduce/counters/Limits;)Lorg/apache/hadoop/mapreduce/counters/CounterGroupBase;
      86: areturn

  public G newFrameworkGroup(int);
    Code:
       0: ldc           #29                 // class org/apache/hadoop/mapreduce/counters/CounterGroupFactory
       2: dup
       3: astore_3
       4: monitorenter
       5: iload_1
       6: iflt          21
       9: iload_1
      10: getstatic     #14                 // Field i2s:Ljava/util/List;
      13: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      18: if_icmplt     25
      21: iload_1
      22: invokestatic  #30                 // Method throwBadFrameGroupIdException:(I)V
      25: getstatic     #14                 // Field i2s:Ljava/util/List;
      28: iload_1
      29: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: checkcast     #32                 // class java/lang/String
      37: astore_2
      38: aload_3
      39: monitorexit
      40: goto          50
      43: astore        4
      45: aload_3
      46: monitorexit
      47: aload         4
      49: athrow
      50: aload_0
      51: getfield      #3                  // Field fmap:Ljava/util/Map;
      54: aload_2
      55: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #20                 // class org/apache/hadoop/mapreduce/counters/CounterGroupFactory$FrameworkGroupFactory
      63: astore_3
      64: aload_3
      65: ifnonnull     72
      68: iload_1
      69: invokestatic  #30                 // Method throwBadFrameGroupIdException:(I)V
      72: aload_3
      73: aload_2
      74: invokeinterface #21,  2           // InterfaceMethod org/apache/hadoop/mapreduce/counters/CounterGroupFactory$FrameworkGroupFactory.newGroup:(Ljava/lang/String;)Ljava/lang/Object;
      79: checkcast     #22                 // class org/apache/hadoop/mapreduce/counters/CounterGroupBase
      82: areturn
    Exception table:
       from    to  target type
           5    40    43   any
          43    47    43   any

  public static synchronized int getFrameworkGroupId(java.lang.String);
    Code:
       0: getstatic     #11                 // Field s2i:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #13                 // class java/lang/Integer
      12: astore_1
      13: aload_1
      14: ifnonnull     21
      17: aload_0
      18: invokestatic  #33                 // Method throwBadFrameworkGroupNameException:(Ljava/lang/String;)V
      21: aload_1
      22: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      25: ireturn

  public int version();
    Code:
       0: iconst_1
       1: ireturn

  public static synchronized boolean isFrameworkGroup(java.lang.String);
    Code:
       0: getstatic     #11                 // Field s2i:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: ifnonnull     22
      12: aload_0
      13: getstatic     #23                 // Field FS_GROUP_NAME:Ljava/lang/String;
      16: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private static void throwBadFrameGroupIdException(int);
    Code:
       0: new           #34                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #35                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #37                 // String bad framework group id:
      13: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_0
      17: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow

  private static void throwBadFrameworkGroupNameException(java.lang.String);
    Code:
       0: new           #34                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #35                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #42                 // String bad framework group name:
      13: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow

  protected abstract G newGenericGroup(java.lang.String, java.lang.String, org.apache.hadoop.mapreduce.counters.Limits);

  protected abstract G newFileSystemGroup();

  static {};
    Code:
       0: invokestatic  #2                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       3: putstatic     #11                 // Field s2i:Ljava/util/Map;
       6: invokestatic  #43                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       9: putstatic     #14                 // Field i2s:Ljava/util/List;
      12: ldc           #44                 // class org/apache/hadoop/mapreduce/FileSystemCounter
      14: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      17: putstatic     #23                 // Field FS_GROUP_NAME:Ljava/lang/String;
      20: return
}
