Compiled from "CombineFileRecordReaderWrapper.java"
public abstract class org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper<K, V> extends org.apache.hadoop.mapreduce.RecordReader<K, V> {
  private final org.apache.hadoop.mapreduce.lib.input.FileSplit fileSplit;

  private final org.apache.hadoop.mapreduce.RecordReader<K, V> delegate;

  static final boolean $assertionsDisabled;

  protected org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper(org.apache.hadoop.mapreduce.lib.input.FileInputFormat<K, V>, org.apache.hadoop.mapreduce.lib.input.CombineFileSplit, org.apache.hadoop.mapreduce.TaskAttemptContext, java.lang.Integer) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/RecordReader."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/hadoop/mapreduce/lib/input/FileSplit
       8: dup
       9: aload_2
      10: aload         4
      12: invokevirtual #3                  // Method java/lang/Integer.intValue:()I
      15: invokevirtual #4                  // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getPath:(I)Lorg/apache/hadoop/fs/Path;
      18: aload_2
      19: aload         4
      21: invokevirtual #3                  // Method java/lang/Integer.intValue:()I
      24: invokevirtual #5                  // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getOffset:(I)J
      27: aload_2
      28: aload         4
      30: invokevirtual #3                  // Method java/lang/Integer.intValue:()I
      33: invokevirtual #6                  // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getLength:(I)J
      36: aload_2
      37: invokevirtual #7                  // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getLocations:()[Ljava/lang/String;
      40: invokespecial #8                  // Method org/apache/hadoop/mapreduce/lib/input/FileSplit."<init>":(Lorg/apache/hadoop/fs/Path;JJ[Ljava/lang/String;)V
      43: putfield      #9                  // Field fileSplit:Lorg/apache/hadoop/mapreduce/lib/input/FileSplit;
      46: aload_0
      47: aload_1
      48: aload_0
      49: getfield      #9                  // Field fileSplit:Lorg/apache/hadoop/mapreduce/lib/input/FileSplit;
      52: aload_3
      53: invokevirtual #10                 // Method org/apache/hadoop/mapreduce/lib/input/FileInputFormat.createRecordReader:(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
      56: putfield      #11                 // Field delegate:Lorg/apache/hadoop/mapreduce/RecordReader;
      59: return

  public void initialize(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: getstatic     #12                 // Field $assertionsDisabled:Z
       3: ifne          22
       6: aload_0
       7: aload_2
       8: invokespecial #13                 // Method fileSplitIsValid:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Z
      11: ifne          22
      14: new           #14                 // class java/lang/AssertionError
      17: dup
      18: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: aload_0
      23: getfield      #11                 // Field delegate:Lorg/apache/hadoop/mapreduce/RecordReader;
      26: aload_0
      27: getfield      #9                  // Field fileSplit:Lorg/apache/hadoop/mapreduce/lib/input/FileSplit;
      30: aload_2
      31: invokevirtual #16                 // Method org/apache/hadoop/mapreduce/RecordReader.initialize:(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
      34: return

  private boolean fileSplitIsValid(org.apache.hadoop.mapreduce.TaskAttemptContext);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: astore_2
       7: aload_2
       8: ldc           #19                 // String mapreduce.map.input.start
      10: lconst_0
      11: invokevirtual #20                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      14: lstore_3
      15: aload_0
      16: getfield      #9                  // Field fileSplit:Lorg/apache/hadoop/mapreduce/lib/input/FileSplit;
      19: invokevirtual #21                 // Method org/apache/hadoop/mapreduce/lib/input/FileSplit.getStart:()J
      22: lload_3
      23: lcmp
      24: ifeq          29
      27: iconst_0
      28: ireturn
      29: aload_2
      30: ldc           #22                 // String mapreduce.map.input.length
      32: lconst_0
      33: invokevirtual #20                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      36: lstore        5
      38: aload_0
      39: getfield      #9                  // Field fileSplit:Lorg/apache/hadoop/mapreduce/lib/input/FileSplit;
      42: invokevirtual #23                 // Method org/apache/hadoop/mapreduce/lib/input/FileSplit.getLength:()J
      45: lload         5
      47: lcmp
      48: ifeq          53
      51: iconst_0
      52: ireturn
      53: aload_2
      54: ldc           #24                 // String mapreduce.map.input.file
      56: invokevirtual #25                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      59: astore        7
      61: aload_0
      62: getfield      #9                  // Field fileSplit:Lorg/apache/hadoop/mapreduce/lib/input/FileSplit;
      65: invokevirtual #26                 // Method org/apache/hadoop/mapreduce/lib/input/FileSplit.getPath:()Lorg/apache/hadoop/fs/Path;
      68: invokevirtual #27                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      71: aload         7
      73: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifne          81
      79: iconst_0
      80: ireturn
      81: iconst_1
      82: ireturn

  public boolean nextKeyValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #29                 // Method org/apache/hadoop/mapreduce/RecordReader.nextKeyValue:()Z
       7: ireturn

  public K getCurrentKey() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #30                 // Method org/apache/hadoop/mapreduce/RecordReader.getCurrentKey:()Ljava/lang/Object;
       7: areturn

  public V getCurrentValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #31                 // Method org/apache/hadoop/mapreduce/RecordReader.getCurrentValue:()Ljava/lang/Object;
       7: areturn

  public float getProgress() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #32                 // Method org/apache/hadoop/mapreduce/RecordReader.getProgress:()F
       7: freturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #33                 // Method org/apache/hadoop/mapreduce/RecordReader.close:()V
       7: return

  static {};
    Code:
       0: ldc           #34                 // class org/apache/hadoop/mapreduce/lib/input/CombineFileRecordReaderWrapper
       2: invokevirtual #35                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #12                 // Field $assertionsDisabled:Z
      16: return
}
