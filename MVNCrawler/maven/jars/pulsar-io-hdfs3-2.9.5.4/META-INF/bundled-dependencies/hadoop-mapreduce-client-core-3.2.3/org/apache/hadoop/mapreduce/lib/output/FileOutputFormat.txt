Compiled from "FileOutputFormat.java"
public abstract class org.apache.hadoop.mapreduce.lib.output.FileOutputFormat<K, V> extends org.apache.hadoop.mapreduce.OutputFormat<K, V> {
  private static final org.slf4j.Logger LOG;

  private static final java.text.NumberFormat NUMBER_FORMAT;

  protected static final java.lang.String BASE_OUTPUT_NAME;

  protected static final java.lang.String PART;

  private org.apache.hadoop.mapreduce.lib.output.PathOutputCommitter committer;

  public static final java.lang.String COMPRESS;

  public static final java.lang.String COMPRESS_CODEC;

  public static final java.lang.String COMPRESS_TYPE;

  public static final java.lang.String OUTDIR;

  public org.apache.hadoop.mapreduce.lib.output.FileOutputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/OutputFormat."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field committer:Lorg/apache/hadoop/mapreduce/lib/output/PathOutputCommitter;
       9: return

  public static void setCompressOutput(org.apache.hadoop.mapreduce.Job, boolean);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: ldc           #5                  // String mapreduce.output.fileoutputformat.compress
       6: iload_1
       7: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
      10: return

  public static boolean getCompressOutput(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #5                  // String mapreduce.output.fileoutputformat.compress
       8: iconst_0
       9: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      12: ireturn

  public static void setOutputCompressorClass(org.apache.hadoop.mapreduce.Job, java.lang.Class<? extends org.apache.hadoop.io.compress.CompressionCodec>);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #9                  // Method setCompressOutput:(Lorg/apache/hadoop/mapreduce/Job;Z)V
       5: aload_0
       6: invokevirtual #3                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       9: ldc           #10                 // String mapreduce.output.fileoutputformat.compress.codec
      11: aload_1
      12: ldc           #11                 // class org/apache/hadoop/io/compress/CompressionCodec
      14: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      17: return

  public static java.lang.Class<? extends org.apache.hadoop.io.compress.CompressionCodec> getOutputCompressorClass(org.apache.hadoop.mapreduce.JobContext, java.lang.Class<? extends org.apache.hadoop.io.compress.CompressionCodec>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       8: astore_3
       9: aload_3
      10: ldc           #10                 // String mapreduce.output.fileoutputformat.compress.codec
      12: invokevirtual #13                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      15: astore        4
      17: aload         4
      19: ifnull        74
      22: aload_3
      23: aload         4
      25: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.getClassByName:(Ljava/lang/String;)Ljava/lang/Class;
      28: ldc           #11                 // class org/apache/hadoop/io/compress/CompressionCodec
      30: invokevirtual #15                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      33: astore_2
      34: goto          74
      37: astore        5
      39: new           #17                 // class java/lang/IllegalArgumentException
      42: dup
      43: new           #18                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #20                 // String Compression codec
      52: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload         4
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #22                 // String  was not found.
      62: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: aload         5
      70: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: athrow
      74: aload_2
      75: areturn
    Exception table:
       from    to  target type
          22    34    37   Class java/lang/ClassNotFoundException

  public abstract org.apache.hadoop.mapreduce.RecordWriter<K, V> getRecordWriter(org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;

  public void checkOutputSpecs(org.apache.hadoop.mapreduce.JobContext) throws org.apache.hadoop.mapred.FileAlreadyExistsException, java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method getOutputPath:(Lorg/apache/hadoop/mapreduce/JobContext;)Lorg/apache/hadoop/fs/Path;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #26                 // class org/apache/hadoop/mapred/InvalidJobConfException
      12: dup
      13: ldc           #27                 // String Output directory not set.
      15: invokespecial #28                 // Method org/apache/hadoop/mapred/InvalidJobConfException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getCredentials:()Lorg/apache/hadoop/security/Credentials;
      25: iconst_1
      26: anewarray     #30                 // class org/apache/hadoop/fs/Path
      29: dup
      30: iconst_0
      31: aload_2
      32: aastore
      33: aload_1
      34: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      39: invokestatic  #31                 // Method org/apache/hadoop/mapreduce/security/TokenCache.obtainTokensForNamenodes:(Lorg/apache/hadoop/security/Credentials;[Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
      42: aload_2
      43: aload_1
      44: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      49: invokevirtual #32                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      52: aload_2
      53: invokevirtual #33                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      56: ifeq          91
      59: new           #34                 // class org/apache/hadoop/mapred/FileAlreadyExistsException
      62: dup
      63: new           #18                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #35                 // String Output directory
      72: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_2
      76: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #37                 // String  already exists
      81: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #38                 // Method org/apache/hadoop/mapred/FileAlreadyExistsException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: return

  public static void setOutputPath(org.apache.hadoop.mapreduce.Job, org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #3                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       5: invokevirtual #32                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: aload_1
       9: invokevirtual #39                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      12: astore_1
      13: goto          26
      16: astore_2
      17: new           #41                 // class java/lang/RuntimeException
      20: dup
      21: aload_2
      22: invokespecial #42                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
      26: aload_0
      27: invokevirtual #3                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      30: ldc           #43                 // String mapreduce.output.fileoutputformat.outputdir
      32: aload_1
      33: invokevirtual #44                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      36: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      39: return
    Exception table:
       from    to  target type
           0    13    16   Class java/io/IOException

  public static org.apache.hadoop.fs.Path getOutputPath(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #43                 // String mapreduce.output.fileoutputformat.outputdir
       8: invokevirtual #13                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: ifnonnull     20
      16: aconst_null
      17: goto          28
      20: new           #30                 // class org/apache/hadoop/fs/Path
      23: dup
      24: aload_1
      25: invokespecial #46                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      28: areturn

  public static org.apache.hadoop.fs.Path getWorkOutputPath(org.apache.hadoop.mapreduce.TaskInputOutputContext<?, ?, ?, ?>) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokeinterface #47,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskInputOutputContext.getOutputCommitter:()Lorg/apache/hadoop/mapreduce/OutputCommitter;
       6: checkcast     #48                 // class org/apache/hadoop/mapreduce/lib/output/PathOutputCommitter
       9: astore_1
      10: aload_1
      11: invokevirtual #49                 // Method org/apache/hadoop/mapreduce/lib/output/PathOutputCommitter.getWorkPath:()Lorg/apache/hadoop/fs/Path;
      14: astore_2
      15: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      18: ldc           #51                 // String Work path is {}
      20: aload_2
      21: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      26: aload_2
      27: areturn

  public static org.apache.hadoop.fs.Path getPathForWorkFile(org.apache.hadoop.mapreduce.TaskInputOutputContext<?, ?, ?, ?>, java.lang.String, java.lang.String) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: new           #30                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: invokestatic  #53                 // Method getWorkOutputPath:(Lorg/apache/hadoop/mapreduce/TaskInputOutputContext;)Lorg/apache/hadoop/fs/Path;
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokestatic  #54                 // Method getUniqueFile:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      14: invokespecial #55                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      17: areturn

  public static synchronized java.lang.String getUniqueFile(org.apache.hadoop.mapreduce.TaskAttemptContext, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getTaskAttemptID:()Lorg/apache/hadoop/mapreduce/TaskAttemptID;
       6: invokevirtual #57                 // Method org/apache/hadoop/mapreduce/TaskAttemptID.getTaskID:()Lorg/apache/hadoop/mapreduce/TaskID;
       9: astore_3
      10: aload_3
      11: invokevirtual #58                 // Method org/apache/hadoop/mapreduce/TaskID.getId:()I
      14: istore        4
      16: new           #18                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      23: astore        5
      25: aload         5
      27: aload_1
      28: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload         5
      34: bipush        45
      36: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: pop
      40: aload         5
      42: aload_3
      43: invokevirtual #60                 // Method org/apache/hadoop/mapreduce/TaskID.getTaskType:()Lorg/apache/hadoop/mapreduce/TaskType;
      46: invokestatic  #61                 // Method org/apache/hadoop/mapreduce/TaskID.getRepresentingCharacter:(Lorg/apache/hadoop/mapreduce/TaskType;)C
      49: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      52: pop
      53: aload         5
      55: bipush        45
      57: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: pop
      61: aload         5
      63: getstatic     #62                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      66: iload         4
      68: i2l
      69: invokevirtual #63                 // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
      72: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: aload         5
      78: aload_2
      79: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload         5
      85: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: areturn

  public org.apache.hadoop.fs.Path getDefaultWorkFile(org.apache.hadoop.mapreduce.TaskAttemptContext, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method getOutputCommitter:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;
       5: astore_3
       6: aload_3
       7: instanceof    #48                 // class org/apache/hadoop/mapreduce/lib/output/PathOutputCommitter
      10: ldc           #65                 // String Committer %s is not a PathOutputCommitter
      12: aload_3
      13: invokestatic  #66                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      16: aload_3
      17: checkcast     #48                 // class org/apache/hadoop/mapreduce/lib/output/PathOutputCommitter
      20: invokevirtual #49                 // Method org/apache/hadoop/mapreduce/lib/output/PathOutputCommitter.getWorkPath:()Lorg/apache/hadoop/fs/Path;
      23: astore        4
      25: aload         4
      27: ldc           #67                 // String Null workPath returned by committer %s
      29: aload_3
      30: invokestatic  #68                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: new           #30                 // class org/apache/hadoop/fs/Path
      37: dup
      38: aload         4
      40: aload_1
      41: aload_1
      42: invokestatic  #69                 // Method getOutputName:(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/String;
      45: aload_2
      46: invokestatic  #54                 // Method getUniqueFile:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      49: invokespecial #55                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      52: astore        5
      54: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      57: ldc           #70                 // String Work file for {} extension \'{}\' is {}
      59: iconst_3
      60: anewarray     #71                 // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload_1
      66: aastore
      67: dup
      68: iconst_1
      69: aload_2
      70: aastore
      71: dup
      72: iconst_2
      73: aload         5
      75: aastore
      76: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      81: aload         5
      83: areturn

  protected static java.lang.String getOutputName(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #73                 // String mapreduce.output.basename
       8: ldc           #74                 // String part
      10: invokevirtual #75                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  protected static void setOutputName(org.apache.hadoop.mapreduce.JobContext, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: ldc           #73                 // String mapreduce.output.basename
       8: aload_1
       9: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public synchronized org.apache.hadoop.mapreduce.OutputCommitter getOutputCommitter(org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field committer:Lorg/apache/hadoop/mapreduce/lib/output/PathOutputCommitter;
       4: ifnonnull     31
       7: aload_1
       8: invokestatic  #25                 // Method getOutputPath:(Lorg/apache/hadoop/mapreduce/JobContext;)Lorg/apache/hadoop/fs/Path;
      11: astore_2
      12: aload_0
      13: aload_2
      14: aload_1
      15: invokeinterface #76,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      20: invokestatic  #77                 // Method org/apache/hadoop/mapreduce/lib/output/PathOutputCommitterFactory.getCommitterFactory:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/mapreduce/lib/output/PathOutputCommitterFactory;
      23: aload_2
      24: aload_1
      25: invokevirtual #78                 // Method org/apache/hadoop/mapreduce/lib/output/PathOutputCommitterFactory.createOutputCommitter:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/lib/output/PathOutputCommitter;
      28: putfield      #2                  // Field committer:Lorg/apache/hadoop/mapreduce/lib/output/PathOutputCommitter;
      31: aload_0
      32: getfield      #2                  // Field committer:Lorg/apache/hadoop/mapreduce/lib/output/PathOutputCommitter;
      35: areturn

  static {};
    Code:
       0: ldc           #4                  // class org/apache/hadoop/mapreduce/lib/output/FileOutputFormat
       2: invokestatic  #79                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
       8: invokestatic  #80                 // Method java/text/NumberFormat.getInstance:()Ljava/text/NumberFormat;
      11: putstatic     #62                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      14: getstatic     #62                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      17: iconst_5
      18: invokevirtual #81                 // Method java/text/NumberFormat.setMinimumIntegerDigits:(I)V
      21: getstatic     #62                 // Field NUMBER_FORMAT:Ljava/text/NumberFormat;
      24: iconst_0
      25: invokevirtual #82                 // Method java/text/NumberFormat.setGroupingUsed:(Z)V
      28: return
}
