Compiled from "ReduceTask.java"
class org.apache.hadoop.mapred.ReduceTask$SkippingReduceValuesIterator<KEY, VALUE> extends org.apache.hadoop.mapred.ReduceTask$ReduceValuesIterator<KEY, VALUE> {
  private org.apache.hadoop.mapred.SortedRanges$SkipRangeIterator skipIt;

  private org.apache.hadoop.mapred.TaskUmbilicalProtocol umbilical;

  private org.apache.hadoop.mapred.Counters$Counter skipGroupCounter;

  private org.apache.hadoop.mapred.Counters$Counter skipRecCounter;

  private long grpIndex;

  private java.lang.Class<KEY> keyClass;

  private java.lang.Class<VALUE> valClass;

  private org.apache.hadoop.io.SequenceFile$Writer skipWriter;

  private boolean toWriteSkipRecs;

  private boolean hasNext;

  private org.apache.hadoop.mapred.Task$TaskReporter reporter;

  final org.apache.hadoop.mapred.ReduceTask this$0;

  public org.apache.hadoop.mapred.ReduceTask$SkippingReduceValuesIterator(org.apache.hadoop.mapred.RawKeyValueIterator, org.apache.hadoop.io.RawComparator<KEY>, java.lang.Class<KEY>, java.lang.Class<VALUE>, org.apache.hadoop.conf.Configuration, org.apache.hadoop.mapred.Task$TaskReporter, org.apache.hadoop.mapred.TaskUmbilicalProtocol) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/mapred/ReduceTask;
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: aload         4
      11: aload         5
      13: aload         6
      15: aload         7
      17: invokespecial #2                  // Method org/apache/hadoop/mapred/ReduceTask$ReduceValuesIterator."<init>":(Lorg/apache/hadoop/mapred/ReduceTask;Lorg/apache/hadoop/mapred/RawKeyValueIterator;Lorg/apache/hadoop/io/RawComparator;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/util/Progressable;)V
      20: aload_0
      21: ldc2_w        #3                  // long -1l
      24: putfield      #5                  // Field grpIndex:J
      27: aload_0
      28: aload         8
      30: putfield      #6                  // Field umbilical:Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;
      33: aload_0
      34: aload         7
      36: getstatic     #7                  // Field org/apache/hadoop/mapreduce/TaskCounter.REDUCE_SKIPPED_GROUPS:Lorg/apache/hadoop/mapreduce/TaskCounter;
      39: invokevirtual #8                  // Method org/apache/hadoop/mapred/Task$TaskReporter.getCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapred/Counters$Counter;
      42: putfield      #9                  // Field skipGroupCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      45: aload_0
      46: aload         7
      48: getstatic     #10                 // Field org/apache/hadoop/mapreduce/TaskCounter.REDUCE_SKIPPED_RECORDS:Lorg/apache/hadoop/mapreduce/TaskCounter;
      51: invokevirtual #8                  // Method org/apache/hadoop/mapred/Task$TaskReporter.getCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapred/Counters$Counter;
      54: putfield      #11                 // Field skipRecCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
      57: aload_0
      58: aload_1
      59: invokevirtual #12                 // Method org/apache/hadoop/mapred/ReduceTask.toWriteSkipRecs:()Z
      62: ifeq          77
      65: aload         6
      67: invokestatic  #13                 // Method org/apache/hadoop/mapred/SkipBadRecords.getSkipOutputPath:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      70: ifnull        77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: putfield      #14                 // Field toWriteSkipRecs:Z
      81: aload_0
      82: aload         4
      84: putfield      #15                 // Field keyClass:Ljava/lang/Class;
      87: aload_0
      88: aload         5
      90: putfield      #16                 // Field valClass:Ljava/lang/Class;
      93: aload_0
      94: aload         7
      96: putfield      #17                 // Field reporter:Lorg/apache/hadoop/mapred/Task$TaskReporter;
      99: aload_0
     100: aload_1
     101: invokevirtual #18                 // Method org/apache/hadoop/mapred/ReduceTask.getSkipRanges:()Lorg/apache/hadoop/mapred/SortedRanges;
     104: invokevirtual #19                 // Method org/apache/hadoop/mapred/SortedRanges.skipRangeIterator:()Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
     107: putfield      #20                 // Field skipIt:Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
     110: aload_0
     111: invokespecial #21                 // Method mayBeSkip:()V
     114: return

  public void nextKey() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/apache/hadoop/mapred/ReduceTask$ReduceValuesIterator.nextKey:()V
       4: aload_0
       5: invokespecial #21                 // Method mayBeSkip:()V
       8: return

  public boolean more();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/apache/hadoop/mapred/ReduceTask$ReduceValuesIterator.more:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #24                 // Field hasNext:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void mayBeSkip() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field skipIt:Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
       5: invokevirtual #25                 // Method org/apache/hadoop/mapred/SortedRanges$SkipRangeIterator.hasNext:()Z
       8: putfield      #24                 // Field hasNext:Z
      11: aload_0
      12: getfield      #24                 // Field hasNext:Z
      15: ifne          29
      18: invokestatic  #26                 // Method org/apache/hadoop/mapred/ReduceTask.access$200:()Lorg/slf4j/Logger;
      21: ldc           #27                 // String Further groups got skipped.
      23: invokeinterface #28,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      28: return
      29: aload_0
      30: dup
      31: getfield      #5                  // Field grpIndex:J
      34: lconst_1
      35: ladd
      36: putfield      #5                  // Field grpIndex:J
      39: aload_0
      40: getfield      #20                 // Field skipIt:Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
      43: invokevirtual #29                 // Method org/apache/hadoop/mapred/SortedRanges$SkipRangeIterator.next:()Ljava/lang/Long;
      46: invokevirtual #30                 // Method java/lang/Long.longValue:()J
      49: lstore_1
      50: lconst_0
      51: lstore_3
      52: lconst_0
      53: lstore        5
      55: aload_0
      56: getfield      #5                  // Field grpIndex:J
      59: lload_1
      60: lcmp
      61: ifge          131
      64: aload_0
      65: invokespecial #23                 // Method org/apache/hadoop/mapred/ReduceTask$ReduceValuesIterator.more:()Z
      68: ifeq          131
      71: aload_0
      72: invokevirtual #31                 // Method hasNext:()Z
      75: ifeq          110
      78: aload_0
      79: invokevirtual #32                 // Method moveToNext:()Ljava/lang/Object;
      82: astore        7
      84: aload_0
      85: getfield      #14                 // Field toWriteSkipRecs:Z
      88: ifeq          101
      91: aload_0
      92: aload_0
      93: invokevirtual #33                 // Method getKey:()Ljava/lang/Object;
      96: aload         7
      98: invokespecial #34                 // Method writeSkippedRec:(Ljava/lang/Object;Ljava/lang/Object;)V
     101: lload         5
     103: lconst_1
     104: ladd
     105: lstore        5
     107: goto          71
     110: aload_0
     111: invokespecial #22                 // Method org/apache/hadoop/mapred/ReduceTask$ReduceValuesIterator.nextKey:()V
     114: aload_0
     115: dup
     116: getfield      #5                  // Field grpIndex:J
     119: lconst_1
     120: ladd
     121: putfield      #5                  // Field grpIndex:J
     124: lload_3
     125: lconst_1
     126: ladd
     127: lstore_3
     128: goto          55
     131: lload_3
     132: lconst_0
     133: lcmp
     134: ifle          161
     137: aload_0
     138: getfield      #20                 // Field skipIt:Lorg/apache/hadoop/mapred/SortedRanges$SkipRangeIterator;
     141: invokevirtual #35                 // Method org/apache/hadoop/mapred/SortedRanges$SkipRangeIterator.skippedAllRanges:()Z
     144: ifeq          161
     147: aload_0
     148: getfield      #36                 // Field skipWriter:Lorg/apache/hadoop/io/SequenceFile$Writer;
     151: ifnull        161
     154: aload_0
     155: getfield      #36                 // Field skipWriter:Lorg/apache/hadoop/io/SequenceFile$Writer;
     158: invokevirtual #37                 // Method org/apache/hadoop/io/SequenceFile$Writer.close:()V
     161: aload_0
     162: getfield      #9                  // Field skipGroupCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     165: lload_3
     166: invokevirtual #38                 // Method org/apache/hadoop/mapred/Counters$Counter.increment:(J)V
     169: aload_0
     170: getfield      #11                 // Field skipRecCounter:Lorg/apache/hadoop/mapred/Counters$Counter;
     173: lload         5
     175: invokevirtual #38                 // Method org/apache/hadoop/mapred/Counters$Counter.increment:(J)V
     178: aload_0
     179: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapred/ReduceTask;
     182: aload_0
     183: getfield      #6                  // Field umbilical:Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;
     186: aload_0
     187: getfield      #5                  // Field grpIndex:J
     190: invokevirtual #39                 // Method org/apache/hadoop/mapred/ReduceTask.reportNextRecordRange:(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;J)V
     193: return

  private void writeSkippedRec(KEY, VALUE) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field skipWriter:Lorg/apache/hadoop/io/SequenceFile$Writer;
       4: ifnonnull     81
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapred/ReduceTask;
      11: getfield      #40                 // Field org/apache/hadoop/mapred/ReduceTask.conf:Lorg/apache/hadoop/mapred/JobConf;
      14: invokestatic  #13                 // Method org/apache/hadoop/mapred/SkipBadRecords.getSkipOutputPath:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      17: astore_3
      18: new           #41                 // class org/apache/hadoop/fs/Path
      21: dup
      22: aload_3
      23: aload_0
      24: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapred/ReduceTask;
      27: invokevirtual #42                 // Method org/apache/hadoop/mapred/ReduceTask.getTaskID:()Lorg/apache/hadoop/mapred/TaskAttemptID;
      30: invokevirtual #43                 // Method org/apache/hadoop/mapred/TaskAttemptID.toString:()Ljava/lang/String;
      33: invokespecial #44                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      36: astore        4
      38: aload_0
      39: aload         4
      41: aload_0
      42: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapred/ReduceTask;
      45: getfield      #40                 // Field org/apache/hadoop/mapred/ReduceTask.conf:Lorg/apache/hadoop/mapred/JobConf;
      48: invokevirtual #45                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      51: aload_0
      52: getfield      #1                  // Field this$0:Lorg/apache/hadoop/mapred/ReduceTask;
      55: getfield      #40                 // Field org/apache/hadoop/mapred/ReduceTask.conf:Lorg/apache/hadoop/mapred/JobConf;
      58: aload         4
      60: aload_0
      61: getfield      #15                 // Field keyClass:Ljava/lang/Class;
      64: aload_0
      65: getfield      #16                 // Field valClass:Ljava/lang/Class;
      68: getstatic     #46                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.BLOCK:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      71: aload_0
      72: getfield      #17                 // Field reporter:Lorg/apache/hadoop/mapred/Task$TaskReporter;
      75: invokestatic  #47                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      78: putfield      #36                 // Field skipWriter:Lorg/apache/hadoop/io/SequenceFile$Writer;
      81: aload_0
      82: getfield      #36                 // Field skipWriter:Lorg/apache/hadoop/io/SequenceFile$Writer;
      85: aload_1
      86: aload_2
      87: invokevirtual #48                 // Method org/apache/hadoop/io/SequenceFile$Writer.append:(Ljava/lang/Object;Ljava/lang/Object;)V
      90: return
}
