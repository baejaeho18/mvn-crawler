Compiled from "MultithreadedMapper.java"
class org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapStatusReporter extends org.apache.hadoop.mapreduce.StatusReporter {
  final org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper this$0;

  private org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapStatusReporter(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       5: aload_0
       6: invokespecial #3                  // Method org/apache/hadoop/mapreduce/StatusReporter."<init>":()V
       9: return

  public org.apache.hadoop.mapreduce.Counter getCounter(java.lang.Enum<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       4: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
       7: aload_1
       8: invokevirtual #5                  // Method org/apache/hadoop/mapreduce/Mapper$Context.getCounter:(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
      11: areturn

  public org.apache.hadoop.mapreduce.Counter getCounter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       4: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
       7: aload_1
       8: aload_2
       9: invokevirtual #6                  // Method org/apache/hadoop/mapreduce/Mapper$Context.getCounter:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Counter;
      12: areturn

  public void progress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       4: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
       7: invokevirtual #7                  // Method org/apache/hadoop/mapreduce/Mapper$Context.progress:()V
      10: return

  public void setStatus(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       4: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
       7: aload_1
       8: invokevirtual #8                  // Method org/apache/hadoop/mapreduce/Mapper$Context.setStatus:(Ljava/lang/String;)V
      11: return

  public float getProgress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;
       4: invokestatic  #4                  // Method org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper.access$100:(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)Lorg/apache/hadoop/mapreduce/Mapper$Context;
       7: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/Mapper$Context.getProgress:()F
      10: freturn

  org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapStatusReporter(org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper, org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/mapreduce/lib/map/MultithreadedMapper;)V
       5: return
}
