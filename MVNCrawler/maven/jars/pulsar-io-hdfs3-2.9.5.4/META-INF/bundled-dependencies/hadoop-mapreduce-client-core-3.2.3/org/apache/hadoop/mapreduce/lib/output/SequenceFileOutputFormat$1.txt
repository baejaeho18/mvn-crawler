Compiled from "SequenceFileOutputFormat.java"
class org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat$1 extends org.apache.hadoop.mapreduce.RecordWriter<K, V> {
  final org.apache.hadoop.io.SequenceFile$Writer val$out;

  final org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat this$0;

  org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat$1(org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat, org.apache.hadoop.io.SequenceFile$Writer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$out:Lorg/apache/hadoop/io/SequenceFile$Writer;
      10: aload_0
      11: invokespecial #3                  // Method org/apache/hadoop/mapreduce/RecordWriter."<init>":()V
      14: return

  public void write(K, V) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$out:Lorg/apache/hadoop/io/SequenceFile$Writer;
       4: aload_1
       5: aload_2
       6: invokevirtual #4                  // Method org/apache/hadoop/io/SequenceFile$Writer.append:(Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  public void close(org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$out:Lorg/apache/hadoop/io/SequenceFile$Writer;
       4: invokevirtual #5                  // Method org/apache/hadoop/io/SequenceFile$Writer.close:()V
       7: return
}
