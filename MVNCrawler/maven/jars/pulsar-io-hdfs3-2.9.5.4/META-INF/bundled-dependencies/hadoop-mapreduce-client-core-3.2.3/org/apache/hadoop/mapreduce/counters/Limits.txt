Compiled from "Limits.java"
public class org.apache.hadoop.mapreduce.counters.Limits {
  private int totalCounters;

  private org.apache.hadoop.mapreduce.counters.LimitExceededException firstViolation;

  private static boolean isInited;

  private static int GROUP_NAME_MAX;

  private static int COUNTER_NAME_MAX;

  private static int GROUPS_MAX;

  private static int COUNTERS_MAX;

  public org.apache.hadoop.mapreduce.counters.Limits();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static synchronized void init(org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #3                  // Field isInited:Z
       3: ifne          63
       6: aload_0
       7: ifnonnull     18
      10: new           #4                  // class org/apache/hadoop/mapred/JobConf
      13: dup
      14: invokespecial #5                  // Method org/apache/hadoop/mapred/JobConf."<init>":()V
      17: astore_0
      18: aload_0
      19: ldc           #6                  // String mapreduce.job.counters.group.name.max
      21: sipush        128
      24: invokevirtual #7                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      27: putstatic     #8                  // Field GROUP_NAME_MAX:I
      30: aload_0
      31: ldc           #9                  // String mapreduce.job.counters.counter.name.max
      33: bipush        64
      35: invokevirtual #7                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      38: putstatic     #10                 // Field COUNTER_NAME_MAX:I
      41: aload_0
      42: ldc           #11                 // String mapreduce.job.counters.groups.max
      44: bipush        50
      46: invokevirtual #7                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      49: putstatic     #12                 // Field GROUPS_MAX:I
      52: aload_0
      53: ldc           #13                 // String mapreduce.job.counters.max
      55: bipush        120
      57: invokevirtual #7                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      60: putstatic     #14                 // Field COUNTERS_MAX:I
      63: iconst_1
      64: putstatic     #3                  // Field isInited:Z
      67: return

  public static int getGroupNameMax();
    Code:
       0: getstatic     #3                  // Field isInited:Z
       3: ifne          10
       6: aconst_null
       7: invokestatic  #15                 // Method init:(Lorg/apache/hadoop/conf/Configuration;)V
      10: getstatic     #8                  // Field GROUP_NAME_MAX:I
      13: ireturn

  public static int getCounterNameMax();
    Code:
       0: getstatic     #3                  // Field isInited:Z
       3: ifne          10
       6: aconst_null
       7: invokestatic  #15                 // Method init:(Lorg/apache/hadoop/conf/Configuration;)V
      10: getstatic     #10                 // Field COUNTER_NAME_MAX:I
      13: ireturn

  public static int getGroupsMax();
    Code:
       0: getstatic     #3                  // Field isInited:Z
       3: ifne          10
       6: aconst_null
       7: invokestatic  #15                 // Method init:(Lorg/apache/hadoop/conf/Configuration;)V
      10: getstatic     #12                 // Field GROUPS_MAX:I
      13: ireturn

  public static int getCountersMax();
    Code:
       0: getstatic     #3                  // Field isInited:Z
       3: ifne          10
       6: aconst_null
       7: invokestatic  #15                 // Method init:(Lorg/apache/hadoop/conf/Configuration;)V
      10: getstatic     #14                 // Field COUNTERS_MAX:I
      13: ireturn

  public static java.lang.String filterName(java.lang.String, int);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/lang/String.length:()I
       4: iload_1
       5: if_icmple     19
       8: aload_0
       9: iconst_0
      10: iload_1
      11: iconst_1
      12: isub
      13: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      16: goto          20
      19: aload_0
      20: areturn

  public static java.lang.String filterCounterName(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method getCounterNameMax:()I
       4: invokestatic  #19                 // Method filterName:(Ljava/lang/String;I)Ljava/lang/String;
       7: areturn

  public static java.lang.String filterGroupName(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method getGroupNameMax:()I
       4: invokestatic  #19                 // Method filterName:(Ljava/lang/String;I)Ljava/lang/String;
       7: areturn

  public synchronized void checkCounters(int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
       4: ifnull        19
       7: new           #22                 // class org/apache/hadoop/mapreduce/counters/LimitExceededException
      10: dup
      11: aload_0
      12: getfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
      15: invokespecial #23                 // Method org/apache/hadoop/mapreduce/counters/LimitExceededException."<init>":(Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;)V
      18: athrow
      19: invokestatic  #24                 // Method getCountersMax:()I
      22: istore_2
      23: iload_1
      24: iload_2
      25: if_icmple     72
      28: aload_0
      29: new           #22                 // class org/apache/hadoop/mapreduce/counters/LimitExceededException
      32: dup
      33: new           #25                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #27                 // String Too many counters:
      42: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_1
      46: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #30                 // String  max=
      51: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload_2
      55: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #32                 // Method org/apache/hadoop/mapreduce/counters/LimitExceededException."<init>":(Ljava/lang/String;)V
      64: putfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
      67: aload_0
      68: getfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
      71: athrow
      72: return

  public synchronized void incrCounters();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field totalCounters:I
       5: iconst_1
       6: iadd
       7: invokevirtual #34                 // Method checkCounters:(I)V
      10: aload_0
      11: dup
      12: getfield      #33                 // Field totalCounters:I
      15: iconst_1
      16: iadd
      17: putfield      #33                 // Field totalCounters:I
      20: return

  public synchronized void checkGroups(int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
       4: ifnull        19
       7: new           #22                 // class org/apache/hadoop/mapreduce/counters/LimitExceededException
      10: dup
      11: aload_0
      12: getfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
      15: invokespecial #23                 // Method org/apache/hadoop/mapreduce/counters/LimitExceededException."<init>":(Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;)V
      18: athrow
      19: invokestatic  #35                 // Method getGroupsMax:()I
      22: istore_2
      23: iload_1
      24: iload_2
      25: if_icmple     67
      28: aload_0
      29: new           #22                 // class org/apache/hadoop/mapreduce/counters/LimitExceededException
      32: dup
      33: new           #25                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #36                 // String Too many counter groups:
      42: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_1
      46: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #30                 // String  max=
      51: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload_2
      55: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #32                 // Method org/apache/hadoop/mapreduce/counters/LimitExceededException."<init>":(Ljava/lang/String;)V
      64: putfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
      67: return

  public synchronized org.apache.hadoop.mapreduce.counters.LimitExceededException violation();
    Code:
       0: aload_0
       1: getfield      #21                 // Field firstViolation:Lorg/apache/hadoop/mapreduce/counters/LimitExceededException;
       4: areturn
}
