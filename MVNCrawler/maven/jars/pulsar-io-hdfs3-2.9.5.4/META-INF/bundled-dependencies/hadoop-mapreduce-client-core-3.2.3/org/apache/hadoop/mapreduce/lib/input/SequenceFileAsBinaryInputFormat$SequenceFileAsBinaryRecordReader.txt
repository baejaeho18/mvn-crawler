Compiled from "SequenceFileAsBinaryInputFormat.java"
public class org.apache.hadoop.mapreduce.lib.input.SequenceFileAsBinaryInputFormat$SequenceFileAsBinaryRecordReader extends org.apache.hadoop.mapreduce.RecordReader<org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable> {
  private org.apache.hadoop.io.SequenceFile$Reader in;

  private long start;

  private long end;

  private boolean done;

  private org.apache.hadoop.io.DataOutputBuffer buffer;

  private org.apache.hadoop.io.SequenceFile$ValueBytes vbytes;

  private org.apache.hadoop.io.BytesWritable key;

  private org.apache.hadoop.io.BytesWritable value;

  public org.apache.hadoop.mapreduce.lib.input.SequenceFileAsBinaryInputFormat$SequenceFileAsBinaryRecordReader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/RecordReader."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field done:Z
       9: aload_0
      10: new           #3                  // class org/apache/hadoop/io/DataOutputBuffer
      13: dup
      14: invokespecial #4                  // Method org/apache/hadoop/io/DataOutputBuffer."<init>":()V
      17: putfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field key:Lorg/apache/hadoop/io/BytesWritable;
      25: aload_0
      26: aconst_null
      27: putfield      #7                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
      30: return

  public void initialize(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: checkcast     #8                  // class org/apache/hadoop/mapreduce/lib/input/FileSplit
       4: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/lib/input/FileSplit.getPath:()Lorg/apache/hadoop/fs/Path;
       7: astore_3
       8: aload_2
       9: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      14: astore        4
      16: aload_3
      17: aload         4
      19: invokevirtual #11                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      22: astore        5
      24: aload_0
      25: new           #12                 // class org/apache/hadoop/io/SequenceFile$Reader
      28: dup
      29: aload         5
      31: aload_3
      32: aload         4
      34: invokespecial #13                 // Method org/apache/hadoop/io/SequenceFile$Reader."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
      37: putfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      40: aload_0
      41: aload_1
      42: checkcast     #8                  // class org/apache/hadoop/mapreduce/lib/input/FileSplit
      45: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/lib/input/FileSplit.getStart:()J
      48: aload_1
      49: invokevirtual #16                 // Method org/apache/hadoop/mapreduce/InputSplit.getLength:()J
      52: ladd
      53: putfield      #17                 // Field end:J
      56: aload_1
      57: checkcast     #8                  // class org/apache/hadoop/mapreduce/lib/input/FileSplit
      60: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/lib/input/FileSplit.getStart:()J
      63: aload_0
      64: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      67: invokevirtual #18                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      70: lcmp
      71: ifle          88
      74: aload_0
      75: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      78: aload_1
      79: checkcast     #8                  // class org/apache/hadoop/mapreduce/lib/input/FileSplit
      82: invokevirtual #15                 // Method org/apache/hadoop/mapreduce/lib/input/FileSplit.getStart:()J
      85: invokevirtual #19                 // Method org/apache/hadoop/io/SequenceFile$Reader.sync:(J)V
      88: aload_0
      89: aload_0
      90: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      93: invokevirtual #18                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      96: putfield      #20                 // Field start:J
      99: aload_0
     100: aload_0
     101: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
     104: invokevirtual #21                 // Method org/apache/hadoop/io/SequenceFile$Reader.createValueBytes:()Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
     107: putfield      #22                 // Field vbytes:Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
     110: aload_0
     111: aload_0
     112: getfield      #20                 // Field start:J
     115: aload_0
     116: getfield      #17                 // Field end:J
     119: lcmp
     120: iflt          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: putfield      #2                  // Field done:Z
     131: return

  public org.apache.hadoop.io.BytesWritable getCurrentKey() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field key:Lorg/apache/hadoop/io/BytesWritable;
       4: areturn

  public org.apache.hadoop.io.BytesWritable getCurrentValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
       4: areturn

  public java.lang.String getKeyClassName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #23                 // Method org/apache/hadoop/io/SequenceFile$Reader.getKeyClassName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getValueClassName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #24                 // Method org/apache/hadoop/io/SequenceFile$Reader.getValueClassName:()Ljava/lang/String;
       7: areturn

  public synchronized boolean nextKeyValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field done:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      13: invokevirtual #18                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      16: lstore_1
      17: iconst_m1
      18: aload_0
      19: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      22: aload_0
      23: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      26: invokevirtual #25                 // Method org/apache/hadoop/io/SequenceFile$Reader.nextRawKey:(Lorg/apache/hadoop/io/DataOutputBuffer;)I
      29: if_icmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: istore_3
      38: iload_3
      39: ifne          163
      42: aload_0
      43: getfield      #6                  // Field key:Lorg/apache/hadoop/io/BytesWritable;
      46: ifnonnull     60
      49: aload_0
      50: new           #26                 // class org/apache/hadoop/io/BytesWritable
      53: dup
      54: invokespecial #27                 // Method org/apache/hadoop/io/BytesWritable."<init>":()V
      57: putfield      #6                  // Field key:Lorg/apache/hadoop/io/BytesWritable;
      60: aload_0
      61: getfield      #7                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
      64: ifnonnull     78
      67: aload_0
      68: new           #26                 // class org/apache/hadoop/io/BytesWritable
      71: dup
      72: invokespecial #27                 // Method org/apache/hadoop/io/BytesWritable."<init>":()V
      75: putfield      #7                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
      78: aload_0
      79: getfield      #6                  // Field key:Lorg/apache/hadoop/io/BytesWritable;
      82: aload_0
      83: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      86: invokevirtual #28                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
      89: iconst_0
      90: aload_0
      91: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
      94: invokevirtual #29                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
      97: invokevirtual #30                 // Method org/apache/hadoop/io/BytesWritable.set:([BII)V
     100: aload_0
     101: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     104: invokevirtual #31                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
     107: pop
     108: aload_0
     109: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
     112: aload_0
     113: getfield      #22                 // Field vbytes:Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
     116: invokevirtual #32                 // Method org/apache/hadoop/io/SequenceFile$Reader.nextRawValue:(Lorg/apache/hadoop/io/SequenceFile$ValueBytes;)I
     119: pop
     120: aload_0
     121: getfield      #22                 // Field vbytes:Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
     124: aload_0
     125: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     128: invokeinterface #33,  2           // InterfaceMethod org/apache/hadoop/io/SequenceFile$ValueBytes.writeUncompressedBytes:(Ljava/io/DataOutputStream;)V
     133: aload_0
     134: getfield      #7                  // Field value:Lorg/apache/hadoop/io/BytesWritable;
     137: aload_0
     138: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     141: invokevirtual #28                 // Method org/apache/hadoop/io/DataOutputBuffer.getData:()[B
     144: iconst_0
     145: aload_0
     146: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     149: invokevirtual #29                 // Method org/apache/hadoop/io/DataOutputBuffer.getLength:()I
     152: invokevirtual #30                 // Method org/apache/hadoop/io/BytesWritable.set:([BII)V
     155: aload_0
     156: getfield      #5                  // Field buffer:Lorg/apache/hadoop/io/DataOutputBuffer;
     159: invokevirtual #31                 // Method org/apache/hadoop/io/DataOutputBuffer.reset:()Lorg/apache/hadoop/io/DataOutputBuffer;
     162: pop
     163: aload_0
     164: iload_3
     165: ifne          187
     168: lload_1
     169: aload_0
     170: getfield      #17                 // Field end:J
     173: lcmp
     174: iflt          191
     177: aload_0
     178: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
     181: invokevirtual #34                 // Method org/apache/hadoop/io/SequenceFile$Reader.syncSeen:()Z
     184: ifeq          191
     187: iconst_1
     188: goto          192
     191: iconst_0
     192: dup_x1
     193: putfield      #2                  // Field done:Z
     196: ifne          203
     199: iconst_1
     200: goto          204
     203: iconst_0
     204: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
       4: invokevirtual #35                 // Method org/apache/hadoop/io/SequenceFile$Reader.close:()V
       7: return

  public float getProgress() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field end:J
       4: aload_0
       5: getfield      #20                 // Field start:J
       8: lcmp
       9: ifne          14
      12: fconst_0
      13: freturn
      14: fconst_1
      15: aload_0
      16: getfield      #14                 // Field in:Lorg/apache/hadoop/io/SequenceFile$Reader;
      19: invokevirtual #18                 // Method org/apache/hadoop/io/SequenceFile$Reader.getPosition:()J
      22: aload_0
      23: getfield      #20                 // Field start:J
      26: lsub
      27: l2d
      28: aload_0
      29: getfield      #17                 // Field end:J
      32: aload_0
      33: getfield      #20                 // Field start:J
      36: lsub
      37: l2d
      38: ddiv
      39: d2f
      40: invokestatic  #36                 // Method java/lang/Math.min:(FF)F
      43: freturn

  public java.lang.Object getCurrentValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getCurrentValue:()Lorg/apache/hadoop/io/BytesWritable;
       4: areturn

  public java.lang.Object getCurrentKey() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getCurrentKey:()Lorg/apache/hadoop/io/BytesWritable;
       4: areturn
}
