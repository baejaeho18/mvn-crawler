Compiled from "IFileOutputStream.java"
public class org.apache.hadoop.mapred.IFileOutputStream extends java.io.FilterOutputStream {
  private final org.apache.hadoop.util.DataChecksum sum;

  private byte[] barray;

  private boolean closed;

  private boolean finished;

  public org.apache.hadoop.mapred.IFileOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field closed:Z
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field finished:Z
      15: aload_0
      16: getstatic     #4                  // Field org/apache/hadoop/util/DataChecksum$Type.CRC32:Lorg/apache/hadoop/util/DataChecksum$Type;
      19: ldc           #6                  // int 2147483647
      21: invokestatic  #7                  // Method org/apache/hadoop/util/DataChecksum.newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      24: putfield      #8                  // Field sum:Lorg/apache/hadoop/util/DataChecksum;
      27: aload_0
      28: aload_0
      29: getfield      #8                  // Field sum:Lorg/apache/hadoop/util/DataChecksum;
      32: invokevirtual #9                  // Method org/apache/hadoop/util/DataChecksum.getChecksumSize:()I
      35: newarray       byte
      37: putfield      #10                 // Field barray:[B
      40: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #2                  // Field closed:Z
      13: aload_0
      14: invokevirtual #11                 // Method finish:()V
      17: aload_0
      18: getfield      #12                 // Field out:Ljava/io/OutputStream;
      21: invokestatic  #13                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      24: goto          37
      27: astore_1
      28: aload_0
      29: getfield      #12                 // Field out:Ljava/io/OutputStream;
      32: invokestatic  #13                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      35: aload_1
      36: athrow
      37: return
    Exception table:
       from    to  target type
          13    17    27   any

  public void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field finished:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #3                  // Field finished:Z
      13: aload_0
      14: getfield      #8                  // Field sum:Lorg/apache/hadoop/util/DataChecksum;
      17: aload_0
      18: getfield      #10                 // Field barray:[B
      21: iconst_0
      22: iconst_0
      23: invokevirtual #14                 // Method org/apache/hadoop/util/DataChecksum.writeValue:([BIZ)I
      26: pop
      27: aload_0
      28: getfield      #12                 // Field out:Ljava/io/OutputStream;
      31: aload_0
      32: getfield      #10                 // Field barray:[B
      35: iconst_0
      36: aload_0
      37: getfield      #8                  // Field sum:Lorg/apache/hadoop/util/DataChecksum;
      40: invokevirtual #9                  // Method org/apache/hadoop/util/DataChecksum.getChecksumSize:()I
      43: invokevirtual #15                 // Method java/io/OutputStream.write:([BII)V
      46: aload_0
      47: getfield      #12                 // Field out:Ljava/io/OutputStream;
      50: invokevirtual #16                 // Method java/io/OutputStream.flush:()V
      53: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field sum:Lorg/apache/hadoop/util/DataChecksum;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #17                 // Method org/apache/hadoop/util/DataChecksum.update:([BII)V
      10: aload_0
      11: getfield      #12                 // Field out:Ljava/io/OutputStream;
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokevirtual #15                 // Method java/io/OutputStream.write:([BII)V
      20: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field barray:[B
       4: iconst_0
       5: iload_1
       6: sipush        255
       9: iand
      10: i2b
      11: bastore
      12: aload_0
      13: aload_0
      14: getfield      #10                 // Field barray:[B
      17: iconst_0
      18: iconst_1
      19: invokevirtual #18                 // Method write:([BII)V
      22: return
}
