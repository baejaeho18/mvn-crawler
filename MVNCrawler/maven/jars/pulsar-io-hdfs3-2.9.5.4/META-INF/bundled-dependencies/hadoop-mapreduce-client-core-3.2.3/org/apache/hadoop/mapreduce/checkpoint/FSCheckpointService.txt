Compiled from "FSCheckpointService.java"
public class org.apache.hadoop.mapreduce.checkpoint.FSCheckpointService implements org.apache.hadoop.mapreduce.checkpoint.CheckpointService {
  private final org.apache.hadoop.fs.Path base;

  private final org.apache.hadoop.fs.FileSystem fs;

  private final org.apache.hadoop.mapreduce.checkpoint.CheckpointNamingService namingPolicy;

  private final short replication;

  public org.apache.hadoop.mapreduce.checkpoint.FSCheckpointService(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.mapreduce.checkpoint.CheckpointNamingService, short);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field base:Lorg/apache/hadoop/fs/Path;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field namingPolicy:Lorg/apache/hadoop/mapreduce/checkpoint/CheckpointNamingService;
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field replication:S
      25: return

  public org.apache.hadoop.mapreduce.checkpoint.CheckpointService$CheckpointWriteChannel create() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field namingPolicy:Lorg/apache/hadoop/mapreduce/checkpoint/CheckpointNamingService;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/mapreduce/checkpoint/CheckpointNamingService.getNewName:()Ljava/lang/String;
       9: astore_1
      10: new           #7                  // class org/apache/hadoop/fs/Path
      13: dup
      14: aload_1
      15: invokespecial #8                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      18: astore_2
      19: aload_2
      20: invokevirtual #9                  // Method org/apache/hadoop/fs/Path.isUriPathAbsolute:()Z
      23: ifeq          36
      26: new           #10                 // class java/io/IOException
      29: dup
      30: ldc           #11                 // String Checkpoint cannot be an absolute path
      32: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: new           #7                  // class org/apache/hadoop/fs/Path
      40: dup
      41: aload_0
      42: getfield      #3                  // Field base:Lorg/apache/hadoop/fs/Path;
      45: aload_2
      46: invokespecial #13                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      49: invokevirtual #14                 // Method createInternal:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/mapreduce/checkpoint/CheckpointService$CheckpointWriteChannel;
      52: areturn

  org.apache.hadoop.mapreduce.checkpoint.CheckpointService$CheckpointWriteChannel createInternal(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #15                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointWriteChannel
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       9: aload_1
      10: invokestatic  #16                 // Method tmpfile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      13: aload_0
      14: getfield      #5                  // Field replication:S
      17: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;S)Lorg/apache/hadoop/fs/FSDataOutputStream;
      20: invokespecial #18                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointWriteChannel."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;)V
      23: areturn

  public org.apache.hadoop.mapreduce.checkpoint.CheckpointService$CheckpointReadChannel open(org.apache.hadoop.mapreduce.checkpoint.CheckpointID) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID
       4: ifne          37
       7: new           #20                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #21                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #23                 // String Mismatched checkpoint type:
      20: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: new           #29                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointReadChannel
      40: dup
      41: aload_0
      42: getfield      #2                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      45: aload_1
      46: checkcast     #19                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID
      49: invokevirtual #30                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID.getPath:()Lorg/apache/hadoop/fs/Path;
      52: invokevirtual #31                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      55: invokespecial #32                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointReadChannel."<init>":(Lorg/apache/hadoop/fs/FSDataInputStream;)V
      58: areturn

  public org.apache.hadoop.mapreduce.checkpoint.CheckpointID commit(org.apache.hadoop.mapreduce.checkpoint.CheckpointService$CheckpointWriteChannel) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/mapreduce/checkpoint/CheckpointService$CheckpointWriteChannel.isOpen:()Z
       6: ifeq          15
       9: aload_1
      10: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/mapreduce/checkpoint/CheckpointService$CheckpointWriteChannel.close:()V
      15: aload_1
      16: checkcast     #15                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointWriteChannel
      19: astore_2
      20: aload_2
      21: invokevirtual #35                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointWriteChannel.getDestination:()Lorg/apache/hadoop/fs/Path;
      24: astore_3
      25: aload_0
      26: getfield      #2                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      29: aload_3
      30: invokestatic  #16                 // Method tmpfile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      33: aload_3
      34: invokevirtual #36                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      37: ifne          84
      40: aload_0
      41: aload_1
      42: invokevirtual #37                 // Method abort:(Lorg/apache/hadoop/mapreduce/checkpoint/CheckpointService$CheckpointWriteChannel;)V
      45: new           #10                 // class java/io/IOException
      48: dup
      49: new           #21                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #38                 // String Failed to promote checkpoint
      58: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokestatic  #16                 // Method tmpfile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      65: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: ldc           #39                 // String  ->
      70: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_3
      74: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: new           #19                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID
      87: dup
      88: aload_2
      89: invokevirtual #35                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointWriteChannel.getDestination:()Lorg/apache/hadoop/fs/Path;
      92: invokespecial #40                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID."<init>":(Lorg/apache/hadoop/fs/Path;)V
      95: areturn

  public void abort(org.apache.hadoop.mapreduce.checkpoint.CheckpointService$CheckpointWriteChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/mapreduce/checkpoint/CheckpointService$CheckpointWriteChannel.isOpen:()Z
       6: ifeq          15
       9: aload_1
      10: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/mapreduce/checkpoint/CheckpointService$CheckpointWriteChannel.close:()V
      15: aload_1
      16: checkcast     #15                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointWriteChannel
      19: astore_2
      20: aload_2
      21: invokevirtual #35                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointService$FSCheckpointWriteChannel.getDestination:()Lorg/apache/hadoop/fs/Path;
      24: invokestatic  #16                 // Method tmpfile:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      27: astore_3
      28: aload_0
      29: getfield      #2                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      32: aload_3
      33: iconst_0
      34: invokevirtual #41                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      37: ifne          50
      40: new           #10                 // class java/io/IOException
      43: dup
      44: ldc           #42                 // String Failed to delete checkpoint during abort
      46: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: goto          55
      53: astore        4
      55: return
    Exception table:
       from    to  target type
          28    50    53   Class java/io/FileNotFoundException

  public boolean delete(org.apache.hadoop.mapreduce.checkpoint.CheckpointID) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID
       4: ifne          37
       7: new           #20                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #21                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #23                 // String Mismatched checkpoint type:
      20: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_1
      38: checkcast     #19                 // class org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID
      41: invokevirtual #30                 // Method org/apache/hadoop/mapreduce/checkpoint/FSCheckpointID.getPath:()Lorg/apache/hadoop/fs/Path;
      44: astore_2
      45: aload_0
      46: getfield      #2                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      49: aload_2
      50: iconst_0
      51: invokevirtual #41                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      54: ireturn
      55: astore_3
      56: iconst_1
      57: ireturn
    Exception table:
       from    to  target type
          45    54    55   Class java/io/FileNotFoundException

  static final org.apache.hadoop.fs.Path tmpfile(org.apache.hadoop.fs.Path);
    Code:
       0: new           #7                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: invokevirtual #44                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       8: new           #21                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #45                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      19: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #46                 // String .tmp
      24: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #47                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      33: areturn
}
