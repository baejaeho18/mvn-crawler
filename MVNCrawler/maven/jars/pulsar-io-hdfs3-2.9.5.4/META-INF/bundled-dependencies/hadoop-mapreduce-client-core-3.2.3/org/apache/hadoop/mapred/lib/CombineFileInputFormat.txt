Compiled from "CombineFileInputFormat.java"
public abstract class org.apache.hadoop.mapred.lib.CombineFileInputFormat<K, V> extends org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat<K, V> implements org.apache.hadoop.mapred.InputFormat<K, V> {
  public org.apache.hadoop.mapred.lib.CombineFileInputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat."<init>":()V
       4: return

  public org.apache.hadoop.mapred.InputSplit[] getSplits(org.apache.hadoop.mapred.JobConf, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method org/apache/hadoop/mapreduce/Job.getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/mapreduce/Job;
       5: invokespecial #3                  // Method org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.getSplits:(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
       8: astore_3
       9: aload_3
      10: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      15: anewarray     #5                  // class org/apache/hadoop/mapred/InputSplit
      18: astore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: aload_3
      26: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      31: if_icmpge     86
      34: aload_3
      35: iload         5
      37: invokeinterface #6,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: checkcast     #7                  // class org/apache/hadoop/mapreduce/lib/input/CombineFileSplit
      45: astore        6
      47: aload         4
      49: iload         5
      51: new           #8                  // class org/apache/hadoop/mapred/lib/CombineFileSplit
      54: dup
      55: aload_1
      56: aload         6
      58: invokevirtual #9                  // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getPaths:()[Lorg/apache/hadoop/fs/Path;
      61: aload         6
      63: invokevirtual #10                 // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getStartOffsets:()[J
      66: aload         6
      68: invokevirtual #11                 // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getLengths:()[J
      71: aload         6
      73: invokevirtual #12                 // Method org/apache/hadoop/mapreduce/lib/input/CombineFileSplit.getLocations:()[Ljava/lang/String;
      76: invokespecial #13                 // Method org/apache/hadoop/mapred/lib/CombineFileSplit."<init>":(Lorg/apache/hadoop/mapred/JobConf;[Lorg/apache/hadoop/fs/Path;[J[J[Ljava/lang/String;)V
      79: aastore
      80: iinc          5, 1
      83: goto          23
      86: aload         4
      88: areturn

  protected void createPool(org.apache.hadoop.mapred.JobConf, java.util.List<org.apache.hadoop.fs.PathFilter>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #14                 // Method createPool:(Ljava/util/List;)V
       5: return

  protected void createPool(org.apache.hadoop.mapred.JobConf, org.apache.hadoop.fs.PathFilter...);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #15                 // Method createPool:([Lorg/apache/hadoop/fs/PathFilter;)V
       5: return

  public abstract org.apache.hadoop.mapred.RecordReader<K, V> getRecordReader(org.apache.hadoop.mapred.InputSplit, org.apache.hadoop.mapred.JobConf, org.apache.hadoop.mapred.Reporter) throws java.io.IOException;

  public org.apache.hadoop.mapreduce.RecordReader<K, V> createRecordReader(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  protected org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.mapred.JobConf) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method org/apache/hadoop/mapreduce/Job.getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/mapreduce/Job;
       5: invokespecial #16                 // Method org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.listStatus:(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
       8: astore_2
       9: aload_2
      10: aload_2
      11: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      16: anewarray     #17                 // class org/apache/hadoop/fs/FileStatus
      19: invokeinterface #18,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      24: checkcast     #19                 // class "[Lorg/apache/hadoop/fs/FileStatus;"
      27: areturn

  protected boolean isSplitable(org.apache.hadoop.mapreduce.JobContext, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #20,  1           // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       7: invokestatic  #21                 // Method org/apache/hadoop/fs/FileSystem.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      10: aload_2
      11: invokevirtual #22                 // Method isSplitable:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
      14: ireturn
      15: astore_3
      16: new           #24                 // class java/lang/RuntimeException
      19: dup
      20: aload_3
      21: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      24: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/io/IOException

  protected boolean isSplitable(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path);
    Code:
       0: new           #26                 // class org/apache/hadoop/io/compress/CompressionCodecFactory
       3: dup
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/hadoop/fs/FileSystem.getConf:()Lorg/apache/hadoop/conf/Configuration;
       8: invokespecial #28                 // Method org/apache/hadoop/io/compress/CompressionCodecFactory."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      11: aload_2
      12: invokevirtual #29                 // Method org/apache/hadoop/io/compress/CompressionCodecFactory.getCodec:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/compress/CompressionCodec;
      15: astore_3
      16: aconst_null
      17: aload_3
      18: if_acmpne     23
      21: iconst_1
      22: ireturn
      23: aload_3
      24: instanceof    #30                 // class org/apache/hadoop/io/compress/SplittableCompressionCodec
      27: ireturn
}
