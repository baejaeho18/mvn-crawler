Compiled from "BasicTypeSorterBase.java"
abstract class org.apache.hadoop.mapred.BasicTypeSorterBase implements org.apache.hadoop.mapred.BufferSorter {
  protected org.apache.hadoop.io.OutputBuffer keyValBuffer;

  protected int[] startOffsets;

  protected int[] keyLengths;

  protected int[] valueLengths;

  protected int[] pointers;

  protected org.apache.hadoop.io.RawComparator comparator;

  protected int count;

  private static final int BUFFERED_KEY_VAL_OVERHEAD;

  private static final int INITIAL_ARRAY_SIZE;

  private int maxKeyLength;

  private int maxValLength;

  protected org.apache.hadoop.util.Progressable reporter;

  org.apache.hadoop.mapred.BasicTypeSorterBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field maxKeyLength:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field maxValLength:I
      14: return

  public void configure(org.apache.hadoop.mapred.JobConf);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method org/apache/hadoop/mapred/JobConf.getOutputKeyComparator:()Lorg/apache/hadoop/io/RawComparator;
       5: putfield      #5                  // Field comparator:Lorg/apache/hadoop/io/RawComparator;
       8: return

  public void setProgressable(org.apache.hadoop.util.Progressable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field reporter:Lorg/apache/hadoop/util/Progressable;
       5: return

  public void addKeyValue(int, int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field startOffsets:[I
       4: ifnull        19
       7: aload_0
       8: getfield      #8                  // Field count:I
      11: aload_0
      12: getfield      #7                  // Field startOffsets:[I
      15: arraylength
      16: if_icmpne     23
      19: aload_0
      20: invokespecial #9                  // Method grow:()V
      23: aload_0
      24: getfield      #7                  // Field startOffsets:[I
      27: aload_0
      28: getfield      #8                  // Field count:I
      31: iload_1
      32: iastore
      33: aload_0
      34: getfield      #10                 // Field keyLengths:[I
      37: aload_0
      38: getfield      #8                  // Field count:I
      41: iload_2
      42: iastore
      43: iload_2
      44: aload_0
      45: getfield      #2                  // Field maxKeyLength:I
      48: if_icmple     56
      51: aload_0
      52: iload_2
      53: putfield      #2                  // Field maxKeyLength:I
      56: iload_3
      57: aload_0
      58: getfield      #3                  // Field maxValLength:I
      61: if_icmple     69
      64: aload_0
      65: iload_3
      66: putfield      #3                  // Field maxValLength:I
      69: aload_0
      70: getfield      #11                 // Field valueLengths:[I
      73: aload_0
      74: getfield      #8                  // Field count:I
      77: iload_3
      78: iastore
      79: aload_0
      80: getfield      #12                 // Field pointers:[I
      83: aload_0
      84: getfield      #8                  // Field count:I
      87: aload_0
      88: getfield      #8                  // Field count:I
      91: iastore
      92: aload_0
      93: dup
      94: getfield      #8                  // Field count:I
      97: iconst_1
      98: iadd
      99: putfield      #8                  // Field count:I
     102: return

  public void setInputBuffer(org.apache.hadoop.io.OutputBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field keyValBuffer:Lorg/apache/hadoop/io/OutputBuffer;
       5: return

  public long getMemoryUtilized();
    Code:
       0: aload_0
       1: getfield      #7                  // Field startOffsets:[I
       4: ifnull        27
       7: aload_0
       8: getfield      #7                  // Field startOffsets:[I
      11: arraylength
      12: bipush        16
      14: imul
      15: aload_0
      16: getfield      #2                  // Field maxKeyLength:I
      19: iadd
      20: aload_0
      21: getfield      #3                  // Field maxValLength:I
      24: iadd
      25: i2l
      26: lreturn
      27: lconst_0
      28: lreturn

  public abstract org.apache.hadoop.io.SequenceFile$Sorter$RawKeyValueIterator sort();

  public void close();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field count:I
       5: aload_0
       6: aconst_null
       7: putfield      #7                  // Field startOffsets:[I
      10: aload_0
      11: aconst_null
      12: putfield      #10                 // Field keyLengths:[I
      15: aload_0
      16: aconst_null
      17: putfield      #11                 // Field valueLengths:[I
      20: aload_0
      21: aconst_null
      22: putfield      #12                 // Field pointers:[I
      25: aload_0
      26: iconst_0
      27: putfield      #2                  // Field maxKeyLength:I
      30: aload_0
      31: iconst_0
      32: putfield      #3                  // Field maxValLength:I
      35: aload_0
      36: aconst_null
      37: putfield      #13                 // Field keyValBuffer:Lorg/apache/hadoop/io/OutputBuffer;
      40: return

  private void grow();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #7                  // Field startOffsets:[I
       6: ifnull        15
       9: aload_0
      10: getfield      #7                  // Field startOffsets:[I
      13: arraylength
      14: istore_1
      15: iload_1
      16: i2d
      17: ldc2_w        #15                 // double 1.1d
      20: dmul
      21: d2i
      22: iconst_1
      23: iadd
      24: istore_2
      25: aload_0
      26: aload_0
      27: aload_0
      28: getfield      #7                  // Field startOffsets:[I
      31: iload_2
      32: invokespecial #17                 // Method grow:([II)[I
      35: putfield      #7                  // Field startOffsets:[I
      38: aload_0
      39: aload_0
      40: aload_0
      41: getfield      #10                 // Field keyLengths:[I
      44: iload_2
      45: invokespecial #17                 // Method grow:([II)[I
      48: putfield      #10                 // Field keyLengths:[I
      51: aload_0
      52: aload_0
      53: aload_0
      54: getfield      #11                 // Field valueLengths:[I
      57: iload_2
      58: invokespecial #17                 // Method grow:([II)[I
      61: putfield      #11                 // Field valueLengths:[I
      64: aload_0
      65: aload_0
      66: aload_0
      67: getfield      #12                 // Field pointers:[I
      70: iload_2
      71: invokespecial #17                 // Method grow:([II)[I
      74: putfield      #12                 // Field pointers:[I
      77: return

  private int[] grow(int[], int);
    Code:
       0: iload_2
       1: newarray       int
       3: astore_3
       4: aload_1
       5: ifnull        17
       8: aload_1
       9: iconst_0
      10: aload_3
      11: iconst_0
      12: aload_1
      13: arraylength
      14: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_3
      18: areturn
}
