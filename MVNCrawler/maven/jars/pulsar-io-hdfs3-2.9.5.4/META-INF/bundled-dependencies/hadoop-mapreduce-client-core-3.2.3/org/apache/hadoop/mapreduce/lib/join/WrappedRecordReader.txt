Compiled from "WrappedRecordReader.java"
public class org.apache.hadoop.mapreduce.lib.join.WrappedRecordReader<K extends org.apache.hadoop.io.WritableComparable<?>, U extends org.apache.hadoop.io.Writable> extends org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, U> {
  protected boolean empty;

  private org.apache.hadoop.mapreduce.RecordReader<K, U> rr;

  private int id;

  protected org.apache.hadoop.io.WritableComparator cmp;

  private K key;

  private U value;

  private org.apache.hadoop.mapreduce.lib.join.ResetableIterator<U> vjoin;

  private org.apache.hadoop.conf.Configuration conf;

  private java.lang.Class<? extends org.apache.hadoop.io.WritableComparable> keyclass;

  private java.lang.Class<? extends org.apache.hadoop.io.Writable> valueclass;

  static final boolean $assertionsDisabled;

  protected org.apache.hadoop.mapreduce.lib.join.WrappedRecordReader(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field empty:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      14: aload_0
      15: new           #4                  // class org/apache/hadoop/conf/Configuration
      18: dup
      19: invokespecial #5                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
      22: putfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      25: aload_0
      26: aconst_null
      27: putfield      #7                  // Field keyclass:Ljava/lang/Class;
      30: aload_0
      31: aconst_null
      32: putfield      #8                  // Field valueclass:Ljava/lang/Class;
      35: aload_0
      36: iload_1
      37: putfield      #9                  // Field id:I
      40: aload_0
      41: new           #10                 // class org/apache/hadoop/mapreduce/lib/join/StreamBackedIterator
      44: dup
      45: invokespecial #11                 // Method org/apache/hadoop/mapreduce/lib/join/StreamBackedIterator."<init>":()V
      48: putfield      #12                 // Field vjoin:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
      51: return

  org.apache.hadoop.mapreduce.lib.join.WrappedRecordReader(int, org.apache.hadoop.mapreduce.RecordReader<K, U>, java.lang.Class<? extends org.apache.hadoop.io.WritableComparator>) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field empty:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      14: aload_0
      15: new           #4                  // class org/apache/hadoop/conf/Configuration
      18: dup
      19: invokespecial #5                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
      22: putfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      25: aload_0
      26: aconst_null
      27: putfield      #7                  // Field keyclass:Ljava/lang/Class;
      30: aload_0
      31: aconst_null
      32: putfield      #8                  // Field valueclass:Ljava/lang/Class;
      35: aload_0
      36: iload_1
      37: putfield      #9                  // Field id:I
      40: aload_0
      41: aload_2
      42: putfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
      45: aload_3
      46: ifnull        87
      49: aload_0
      50: aload_3
      51: invokevirtual #14                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      54: checkcast     #15                 // class org/apache/hadoop/io/WritableComparator
      57: putfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      60: goto          87
      63: astore        4
      65: new           #17                 // class java/io/IOException
      68: dup
      69: aload         4
      71: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
      75: astore        4
      77: new           #17                 // class java/io/IOException
      80: dup
      81: aload         4
      83: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      86: athrow
      87: aload_0
      88: new           #10                 // class org/apache/hadoop/mapreduce/lib/join/StreamBackedIterator
      91: dup
      92: invokespecial #11                 // Method org/apache/hadoop/mapreduce/lib/join/StreamBackedIterator."<init>":()V
      95: putfield      #12                 // Field vjoin:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
      98: return
    Exception table:
       from    to  target type
          49    60    63   Class java/lang/InstantiationException
          49    60    75   Class java/lang/IllegalAccessException

  public void initialize(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: aload_1
       5: aload_2
       6: invokevirtual #20                 // Method org/apache/hadoop/mapreduce/RecordReader.initialize:(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
       9: aload_0
      10: aload_2
      11: invokeinterface #21,  1           // InterfaceMethod org/apache/hadoop/mapreduce/TaskAttemptContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      16: putfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      19: aload_0
      20: invokevirtual #22                 // Method nextKeyValue:()Z
      23: pop
      24: aload_0
      25: getfield      #2                  // Field empty:Z
      28: ifne          80
      31: aload_0
      32: aload_0
      33: getfield      #23                 // Field key:Lorg/apache/hadoop/io/WritableComparable;
      36: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: ldc           #25                 // class org/apache/hadoop/io/WritableComparable
      41: invokevirtual #26                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      44: putfield      #7                  // Field keyclass:Ljava/lang/Class;
      47: aload_0
      48: aload_0
      49: getfield      #27                 // Field value:Lorg/apache/hadoop/io/Writable;
      52: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: putfield      #8                  // Field valueclass:Ljava/lang/Class;
      58: aload_0
      59: getfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      62: ifnonnull     80
      65: aload_0
      66: aload_0
      67: getfield      #7                  // Field keyclass:Ljava/lang/Class;
      70: aload_0
      71: getfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      74: invokestatic  #28                 // Method org/apache/hadoop/io/WritableComparator.get:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/WritableComparator;
      77: putfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      80: return

  public K createKey();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyclass:Ljava/lang/Class;
       4: ifnull        22
       7: aload_0
       8: getfield      #7                  // Field keyclass:Ljava/lang/Class;
      11: aload_0
      12: getfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      15: invokestatic  #29                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      18: checkcast     #25                 // class org/apache/hadoop/io/WritableComparable
      21: areturn
      22: invokestatic  #30                 // Method org/apache/hadoop/io/NullWritable.get:()Lorg/apache/hadoop/io/NullWritable;
      25: areturn

  public U createValue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field valueclass:Ljava/lang/Class;
       4: ifnull        22
       7: aload_0
       8: getfield      #8                  // Field valueclass:Ljava/lang/Class;
      11: aload_0
      12: getfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      15: invokestatic  #29                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      18: checkcast     #31                 // class org/apache/hadoop/io/Writable
      21: areturn
      22: invokestatic  #30                 // Method org/apache/hadoop/io/NullWritable.get:()Lorg/apache/hadoop/io/NullWritable;
      25: areturn

  public int id();
    Code:
       0: aload_0
       1: getfield      #9                  // Field id:I
       4: ireturn

  public K key();
    Code:
       0: aload_0
       1: getfield      #23                 // Field key:Lorg/apache/hadoop/io/WritableComparable;
       4: areturn

  public void key(K) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: aload_0
       5: getfield      #23                 // Field key:Lorg/apache/hadoop/io/WritableComparable;
       8: aload_1
       9: invokestatic  #32                 // Method org/apache/hadoop/util/ReflectionUtils.copy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field empty:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void skip(K) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method hasNext:()Z
       4: ifeq          32
       7: aload_0
       8: getfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      11: aload_0
      12: invokevirtual #34                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
      15: aload_1
      16: invokevirtual #35                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      19: ifgt          32
      22: aload_0
      23: invokespecial #36                 // Method next:()Z
      26: ifeq          32
      29: goto          7
      32: return

  public void accept(org.apache.hadoop.mapreduce.lib.join.CompositeRecordReader$JoinCollector, K) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field vjoin:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
       4: invokeinterface #37,  1           // InterfaceMethod org/apache/hadoop/mapreduce/lib/join/ResetableIterator.clear:()V
       9: aload_0
      10: invokevirtual #34                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
      13: ifnull        68
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      21: aload_2
      22: aload_0
      23: invokevirtual #34                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
      26: invokevirtual #35                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      29: if_icmpne     68
      32: aload_0
      33: getfield      #12                 // Field vjoin:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
      36: aload_0
      37: getfield      #27                 // Field value:Lorg/apache/hadoop/io/Writable;
      40: invokeinterface #38,  2           // InterfaceMethod org/apache/hadoop/mapreduce/lib/join/ResetableIterator.add:(Lorg/apache/hadoop/io/Writable;)V
      45: aload_0
      46: invokespecial #36                 // Method next:()Z
      49: ifeq          68
      52: iconst_0
      53: aload_0
      54: getfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
      57: aload_2
      58: aload_0
      59: invokevirtual #34                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
      62: invokevirtual #35                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      65: if_icmpeq     32
      68: aload_1
      69: aload_0
      70: getfield      #9                  // Field id:I
      73: aload_0
      74: getfield      #12                 // Field vjoin:Lorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;
      77: invokevirtual #39                 // Method org/apache/hadoop/mapreduce/lib/join/CompositeRecordReader$JoinCollector.add:(ILorg/apache/hadoop/mapreduce/lib/join/ResetableIterator;)V
      80: return

  public boolean nextKeyValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method hasNext:()Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #36                 // Method next:()Z
      11: pop
      12: iconst_1
      13: ireturn
      14: iconst_0
      15: ireturn

  private boolean next() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
       5: invokevirtual #40                 // Method org/apache/hadoop/mapreduce/RecordReader.nextKeyValue:()Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: putfield      #2                  // Field empty:Z
      19: aload_0
      20: aload_0
      21: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
      24: invokevirtual #41                 // Method org/apache/hadoop/mapreduce/RecordReader.getCurrentKey:()Ljava/lang/Object;
      27: checkcast     #25                 // class org/apache/hadoop/io/WritableComparable
      30: putfield      #23                 // Field key:Lorg/apache/hadoop/io/WritableComparable;
      33: aload_0
      34: aload_0
      35: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
      38: invokevirtual #42                 // Method org/apache/hadoop/mapreduce/RecordReader.getCurrentValue:()Ljava/lang/Object;
      41: checkcast     #31                 // class org/apache/hadoop/io/Writable
      44: putfield      #27                 // Field value:Lorg/apache/hadoop/io/Writable;
      47: aload_0
      48: getfield      #2                  // Field empty:Z
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public K getCurrentKey() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #41                 // Method org/apache/hadoop/mapreduce/RecordReader.getCurrentKey:()Ljava/lang/Object;
       7: checkcast     #25                 // class org/apache/hadoop/io/WritableComparable
      10: areturn

  public U getCurrentValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #42                 // Method org/apache/hadoop/mapreduce/RecordReader.getCurrentValue:()Ljava/lang/Object;
       7: checkcast     #31                 // class org/apache/hadoop/io/Writable
      10: areturn

  public float getProgress() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #43                 // Method org/apache/hadoop/mapreduce/RecordReader.getProgress:()F
       7: freturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field rr:Lorg/apache/hadoop/mapreduce/RecordReader;
       4: invokevirtual #44                 // Method org/apache/hadoop/mapreduce/RecordReader.close:()V
       7: return

  public int compareTo(org.apache.hadoop.mapreduce.lib.join.ComposableRecordReader<K, ?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cmp:Lorg/apache/hadoop/io/WritableComparator;
       4: aload_0
       5: invokevirtual #34                 // Method key:()Lorg/apache/hadoop/io/WritableComparable;
       8: aload_1
       9: invokevirtual #45                 // Method org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader.key:()Lorg/apache/hadoop/io/WritableComparable;
      12: invokevirtual #35                 // Method org/apache/hadoop/io/WritableComparator.compare:(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
      15: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #46                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
       4: ifeq          23
       7: iconst_0
       8: aload_0
       9: aload_1
      10: checkcast     #46                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
      13: invokevirtual #47                 // Method compareTo:(Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;)I
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public int hashCode();
    Code:
       0: getstatic     #48                 // Field $assertionsDisabled:Z
       3: ifne          16
       6: new           #49                 // class java/lang/AssertionError
       9: dup
      10: ldc           #50                 // String hashCode not designed
      12: invokespecial #51                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      15: athrow
      16: bipush        42
      18: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #46                 // class org/apache/hadoop/mapreduce/lib/join/ComposableRecordReader
       5: invokevirtual #47                 // Method compareTo:(Lorg/apache/hadoop/mapreduce/lib/join/ComposableRecordReader;)I
       8: ireturn

  public java.lang.Object getCurrentValue() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getCurrentValue:()Lorg/apache/hadoop/io/Writable;
       4: areturn

  public java.lang.Object getCurrentKey() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getCurrentKey:()Lorg/apache/hadoop/io/WritableComparable;
       4: areturn

  static {};
    Code:
       0: ldc           #54                 // class org/apache/hadoop/mapreduce/lib/join/WrappedRecordReader
       2: invokevirtual #55                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #48                 // Field $assertionsDisabled:Z
      16: return
}
