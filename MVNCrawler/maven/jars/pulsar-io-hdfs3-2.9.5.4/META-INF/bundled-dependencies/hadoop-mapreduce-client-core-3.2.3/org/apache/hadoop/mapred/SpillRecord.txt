Compiled from "SpillRecord.java"
public class org.apache.hadoop.mapred.SpillRecord {
  private final java.nio.ByteBuffer buf;

  private final java.nio.LongBuffer entries;

  public org.apache.hadoop.mapred.SpillRecord(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: bipush        24
       8: imul
       9: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      12: putfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
      20: invokevirtual #5                  // Method java/nio/ByteBuffer.asLongBuffer:()Ljava/nio/LongBuffer;
      23: putfield      #6                  // Field entries:Ljava/nio/LongBuffer;
      26: return

  public org.apache.hadoop.mapred.SpillRecord(org.apache.hadoop.fs.Path, org.apache.hadoop.mapred.JobConf) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #7                  // Method "<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)V
       7: return

  public org.apache.hadoop.mapred.SpillRecord(org.apache.hadoop.fs.Path, org.apache.hadoop.mapred.JobConf, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #8                  // class org/apache/hadoop/util/PureJavaCrc32
       6: dup
       7: invokespecial #9                  // Method org/apache/hadoop/util/PureJavaCrc32."<init>":()V
      10: aload_3
      11: invokespecial #10                 // Method "<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/JobConf;Ljava/util/zip/Checksum;Ljava/lang/String;)V
      14: return

  public org.apache.hadoop.mapred.SpillRecord(org.apache.hadoop.fs.Path, org.apache.hadoop.mapred.JobConf, java.util.zip.Checksum, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokestatic  #11                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
       8: invokevirtual #12                 // Method org/apache/hadoop/fs/LocalFileSystem.getRaw:()Lorg/apache/hadoop/fs/FileSystem;
      11: astore        5
      13: new           #13                 // class java/io/File
      16: dup
      17: aload_1
      18: invokevirtual #14                 // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      21: invokevirtual #15                 // Method java/net/URI.getRawPath:()Ljava/lang/String;
      24: invokespecial #16                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      27: aload         4
      29: aconst_null
      30: invokestatic  #17                 // Method org/apache/hadoop/io/SecureIOUtils.openFSDataInputStream:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/FSDataInputStream;
      33: astore        6
      35: aload         5
      37: aload_1
      38: invokevirtual #18                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      41: invokevirtual #19                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      44: lstore        7
      46: lload         7
      48: l2i
      49: bipush        24
      51: idiv
      52: istore        9
      54: iload         9
      56: bipush        24
      58: imul
      59: istore        10
      61: aload_0
      62: iload         10
      64: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      67: putfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
      70: aload_3
      71: ifnull        159
      74: aload_3
      75: invokeinterface #20,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
      80: new           #21                 // class java/util/zip/CheckedInputStream
      83: dup
      84: aload         6
      86: aload_3
      87: invokespecial #22                 // Method java/util/zip/CheckedInputStream."<init>":(Ljava/io/InputStream;Ljava/util/zip/Checksum;)V
      90: astore        11
      92: aload         11
      94: aload_0
      95: getfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
      98: invokevirtual #23                 // Method java/nio/ByteBuffer.array:()[B
     101: iconst_0
     102: iload         10
     104: invokestatic  #24                 // Method org/apache/hadoop/io/IOUtils.readFully:(Ljava/io/InputStream;[BII)V
     107: aload         11
     109: invokevirtual #25                 // Method java/util/zip/CheckedInputStream.getChecksum:()Ljava/util/zip/Checksum;
     112: invokeinterface #26,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
     117: aload         6
     119: invokevirtual #27                 // Method org/apache/hadoop/fs/FSDataInputStream.readLong:()J
     122: lcmp
     123: ifeq          156
     126: new           #28                 // class org/apache/hadoop/fs/ChecksumException
     129: dup
     130: new           #29                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #31                 // String Checksum error reading spill index:
     139: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_1
     143: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: ldc2_w        #35                 // long -1l
     152: invokespecial #37                 // Method org/apache/hadoop/fs/ChecksumException."<init>":(Ljava/lang/String;J)V
     155: athrow
     156: goto          174
     159: aload         6
     161: aload_0
     162: getfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
     165: invokevirtual #23                 // Method java/nio/ByteBuffer.array:()[B
     168: iconst_0
     169: iload         10
     171: invokestatic  #24                 // Method org/apache/hadoop/io/IOUtils.readFully:(Ljava/io/InputStream;[BII)V
     174: aload_0
     175: aload_0
     176: getfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
     179: invokevirtual #5                  // Method java/nio/ByteBuffer.asLongBuffer:()Ljava/nio/LongBuffer;
     182: putfield      #6                  // Field entries:Ljava/nio/LongBuffer;
     185: aload         6
     187: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     190: goto          203
     193: astore        12
     195: aload         6
     197: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     200: aload         12
     202: athrow
     203: return
    Exception table:
       from    to  target type
          35   185   193   any
         193   195   193   any

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entries:Ljava/nio/LongBuffer;
       4: invokevirtual #39                 // Method java/nio/LongBuffer.capacity:()I
       7: iconst_3
       8: idiv
       9: ireturn

  public org.apache.hadoop.mapred.IndexRecord getIndex(int);
    Code:
       0: iload_1
       1: bipush        24
       3: imul
       4: bipush        8
       6: idiv
       7: istore_2
       8: new           #40                 // class org/apache/hadoop/mapred/IndexRecord
      11: dup
      12: aload_0
      13: getfield      #6                  // Field entries:Ljava/nio/LongBuffer;
      16: iload_2
      17: invokevirtual #41                 // Method java/nio/LongBuffer.get:(I)J
      20: aload_0
      21: getfield      #6                  // Field entries:Ljava/nio/LongBuffer;
      24: iload_2
      25: iconst_1
      26: iadd
      27: invokevirtual #41                 // Method java/nio/LongBuffer.get:(I)J
      30: aload_0
      31: getfield      #6                  // Field entries:Ljava/nio/LongBuffer;
      34: iload_2
      35: iconst_2
      36: iadd
      37: invokevirtual #41                 // Method java/nio/LongBuffer.get:(I)J
      40: invokespecial #42                 // Method org/apache/hadoop/mapred/IndexRecord."<init>":(JJJ)V
      43: areturn

  public void putIndex(org.apache.hadoop.mapred.IndexRecord, int);
    Code:
       0: iload_2
       1: bipush        24
       3: imul
       4: bipush        8
       6: idiv
       7: istore_3
       8: aload_0
       9: getfield      #6                  // Field entries:Ljava/nio/LongBuffer;
      12: iload_3
      13: aload_1
      14: getfield      #43                 // Field org/apache/hadoop/mapred/IndexRecord.startOffset:J
      17: invokevirtual #44                 // Method java/nio/LongBuffer.put:(IJ)Ljava/nio/LongBuffer;
      20: pop
      21: aload_0
      22: getfield      #6                  // Field entries:Ljava/nio/LongBuffer;
      25: iload_3
      26: iconst_1
      27: iadd
      28: aload_1
      29: getfield      #45                 // Field org/apache/hadoop/mapred/IndexRecord.rawLength:J
      32: invokevirtual #44                 // Method java/nio/LongBuffer.put:(IJ)Ljava/nio/LongBuffer;
      35: pop
      36: aload_0
      37: getfield      #6                  // Field entries:Ljava/nio/LongBuffer;
      40: iload_3
      41: iconst_2
      42: iadd
      43: aload_1
      44: getfield      #46                 // Field org/apache/hadoop/mapred/IndexRecord.partLength:J
      47: invokevirtual #44                 // Method java/nio/LongBuffer.put:(IJ)Ljava/nio/LongBuffer;
      50: pop
      51: return

  public void writeToFile(org.apache.hadoop.fs.Path, org.apache.hadoop.mapred.JobConf) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #8                  // class org/apache/hadoop/util/PureJavaCrc32
       6: dup
       7: invokespecial #9                  // Method org/apache/hadoop/util/PureJavaCrc32."<init>":()V
      10: invokevirtual #47                 // Method writeToFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/JobConf;Ljava/util/zip/Checksum;)V
      13: return

  public void writeToFile(org.apache.hadoop.fs.Path, org.apache.hadoop.mapred.JobConf, java.util.zip.Checksum) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #11                 // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
       4: invokevirtual #12                 // Method org/apache/hadoop/fs/LocalFileSystem.getRaw:()Lorg/apache/hadoop/fs/FileSystem;
       7: astore        4
       9: aconst_null
      10: astore        5
      12: aload         4
      14: aload_1
      15: invokevirtual #48                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      18: astore        6
      20: aload_3
      21: ifnull        72
      24: aload_3
      25: invokeinterface #20,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
      30: new           #49                 // class java/util/zip/CheckedOutputStream
      33: dup
      34: aload         6
      36: aload_3
      37: invokespecial #50                 // Method java/util/zip/CheckedOutputStream."<init>":(Ljava/io/OutputStream;Ljava/util/zip/Checksum;)V
      40: astore        5
      42: aload         5
      44: aload_0
      45: getfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
      48: invokevirtual #23                 // Method java/nio/ByteBuffer.array:()[B
      51: invokevirtual #51                 // Method java/util/zip/CheckedOutputStream.write:([B)V
      54: aload         6
      56: aload         5
      58: invokevirtual #52                 // Method java/util/zip/CheckedOutputStream.getChecksum:()Ljava/util/zip/Checksum;
      61: invokeinterface #26,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
      66: invokevirtual #53                 // Method org/apache/hadoop/fs/FSDataOutputStream.writeLong:(J)V
      69: goto          84
      72: aload         6
      74: aload_0
      75: getfield      #4                  // Field buf:Ljava/nio/ByteBuffer;
      78: invokevirtual #23                 // Method java/nio/ByteBuffer.array:()[B
      81: invokevirtual #54                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([B)V
      84: aload         5
      86: ifnull        97
      89: aload         5
      91: invokevirtual #55                 // Method java/util/zip/CheckedOutputStream.close:()V
      94: goto          128
      97: aload         6
      99: invokevirtual #56                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     102: goto          128
     105: astore        7
     107: aload         5
     109: ifnull        120
     112: aload         5
     114: invokevirtual #55                 // Method java/util/zip/CheckedOutputStream.close:()V
     117: goto          125
     120: aload         6
     122: invokevirtual #56                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     125: aload         7
     127: athrow
     128: return
    Exception table:
       from    to  target type
          20    84   105   any
         105   107   105   any
}
