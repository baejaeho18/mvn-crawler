Compiled from "SequenceFileAsBinaryOutputFormat.java"
public class org.apache.hadoop.mapreduce.lib.output.SequenceFileAsBinaryOutputFormat extends org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat<org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable> {
  public static java.lang.String KEY_CLASS;

  public static java.lang.String VALUE_CLASS;

  public org.apache.hadoop.mapreduce.lib.output.SequenceFileAsBinaryOutputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat."<init>":()V
       4: return

  public static void setSequenceFileOutputKeyClass(org.apache.hadoop.mapreduce.Job, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: getstatic     #3                  // Field KEY_CLASS:Ljava/lang/String;
       7: aload_1
       8: ldc           #4                  // class java/lang/Object
      10: invokevirtual #5                  // Method org/apache/hadoop/conf/Configuration.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      13: return

  public static void setSequenceFileOutputValueClass(org.apache.hadoop.mapreduce.Job, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/apache/hadoop/mapreduce/Job.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       4: getstatic     #6                  // Field VALUE_CLASS:Ljava/lang/String;
       7: aload_1
       8: ldc           #4                  // class java/lang/Object
      10: invokevirtual #5                  // Method org/apache/hadoop/conf/Configuration.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      13: return

  public static java.lang.Class<? extends org.apache.hadoop.io.WritableComparable> getSequenceFileOutputKeyClass(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: getstatic     #3                  // Field KEY_CLASS:Ljava/lang/String;
       9: aload_0
      10: invokeinterface #8,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getOutputKeyClass:()Ljava/lang/Class;
      15: ldc           #9                  // class org/apache/hadoop/io/WritableComparable
      17: invokevirtual #10                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      20: ldc           #9                  // class org/apache/hadoop/io/WritableComparable
      22: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      25: areturn

  public static java.lang.Class<? extends org.apache.hadoop.io.Writable> getSequenceFileOutputValueClass(org.apache.hadoop.mapreduce.JobContext);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: getstatic     #6                  // Field VALUE_CLASS:Ljava/lang/String;
       9: aload_0
      10: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/mapreduce/JobContext.getOutputValueClass:()Ljava/lang/Class;
      15: ldc           #13                 // class org/apache/hadoop/io/Writable
      17: invokevirtual #10                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      20: ldc           #13                 // class org/apache/hadoop/io/Writable
      22: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      25: areturn

  public org.apache.hadoop.mapreduce.RecordWriter<org.apache.hadoop.io.BytesWritable, org.apache.hadoop.io.BytesWritable> getRecordWriter(org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #14                 // Method getSequenceFileOutputKeyClass:(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/Class;
       6: aload_1
       7: invokestatic  #15                 // Method getSequenceFileOutputValueClass:(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/Class;
      10: invokevirtual #16                 // Method getSequenceWriter:(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      13: astore_2
      14: new           #17                 // class org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat$1
      17: dup
      18: aload_0
      19: aload_2
      20: invokespecial #18                 // Method org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat$1."<init>":(Lorg/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat;Lorg/apache/hadoop/io/SequenceFile$Writer;)V
      23: areturn

  public void checkOutputSpecs(org.apache.hadoop.mapreduce.JobContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat.checkOutputSpecs:(Lorg/apache/hadoop/mapreduce/JobContext;)V
       5: aload_1
       6: invokestatic  #20                 // Method getCompressOutput:(Lorg/apache/hadoop/mapreduce/JobContext;)Z
       9: ifeq          32
      12: aload_1
      13: invokestatic  #21                 // Method getOutputCompressionType:(Lorg/apache/hadoop/mapreduce/JobContext;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      16: getstatic     #22                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.RECORD:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      19: if_acmpne     32
      22: new           #23                 // class org/apache/hadoop/mapred/InvalidJobConfException
      25: dup
      26: ldc           #24                 // String SequenceFileAsBinaryOutputFormat doesn\'t support Record Compression
      28: invokespecial #25                 // Method org/apache/hadoop/mapred/InvalidJobConfException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: return

  static {};
    Code:
       0: ldc           #26                 // String mapreduce.output.seqbinaryoutputformat.key.class
       2: putstatic     #3                  // Field KEY_CLASS:Ljava/lang/String;
       5: ldc           #27                 // String mapreduce.output.seqbinaryoutputformat.value.class
       7: putstatic     #6                  // Field VALUE_CLASS:Ljava/lang/String;
      10: return
}
