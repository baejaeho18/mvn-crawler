Compiled from "PeriodicReloadingTrigger.java"
public class org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger {
  private final java.util.concurrent.ScheduledExecutorService executorService;

  private final org.apache.commons.configuration2.reloading.ReloadingController controller;

  private final java.lang.Object controllerParam;

  private final long period;

  private final java.util.concurrent.TimeUnit timeUnit;

  private java.util.concurrent.ScheduledFuture<?> triggerTask;

  public org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger(org.apache.commons.configuration2.reloading.ReloadingController, java.lang.Object, long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #4                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #5                  // String ReloadingController must not be null!
      14: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #1                  // Field controller:Lorg/apache/commons/configuration2/reloading/ReloadingController;
      23: aload_0
      24: aload_2
      25: putfield      #2                  // Field controllerParam:Ljava/lang/Object;
      28: aload_0
      29: lload_3
      30: putfield      #7                  // Field period:J
      33: aload_0
      34: aload         5
      36: putfield      #8                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      39: aload_0
      40: aload         6
      42: ifnull        50
      45: aload         6
      47: goto          53
      50: invokestatic  #9                  // Method createDefaultExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
      53: putfield      #10                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      56: return

  public org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger(org.apache.commons.configuration2.reloading.ReloadingController, java.lang.Object, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: aconst_null
       7: invokespecial #11                 // Method "<init>":(Lorg/apache/commons/configuration2/reloading/ReloadingController;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)V
      10: return

  public synchronized void start();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isRunning:()Z
       4: ifne          36
       7: aload_0
       8: aload_0
       9: invokevirtual #13                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
      12: aload_0
      13: invokespecial #14                 // Method createTriggerTaskCommand:()Ljava/lang/Runnable;
      16: aload_0
      17: getfield      #7                  // Field period:J
      20: aload_0
      21: getfield      #7                  // Field period:J
      24: aload_0
      25: getfield      #8                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      28: invokeinterface #15,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      33: putfield      #16                 // Field triggerTask:Ljava/util/concurrent/ScheduledFuture;
      36: return

  public synchronized void stop();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isRunning:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #16                 // Field triggerTask:Ljava/util/concurrent/ScheduledFuture;
      11: iconst_0
      12: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: pop
      18: aload_0
      19: aconst_null
      20: putfield      #16                 // Field triggerTask:Ljava/util/concurrent/ScheduledFuture;
      23: return

  public synchronized boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #16                 // Field triggerTask:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void shutdown(boolean);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method stop:()V
       4: iload_1
       5: ifeq          17
       8: aload_0
       9: invokevirtual #13                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
      12: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      17: return

  public void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #20                 // Method shutdown:(Z)V
       5: return

  java.util.concurrent.ScheduledExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #10                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  private java.lang.Runnable createTriggerTaskCommand();
    Code:
       0: new           #21                 // class org/apache/commons/configuration2/reloading/PeriodicReloadingTrigger$1
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method org/apache/commons/configuration2/reloading/PeriodicReloadingTrigger$1."<init>":(Lorg/apache/commons/configuration2/reloading/PeriodicReloadingTrigger;)V
       8: areturn

  private static java.util.concurrent.ScheduledExecutorService createDefaultExecutorService();
    Code:
       0: new           #23                 // class org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder."<init>":()V
       7: ldc           #25                 // String ReloadingTrigger-%s
       9: invokevirtual #26                 // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.namingPattern:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
      12: iconst_1
      13: invokevirtual #27                 // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.daemon:(Z)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
      16: invokevirtual #28                 // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.build:()Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
      19: astore_0
      20: iconst_1
      21: aload_0
      22: invokestatic  #29                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      25: areturn

  static java.lang.Object access$000(org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger);
    Code:
       0: aload_0
       1: getfield      #2                  // Field controllerParam:Ljava/lang/Object;
       4: areturn

  static org.apache.commons.configuration2.reloading.ReloadingController access$100(org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger);
    Code:
       0: aload_0
       1: getfield      #1                  // Field controller:Lorg/apache/commons/configuration2/reloading/ReloadingController;
       4: areturn
}
