Compiled from "ReadWriteSynchronizer.java"
public class org.apache.commons.configuration2.sync.ReadWriteSynchronizer implements org.apache.commons.configuration2.sync.Synchronizer {
  private final java.util.concurrent.locks.ReadWriteLock lock;

  public org.apache.commons.configuration2.sync.ReadWriteSynchronizer(java.util.concurrent.locks.ReadWriteLock);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          16
      13: invokestatic  #2                  // Method createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;
      16: putfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
      19: return

  public org.apache.commons.configuration2.sync.ReadWriteSynchronizer();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #4                  // Method "<init>":(Ljava/util/concurrent/locks/ReadWriteLock;)V
       5: return

  public void beginRead();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: return

  public void endRead();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      14: return

  public void beginWrite();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: return

  public void endWrite();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      14: return

  private static java.util.concurrent.locks.ReadWriteLock createDefaultLock();
    Code:
       0: new           #9                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       3: dup
       4: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
       7: areturn
}
