Compiled from "ReloadingController.java"
public class org.apache.commons.configuration2.reloading.ReloadingController implements org.apache.commons.configuration2.event.EventSource {
  private final org.apache.commons.configuration2.reloading.ReloadingDetector detector;

  private final org.apache.commons.configuration2.event.EventListenerList listeners;

  private boolean reloadingState;

  public org.apache.commons.configuration2.reloading.ReloadingController(org.apache.commons.configuration2.reloading.ReloadingDetector);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String ReloadingDetector must not be null!
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field detector:Lorg/apache/commons/configuration2/reloading/ReloadingDetector;
      23: aload_0
      24: new           #6                  // class org/apache/commons/configuration2/event/EventListenerList
      27: dup
      28: invokespecial #7                  // Method org/apache/commons/configuration2/event/EventListenerList."<init>":()V
      31: putfield      #8                  // Field listeners:Lorg/apache/commons/configuration2/event/EventListenerList;
      34: return

  public org.apache.commons.configuration2.reloading.ReloadingDetector getDetector();
    Code:
       0: aload_0
       1: getfield      #5                  // Field detector:Lorg/apache/commons/configuration2/reloading/ReloadingDetector;
       4: areturn

  public <T extends org.apache.commons.configuration2.event.Event> void addEventListener(org.apache.commons.configuration2.event.EventType<T>, org.apache.commons.configuration2.event.EventListener<? super T>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field listeners:Lorg/apache/commons/configuration2/event/EventListenerList;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method org/apache/commons/configuration2/event/EventListenerList.addEventListener:(Lorg/apache/commons/configuration2/event/EventType;Lorg/apache/commons/configuration2/event/EventListener;)V
       9: return

  public <T extends org.apache.commons.configuration2.event.Event> boolean removeEventListener(org.apache.commons.configuration2.event.EventType<T>, org.apache.commons.configuration2.event.EventListener<? super T>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field listeners:Lorg/apache/commons/configuration2/event/EventListenerList;
       4: aload_1
       5: aload_2
       6: invokevirtual #10                 // Method org/apache/commons/configuration2/event/EventListenerList.removeEventListener:(Lorg/apache/commons/configuration2/event/EventType;Lorg/apache/commons/configuration2/event/EventListener;)Z
       9: ireturn

  public synchronized boolean isInReloadingState();
    Code:
       0: aload_0
       1: getfield      #11                 // Field reloadingState:Z
       4: ireturn

  public boolean checkForReloading(java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: invokevirtual #12                 // Method isInReloadingState:()Z
      10: ifeq          17
      13: iconst_1
      14: aload_3
      15: monitorexit
      16: ireturn
      17: aload_0
      18: invokevirtual #13                 // Method getDetector:()Lorg/apache/commons/configuration2/reloading/ReloadingDetector;
      21: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/configuration2/reloading/ReloadingDetector.isReloadingRequired:()Z
      26: ifeq          36
      29: iconst_1
      30: istore_2
      31: aload_0
      32: iconst_1
      33: putfield      #11                 // Field reloadingState:Z
      36: aload_3
      37: monitorexit
      38: goto          48
      41: astore        4
      43: aload_3
      44: monitorexit
      45: aload         4
      47: athrow
      48: iload_2
      49: ifeq          70
      52: aload_0
      53: getfield      #8                  // Field listeners:Lorg/apache/commons/configuration2/event/EventListenerList;
      56: new           #15                 // class org/apache/commons/configuration2/reloading/ReloadingEvent
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #16                 // Method org/apache/commons/configuration2/reloading/ReloadingEvent."<init>":(Lorg/apache/commons/configuration2/reloading/ReloadingController;Ljava/lang/Object;)V
      65: invokevirtual #17                 // Method org/apache/commons/configuration2/event/EventListenerList.fire:(Lorg/apache/commons/configuration2/event/Event;)V
      68: iconst_1
      69: ireturn
      70: iconst_0
      71: ireturn
    Exception table:
       from    to  target type
           6    16    41   any
          17    38    41   any
          41    45    41   any

  public synchronized void resetReloadingState();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isInReloadingState:()Z
       4: ifeq          21
       7: aload_0
       8: invokevirtual #13                 // Method getDetector:()Lorg/apache/commons/configuration2/reloading/ReloadingDetector;
      11: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/configuration2/reloading/ReloadingDetector.reloadingPerformed:()V
      16: aload_0
      17: iconst_0
      18: putfield      #11                 // Field reloadingState:Z
      21: return
}
