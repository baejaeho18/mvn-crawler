Compiled from "BasicBuilderParameters.java"
public class org.apache.commons.configuration2.builder.BasicBuilderParameters implements java.lang.Cloneable, org.apache.commons.configuration2.builder.BuilderParameters, org.apache.commons.configuration2.builder.BasicBuilderProperties<org.apache.commons.configuration2.builder.BasicBuilderParameters> {
  private static final java.lang.String PROP_THROW_EXCEPTION_ON_MISSING;

  private static final java.lang.String PROP_LIST_DELIMITER_HANDLER;

  private static final java.lang.String PROP_LOGGER;

  private static final java.lang.String PROP_INTERPOLATOR;

  private static final java.lang.String PROP_PREFIX_LOOKUPS;

  private static final java.lang.String PROP_DEFAULT_LOOKUPS;

  private static final java.lang.String PROP_PARENT_INTERPOLATOR;

  private static final java.lang.String PROP_SYNCHRONIZER;

  private static final java.lang.String PROP_CONVERSION_HANDLER;

  private static final java.lang.String PROP_CONFIGURATION_DECODER;

  private static final java.lang.String PROP_BEAN_HELPER;

  private java.util.Map<java.lang.String, java.lang.Object> properties;

  public org.apache.commons.configuration2.builder.BasicBuilderParameters();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field properties:Ljava/util/Map;
      15: return

  public java.util.Map<java.lang.String, java.lang.Object> getParameters();
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #5                  // Field properties:Ljava/util/Map;
       8: invokespecial #6                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_1
      13: ldc           #8                  // String interpolator
      15: invokevirtual #9                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      18: ifeq          42
      21: aload_1
      22: ldc           #10                 // String prefixLookups
      24: invokevirtual #11                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_1
      29: ldc           #12                 // String defaultLookups
      31: invokevirtual #11                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: ldc           #13                 // String parentInterpolator
      38: invokevirtual #11                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_1
      43: invokestatic  #14                 // Method createDefensiveCopies:(Ljava/util/HashMap;)V
      46: aload_1
      47: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setLogger(org.apache.commons.configuration2.io.ConfigurationLogger);
    Code:
       0: aload_0
       1: ldc           #15                 // String logger
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setThrowExceptionOnMissing(boolean);
    Code:
       0: aload_0
       1: ldc           #17                 // String throwExceptionOnMissing
       3: iload_1
       4: invokestatic  #18                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
      10: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setListDelimiterHandler(org.apache.commons.configuration2.convert.ListDelimiterHandler);
    Code:
       0: aload_0
       1: ldc           #19                 // String listDelimiterHandler
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setInterpolator(org.apache.commons.configuration2.interpol.ConfigurationInterpolator);
    Code:
       0: aload_0
       1: ldc           #8                  // String interpolator
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setPrefixLookups(java.util.Map<java.lang.String, ? extends org.apache.commons.configuration2.interpol.Lookup>);
    Code:
       0: aload_1
       1: ifnonnull     18
       4: aload_0
       5: getfield      #5                  // Field properties:Ljava/util/Map;
       8: ldc           #10                 // String prefixLookups
      10: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: areturn
      18: aload_0
      19: ldc           #10                 // String prefixLookups
      21: new           #3                  // class java/util/HashMap
      24: dup
      25: aload_1
      26: invokespecial #6                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      29: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
      32: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setDefaultLookups(java.util.Collection<? extends org.apache.commons.configuration2.interpol.Lookup>);
    Code:
       0: aload_1
       1: ifnonnull     18
       4: aload_0
       5: getfield      #5                  // Field properties:Ljava/util/Map;
       8: ldc           #12                 // String defaultLookups
      10: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: areturn
      18: aload_0
      19: ldc           #12                 // String defaultLookups
      21: new           #21                 // class java/util/ArrayList
      24: dup
      25: aload_1
      26: invokespecial #22                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      29: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
      32: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setParentInterpolator(org.apache.commons.configuration2.interpol.ConfigurationInterpolator);
    Code:
       0: aload_0
       1: ldc           #13                 // String parentInterpolator
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setSynchronizer(org.apache.commons.configuration2.sync.Synchronizer);
    Code:
       0: aload_0
       1: ldc           #23                 // String synchronizer
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setConversionHandler(org.apache.commons.configuration2.convert.ConversionHandler);
    Code:
       0: aload_0
       1: ldc           #24                 // String conversionHandler
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setBeanHelper(org.apache.commons.configuration2.beanutils.BeanHelper);
    Code:
       0: aload_0
       1: ldc           #25                 // String config-BeanHelper
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters setConfigurationDecoder(org.apache.commons.configuration2.ConfigurationDecoder);
    Code:
       0: aload_0
       1: ldc           #26                 // String configurationDecoder
       3: aload_1
       4: invokespecial #16                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       7: areturn

  public void merge(org.apache.commons.configuration2.builder.BuilderParameters);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #27                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #28                 // String Parameters to merge must not be null!
      10: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/configuration2/builder/BuilderParameters.getParameters:()Ljava/util/Map;
      20: invokeinterface #31,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      25: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore_2
      31: aload_2
      32: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          107
      40: aload_2
      41: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #35                 // class java/util/Map$Entry
      49: astore_3
      50: aload_0
      51: getfield      #5                  // Field properties:Ljava/util/Map;
      54: aload_3
      55: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: invokeinterface #37,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      65: ifne          104
      68: aload_3
      69: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: checkcast     #38                 // class java/lang/String
      77: ldc           #39                 // String config-
      79: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      82: ifne          104
      85: aload_0
      86: aload_3
      87: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      92: checkcast     #38                 // class java/lang/String
      95: aload_3
      96: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     101: invokevirtual #42                 // Method storeProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     104: goto          31
     107: return

  public void inheritFrom(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #27                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #43                 // String Source properties must not be null!
      10: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: bipush        7
      18: anewarray     #38                 // class java/lang/String
      21: dup
      22: iconst_0
      23: ldc           #25                 // String config-BeanHelper
      25: aastore
      26: dup
      27: iconst_1
      28: ldc           #26                 // String configurationDecoder
      30: aastore
      31: dup
      32: iconst_2
      33: ldc           #24                 // String conversionHandler
      35: aastore
      36: dup
      37: iconst_3
      38: ldc           #19                 // String listDelimiterHandler
      40: aastore
      41: dup
      42: iconst_4
      43: ldc           #15                 // String logger
      45: aastore
      46: dup
      47: iconst_5
      48: ldc           #23                 // String synchronizer
      50: aastore
      51: dup
      52: bipush        6
      54: ldc           #17                 // String throwExceptionOnMissing
      56: aastore
      57: invokevirtual #44                 // Method copyPropertiesFrom:(Ljava/util/Map;[Ljava/lang/String;)V
      60: return

  public static org.apache.commons.configuration2.interpol.InterpolatorSpecification fetchInterpolatorSpecification(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method checkParameters:(Ljava/util/Map;)V
       4: new           #46                 // class org/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder
       7: dup
       8: invokespecial #47                 // Method org/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder."<init>":()V
      11: aload_0
      12: ldc           #8                  // String interpolator
      14: ldc           #48                 // class org/apache/commons/configuration2/interpol/ConfigurationInterpolator
      16: invokestatic  #49                 // Method fetchParameter:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #48                 // class org/apache/commons/configuration2/interpol/ConfigurationInterpolator
      22: invokevirtual #50                 // Method org/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder.withInterpolator:(Lorg/apache/commons/configuration2/interpol/ConfigurationInterpolator;)Lorg/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder;
      25: aload_0
      26: ldc           #13                 // String parentInterpolator
      28: ldc           #48                 // class org/apache/commons/configuration2/interpol/ConfigurationInterpolator
      30: invokestatic  #49                 // Method fetchParameter:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      33: checkcast     #48                 // class org/apache/commons/configuration2/interpol/ConfigurationInterpolator
      36: invokevirtual #51                 // Method org/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder.withParentInterpolator:(Lorg/apache/commons/configuration2/interpol/ConfigurationInterpolator;)Lorg/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder;
      39: aload_0
      40: invokestatic  #52                 // Method fetchAndCheckPrefixLookups:(Ljava/util/Map;)Ljava/util/Map;
      43: invokevirtual #53                 // Method org/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder.withPrefixLookups:(Ljava/util/Map;)Lorg/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder;
      46: aload_0
      47: invokestatic  #54                 // Method fetchAndCheckDefaultLookups:(Ljava/util/Map;)Ljava/util/Collection;
      50: invokevirtual #55                 // Method org/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder.withDefaultLookups:(Ljava/util/Collection;)Lorg/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder;
      53: invokevirtual #56                 // Method org/apache/commons/configuration2/interpol/InterpolatorSpecification$Builder.create:()Lorg/apache/commons/configuration2/interpol/InterpolatorSpecification;
      56: areturn

  public static org.apache.commons.configuration2.beanutils.BeanHelper fetchBeanHelper(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method checkParameters:(Ljava/util/Map;)V
       4: aload_0
       5: ldc           #25                 // String config-BeanHelper
       7: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #58                 // class org/apache/commons/configuration2/beanutils/BeanHelper
      15: areturn

  public org.apache.commons.configuration2.builder.BasicBuilderParameters clone();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #7                  // class org/apache/commons/configuration2/builder/BasicBuilderParameters
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #60                 // Method getParameters:()Ljava/util/Map;
      13: putfield      #5                  // Field properties:Ljava/util/Map;
      16: aload_1
      17: areturn
      18: astore_1
      19: new           #62                 // class java/lang/AssertionError
      22: dup
      23: aload_1
      24: invokespecial #63                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      27: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/CloneNotSupportedException

  protected void storeProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     18
       4: aload_0
       5: getfield      #5                  // Field properties:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: goto          30
      18: aload_0
      19: getfield      #5                  // Field properties:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  protected java.lang.Object fetchProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  protected void copyPropertiesFrom(java.util.Map<java.lang.String, ?>, java.lang.String...);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     51
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_1
      23: aload         6
      25: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: astore        7
      32: aload         7
      34: ifnull        45
      37: aload_0
      38: aload         6
      40: aload         7
      42: invokevirtual #42                 // Method storeProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      45: iinc          5, 1
      48: goto          9
      51: return

  private org.apache.commons.configuration2.builder.BasicBuilderParameters setProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #42                 // Method storeProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: areturn

  private static void createDefensiveCopies(java.util.HashMap<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method fetchPrefixLookups:(Ljava/util/Map;)Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_0
      10: ldc           #10                 // String prefixLookups
      12: new           #3                  // class java/util/HashMap
      15: dup
      16: aload_1
      17: invokespecial #6                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      20: invokevirtual #66                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: invokestatic  #67                 // Method fetchDefaultLookups:(Ljava/util/Map;)Ljava/util/Collection;
      28: astore_2
      29: aload_2
      30: ifnull        48
      33: aload_0
      34: ldc           #12                 // String defaultLookups
      36: new           #21                 // class java/util/ArrayList
      39: dup
      40: aload_2
      41: invokespecial #22                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      44: invokevirtual #66                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: return

  private static java.util.Map<java.lang.String, ? extends org.apache.commons.configuration2.interpol.Lookup> fetchPrefixLookups(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ldc           #10                 // String prefixLookups
       3: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #68                 // class java/util/Map
      11: astore_1
      12: aload_1
      13: areturn

  private static java.util.Map<java.lang.String, ? extends org.apache.commons.configuration2.interpol.Lookup> fetchAndCheckPrefixLookups(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ldc           #10                 // String prefixLookups
       3: ldc           #68                 // class java/util/Map
       5: invokestatic  #49                 // Method fetchParameter:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #68                 // class java/util/Map
      11: astore_1
      12: aload_1
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_1
      19: invokeinterface #31,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          103
      39: aload_2
      40: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #35                 // class java/util/Map$Entry
      48: astore_3
      49: aload_3
      50: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: instanceof    #38                 // class java/lang/String
      58: ifeq          73
      61: aload_3
      62: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      67: instanceof    #69                 // class org/apache/commons/configuration2/interpol/Lookup
      70: ifne          100
      73: new           #27                 // class java/lang/IllegalArgumentException
      76: dup
      77: new           #70                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #72                 // String Map with prefix lookups contains invalid data:
      86: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: goto          30
     103: aload_0
     104: invokestatic  #65                 // Method fetchPrefixLookups:(Ljava/util/Map;)Ljava/util/Map;
     107: areturn

  private static java.util.Collection<? extends org.apache.commons.configuration2.interpol.Lookup> fetchDefaultLookups(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ldc           #12                 // String defaultLookups
       3: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #76                 // class java/util/Collection
      11: astore_1
      12: aload_1
      13: areturn

  private static java.util.Collection<? extends org.apache.commons.configuration2.interpol.Lookup> fetchAndCheckDefaultLookups(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ldc           #12                 // String defaultLookups
       3: ldc           #76                 // class java/util/Collection
       5: invokestatic  #49                 // Method fetchParameter:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #76                 // class java/util/Collection
      11: astore_1
      12: aload_1
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_1
      19: invokeinterface #77,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          78
      34: aload_2
      35: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: astore_3
      41: aload_3
      42: instanceof    #69                 // class org/apache/commons/configuration2/interpol/Lookup
      45: ifne          75
      48: new           #27                 // class java/lang/IllegalArgumentException
      51: dup
      52: new           #70                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #78                 // String Collection with default lookups contains invalid data:
      61: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: goto          25
      78: aload_0
      79: invokestatic  #67                 // Method fetchDefaultLookups:(Ljava/util/Map;)Ljava/util/Collection;
      82: areturn

  private static <T> T fetchParameter(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore_3
       8: aload_3
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_2
      15: aload_3
      16: invokevirtual #79                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      19: ifne          50
      22: new           #27                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #80                 // String Parameter %s is not of type %s!
      28: iconst_2
      29: anewarray     #81                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_1
      35: aastore
      36: dup
      37: iconst_1
      38: aload_2
      39: invokevirtual #82                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      42: aastore
      43: invokestatic  #83                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: aload_3
      52: invokevirtual #84                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      55: areturn

  private static void checkParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #27                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #85                 // String Parameters map must not be null!
      10: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method clone:()Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       4: areturn

  public java.lang.Object setBeanHelper(org.apache.commons.configuration2.beanutils.BeanHelper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method setBeanHelper:(Lorg/apache/commons/configuration2/beanutils/BeanHelper;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setConfigurationDecoder(org.apache.commons.configuration2.ConfigurationDecoder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method setConfigurationDecoder:(Lorg/apache/commons/configuration2/ConfigurationDecoder;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setConversionHandler(org.apache.commons.configuration2.convert.ConversionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method setConversionHandler:(Lorg/apache/commons/configuration2/convert/ConversionHandler;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setSynchronizer(org.apache.commons.configuration2.sync.Synchronizer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method setSynchronizer:(Lorg/apache/commons/configuration2/sync/Synchronizer;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setParentInterpolator(org.apache.commons.configuration2.interpol.ConfigurationInterpolator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #91                 // Method setParentInterpolator:(Lorg/apache/commons/configuration2/interpol/ConfigurationInterpolator;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setDefaultLookups(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method setDefaultLookups:(Ljava/util/Collection;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setPrefixLookups(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method setPrefixLookups:(Ljava/util/Map;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setInterpolator(org.apache.commons.configuration2.interpol.ConfigurationInterpolator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setInterpolator:(Lorg/apache/commons/configuration2/interpol/ConfigurationInterpolator;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setListDelimiterHandler(org.apache.commons.configuration2.convert.ListDelimiterHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #95                 // Method setListDelimiterHandler:(Lorg/apache/commons/configuration2/convert/ListDelimiterHandler;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setThrowExceptionOnMissing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #96                 // Method setThrowExceptionOnMissing:(Z)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn

  public java.lang.Object setLogger(org.apache.commons.configuration2.io.ConfigurationLogger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #97                 // Method setLogger:(Lorg/apache/commons/configuration2/io/ConfigurationLogger;)Lorg/apache/commons/configuration2/builder/BasicBuilderParameters;
       5: areturn
}
