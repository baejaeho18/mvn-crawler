Compiled from "PropertiesUtils.java"
public class org.apache.pulsar.client.internal.PropertiesUtils {
  public org.apache.pulsar.client.internal.PropertiesUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<java.lang.String, java.lang.Object> filterAndMapProperties(java.util.Properties, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String
       4: invokestatic  #3                  // Method filterAndMapProperties:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
       7: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> filterAndMapProperties(java.util.Properties, java.lang.String, java.lang.String);
    Code:
       0: new           #4                  // class java/util/HashMap
       3: dup
       4: invokespecial #5                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_1
       9: invokevirtual #6                  // Method java/lang/String.length:()I
      12: istore        4
      14: aload_0
      15: aload_1
      16: iload         4
      18: aload_3
      19: aload_2
      20: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Ljava/lang/String;ILjava/util/Map;Ljava/lang/String;)Ljava/util/function/BiConsumer;
      25: invokevirtual #8                  // Method java/util/Properties.forEach:(Ljava/util/function/BiConsumer;)V
      28: aload_3
      29: areturn

  private static void lambda$filterAndMapProperties$0(java.lang.String, int, java.util.Map, java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload         4
       2: instanceof    #9                  // class java/lang/String
       5: ifne          9
       8: return
       9: aload         4
      11: checkcast     #9                  // class java/lang/String
      14: astore        6
      16: aload         6
      18: aload_0
      19: invokevirtual #10                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      22: ifeq          66
      25: aload         5
      27: ifnull        66
      30: aload         6
      32: iload_1
      33: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      36: astore        7
      38: aload_2
      39: new           #12                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      46: aload_3
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload         7
      52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: aload         5
      60: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: return
}
