Compiled from "TreeTraversingParser.java"
public class org.codehaus.jackson.node.TreeTraversingParser extends org.codehaus.jackson.impl.JsonParserMinimalBase {
  protected org.codehaus.jackson.ObjectCodec _objectCodec;

  protected org.codehaus.jackson.node.NodeCursor _nodeCursor;

  protected org.codehaus.jackson.JsonToken _nextToken;

  protected boolean _startContainer;

  protected boolean _closed;

  public org.codehaus.jackson.node.TreeTraversingParser(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/codehaus/jackson/JsonNode;Lorg/codehaus/jackson/ObjectCodec;)V
       6: return

  public org.codehaus.jackson.node.TreeTraversingParser(org.codehaus.jackson.JsonNode, org.codehaus.jackson.ObjectCodec);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #2                  // Method org/codehaus/jackson/impl/JsonParserMinimalBase."<init>":(I)V
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
      10: aload_1
      11: invokevirtual #4                  // Method org/codehaus/jackson/JsonNode.isArray:()Z
      14: ifeq          40
      17: aload_0
      18: getstatic     #5                  // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
      21: putfield      #6                  // Field _nextToken:Lorg/codehaus/jackson/JsonToken;
      24: aload_0
      25: new           #7                  // class org/codehaus/jackson/node/NodeCursor$Array
      28: dup
      29: aload_1
      30: aconst_null
      31: invokespecial #8                  // Method org/codehaus/jackson/node/NodeCursor$Array."<init>":(Lorg/codehaus/jackson/JsonNode;Lorg/codehaus/jackson/node/NodeCursor;)V
      34: putfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      37: goto          83
      40: aload_1
      41: invokevirtual #10                 // Method org/codehaus/jackson/JsonNode.isObject:()Z
      44: ifeq          70
      47: aload_0
      48: getstatic     #11                 // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
      51: putfield      #6                  // Field _nextToken:Lorg/codehaus/jackson/JsonToken;
      54: aload_0
      55: new           #12                 // class org/codehaus/jackson/node/NodeCursor$Object
      58: dup
      59: aload_1
      60: aconst_null
      61: invokespecial #13                 // Method org/codehaus/jackson/node/NodeCursor$Object."<init>":(Lorg/codehaus/jackson/JsonNode;Lorg/codehaus/jackson/node/NodeCursor;)V
      64: putfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      67: goto          83
      70: aload_0
      71: new           #14                 // class org/codehaus/jackson/node/NodeCursor$RootValue
      74: dup
      75: aload_1
      76: aconst_null
      77: invokespecial #15                 // Method org/codehaus/jackson/node/NodeCursor$RootValue."<init>":(Lorg/codehaus/jackson/JsonNode;Lorg/codehaus/jackson/node/NodeCursor;)V
      80: putfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      83: return

  public void setCodec(org.codehaus.jackson.ObjectCodec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
       5: return

  public org.codehaus.jackson.ObjectCodec getCodec();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field _closed:Z
       4: ifne          22
       7: aload_0
       8: iconst_1
       9: putfield      #16                 // Field _closed:Z
      12: aload_0
      13: aconst_null
      14: putfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      17: aload_0
      18: aconst_null
      19: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      22: return

  public org.codehaus.jackson.JsonToken nextToken() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _nextToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        25
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field _nextToken:Lorg/codehaus/jackson/JsonToken;
      12: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      15: aload_0
      16: aconst_null
      17: putfield      #6                  // Field _nextToken:Lorg/codehaus/jackson/JsonToken;
      20: aload_0
      21: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      24: areturn
      25: aload_0
      26: getfield      #18                 // Field _startContainer:Z
      29: ifeq          127
      32: aload_0
      33: iconst_0
      34: putfield      #18                 // Field _startContainer:Z
      37: aload_0
      38: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      41: invokevirtual #19                 // Method org/codehaus/jackson/node/NodeCursor.currentHasChildren:()Z
      44: ifne          75
      47: aload_0
      48: aload_0
      49: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      52: getstatic     #11                 // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
      55: if_acmpne     64
      58: getstatic     #20                 // Field org/codehaus/jackson/JsonToken.END_OBJECT:Lorg/codehaus/jackson/JsonToken;
      61: goto          67
      64: getstatic     #21                 // Field org/codehaus/jackson/JsonToken.END_ARRAY:Lorg/codehaus/jackson/JsonToken;
      67: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      70: aload_0
      71: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      74: areturn
      75: aload_0
      76: aload_0
      77: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      80: invokevirtual #22                 // Method org/codehaus/jackson/node/NodeCursor.iterateChildren:()Lorg/codehaus/jackson/node/NodeCursor;
      83: putfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      86: aload_0
      87: aload_0
      88: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      91: invokevirtual #23                 // Method org/codehaus/jackson/node/NodeCursor.nextToken:()Lorg/codehaus/jackson/JsonToken;
      94: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      97: aload_0
      98: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     101: getstatic     #11                 // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
     104: if_acmpeq     117
     107: aload_0
     108: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     111: getstatic     #5                  // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
     114: if_acmpne     122
     117: aload_0
     118: iconst_1
     119: putfield      #18                 // Field _startContainer:Z
     122: aload_0
     123: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     126: areturn
     127: aload_0
     128: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
     131: ifnonnull     141
     134: aload_0
     135: iconst_1
     136: putfield      #16                 // Field _closed:Z
     139: aconst_null
     140: areturn
     141: aload_0
     142: aload_0
     143: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
     146: invokevirtual #23                 // Method org/codehaus/jackson/node/NodeCursor.nextToken:()Lorg/codehaus/jackson/JsonToken;
     149: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     152: aload_0
     153: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     156: ifnull        189
     159: aload_0
     160: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     163: getstatic     #11                 // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
     166: if_acmpeq     179
     169: aload_0
     170: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     173: getstatic     #5                  // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
     176: if_acmpne     184
     179: aload_0
     180: iconst_1
     181: putfield      #18                 // Field _startContainer:Z
     184: aload_0
     185: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     188: areturn
     189: aload_0
     190: aload_0
     191: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
     194: invokevirtual #24                 // Method org/codehaus/jackson/node/NodeCursor.endToken:()Lorg/codehaus/jackson/JsonToken;
     197: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     200: aload_0
     201: aload_0
     202: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
     205: invokevirtual #25                 // Method org/codehaus/jackson/node/NodeCursor.getParent:()Lorg/codehaus/jackson/node/NodeCursor;
     208: putfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
     211: aload_0
     212: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     215: areturn

  public org.codehaus.jackson.JsonParser skipChildren() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #11                 // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     25
      10: aload_0
      11: iconst_0
      12: putfield      #18                 // Field _startContainer:Z
      15: aload_0
      16: getstatic     #20                 // Field org/codehaus/jackson/JsonToken.END_OBJECT:Lorg/codehaus/jackson/JsonToken;
      19: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      22: goto          47
      25: aload_0
      26: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      29: getstatic     #5                  // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
      32: if_acmpne     47
      35: aload_0
      36: iconst_0
      37: putfield      #18                 // Field _startContainer:Z
      40: aload_0
      41: getstatic     #21                 // Field org/codehaus/jackson/JsonToken.END_ARRAY:Lorg/codehaus/jackson/JsonToken;
      44: putfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      47: aload_0
      48: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _closed:Z
       4: ireturn

  public java.lang.String getCurrentName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      15: invokevirtual #26                 // Method org/codehaus/jackson/node/NodeCursor.getCurrentName:()Ljava/lang/String;
      18: areturn

  public org.codehaus.jackson.JsonStreamContext getParsingContext();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
       4: areturn

  public org.codehaus.jackson.JsonLocation getTokenLocation();
    Code:
       0: getstatic     #27                 // Field org/codehaus/jackson/JsonLocation.NA:Lorg/codehaus/jackson/JsonLocation;
       3: areturn

  public org.codehaus.jackson.JsonLocation getCurrentLocation();
    Code:
       0: getstatic     #27                 // Field org/codehaus/jackson/JsonLocation.NA:Lorg/codehaus/jackson/JsonLocation;
       3: areturn

  public java.lang.String getText();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _closed:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: getstatic     #28                 // Field org/codehaus/jackson/node/TreeTraversingParser$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      12: aload_0
      13: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      16: invokevirtual #29                 // Method org/codehaus/jackson/JsonToken.ordinal:()I
      19: iaload
      20: tableswitch   { // 1 to 5
                     1: 56
                     2: 64
                     3: 72
                     4: 72
                     5: 83
               default: 104
          }
      56: aload_0
      57: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      60: invokevirtual #26                 // Method org/codehaus/jackson/node/NodeCursor.getCurrentName:()Ljava/lang/String;
      63: areturn
      64: aload_0
      65: invokevirtual #30                 // Method currentNode:()Lorg/codehaus/jackson/JsonNode;
      68: invokevirtual #31                 // Method org/codehaus/jackson/JsonNode.getTextValue:()Ljava/lang/String;
      71: areturn
      72: aload_0
      73: invokevirtual #30                 // Method currentNode:()Lorg/codehaus/jackson/JsonNode;
      76: invokevirtual #32                 // Method org/codehaus/jackson/JsonNode.getNumberValue:()Ljava/lang/Number;
      79: invokestatic  #33                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      82: areturn
      83: aload_0
      84: invokevirtual #30                 // Method currentNode:()Lorg/codehaus/jackson/JsonNode;
      87: astore_1
      88: aload_1
      89: ifnull        104
      92: aload_1
      93: invokevirtual #34                 // Method org/codehaus/jackson/JsonNode.isBinary:()Z
      96: ifeq          104
      99: aload_1
     100: invokevirtual #35                 // Method org/codehaus/jackson/JsonNode.asText:()Ljava/lang/String;
     103: areturn
     104: aload_0
     105: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     108: ifnonnull     115
     111: aconst_null
     112: goto          122
     115: aload_0
     116: getfield      #17                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     119: invokevirtual #36                 // Method org/codehaus/jackson/JsonToken.asString:()Ljava/lang/String;
     122: areturn

  public char[] getTextCharacters() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getText:()Ljava/lang/String;
       4: invokevirtual #38                 // Method java/lang/String.toCharArray:()[C
       7: areturn

  public int getTextLength() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getText:()Ljava/lang/String;
       4: invokevirtual #39                 // Method java/lang/String.length:()I
       7: ireturn

  public int getTextOffset() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasTextCharacters();
    Code:
       0: iconst_0
       1: ireturn

  public org.codehaus.jackson.JsonParser$NumberType getNumberType() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #41                 // Method org/codehaus/jackson/JsonNode.getNumberType:()Lorg/codehaus/jackson/JsonParser$NumberType;
      17: areturn

  public java.math.BigInteger getBigIntegerValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: invokevirtual #42                 // Method org/codehaus/jackson/JsonNode.getBigIntegerValue:()Ljava/math/BigInteger;
       7: areturn

  public java.math.BigDecimal getDecimalValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: invokevirtual #43                 // Method org/codehaus/jackson/JsonNode.getDecimalValue:()Ljava/math/BigDecimal;
       7: areturn

  public double getDoubleValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: invokevirtual #44                 // Method org/codehaus/jackson/JsonNode.getDoubleValue:()D
       7: dreturn

  public float getFloatValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: invokevirtual #44                 // Method org/codehaus/jackson/JsonNode.getDoubleValue:()D
       7: d2f
       8: freturn

  public long getLongValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: invokevirtual #45                 // Method org/codehaus/jackson/JsonNode.getLongValue:()J
       7: lreturn

  public int getIntValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: invokevirtual #46                 // Method org/codehaus/jackson/JsonNode.getIntValue:()I
       7: ireturn

  public java.lang.Number getNumberValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentNumericNode:()Lorg/codehaus/jackson/JsonNode;
       4: invokevirtual #32                 // Method org/codehaus/jackson/JsonNode.getNumberValue:()Ljava/lang/Number;
       7: areturn

  public java.lang.Object getEmbeddedObject();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _closed:Z
       4: ifne          46
       7: aload_0
       8: invokevirtual #30                 // Method currentNode:()Lorg/codehaus/jackson/JsonNode;
      11: astore_1
      12: aload_1
      13: ifnull        46
      16: aload_1
      17: invokevirtual #47                 // Method org/codehaus/jackson/JsonNode.isPojo:()Z
      20: ifeq          31
      23: aload_1
      24: checkcast     #48                 // class org/codehaus/jackson/node/POJONode
      27: invokevirtual #49                 // Method org/codehaus/jackson/node/POJONode.getPojo:()Ljava/lang/Object;
      30: areturn
      31: aload_1
      32: invokevirtual #34                 // Method org/codehaus/jackson/JsonNode.isBinary:()Z
      35: ifeq          46
      38: aload_1
      39: checkcast     #50                 // class org/codehaus/jackson/node/BinaryNode
      42: invokevirtual #51                 // Method org/codehaus/jackson/node/BinaryNode.getBinaryValue:()[B
      45: areturn
      46: aconst_null
      47: areturn

  public byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method currentNode:()Lorg/codehaus/jackson/JsonNode;
       4: astore_2
       5: aload_2
       6: ifnull        53
       9: aload_2
      10: invokevirtual #52                 // Method org/codehaus/jackson/JsonNode.getBinaryValue:()[B
      13: astore_3
      14: aload_3
      15: ifnull        20
      18: aload_3
      19: areturn
      20: aload_2
      21: invokevirtual #47                 // Method org/codehaus/jackson/JsonNode.isPojo:()Z
      24: ifeq          53
      27: aload_2
      28: checkcast     #48                 // class org/codehaus/jackson/node/POJONode
      31: invokevirtual #49                 // Method org/codehaus/jackson/node/POJONode.getPojo:()Ljava/lang/Object;
      34: astore        4
      36: aload         4
      38: instanceof    #53                 // class "[B"
      41: ifeq          53
      44: aload         4
      46: checkcast     #53                 // class "[B"
      49: checkcast     #53                 // class "[B"
      52: areturn
      53: aconst_null
      54: areturn

  protected org.codehaus.jackson.JsonNode currentNode();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _closed:Z
       4: ifne          14
       7: aload_0
       8: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #9                  // Field _nodeCursor:Lorg/codehaus/jackson/node/NodeCursor;
      20: invokevirtual #54                 // Method org/codehaus/jackson/node/NodeCursor.currentNode:()Lorg/codehaus/jackson/JsonNode;
      23: areturn

  protected org.codehaus.jackson.JsonNode currentNumericNode() throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method currentNode:()Lorg/codehaus/jackson/JsonNode;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #55                 // Method org/codehaus/jackson/JsonNode.isNumber:()Z
      13: ifne          58
      16: aload_1
      17: ifnonnull     24
      20: aconst_null
      21: goto          28
      24: aload_1
      25: invokevirtual #56                 // Method org/codehaus/jackson/JsonNode.asToken:()Lorg/codehaus/jackson/JsonToken;
      28: astore_2
      29: aload_0
      30: new           #57                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #59                 // String Current token (
      39: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: ldc           #62                 // String ) not numeric, can not use numeric value accessors
      48: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokevirtual #64                 // Method _constructError:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParseException;
      57: athrow
      58: aload_1
      59: areturn

  protected void _handleEOF() throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method _throwInternal:()V
       4: return
}
