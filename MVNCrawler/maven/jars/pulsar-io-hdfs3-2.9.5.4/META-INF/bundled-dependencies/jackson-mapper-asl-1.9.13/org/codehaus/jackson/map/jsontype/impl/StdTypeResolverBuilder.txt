Compiled from "StdTypeResolverBuilder.java"
public class org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder implements org.codehaus.jackson.map.jsontype.TypeResolverBuilder<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder> {
  protected org.codehaus.jackson.annotate.JsonTypeInfo$Id _idType;

  protected org.codehaus.jackson.annotate.JsonTypeInfo$As _includeAs;

  protected java.lang.String _typeProperty;

  protected java.lang.Class<?> _defaultImpl;

  protected org.codehaus.jackson.map.jsontype.TypeIdResolver _customIdResolver;

  public java.lang.Class<?> getDefaultImpl();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
       4: areturn

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder();
    Code:
       0: new           #3                  // class org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder
       3: dup
       4: invokespecial #4                  // Method "<init>":()V
       7: getstatic     #5                  // Field org/codehaus/jackson/annotate/JsonTypeInfo$Id.NONE:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      10: aconst_null
      11: invokevirtual #6                  // Method init:(Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
      14: areturn

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id, org.codehaus.jackson.map.jsontype.TypeIdResolver);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String idType can not be null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #10                 // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      19: aload_0
      20: aload_2
      21: putfield      #11                 // Field _customIdResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      24: aload_0
      25: aload_1
      26: invokevirtual #12                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$Id.getDefaultPropertyName:()Ljava/lang/String;
      29: putfield      #13                 // Field _typeProperty:Ljava/lang/String;
      32: aload_0
      33: areturn

  public org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
       4: getstatic     #5                  // Field org/codehaus/jackson/annotate/JsonTypeInfo$Id.NONE:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
       7: if_acmpne     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: iconst_1
      17: iconst_0
      18: invokevirtual #14                 // Method idResolver:(Lorg/codehaus/jackson/map/MapperConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;ZZ)Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      21: astore        5
      23: getstatic     #15                 // Field org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder$1.$SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As:[I
      26: aload_0
      27: getfield      #16                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
      30: invokevirtual #17                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$As.ordinal:()I
      33: iaload
      34: tableswitch   { // 1 to 4
                     1: 64
                     2: 76
                     3: 92
                     4: 104
               default: 120
          }
      64: new           #18                 // class org/codehaus/jackson/map/jsontype/impl/AsArrayTypeSerializer
      67: dup
      68: aload         5
      70: aload         4
      72: invokespecial #19                 // Method org/codehaus/jackson/map/jsontype/impl/AsArrayTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;)V
      75: areturn
      76: new           #20                 // class org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeSerializer
      79: dup
      80: aload         5
      82: aload         4
      84: aload_0
      85: getfield      #13                 // Field _typeProperty:Ljava/lang/String;
      88: invokespecial #21                 // Method org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/String;)V
      91: areturn
      92: new           #22                 // class org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeSerializer
      95: dup
      96: aload         5
      98: aload         4
     100: invokespecial #23                 // Method org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;)V
     103: areturn
     104: new           #24                 // class org/codehaus/jackson/map/jsontype/impl/AsExternalTypeSerializer
     107: dup
     108: aload         5
     110: aload         4
     112: aload_0
     113: getfield      #13                 // Field _typeProperty:Ljava/lang/String;
     116: invokespecial #25                 // Method org/codehaus/jackson/map/jsontype/impl/AsExternalTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/String;)V
     119: areturn
     120: new           #26                 // class java/lang/IllegalStateException
     123: dup
     124: new           #27                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     131: ldc           #29                 // String Do not know how to construct standard type serializer for inclusion type:
     133: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_0
     137: getfield      #16                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
     140: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     143: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     149: athrow

  public org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
       4: getstatic     #5                  // Field org/codehaus/jackson/annotate/JsonTypeInfo$Id.NONE:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
       7: if_acmpne     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: iconst_0
      17: iconst_1
      18: invokevirtual #14                 // Method idResolver:(Lorg/codehaus/jackson/map/MapperConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;ZZ)Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      21: astore        5
      23: getstatic     #15                 // Field org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder$1.$SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As:[I
      26: aload_0
      27: getfield      #16                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
      30: invokevirtual #17                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$As.ordinal:()I
      33: iaload
      34: tableswitch   { // 1 to 4
                     1: 64
                     2: 81
                     3: 102
                     4: 119
               default: 140
          }
      64: new           #34                 // class org/codehaus/jackson/map/jsontype/impl/AsArrayTypeDeserializer
      67: dup
      68: aload_2
      69: aload         5
      71: aload         4
      73: aload_0
      74: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
      77: invokespecial #35                 // Method org/codehaus/jackson/map/jsontype/impl/AsArrayTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;)V
      80: areturn
      81: new           #36                 // class org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeDeserializer
      84: dup
      85: aload_2
      86: aload         5
      88: aload         4
      90: aload_0
      91: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
      94: aload_0
      95: getfield      #13                 // Field _typeProperty:Ljava/lang/String;
      98: invokespecial #37                 // Method org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;Ljava/lang/String;)V
     101: areturn
     102: new           #38                 // class org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeDeserializer
     105: dup
     106: aload_2
     107: aload         5
     109: aload         4
     111: aload_0
     112: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
     115: invokespecial #39                 // Method org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;)V
     118: areturn
     119: new           #40                 // class org/codehaus/jackson/map/jsontype/impl/AsExternalTypeDeserializer
     122: dup
     123: aload_2
     124: aload         5
     126: aload         4
     128: aload_0
     129: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
     132: aload_0
     133: getfield      #13                 // Field _typeProperty:Ljava/lang/String;
     136: invokespecial #41                 // Method org/codehaus/jackson/map/jsontype/impl/AsExternalTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;Ljava/lang/String;)V
     139: areturn
     140: new           #26                 // class java/lang/IllegalStateException
     143: dup
     144: new           #27                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #29                 // String Do not know how to construct standard type serializer for inclusion type:
     153: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #16                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
     160: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     169: athrow

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #42                 // String includeAs can not be null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #16                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
      19: aload_0
      20: areturn

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #43                 // Method java/lang/String.length:()I
       8: ifne          19
      11: aload_0
      12: getfield      #10                 // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      15: invokevirtual #12                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$Id.getDefaultPropertyName:()Ljava/lang/String;
      18: astore_1
      19: aload_0
      20: aload_1
      21: putfield      #13                 // Field _typeProperty:Ljava/lang/String;
      24: aload_0
      25: areturn

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public java.lang.String getTypeProperty();
    Code:
       0: aload_0
       1: getfield      #13                 // Field _typeProperty:Ljava/lang/String;
       4: areturn

  protected org.codehaus.jackson.map.jsontype.TypeIdResolver idResolver(org.codehaus.jackson.map.MapperConfig<?>, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field _customIdResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
       4: ifnull        12
       7: aload_0
       8: getfield      #11                 // Field _customIdResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      11: areturn
      12: aload_0
      13: getfield      #10                 // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      16: ifnonnull     29
      19: new           #26                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #44                 // String Can not build, \'init()\' not yet called
      25: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: getstatic     #45                 // Field org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder$1.$SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id:[I
      32: aload_0
      33: getfield      #10                 // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      36: invokevirtual #46                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$Id.ordinal:()I
      39: iaload
      40: tableswitch   { // 1 to 5
                     1: 76
                     2: 89
                     3: 102
                     4: 113
                     5: 115
               default: 115
          }
      76: new           #47                 // class org/codehaus/jackson/map/jsontype/impl/ClassNameIdResolver
      79: dup
      80: aload_2
      81: aload_1
      82: invokevirtual #48                 // Method org/codehaus/jackson/map/MapperConfig.getTypeFactory:()Lorg/codehaus/jackson/map/type/TypeFactory;
      85: invokespecial #49                 // Method org/codehaus/jackson/map/jsontype/impl/ClassNameIdResolver."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/type/TypeFactory;)V
      88: areturn
      89: new           #50                 // class org/codehaus/jackson/map/jsontype/impl/MinimalClassNameIdResolver
      92: dup
      93: aload_2
      94: aload_1
      95: invokevirtual #48                 // Method org/codehaus/jackson/map/MapperConfig.getTypeFactory:()Lorg/codehaus/jackson/map/type/TypeFactory;
      98: invokespecial #51                 // Method org/codehaus/jackson/map/jsontype/impl/MinimalClassNameIdResolver."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/type/TypeFactory;)V
     101: areturn
     102: aload_1
     103: aload_2
     104: aload_3
     105: iload         4
     107: iload         5
     109: invokestatic  #52                 // Method org/codehaus/jackson/map/jsontype/impl/TypeNameIdResolver.construct:(Lorg/codehaus/jackson/map/MapperConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;ZZ)Lorg/codehaus/jackson/map/jsontype/impl/TypeNameIdResolver;
     112: areturn
     113: aconst_null
     114: areturn
     115: new           #26                 // class java/lang/IllegalStateException
     118: dup
     119: new           #27                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #53                 // String Do not know how to construct standard type id resolver for idType:
     128: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: getfield      #10                 // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
     135: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     144: athrow

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method defaultImpl:(Ljava/lang/Class;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       5: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method typeProperty:(Ljava/lang/String;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       5: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method inclusion:(Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       5: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id, org.codehaus.jackson.map.jsontype.TypeIdResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #6                  // Method init:(Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       6: areturn
}
