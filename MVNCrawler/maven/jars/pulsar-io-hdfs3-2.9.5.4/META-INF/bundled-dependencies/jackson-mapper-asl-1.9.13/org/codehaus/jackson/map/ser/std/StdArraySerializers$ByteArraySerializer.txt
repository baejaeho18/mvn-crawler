Compiled from "StdArraySerializers.java"
public final class org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer extends org.codehaus.jackson.map.ser.std.SerializerBase<byte[]> {
  public org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class "[B"
       4: invokespecial #2                  // Method org/codehaus/jackson/map/ser/std/SerializerBase."<init>":(Ljava/lang/Class;)V
       7: return

  public void serialize(byte[], org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #3                  // Method org/codehaus/jackson/JsonGenerator.writeBinary:([B)V
       5: return

  public void serializeWithType(byte[], org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload         4
       2: aload_1
       3: aload_2
       4: invokevirtual #4                  // Method org/codehaus/jackson/map/TypeSerializer.writeTypePrefixForScalar:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
       7: aload_2
       8: aload_1
       9: invokevirtual #3                  // Method org/codehaus/jackson/JsonGenerator.writeBinary:([B)V
      12: aload         4
      14: aload_1
      15: aload_2
      16: invokevirtual #5                  // Method org/codehaus/jackson/map/TypeSerializer.writeTypeSuffixForScalar:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
      19: return

  public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ldc           #6                  // String array
       3: iconst_1
       4: invokevirtual #7                  // Method createSchemaNode:(Ljava/lang/String;Z)Lorg/codehaus/jackson/node/ObjectNode;
       7: astore_3
       8: aload_0
       9: ldc           #8                  // String string
      11: invokevirtual #9                  // Method createSchemaNode:(Ljava/lang/String;)Lorg/codehaus/jackson/node/ObjectNode;
      14: astore        4
      16: aload_3
      17: ldc           #10                 // String items
      19: aload         4
      21: invokevirtual #11                 // Method org/codehaus/jackson/node/ObjectNode.put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      24: pop
      25: aload_3
      26: areturn

  public void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[B"
       5: aload_2
       6: aload_3
       7: invokevirtual #12                 // Method serialize:([BLorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      10: return

  public void serializeWithType(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[B"
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #13                 // Method serializeWithType:([BLorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;Lorg/codehaus/jackson/map/TypeSerializer;)V
      12: return
}
