Compiled from "ArrayNode.java"
public final class org.codehaus.jackson.node.ArrayNode extends org.codehaus.jackson.node.ContainerNode {
  protected java.util.ArrayList<org.codehaus.jackson.JsonNode> _children;

  public org.codehaus.jackson.node.ArrayNode(org.codehaus.jackson.node.JsonNodeFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/codehaus/jackson/node/ContainerNode."<init>":(Lorg/codehaus/jackson/node/JsonNodeFactory;)V
       5: return

  public org.codehaus.jackson.JsonToken asToken();
    Code:
       0: getstatic     #2                  // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
       3: areturn

  public boolean isArray();
    Code:
       0: iconst_1
       1: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      15: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      18: ireturn

  public java.util.Iterator<org.codehaus.jackson.JsonNode> getElements();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnonnull     13
       7: invokestatic  #5                  // Method org/codehaus/jackson/node/ContainerNode$NoNodesIterator.instance:()Lorg/codehaus/jackson/node/ContainerNode$NoNodesIterator;
      10: goto          20
      13: aload_0
      14: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      17: invokevirtual #6                  // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      20: areturn

  public org.codehaus.jackson.JsonNode get(int);
    Code:
       0: iload_1
       1: iflt          34
       4: aload_0
       5: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       8: ifnull        34
      11: iload_1
      12: aload_0
      13: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      16: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      19: if_icmpge     34
      22: aload_0
      23: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      26: iload_1
      27: invokevirtual #7                  // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: areturn
      34: aconst_null
      35: areturn

  public org.codehaus.jackson.JsonNode get(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public org.codehaus.jackson.JsonNode path(java.lang.String);
    Code:
       0: invokestatic  #9                  // Method org/codehaus/jackson/node/MissingNode.getInstance:()Lorg/codehaus/jackson/node/MissingNode;
       3: areturn

  public org.codehaus.jackson.JsonNode path(int);
    Code:
       0: iload_1
       1: iflt          34
       4: aload_0
       5: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       8: ifnull        34
      11: iload_1
      12: aload_0
      13: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      16: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      19: if_icmpge     34
      22: aload_0
      23: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      26: iload_1
      27: invokevirtual #7                  // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: areturn
      34: invokestatic  #9                  // Method org/codehaus/jackson/node/MissingNode.getInstance:()Lorg/codehaus/jackson/node/MissingNode;
      37: areturn

  public final void serialize(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
       4: aload_0
       5: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       8: ifnull        52
      11: aload_0
      12: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      15: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          52
      28: aload_3
      29: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      37: astore        4
      39: aload         4
      41: checkcast     #14                 // class org/codehaus/jackson/node/BaseJsonNode
      44: aload_1
      45: aload_2
      46: invokevirtual #15                 // Method org/codehaus/jackson/node/BaseJsonNode.serialize:(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      49: goto          19
      52: aload_1
      53: invokevirtual #16                 // Method org/codehaus/jackson/JsonGenerator.writeEndArray:()V
      56: return

  public void serializeWithType(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: invokevirtual #17                 // Method org/codehaus/jackson/map/TypeSerializer.writeTypePrefixForArray:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
       6: aload_0
       7: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      10: ifnull        57
      13: aload_0
      14: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      17: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          57
      32: aload         4
      34: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      42: astore        5
      44: aload         5
      46: checkcast     #14                 // class org/codehaus/jackson/node/BaseJsonNode
      49: aload_1
      50: aload_2
      51: invokevirtual #15                 // Method org/codehaus/jackson/node/BaseJsonNode.serialize:(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      54: goto          22
      57: aload_3
      58: aload_0
      59: aload_1
      60: invokevirtual #18                 // Method org/codehaus/jackson/map/TypeSerializer.writeTypeSuffixForArray:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
      63: return

  public org.codehaus.jackson.JsonNode findValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnull        52
       7: aload_0
       8: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      11: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          52
      24: aload_2
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokevirtual #19                 // Method org/codehaus/jackson/JsonNode.findValue:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      39: astore        4
      41: aload         4
      43: ifnull        49
      46: aload         4
      48: areturn
      49: goto          15
      52: aconst_null
      53: areturn

  public java.util.List<org.codehaus.jackson.JsonNode> findValues(java.lang.String, java.util.List<org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnull        46
       7: aload_0
       8: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      11: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          46
      24: aload_3
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: astore        4
      35: aload         4
      37: aload_1
      38: aload_2
      39: invokevirtual #20                 // Method org/codehaus/jackson/JsonNode.findValues:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      42: astore_2
      43: goto          15
      46: aload_2
      47: areturn

  public java.util.List<java.lang.String> findValuesAsText(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnull        46
       7: aload_0
       8: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      11: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          46
      24: aload_3
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: astore        4
      35: aload         4
      37: aload_1
      38: aload_2
      39: invokevirtual #21                 // Method org/codehaus/jackson/JsonNode.findValuesAsText:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      42: astore_2
      43: goto          15
      46: aload_2
      47: areturn

  public org.codehaus.jackson.node.ObjectNode findParent(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnull        55
       7: aload_0
       8: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      11: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          55
      24: aload_2
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokevirtual #22                 // Method org/codehaus/jackson/JsonNode.findParent:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      39: astore        4
      41: aload         4
      43: ifnull        52
      46: aload         4
      48: checkcast     #23                 // class org/codehaus/jackson/node/ObjectNode
      51: areturn
      52: goto          15
      55: aconst_null
      56: areturn

  public java.util.List<org.codehaus.jackson.JsonNode> findParents(java.lang.String, java.util.List<org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnull        46
       7: aload_0
       8: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      11: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          46
      24: aload_3
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: astore        4
      35: aload         4
      37: aload_1
      38: aload_2
      39: invokevirtual #24                 // Method org/codehaus/jackson/JsonNode.findParents:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      42: astore_2
      43: goto          15
      46: aload_2
      47: areturn

  public org.codehaus.jackson.JsonNode set(int, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_2
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #25                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
       8: astore_2
       9: aload_0
      10: iload_1
      11: aload_2
      12: invokevirtual #26                 // Method _set:(ILorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      15: areturn

  public void add(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #25                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      14: return

  public org.codehaus.jackson.JsonNode addAll(org.codehaus.jackson.node.ArrayNode);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method size:()I
       4: istore_2
       5: iload_2
       6: ifle          38
       9: aload_0
      10: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      13: ifnonnull     30
      16: aload_0
      17: new           #29                 // class java/util/ArrayList
      20: dup
      21: iload_2
      22: iconst_2
      23: iadd
      24: invokespecial #30                 // Method java/util/ArrayList."<init>":(I)V
      27: putfield      #3                  // Field _children:Ljava/util/ArrayList;
      30: aload_1
      31: aload_0
      32: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      35: invokevirtual #31                 // Method addContentsTo:(Ljava/util/List;)V
      38: aload_0
      39: areturn

  public org.codehaus.jackson.JsonNode addAll(java.util.Collection<org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.size:()I
       6: istore_2
       7: iload_2
       8: ifle          42
      11: aload_0
      12: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      15: ifnonnull     33
      18: aload_0
      19: new           #29                 // class java/util/ArrayList
      22: dup
      23: aload_1
      24: invokespecial #33                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      27: putfield      #3                  // Field _children:Ljava/util/ArrayList;
      30: goto          42
      33: aload_0
      34: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      37: aload_1
      38: invokevirtual #34                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      41: pop
      42: aload_0
      43: areturn

  public void insert(int, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_2
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #25                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
       8: astore_2
       9: aload_0
      10: iload_1
      11: aload_2
      12: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      15: return

  public org.codehaus.jackson.JsonNode remove(int);
    Code:
       0: iload_1
       1: iflt          34
       4: aload_0
       5: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       8: ifnull        34
      11: iload_1
      12: aload_0
      13: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      16: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      19: if_icmpge     34
      22: aload_0
      23: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      26: iload_1
      27: invokevirtual #36                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: areturn
      34: aconst_null
      35: areturn

  public org.codehaus.jackson.node.ArrayNode removeAll();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field _children:Ljava/util/ArrayList;
       5: aload_0
       6: areturn

  public org.codehaus.jackson.node.ArrayNode addArray();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method arrayNode:()Lorg/codehaus/jackson/node/ArrayNode;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      10: aload_1
      11: areturn

  public org.codehaus.jackson.node.ObjectNode addObject();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method objectNode:()Lorg/codehaus/jackson/node/ObjectNode;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      10: aload_1
      11: areturn

  public void addPOJO(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          20
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #40                 // Method POJONode:(Ljava/lang/Object;)Lorg/codehaus/jackson/node/POJONode;
      17: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      20: return

  public void addNull();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #25                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
       5: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
       8: return

  public void add(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokevirtual #41                 // Method numberNode:(I)Lorg/codehaus/jackson/node/NumericNode;
       6: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
       9: return

  public void add(java.lang.Integer);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          23
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #42                 // Method java/lang/Integer.intValue:()I
      17: invokevirtual #41                 // Method numberNode:(I)Lorg/codehaus/jackson/node/NumericNode;
      20: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      23: return

  public void add(long);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: invokevirtual #43                 // Method numberNode:(J)Lorg/codehaus/jackson/node/NumericNode;
       6: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
       9: return

  public void add(java.lang.Long);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          23
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      17: invokevirtual #43                 // Method numberNode:(J)Lorg/codehaus/jackson/node/NumericNode;
      20: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      23: return

  public void add(float);
    Code:
       0: aload_0
       1: aload_0
       2: fload_1
       3: invokevirtual #45                 // Method numberNode:(F)Lorg/codehaus/jackson/node/NumericNode;
       6: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
       9: return

  public void add(java.lang.Float);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          23
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #46                 // Method java/lang/Float.floatValue:()F
      17: invokevirtual #45                 // Method numberNode:(F)Lorg/codehaus/jackson/node/NumericNode;
      20: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      23: return

  public void add(double);
    Code:
       0: aload_0
       1: aload_0
       2: dload_1
       3: invokevirtual #47                 // Method numberNode:(D)Lorg/codehaus/jackson/node/NumericNode;
       6: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
       9: return

  public void add(java.lang.Double);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          23
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #48                 // Method java/lang/Double.doubleValue:()D
      17: invokevirtual #47                 // Method numberNode:(D)Lorg/codehaus/jackson/node/NumericNode;
      20: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      23: return

  public void add(java.math.BigDecimal);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          20
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #49                 // Method numberNode:(Ljava/math/BigDecimal;)Lorg/codehaus/jackson/node/NumericNode;
      17: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      20: return

  public void add(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          20
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #50                 // Method textNode:(Ljava/lang/String;)Lorg/codehaus/jackson/node/TextNode;
      17: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      20: return

  public void add(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokevirtual #51                 // Method booleanNode:(Z)Lorg/codehaus/jackson/node/BooleanNode;
       6: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
       9: return

  public void add(java.lang.Boolean);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          23
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #52                 // Method java/lang/Boolean.booleanValue:()Z
      17: invokevirtual #51                 // Method booleanNode:(Z)Lorg/codehaus/jackson/node/BooleanNode;
      20: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      23: return

  public void add(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #39                 // Method addNull:()V
       8: goto          20
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokevirtual #53                 // Method binaryNode:([B)Lorg/codehaus/jackson/node/BinaryNode;
      17: invokespecial #27                 // Method _add:(Lorg/codehaus/jackson/JsonNode;)V
      20: return

  public org.codehaus.jackson.node.ArrayNode insertArray(int);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method arrayNode:()Lorg/codehaus/jackson/node/ArrayNode;
       4: astore_2
       5: aload_0
       6: iload_1
       7: aload_2
       8: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      11: aload_2
      12: areturn

  public org.codehaus.jackson.node.ObjectNode insertObject(int);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method objectNode:()Lorg/codehaus/jackson/node/ObjectNode;
       4: astore_2
       5: aload_0
       6: iload_1
       7: aload_2
       8: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      11: aload_2
      12: areturn

  public void insertPOJO(int, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          22
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #40                 // Method POJONode:(Ljava/lang/Object;)Lorg/codehaus/jackson/node/POJONode;
      19: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      22: return

  public void insertNull(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokevirtual #25                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
       6: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
       9: return

  public void insert(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: iload_2
       4: invokevirtual #41                 // Method numberNode:(I)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      10: return

  public void insert(int, java.lang.Integer);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          25
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #42                 // Method java/lang/Integer.intValue:()I
      19: invokevirtual #41                 // Method numberNode:(I)Lorg/codehaus/jackson/node/NumericNode;
      22: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      25: return

  public void insert(int, long);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: lload_2
       4: invokevirtual #43                 // Method numberNode:(J)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      10: return

  public void insert(int, java.lang.Long);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          25
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      19: invokevirtual #43                 // Method numberNode:(J)Lorg/codehaus/jackson/node/NumericNode;
      22: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      25: return

  public void insert(int, float);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: fload_2
       4: invokevirtual #45                 // Method numberNode:(F)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      10: return

  public void insert(int, java.lang.Float);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          25
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #46                 // Method java/lang/Float.floatValue:()F
      19: invokevirtual #45                 // Method numberNode:(F)Lorg/codehaus/jackson/node/NumericNode;
      22: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      25: return

  public void insert(int, double);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: dload_2
       4: invokevirtual #47                 // Method numberNode:(D)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      10: return

  public void insert(int, java.lang.Double);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          25
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #48                 // Method java/lang/Double.doubleValue:()D
      19: invokevirtual #47                 // Method numberNode:(D)Lorg/codehaus/jackson/node/NumericNode;
      22: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      25: return

  public void insert(int, java.math.BigDecimal);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          22
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #49                 // Method numberNode:(Ljava/math/BigDecimal;)Lorg/codehaus/jackson/node/NumericNode;
      19: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      22: return

  public void insert(int, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          22
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #50                 // Method textNode:(Ljava/lang/String;)Lorg/codehaus/jackson/node/TextNode;
      19: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      22: return

  public void insert(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: iload_2
       4: invokevirtual #51                 // Method booleanNode:(Z)Lorg/codehaus/jackson/node/BooleanNode;
       7: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      10: return

  public void insert(int, java.lang.Boolean);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          25
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #52                 // Method java/lang/Boolean.booleanValue:()Z
      19: invokevirtual #51                 // Method booleanNode:(Z)Lorg/codehaus/jackson/node/BooleanNode;
      22: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      25: return

  public void insert(int, byte[]);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: invokevirtual #54                 // Method insertNull:(I)V
       9: goto          22
      12: aload_0
      13: iload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #53                 // Method binaryNode:([B)Lorg/codehaus/jackson/node/BinaryNode;
      19: invokespecial #35                 // Method _insert:(ILorg/codehaus/jackson/JsonNode;)V
      22: return

  protected void addContentsTo(java.util.List<org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnull        45
       7: aload_0
       8: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      11: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_2
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: goto          15
      45: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_0
      18: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #57                 // class org/codehaus/jackson/node/ArrayNode
      30: astore_2
      31: aload_0
      32: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      35: ifnull        48
      38: aload_0
      39: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      42: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      45: ifne          61
      48: aload_2
      49: invokevirtual #28                 // Method size:()I
      52: ifne          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: aload_2
      62: aload_0
      63: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      66: invokespecial #58                 // Method _sameChildren:(Ljava/util/ArrayList;)Z
      69: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnonnull     12
       7: iconst_1
       8: istore_1
       9: goto          61
      12: aload_0
      13: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      16: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      19: istore_1
      20: aload_0
      21: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      24: invokevirtual #11                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          61
      37: aload_2
      38: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      46: astore_3
      47: aload_3
      48: ifnull        58
      51: iload_1
      52: aload_3
      53: invokevirtual #59                 // Method java/lang/Object.hashCode:()I
      56: ixor
      57: istore_1
      58: goto          28
      61: iload_1
      62: ireturn

  public java.lang.String toString();
    Code:
       0: new           #60                 // class java/lang/StringBuilder
       3: dup
       4: bipush        16
       6: aload_0
       7: invokevirtual #28                 // Method size:()I
      10: iconst_4
      11: ishl
      12: iadd
      13: invokespecial #61                 // Method java/lang/StringBuilder."<init>":(I)V
      16: astore_1
      17: aload_1
      18: bipush        91
      20: invokevirtual #62                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      28: ifnull        82
      31: iconst_0
      32: istore_2
      33: aload_0
      34: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      37: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      40: istore_3
      41: iload_2
      42: iload_3
      43: if_icmpge     82
      46: iload_2
      47: ifle          57
      50: aload_1
      51: bipush        44
      53: invokevirtual #62                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: aload_1
      58: aload_0
      59: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      62: iload_2
      63: invokevirtual #7                  // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      66: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      69: invokevirtual #63                 // Method org/codehaus/jackson/JsonNode.toString:()Ljava/lang/String;
      72: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: iinc          2, 1
      79: goto          41
      82: aload_1
      83: bipush        93
      85: invokevirtual #62                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: aload_1
      90: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: areturn

  public org.codehaus.jackson.JsonNode _set(int, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnull        22
       7: iload_1
       8: iflt          22
      11: iload_1
      12: aload_0
      13: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      16: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      19: if_icmplt     61
      22: new           #66                 // class java/lang/IndexOutOfBoundsException
      25: dup
      26: new           #60                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #68                 // String Illegal index
      35: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_1
      39: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #70                 // String , array size
      44: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: invokevirtual #28                 // Method size:()I
      51: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #71                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      65: iload_1
      66: aload_2
      67: invokevirtual #72                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      70: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      73: areturn

  private void _add(org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnonnull     18
       7: aload_0
       8: new           #29                 // class java/util/ArrayList
      11: dup
      12: invokespecial #73                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #3                  // Field _children:Ljava/util/ArrayList;
      18: aload_0
      19: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      22: aload_1
      23: invokevirtual #74                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  private void _insert(int, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _children:Ljava/util/ArrayList;
       4: ifnonnull     28
       7: aload_0
       8: new           #29                 // class java/util/ArrayList
      11: dup
      12: invokespecial #73                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #3                  // Field _children:Ljava/util/ArrayList;
      18: aload_0
      19: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      22: aload_2
      23: invokevirtual #74                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      26: pop
      27: return
      28: iload_1
      29: ifge          44
      32: aload_0
      33: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      36: iconst_0
      37: aload_2
      38: invokevirtual #75                 // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      41: goto          76
      44: iload_1
      45: aload_0
      46: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      49: invokevirtual #4                  // Method java/util/ArrayList.size:()I
      52: if_icmplt     67
      55: aload_0
      56: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      59: aload_2
      60: invokevirtual #74                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          76
      67: aload_0
      68: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      71: iload_1
      72: aload_2
      73: invokevirtual #75                 // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      76: return

  private boolean _sameChildren(java.util.ArrayList<org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/util/ArrayList.size:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #28                 // Method size:()I
       9: iload_2
      10: if_icmpeq     15
      13: iconst_0
      14: ireturn
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     52
      22: aload_0
      23: getfield      #3                  // Field _children:Ljava/util/ArrayList;
      26: iload_3
      27: invokevirtual #7                  // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      30: checkcast     #8                  // class org/codehaus/jackson/JsonNode
      33: aload_1
      34: iload_3
      35: invokevirtual #7                  // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      38: invokevirtual #76                 // Method org/codehaus/jackson/JsonNode.equals:(Ljava/lang/Object;)Z
      41: ifne          46
      44: iconst_0
      45: ireturn
      46: iinc          3, 1
      49: goto          17
      52: iconst_1
      53: ireturn

  public org.codehaus.jackson.node.ContainerNode removeAll();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method removeAll:()Lorg/codehaus/jackson/node/ArrayNode;
       4: areturn

  public org.codehaus.jackson.JsonNode findParent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method findParent:(Ljava/lang/String;)Lorg/codehaus/jackson/node/ObjectNode;
       5: areturn
}
