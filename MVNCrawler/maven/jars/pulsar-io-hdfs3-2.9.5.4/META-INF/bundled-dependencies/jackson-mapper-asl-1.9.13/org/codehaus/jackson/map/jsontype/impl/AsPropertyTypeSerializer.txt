Compiled from "AsPropertyTypeSerializer.java"
public class org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer extends org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer {
  protected final java.lang.String _typePropertyName;

  public org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer(org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/codehaus/jackson/map/jsontype/impl/AsArrayTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      11: return

  public java.lang.String getPropertyName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       4: areturn

  public org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion();
    Code:
       0: getstatic     #3                  // Field org/codehaus/jackson/annotate/JsonTypeInfo$As.PROPERTY:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
       3: areturn

  public void writeTypePrefixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method org/codehaus/jackson/JsonGenerator.writeStartObject:()V
       4: aload_2
       5: aload_0
       6: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       9: aload_0
      10: getfield      #5                  // Field _idResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      13: aload_1
      14: invokeinterface #6,  2            // InterfaceMethod org/codehaus/jackson/map/jsontype/TypeIdResolver.idFromValue:(Ljava/lang/Object;)Ljava/lang/String;
      19: invokevirtual #7                  // Method org/codehaus/jackson/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      22: return

  public void writeTypePrefixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator, java.lang.Class<?>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method org/codehaus/jackson/JsonGenerator.writeStartObject:()V
       4: aload_2
       5: aload_0
       6: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       9: aload_0
      10: getfield      #5                  // Field _idResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      13: aload_1
      14: aload_3
      15: invokeinterface #8,  3            // InterfaceMethod org/codehaus/jackson/map/jsontype/TypeIdResolver.idFromValueAndType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;
      20: invokevirtual #7                  // Method org/codehaus/jackson/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      23: return

  public void writeTypeSuffixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #9                  // Method org/codehaus/jackson/JsonGenerator.writeEndObject:()V
       4: return
}
