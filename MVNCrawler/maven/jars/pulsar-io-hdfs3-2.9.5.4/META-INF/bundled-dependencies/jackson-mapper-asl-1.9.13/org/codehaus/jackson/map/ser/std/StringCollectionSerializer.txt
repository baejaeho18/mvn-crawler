Compiled from "StringCollectionSerializer.java"
public class org.codehaus.jackson.map.ser.std.StringCollectionSerializer extends org.codehaus.jackson.map.ser.std.StaticListSerializerBase<java.util.Collection<java.lang.String>> implements org.codehaus.jackson.map.ResolvableSerializer {
  protected org.codehaus.jackson.map.JsonSerializer<java.lang.String> _serializer;

  public org.codehaus.jackson.map.ser.std.StringCollectionSerializer(org.codehaus.jackson.map.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/codehaus/jackson/map/BeanProperty;Lorg/codehaus/jackson/map/JsonSerializer;)V
       6: return

  public org.codehaus.jackson.map.ser.std.StringCollectionSerializer(org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.JsonSerializer<?>);
    Code:
       0: aload_0
       1: ldc_w         #2                  // class java/util/Collection
       4: aload_1
       5: invokespecial #3                  // Method org/codehaus/jackson/map/ser/std/StaticListSerializerBase."<init>":(Ljava/lang/Class;Lorg/codehaus/jackson/map/BeanProperty;)V
       8: aload_0
       9: aload_2
      10: putfield      #4                  // Field _serializer:Lorg/codehaus/jackson/map/JsonSerializer;
      13: return

  protected org.codehaus.jackson.JsonNode contentSchema();
    Code:
       0: aload_0
       1: ldc           #5                  // String string
       3: iconst_1
       4: invokevirtual #6                  // Method createSchemaNode:(Ljava/lang/String;Z)Lorg/codehaus/jackson/node/ObjectNode;
       7: areturn

  public void resolve(org.codehaus.jackson.map.SerializerProvider) throws org.codehaus.jackson.map.JsonMappingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _serializer:Lorg/codehaus/jackson/map/JsonSerializer;
       4: ifnonnull     32
       7: aload_1
       8: ldc_w         #7                  // class java/lang/String
      11: aload_0
      12: getfield      #8                  // Field _property:Lorg/codehaus/jackson/map/BeanProperty;
      15: invokevirtual #9                  // Method org/codehaus/jackson/map/SerializerProvider.findValueSerializer:(Ljava/lang/Class;Lorg/codehaus/jackson/map/BeanProperty;)Lorg/codehaus/jackson/map/JsonSerializer;
      18: astore_2
      19: aload_0
      20: aload_2
      21: invokevirtual #10                 // Method isDefaultSerializer:(Lorg/codehaus/jackson/map/JsonSerializer;)Z
      24: ifne          32
      27: aload_0
      28: aload_2
      29: putfield      #4                  // Field _serializer:Lorg/codehaus/jackson/map/JsonSerializer;
      32: return

  public void serialize(java.util.Collection<java.lang.String>, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_2
       1: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
       4: aload_0
       5: getfield      #4                  // Field _serializer:Lorg/codehaus/jackson/map/JsonSerializer;
       8: ifnonnull     21
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokespecial #12                 // Method serializeContents:(Ljava/util/Collection;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      18: goto          28
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokespecial #13                 // Method serializeUsingCustom:(Ljava/util/Collection;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      28: aload_2
      29: invokevirtual #14                 // Method org/codehaus/jackson/JsonGenerator.writeEndArray:()V
      32: return

  public void serializeWithType(java.util.Collection<java.lang.String>, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload         4
       2: aload_1
       3: aload_2
       4: invokevirtual #15                 // Method org/codehaus/jackson/map/TypeSerializer.writeTypePrefixForArray:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
       7: aload_0
       8: getfield      #4                  // Field _serializer:Lorg/codehaus/jackson/map/JsonSerializer;
      11: ifnonnull     24
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokespecial #12                 // Method serializeContents:(Ljava/util/Collection;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      21: goto          31
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokespecial #13                 // Method serializeUsingCustom:(Ljava/util/Collection;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      31: aload         4
      33: aload_1
      34: aload_2
      35: invokevirtual #16                 // Method org/codehaus/jackson/map/TypeSerializer.writeTypeSuffixForArray:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
      38: return

  private final void serializeContents(java.util.Collection<java.lang.String>, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _serializer:Lorg/codehaus/jackson/map/JsonSerializer;
       4: ifnull        15
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #13                 // Method serializeUsingCustom:(Ljava/util/Collection;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      14: return
      15: iconst_0
      16: istore        4
      18: aload_1
      19: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore        5
      26: aload         5
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          88
      36: aload         5
      38: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #7                  // class java/lang/String
      46: astore        6
      48: aload         6
      50: ifnonnull     61
      53: aload_3
      54: aload_2
      55: invokevirtual #20                 // Method org/codehaus/jackson/map/SerializerProvider.defaultSerializeNull:(Lorg/codehaus/jackson/JsonGenerator;)V
      58: goto          67
      61: aload_2
      62: aload         6
      64: invokevirtual #21                 // Method org/codehaus/jackson/JsonGenerator.writeString:(Ljava/lang/String;)V
      67: iinc          4, 1
      70: goto          85
      73: astore        7
      75: aload_0
      76: aload_3
      77: aload         7
      79: aload_1
      80: iload         4
      82: invokevirtual #23                 // Method wrapAndThrow:(Lorg/codehaus/jackson/map/SerializerProvider;Ljava/lang/Throwable;Ljava/lang/Object;I)V
      85: goto          26
      88: return
    Exception table:
       from    to  target type
          48    70    73   Class java/lang/Exception

  private void serializeUsingCustom(java.util.Collection<java.lang.String>, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _serializer:Lorg/codehaus/jackson/map/JsonSerializer;
       4: astore        4
       6: iconst_0
       7: istore        5
       9: aload_1
      10: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      15: astore        6
      17: aload         6
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          79
      27: aload         6
      29: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #7                  // class java/lang/String
      37: astore        7
      39: aload         7
      41: ifnonnull     52
      44: aload_3
      45: aload_2
      46: invokevirtual #20                 // Method org/codehaus/jackson/map/SerializerProvider.defaultSerializeNull:(Lorg/codehaus/jackson/JsonGenerator;)V
      49: goto          61
      52: aload         4
      54: aload         7
      56: aload_2
      57: aload_3
      58: invokevirtual #24                 // Method org/codehaus/jackson/map/JsonSerializer.serialize:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      61: goto          76
      64: astore        8
      66: aload_0
      67: aload_3
      68: aload         8
      70: aload_1
      71: iload         5
      73: invokevirtual #23                 // Method wrapAndThrow:(Lorg/codehaus/jackson/map/SerializerProvider;Ljava/lang/Throwable;Ljava/lang/Object;I)V
      76: goto          17
      79: return
    Exception table:
       from    to  target type
          39    61    64   Class java/lang/Exception

  public void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class java/util/Collection
       5: aload_2
       6: aload_3
       7: invokevirtual #25                 // Method serialize:(Ljava/util/Collection;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      10: return

  public void serializeWithType(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class java/util/Collection
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #26                 // Method serializeWithType:(Ljava/util/Collection;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;Lorg/codehaus/jackson/map/TypeSerializer;)V
      12: return
}
