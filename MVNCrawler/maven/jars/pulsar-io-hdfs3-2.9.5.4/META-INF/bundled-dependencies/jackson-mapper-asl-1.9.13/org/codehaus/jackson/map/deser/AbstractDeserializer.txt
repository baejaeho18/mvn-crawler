Compiled from "AbstractDeserializer.java"
public class org.codehaus.jackson.map.deser.AbstractDeserializer extends org.codehaus.jackson.map.JsonDeserializer<java.lang.Object> {
  protected final org.codehaus.jackson.type.JavaType _baseType;

  protected final boolean _acceptString;

  protected final boolean _acceptBoolean;

  protected final boolean _acceptInt;

  protected final boolean _acceptDouble;

  public org.codehaus.jackson.map.deser.AbstractDeserializer(org.codehaus.jackson.type.JavaType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/map/JsonDeserializer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _baseType:Lorg/codehaus/jackson/type/JavaType;
       9: aload_1
      10: invokevirtual #3                  // Method org/codehaus/jackson/type/JavaType.getRawClass:()Ljava/lang/Class;
      13: astore_2
      14: aload_0
      15: aload_2
      16: ldc_w         #4                  // class java/lang/String
      19: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      22: putfield      #6                  // Field _acceptString:Z
      25: aload_0
      26: aload_2
      27: getstatic     #7                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      30: if_acmpeq     43
      33: aload_2
      34: ldc_w         #8                  // class java/lang/Boolean
      37: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: putfield      #9                  // Field _acceptBoolean:Z
      51: aload_0
      52: aload_2
      53: getstatic     #10                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      56: if_acmpeq     69
      59: aload_2
      60: ldc_w         #11                 // class java/lang/Integer
      63: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: putfield      #12                 // Field _acceptInt:Z
      77: aload_0
      78: aload_2
      79: getstatic     #13                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      82: if_acmpeq     95
      85: aload_2
      86: ldc_w         #14                 // class java/lang/Double
      89: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      92: ifeq          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: putfield      #15                 // Field _acceptDouble:Z
     103: return

  public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #16                 // Method _deserializeIfNatural:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
       6: astore        4
       8: aload         4
      10: ifnull        16
      13: aload         4
      15: areturn
      16: aload_3
      17: aload_1
      18: aload_2
      19: invokevirtual #17                 // Method org/codehaus/jackson/map/TypeDeserializer.deserializeTypedFromObject:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
      22: areturn

  public java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field _baseType:Lorg/codehaus/jackson/type/JavaType;
       5: invokevirtual #3                  // Method org/codehaus/jackson/type/JavaType.getRawClass:()Ljava/lang/Class;
       8: ldc           #18                 // String abstract types can only be instantiated with additional type information
      10: invokevirtual #19                 // Method org/codehaus/jackson/map/DeserializationContext.instantiationException:(Ljava/lang/Class;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
      13: athrow

  protected java.lang.Object _deserializeIfNatural(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: getstatic     #20                 // Field org/codehaus/jackson/map/deser/AbstractDeserializer$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
       3: aload_1
       4: invokevirtual #21                 // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       7: invokevirtual #22                 // Method org/codehaus/jackson/JsonToken.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 5
                     1: 44
                     2: 56
                     3: 71
                     4: 86
                     5: 97
               default: 108
          }
      44: aload_0
      45: getfield      #6                  // Field _acceptString:Z
      48: ifeq          108
      51: aload_1
      52: invokevirtual #23                 // Method org/codehaus/jackson/JsonParser.getText:()Ljava/lang/String;
      55: areturn
      56: aload_0
      57: getfield      #12                 // Field _acceptInt:Z
      60: ifeq          108
      63: aload_1
      64: invokevirtual #24                 // Method org/codehaus/jackson/JsonParser.getIntValue:()I
      67: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: areturn
      71: aload_0
      72: getfield      #15                 // Field _acceptDouble:Z
      75: ifeq          108
      78: aload_1
      79: invokevirtual #26                 // Method org/codehaus/jackson/JsonParser.getDoubleValue:()D
      82: invokestatic  #27                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      85: areturn
      86: aload_0
      87: getfield      #9                  // Field _acceptBoolean:Z
      90: ifeq          108
      93: getstatic     #28                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      96: areturn
      97: aload_0
      98: getfield      #9                  // Field _acceptBoolean:Z
     101: ifeq          108
     104: getstatic     #29                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     107: areturn
     108: aconst_null
     109: areturn
}
