Compiled from "AnnotatedMember.java"
public abstract class org.codehaus.jackson.map.introspect.AnnotatedMember extends org.codehaus.jackson.map.introspect.Annotated {
  protected final org.codehaus.jackson.map.introspect.AnnotationMap _annotations;

  protected org.codehaus.jackson.map.introspect.AnnotatedMember(org.codehaus.jackson.map.introspect.AnnotationMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/map/introspect/Annotated."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _annotations:Lorg/codehaus/jackson/map/introspect/AnnotationMap;
       9: return

  public abstract java.lang.Class<?> getDeclaringClass();

  public abstract java.lang.reflect.Member getMember();

  protected org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _annotations:Lorg/codehaus/jackson/map/introspect/AnnotationMap;
       4: areturn

  public final void fixAccess();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getMember:()Ljava/lang/reflect/Member;
       4: invokestatic  #4                  // Method org/codehaus/jackson/map/util/ClassUtil.checkAndFixAccess:(Ljava/lang/reflect/Member;)V
       7: return

  public abstract void setValue(java.lang.Object, java.lang.Object) throws java.lang.UnsupportedOperationException, java.lang.IllegalArgumentException;
}
