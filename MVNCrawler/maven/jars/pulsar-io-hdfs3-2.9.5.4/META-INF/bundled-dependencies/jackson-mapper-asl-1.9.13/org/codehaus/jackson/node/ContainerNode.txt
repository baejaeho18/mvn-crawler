Compiled from "ContainerNode.java"
public abstract class org.codehaus.jackson.node.ContainerNode extends org.codehaus.jackson.node.BaseJsonNode {
  org.codehaus.jackson.node.JsonNodeFactory _nodeFactory;

  protected org.codehaus.jackson.node.ContainerNode(org.codehaus.jackson.node.JsonNodeFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/node/BaseJsonNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       9: return

  public boolean isContainerNode();
    Code:
       0: iconst_1
       1: ireturn

  public abstract org.codehaus.jackson.JsonToken asToken();

  public java.lang.String getValueAsText();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String asText();
    Code:
       0: ldc           #3                  // String
       2: areturn

  public abstract org.codehaus.jackson.JsonNode findValue(java.lang.String);

  public abstract org.codehaus.jackson.node.ObjectNode findParent(java.lang.String);

  public abstract java.util.List<org.codehaus.jackson.JsonNode> findValues(java.lang.String, java.util.List<org.codehaus.jackson.JsonNode>);

  public abstract java.util.List<org.codehaus.jackson.JsonNode> findParents(java.lang.String, java.util.List<org.codehaus.jackson.JsonNode>);

  public abstract java.util.List<java.lang.String> findValuesAsText(java.lang.String, java.util.List<java.lang.String>);

  public abstract int size();

  public abstract org.codehaus.jackson.JsonNode get(int);

  public abstract org.codehaus.jackson.JsonNode get(java.lang.String);

  public final org.codehaus.jackson.node.ArrayNode arrayNode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: invokevirtual #4                  // Method org/codehaus/jackson/node/JsonNodeFactory.arrayNode:()Lorg/codehaus/jackson/node/ArrayNode;
       7: areturn

  public final org.codehaus.jackson.node.ObjectNode objectNode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: invokevirtual #5                  // Method org/codehaus/jackson/node/JsonNodeFactory.objectNode:()Lorg/codehaus/jackson/node/ObjectNode;
       7: areturn

  public final org.codehaus.jackson.node.NullNode nullNode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: invokevirtual #6                  // Method org/codehaus/jackson/node/JsonNodeFactory.nullNode:()Lorg/codehaus/jackson/node/NullNode;
       7: areturn

  public final org.codehaus.jackson.node.BooleanNode booleanNode(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: iload_1
       5: invokevirtual #7                  // Method org/codehaus/jackson/node/JsonNodeFactory.booleanNode:(Z)Lorg/codehaus/jackson/node/BooleanNode;
       8: areturn

  public final org.codehaus.jackson.node.NumericNode numberNode(byte);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: iload_1
       5: invokevirtual #8                  // Method org/codehaus/jackson/node/JsonNodeFactory.numberNode:(B)Lorg/codehaus/jackson/node/NumericNode;
       8: areturn

  public final org.codehaus.jackson.node.NumericNode numberNode(short);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: iload_1
       5: invokevirtual #9                  // Method org/codehaus/jackson/node/JsonNodeFactory.numberNode:(S)Lorg/codehaus/jackson/node/NumericNode;
       8: areturn

  public final org.codehaus.jackson.node.NumericNode numberNode(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: iload_1
       5: invokevirtual #10                 // Method org/codehaus/jackson/node/JsonNodeFactory.numberNode:(I)Lorg/codehaus/jackson/node/NumericNode;
       8: areturn

  public final org.codehaus.jackson.node.NumericNode numberNode(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: lload_1
       5: invokevirtual #11                 // Method org/codehaus/jackson/node/JsonNodeFactory.numberNode:(J)Lorg/codehaus/jackson/node/NumericNode;
       8: areturn

  public final org.codehaus.jackson.node.NumericNode numberNode(float);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: fload_1
       5: invokevirtual #12                 // Method org/codehaus/jackson/node/JsonNodeFactory.numberNode:(F)Lorg/codehaus/jackson/node/NumericNode;
       8: areturn

  public final org.codehaus.jackson.node.NumericNode numberNode(double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: dload_1
       5: invokevirtual #13                 // Method org/codehaus/jackson/node/JsonNodeFactory.numberNode:(D)Lorg/codehaus/jackson/node/NumericNode;
       8: areturn

  public final org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: aload_1
       5: invokevirtual #14                 // Method org/codehaus/jackson/node/JsonNodeFactory.numberNode:(Ljava/math/BigDecimal;)Lorg/codehaus/jackson/node/NumericNode;
       8: areturn

  public final org.codehaus.jackson.node.TextNode textNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: aload_1
       5: invokevirtual #15                 // Method org/codehaus/jackson/node/JsonNodeFactory.textNode:(Ljava/lang/String;)Lorg/codehaus/jackson/node/TextNode;
       8: areturn

  public final org.codehaus.jackson.node.BinaryNode binaryNode(byte[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: aload_1
       5: invokevirtual #16                 // Method org/codehaus/jackson/node/JsonNodeFactory.binaryNode:([B)Lorg/codehaus/jackson/node/BinaryNode;
       8: areturn

  public final org.codehaus.jackson.node.BinaryNode binaryNode(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #17                 // Method org/codehaus/jackson/node/JsonNodeFactory.binaryNode:([BII)Lorg/codehaus/jackson/node/BinaryNode;
      10: areturn

  public final org.codehaus.jackson.node.POJONode POJONode(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _nodeFactory:Lorg/codehaus/jackson/node/JsonNodeFactory;
       4: aload_1
       5: invokevirtual #18                 // Method org/codehaus/jackson/node/JsonNodeFactory.POJONode:(Ljava/lang/Object;)Lorg/codehaus/jackson/node/POJONode;
       8: areturn

  public abstract org.codehaus.jackson.node.ContainerNode removeAll();

  public org.codehaus.jackson.JsonNode findParent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method findParent:(Ljava/lang/String;)Lorg/codehaus/jackson/node/ObjectNode;
       5: areturn
}
