Compiled from "StdSerializers.java"
public final class org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer extends org.codehaus.jackson.map.ser.std.ScalarSerializerBase<java.lang.Number> {
  public static final org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer instance;

  public org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Number
       4: invokespecial #2                  // Method org/codehaus/jackson/map/ser/std/ScalarSerializerBase."<init>":(Ljava/lang/Class;)V
       7: return

  public void serialize(java.lang.Number, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_1
       1: instanceof    #3                  // class java/math/BigDecimal
       4: ifeq          18
       7: aload_2
       8: aload_1
       9: checkcast     #3                  // class java/math/BigDecimal
      12: invokevirtual #4                  // Method org/codehaus/jackson/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V
      15: goto          141
      18: aload_1
      19: instanceof    #5                  // class java/math/BigInteger
      22: ifeq          36
      25: aload_2
      26: aload_1
      27: checkcast     #5                  // class java/math/BigInteger
      30: invokevirtual #6                  // Method org/codehaus/jackson/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
      33: goto          141
      36: aload_1
      37: instanceof    #7                  // class java/lang/Integer
      40: ifeq          54
      43: aload_2
      44: aload_1
      45: invokevirtual #8                  // Method java/lang/Number.intValue:()I
      48: invokevirtual #9                  // Method org/codehaus/jackson/JsonGenerator.writeNumber:(I)V
      51: goto          141
      54: aload_1
      55: instanceof    #10                 // class java/lang/Long
      58: ifeq          72
      61: aload_2
      62: aload_1
      63: invokevirtual #11                 // Method java/lang/Number.longValue:()J
      66: invokevirtual #12                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(J)V
      69: goto          141
      72: aload_1
      73: instanceof    #13                 // class java/lang/Double
      76: ifeq          90
      79: aload_2
      80: aload_1
      81: invokevirtual #14                 // Method java/lang/Number.doubleValue:()D
      84: invokevirtual #15                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(D)V
      87: goto          141
      90: aload_1
      91: instanceof    #16                 // class java/lang/Float
      94: ifeq          108
      97: aload_2
      98: aload_1
      99: invokevirtual #17                 // Method java/lang/Number.floatValue:()F
     102: invokevirtual #18                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(F)V
     105: goto          141
     108: aload_1
     109: instanceof    #19                 // class java/lang/Byte
     112: ifne          122
     115: aload_1
     116: instanceof    #20                 // class java/lang/Short
     119: ifeq          133
     122: aload_2
     123: aload_1
     124: invokevirtual #8                  // Method java/lang/Number.intValue:()I
     127: invokevirtual #9                  // Method org/codehaus/jackson/JsonGenerator.writeNumber:(I)V
     130: goto          141
     133: aload_2
     134: aload_1
     135: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
     138: invokevirtual #22                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(Ljava/lang/String;)V
     141: return

  public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ldc           #23                 // String number
       3: iconst_1
       4: invokevirtual #24                 // Method createSchemaNode:(Ljava/lang/String;Z)Lorg/codehaus/jackson/node/ObjectNode;
       7: areturn

  public void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/lang/Number
       5: aload_2
       6: aload_3
       7: invokevirtual #25                 // Method serialize:(Ljava/lang/Number;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      10: return

  static {};
    Code:
       0: new           #26                 // class org/codehaus/jackson/map/ser/StdSerializers$NumberSerializer
       3: dup
       4: invokespecial #27                 // Method "<init>":()V
       7: putstatic     #28                 // Field instance:Lorg/codehaus/jackson/map/ser/StdSerializers$NumberSerializer;
      10: return
}
