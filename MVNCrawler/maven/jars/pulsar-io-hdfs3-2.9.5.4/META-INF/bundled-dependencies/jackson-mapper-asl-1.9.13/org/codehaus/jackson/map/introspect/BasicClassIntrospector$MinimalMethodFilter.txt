Compiled from "BasicClassIntrospector.java"
class org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter implements org.codehaus.jackson.map.introspect.MethodFilter {
  private org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean includeMethod(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #4                  // Method java/lang/reflect/Modifier.isStatic:(I)Z
       7: ifeq          12
      10: iconst_0
      11: ireturn
      12: aload_1
      13: invokevirtual #5                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      16: arraylength
      17: istore_2
      18: iload_2
      19: iconst_2
      20: if_icmpgt     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter(org.codehaus.jackson.map.introspect.BasicClassIntrospector$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
