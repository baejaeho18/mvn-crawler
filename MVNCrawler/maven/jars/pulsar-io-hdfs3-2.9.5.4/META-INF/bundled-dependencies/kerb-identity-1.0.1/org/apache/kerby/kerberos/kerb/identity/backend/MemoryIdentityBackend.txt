Compiled from "MemoryIdentityBackend.java"
public class org.apache.kerby.kerberos.kerb.identity.backend.MemoryIdentityBackend extends org.apache.kerby.kerberos.kerb.identity.backend.AbstractIdentityBackend {
  private static final int DEFAULT_STORAGE_SIZE;

  private java.util.Map<java.lang.String, org.apache.kerby.kerberos.kerb.identity.KrbIdentity> storage;

  private int storageSize;

  public org.apache.kerby.kerberos.kerb.identity.backend.MemoryIdentityBackend();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/kerby/kerberos/kerb/identity/backend/AbstractIdentityBackend."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 10000000
       7: putfield      #1                  // Field storageSize:I
      10: return

  protected void doInitialize();
    Code:
       0: new           #4                  // class org/apache/kerby/kerberos/kerb/identity/backend/MemoryIdentityBackend$1
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #1                  // Field storageSize:I
       9: invokespecial #5                  // Method org/apache/kerby/kerberos/kerb/identity/backend/MemoryIdentityBackend$1."<init>":(Lorg/apache/kerby/kerberos/kerb/identity/backend/MemoryIdentityBackend;I)V
      12: astore_1
      13: aload_0
      14: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      17: dup
      18: aload_1
      19: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(Ljava/util/Map;)V
      22: putfield      #8                  // Field storage:Ljava/util/Map;
      25: return

  protected org.apache.kerby.kerberos.kerb.identity.KrbIdentity doGetIdentity(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field storage:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/apache/kerby/kerberos/kerb/identity/KrbIdentity
      13: areturn

  protected org.apache.kerby.kerberos.kerb.identity.KrbIdentity doAddIdentity(org.apache.kerby.kerberos.kerb.identity.KrbIdentity);
    Code:
       0: aload_0
       1: getfield      #8                  // Field storage:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #11                 // Method org/apache/kerby/kerberos/kerb/identity/KrbIdentity.getPrincipalName:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_1
      16: areturn

  protected org.apache.kerby.kerberos.kerb.identity.KrbIdentity doUpdateIdentity(org.apache.kerby.kerberos.kerb.identity.KrbIdentity);
    Code:
       0: aload_0
       1: getfield      #8                  // Field storage:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #11                 // Method org/apache/kerby/kerberos/kerb/identity/KrbIdentity.getPrincipalName:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #10                 // class org/apache/kerby/kerberos/kerb/identity/KrbIdentity
      17: areturn

  protected void doDeleteIdentity(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field storage:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  protected java.lang.Iterable<java.lang.String> doGetIdentities() throws org.apache.kerby.kerberos.kerb.KrbException;
    Code:
       0: new           #14                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #8                  // Field storage:Ljava/util/Map;
       8: invokeinterface #15,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_1
      18: invokestatic  #17                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      21: aload_1
      22: areturn

  static int access$000(org.apache.kerby.kerberos.kerb.identity.backend.MemoryIdentityBackend);
    Code:
       0: aload_0
       1: getfield      #1                  // Field storageSize:I
       4: ireturn
}
