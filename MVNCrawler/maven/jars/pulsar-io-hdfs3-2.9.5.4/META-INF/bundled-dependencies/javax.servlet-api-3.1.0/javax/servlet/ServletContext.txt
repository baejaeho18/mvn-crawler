Compiled from "ServletContext.java"
public interface javax.servlet.ServletContext {
  public static final java.lang.String TEMPDIR;

  public static final java.lang.String ORDERED_LIBS;

  public abstract java.lang.String getContextPath();

  public abstract javax.servlet.ServletContext getContext(java.lang.String);

  public abstract int getMajorVersion();

  public abstract int getMinorVersion();

  public abstract int getEffectiveMajorVersion();

  public abstract int getEffectiveMinorVersion();

  public abstract java.lang.String getMimeType(java.lang.String);

  public abstract java.util.Set<java.lang.String> getResourcePaths(java.lang.String);

  public abstract java.net.URL getResource(java.lang.String) throws java.net.MalformedURLException;

  public abstract java.io.InputStream getResourceAsStream(java.lang.String);

  public abstract javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String);

  public abstract javax.servlet.RequestDispatcher getNamedDispatcher(java.lang.String);

  public abstract javax.servlet.Servlet getServlet(java.lang.String) throws javax.servlet.ServletException;

  public abstract java.util.Enumeration<javax.servlet.Servlet> getServlets();

  public abstract java.util.Enumeration<java.lang.String> getServletNames();

  public abstract void log(java.lang.String);

  public abstract void log(java.lang.Exception, java.lang.String);

  public abstract void log(java.lang.String, java.lang.Throwable);

  public abstract java.lang.String getRealPath(java.lang.String);

  public abstract java.lang.String getServerInfo();

  public abstract java.lang.String getInitParameter(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getInitParameterNames();

  public abstract boolean setInitParameter(java.lang.String, java.lang.String);

  public abstract java.lang.Object getAttribute(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getAttributeNames();

  public abstract void setAttribute(java.lang.String, java.lang.Object);

  public abstract void removeAttribute(java.lang.String);

  public abstract java.lang.String getServletContextName();

  public abstract javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String, java.lang.String);

  public abstract javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String, javax.servlet.Servlet);

  public abstract javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>);

  public abstract <T extends javax.servlet.Servlet> T createServlet(java.lang.Class<T>) throws javax.servlet.ServletException;

  public abstract javax.servlet.ServletRegistration getServletRegistration(java.lang.String);

  public abstract java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration> getServletRegistrations();

  public abstract javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String, java.lang.String);

  public abstract javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String, javax.servlet.Filter);

  public abstract javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>);

  public abstract <T extends javax.servlet.Filter> T createFilter(java.lang.Class<T>) throws javax.servlet.ServletException;

  public abstract javax.servlet.FilterRegistration getFilterRegistration(java.lang.String);

  public abstract java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration> getFilterRegistrations();

  public abstract javax.servlet.SessionCookieConfig getSessionCookieConfig();

  public abstract void setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>);

  public abstract java.util.Set<javax.servlet.SessionTrackingMode> getDefaultSessionTrackingModes();

  public abstract java.util.Set<javax.servlet.SessionTrackingMode> getEffectiveSessionTrackingModes();

  public abstract void addListener(java.lang.String);

  public abstract <T extends java.util.EventListener> void addListener(T);

  public abstract void addListener(java.lang.Class<? extends java.util.EventListener>);

  public abstract <T extends java.util.EventListener> T createListener(java.lang.Class<T>) throws javax.servlet.ServletException;

  public abstract javax.servlet.descriptor.JspConfigDescriptor getJspConfigDescriptor();

  public abstract java.lang.ClassLoader getClassLoader();

  public abstract void declareRoles(java.lang.String...);

  public abstract java.lang.String getVirtualServerName();
}
