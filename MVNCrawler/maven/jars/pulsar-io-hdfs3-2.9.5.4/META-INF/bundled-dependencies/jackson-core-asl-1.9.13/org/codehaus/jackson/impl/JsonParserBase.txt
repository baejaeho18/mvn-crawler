Compiled from "JsonParserBase.java"
public abstract class org.codehaus.jackson.impl.JsonParserBase extends org.codehaus.jackson.impl.JsonParserMinimalBase {
  protected final org.codehaus.jackson.io.IOContext _ioContext;

  protected boolean _closed;

  protected int _inputPtr;

  protected int _inputEnd;

  protected long _currInputProcessed;

  protected int _currInputRow;

  protected int _currInputRowStart;

  protected long _tokenInputTotal;

  protected int _tokenInputRow;

  protected int _tokenInputCol;

  protected org.codehaus.jackson.impl.JsonReadContext _parsingContext;

  protected org.codehaus.jackson.JsonToken _nextToken;

  protected final org.codehaus.jackson.util.TextBuffer _textBuffer;

  protected char[] _nameCopyBuffer;

  protected boolean _nameCopied;

  protected org.codehaus.jackson.util.ByteArrayBuilder _byteArrayBuilder;

  protected byte[] _binaryValue;

  protected static final int NR_UNKNOWN;

  protected static final int NR_INT;

  protected static final int NR_LONG;

  protected static final int NR_BIGINT;

  protected static final int NR_DOUBLE;

  protected static final int NR_BIGDECIMAL;

  static final java.math.BigInteger BI_MIN_INT;

  static final java.math.BigInteger BI_MAX_INT;

  static final java.math.BigInteger BI_MIN_LONG;

  static final java.math.BigInteger BI_MAX_LONG;

  static final java.math.BigDecimal BD_MIN_LONG;

  static final java.math.BigDecimal BD_MAX_LONG;

  static final java.math.BigDecimal BD_MIN_INT;

  static final java.math.BigDecimal BD_MAX_INT;

  static final long MIN_INT_L;

  static final long MAX_INT_L;

  static final double MIN_LONG_D;

  static final double MAX_LONG_D;

  static final double MIN_INT_D;

  static final double MAX_INT_D;

  protected static final int INT_0;

  protected static final int INT_1;

  protected static final int INT_2;

  protected static final int INT_3;

  protected static final int INT_4;

  protected static final int INT_5;

  protected static final int INT_6;

  protected static final int INT_7;

  protected static final int INT_8;

  protected static final int INT_9;

  protected static final int INT_MINUS;

  protected static final int INT_PLUS;

  protected static final int INT_DECIMAL_POINT;

  protected static final int INT_e;

  protected static final int INT_E;

  protected static final char CHAR_NULL;

  protected int _numTypesValid;

  protected int _numberInt;

  protected long _numberLong;

  protected double _numberDouble;

  protected java.math.BigInteger _numberBigInt;

  protected java.math.BigDecimal _numberBigDecimal;

  protected boolean _numberNegative;

  protected int _intLength;

  protected int _fractLength;

  protected int _expLength;

  protected org.codehaus.jackson.impl.JsonParserBase(org.codehaus.jackson.io.IOContext, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/impl/JsonParserMinimalBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field _inputPtr:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field _inputEnd:I
      14: aload_0
      15: lconst_0
      16: putfield      #4                  // Field _currInputProcessed:J
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field _currInputRow:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field _currInputRowStart:I
      29: aload_0
      30: lconst_0
      31: putfield      #7                  // Field _tokenInputTotal:J
      34: aload_0
      35: iconst_1
      36: putfield      #8                  // Field _tokenInputRow:I
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field _tokenInputCol:I
      44: aload_0
      45: aconst_null
      46: putfield      #10                 // Field _nameCopyBuffer:[C
      49: aload_0
      50: iconst_0
      51: putfield      #11                 // Field _nameCopied:Z
      54: aload_0
      55: aconst_null
      56: putfield      #12                 // Field _byteArrayBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
      59: aload_0
      60: iconst_0
      61: putfield      #13                 // Field _numTypesValid:I
      64: aload_0
      65: iload_2
      66: putfield      #14                 // Field _features:I
      69: aload_0
      70: aload_1
      71: putfield      #15                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
      74: aload_0
      75: aload_1
      76: invokevirtual #16                 // Method org/codehaus/jackson/io/IOContext.constructTextBuffer:()Lorg/codehaus/jackson/util/TextBuffer;
      79: putfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
      82: aload_0
      83: invokestatic  #18                 // Method org/codehaus/jackson/impl/JsonReadContext.createRootContext:()Lorg/codehaus/jackson/impl/JsonReadContext;
      86: putfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      89: return

  public org.codehaus.jackson.Version version();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #21                 // Method org/codehaus/jackson/util/VersionUtil.versionFor:(Ljava/lang/Class;)Lorg/codehaus/jackson/Version;
       7: areturn

  public java.lang.String getCurrentName() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #23                 // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      14: getstatic     #24                 // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
      17: if_acmpne     33
      20: aload_0
      21: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      24: invokevirtual #25                 // Method org/codehaus/jackson/impl/JsonReadContext.getParent:()Lorg/codehaus/jackson/impl/JsonReadContext;
      27: astore_1
      28: aload_1
      29: invokevirtual #26                 // Method org/codehaus/jackson/impl/JsonReadContext.getCurrentName:()Ljava/lang/String;
      32: areturn
      33: aload_0
      34: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      37: invokevirtual #26                 // Method org/codehaus/jackson/impl/JsonReadContext.getCurrentName:()Ljava/lang/String;
      40: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field _closed:Z
       4: ifne          30
       7: aload_0
       8: iconst_1
       9: putfield      #27                 // Field _closed:Z
      12: aload_0
      13: invokevirtual #28                 // Method _closeInput:()V
      16: aload_0
      17: invokevirtual #29                 // Method _releaseBuffers:()V
      20: goto          30
      23: astore_1
      24: aload_0
      25: invokevirtual #29                 // Method _releaseBuffers:()V
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
          12    16    23   any
          23    24    23   any

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #27                 // Field _closed:Z
       4: ireturn

  public org.codehaus.jackson.impl.JsonReadContext getParsingContext();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
       4: areturn

  public org.codehaus.jackson.JsonLocation getTokenLocation();
    Code:
       0: new           #30                 // class org/codehaus/jackson/JsonLocation
       3: dup
       4: aload_0
       5: getfield      #15                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
       8: invokevirtual #31                 // Method org/codehaus/jackson/io/IOContext.getSourceReference:()Ljava/lang/Object;
      11: aload_0
      12: invokevirtual #32                 // Method getTokenCharacterOffset:()J
      15: aload_0
      16: invokevirtual #33                 // Method getTokenLineNr:()I
      19: aload_0
      20: invokevirtual #34                 // Method getTokenColumnNr:()I
      23: invokespecial #35                 // Method org/codehaus/jackson/JsonLocation."<init>":(Ljava/lang/Object;JII)V
      26: areturn

  public org.codehaus.jackson.JsonLocation getCurrentLocation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _inputPtr:I
       4: aload_0
       5: getfield      #6                  // Field _currInputRowStart:I
       8: isub
       9: iconst_1
      10: iadd
      11: istore_1
      12: new           #30                 // class org/codehaus/jackson/JsonLocation
      15: dup
      16: aload_0
      17: getfield      #15                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
      20: invokevirtual #31                 // Method org/codehaus/jackson/io/IOContext.getSourceReference:()Ljava/lang/Object;
      23: aload_0
      24: getfield      #4                  // Field _currInputProcessed:J
      27: aload_0
      28: getfield      #2                  // Field _inputPtr:I
      31: i2l
      32: ladd
      33: lconst_1
      34: lsub
      35: aload_0
      36: getfield      #5                  // Field _currInputRow:I
      39: iload_1
      40: invokespecial #35                 // Method org/codehaus/jackson/JsonLocation."<init>":(Ljava/lang/Object;JII)V
      43: areturn

  public boolean hasTextCharacters();
    Code:
       0: aload_0
       1: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #36                 // Field org/codehaus/jackson/JsonToken.VALUE_STRING:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      16: getstatic     #37                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #11                 // Field _nameCopied:Z
      26: ireturn
      27: iconst_0
      28: ireturn

  public final long getTokenCharacterOffset();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _tokenInputTotal:J
       4: lreturn

  public final int getTokenLineNr();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _tokenInputRow:I
       4: ireturn

  public final int getTokenColumnNr();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _tokenInputCol:I
       4: istore_1
       5: iload_1
       6: ifge          13
       9: iload_1
      10: goto          16
      13: iload_1
      14: iconst_1
      15: iadd
      16: ireturn

  protected final void loadMoreGuaranteed() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method loadMore:()Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #39                 // Method _reportInvalidEOF:()V
      11: return

  protected abstract boolean loadMore() throws java.io.IOException;

  protected abstract void _finishString() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  protected abstract void _closeInput() throws java.io.IOException;

  protected void _releaseBuffers() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
       4: invokevirtual #40                 // Method org/codehaus/jackson/util/TextBuffer.releaseBuffers:()V
       7: aload_0
       8: getfield      #10                 // Field _nameCopyBuffer:[C
      11: astore_1
      12: aload_1
      13: ifnull        29
      16: aload_0
      17: aconst_null
      18: putfield      #10                 // Field _nameCopyBuffer:[C
      21: aload_0
      22: getfield      #15                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
      25: aload_1
      26: invokevirtual #41                 // Method org/codehaus/jackson/io/IOContext.releaseNameCopyBuffer:([C)V
      29: return

  protected void _handleEOF() throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
       4: invokevirtual #42                 // Method org/codehaus/jackson/impl/JsonReadContext.inRoot:()Z
       7: ifne          66
      10: aload_0
      11: new           #43                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #45                 // String : expected close marker for
      20: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      27: invokevirtual #47                 // Method org/codehaus/jackson/impl/JsonReadContext.getTypeDesc:()Ljava/lang/String;
      30: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #48                 // String  (from
      35: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      42: aload_0
      43: getfield      #15                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
      46: invokevirtual #31                 // Method org/codehaus/jackson/io/IOContext.getSourceReference:()Ljava/lang/Object;
      49: invokevirtual #49                 // Method org/codehaus/jackson/impl/JsonReadContext.getStartLocation:(Ljava/lang/Object;)Lorg/codehaus/jackson/JsonLocation;
      52: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #51                 // String )
      57: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokevirtual #53                 // Method _reportInvalidEOF:(Ljava/lang/String;)V
      66: return

  protected void _reportMismatchedEndMarker(int, char) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #54                 // String
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      16: aload_0
      17: getfield      #15                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
      20: invokevirtual #31                 // Method org/codehaus/jackson/io/IOContext.getSourceReference:()Ljava/lang/Object;
      23: invokevirtual #49                 // Method org/codehaus/jackson/impl/JsonReadContext.getStartLocation:(Ljava/lang/Object;)Lorg/codehaus/jackson/JsonLocation;
      26: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: astore_3
      33: aload_0
      34: new           #43                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #55                 // String Unexpected close marker \'
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_1
      47: i2c
      48: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      51: ldc           #57                 // String \': expected \'
      53: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_2
      57: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: ldc           #58                 // String \' (for
      62: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #19                 // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      69: invokevirtual #47                 // Method org/codehaus/jackson/impl/JsonReadContext.getTypeDesc:()Ljava/lang/String;
      72: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #59                 // String  starting at
      77: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_3
      81: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #51                 // String )
      86: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokevirtual #60                 // Method _reportError:(Ljava/lang/String;)V
      95: return

  public org.codehaus.jackson.util.ByteArrayBuilder _getByteArrayBuilder();
    Code:
       0: aload_0
       1: getfield      #12                 // Field _byteArrayBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
       4: ifnonnull     21
       7: aload_0
       8: new           #61                 // class org/codehaus/jackson/util/ByteArrayBuilder
      11: dup
      12: invokespecial #62                 // Method org/codehaus/jackson/util/ByteArrayBuilder."<init>":()V
      15: putfield      #12                 // Field _byteArrayBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
      18: goto          28
      21: aload_0
      22: getfield      #12                 // Field _byteArrayBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
      25: invokevirtual #63                 // Method org/codehaus/jackson/util/ByteArrayBuilder.reset:()V
      28: aload_0
      29: getfield      #12                 // Field _byteArrayBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
      32: areturn

  protected final org.codehaus.jackson.JsonToken reset(boolean, int, int, int);
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     18
       5: iload         4
       7: iconst_1
       8: if_icmpge     18
      11: aload_0
      12: iload_1
      13: iload_2
      14: invokevirtual #64                 // Method resetInt:(ZI)Lorg/codehaus/jackson/JsonToken;
      17: areturn
      18: aload_0
      19: iload_1
      20: iload_2
      21: iload_3
      22: iload         4
      24: invokevirtual #65                 // Method resetFloat:(ZIII)Lorg/codehaus/jackson/JsonToken;
      27: areturn

  protected final org.codehaus.jackson.JsonToken resetInt(boolean, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field _numberNegative:Z
       5: aload_0
       6: iload_2
       7: putfield      #67                 // Field _intLength:I
      10: aload_0
      11: iconst_0
      12: putfield      #68                 // Field _fractLength:I
      15: aload_0
      16: iconst_0
      17: putfield      #69                 // Field _expLength:I
      20: aload_0
      21: iconst_0
      22: putfield      #13                 // Field _numTypesValid:I
      25: getstatic     #70                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
      28: areturn

  protected final org.codehaus.jackson.JsonToken resetFloat(boolean, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field _numberNegative:Z
       5: aload_0
       6: iload_2
       7: putfield      #67                 // Field _intLength:I
      10: aload_0
      11: iload_3
      12: putfield      #68                 // Field _fractLength:I
      15: aload_0
      16: iload         4
      18: putfield      #69                 // Field _expLength:I
      21: aload_0
      22: iconst_0
      23: putfield      #13                 // Field _numTypesValid:I
      26: getstatic     #71                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_FLOAT:Lorg/codehaus/jackson/JsonToken;
      29: areturn

  protected final org.codehaus.jackson.JsonToken resetAsNaN(java.lang.String, double);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
       4: aload_1
       5: invokevirtual #72                 // Method org/codehaus/jackson/util/TextBuffer.resetWithString:(Ljava/lang/String;)V
       8: aload_0
       9: dload_2
      10: putfield      #73                 // Field _numberDouble:D
      13: aload_0
      14: bipush        8
      16: putfield      #13                 // Field _numTypesValid:I
      19: getstatic     #71                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_FLOAT:Lorg/codehaus/jackson/JsonToken;
      22: areturn

  public java.lang.Number getNumberValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: ifne          12
       7: aload_0
       8: iconst_0
       9: invokevirtual #74                 // Method _parseNumericValue:(I)V
      12: aload_0
      13: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      16: getstatic     #70                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
      19: if_acmpne     75
      22: aload_0
      23: getfield      #13                 // Field _numTypesValid:I
      26: iconst_1
      27: iand
      28: ifeq          39
      31: aload_0
      32: getfield      #75                 // Field _numberInt:I
      35: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: areturn
      39: aload_0
      40: getfield      #13                 // Field _numTypesValid:I
      43: iconst_2
      44: iand
      45: ifeq          56
      48: aload_0
      49: getfield      #77                 // Field _numberLong:J
      52: invokestatic  #78                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      55: areturn
      56: aload_0
      57: getfield      #13                 // Field _numTypesValid:I
      60: iconst_4
      61: iand
      62: ifeq          70
      65: aload_0
      66: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      69: areturn
      70: aload_0
      71: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      74: areturn
      75: aload_0
      76: getfield      #13                 // Field _numTypesValid:I
      79: bipush        16
      81: iand
      82: ifeq          90
      85: aload_0
      86: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      89: areturn
      90: aload_0
      91: getfield      #13                 // Field _numTypesValid:I
      94: bipush        8
      96: iand
      97: ifne          104
     100: aload_0
     101: invokevirtual #81                 // Method _throwInternal:()V
     104: aload_0
     105: getfield      #73                 // Field _numberDouble:D
     108: invokestatic  #82                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     111: areturn

  public org.codehaus.jackson.JsonParser$NumberType getNumberType() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: ifne          12
       7: aload_0
       8: iconst_0
       9: invokevirtual #74                 // Method _parseNumericValue:(I)V
      12: aload_0
      13: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      16: getstatic     #70                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
      19: if_acmpne     52
      22: aload_0
      23: getfield      #13                 // Field _numTypesValid:I
      26: iconst_1
      27: iand
      28: ifeq          35
      31: getstatic     #83                 // Field org/codehaus/jackson/JsonParser$NumberType.INT:Lorg/codehaus/jackson/JsonParser$NumberType;
      34: areturn
      35: aload_0
      36: getfield      #13                 // Field _numTypesValid:I
      39: iconst_2
      40: iand
      41: ifeq          48
      44: getstatic     #84                 // Field org/codehaus/jackson/JsonParser$NumberType.LONG:Lorg/codehaus/jackson/JsonParser$NumberType;
      47: areturn
      48: getstatic     #85                 // Field org/codehaus/jackson/JsonParser$NumberType.BIG_INTEGER:Lorg/codehaus/jackson/JsonParser$NumberType;
      51: areturn
      52: aload_0
      53: getfield      #13                 // Field _numTypesValid:I
      56: bipush        16
      58: iand
      59: ifeq          66
      62: getstatic     #86                 // Field org/codehaus/jackson/JsonParser$NumberType.BIG_DECIMAL:Lorg/codehaus/jackson/JsonParser$NumberType;
      65: areturn
      66: getstatic     #87                 // Field org/codehaus/jackson/JsonParser$NumberType.DOUBLE:Lorg/codehaus/jackson/JsonParser$NumberType;
      69: areturn

  public int getIntValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: iconst_1
       5: iand
       6: ifne          34
       9: aload_0
      10: getfield      #13                 // Field _numTypesValid:I
      13: ifne          21
      16: aload_0
      17: iconst_1
      18: invokevirtual #74                 // Method _parseNumericValue:(I)V
      21: aload_0
      22: getfield      #13                 // Field _numTypesValid:I
      25: iconst_1
      26: iand
      27: ifne          34
      30: aload_0
      31: invokevirtual #88                 // Method convertNumberToInt:()V
      34: aload_0
      35: getfield      #75                 // Field _numberInt:I
      38: ireturn

  public long getLongValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: iconst_2
       5: iand
       6: ifne          34
       9: aload_0
      10: getfield      #13                 // Field _numTypesValid:I
      13: ifne          21
      16: aload_0
      17: iconst_2
      18: invokevirtual #74                 // Method _parseNumericValue:(I)V
      21: aload_0
      22: getfield      #13                 // Field _numTypesValid:I
      25: iconst_2
      26: iand
      27: ifne          34
      30: aload_0
      31: invokevirtual #89                 // Method convertNumberToLong:()V
      34: aload_0
      35: getfield      #77                 // Field _numberLong:J
      38: lreturn

  public java.math.BigInteger getBigIntegerValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: iconst_4
       5: iand
       6: ifne          34
       9: aload_0
      10: getfield      #13                 // Field _numTypesValid:I
      13: ifne          21
      16: aload_0
      17: iconst_4
      18: invokevirtual #74                 // Method _parseNumericValue:(I)V
      21: aload_0
      22: getfield      #13                 // Field _numTypesValid:I
      25: iconst_4
      26: iand
      27: ifne          34
      30: aload_0
      31: invokevirtual #90                 // Method convertNumberToBigInteger:()V
      34: aload_0
      35: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      38: areturn

  public float getFloatValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method getDoubleValue:()D
       4: dstore_1
       5: dload_1
       6: d2f
       7: freturn

  public double getDoubleValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: bipush        8
       6: iand
       7: ifne          37
      10: aload_0
      11: getfield      #13                 // Field _numTypesValid:I
      14: ifne          23
      17: aload_0
      18: bipush        8
      20: invokevirtual #74                 // Method _parseNumericValue:(I)V
      23: aload_0
      24: getfield      #13                 // Field _numTypesValid:I
      27: bipush        8
      29: iand
      30: ifne          37
      33: aload_0
      34: invokevirtual #92                 // Method convertNumberToDouble:()V
      37: aload_0
      38: getfield      #73                 // Field _numberDouble:D
      41: dreturn

  public java.math.BigDecimal getDecimalValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: bipush        16
       6: iand
       7: ifne          37
      10: aload_0
      11: getfield      #13                 // Field _numTypesValid:I
      14: ifne          23
      17: aload_0
      18: bipush        16
      20: invokevirtual #74                 // Method _parseNumericValue:(I)V
      23: aload_0
      24: getfield      #13                 // Field _numTypesValid:I
      27: bipush        16
      29: iand
      30: ifne          37
      33: aload_0
      34: invokevirtual #93                 // Method convertNumberToBigDecimal:()V
      37: aload_0
      38: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      41: areturn

  protected void _parseNumericValue(int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #70                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     191
      10: aload_0
      11: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
      14: invokevirtual #94                 // Method org/codehaus/jackson/util/TextBuffer.getTextBuffer:()[C
      17: astore_2
      18: aload_0
      19: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
      22: invokevirtual #95                 // Method org/codehaus/jackson/util/TextBuffer.getTextOffset:()I
      25: istore_3
      26: aload_0
      27: getfield      #67                 // Field _intLength:I
      30: istore        4
      32: aload_0
      33: getfield      #66                 // Field _numberNegative:Z
      36: ifeq          42
      39: iinc          3, 1
      42: iload         4
      44: bipush        9
      46: if_icmpgt     83
      49: aload_2
      50: iload_3
      51: iload         4
      53: invokestatic  #96                 // Method org/codehaus/jackson/io/NumberInput.parseInt:([CII)I
      56: istore        5
      58: aload_0
      59: aload_0
      60: getfield      #66                 // Field _numberNegative:Z
      63: ifeq          72
      66: iload         5
      68: ineg
      69: goto          74
      72: iload         5
      74: putfield      #75                 // Field _numberInt:I
      77: aload_0
      78: iconst_1
      79: putfield      #13                 // Field _numTypesValid:I
      82: return
      83: iload         4
      85: bipush        18
      87: if_icmpgt     181
      90: aload_2
      91: iload_3
      92: iload         4
      94: invokestatic  #97                 // Method org/codehaus/jackson/io/NumberInput.parseLong:([CII)J
      97: lstore        5
      99: aload_0
     100: getfield      #66                 // Field _numberNegative:Z
     103: ifeq          111
     106: lload         5
     108: lneg
     109: lstore        5
     111: iload         4
     113: bipush        10
     115: if_icmpne     169
     118: aload_0
     119: getfield      #66                 // Field _numberNegative:Z
     122: ifeq          147
     125: lload         5
     127: ldc2_w        #98                 // long -2147483648l
     130: lcmp
     131: iflt          169
     134: aload_0
     135: lload         5
     137: l2i
     138: putfield      #75                 // Field _numberInt:I
     141: aload_0
     142: iconst_1
     143: putfield      #13                 // Field _numTypesValid:I
     146: return
     147: lload         5
     149: ldc2_w        #100                // long 2147483647l
     152: lcmp
     153: ifgt          169
     156: aload_0
     157: lload         5
     159: l2i
     160: putfield      #75                 // Field _numberInt:I
     163: aload_0
     164: iconst_1
     165: putfield      #13                 // Field _numTypesValid:I
     168: return
     169: aload_0
     170: lload         5
     172: putfield      #77                 // Field _numberLong:J
     175: aload_0
     176: iconst_2
     177: putfield      #13                 // Field _numTypesValid:I
     180: return
     181: aload_0
     182: iload_1
     183: aload_2
     184: iload_3
     185: iload         4
     187: invokespecial #102                // Method _parseSlowIntValue:(I[CII)V
     190: return
     191: aload_0
     192: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     195: getstatic     #71                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_FLOAT:Lorg/codehaus/jackson/JsonToken;
     198: if_acmpne     207
     201: aload_0
     202: iload_1
     203: invokespecial #103                // Method _parseSlowFloatValue:(I)V
     206: return
     207: aload_0
     208: new           #43                 // class java/lang/StringBuilder
     211: dup
     212: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     215: ldc           #104                // String Current token (
     217: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: aload_0
     221: getfield      #22                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     224: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     227: ldc           #105                // String ) not numeric, can not use numeric value accessors
     229: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     235: invokevirtual #60                 // Method _reportError:(Ljava/lang/String;)V
     238: return

  private final void _parseSlowFloatValue(int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: iload_1
       1: bipush        16
       3: if_icmpne     26
       6: aload_0
       7: aload_0
       8: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
      11: invokevirtual #106                // Method org/codehaus/jackson/util/TextBuffer.contentsAsDecimal:()Ljava/math/BigDecimal;
      14: putfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      17: aload_0
      18: bipush        16
      20: putfield      #13                 // Field _numTypesValid:I
      23: goto          43
      26: aload_0
      27: aload_0
      28: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
      31: invokevirtual #107                // Method org/codehaus/jackson/util/TextBuffer.contentsAsDouble:()D
      34: putfield      #73                 // Field _numberDouble:D
      37: aload_0
      38: bipush        8
      40: putfield      #13                 // Field _numTypesValid:I
      43: goto          82
      46: astore_2
      47: aload_0
      48: new           #43                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #109                // String Malformed numeric value \'
      57: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
      64: invokevirtual #110                // Method org/codehaus/jackson/util/TextBuffer.contentsAsString:()Ljava/lang/String;
      67: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #111                // String \'
      72: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: aload_2
      79: invokevirtual #112                // Method _wrapError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: return
    Exception table:
       from    to  target type
           0    43    46   Class java/lang/NumberFormatException

  private final void _parseSlowIntValue(int, char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field _textBuffer:Lorg/codehaus/jackson/util/TextBuffer;
       4: invokevirtual #110                // Method org/codehaus/jackson/util/TextBuffer.contentsAsString:()Ljava/lang/String;
       7: astore        5
       9: aload_2
      10: iload_3
      11: iload         4
      13: aload_0
      14: getfield      #66                 // Field _numberNegative:Z
      17: invokestatic  #113                // Method org/codehaus/jackson/io/NumberInput.inLongRange:([CIIZ)Z
      20: ifeq          40
      23: aload_0
      24: aload         5
      26: invokestatic  #114                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: putfield      #77                 // Field _numberLong:J
      32: aload_0
      33: iconst_2
      34: putfield      #13                 // Field _numTypesValid:I
      37: goto          58
      40: aload_0
      41: new           #115                // class java/math/BigInteger
      44: dup
      45: aload         5
      47: invokespecial #116                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      50: putfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      53: aload_0
      54: iconst_4
      55: putfield      #13                 // Field _numTypesValid:I
      58: goto          94
      61: astore        6
      63: aload_0
      64: new           #43                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #109                // String Malformed numeric value \'
      73: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         5
      78: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #111                // String \'
      83: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload         6
      91: invokevirtual #112                // Method _wrapError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      94: return
    Exception table:
       from    to  target type
           9    58    61   Class java/lang/NumberFormatException

  protected void convertNumberToInt() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: iconst_2
       5: iand
       6: ifeq          64
       9: aload_0
      10: getfield      #77                 // Field _numberLong:J
      13: l2i
      14: istore_1
      15: iload_1
      16: i2l
      17: aload_0
      18: getfield      #77                 // Field _numberLong:J
      21: lcmp
      22: ifeq          56
      25: aload_0
      26: new           #43                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #117                // String Numeric value (
      35: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #118                // Method getText:()Ljava/lang/String;
      42: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #119                // String ) out of range of int
      47: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #60                 // Method _reportError:(Ljava/lang/String;)V
      56: aload_0
      57: iload_1
      58: putfield      #75                 // Field _numberInt:I
      61: goto          223
      64: aload_0
      65: getfield      #13                 // Field _numTypesValid:I
      68: iconst_4
      69: iand
      70: ifeq          117
      73: getstatic     #120                // Field BI_MIN_INT:Ljava/math/BigInteger;
      76: aload_0
      77: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      80: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      83: ifgt          99
      86: getstatic     #122                // Field BI_MAX_INT:Ljava/math/BigInteger;
      89: aload_0
      90: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      93: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      96: ifge          103
      99: aload_0
     100: invokevirtual #123                // Method reportOverflowInt:()V
     103: aload_0
     104: aload_0
     105: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
     108: invokevirtual #124                // Method java/math/BigInteger.intValue:()I
     111: putfield      #75                 // Field _numberInt:I
     114: goto          223
     117: aload_0
     118: getfield      #13                 // Field _numTypesValid:I
     121: bipush        8
     123: iand
     124: ifeq          165
     127: aload_0
     128: getfield      #73                 // Field _numberDouble:D
     131: ldc2_w        #125                // double -2.147483648E9d
     134: dcmpg
     135: iflt          149
     138: aload_0
     139: getfield      #73                 // Field _numberDouble:D
     142: ldc2_w        #127                // double 2.147483647E9d
     145: dcmpl
     146: ifle          153
     149: aload_0
     150: invokevirtual #123                // Method reportOverflowInt:()V
     153: aload_0
     154: aload_0
     155: getfield      #73                 // Field _numberDouble:D
     158: d2i
     159: putfield      #75                 // Field _numberInt:I
     162: goto          223
     165: aload_0
     166: getfield      #13                 // Field _numTypesValid:I
     169: bipush        16
     171: iand
     172: ifeq          219
     175: getstatic     #129                // Field BD_MIN_INT:Ljava/math/BigDecimal;
     178: aload_0
     179: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
     182: invokevirtual #130                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     185: ifgt          201
     188: getstatic     #131                // Field BD_MAX_INT:Ljava/math/BigDecimal;
     191: aload_0
     192: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
     195: invokevirtual #130                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     198: ifge          205
     201: aload_0
     202: invokevirtual #123                // Method reportOverflowInt:()V
     205: aload_0
     206: aload_0
     207: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
     210: invokevirtual #132                // Method java/math/BigDecimal.intValue:()I
     213: putfield      #75                 // Field _numberInt:I
     216: goto          223
     219: aload_0
     220: invokevirtual #81                 // Method _throwInternal:()V
     223: aload_0
     224: dup
     225: getfield      #13                 // Field _numTypesValid:I
     228: iconst_1
     229: ior
     230: putfield      #13                 // Field _numTypesValid:I
     233: return

  protected void convertNumberToLong() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: iconst_1
       5: iand
       6: ifeq          21
       9: aload_0
      10: aload_0
      11: getfield      #75                 // Field _numberInt:I
      14: i2l
      15: putfield      #77                 // Field _numberLong:J
      18: goto          180
      21: aload_0
      22: getfield      #13                 // Field _numTypesValid:I
      25: iconst_4
      26: iand
      27: ifeq          74
      30: getstatic     #133                // Field BI_MIN_LONG:Ljava/math/BigInteger;
      33: aload_0
      34: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      37: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      40: ifgt          56
      43: getstatic     #134                // Field BI_MAX_LONG:Ljava/math/BigInteger;
      46: aload_0
      47: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      50: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      53: ifge          60
      56: aload_0
      57: invokevirtual #135                // Method reportOverflowLong:()V
      60: aload_0
      61: aload_0
      62: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      65: invokevirtual #136                // Method java/math/BigInteger.longValue:()J
      68: putfield      #77                 // Field _numberLong:J
      71: goto          180
      74: aload_0
      75: getfield      #13                 // Field _numTypesValid:I
      78: bipush        8
      80: iand
      81: ifeq          122
      84: aload_0
      85: getfield      #73                 // Field _numberDouble:D
      88: ldc2_w        #137                // double -9.223372036854776E18d
      91: dcmpg
      92: iflt          106
      95: aload_0
      96: getfield      #73                 // Field _numberDouble:D
      99: ldc2_w        #139                // double 9.223372036854776E18d
     102: dcmpl
     103: ifle          110
     106: aload_0
     107: invokevirtual #135                // Method reportOverflowLong:()V
     110: aload_0
     111: aload_0
     112: getfield      #73                 // Field _numberDouble:D
     115: d2l
     116: putfield      #77                 // Field _numberLong:J
     119: goto          180
     122: aload_0
     123: getfield      #13                 // Field _numTypesValid:I
     126: bipush        16
     128: iand
     129: ifeq          176
     132: getstatic     #141                // Field BD_MIN_LONG:Ljava/math/BigDecimal;
     135: aload_0
     136: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
     139: invokevirtual #130                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     142: ifgt          158
     145: getstatic     #142                // Field BD_MAX_LONG:Ljava/math/BigDecimal;
     148: aload_0
     149: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
     152: invokevirtual #130                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     155: ifge          162
     158: aload_0
     159: invokevirtual #135                // Method reportOverflowLong:()V
     162: aload_0
     163: aload_0
     164: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
     167: invokevirtual #143                // Method java/math/BigDecimal.longValue:()J
     170: putfield      #77                 // Field _numberLong:J
     173: goto          180
     176: aload_0
     177: invokevirtual #81                 // Method _throwInternal:()V
     180: aload_0
     181: dup
     182: getfield      #13                 // Field _numTypesValid:I
     185: iconst_2
     186: ior
     187: putfield      #13                 // Field _numTypesValid:I
     190: return

  protected void convertNumberToBigInteger() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: bipush        16
       6: iand
       7: ifeq          24
      10: aload_0
      11: aload_0
      12: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      15: invokevirtual #144                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      18: putfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      21: goto          102
      24: aload_0
      25: getfield      #13                 // Field _numTypesValid:I
      28: iconst_2
      29: iand
      30: ifeq          47
      33: aload_0
      34: aload_0
      35: getfield      #77                 // Field _numberLong:J
      38: invokestatic  #145                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      41: putfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      44: goto          102
      47: aload_0
      48: getfield      #13                 // Field _numTypesValid:I
      51: iconst_1
      52: iand
      53: ifeq          71
      56: aload_0
      57: aload_0
      58: getfield      #75                 // Field _numberInt:I
      61: i2l
      62: invokestatic  #145                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      65: putfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      68: goto          102
      71: aload_0
      72: getfield      #13                 // Field _numTypesValid:I
      75: bipush        8
      77: iand
      78: ifeq          98
      81: aload_0
      82: aload_0
      83: getfield      #73                 // Field _numberDouble:D
      86: invokestatic  #146                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      89: invokevirtual #144                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      92: putfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      95: goto          102
      98: aload_0
      99: invokevirtual #81                 // Method _throwInternal:()V
     102: aload_0
     103: dup
     104: getfield      #13                 // Field _numTypesValid:I
     107: iconst_4
     108: ior
     109: putfield      #13                 // Field _numTypesValid:I
     112: return

  protected void convertNumberToDouble() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: bipush        16
       6: iand
       7: ifeq          24
      10: aload_0
      11: aload_0
      12: getfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      15: invokevirtual #147                // Method java/math/BigDecimal.doubleValue:()D
      18: putfield      #73                 // Field _numberDouble:D
      21: goto          93
      24: aload_0
      25: getfield      #13                 // Field _numTypesValid:I
      28: iconst_4
      29: iand
      30: ifeq          47
      33: aload_0
      34: aload_0
      35: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      38: invokevirtual #148                // Method java/math/BigInteger.doubleValue:()D
      41: putfield      #73                 // Field _numberDouble:D
      44: goto          93
      47: aload_0
      48: getfield      #13                 // Field _numTypesValid:I
      51: iconst_2
      52: iand
      53: ifeq          68
      56: aload_0
      57: aload_0
      58: getfield      #77                 // Field _numberLong:J
      61: l2d
      62: putfield      #73                 // Field _numberDouble:D
      65: goto          93
      68: aload_0
      69: getfield      #13                 // Field _numTypesValid:I
      72: iconst_1
      73: iand
      74: ifeq          89
      77: aload_0
      78: aload_0
      79: getfield      #75                 // Field _numberInt:I
      82: i2d
      83: putfield      #73                 // Field _numberDouble:D
      86: goto          93
      89: aload_0
      90: invokevirtual #81                 // Method _throwInternal:()V
      93: aload_0
      94: dup
      95: getfield      #13                 // Field _numTypesValid:I
      98: bipush        8
     100: ior
     101: putfield      #13                 // Field _numTypesValid:I
     104: return

  protected void convertNumberToBigDecimal() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _numTypesValid:I
       4: bipush        8
       6: iand
       7: ifeq          28
      10: aload_0
      11: new           #149                // class java/math/BigDecimal
      14: dup
      15: aload_0
      16: invokevirtual #118                // Method getText:()Ljava/lang/String;
      19: invokespecial #150                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      22: putfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      25: goto          106
      28: aload_0
      29: getfield      #13                 // Field _numTypesValid:I
      32: iconst_4
      33: iand
      34: ifeq          55
      37: aload_0
      38: new           #149                // class java/math/BigDecimal
      41: dup
      42: aload_0
      43: getfield      #79                 // Field _numberBigInt:Ljava/math/BigInteger;
      46: invokespecial #151                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      49: putfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      52: goto          106
      55: aload_0
      56: getfield      #13                 // Field _numTypesValid:I
      59: iconst_2
      60: iand
      61: ifeq          78
      64: aload_0
      65: aload_0
      66: getfield      #77                 // Field _numberLong:J
      69: invokestatic  #152                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      72: putfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      75: goto          106
      78: aload_0
      79: getfield      #13                 // Field _numTypesValid:I
      82: iconst_1
      83: iand
      84: ifeq          102
      87: aload_0
      88: aload_0
      89: getfield      #75                 // Field _numberInt:I
      92: i2l
      93: invokestatic  #152                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      96: putfield      #80                 // Field _numberBigDecimal:Ljava/math/BigDecimal;
      99: goto          106
     102: aload_0
     103: invokevirtual #81                 // Method _throwInternal:()V
     106: aload_0
     107: dup
     108: getfield      #13                 // Field _numTypesValid:I
     111: bipush        16
     113: ior
     114: putfield      #13                 // Field _numTypesValid:I
     117: return

  protected void reportUnexpectedNumberChar(int, java.lang.String) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #153                // String Unexpected character (
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: iload_1
      13: invokestatic  #154                // Method _getCharDesc:(I)Ljava/lang/String;
      16: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #155                // String ) in numeric value
      21: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_3
      28: aload_2
      29: ifnull        56
      32: new           #43                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      39: aload_3
      40: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #156                // String :
      45: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_2
      49: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: astore_3
      56: aload_0
      57: aload_3
      58: invokevirtual #60                 // Method _reportError:(Ljava/lang/String;)V
      61: return

  protected void reportInvalidNumber(java.lang.String) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: new           #43                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #157                // String Invalid numeric value:
      10: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokevirtual #60                 // Method _reportError:(Ljava/lang/String;)V
      23: return

  protected void reportOverflowInt() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: new           #43                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #117                // String Numeric value (
      10: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: invokevirtual #118                // Method getText:()Ljava/lang/String;
      17: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #158                // String ) out of range of int (
      22: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #159                // int -2147483648
      27: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #161                // String  -
      32: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #162                // int 2147483647
      37: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: ldc           #51                 // String )
      42: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokevirtual #60                 // Method _reportError:(Ljava/lang/String;)V
      51: return

  protected void reportOverflowLong() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: new           #43                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #117                // String Numeric value (
      10: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: invokevirtual #118                // Method getText:()Ljava/lang/String;
      17: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #163                // String ) out of range of long (
      22: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc2_w        #164                // long -9223372036854775808l
      28: invokevirtual #166                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #161                // String  -
      33: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc2_w        #167                // long 9223372036854775807l
      39: invokevirtual #166                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      42: ldc           #51                 // String )
      44: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #60                 // Method _reportError:(Ljava/lang/String;)V
      53: return

  protected char _decodeEscaped() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: new           #169                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #170                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected final int _decodeBase64Escape(org.codehaus.jackson.Base64Variant, int, int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: iload_2
       1: bipush        92
       3: if_icmpeq     14
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokevirtual #171                // Method reportInvalidBase64Char:(Lorg/codehaus/jackson/Base64Variant;II)Ljava/lang/IllegalArgumentException;
      13: athrow
      14: aload_0
      15: invokevirtual #172                // Method _decodeEscaped:()C
      18: istore        4
      20: iload         4
      22: bipush        32
      24: if_icmpgt     33
      27: iload_3
      28: ifne          33
      31: iconst_m1
      32: ireturn
      33: aload_1
      34: iload         4
      36: invokevirtual #173                // Method org/codehaus/jackson/Base64Variant.decodeBase64Char:(I)I
      39: istore        5
      41: iload         5
      43: ifge          55
      46: aload_0
      47: aload_1
      48: iload         4
      50: iload_3
      51: invokevirtual #171                // Method reportInvalidBase64Char:(Lorg/codehaus/jackson/Base64Variant;II)Ljava/lang/IllegalArgumentException;
      54: athrow
      55: iload         5
      57: ireturn

  protected final int _decodeBase64Escape(org.codehaus.jackson.Base64Variant, char, int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: iload_2
       1: bipush        92
       3: if_icmpeq     14
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokevirtual #171                // Method reportInvalidBase64Char:(Lorg/codehaus/jackson/Base64Variant;II)Ljava/lang/IllegalArgumentException;
      13: athrow
      14: aload_0
      15: invokevirtual #172                // Method _decodeEscaped:()C
      18: istore        4
      20: iload         4
      22: bipush        32
      24: if_icmpgt     33
      27: iload_3
      28: ifne          33
      31: iconst_m1
      32: ireturn
      33: aload_1
      34: iload         4
      36: invokevirtual #174                // Method org/codehaus/jackson/Base64Variant.decodeBase64Char:(C)I
      39: istore        5
      41: iload         5
      43: ifge          55
      46: aload_0
      47: aload_1
      48: iload         4
      50: iload_3
      51: invokevirtual #171                // Method reportInvalidBase64Char:(Lorg/codehaus/jackson/Base64Variant;II)Ljava/lang/IllegalArgumentException;
      54: athrow
      55: iload         5
      57: ireturn

  protected java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant, int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #175                // Method reportInvalidBase64Char:(Lorg/codehaus/jackson/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;
       8: areturn

  protected java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant, int, int, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_2
       1: bipush        32
       3: if_icmpgt     49
       6: new           #43                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #176                // String Illegal white space character (code 0x
      15: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: iload_2
      19: invokestatic  #177                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      22: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #178                // String ) as character #
      27: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_3
      31: iconst_1
      32: iadd
      33: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #179                // String  of 4-char base64 unit: can only used between units
      38: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore        5
      46: goto          185
      49: aload_1
      50: iload_2
      51: invokevirtual #180                // Method org/codehaus/jackson/Base64Variant.usesPaddingChar:(I)Z
      54: ifeq          100
      57: new           #43                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #181                // String Unexpected padding character (\'
      66: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #182                // Method org/codehaus/jackson/Base64Variant.getPaddingChar:()C
      73: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: ldc           #183                // String \') as character #
      78: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload_3
      82: iconst_1
      83: iadd
      84: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #184                // String  of 4-char base64 unit: padding only legal as 3rd or 4th character
      89: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: astore        5
      97: goto          185
     100: iload_2
     101: invokestatic  #185                // Method java/lang/Character.isDefined:(I)Z
     104: ifeq          114
     107: iload_2
     108: invokestatic  #186                // Method java/lang/Character.isISOControl:(I)Z
     111: ifeq          146
     114: new           #43                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #187                // String Illegal character (code 0x
     123: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: iload_2
     127: invokestatic  #177                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     130: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #188                // String ) in base64 content
     135: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: astore        5
     143: goto          185
     146: new           #43                 // class java/lang/StringBuilder
     149: dup
     150: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     153: ldc           #189                // String Illegal character \'
     155: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: iload_2
     159: i2c
     160: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     163: ldc           #190                // String \' (code 0x
     165: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: iload_2
     169: invokestatic  #177                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     172: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: ldc           #188                // String ) in base64 content
     177: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     183: astore        5
     185: aload         4
     187: ifnull        217
     190: new           #43                 // class java/lang/StringBuilder
     193: dup
     194: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     197: aload         5
     199: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: ldc           #156                // String :
     204: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: aload         4
     209: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: astore        5
     217: new           #191                // class java/lang/IllegalArgumentException
     220: dup
     221: aload         5
     223: invokespecial #192                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     226: areturn

  public org.codehaus.jackson.JsonStreamContext getParsingContext();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method getParsingContext:()Lorg/codehaus/jackson/impl/JsonReadContext;
       4: areturn

  static {};
    Code:
       0: ldc2_w        #98                 // long -2147483648l
       3: invokestatic  #145                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       6: putstatic     #120                // Field BI_MIN_INT:Ljava/math/BigInteger;
       9: ldc2_w        #100                // long 2147483647l
      12: invokestatic  #145                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      15: putstatic     #122                // Field BI_MAX_INT:Ljava/math/BigInteger;
      18: ldc2_w        #164                // long -9223372036854775808l
      21: invokestatic  #145                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      24: putstatic     #133                // Field BI_MIN_LONG:Ljava/math/BigInteger;
      27: ldc2_w        #167                // long 9223372036854775807l
      30: invokestatic  #145                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      33: putstatic     #134                // Field BI_MAX_LONG:Ljava/math/BigInteger;
      36: new           #149                // class java/math/BigDecimal
      39: dup
      40: getstatic     #133                // Field BI_MIN_LONG:Ljava/math/BigInteger;
      43: invokespecial #151                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      46: putstatic     #141                // Field BD_MIN_LONG:Ljava/math/BigDecimal;
      49: new           #149                // class java/math/BigDecimal
      52: dup
      53: getstatic     #134                // Field BI_MAX_LONG:Ljava/math/BigInteger;
      56: invokespecial #151                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      59: putstatic     #142                // Field BD_MAX_LONG:Ljava/math/BigDecimal;
      62: new           #149                // class java/math/BigDecimal
      65: dup
      66: getstatic     #120                // Field BI_MIN_INT:Ljava/math/BigInteger;
      69: invokespecial #151                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      72: putstatic     #129                // Field BD_MIN_INT:Ljava/math/BigDecimal;
      75: new           #149                // class java/math/BigDecimal
      78: dup
      79: getstatic     #122                // Field BI_MAX_INT:Ljava/math/BigInteger;
      82: invokespecial #151                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      85: putstatic     #131                // Field BD_MAX_INT:Ljava/math/BigDecimal;
      88: return
}
