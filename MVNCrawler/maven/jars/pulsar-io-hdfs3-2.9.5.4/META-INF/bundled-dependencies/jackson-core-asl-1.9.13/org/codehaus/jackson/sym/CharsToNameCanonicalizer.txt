Compiled from "CharsToNameCanonicalizer.java"
public final class org.codehaus.jackson.sym.CharsToNameCanonicalizer {
  public static final int HASH_MULT;

  protected static final int DEFAULT_TABLE_SIZE;

  protected static final int MAX_TABLE_SIZE;

  static final int MAX_ENTRIES_FOR_REUSE;

  static final int MAX_COLL_CHAIN_LENGTH;

  static final int MAX_COLL_CHAIN_FOR_REUSE;

  static final org.codehaus.jackson.sym.CharsToNameCanonicalizer sBootstrapSymbolTable;

  protected org.codehaus.jackson.sym.CharsToNameCanonicalizer _parent;

  private final int _hashSeed;

  protected final boolean _intern;

  protected final boolean _canonicalize;

  protected java.lang.String[] _symbols;

  protected org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[] _buckets;

  protected int _size;

  protected int _sizeThreshold;

  protected int _indexMask;

  protected int _longestCollisionList;

  protected boolean _dirty;

  public static org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot();
    Code:
       0: invokestatic  #1                  // Method java/lang/System.currentTimeMillis:()J
       3: lstore_0
       4: lload_0
       5: l2i
       6: lload_0
       7: l2i
       8: bipush        32
      10: iushr
      11: iadd
      12: iconst_1
      13: ior
      14: istore_2
      15: iload_2
      16: invokestatic  #2                  // Method createRoot:(I)Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
      19: areturn

  protected static org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot(int);
    Code:
       0: getstatic     #3                  // Field sBootstrapSymbolTable:Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
       3: iload_0
       4: invokespecial #4                  // Method makeOrphan:(I)Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
       7: areturn

  private org.codehaus.jackson.sym.CharsToNameCanonicalizer();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #6                  // Field _canonicalize:Z
       9: aload_0
      10: iconst_1
      11: putfield      #7                  // Field _intern:Z
      14: aload_0
      15: iconst_1
      16: putfield      #8                  // Field _dirty:Z
      19: aload_0
      20: iconst_0
      21: putfield      #9                  // Field _hashSeed:I
      24: aload_0
      25: iconst_0
      26: putfield      #10                 // Field _longestCollisionList:I
      29: aload_0
      30: bipush        64
      32: invokespecial #11                 // Method initTables:(I)V
      35: return

  private void initTables(int);
    Code:
       0: aload_0
       1: iload_1
       2: anewarray     #12                 // class java/lang/String
       5: putfield      #13                 // Field _symbols:[Ljava/lang/String;
       8: aload_0
       9: iload_1
      10: iconst_1
      11: ishr
      12: anewarray     #14                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket
      15: putfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      18: aload_0
      19: iload_1
      20: iconst_1
      21: isub
      22: putfield      #16                 // Field _indexMask:I
      25: aload_0
      26: iconst_0
      27: putfield      #17                 // Field _size:I
      30: aload_0
      31: iconst_0
      32: putfield      #10                 // Field _longestCollisionList:I
      35: aload_0
      36: iload_1
      37: invokestatic  #18                 // Method _thresholdSize:(I)I
      40: putfield      #19                 // Field _sizeThreshold:I
      43: return

  private static final int _thresholdSize(int);
    Code:
       0: iload_0
       1: iload_0
       2: iconst_2
       3: ishr
       4: isub
       5: ireturn

  private org.codehaus.jackson.sym.CharsToNameCanonicalizer(org.codehaus.jackson.sym.CharsToNameCanonicalizer, boolean, boolean, java.lang.String[], org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[], int, int, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field _parent:Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field _canonicalize:Z
      14: aload_0
      15: iload_3
      16: putfield      #7                  // Field _intern:Z
      19: aload_0
      20: aload         4
      22: putfield      #13                 // Field _symbols:[Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      31: aload_0
      32: iload         6
      34: putfield      #17                 // Field _size:I
      37: aload_0
      38: iload         7
      40: putfield      #9                  // Field _hashSeed:I
      43: aload         4
      45: arraylength
      46: istore        9
      48: aload_0
      49: iload         9
      51: invokestatic  #18                 // Method _thresholdSize:(I)I
      54: putfield      #19                 // Field _sizeThreshold:I
      57: aload_0
      58: iload         9
      60: iconst_1
      61: isub
      62: putfield      #16                 // Field _indexMask:I
      65: aload_0
      66: iload         8
      68: putfield      #10                 // Field _longestCollisionList:I
      71: aload_0
      72: iconst_0
      73: putfield      #8                  // Field _dirty:Z
      76: return

  public synchronized org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean, boolean);
    Code:
       0: aload_0
       1: dup
       2: astore        8
       4: monitorenter
       5: aload_0
       6: getfield      #13                 // Field _symbols:[Ljava/lang/String;
       9: astore_3
      10: aload_0
      11: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      14: astore        4
      16: aload_0
      17: getfield      #17                 // Field _size:I
      20: istore        5
      22: aload_0
      23: getfield      #9                  // Field _hashSeed:I
      26: istore        6
      28: aload_0
      29: getfield      #10                 // Field _longestCollisionList:I
      32: istore        7
      34: aload         8
      36: monitorexit
      37: goto          48
      40: astore        9
      42: aload         8
      44: monitorexit
      45: aload         9
      47: athrow
      48: new           #21                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer
      51: dup
      52: aload_0
      53: iload_1
      54: iload_2
      55: aload_3
      56: aload         4
      58: iload         5
      60: iload         6
      62: iload         7
      64: invokespecial #22                 // Method "<init>":(Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;ZZ[Ljava/lang/String;[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;III)V
      67: areturn
    Exception table:
       from    to  target type
           5    37    40   any
          40    45    40   any

  private org.codehaus.jackson.sym.CharsToNameCanonicalizer makeOrphan(int);
    Code:
       0: new           #21                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer
       3: dup
       4: aconst_null
       5: iconst_1
       6: iconst_1
       7: aload_0
       8: getfield      #13                 // Field _symbols:[Ljava/lang/String;
      11: aload_0
      12: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      15: aload_0
      16: getfield      #17                 // Field _size:I
      19: iload_1
      20: aload_0
      21: getfield      #10                 // Field _longestCollisionList:I
      24: invokespecial #22                 // Method "<init>":(Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;ZZ[Ljava/lang/String;[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;III)V
      27: areturn

  private void mergeChild(org.codehaus.jackson.sym.CharsToNameCanonicalizer);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method size:()I
       4: sipush        12000
       7: if_icmpgt     19
      10: aload_1
      11: getfield      #10                 // Field _longestCollisionList:I
      14: bipush        63
      16: if_icmple     47
      19: aload_0
      20: dup
      21: astore_2
      22: monitorenter
      23: aload_0
      24: bipush        64
      26: invokespecial #11                 // Method initTables:(I)V
      29: aload_0
      30: iconst_0
      31: putfield      #8                  // Field _dirty:Z
      34: aload_2
      35: monitorexit
      36: goto          44
      39: astore_3
      40: aload_2
      41: monitorexit
      42: aload_3
      43: athrow
      44: goto          128
      47: aload_1
      48: invokevirtual #23                 // Method size:()I
      51: aload_0
      52: invokevirtual #23                 // Method size:()I
      55: if_icmpgt     59
      58: return
      59: aload_0
      60: dup
      61: astore_2
      62: monitorenter
      63: aload_0
      64: aload_1
      65: getfield      #13                 // Field _symbols:[Ljava/lang/String;
      68: putfield      #13                 // Field _symbols:[Ljava/lang/String;
      71: aload_0
      72: aload_1
      73: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      76: putfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      79: aload_0
      80: aload_1
      81: getfield      #17                 // Field _size:I
      84: putfield      #17                 // Field _size:I
      87: aload_0
      88: aload_1
      89: getfield      #19                 // Field _sizeThreshold:I
      92: putfield      #19                 // Field _sizeThreshold:I
      95: aload_0
      96: aload_1
      97: getfield      #16                 // Field _indexMask:I
     100: putfield      #16                 // Field _indexMask:I
     103: aload_0
     104: aload_1
     105: getfield      #10                 // Field _longestCollisionList:I
     108: putfield      #10                 // Field _longestCollisionList:I
     111: aload_0
     112: iconst_0
     113: putfield      #8                  // Field _dirty:Z
     116: aload_2
     117: monitorexit
     118: goto          128
     121: astore        4
     123: aload_2
     124: monitorexit
     125: aload         4
     127: athrow
     128: return
    Exception table:
       from    to  target type
          23    36    39   any
          39    42    39   any
          63   118   121   any
         121   125   121   any

  public void release();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method maybeDirty:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #20                 // Field _parent:Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
      12: ifnull        28
      15: aload_0
      16: getfield      #20                 // Field _parent:Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
      19: aload_0
      20: invokespecial #25                 // Method mergeChild:(Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;)V
      23: aload_0
      24: iconst_0
      25: putfield      #8                  // Field _dirty:Z
      28: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #17                 // Field _size:I
       4: ireturn

  public int bucketCount();
    Code:
       0: aload_0
       1: getfield      #13                 // Field _symbols:[Ljava/lang/String;
       4: arraylength
       5: ireturn

  public boolean maybeDirty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _dirty:Z
       4: ireturn

  public int hashSeed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _hashSeed:I
       4: ireturn

  public int collisionCount();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     44
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: ifnull        38
      30: iload_1
      31: aload         5
      33: invokevirtual #26                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket.length:()I
      36: iadd
      37: istore_1
      38: iinc          4, 1
      41: goto          13
      44: iload_1
      45: ireturn

  public int maxCollisionLength();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _longestCollisionList:I
       4: ireturn

  public java.lang.String findSymbol(char[], int, int, int);
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     8
       5: ldc           #27                 // String
       7: areturn
       8: aload_0
       9: getfield      #6                  // Field _canonicalize:Z
      12: ifne          26
      15: new           #12                 // class java/lang/String
      18: dup
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokespecial #28                 // Method java/lang/String."<init>":([CII)V
      25: areturn
      26: aload_0
      27: iload         4
      29: invokevirtual #29                 // Method _hashToIndex:(I)I
      32: istore        5
      34: aload_0
      35: getfield      #13                 // Field _symbols:[Ljava/lang/String;
      38: iload         5
      40: aaload
      41: astore        6
      43: aload         6
      45: ifnull        131
      48: aload         6
      50: invokevirtual #30                 // Method java/lang/String.length:()I
      53: iload_3
      54: if_icmpne     97
      57: iconst_0
      58: istore        7
      60: aload         6
      62: iload         7
      64: invokevirtual #31                 // Method java/lang/String.charAt:(I)C
      67: aload_1
      68: iload_2
      69: iload         7
      71: iadd
      72: caload
      73: if_icmpeq     79
      76: goto          88
      79: iinc          7, 1
      82: iload         7
      84: iload_3
      85: if_icmplt     60
      88: iload         7
      90: iload_3
      91: if_icmpne     97
      94: aload         6
      96: areturn
      97: aload_0
      98: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     101: iload         5
     103: iconst_1
     104: ishr
     105: aaload
     106: astore        7
     108: aload         7
     110: ifnull        131
     113: aload         7
     115: aload_1
     116: iload_2
     117: iload_3
     118: invokevirtual #32                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket.find:([CII)Ljava/lang/String;
     121: astore        6
     123: aload         6
     125: ifnull        131
     128: aload         6
     130: areturn
     131: aload_0
     132: getfield      #8                  // Field _dirty:Z
     135: ifne          150
     138: aload_0
     139: invokespecial #33                 // Method copyArrays:()V
     142: aload_0
     143: iconst_1
     144: putfield      #8                  // Field _dirty:Z
     147: goto          178
     150: aload_0
     151: getfield      #17                 // Field _size:I
     154: aload_0
     155: getfield      #19                 // Field _sizeThreshold:I
     158: if_icmplt     178
     161: aload_0
     162: invokespecial #34                 // Method rehash:()V
     165: aload_0
     166: aload_0
     167: aload_1
     168: iload_2
     169: iload_3
     170: invokevirtual #35                 // Method calcHash:([CII)I
     173: invokevirtual #29                 // Method _hashToIndex:(I)I
     176: istore        5
     178: new           #12                 // class java/lang/String
     181: dup
     182: aload_1
     183: iload_2
     184: iload_3
     185: invokespecial #28                 // Method java/lang/String."<init>":([CII)V
     188: astore        7
     190: aload_0
     191: getfield      #7                  // Field _intern:Z
     194: ifeq          207
     197: getstatic     #36                 // Field org/codehaus/jackson/util/InternCache.instance:Lorg/codehaus/jackson/util/InternCache;
     200: aload         7
     202: invokevirtual #37                 // Method org/codehaus/jackson/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;
     205: astore        7
     207: aload_0
     208: dup
     209: getfield      #17                 // Field _size:I
     212: iconst_1
     213: iadd
     214: putfield      #17                 // Field _size:I
     217: aload_0
     218: getfield      #13                 // Field _symbols:[Ljava/lang/String;
     221: iload         5
     223: aaload
     224: ifnonnull     239
     227: aload_0
     228: getfield      #13                 // Field _symbols:[Ljava/lang/String;
     231: iload         5
     233: aload         7
     235: aastore
     236: goto          305
     239: iload         5
     241: iconst_1
     242: ishr
     243: istore        8
     245: new           #14                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket
     248: dup
     249: aload         7
     251: aload_0
     252: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     255: iload         8
     257: aaload
     258: invokespecial #38                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;)V
     261: astore        9
     263: aload_0
     264: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     267: iload         8
     269: aload         9
     271: aastore
     272: aload_0
     273: aload         9
     275: invokevirtual #26                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket.length:()I
     278: aload_0
     279: getfield      #10                 // Field _longestCollisionList:I
     282: invokestatic  #39                 // Method java/lang/Math.max:(II)I
     285: putfield      #10                 // Field _longestCollisionList:I
     288: aload_0
     289: getfield      #10                 // Field _longestCollisionList:I
     292: sipush        255
     295: if_icmple     305
     298: aload_0
     299: sipush        255
     302: invokevirtual #40                 // Method reportTooManyCollisions:(I)V
     305: aload         7
     307: areturn

  public final int _hashToIndex(int);
    Code:
       0: iload_1
       1: iload_1
       2: bipush        15
       4: iushr
       5: iadd
       6: istore_1
       7: iload_1
       8: aload_0
       9: getfield      #16                 // Field _indexMask:I
      12: iand
      13: ireturn

  public int calcHash(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _hashSeed:I
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload_3
      12: if_icmpge     33
      15: iload         4
      17: bipush        33
      19: imul
      20: aload_1
      21: iload         5
      23: caload
      24: iadd
      25: istore        4
      27: iinc          5, 1
      30: goto          9
      33: iload         4
      35: ifne          42
      38: iconst_1
      39: goto          44
      42: iload         4
      44: ireturn

  public int calcHash(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: getfield      #9                  // Field _hashSeed:I
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_2
      16: if_icmpge     37
      19: iload_3
      20: bipush        33
      22: imul
      23: aload_1
      24: iload         4
      26: invokevirtual #31                 // Method java/lang/String.charAt:(I)C
      29: iadd
      30: istore_3
      31: iinc          4, 1
      34: goto          13
      37: iload_3
      38: ifne          45
      41: iconst_1
      42: goto          46
      45: iload_3
      46: ireturn

  private void copyArrays();
    Code:
       0: aload_0
       1: getfield      #13                 // Field _symbols:[Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: aload_0
       9: iload_2
      10: anewarray     #12                 // class java/lang/String
      13: putfield      #13                 // Field _symbols:[Ljava/lang/String;
      16: aload_1
      17: iconst_0
      18: aload_0
      19: getfield      #13                 // Field _symbols:[Ljava/lang/String;
      22: iconst_0
      23: iload_2
      24: invokestatic  #41                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_0
      28: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      31: astore_3
      32: aload_3
      33: arraylength
      34: istore_2
      35: aload_0
      36: iload_2
      37: anewarray     #14                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket
      40: putfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      43: aload_3
      44: iconst_0
      45: aload_0
      46: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      49: iconst_0
      50: iload_2
      51: invokestatic  #41                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: return

  private void rehash();
    Code:
       0: aload_0
       1: getfield      #13                 // Field _symbols:[Ljava/lang/String;
       4: arraylength
       5: istore_1
       6: iload_1
       7: iload_1
       8: iadd
       9: istore_2
      10: iload_2
      11: ldc           #42                 // int 65536
      13: if_icmple     43
      16: aload_0
      17: iconst_0
      18: putfield      #17                 // Field _size:I
      21: aload_0
      22: getfield      #13                 // Field _symbols:[Ljava/lang/String;
      25: aconst_null
      26: invokestatic  #43                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      33: aconst_null
      34: invokestatic  #43                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      37: aload_0
      38: iconst_1
      39: putfield      #8                  // Field _dirty:Z
      42: return
      43: aload_0
      44: getfield      #13                 // Field _symbols:[Ljava/lang/String;
      47: astore_3
      48: aload_0
      49: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      52: astore        4
      54: aload_0
      55: iload_2
      56: anewarray     #12                 // class java/lang/String
      59: putfield      #13                 // Field _symbols:[Ljava/lang/String;
      62: aload_0
      63: iload_2
      64: iconst_1
      65: ishr
      66: anewarray     #14                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket
      69: putfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
      72: aload_0
      73: iload_2
      74: iconst_1
      75: isub
      76: putfield      #16                 // Field _indexMask:I
      79: aload_0
      80: iload_2
      81: invokestatic  #18                 // Method _thresholdSize:(I)I
      84: putfield      #19                 // Field _sizeThreshold:I
      87: iconst_0
      88: istore        5
      90: iconst_0
      91: istore        6
      93: iconst_0
      94: istore        7
      96: iload         7
      98: iload_1
      99: if_icmpge     201
     102: aload_3
     103: iload         7
     105: aaload
     106: astore        8
     108: aload         8
     110: ifnull        195
     113: iinc          5, 1
     116: aload_0
     117: aload_0
     118: aload         8
     120: invokevirtual #44                 // Method calcHash:(Ljava/lang/String;)I
     123: invokevirtual #29                 // Method _hashToIndex:(I)I
     126: istore        9
     128: aload_0
     129: getfield      #13                 // Field _symbols:[Ljava/lang/String;
     132: iload         9
     134: aaload
     135: ifnonnull     150
     138: aload_0
     139: getfield      #13                 // Field _symbols:[Ljava/lang/String;
     142: iload         9
     144: aload         8
     146: aastore
     147: goto          195
     150: iload         9
     152: iconst_1
     153: ishr
     154: istore        10
     156: new           #14                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket
     159: dup
     160: aload         8
     162: aload_0
     163: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     166: iload         10
     168: aaload
     169: invokespecial #38                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;)V
     172: astore        11
     174: aload_0
     175: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     178: iload         10
     180: aload         11
     182: aastore
     183: iload         6
     185: aload         11
     187: invokevirtual #26                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket.length:()I
     190: invokestatic  #39                 // Method java/lang/Math.max:(II)I
     193: istore        6
     195: iinc          7, 1
     198: goto          96
     201: iload_1
     202: iconst_1
     203: ishr
     204: istore_1
     205: iconst_0
     206: istore        7
     208: iload         7
     210: iload_1
     211: if_icmpge     331
     214: aload         4
     216: iload         7
     218: aaload
     219: astore        8
     221: aload         8
     223: ifnull        325
     226: iinc          5, 1
     229: aload         8
     231: invokevirtual #45                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket.getSymbol:()Ljava/lang/String;
     234: astore        9
     236: aload_0
     237: aload_0
     238: aload         9
     240: invokevirtual #44                 // Method calcHash:(Ljava/lang/String;)I
     243: invokevirtual #29                 // Method _hashToIndex:(I)I
     246: istore        10
     248: aload_0
     249: getfield      #13                 // Field _symbols:[Ljava/lang/String;
     252: iload         10
     254: aaload
     255: ifnonnull     270
     258: aload_0
     259: getfield      #13                 // Field _symbols:[Ljava/lang/String;
     262: iload         10
     264: aload         9
     266: aastore
     267: goto          315
     270: iload         10
     272: iconst_1
     273: ishr
     274: istore        11
     276: new           #14                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket
     279: dup
     280: aload         9
     282: aload_0
     283: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     286: iload         11
     288: aaload
     289: invokespecial #38                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;)V
     292: astore        12
     294: aload_0
     295: getfield      #15                 // Field _buckets:[Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     298: iload         11
     300: aload         12
     302: aastore
     303: iload         6
     305: aload         12
     307: invokevirtual #26                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket.length:()I
     310: invokestatic  #39                 // Method java/lang/Math.max:(II)I
     313: istore        6
     315: aload         8
     317: invokevirtual #46                 // Method org/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket.getNext:()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer$Bucket;
     320: astore        8
     322: goto          221
     325: iinc          7, 1
     328: goto          208
     331: aload_0
     332: iload         6
     334: putfield      #10                 // Field _longestCollisionList:I
     337: iload         5
     339: aload_0
     340: getfield      #17                 // Field _size:I
     343: if_icmpeq     391
     346: new           #47                 // class java/lang/Error
     349: dup
     350: new           #48                 // class java/lang/StringBuilder
     353: dup
     354: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     357: ldc           #50                 // String Internal error on SymbolTable.rehash(): had
     359: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     362: aload_0
     363: getfield      #17                 // Field _size:I
     366: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     369: ldc           #53                 // String  entries; now have
     371: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     374: iload         5
     376: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     379: ldc           #54                 // String .
     381: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     384: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     387: invokespecial #56                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
     390: athrow
     391: return

  protected void reportTooManyCollisions(int);
    Code:
       0: new           #57                 // class java/lang/IllegalStateException
       3: dup
       4: new           #48                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #58                 // String Longest collision chain in symbol table (of size
      13: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #17                 // Field _size:I
      20: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: ldc           #59                 // String ) now exceeds maximum,
      25: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_1
      29: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #60                 // String  -- suspect a DoS attack based on hash collisions
      34: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow

  static {};
    Code:
       0: new           #21                 // class org/codehaus/jackson/sym/CharsToNameCanonicalizer
       3: dup
       4: invokespecial #62                 // Method "<init>":()V
       7: putstatic     #3                  // Field sBootstrapSymbolTable:Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
      10: return
}
