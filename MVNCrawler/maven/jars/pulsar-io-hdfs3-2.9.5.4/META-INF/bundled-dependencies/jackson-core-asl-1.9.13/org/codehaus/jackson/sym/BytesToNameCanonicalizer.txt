Compiled from "BytesToNameCanonicalizer.java"
public final class org.codehaus.jackson.sym.BytesToNameCanonicalizer {
  protected static final int DEFAULT_TABLE_SIZE;

  protected static final int MAX_TABLE_SIZE;

  static final int MAX_ENTRIES_FOR_REUSE;

  static final int MAX_COLL_CHAIN_LENGTH;

  static final int MAX_COLL_CHAIN_FOR_REUSE;

  static final int MIN_HASH_SIZE;

  static final int INITIAL_COLLISION_LEN;

  static final int LAST_VALID_BUCKET;

  protected final org.codehaus.jackson.sym.BytesToNameCanonicalizer _parent;

  protected final java.util.concurrent.atomic.AtomicReference<org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo> _tableInfo;

  private final int _hashSeed;

  protected final boolean _intern;

  protected int _count;

  protected int _longestCollisionList;

  protected int _mainHashMask;

  protected int[] _mainHash;

  protected org.codehaus.jackson.sym.Name[] _mainNames;

  protected org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket[] _collList;

  protected int _collCount;

  protected int _collEnd;

  private transient boolean _needRehash;

  private boolean _mainHashShared;

  private boolean _mainNamesShared;

  private boolean _collListShared;

  private static final int MULT;

  private static final int MULT2;

  private static final int MULT3;

  private org.codehaus.jackson.sym.BytesToNameCanonicalizer(int, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field _parent:Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
       9: aload_0
      10: iload_3
      11: putfield      #3                  // Field _hashSeed:I
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field _intern:Z
      19: iload_1
      20: bipush        16
      22: if_icmpge     31
      25: bipush        16
      27: istore_1
      28: goto          62
      31: iload_1
      32: iload_1
      33: iconst_1
      34: isub
      35: iand
      36: ifeq          62
      39: bipush        16
      41: istore        4
      43: iload         4
      45: iload_1
      46: if_icmpge     59
      49: iload         4
      51: iload         4
      53: iadd
      54: istore        4
      56: goto          43
      59: iload         4
      61: istore_1
      62: aload_0
      63: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      66: dup
      67: aload_0
      68: iload_1
      69: invokespecial #6                  // Method initTableInfo:(I)Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo;
      72: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      75: putfield      #8                  // Field _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;
      78: return

  private org.codehaus.jackson.sym.BytesToNameCanonicalizer(org.codehaus.jackson.sym.BytesToNameCanonicalizer, boolean, int, org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _parent:Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
       9: aload_0
      10: iload_3
      11: putfield      #3                  // Field _hashSeed:I
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field _intern:Z
      19: aload_0
      20: aconst_null
      21: putfield      #8                  // Field _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;
      24: aload_0
      25: aload         4
      27: getfield      #9                  // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.count:I
      30: putfield      #10                 // Field _count:I
      33: aload_0
      34: aload         4
      36: getfield      #11                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.mainHashMask:I
      39: putfield      #12                 // Field _mainHashMask:I
      42: aload_0
      43: aload         4
      45: getfield      #13                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.mainHash:[I
      48: putfield      #14                 // Field _mainHash:[I
      51: aload_0
      52: aload         4
      54: getfield      #15                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.mainNames:[Lorg/codehaus/jackson/sym/Name;
      57: putfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      60: aload_0
      61: aload         4
      63: getfield      #17                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      66: putfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      69: aload_0
      70: aload         4
      72: getfield      #19                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.collCount:I
      75: putfield      #20                 // Field _collCount:I
      78: aload_0
      79: aload         4
      81: getfield      #21                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.collEnd:I
      84: putfield      #22                 // Field _collEnd:I
      87: aload_0
      88: aload         4
      90: getfield      #23                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.longestCollisionList:I
      93: putfield      #24                 // Field _longestCollisionList:I
      96: aload_0
      97: iconst_0
      98: putfield      #25                 // Field _needRehash:Z
     101: aload_0
     102: iconst_1
     103: putfield      #26                 // Field _mainHashShared:Z
     106: aload_0
     107: iconst_1
     108: putfield      #27                 // Field _mainNamesShared:Z
     111: aload_0
     112: iconst_1
     113: putfield      #28                 // Field _collListShared:Z
     116: return

  private org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo initTableInfo(int);
    Code:
       0: new           #29                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo
       3: dup
       4: iconst_0
       5: iload_1
       6: iconst_1
       7: isub
       8: iload_1
       9: newarray       int
      11: iload_1
      12: anewarray     #30                 // class org/codehaus/jackson/sym/Name
      15: aconst_null
      16: iconst_0
      17: iconst_0
      18: iconst_0
      19: invokespecial #31                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo."<init>":(II[I[Lorg/codehaus/jackson/sym/Name;[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;III)V
      22: areturn

  public static org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot();
    Code:
       0: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_0
       4: lload_0
       5: l2i
       6: lload_0
       7: l2i
       8: bipush        32
      10: iushr
      11: iadd
      12: iconst_1
      13: ior
      14: istore_2
      15: iload_2
      16: invokestatic  #33                 // Method createRoot:(I)Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
      19: areturn

  protected static org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot(int);
    Code:
       0: new           #34                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer
       3: dup
       4: bipush        64
       6: iconst_1
       7: iload_0
       8: invokespecial #35                 // Method "<init>":(IZI)V
      11: areturn

  public org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean, boolean);
    Code:
       0: new           #34                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer
       3: dup
       4: aload_0
       5: iload_2
       6: aload_0
       7: getfield      #3                  // Field _hashSeed:I
      10: aload_0
      11: getfield      #8                  // Field _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;
      14: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      17: checkcast     #29                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo
      20: invokespecial #37                 // Method "<init>":(Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;ZILorg/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo;)V
      23: areturn

  public void release();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _parent:Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
       4: ifnull        44
       7: aload_0
       8: invokevirtual #38                 // Method maybeDirty:()Z
      11: ifeq          44
      14: aload_0
      15: getfield      #2                  // Field _parent:Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
      18: new           #29                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo
      21: dup
      22: aload_0
      23: invokespecial #39                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo."<init>":(Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;)V
      26: invokespecial #40                 // Method mergeChild:(Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo;)V
      29: aload_0
      30: iconst_1
      31: putfield      #26                 // Field _mainHashShared:Z
      34: aload_0
      35: iconst_1
      36: putfield      #27                 // Field _mainNamesShared:Z
      39: aload_0
      40: iconst_1
      41: putfield      #28                 // Field _collListShared:Z
      44: return

  private void mergeChild(org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo);
    Code:
       0: aload_1
       1: getfield      #9                  // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.count:I
       4: istore_2
       5: aload_0
       6: getfield      #8                  // Field _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;
       9: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      12: checkcast     #29                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo
      15: astore_3
      16: iload_2
      17: aload_3
      18: getfield      #9                  // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.count:I
      21: if_icmpgt     25
      24: return
      25: iload_2
      26: sipush        6000
      29: if_icmpgt     41
      32: aload_1
      33: getfield      #23                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.longestCollisionList:I
      36: bipush        63
      38: if_icmple     48
      41: aload_0
      42: bipush        64
      44: invokespecial #6                  // Method initTableInfo:(I)Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo;
      47: astore_1
      48: aload_0
      49: getfield      #8                  // Field _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;
      52: aload_3
      53: aload_1
      54: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      57: pop
      58: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;
       4: ifnull        21
       7: aload_0
       8: getfield      #8                  // Field _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;
      11: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      14: checkcast     #29                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo
      17: getfield      #9                  // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$TableInfo.count:I
      20: ireturn
      21: aload_0
      22: getfield      #10                 // Field _count:I
      25: ireturn

  public int bucketCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field _mainHash:[I
       4: arraylength
       5: ireturn

  public boolean maybeDirty();
    Code:
       0: aload_0
       1: getfield      #26                 // Field _mainHashShared:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int hashSeed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _hashSeed:I
       4: ireturn

  public int collisionCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field _collCount:I
       4: ireturn

  public int maxCollisionLength();
    Code:
       0: aload_0
       1: getfield      #24                 // Field _longestCollisionList:I
       4: ireturn

  public static org.codehaus.jackson.sym.Name getEmptyName();
    Code:
       0: invokestatic  #42                 // Method org/codehaus/jackson/sym/Name1.getEmptyName:()Lorg/codehaus/jackson/sym/Name1;
       3: areturn

  public org.codehaus.jackson.sym.Name findName(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method calcHash:(I)I
       5: istore_2
       6: iload_2
       7: aload_0
       8: getfield      #12                 // Field _mainHashMask:I
      11: iand
      12: istore_3
      13: aload_0
      14: getfield      #14                 // Field _mainHash:[I
      17: iload_3
      18: iaload
      19: istore        4
      21: iload         4
      23: bipush        8
      25: ishr
      26: iload_2
      27: ixor
      28: bipush        8
      30: ishl
      31: ifne          64
      34: aload_0
      35: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      38: iload_3
      39: aaload
      40: astore        5
      42: aload         5
      44: ifnonnull     49
      47: aconst_null
      48: areturn
      49: aload         5
      51: iload_1
      52: invokevirtual #44                 // Method org/codehaus/jackson/sym/Name.equals:(I)Z
      55: ifeq          61
      58: aload         5
      60: areturn
      61: goto          71
      64: iload         4
      66: ifne          71
      69: aconst_null
      70: areturn
      71: iload         4
      73: sipush        255
      76: iand
      77: istore        4
      79: iload         4
      81: ifle          110
      84: iinc          4, -1
      87: aload_0
      88: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      91: iload         4
      93: aaload
      94: astore        5
      96: aload         5
      98: ifnull        110
     101: aload         5
     103: iload_2
     104: iload_1
     105: iconst_0
     106: invokevirtual #45                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket.find:(III)Lorg/codehaus/jackson/sym/Name;
     109: areturn
     110: aconst_null
     111: areturn

  public org.codehaus.jackson.sym.Name findName(int, int);
    Code:
       0: iload_2
       1: ifne          12
       4: aload_0
       5: iload_1
       6: invokevirtual #43                 // Method calcHash:(I)I
       9: goto          18
      12: aload_0
      13: iload_1
      14: iload_2
      15: invokevirtual #46                 // Method calcHash:(II)I
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #12                 // Field _mainHashMask:I
      24: iand
      25: istore        4
      27: aload_0
      28: getfield      #14                 // Field _mainHash:[I
      31: iload         4
      33: iaload
      34: istore        5
      36: iload         5
      38: bipush        8
      40: ishr
      41: iload_3
      42: ixor
      43: bipush        8
      45: ishl
      46: ifne          81
      49: aload_0
      50: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      53: iload         4
      55: aaload
      56: astore        6
      58: aload         6
      60: ifnonnull     65
      63: aconst_null
      64: areturn
      65: aload         6
      67: iload_1
      68: iload_2
      69: invokevirtual #47                 // Method org/codehaus/jackson/sym/Name.equals:(II)Z
      72: ifeq          78
      75: aload         6
      77: areturn
      78: goto          88
      81: iload         5
      83: ifne          88
      86: aconst_null
      87: areturn
      88: iload         5
      90: sipush        255
      93: iand
      94: istore        5
      96: iload         5
      98: ifle          127
     101: iinc          5, -1
     104: aload_0
     105: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     108: iload         5
     110: aaload
     111: astore        6
     113: aload         6
     115: ifnull        127
     118: aload         6
     120: iload_3
     121: iload_1
     122: iload_2
     123: invokevirtual #45                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket.find:(III)Lorg/codehaus/jackson/sym/Name;
     126: areturn
     127: aconst_null
     128: areturn

  public org.codehaus.jackson.sym.Name findName(int[], int);
    Code:
       0: iload_2
       1: iconst_3
       2: if_icmpge     25
       5: aload_0
       6: aload_1
       7: iconst_0
       8: iaload
       9: iload_2
      10: iconst_2
      11: if_icmpge     18
      14: iconst_0
      15: goto          21
      18: aload_1
      19: iconst_1
      20: iaload
      21: invokevirtual #48                 // Method findName:(II)Lorg/codehaus/jackson/sym/Name;
      24: areturn
      25: aload_0
      26: aload_1
      27: iload_2
      28: invokevirtual #49                 // Method calcHash:([II)I
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #12                 // Field _mainHashMask:I
      37: iand
      38: istore        4
      40: aload_0
      41: getfield      #14                 // Field _mainHash:[I
      44: iload         4
      46: iaload
      47: istore        5
      49: iload         5
      51: bipush        8
      53: ishr
      54: iload_3
      55: ixor
      56: bipush        8
      58: ishl
      59: ifne          92
      62: aload_0
      63: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      66: iload         4
      68: aaload
      69: astore        6
      71: aload         6
      73: ifnull        86
      76: aload         6
      78: aload_1
      79: iload_2
      80: invokevirtual #50                 // Method org/codehaus/jackson/sym/Name.equals:([II)Z
      83: ifeq          89
      86: aload         6
      88: areturn
      89: goto          99
      92: iload         5
      94: ifne          99
      97: aconst_null
      98: areturn
      99: iload         5
     101: sipush        255
     104: iand
     105: istore        5
     107: iload         5
     109: ifle          138
     112: iinc          5, -1
     115: aload_0
     116: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     119: iload         5
     121: aaload
     122: astore        6
     124: aload         6
     126: ifnull        138
     129: aload         6
     131: iload_3
     132: aload_1
     133: iload_2
     134: invokevirtual #51                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket.find:(I[II)Lorg/codehaus/jackson/sym/Name;
     137: areturn
     138: aconst_null
     139: areturn

  public org.codehaus.jackson.sym.Name addName(java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _intern:Z
       4: ifeq          15
       7: getstatic     #52                 // Field org/codehaus/jackson/util/InternCache.instance:Lorg/codehaus/jackson/util/InternCache;
      10: aload_1
      11: invokevirtual #53                 // Method org/codehaus/jackson/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_1
      15: iload_3
      16: ifne          27
      19: aload_0
      20: iload_2
      21: invokevirtual #43                 // Method calcHash:(I)I
      24: goto          33
      27: aload_0
      28: iload_2
      29: iload_3
      30: invokevirtual #46                 // Method calcHash:(II)I
      33: istore        4
      35: iload         4
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokestatic  #54                 // Method constructName:(ILjava/lang/String;II)Lorg/codehaus/jackson/sym/Name;
      43: astore        5
      45: aload_0
      46: iload         4
      48: aload         5
      50: invokespecial #55                 // Method _addSymbol:(ILorg/codehaus/jackson/sym/Name;)V
      53: aload         5
      55: areturn

  public org.codehaus.jackson.sym.Name addName(java.lang.String, int[], int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _intern:Z
       4: ifeq          15
       7: getstatic     #52                 // Field org/codehaus/jackson/util/InternCache.instance:Lorg/codehaus/jackson/util/InternCache;
      10: aload_1
      11: invokevirtual #53                 // Method org/codehaus/jackson/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_1
      15: iload_3
      16: iconst_3
      17: if_icmpge     50
      20: iload_3
      21: iconst_1
      22: if_icmpne     35
      25: aload_0
      26: aload_2
      27: iconst_0
      28: iaload
      29: invokevirtual #43                 // Method calcHash:(I)I
      32: goto          45
      35: aload_0
      36: aload_2
      37: iconst_0
      38: iaload
      39: aload_2
      40: iconst_1
      41: iaload
      42: invokevirtual #46                 // Method calcHash:(II)I
      45: istore        4
      47: goto          58
      50: aload_0
      51: aload_2
      52: iload_3
      53: invokevirtual #49                 // Method calcHash:([II)I
      56: istore        4
      58: iload         4
      60: aload_1
      61: aload_2
      62: iload_3
      63: invokestatic  #56                 // Method constructName:(ILjava/lang/String;[II)Lorg/codehaus/jackson/sym/Name;
      66: astore        5
      68: aload_0
      69: iload         4
      71: aload         5
      73: invokespecial #55                 // Method _addSymbol:(ILorg/codehaus/jackson/sym/Name;)V
      76: aload         5
      78: areturn

  public final int calcHash(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field _hashSeed:I
       5: ixor
       6: istore_2
       7: iload_2
       8: iload_2
       9: bipush        15
      11: iushr
      12: iadd
      13: istore_2
      14: iload_2
      15: iload_2
      16: bipush        9
      18: iushr
      19: ixor
      20: istore_2
      21: iload_2
      22: ireturn

  public final int calcHash(int, int);
    Code:
       0: iload_1
       1: istore_3
       2: iload_3
       3: iload_3
       4: bipush        15
       6: iushr
       7: ixor
       8: istore_3
       9: iload_3
      10: iload_2
      11: bipush        33
      13: imul
      14: iadd
      15: istore_3
      16: iload_3
      17: aload_0
      18: getfield      #3                  // Field _hashSeed:I
      21: ixor
      22: istore_3
      23: iload_3
      24: iload_3
      25: bipush        7
      27: iushr
      28: iadd
      29: istore_3
      30: iload_3
      31: ireturn

  public final int calcHash(int[], int);
    Code:
       0: iload_2
       1: iconst_3
       2: if_icmpge     13
       5: new           #57                 // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #58                 // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: aload_1
      14: iconst_0
      15: iaload
      16: aload_0
      17: getfield      #3                  // Field _hashSeed:I
      20: ixor
      21: istore_3
      22: iload_3
      23: iload_3
      24: bipush        9
      26: iushr
      27: iadd
      28: istore_3
      29: iload_3
      30: bipush        33
      32: imul
      33: istore_3
      34: iload_3
      35: aload_1
      36: iconst_1
      37: iaload
      38: iadd
      39: istore_3
      40: iload_3
      41: ldc           #59                 // int 65599
      43: imul
      44: istore_3
      45: iload_3
      46: iload_3
      47: bipush        15
      49: iushr
      50: iadd
      51: istore_3
      52: iload_3
      53: aload_1
      54: iconst_2
      55: iaload
      56: ixor
      57: istore_3
      58: iload_3
      59: iload_3
      60: bipush        17
      62: iushr
      63: iadd
      64: istore_3
      65: iconst_3
      66: istore        4
      68: iload         4
      70: iload_2
      71: if_icmpge     103
      74: iload_3
      75: bipush        31
      77: imul
      78: aload_1
      79: iload         4
      81: iaload
      82: ixor
      83: istore_3
      84: iload_3
      85: iload_3
      86: iconst_3
      87: iushr
      88: iadd
      89: istore_3
      90: iload_3
      91: iload_3
      92: bipush        7
      94: ishl
      95: ixor
      96: istore_3
      97: iinc          4, 1
     100: goto          68
     103: iload_3
     104: iload_3
     105: bipush        15
     107: iushr
     108: iadd
     109: istore_3
     110: iload_3
     111: iload_3
     112: bipush        9
     114: ishl
     115: ixor
     116: istore_3
     117: iload_3
     118: ireturn

  protected static int[] calcQuads(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: iload_1
       4: iconst_3
       5: iadd
       6: iconst_4
       7: idiv
       8: newarray       int
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: iload_1
      15: if_icmpge     109
      18: aload_0
      19: iload_3
      20: baload
      21: sipush        255
      24: iand
      25: istore        4
      27: iinc          3, 1
      30: iload_3
      31: iload_1
      32: if_icmpge     96
      35: iload         4
      37: bipush        8
      39: ishl
      40: aload_0
      41: iload_3
      42: baload
      43: sipush        255
      46: iand
      47: ior
      48: istore        4
      50: iinc          3, 1
      53: iload_3
      54: iload_1
      55: if_icmpge     96
      58: iload         4
      60: bipush        8
      62: ishl
      63: aload_0
      64: iload_3
      65: baload
      66: sipush        255
      69: iand
      70: ior
      71: istore        4
      73: iinc          3, 1
      76: iload_3
      77: iload_1
      78: if_icmpge     96
      81: iload         4
      83: bipush        8
      85: ishl
      86: aload_0
      87: iload_3
      88: baload
      89: sipush        255
      92: iand
      93: ior
      94: istore        4
      96: aload_2
      97: iload_3
      98: iconst_2
      99: ishr
     100: iload         4
     102: iastore
     103: iinc          3, 1
     106: goto          13
     109: aload_2
     110: areturn

  private void _addSymbol(int, org.codehaus.jackson.sym.Name);
    Code:
       0: aload_0
       1: getfield      #26                 // Field _mainHashShared:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #60                 // Method unshareMain:()V
      11: aload_0
      12: getfield      #25                 // Field _needRehash:Z
      15: ifeq          22
      18: aload_0
      19: invokespecial #61                 // Method rehash:()V
      22: aload_0
      23: dup
      24: getfield      #10                 // Field _count:I
      27: iconst_1
      28: iadd
      29: putfield      #10                 // Field _count:I
      32: iload_1
      33: aload_0
      34: getfield      #12                 // Field _mainHashMask:I
      37: iand
      38: istore_3
      39: aload_0
      40: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      43: iload_3
      44: aaload
      45: ifnonnull     79
      48: aload_0
      49: getfield      #14                 // Field _mainHash:[I
      52: iload_3
      53: iload_1
      54: bipush        8
      56: ishl
      57: iastore
      58: aload_0
      59: getfield      #27                 // Field _mainNamesShared:Z
      62: ifeq          69
      65: aload_0
      66: invokespecial #62                 // Method unshareNames:()V
      69: aload_0
      70: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      73: iload_3
      74: aload_2
      75: aastore
      76: goto          252
      79: aload_0
      80: getfield      #28                 // Field _collListShared:Z
      83: ifeq          90
      86: aload_0
      87: invokespecial #63                 // Method unshareCollision:()V
      90: aload_0
      91: dup
      92: getfield      #20                 // Field _collCount:I
      95: iconst_1
      96: iadd
      97: putfield      #20                 // Field _collCount:I
     100: aload_0
     101: getfield      #14                 // Field _mainHash:[I
     104: iload_3
     105: iaload
     106: istore        4
     108: iload         4
     110: sipush        255
     113: iand
     114: istore        5
     116: iload         5
     118: ifne          190
     121: aload_0
     122: getfield      #22                 // Field _collEnd:I
     125: sipush        254
     128: if_icmpgt     164
     131: aload_0
     132: getfield      #22                 // Field _collEnd:I
     135: istore        5
     137: aload_0
     138: dup
     139: getfield      #22                 // Field _collEnd:I
     142: iconst_1
     143: iadd
     144: putfield      #22                 // Field _collEnd:I
     147: iload         5
     149: aload_0
     150: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     153: arraylength
     154: if_icmplt     170
     157: aload_0
     158: invokespecial #64                 // Method expandCollision:()V
     161: goto          170
     164: aload_0
     165: invokespecial #65                 // Method findBestBucket:()I
     168: istore        5
     170: aload_0
     171: getfield      #14                 // Field _mainHash:[I
     174: iload_3
     175: iload         4
     177: sipush        -256
     180: iand
     181: iload         5
     183: iconst_1
     184: iadd
     185: ior
     186: iastore
     187: goto          193
     190: iinc          5, -1
     193: new           #66                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket
     196: dup
     197: aload_2
     198: aload_0
     199: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     202: iload         5
     204: aaload
     205: invokespecial #67                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket."<init>":(Lorg/codehaus/jackson/sym/Name;Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;)V
     208: astore        6
     210: aload_0
     211: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     214: iload         5
     216: aload         6
     218: aastore
     219: aload_0
     220: aload         6
     222: invokevirtual #68                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket.length:()I
     225: aload_0
     226: getfield      #24                 // Field _longestCollisionList:I
     229: invokestatic  #69                 // Method java/lang/Math.max:(II)I
     232: putfield      #24                 // Field _longestCollisionList:I
     235: aload_0
     236: getfield      #24                 // Field _longestCollisionList:I
     239: sipush        255
     242: if_icmple     252
     245: aload_0
     246: sipush        255
     249: invokevirtual #70                 // Method reportTooManyCollisions:(I)V
     252: aload_0
     253: getfield      #14                 // Field _mainHash:[I
     256: arraylength
     257: istore        4
     259: aload_0
     260: getfield      #10                 // Field _count:I
     263: iload         4
     265: iconst_1
     266: ishr
     267: if_icmple     310
     270: iload         4
     272: iconst_2
     273: ishr
     274: istore        5
     276: aload_0
     277: getfield      #10                 // Field _count:I
     280: iload         4
     282: iload         5
     284: isub
     285: if_icmple     296
     288: aload_0
     289: iconst_1
     290: putfield      #25                 // Field _needRehash:Z
     293: goto          310
     296: aload_0
     297: getfield      #20                 // Field _collCount:I
     300: iload         5
     302: if_icmplt     310
     305: aload_0
     306: iconst_1
     307: putfield      #25                 // Field _needRehash:Z
     310: return

  private void rehash();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #25                 // Field _needRehash:Z
       5: aload_0
       6: iconst_0
       7: putfield      #27                 // Field _mainNamesShared:Z
      10: aload_0
      11: getfield      #14                 // Field _mainHash:[I
      14: astore_1
      15: aload_1
      16: arraylength
      17: istore_2
      18: iload_2
      19: iload_2
      20: iadd
      21: istore_3
      22: iload_3
      23: ldc           #71                 // int 65536
      25: if_icmple     33
      28: aload_0
      29: invokespecial #72                 // Method nukeSymbols:()V
      32: return
      33: aload_0
      34: iload_3
      35: newarray       int
      37: putfield      #14                 // Field _mainHash:[I
      40: aload_0
      41: iload_3
      42: iconst_1
      43: isub
      44: putfield      #12                 // Field _mainHashMask:I
      47: aload_0
      48: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      51: astore        4
      53: aload_0
      54: iload_3
      55: anewarray     #30                 // class org/codehaus/jackson/sym/Name
      58: putfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      61: iconst_0
      62: istore        5
      64: iconst_0
      65: istore        6
      67: iload         6
      69: iload_2
      70: if_icmpge     131
      73: aload         4
      75: iload         6
      77: aaload
      78: astore        7
      80: aload         7
      82: ifnull        125
      85: iinc          5, 1
      88: aload         7
      90: invokevirtual #73                 // Method org/codehaus/jackson/sym/Name.hashCode:()I
      93: istore        8
      95: iload         8
      97: aload_0
      98: getfield      #12                 // Field _mainHashMask:I
     101: iand
     102: istore        9
     104: aload_0
     105: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
     108: iload         9
     110: aload         7
     112: aastore
     113: aload_0
     114: getfield      #14                 // Field _mainHash:[I
     117: iload         9
     119: iload         8
     121: bipush        8
     123: ishl
     124: iastore
     125: iinc          6, 1
     128: goto          67
     131: aload_0
     132: getfield      #22                 // Field _collEnd:I
     135: istore        6
     137: iload         6
     139: ifne          148
     142: aload_0
     143: iconst_0
     144: putfield      #24                 // Field _longestCollisionList:I
     147: return
     148: aload_0
     149: iconst_0
     150: putfield      #20                 // Field _collCount:I
     153: aload_0
     154: iconst_0
     155: putfield      #22                 // Field _collEnd:I
     158: aload_0
     159: iconst_0
     160: putfield      #28                 // Field _collListShared:Z
     163: iconst_0
     164: istore        7
     166: aload_0
     167: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     170: astore        8
     172: aload_0
     173: aload         8
     175: arraylength
     176: anewarray     #66                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket
     179: putfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     182: iconst_0
     183: istore        9
     185: iload         9
     187: iload         6
     189: if_icmpge     424
     192: aload         8
     194: iload         9
     196: aaload
     197: astore        10
     199: aload         10
     201: ifnull        418
     204: iinc          5, 1
     207: aload         10
     209: getfield      #74                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket._name:Lorg/codehaus/jackson/sym/Name;
     212: astore        11
     214: aload         11
     216: invokevirtual #73                 // Method org/codehaus/jackson/sym/Name.hashCode:()I
     219: istore        12
     221: iload         12
     223: aload_0
     224: getfield      #12                 // Field _mainHashMask:I
     227: iand
     228: istore        13
     230: aload_0
     231: getfield      #14                 // Field _mainHash:[I
     234: iload         13
     236: iaload
     237: istore        14
     239: aload_0
     240: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
     243: iload         13
     245: aaload
     246: ifnonnull     273
     249: aload_0
     250: getfield      #14                 // Field _mainHash:[I
     253: iload         13
     255: iload         12
     257: bipush        8
     259: ishl
     260: iastore
     261: aload_0
     262: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
     265: iload         13
     267: aload         11
     269: aastore
     270: goto          408
     273: aload_0
     274: dup
     275: getfield      #20                 // Field _collCount:I
     278: iconst_1
     279: iadd
     280: putfield      #20                 // Field _collCount:I
     283: iload         14
     285: sipush        255
     288: iand
     289: istore        15
     291: iload         15
     293: ifne          366
     296: aload_0
     297: getfield      #22                 // Field _collEnd:I
     300: sipush        254
     303: if_icmpgt     339
     306: aload_0
     307: getfield      #22                 // Field _collEnd:I
     310: istore        15
     312: aload_0
     313: dup
     314: getfield      #22                 // Field _collEnd:I
     317: iconst_1
     318: iadd
     319: putfield      #22                 // Field _collEnd:I
     322: iload         15
     324: aload_0
     325: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     328: arraylength
     329: if_icmplt     345
     332: aload_0
     333: invokespecial #64                 // Method expandCollision:()V
     336: goto          345
     339: aload_0
     340: invokespecial #65                 // Method findBestBucket:()I
     343: istore        15
     345: aload_0
     346: getfield      #14                 // Field _mainHash:[I
     349: iload         13
     351: iload         14
     353: sipush        -256
     356: iand
     357: iload         15
     359: iconst_1
     360: iadd
     361: ior
     362: iastore
     363: goto          369
     366: iinc          15, -1
     369: new           #66                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket
     372: dup
     373: aload         11
     375: aload_0
     376: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     379: iload         15
     381: aaload
     382: invokespecial #67                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket."<init>":(Lorg/codehaus/jackson/sym/Name;Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;)V
     385: astore        16
     387: aload_0
     388: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     391: iload         15
     393: aload         16
     395: aastore
     396: iload         7
     398: aload         16
     400: invokevirtual #68                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket.length:()I
     403: invokestatic  #69                 // Method java/lang/Math.max:(II)I
     406: istore        7
     408: aload         10
     410: getfield      #75                 // Field org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket._next:Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
     413: astore        10
     415: goto          199
     418: iinc          9, 1
     421: goto          185
     424: aload_0
     425: iload         7
     427: putfield      #24                 // Field _longestCollisionList:I
     430: iload         5
     432: aload_0
     433: getfield      #10                 // Field _count:I
     436: if_icmpeq     479
     439: new           #76                 // class java/lang/RuntimeException
     442: dup
     443: new           #77                 // class java/lang/StringBuilder
     446: dup
     447: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
     450: ldc           #79                 // String Internal error: count after rehash
     452: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     455: iload         5
     457: invokevirtual #81                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     460: ldc           #82                 // String ; should be
     462: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     465: aload_0
     466: getfield      #10                 // Field _count:I
     469: invokevirtual #81                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     472: invokevirtual #83                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     475: invokespecial #84                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     478: athrow
     479: return

  private void nukeSymbols();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #10                 // Field _count:I
       5: aload_0
       6: iconst_0
       7: putfield      #24                 // Field _longestCollisionList:I
      10: aload_0
      11: getfield      #14                 // Field _mainHash:[I
      14: iconst_0
      15: invokestatic  #85                 // Method java/util/Arrays.fill:([II)V
      18: aload_0
      19: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      22: aconst_null
      23: invokestatic  #86                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      26: aload_0
      27: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      30: aconst_null
      31: invokestatic  #86                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      34: aload_0
      35: iconst_0
      36: putfield      #20                 // Field _collCount:I
      39: aload_0
      40: iconst_0
      41: putfield      #22                 // Field _collEnd:I
      44: return

  private int findBestBucket();
    Code:
       0: aload_0
       1: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
       4: astore_1
       5: ldc           #87                 // int 2147483647
       7: istore_2
       8: iconst_m1
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_0
      14: getfield      #22                 // Field _collEnd:I
      17: istore        5
      19: iload         4
      21: iload         5
      23: if_icmpge     62
      26: aload_1
      27: iload         4
      29: aaload
      30: invokevirtual #68                 // Method org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket.length:()I
      33: istore        6
      35: iload         6
      37: iload_2
      38: if_icmpge     56
      41: iload         6
      43: iconst_1
      44: if_icmpne     50
      47: iload         4
      49: ireturn
      50: iload         6
      52: istore_2
      53: iload         4
      55: istore_3
      56: iinc          4, 1
      59: goto          19
      62: iload_3
      63: ireturn

  private void unshareMain();
    Code:
       0: aload_0
       1: getfield      #14                 // Field _mainHash:[I
       4: astore_1
       5: aload_0
       6: getfield      #14                 // Field _mainHash:[I
       9: arraylength
      10: istore_2
      11: aload_0
      12: iload_2
      13: newarray       int
      15: putfield      #14                 // Field _mainHash:[I
      18: aload_1
      19: iconst_0
      20: aload_0
      21: getfield      #14                 // Field _mainHash:[I
      24: iconst_0
      25: iload_2
      26: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_0
      30: iconst_0
      31: putfield      #26                 // Field _mainHashShared:Z
      34: return

  private void unshareCollision();
    Code:
       0: aload_0
       1: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: bipush        32
      12: anewarray     #66                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket
      15: putfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      18: goto          43
      21: aload_1
      22: arraylength
      23: istore_2
      24: aload_0
      25: iload_2
      26: anewarray     #66                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket
      29: putfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      32: aload_1
      33: iconst_0
      34: aload_0
      35: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      38: iconst_0
      39: iload_2
      40: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_0
      44: iconst_0
      45: putfield      #28                 // Field _collListShared:Z
      48: return

  private void unshareNames();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: aload_0
       9: iload_2
      10: anewarray     #30                 // class org/codehaus/jackson/sym/Name
      13: putfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      16: aload_1
      17: iconst_0
      18: aload_0
      19: getfield      #16                 // Field _mainNames:[Lorg/codehaus/jackson/sym/Name;
      22: iconst_0
      23: iload_2
      24: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_0
      28: iconst_0
      29: putfield      #27                 // Field _mainNamesShared:Z
      32: return

  private void expandCollision();
    Code:
       0: aload_0
       1: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: aload_0
       9: iload_2
      10: iload_2
      11: iadd
      12: anewarray     #66                 // class org/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket
      15: putfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      18: aload_1
      19: iconst_0
      20: aload_0
      21: getfield      #18                 // Field _collList:[Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer$Bucket;
      24: iconst_0
      25: iload_2
      26: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: return

  private static org.codehaus.jackson.sym.Name constructName(int, java.lang.String, int, int);
    Code:
       0: iload_3
       1: ifne          15
       4: new           #89                 // class org/codehaus/jackson/sym/Name1
       7: dup
       8: aload_1
       9: iload_0
      10: iload_2
      11: invokespecial #90                 // Method org/codehaus/jackson/sym/Name1."<init>":(Ljava/lang/String;II)V
      14: areturn
      15: new           #91                 // class org/codehaus/jackson/sym/Name2
      18: dup
      19: aload_1
      20: iload_0
      21: iload_2
      22: iload_3
      23: invokespecial #92                 // Method org/codehaus/jackson/sym/Name2."<init>":(Ljava/lang/String;III)V
      26: areturn

  private static org.codehaus.jackson.sym.Name constructName(int, java.lang.String, int[], int);
    Code:
       0: iload_3
       1: iconst_4
       2: if_icmpge     80
       5: iload_3
       6: tableswitch   { // 1 to 3
                     1: 32
                     2: 45
                     3: 61
               default: 80
          }
      32: new           #89                 // class org/codehaus/jackson/sym/Name1
      35: dup
      36: aload_1
      37: iload_0
      38: aload_2
      39: iconst_0
      40: iaload
      41: invokespecial #90                 // Method org/codehaus/jackson/sym/Name1."<init>":(Ljava/lang/String;II)V
      44: areturn
      45: new           #91                 // class org/codehaus/jackson/sym/Name2
      48: dup
      49: aload_1
      50: iload_0
      51: aload_2
      52: iconst_0
      53: iaload
      54: aload_2
      55: iconst_1
      56: iaload
      57: invokespecial #92                 // Method org/codehaus/jackson/sym/Name2."<init>":(Ljava/lang/String;III)V
      60: areturn
      61: new           #93                 // class org/codehaus/jackson/sym/Name3
      64: dup
      65: aload_1
      66: iload_0
      67: aload_2
      68: iconst_0
      69: iaload
      70: aload_2
      71: iconst_1
      72: iaload
      73: aload_2
      74: iconst_2
      75: iaload
      76: invokespecial #94                 // Method org/codehaus/jackson/sym/Name3."<init>":(Ljava/lang/String;IIII)V
      79: areturn
      80: iload_3
      81: newarray       int
      83: astore        4
      85: iconst_0
      86: istore        5
      88: iload         5
      90: iload_3
      91: if_icmpge     109
      94: aload         4
      96: iload         5
      98: aload_2
      99: iload         5
     101: iaload
     102: iastore
     103: iinc          5, 1
     106: goto          88
     109: new           #95                 // class org/codehaus/jackson/sym/NameN
     112: dup
     113: aload_1
     114: iload_0
     115: aload         4
     117: iload_3
     118: invokespecial #96                 // Method org/codehaus/jackson/sym/NameN."<init>":(Ljava/lang/String;I[II)V
     121: areturn

  protected void reportTooManyCollisions(int);
    Code:
       0: new           #97                 // class java/lang/IllegalStateException
       3: dup
       4: new           #77                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #98                 // String Longest collision chain in symbol table (of size
      13: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #10                 // Field _count:I
      20: invokevirtual #81                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: ldc           #99                 // String ) now exceeds maximum,
      25: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_1
      29: invokevirtual #81                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #100                // String  -- suspect a DoS attack based on hash collisions
      34: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #83                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow
}
