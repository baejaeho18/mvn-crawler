Compiled from "JsonParser.java"
public abstract class org.codehaus.jackson.JsonParser implements java.io.Closeable,org.codehaus.jackson.Versioned {
  private static final int MIN_BYTE_I;

  private static final int MAX_BYTE_I;

  private static final int MIN_SHORT_I;

  private static final int MAX_SHORT_I;

  protected int _features;

  protected org.codehaus.jackson.JsonToken _currToken;

  protected org.codehaus.jackson.JsonToken _lastClearedToken;

  protected org.codehaus.jackson.JsonParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.codehaus.jackson.JsonParser(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field _features:I
       9: return

  public abstract org.codehaus.jackson.ObjectCodec getCodec();

  public abstract void setCodec(org.codehaus.jackson.ObjectCodec);

  public void setSchema(org.codehaus.jackson.FormatSchema);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #4                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #6                  // String Parser of type
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #10                 // String  does not support schema of type \'
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokeinterface #11,  1           // InterfaceMethod org/codehaus/jackson/FormatSchema.getSchemaType:()Ljava/lang/String;
      37: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #12                 // String \'
      42: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      51: athrow

  public boolean canUseSchema(org.codehaus.jackson.FormatSchema);
    Code:
       0: iconst_0
       1: ireturn

  public org.codehaus.jackson.Version version();
    Code:
       0: invokestatic  #15                 // Method org/codehaus/jackson/Version.unknownVersion:()Lorg/codehaus/jackson/Version;
       3: areturn

  public java.lang.Object getInputSource();
    Code:
       0: aconst_null
       1: areturn

  public abstract void close() throws java.io.IOException;

  public int releaseBuffered(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: ireturn

  public int releaseBuffered(java.io.Writer) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: ireturn

  public org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field _features:I
       5: aload_1
       6: invokevirtual #16                 // Method org/codehaus/jackson/JsonParser$Feature.getMask:()I
       9: ior
      10: putfield      #2                  // Field _features:I
      13: aload_0
      14: areturn

  public org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field _features:I
       5: aload_1
       6: invokevirtual #16                 // Method org/codehaus/jackson/JsonParser$Feature.getMask:()I
       9: iconst_m1
      10: ixor
      11: iand
      12: putfield      #2                  // Field _features:I
      15: aload_0
      16: areturn

  public org.codehaus.jackson.JsonParser configure(org.codehaus.jackson.JsonParser$Feature, boolean);
    Code:
       0: iload_2
       1: ifeq          12
       4: aload_0
       5: aload_1
       6: invokevirtual #17                 // Method enableFeature:(Lorg/codehaus/jackson/JsonParser$Feature;)V
       9: goto          17
      12: aload_0
      13: aload_1
      14: invokevirtual #18                 // Method disableFeature:(Lorg/codehaus/jackson/JsonParser$Feature;)V
      17: aload_0
      18: areturn

  public boolean isEnabled(org.codehaus.jackson.JsonParser$Feature);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _features:I
       4: aload_1
       5: invokevirtual #16                 // Method org/codehaus/jackson/JsonParser$Feature.getMask:()I
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setFeature(org.codehaus.jackson.JsonParser$Feature, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #19                 // Method configure:(Lorg/codehaus/jackson/JsonParser$Feature;Z)Lorg/codehaus/jackson/JsonParser;
       6: pop
       7: return

  public void enableFeature(org.codehaus.jackson.JsonParser$Feature);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method enable:(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonParser;
       5: pop
       6: return

  public void disableFeature(org.codehaus.jackson.JsonParser$Feature);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method disable:(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonParser;
       5: pop
       6: return

  public final boolean isFeatureEnabled(org.codehaus.jackson.JsonParser$Feature);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method isEnabled:(Lorg/codehaus/jackson/JsonParser$Feature;)Z
       5: ireturn

  public abstract org.codehaus.jackson.JsonToken nextToken() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public org.codehaus.jackson.JsonToken nextValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #24                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
       9: if_acmpne     17
      12: aload_0
      13: invokevirtual #23                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
      16: astore_1
      17: aload_1
      18: areturn

  public boolean nextFieldName(org.codehaus.jackson.SerializableString) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #24                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     30
      10: aload_1
      11: invokeinterface #25,  1           // InterfaceMethod org/codehaus/jackson/SerializableString.getValue:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #26                 // Method getCurrentName:()Ljava/lang/String;
      20: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public java.lang.String nextTextValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #28                 // Field org/codehaus/jackson/JsonToken.VALUE_STRING:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #29                 // Method getText:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public int nextIntValue(int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #30                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #31                 // Method getIntValue:()I
      14: goto          18
      17: iload_1
      18: ireturn

  public long nextLongValue(long) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #30                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #32                 // Method getLongValue:()J
      14: goto          18
      17: lload_1
      18: lreturn

  public java.lang.Boolean nextBooleanValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: getstatic     #33                 // Field org/codehaus/jackson/JsonParser$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
       3: aload_0
       4: invokevirtual #23                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
       7: invokevirtual #34                 // Method org/codehaus/jackson/JsonToken.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 40
               default: 44
          }
      36: getstatic     #35                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      39: areturn
      40: getstatic     #36                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      43: areturn
      44: aconst_null
      45: areturn

  public abstract org.codehaus.jackson.JsonParser skipChildren() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract boolean isClosed();

  public org.codehaus.jackson.JsonToken getCurrentToken();
    Code:
       0: aload_0
       1: getfield      #37                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: areturn

  public boolean hasCurrentToken();
    Code:
       0: aload_0
       1: getfield      #37                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void clearCurrentToken();
    Code:
       0: aload_0
       1: getfield      #37                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        20
       7: aload_0
       8: aload_0
       9: getfield      #37                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      12: putfield      #38                 // Field _lastClearedToken:Lorg/codehaus/jackson/JsonToken;
      15: aload_0
      16: aconst_null
      17: putfield      #37                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      20: return

  public abstract java.lang.String getCurrentName() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract org.codehaus.jackson.JsonStreamContext getParsingContext();

  public abstract org.codehaus.jackson.JsonLocation getTokenLocation();

  public abstract org.codehaus.jackson.JsonLocation getCurrentLocation();

  public org.codehaus.jackson.JsonToken getLastClearedToken();
    Code:
       0: aload_0
       1: getfield      #38                 // Field _lastClearedToken:Lorg/codehaus/jackson/JsonToken;
       4: areturn

  public boolean isExpectedStartArrayToken();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #40                 // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public abstract java.lang.String getText() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract char[] getTextCharacters() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract int getTextLength() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract int getTextOffset() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public boolean hasTextCharacters();
    Code:
       0: iconst_0
       1: ireturn

  public abstract java.lang.Number getNumberValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract org.codehaus.jackson.JsonParser$NumberType getNumberType() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public byte getByteValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getIntValue:()I
       4: istore_1
       5: iload_1
       6: bipush        -128
       8: if_icmplt     18
      11: iload_1
      12: sipush        255
      15: if_icmple     50
      18: aload_0
      19: new           #4                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #41                 // String Numeric value (
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #29                 // Method getText:()Ljava/lang/String;
      35: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #42                 // String ) out of range of Java byte
      40: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokevirtual #43                 // Method _constructError:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParseException;
      49: athrow
      50: iload_1
      51: i2b
      52: ireturn

  public short getShortValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getIntValue:()I
       4: istore_1
       5: iload_1
       6: sipush        -32768
       9: if_icmplt     19
      12: iload_1
      13: sipush        32767
      16: if_icmple     51
      19: aload_0
      20: new           #4                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #41                 // String Numeric value (
      29: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #29                 // Method getText:()Ljava/lang/String;
      36: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #44                 // String ) out of range of Java short
      41: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokevirtual #43                 // Method _constructError:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParseException;
      50: athrow
      51: iload_1
      52: i2s
      53: ireturn

  public abstract int getIntValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract long getLongValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract java.math.BigInteger getBigIntegerValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract float getFloatValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract double getDoubleValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract java.math.BigDecimal getDecimalValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public boolean getBooleanValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #45                 // Field org/codehaus/jackson/JsonToken.VALUE_TRUE:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: invokevirtual #39                 // Method getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
      16: getstatic     #46                 // Field org/codehaus/jackson/JsonToken.VALUE_FALSE:Lorg/codehaus/jackson/JsonToken;
      19: if_acmpne     24
      22: iconst_0
      23: ireturn
      24: new           #47                 // class org/codehaus/jackson/JsonParseException
      27: dup
      28: new           #4                  // class java/lang/StringBuilder
      31: dup
      32: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #48                 // String Current token (
      37: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #37                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      44: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #50                 // String ) not of boolean type
      49: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: aload_0
      56: invokevirtual #51                 // Method getCurrentLocation:()Lorg/codehaus/jackson/JsonLocation;
      59: invokespecial #52                 // Method org/codehaus/jackson/JsonParseException."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/JsonLocation;)V
      62: athrow

  public java.lang.Object getEmbeddedObject() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aconst_null
       1: areturn

  public abstract byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public byte[] getBinaryValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method org/codehaus/jackson/Base64Variants.getDefaultVariant:()Lorg/codehaus/jackson/Base64Variant;
       4: invokevirtual #54                 // Method getBinaryValue:(Lorg/codehaus/jackson/Base64Variant;)[B
       7: areturn

  public int getValueAsInt() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #55                 // Method getValueAsInt:(I)I
       5: ireturn

  public int getValueAsInt(int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: iload_1
       1: ireturn

  public long getValueAsLong() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #56                 // Method getValueAsLong:(J)J
       5: lreturn

  public long getValueAsLong(long) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: lload_1
       1: lreturn

  public double getValueAsDouble() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: dconst_0
       2: invokevirtual #57                 // Method getValueAsDouble:(D)D
       5: dreturn

  public double getValueAsDouble(double) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: dload_1
       1: dreturn

  public boolean getValueAsBoolean() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #58                 // Method getValueAsBoolean:(Z)Z
       5: ireturn

  public boolean getValueAsBoolean(boolean) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: iload_1
       1: ireturn

  public <T> T readValueAs(java.lang.Class<T>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getCodec:()Lorg/codehaus/jackson/ObjectCodec;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #60                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #61                 // String No ObjectCodec defined for the parser, can not deserialize JSON into Java objects
      15: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: aload_0
      21: aload_1
      22: invokevirtual #63                 // Method org/codehaus/jackson/ObjectCodec.readValue:(Lorg/codehaus/jackson/JsonParser;Ljava/lang/Class;)Ljava/lang/Object;
      25: areturn

  public <T> T readValueAs(org.codehaus.jackson.type.TypeReference<?>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getCodec:()Lorg/codehaus/jackson/ObjectCodec;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #60                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #61                 // String No ObjectCodec defined for the parser, can not deserialize JSON into Java objects
      15: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: aload_0
      21: aload_1
      22: invokevirtual #64                 // Method org/codehaus/jackson/ObjectCodec.readValue:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/type/TypeReference;)Ljava/lang/Object;
      25: areturn

  public <T> java.util.Iterator<T> readValuesAs(java.lang.Class<T>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getCodec:()Lorg/codehaus/jackson/ObjectCodec;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #60                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #61                 // String No ObjectCodec defined for the parser, can not deserialize JSON into Java objects
      15: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: aload_0
      21: aload_1
      22: invokevirtual #65                 // Method org/codehaus/jackson/ObjectCodec.readValues:(Lorg/codehaus/jackson/JsonParser;Ljava/lang/Class;)Ljava/util/Iterator;
      25: areturn

  public <T> java.util.Iterator<T> readValuesAs(org.codehaus.jackson.type.TypeReference<?>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getCodec:()Lorg/codehaus/jackson/ObjectCodec;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #60                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #61                 // String No ObjectCodec defined for the parser, can not deserialize JSON into Java objects
      15: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: aload_0
      21: aload_1
      22: invokevirtual #66                 // Method org/codehaus/jackson/ObjectCodec.readValues:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/type/TypeReference;)Ljava/util/Iterator;
      25: areturn

  public org.codehaus.jackson.JsonNode readValueAsTree() throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getCodec:()Lorg/codehaus/jackson/ObjectCodec;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #60                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #67                 // String No ObjectCodec defined for the parser, can not deserialize JSON into JsonNode tree
      15: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: aload_0
      21: invokevirtual #68                 // Method org/codehaus/jackson/ObjectCodec.readTree:(Lorg/codehaus/jackson/JsonParser;)Lorg/codehaus/jackson/JsonNode;
      24: areturn

  protected org.codehaus.jackson.JsonParseException _constructError(java.lang.String);
    Code:
       0: new           #47                 // class org/codehaus/jackson/JsonParseException
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #51                 // Method getCurrentLocation:()Lorg/codehaus/jackson/JsonLocation;
       9: invokespecial #52                 // Method org/codehaus/jackson/JsonParseException."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/JsonLocation;)V
      12: areturn
}
