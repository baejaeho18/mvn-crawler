Compiled from "TokenBuffer.java"
public final class org.codehaus.jackson.util.TokenBuffer$Parser extends org.codehaus.jackson.impl.JsonParserMinimalBase {
  protected org.codehaus.jackson.ObjectCodec _codec;

  protected org.codehaus.jackson.util.TokenBuffer$Segment _segment;

  protected int _segmentPtr;

  protected org.codehaus.jackson.impl.JsonReadContext _parsingContext;

  protected boolean _closed;

  protected transient org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder;

  protected org.codehaus.jackson.JsonLocation _location;

  public org.codehaus.jackson.util.TokenBuffer$Parser(org.codehaus.jackson.util.TokenBuffer$Segment, org.codehaus.jackson.ObjectCodec);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method org/codehaus/jackson/impl/JsonParserMinimalBase."<init>":(I)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field _location:Lorg/codehaus/jackson/JsonLocation;
      10: aload_0
      11: aload_1
      12: putfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      15: aload_0
      16: iconst_m1
      17: putfield      #4                  // Field _segmentPtr:I
      20: aload_0
      21: aload_2
      22: putfield      #5                  // Field _codec:Lorg/codehaus/jackson/ObjectCodec;
      25: aload_0
      26: iconst_m1
      27: iconst_m1
      28: invokestatic  #6                  // Method org/codehaus/jackson/impl/JsonReadContext.createRootContext:(II)Lorg/codehaus/jackson/impl/JsonReadContext;
      31: putfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
      34: return

  public void setLocation(org.codehaus.jackson.JsonLocation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field _location:Lorg/codehaus/jackson/JsonLocation;
       5: return

  public org.codehaus.jackson.ObjectCodec getCodec();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _codec:Lorg/codehaus/jackson/ObjectCodec;
       4: areturn

  public void setCodec(org.codehaus.jackson.ObjectCodec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field _codec:Lorg/codehaus/jackson/ObjectCodec;
       5: return

  public org.codehaus.jackson.JsonToken peekNextToken() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field _closed:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      13: astore_1
      14: aload_0
      15: getfield      #4                  // Field _segmentPtr:I
      18: iconst_1
      19: iadd
      20: istore_2
      21: iload_2
      22: bipush        16
      24: if_icmplt     42
      27: iconst_0
      28: istore_2
      29: aload_1
      30: ifnonnull     37
      33: aconst_null
      34: goto          41
      37: aload_1
      38: invokevirtual #9                  // Method org/codehaus/jackson/util/TokenBuffer$Segment.next:()Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      41: astore_1
      42: aload_1
      43: ifnonnull     50
      46: aconst_null
      47: goto          55
      50: aload_1
      51: iload_2
      52: invokevirtual #10                 // Method org/codehaus/jackson/util/TokenBuffer$Segment.type:(I)Lorg/codehaus/jackson/JsonToken;
      55: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field _closed:Z
       4: ifne          12
       7: aload_0
       8: iconst_1
       9: putfield      #8                  // Field _closed:Z
      12: return

  public org.codehaus.jackson.JsonToken nextToken() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field _closed:Z
       4: ifne          14
       7: aload_0
       8: getfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: dup
      18: getfield      #4                  // Field _segmentPtr:I
      21: iconst_1
      22: iadd
      23: dup_x1
      24: putfield      #4                  // Field _segmentPtr:I
      27: bipush        16
      29: if_icmplt     57
      32: aload_0
      33: iconst_0
      34: putfield      #4                  // Field _segmentPtr:I
      37: aload_0
      38: aload_0
      39: getfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      42: invokevirtual #9                  // Method org/codehaus/jackson/util/TokenBuffer$Segment.next:()Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      45: putfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      48: aload_0
      49: getfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      52: ifnonnull     57
      55: aconst_null
      56: areturn
      57: aload_0
      58: aload_0
      59: getfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
      62: aload_0
      63: getfield      #4                  // Field _segmentPtr:I
      66: invokevirtual #10                 // Method org/codehaus/jackson/util/TokenBuffer$Segment.type:(I)Lorg/codehaus/jackson/JsonToken;
      69: putfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      72: aload_0
      73: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      76: getstatic     #12                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
      79: if_acmpne     117
      82: aload_0
      83: invokevirtual #13                 // Method _currentObject:()Ljava/lang/Object;
      86: astore_1
      87: aload_1
      88: instanceof    #14                 // class java/lang/String
      91: ifeq          101
      94: aload_1
      95: checkcast     #14                 // class java/lang/String
      98: goto          105
     101: aload_1
     102: invokevirtual #15                 // Method java/lang/Object.toString:()Ljava/lang/String;
     105: astore_2
     106: aload_0
     107: getfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     110: aload_2
     111: invokevirtual #16                 // Method org/codehaus/jackson/impl/JsonReadContext.setCurrentName:(Ljava/lang/String;)V
     114: goto          216
     117: aload_0
     118: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     121: getstatic     #17                 // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
     124: if_acmpne     143
     127: aload_0
     128: aload_0
     129: getfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     132: iconst_m1
     133: iconst_m1
     134: invokevirtual #18                 // Method org/codehaus/jackson/impl/JsonReadContext.createChildObjectContext:(II)Lorg/codehaus/jackson/impl/JsonReadContext;
     137: putfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     140: goto          216
     143: aload_0
     144: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     147: getstatic     #19                 // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
     150: if_acmpne     169
     153: aload_0
     154: aload_0
     155: getfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     158: iconst_m1
     159: iconst_m1
     160: invokevirtual #20                 // Method org/codehaus/jackson/impl/JsonReadContext.createChildArrayContext:(II)Lorg/codehaus/jackson/impl/JsonReadContext;
     163: putfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     166: goto          216
     169: aload_0
     170: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     173: getstatic     #21                 // Field org/codehaus/jackson/JsonToken.END_OBJECT:Lorg/codehaus/jackson/JsonToken;
     176: if_acmpeq     189
     179: aload_0
     180: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     183: getstatic     #22                 // Field org/codehaus/jackson/JsonToken.END_ARRAY:Lorg/codehaus/jackson/JsonToken;
     186: if_acmpne     216
     189: aload_0
     190: aload_0
     191: getfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     194: invokevirtual #23                 // Method org/codehaus/jackson/impl/JsonReadContext.getParent:()Lorg/codehaus/jackson/impl/JsonReadContext;
     197: putfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     200: aload_0
     201: getfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     204: ifnonnull     216
     207: aload_0
     208: iconst_m1
     209: iconst_m1
     210: invokestatic  #6                  // Method org/codehaus/jackson/impl/JsonReadContext.createRootContext:(II)Lorg/codehaus/jackson/impl/JsonReadContext;
     213: putfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
     216: aload_0
     217: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     220: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _closed:Z
       4: ireturn

  public org.codehaus.jackson.JsonStreamContext getParsingContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
       4: areturn

  public org.codehaus.jackson.JsonLocation getTokenLocation();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getCurrentLocation:()Lorg/codehaus/jackson/JsonLocation;
       4: areturn

  public org.codehaus.jackson.JsonLocation getCurrentLocation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _location:Lorg/codehaus/jackson/JsonLocation;
       4: ifnonnull     13
       7: getstatic     #25                 // Field org/codehaus/jackson/JsonLocation.NA:Lorg/codehaus/jackson/JsonLocation;
      10: goto          17
      13: aload_0
      14: getfield      #2                  // Field _location:Lorg/codehaus/jackson/JsonLocation;
      17: areturn

  public java.lang.String getCurrentName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _parsingContext:Lorg/codehaus/jackson/impl/JsonReadContext;
       4: invokevirtual #26                 // Method org/codehaus/jackson/impl/JsonReadContext.getCurrentName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getText();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #27                 // Field org/codehaus/jackson/JsonToken.VALUE_STRING:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      14: getstatic     #12                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
      17: if_acmpne     50
      20: aload_0
      21: invokevirtual #13                 // Method _currentObject:()Ljava/lang/Object;
      24: astore_1
      25: aload_1
      26: instanceof    #14                 // class java/lang/String
      29: ifeq          37
      32: aload_1
      33: checkcast     #14                 // class java/lang/String
      36: areturn
      37: aload_1
      38: ifnonnull     45
      41: aconst_null
      42: goto          49
      45: aload_1
      46: invokevirtual #15                 // Method java/lang/Object.toString:()Ljava/lang/String;
      49: areturn
      50: aload_0
      51: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      54: ifnonnull     59
      57: aconst_null
      58: areturn
      59: getstatic     #28                 // Field org/codehaus/jackson/util/TokenBuffer$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      62: aload_0
      63: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      66: invokevirtual #29                 // Method org/codehaus/jackson/JsonToken.ordinal:()I
      69: iaload
      70: lookupswitch  { // 2
                     7: 96
                     8: 96
               default: 114
          }
      96: aload_0
      97: invokevirtual #13                 // Method _currentObject:()Ljava/lang/Object;
     100: astore_1
     101: aload_1
     102: ifnonnull     109
     105: aconst_null
     106: goto          113
     109: aload_1
     110: invokevirtual #15                 // Method java/lang/Object.toString:()Ljava/lang/String;
     113: areturn
     114: aload_0
     115: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
     118: invokevirtual #30                 // Method org/codehaus/jackson/JsonToken.asString:()Ljava/lang/String;
     121: areturn

  public char[] getTextCharacters();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getText:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #32                 // Method java/lang/String.toCharArray:()[C
      17: areturn

  public int getTextLength();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getText:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          17
      13: aload_1
      14: invokevirtual #33                 // Method java/lang/String.length:()I
      17: ireturn

  public int getTextOffset();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasTextCharacters();
    Code:
       0: iconst_0
       1: ireturn

  public java.math.BigInteger getBigIntegerValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getNumberValue:()Ljava/lang/Number;
       4: astore_1
       5: aload_1
       6: instanceof    #35                 // class java/math/BigInteger
       9: ifeq          17
      12: aload_1
      13: checkcast     #35                 // class java/math/BigInteger
      16: areturn
      17: getstatic     #36                 // Field org/codehaus/jackson/util/TokenBuffer$1.$SwitchMap$org$codehaus$jackson$JsonParser$NumberType:[I
      20: aload_0
      21: invokevirtual #37                 // Method getNumberType:()Lorg/codehaus/jackson/JsonParser$NumberType;
      24: invokevirtual #38                 // Method org/codehaus/jackson/JsonParser$NumberType.ordinal:()I
      27: iaload
      28: lookupswitch  { // 1
                     3: 48
               default: 56
          }
      48: aload_1
      49: checkcast     #39                 // class java/math/BigDecimal
      52: invokevirtual #40                 // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      55: areturn
      56: aload_1
      57: invokevirtual #41                 // Method java/lang/Number.longValue:()J
      60: invokestatic  #42                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      63: areturn

  public java.math.BigDecimal getDecimalValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getNumberValue:()Ljava/lang/Number;
       4: astore_1
       5: aload_1
       6: instanceof    #39                 // class java/math/BigDecimal
       9: ifeq          17
      12: aload_1
      13: checkcast     #39                 // class java/math/BigDecimal
      16: areturn
      17: getstatic     #36                 // Field org/codehaus/jackson/util/TokenBuffer$1.$SwitchMap$org$codehaus$jackson$JsonParser$NumberType:[I
      20: aload_0
      21: invokevirtual #37                 // Method getNumberType:()Lorg/codehaus/jackson/JsonParser$NumberType;
      24: invokevirtual #38                 // Method org/codehaus/jackson/JsonParser$NumberType.ordinal:()I
      27: iaload
      28: tableswitch   { // 1 to 5
                     1: 64
                     2: 72
                     3: 84
                     4: 84
                     5: 64
               default: 84
          }
      64: aload_1
      65: invokevirtual #41                 // Method java/lang/Number.longValue:()J
      68: invokestatic  #43                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      71: areturn
      72: new           #39                 // class java/math/BigDecimal
      75: dup
      76: aload_1
      77: checkcast     #35                 // class java/math/BigInteger
      80: invokespecial #44                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      83: areturn
      84: aload_1
      85: invokevirtual #45                 // Method java/lang/Number.doubleValue:()D
      88: invokestatic  #46                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      91: areturn

  public double getDoubleValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getNumberValue:()Ljava/lang/Number;
       4: invokevirtual #45                 // Method java/lang/Number.doubleValue:()D
       7: dreturn

  public float getFloatValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getNumberValue:()Ljava/lang/Number;
       4: invokevirtual #47                 // Method java/lang/Number.floatValue:()F
       7: freturn

  public int getIntValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #48                 // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     21
      10: aload_0
      11: invokevirtual #13                 // Method _currentObject:()Ljava/lang/Object;
      14: checkcast     #49                 // class java/lang/Number
      17: invokevirtual #50                 // Method java/lang/Number.intValue:()I
      20: ireturn
      21: aload_0
      22: invokevirtual #34                 // Method getNumberValue:()Ljava/lang/Number;
      25: invokevirtual #50                 // Method java/lang/Number.intValue:()I
      28: ireturn

  public long getLongValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getNumberValue:()Ljava/lang/Number;
       4: invokevirtual #41                 // Method java/lang/Number.longValue:()J
       7: lreturn

  public org.codehaus.jackson.JsonParser$NumberType getNumberType() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getNumberValue:()Ljava/lang/Number;
       4: astore_1
       5: aload_1
       6: instanceof    #51                 // class java/lang/Integer
       9: ifeq          16
      12: getstatic     #52                 // Field org/codehaus/jackson/JsonParser$NumberType.INT:Lorg/codehaus/jackson/JsonParser$NumberType;
      15: areturn
      16: aload_1
      17: instanceof    #53                 // class java/lang/Long
      20: ifeq          27
      23: getstatic     #54                 // Field org/codehaus/jackson/JsonParser$NumberType.LONG:Lorg/codehaus/jackson/JsonParser$NumberType;
      26: areturn
      27: aload_1
      28: instanceof    #55                 // class java/lang/Double
      31: ifeq          38
      34: getstatic     #56                 // Field org/codehaus/jackson/JsonParser$NumberType.DOUBLE:Lorg/codehaus/jackson/JsonParser$NumberType;
      37: areturn
      38: aload_1
      39: instanceof    #39                 // class java/math/BigDecimal
      42: ifeq          49
      45: getstatic     #57                 // Field org/codehaus/jackson/JsonParser$NumberType.BIG_DECIMAL:Lorg/codehaus/jackson/JsonParser$NumberType;
      48: areturn
      49: aload_1
      50: instanceof    #58                 // class java/lang/Float
      53: ifeq          60
      56: getstatic     #59                 // Field org/codehaus/jackson/JsonParser$NumberType.FLOAT:Lorg/codehaus/jackson/JsonParser$NumberType;
      59: areturn
      60: aload_1
      61: instanceof    #35                 // class java/math/BigInteger
      64: ifeq          71
      67: getstatic     #60                 // Field org/codehaus/jackson/JsonParser$NumberType.BIG_INTEGER:Lorg/codehaus/jackson/JsonParser$NumberType;
      70: areturn
      71: aconst_null
      72: areturn

  public final java.lang.Number getNumberValue() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method _checkIsNumber:()V
       4: aload_0
       5: invokevirtual #13                 // Method _currentObject:()Ljava/lang/Object;
       8: checkcast     #49                 // class java/lang/Number
      11: areturn

  public java.lang.Object getEmbeddedObject();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #62                 // Field org/codehaus/jackson/JsonToken.VALUE_EMBEDDED_OBJECT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     15
      10: aload_0
      11: invokevirtual #13                 // Method _currentObject:()Ljava/lang/Object;
      14: areturn
      15: aconst_null
      16: areturn

  public byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #62                 // Field org/codehaus/jackson/JsonToken.VALUE_EMBEDDED_OBJECT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     30
      10: aload_0
      11: invokevirtual #13                 // Method _currentObject:()Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: instanceof    #63                 // class "[B"
      19: ifeq          30
      22: aload_2
      23: checkcast     #63                 // class "[B"
      26: checkcast     #63                 // class "[B"
      29: areturn
      30: aload_0
      31: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      34: getstatic     #27                 // Field org/codehaus/jackson/JsonToken.VALUE_STRING:Lorg/codehaus/jackson/JsonToken;
      37: if_acmpeq     72
      40: aload_0
      41: new           #64                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #66                 // String Current token (
      50: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      57: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #69                 // String ) not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary
      62: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokevirtual #71                 // Method _constructError:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParseException;
      71: athrow
      72: aload_0
      73: invokevirtual #31                 // Method getText:()Ljava/lang/String;
      76: astore_2
      77: aload_2
      78: ifnonnull     83
      81: aconst_null
      82: areturn
      83: aload_0
      84: getfield      #72                 // Field _byteBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
      87: astore_3
      88: aload_3
      89: ifnonnull     110
      92: aload_0
      93: new           #73                 // class org/codehaus/jackson/util/ByteArrayBuilder
      96: dup
      97: bipush        100
      99: invokespecial #74                 // Method org/codehaus/jackson/util/ByteArrayBuilder."<init>":(I)V
     102: dup
     103: astore_3
     104: putfield      #72                 // Field _byteBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
     107: goto          117
     110: aload_0
     111: getfield      #72                 // Field _byteBuilder:Lorg/codehaus/jackson/util/ByteArrayBuilder;
     114: invokevirtual #75                 // Method org/codehaus/jackson/util/ByteArrayBuilder.reset:()V
     117: aload_0
     118: aload_2
     119: aload_3
     120: aload_1
     121: invokevirtual #76                 // Method _decodeBase64:(Ljava/lang/String;Lorg/codehaus/jackson/util/ByteArrayBuilder;Lorg/codehaus/jackson/Base64Variant;)V
     124: aload_3
     125: invokevirtual #77                 // Method org/codehaus/jackson/util/ByteArrayBuilder.toByteArray:()[B
     128: areturn

  protected final java.lang.Object _currentObject();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _segment:Lorg/codehaus/jackson/util/TokenBuffer$Segment;
       4: aload_0
       5: getfield      #4                  // Field _segmentPtr:I
       8: invokevirtual #78                 // Method org/codehaus/jackson/util/TokenBuffer$Segment.get:(I)Ljava/lang/Object;
      11: areturn

  protected final void _checkIsNumber() throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      11: invokevirtual #79                 // Method org/codehaus/jackson/JsonToken.isNumeric:()Z
      14: ifne          49
      17: aload_0
      18: new           #64                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #66                 // String Current token (
      27: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #11                 // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      34: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #80                 // String ) not numeric, can not use numeric value accessors
      39: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #71                 // Method _constructError:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParseException;
      48: athrow
      49: return

  protected void _handleEOF() throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method _throwInternal:()V
       4: return
}
