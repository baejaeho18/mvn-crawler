Compiled from "Version.java"
public class org.codehaus.jackson.Version implements java.lang.Comparable<org.codehaus.jackson.Version> {
  private static final org.codehaus.jackson.Version UNKNOWN_VERSION;

  protected final int _majorVersion;

  protected final int _minorVersion;

  protected final int _patchLevel;

  protected final java.lang.String _snapshotInfo;

  public org.codehaus.jackson.Version(int, int, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field _majorVersion:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field _minorVersion:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field _patchLevel:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field _snapshotInfo:Ljava/lang/String;
      25: return

  public static org.codehaus.jackson.Version unknownVersion();
    Code:
       0: getstatic     #6                  // Field UNKNOWN_VERSION:Lorg/codehaus/jackson/Version;
       3: areturn

  public boolean isUknownVersion();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field UNKNOWN_VERSION:Lorg/codehaus/jackson/Version;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isSnapshot();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _snapshotInfo:Ljava/lang/String;
       4: ifnull        21
       7: aload_0
       8: getfield      #5                  // Field _snapshotInfo:Ljava/lang/String;
      11: invokevirtual #7                  // Method java/lang/String.length:()I
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public int getMajorVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _majorVersion:I
       4: ireturn

  public int getMinorVersion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _minorVersion:I
       4: ireturn

  public int getPatchLevel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _patchLevel:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field _majorVersion:I
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: bipush        46
      18: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #3                  // Field _minorVersion:I
      27: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: bipush        46
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: aload_0
      38: getfield      #4                  // Field _patchLevel:I
      41: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: pop
      45: aload_0
      46: invokevirtual #12                 // Method isSnapshot:()Z
      49: ifeq          66
      52: aload_1
      53: bipush        45
      55: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #5                  // Field _snapshotInfo:Ljava/lang/String;
      62: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _majorVersion:I
       4: aload_0
       5: getfield      #3                  // Field _minorVersion:I
       8: iadd
       9: aload_0
      10: getfield      #4                  // Field _patchLevel:I
      13: iadd
      14: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_0
      18: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #16                 // class org/codehaus/jackson/Version
      30: astore_2
      31: aload_2
      32: getfield      #2                  // Field _majorVersion:I
      35: aload_0
      36: getfield      #2                  // Field _majorVersion:I
      39: if_icmpne     68
      42: aload_2
      43: getfield      #3                  // Field _minorVersion:I
      46: aload_0
      47: getfield      #3                  // Field _minorVersion:I
      50: if_icmpne     68
      53: aload_2
      54: getfield      #4                  // Field _patchLevel:I
      57: aload_0
      58: getfield      #4                  // Field _patchLevel:I
      61: if_icmpne     68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public int compareTo(org.codehaus.jackson.Version);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _majorVersion:I
       4: aload_1
       5: getfield      #2                  // Field _majorVersion:I
       8: isub
       9: istore_2
      10: iload_2
      11: ifne          38
      14: aload_0
      15: getfield      #3                  // Field _minorVersion:I
      18: aload_1
      19: getfield      #3                  // Field _minorVersion:I
      22: isub
      23: istore_2
      24: iload_2
      25: ifne          38
      28: aload_0
      29: getfield      #4                  // Field _patchLevel:I
      32: aload_1
      33: getfield      #4                  // Field _patchLevel:I
      36: isub
      37: istore_2
      38: iload_2
      39: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class org/codehaus/jackson/Version
       5: invokevirtual #17                 // Method compareTo:(Lorg/codehaus/jackson/Version;)I
       8: ireturn

  static {};
    Code:
       0: new           #16                 // class org/codehaus/jackson/Version
       3: dup
       4: iconst_0
       5: iconst_0
       6: iconst_0
       7: aconst_null
       8: invokespecial #18                 // Method "<init>":(IIILjava/lang/String;)V
      11: putstatic     #6                  // Field UNKNOWN_VERSION:Lorg/codehaus/jackson/Version;
      14: return
}
