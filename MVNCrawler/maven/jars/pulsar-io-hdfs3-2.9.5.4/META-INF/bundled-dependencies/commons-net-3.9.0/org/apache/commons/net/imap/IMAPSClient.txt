Compiled from "IMAPSClient.java"
public class org.apache.commons.net.imap.IMAPSClient extends org.apache.commons.net.imap.IMAPClient {
  public static final int DEFAULT_IMAPS_PORT;

  public static final java.lang.String DEFAULT_PROTOCOL;

  private final boolean isImplicit;

  private final java.lang.String protocol;

  private javax.net.ssl.SSLContext context;

  private java.lang.String[] suites;

  private java.lang.String[] protocols;

  private javax.net.ssl.TrustManager trustManager;

  private javax.net.ssl.KeyManager keyManager;

  private javax.net.ssl.HostnameVerifier hostnameVerifier;

  private boolean tlsEndpointChecking;

  public org.apache.commons.net.imap.IMAPSClient();
    Code:
       0: aload_0
       1: ldc           #2                  // String TLS
       3: iconst_0
       4: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Z)V
       7: return

  public org.apache.commons.net.imap.IMAPSClient(boolean);
    Code:
       0: aload_0
       1: ldc           #2                  // String TLS
       3: iload_1
       4: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Z)V
       7: return

  public org.apache.commons.net.imap.IMAPSClient(boolean, javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: ldc           #2                  // String TLS
       3: iload_1
       4: aload_2
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;ZLjavax/net/ssl/SSLContext;)V
       8: return

  public org.apache.commons.net.imap.IMAPSClient(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokespecial #5                  // Method "<init>":(ZLjavax/net/ssl/SSLContext;)V
       6: return

  public org.apache.commons.net.imap.IMAPSClient(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public org.apache.commons.net.imap.IMAPSClient(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #4                  // Method "<init>":(Ljava/lang/String;ZLjavax/net/ssl/SSLContext;)V
       7: return

  public org.apache.commons.net.imap.IMAPSClient(java.lang.String, boolean, javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/net/imap/IMAPClient."<init>":()V
       4: aload_0
       5: sipush        993
       8: invokevirtual #7                  // Method setDefaultPort:(I)V
      11: aload_0
      12: aload_1
      13: putfield      #8                  // Field protocol:Ljava/lang/String;
      16: aload_0
      17: iload_2
      18: putfield      #9                  // Field isImplicit:Z
      21: aload_0
      22: aload_3
      23: putfield      #10                 // Field context:Ljavax/net/ssl/SSLContext;
      26: return

  protected void _connectAction_() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field isImplicit:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #11                 // Method performSSLNegotiation:()V
      11: aload_0
      12: invokespecial #12                 // Method org/apache/commons/net/imap/IMAPClient._connectAction_:()V
      15: return

  public boolean execTLS() throws javax.net.ssl.SSLException, java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #13                 // Field org/apache/commons/net/imap/IMAPCommand.STARTTLS:Lorg/apache/commons/net/imap/IMAPCommand;
       4: invokestatic  #14                 // Method org/apache/commons/net/imap/IMAPCommand.getCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)Ljava/lang/String;
       7: invokevirtual #15                 // Method sendCommand:(Ljava/lang/String;)I
      10: ifeq          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: invokespecial #11                 // Method performSSLNegotiation:()V
      19: iconst_1
      20: ireturn

  public java.lang.String[] getEnabledCipherSuites();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _socket_:Ljava/net/Socket;
       4: instanceof    #17                 // class javax/net/ssl/SSLSocket
       7: ifeq          21
      10: aload_0
      11: getfield      #16                 // Field _socket_:Ljava/net/Socket;
      14: checkcast     #17                 // class javax/net/ssl/SSLSocket
      17: invokevirtual #18                 // Method javax/net/ssl/SSLSocket.getEnabledCipherSuites:()[Ljava/lang/String;
      20: areturn
      21: aconst_null
      22: areturn

  public java.lang.String[] getEnabledProtocols();
    Code:
       0: aload_0
       1: getfield      #16                 // Field _socket_:Ljava/net/Socket;
       4: instanceof    #17                 // class javax/net/ssl/SSLSocket
       7: ifeq          21
      10: aload_0
      11: getfield      #16                 // Field _socket_:Ljava/net/Socket;
      14: checkcast     #17                 // class javax/net/ssl/SSLSocket
      17: invokevirtual #19                 // Method javax/net/ssl/SSLSocket.getEnabledProtocols:()[Ljava/lang/String;
      20: areturn
      21: aconst_null
      22: areturn

  public javax.net.ssl.HostnameVerifier getHostnameVerifier();
    Code:
       0: aload_0
       1: getfield      #20                 // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
       4: areturn

  private javax.net.ssl.KeyManager getKeyManager();
    Code:
       0: aload_0
       1: getfield      #21                 // Field keyManager:Ljavax/net/ssl/KeyManager;
       4: areturn

  public javax.net.ssl.TrustManager getTrustManager();
    Code:
       0: aload_0
       1: getfield      #22                 // Field trustManager:Ljavax/net/ssl/TrustManager;
       4: areturn

  private void initSSLContext() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field context:Ljavax/net/ssl/SSLContext;
       4: ifnonnull     26
       7: aload_0
       8: aload_0
       9: getfield      #8                  // Field protocol:Ljava/lang/String;
      12: aload_0
      13: invokespecial #23                 // Method getKeyManager:()Ljavax/net/ssl/KeyManager;
      16: aload_0
      17: invokevirtual #24                 // Method getTrustManager:()Ljavax/net/ssl/TrustManager;
      20: invokestatic  #25                 // Method org/apache/commons/net/util/SSLContextUtils.createSSLContext:(Ljava/lang/String;Ljavax/net/ssl/KeyManager;Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLContext;
      23: putfield      #10                 // Field context:Ljavax/net/ssl/SSLContext;
      26: return

  public boolean isEndpointCheckingEnabled();
    Code:
       0: aload_0
       1: getfield      #26                 // Field tlsEndpointChecking:Z
       4: ireturn

  private void performSSLNegotiation() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #27                 // Method initSSLContext:()V
       4: aload_0
       5: getfield      #10                 // Field context:Ljavax/net/ssl/SSLContext;
       8: invokevirtual #28                 // Method javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      11: astore_1
      12: aload_0
      13: getfield      #29                 // Field _hostname_:Ljava/lang/String;
      16: ifnull        26
      19: aload_0
      20: getfield      #29                 // Field _hostname_:Ljava/lang/String;
      23: goto          33
      26: aload_0
      27: invokevirtual #30                 // Method getRemoteAddress:()Ljava/net/InetAddress;
      30: invokevirtual #31                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      33: astore_2
      34: aload_0
      35: invokevirtual #32                 // Method getRemotePort:()I
      38: istore_3
      39: aload_1
      40: aload_0
      41: getfield      #16                 // Field _socket_:Ljava/net/Socket;
      44: aload_2
      45: iload_3
      46: iconst_1
      47: invokevirtual #33                 // Method javax/net/ssl/SSLSocketFactory.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;
      50: checkcast     #17                 // class javax/net/ssl/SSLSocket
      53: astore        4
      55: aload         4
      57: iconst_1
      58: invokevirtual #34                 // Method javax/net/ssl/SSLSocket.setEnableSessionCreation:(Z)V
      61: aload         4
      63: iconst_1
      64: invokevirtual #35                 // Method javax/net/ssl/SSLSocket.setUseClientMode:(Z)V
      67: aload_0
      68: getfield      #26                 // Field tlsEndpointChecking:Z
      71: ifeq          80
      74: aload         4
      76: invokestatic  #36                 // Method org/apache/commons/net/util/SSLSocketUtils.enableEndpointNameVerification:(Ljavax/net/ssl/SSLSocket;)Z
      79: pop
      80: aload_0
      81: getfield      #37                 // Field protocols:[Ljava/lang/String;
      84: ifnull        96
      87: aload         4
      89: aload_0
      90: getfield      #37                 // Field protocols:[Ljava/lang/String;
      93: invokevirtual #38                 // Method javax/net/ssl/SSLSocket.setEnabledProtocols:([Ljava/lang/String;)V
      96: aload_0
      97: getfield      #39                 // Field suites:[Ljava/lang/String;
     100: ifnull        112
     103: aload         4
     105: aload_0
     106: getfield      #39                 // Field suites:[Ljava/lang/String;
     109: invokevirtual #40                 // Method javax/net/ssl/SSLSocket.setEnabledCipherSuites:([Ljava/lang/String;)V
     112: aload         4
     114: invokevirtual #41                 // Method javax/net/ssl/SSLSocket.startHandshake:()V
     117: aload_0
     118: aload         4
     120: putfield      #16                 // Field _socket_:Ljava/net/Socket;
     123: aload_0
     124: aload         4
     126: invokevirtual #42                 // Method javax/net/ssl/SSLSocket.getInputStream:()Ljava/io/InputStream;
     129: putfield      #43                 // Field _input_:Ljava/io/InputStream;
     132: aload_0
     133: aload         4
     135: invokevirtual #44                 // Method javax/net/ssl/SSLSocket.getOutputStream:()Ljava/io/OutputStream;
     138: putfield      #45                 // Field _output_:Ljava/io/OutputStream;
     141: aload_0
     142: new           #46                 // class org/apache/commons/net/io/CRLFLineReader
     145: dup
     146: new           #47                 // class java/io/InputStreamReader
     149: dup
     150: aload_0
     151: getfield      #43                 // Field _input_:Ljava/io/InputStream;
     154: ldc           #49                 // String ISO-8859-1
     156: invokespecial #50                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
     159: invokespecial #51                 // Method org/apache/commons/net/io/CRLFLineReader."<init>":(Ljava/io/Reader;)V
     162: putfield      #52                 // Field _reader:Ljava/io/BufferedReader;
     165: aload_0
     166: new           #53                 // class java/io/BufferedWriter
     169: dup
     170: new           #54                 // class java/io/OutputStreamWriter
     173: dup
     174: aload_0
     175: getfield      #45                 // Field _output_:Ljava/io/OutputStream;
     178: ldc           #49                 // String ISO-8859-1
     180: invokespecial #55                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
     183: invokespecial #56                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
     186: putfield      #57                 // Field __writer:Ljava/io/BufferedWriter;
     189: aload_0
     190: getfield      #20                 // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
     193: ifnull        224
     196: aload_0
     197: getfield      #20                 // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
     200: aload_2
     201: aload         4
     203: invokevirtual #58                 // Method javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;
     206: invokeinterface #59,  3           // InterfaceMethod javax/net/ssl/HostnameVerifier.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
     211: ifne          224
     214: new           #60                 // class javax/net/ssl/SSLHandshakeException
     217: dup
     218: ldc           #61                 // String Hostname doesn\'t match certificate
     220: invokespecial #62                 // Method javax/net/ssl/SSLHandshakeException."<init>":(Ljava/lang/String;)V
     223: athrow
     224: return

  public void setEnabledCipherSuites(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
       5: checkcast     #64                 // class "[Ljava/lang/String;"
       8: putfield      #39                 // Field suites:[Ljava/lang/String;
      11: return

  public void setEnabledProtocols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #65                 // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
       5: checkcast     #64                 // class "[Ljava/lang/String;"
       8: putfield      #37                 // Field protocols:[Ljava/lang/String;
      11: return

  public void setEndpointCheckingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field tlsEndpointChecking:Z
       5: return

  public void setHostnameVerifier(javax.net.ssl.HostnameVerifier);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
       5: return

  public void setKeyManager(javax.net.ssl.KeyManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field keyManager:Ljavax/net/ssl/KeyManager;
       5: return

  public void setTrustManager(javax.net.ssl.TrustManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field trustManager:Ljavax/net/ssl/TrustManager;
       5: return
}
