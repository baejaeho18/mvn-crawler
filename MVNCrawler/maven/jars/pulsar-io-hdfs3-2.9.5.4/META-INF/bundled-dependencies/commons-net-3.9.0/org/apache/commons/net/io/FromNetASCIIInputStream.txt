Compiled from "FromNetASCIIInputStream.java"
public final class org.apache.commons.net.io.FromNetASCIIInputStream extends java.io.PushbackInputStream {
  static final boolean _noConversionRequired;

  static final java.lang.String _lineSeparator;

  static final byte[] _lineSeparatorBytes;

  private int length;

  public static boolean isConversionRequired();
    Code:
       0: getstatic     #1                  // Field _noConversionRequired:Z
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public org.apache.commons.net.io.FromNetASCIIInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field _lineSeparatorBytes:[B
       5: arraylength
       6: iconst_1
       7: iadd
       8: invokespecial #3                  // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;I)V
      11: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: ifnonnull     17
       7: new           #5                  // class java/io/IOException
      10: dup
      11: ldc           #6                  // String Stream closed
      13: invokespecial #7                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field buf:[B
      21: arraylength
      22: aload_0
      23: getfield      #9                  // Field pos:I
      26: isub
      27: aload_0
      28: getfield      #4                  // Field in:Ljava/io/InputStream;
      31: invokevirtual #10                 // Method java/io/InputStream.available:()I
      34: iadd
      35: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field _noConversionRequired:Z
       3: ifeq          11
       6: aload_0
       7: invokespecial #11                 // Method java/io/PushbackInputStream.read:()I
      10: ireturn
      11: aload_0
      12: invokespecial #12                 // Method readInt:()I
      15: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #13                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field _noConversionRequired:Z
       3: ifeq          14
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokespecial #14                 // Method java/io/PushbackInputStream.read:([BII)I
      13: ireturn
      14: iload_3
      15: iconst_1
      16: if_icmpge     21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #15                 // Method available:()I
      25: istore        4
      27: aload_0
      28: iload_3
      29: iload         4
      31: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      34: putfield      #17                 // Field length:I
      37: aload_0
      38: getfield      #17                 // Field length:I
      41: iconst_1
      42: if_icmpge     50
      45: aload_0
      46: iconst_1
      47: putfield      #17                 // Field length:I
      50: aload_0
      51: invokespecial #12                 // Method readInt:()I
      54: dup
      55: istore        4
      57: iconst_m1
      58: if_icmpne     63
      61: iconst_m1
      62: ireturn
      63: iload_2
      64: istore        5
      66: aload_1
      67: iload_2
      68: iinc          2, 1
      71: iload         4
      73: i2b
      74: bastore
      75: aload_0
      76: dup
      77: getfield      #17                 // Field length:I
      80: iconst_1
      81: isub
      82: dup_x1
      83: putfield      #17                 // Field length:I
      86: ifle          100
      89: aload_0
      90: invokespecial #12                 // Method readInt:()I
      93: dup
      94: istore        4
      96: iconst_m1
      97: if_icmpne     66
     100: iload_2
     101: iload         5
     103: isub
     104: ireturn

  private int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/io/PushbackInputStream.read:()I
       4: istore_1
       5: iload_1
       6: bipush        13
       8: if_icmpne     57
      11: aload_0
      12: invokespecial #11                 // Method java/io/PushbackInputStream.read:()I
      15: istore_1
      16: iload_1
      17: bipush        10
      19: if_icmpeq     35
      22: iload_1
      23: iconst_m1
      24: if_icmpeq     32
      27: aload_0
      28: iload_1
      29: invokevirtual #19                 // Method unread:(I)V
      32: bipush        13
      34: ireturn
      35: aload_0
      36: getstatic     #2                  // Field _lineSeparatorBytes:[B
      39: invokevirtual #20                 // Method unread:([B)V
      42: aload_0
      43: invokespecial #11                 // Method java/io/PushbackInputStream.read:()I
      46: istore_1
      47: aload_0
      48: dup
      49: getfield      #17                 // Field length:I
      52: iconst_1
      53: isub
      54: putfield      #17                 // Field length:I
      57: iload_1
      58: ireturn

  static {};
    Code:
       0: invokestatic  #21                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       3: putstatic     #22                 // Field _lineSeparator:Ljava/lang/String;
       6: getstatic     #22                 // Field _lineSeparator:Ljava/lang/String;
       9: ldc           #23                 // String \r\n
      11: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: putstatic     #1                  // Field _noConversionRequired:Z
      17: getstatic     #22                 // Field _lineSeparator:Ljava/lang/String;
      20: getstatic     #25                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      23: invokevirtual #26                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      26: putstatic     #2                  // Field _lineSeparatorBytes:[B
      29: return
}
