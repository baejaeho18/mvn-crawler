Compiled from "FTPClient.java"
public class org.apache.commons.net.ftp.FTPClient extends org.apache.commons.net.ftp.FTP implements org.apache.commons.net.ftp.Configurable {
  public static final java.lang.String FTP_SYSTEM_TYPE;

  public static final java.lang.String FTP_SYSTEM_TYPE_DEFAULT;

  public static final java.lang.String FTP_IP_ADDRESS_FROM_PASV_RESPONSE;

  public static final java.lang.String SYSTEM_TYPE_PROPERTIES;

  public static final int ACTIVE_LOCAL_DATA_CONNECTION_MODE;

  public static final int ACTIVE_REMOTE_DATA_CONNECTION_MODE;

  public static final int PASSIVE_LOCAL_DATA_CONNECTION_MODE;

  public static final int PASSIVE_REMOTE_DATA_CONNECTION_MODE;

  private static final java.util.regex.Pattern PARMS_PAT;

  private int dataConnectionMode;

  private java.time.Duration dataTimeout;

  private int passivePort;

  private java.lang.String passiveHost;

  private final java.util.Random random;

  private int activeMinPort;

  private int activeMaxPort;

  private java.net.InetAddress activeExternalHost;

  private java.net.InetAddress reportActiveExternalHost;

  private java.net.InetAddress passiveLocalHost;

  private int fileType;

  private int fileFormat;

  private int fileStructure;

  private int fileTransferMode;

  private boolean remoteVerificationEnabled;

  private long restartOffset;

  private org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory parserFactory;

  private int bufferSize;

  private int sendDataSocketBufferSize;

  private int receiveDataSocketBufferSize;

  private boolean listHiddenFiles;

  private boolean useEPSVwithIPv4;

  private java.lang.String systemName;

  private org.apache.commons.net.ftp.FTPFileEntryParser entryParser;

  private java.lang.String entryParserKey;

  private org.apache.commons.net.ftp.FTPClientConfig configuration;

  private org.apache.commons.net.io.CopyStreamListener copyStreamListener;

  private java.time.Duration controlKeepAliveTimeout;

  private java.time.Duration controlKeepAliveReplyTimeout;

  private int[] cslDebug;

  private org.apache.commons.net.ftp.FTPClient$HostnameResolver passiveNatWorkaroundStrategy;

  private boolean autodetectEncoding;

  private java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>> featuresMap;

  private boolean ipAddressFromPasvResponse;

  private static java.util.Properties getOverrideProperties();
    Code:
       0: getstatic     #1                  // Field org/apache/commons/net/ftp/FTPClient$PropertiesSingleton.PROPERTIES:Ljava/util/Properties;
       3: areturn

  static java.lang.String parsePathname(java.lang.String);
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #3                  // Method java/lang/String.substring:(I)Ljava/lang/String;
       5: astore_1
       6: aload_1
       7: ldc           #4                  // String \"
       9: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          104
      15: new           #6                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      22: astore_2
      23: iconst_0
      24: istore_3
      25: iconst_1
      26: istore        4
      28: iload         4
      30: aload_1
      31: invokevirtual #8                  // Method java/lang/String.length:()I
      34: if_icmpge     95
      37: aload_1
      38: iload         4
      40: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      43: istore        5
      45: iload         5
      47: bipush        34
      49: if_icmpne     73
      52: iload_3
      53: ifeq          68
      56: aload_2
      57: iload         5
      59: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: pop
      63: iconst_0
      64: istore_3
      65: goto          89
      68: iconst_1
      69: istore_3
      70: goto          89
      73: iload_3
      74: ifeq          82
      77: aload_2
      78: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: areturn
      82: aload_2
      83: iload         5
      85: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: iinc          4, 1
      92: goto          28
      95: iload_3
      96: ifeq          104
      99: aload_2
     100: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: areturn
     104: aload_1
     105: areturn

  public org.apache.commons.net.ftp.FTPClient();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/apache/commons/net/ftp/FTP."<init>":()V
       4: aload_0
       5: getstatic     #13                 // Field java/time/Duration.ZERO:Ljava/time/Duration;
       8: putfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
      11: aload_0
      12: lconst_1
      13: invokestatic  #15                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      16: putfield      #16                 // Field controlKeepAliveReplyTimeout:Ljava/time/Duration;
      19: aload_0
      20: new           #17                 // class org/apache/commons/net/ftp/FTPClient$NatServerResolverImpl
      23: dup
      24: aload_0
      25: invokespecial #18                 // Method org/apache/commons/net/ftp/FTPClient$NatServerResolverImpl."<init>":(Lorg/apache/commons/net/ftp/FTPClient;)V
      28: putfield      #19                 // Field passiveNatWorkaroundStrategy:Lorg/apache/commons/net/ftp/FTPClient$HostnameResolver;
      31: aload_0
      32: ldc           #21                 // String org.apache.commons.net.ftp.ipAddressFromPasvResponse
      34: invokestatic  #22                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #23                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      40: putfield      #24                 // Field ipAddressFromPasvResponse:Z
      43: aload_0
      44: invokespecial #25                 // Method initDefaults:()V
      47: aload_0
      48: ldc2_w        #26                 // long -1l
      51: invokestatic  #28                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      54: putfield      #29                 // Field dataTimeout:Ljava/time/Duration;
      57: aload_0
      58: iconst_1
      59: putfield      #30                 // Field remoteVerificationEnabled:Z
      62: aload_0
      63: new           #31                 // class org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory
      66: dup
      67: invokespecial #32                 // Method org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory."<init>":()V
      70: putfield      #33                 // Field parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
      73: aload_0
      74: aconst_null
      75: putfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      78: aload_0
      79: iconst_0
      80: putfield      #35                 // Field listHiddenFiles:Z
      83: aload_0
      84: iconst_0
      85: putfield      #36                 // Field useEPSVwithIPv4:Z
      88: aload_0
      89: new           #37                 // class java/util/Random
      92: dup
      93: invokespecial #38                 // Method java/util/Random."<init>":()V
      96: putfield      #39                 // Field random:Ljava/util/Random;
      99: aload_0
     100: aconst_null
     101: putfield      #40                 // Field passiveLocalHost:Ljava/net/InetAddress;
     104: return

  protected void _connectAction_() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #41                 // Method _connectAction_:(Ljava/io/Reader;)V
       5: return

  protected void _connectAction_(java.io.Reader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #42                 // Method org/apache/commons/net/ftp/FTP._connectAction_:(Ljava/io/Reader;)V
       5: aload_0
       6: invokespecial #25                 // Method initDefaults:()V
       9: aload_0
      10: getfield      #43                 // Field autodetectEncoding:Z
      13: ifeq          135
      16: new           #44                 // class java/util/ArrayList
      19: dup
      20: aload_0
      21: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      24: invokespecial #46                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      27: astore_2
      28: aload_0
      29: getfield      #47                 // Field _replyCode:I
      32: istore_3
      33: aload_0
      34: ldc           #48                 // String UTF8
      36: invokevirtual #49                 // Method hasFeature:(Ljava/lang/String;)Z
      39: ifne          51
      42: aload_0
      43: ldc           #50                 // String UTF-8
      45: invokevirtual #49                 // Method hasFeature:(Ljava/lang/String;)Z
      48: ifeq          109
      51: aload_0
      52: ldc           #50                 // String UTF-8
      54: invokevirtual #51                 // Method setControlEncoding:(Ljava/lang/String;)V
      57: aload_0
      58: new           #52                 // class org/apache/commons/net/io/CRLFLineReader
      61: dup
      62: new           #53                 // class java/io/InputStreamReader
      65: dup
      66: aload_0
      67: getfield      #54                 // Field _input_:Ljava/io/InputStream;
      70: aload_0
      71: invokevirtual #55                 // Method getControlEncoding:()Ljava/lang/String;
      74: invokespecial #56                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      77: invokespecial #57                 // Method org/apache/commons/net/io/CRLFLineReader."<init>":(Ljava/io/Reader;)V
      80: putfield      #58                 // Field _controlInput_:Ljava/io/BufferedReader;
      83: aload_0
      84: new           #59                 // class java/io/BufferedWriter
      87: dup
      88: new           #60                 // class java/io/OutputStreamWriter
      91: dup
      92: aload_0
      93: getfield      #61                 // Field _output_:Ljava/io/OutputStream;
      96: aload_0
      97: invokevirtual #55                 // Method getControlEncoding:()Ljava/lang/String;
     100: invokespecial #62                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
     103: invokespecial #63                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
     106: putfield      #64                 // Field _controlOutput_:Ljava/io/BufferedWriter;
     109: aload_0
     110: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
     113: invokevirtual #65                 // Method java/util/ArrayList.clear:()V
     116: aload_0
     117: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
     120: aload_2
     121: invokevirtual #66                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
     124: pop
     125: aload_0
     126: iload_3
     127: putfield      #47                 // Field _replyCode:I
     130: aload_0
     131: iconst_1
     132: putfield      #67                 // Field _newReplyString:Z
     135: return

  protected java.net.Socket _openDataConnection_(org.apache.commons.net.ftp.FTPCmd, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method org/apache/commons/net/ftp/FTPCmd.getCommand:()Ljava/lang/String;
       5: aload_2
       6: invokevirtual #69                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       9: areturn

  protected java.net.Socket _openDataConnection_(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #70                 // Method org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;
       5: aload_2
       6: invokevirtual #69                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       9: areturn

  protected java.net.Socket _openDataConnection_(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field dataConnectionMode:I
       4: ifeq          17
       7: aload_0
       8: getfield      #71                 // Field dataConnectionMode:I
      11: iconst_2
      12: if_icmpeq     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: invokevirtual #72                 // Method getRemoteAddress:()Ljava/net/InetAddress;
      21: instanceof    #73                 // class java/net/Inet6Address
      24: istore_3
      25: aload_0
      26: getfield      #29                 // Field dataTimeout:Ljava/time/Duration;
      29: invokestatic  #74                 // Method org/apache/commons/net/ftp/DurationUtils.toMillisInt:(Ljava/time/Duration;)I
      32: istore        5
      34: aload_0
      35: getfield      #71                 // Field dataConnectionMode:I
      38: ifne          453
      41: aload_0
      42: getfield      #75                 // Field _serverSocketFactory_:Ljavax/net/ServerSocketFactory;
      45: aload_0
      46: invokevirtual #76                 // Method getActivePort:()I
      49: iconst_1
      50: aload_0
      51: invokevirtual #77                 // Method getHostAddress:()Ljava/net/InetAddress;
      54: invokevirtual #78                 // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;
      57: astore        6
      59: aconst_null
      60: astore        7
      62: iload_3
      63: ifeq          126
      66: aload_0
      67: aload_0
      68: invokevirtual #79                 // Method getReportHostAddress:()Ljava/net/InetAddress;
      71: aload         6
      73: invokevirtual #80                 // Method java/net/ServerSocket.getLocalPort:()I
      76: invokevirtual #81                 // Method eprt:(Ljava/net/InetAddress;I)I
      79: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      82: ifne          186
      85: aconst_null
      86: astore        8
      88: aload         6
      90: ifnull        123
      93: aload         7
      95: ifnull        118
      98: aload         6
     100: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     103: goto          123
     106: astore        9
     108: aload         7
     110: aload         9
     112: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     115: goto          123
     118: aload         6
     120: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     123: aload         8
     125: areturn
     126: aload_0
     127: aload_0
     128: invokevirtual #79                 // Method getReportHostAddress:()Ljava/net/InetAddress;
     131: aload         6
     133: invokevirtual #80                 // Method java/net/ServerSocket.getLocalPort:()I
     136: invokevirtual #86                 // Method port:(Ljava/net/InetAddress;I)I
     139: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
     142: ifne          186
     145: aconst_null
     146: astore        8
     148: aload         6
     150: ifnull        183
     153: aload         7
     155: ifnull        178
     158: aload         6
     160: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     163: goto          183
     166: astore        9
     168: aload         7
     170: aload         9
     172: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     175: goto          183
     178: aload         6
     180: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     183: aload         8
     185: areturn
     186: aload_0
     187: getfield      #87                 // Field restartOffset:J
     190: lconst_0
     191: lcmp
     192: ifle          247
     195: aload_0
     196: aload_0
     197: getfield      #87                 // Field restartOffset:J
     200: invokevirtual #88                 // Method restart:(J)Z
     203: ifne          247
     206: aconst_null
     207: astore        8
     209: aload         6
     211: ifnull        244
     214: aload         7
     216: ifnull        239
     219: aload         6
     221: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     224: goto          244
     227: astore        9
     229: aload         7
     231: aload         9
     233: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     236: goto          244
     239: aload         6
     241: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     244: aload         8
     246: areturn
     247: aload_0
     248: aload_1
     249: aload_2
     250: invokevirtual #89                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
     253: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
     256: ifne          300
     259: aconst_null
     260: astore        8
     262: aload         6
     264: ifnull        297
     267: aload         7
     269: ifnull        292
     272: aload         6
     274: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     277: goto          297
     280: astore        9
     282: aload         7
     284: aload         9
     286: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     289: goto          297
     292: aload         6
     294: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     297: aload         8
     299: areturn
     300: iload         5
     302: iflt          312
     305: aload         6
     307: iload         5
     309: invokevirtual #91                 // Method java/net/ServerSocket.setSoTimeout:(I)V
     312: aload         6
     314: invokevirtual #92                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;
     317: astore        4
     319: iload         5
     321: iflt          331
     324: aload         4
     326: iload         5
     328: invokevirtual #93                 // Method java/net/Socket.setSoTimeout:(I)V
     331: aload_0
     332: getfield      #94                 // Field receiveDataSocketBufferSize:I
     335: ifle          347
     338: aload         4
     340: aload_0
     341: getfield      #94                 // Field receiveDataSocketBufferSize:I
     344: invokevirtual #95                 // Method java/net/Socket.setReceiveBufferSize:(I)V
     347: aload_0
     348: getfield      #96                 // Field sendDataSocketBufferSize:I
     351: ifle          363
     354: aload         4
     356: aload_0
     357: getfield      #96                 // Field sendDataSocketBufferSize:I
     360: invokevirtual #97                 // Method java/net/Socket.setSendBufferSize:(I)V
     363: aload         6
     365: ifnull        450
     368: aload         7
     370: ifnull        393
     373: aload         6
     375: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     378: goto          450
     381: astore        8
     383: aload         7
     385: aload         8
     387: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     390: goto          450
     393: aload         6
     395: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     398: goto          450
     401: astore        8
     403: aload         8
     405: astore        7
     407: aload         8
     409: athrow
     410: astore        10
     412: aload         6
     414: ifnull        447
     417: aload         7
     419: ifnull        442
     422: aload         6
     424: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     427: goto          447
     430: astore        11
     432: aload         7
     434: aload         11
     436: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     439: goto          447
     442: aload         6
     444: invokevirtual #83                 // Method java/net/ServerSocket.close:()V
     447: aload         10
     449: athrow
     450: goto          684
     453: aload_0
     454: invokevirtual #98                 // Method isUseEPSVwithIPv4:()Z
     457: ifne          464
     460: iload_3
     461: ifeq          468
     464: iconst_1
     465: goto          469
     468: iconst_0
     469: istore        6
     471: iload         6
     473: ifeq          504
     476: aload_0
     477: invokevirtual #99                 // Method epsv:()I
     480: sipush        229
     483: if_icmpne     504
     486: aload_0
     487: aload_0
     488: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
     491: iconst_0
     492: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     495: checkcast     #102                // class java/lang/String
     498: invokevirtual #103                // Method _parseExtendedPassiveModeReply:(Ljava/lang/String;)V
     501: goto          537
     504: iload_3
     505: ifeq          510
     508: aconst_null
     509: areturn
     510: aload_0
     511: invokevirtual #104                // Method pasv:()I
     514: sipush        227
     517: if_icmpeq     522
     520: aconst_null
     521: areturn
     522: aload_0
     523: aload_0
     524: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
     527: iconst_0
     528: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     531: checkcast     #102                // class java/lang/String
     534: invokevirtual #105                // Method _parsePassiveModeReply:(Ljava/lang/String;)V
     537: aload_0
     538: getfield      #106                // Field _socketFactory_:Ljavax/net/SocketFactory;
     541: invokevirtual #107                // Method javax/net/SocketFactory.createSocket:()Ljava/net/Socket;
     544: astore        4
     546: aload_0
     547: getfield      #94                 // Field receiveDataSocketBufferSize:I
     550: ifle          562
     553: aload         4
     555: aload_0
     556: getfield      #94                 // Field receiveDataSocketBufferSize:I
     559: invokevirtual #95                 // Method java/net/Socket.setReceiveBufferSize:(I)V
     562: aload_0
     563: getfield      #96                 // Field sendDataSocketBufferSize:I
     566: ifle          578
     569: aload         4
     571: aload_0
     572: getfield      #96                 // Field sendDataSocketBufferSize:I
     575: invokevirtual #97                 // Method java/net/Socket.setSendBufferSize:(I)V
     578: aload_0
     579: getfield      #40                 // Field passiveLocalHost:Ljava/net/InetAddress;
     582: ifnull        602
     585: aload         4
     587: new           #108                // class java/net/InetSocketAddress
     590: dup
     591: aload_0
     592: getfield      #40                 // Field passiveLocalHost:Ljava/net/InetAddress;
     595: iconst_0
     596: invokespecial #109                // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     599: invokevirtual #110                // Method java/net/Socket.bind:(Ljava/net/SocketAddress;)V
     602: iload         5
     604: iflt          614
     607: aload         4
     609: iload         5
     611: invokevirtual #93                 // Method java/net/Socket.setSoTimeout:(I)V
     614: aload         4
     616: new           #108                // class java/net/InetSocketAddress
     619: dup
     620: aload_0
     621: getfield      #111                // Field passiveHost:Ljava/lang/String;
     624: aload_0
     625: getfield      #112                // Field passivePort:I
     628: invokespecial #113                // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     631: aload_0
     632: getfield      #114                // Field connectTimeout:I
     635: invokevirtual #115                // Method java/net/Socket.connect:(Ljava/net/SocketAddress;I)V
     638: aload_0
     639: getfield      #87                 // Field restartOffset:J
     642: lconst_0
     643: lcmp
     644: ifle          665
     647: aload_0
     648: aload_0
     649: getfield      #87                 // Field restartOffset:J
     652: invokevirtual #88                 // Method restart:(J)Z
     655: ifne          665
     658: aload         4
     660: invokevirtual #116                // Method java/net/Socket.close:()V
     663: aconst_null
     664: areturn
     665: aload_0
     666: aload_1
     667: aload_2
     668: invokevirtual #89                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
     671: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
     674: ifne          684
     677: aload         4
     679: invokevirtual #116                // Method java/net/Socket.close:()V
     682: aconst_null
     683: areturn
     684: aload_0
     685: getfield      #30                 // Field remoteVerificationEnabled:Z
     688: ifeq          758
     691: aload_0
     692: aload         4
     694: invokevirtual #117                // Method verifyRemote:(Ljava/net/Socket;)Z
     697: ifne          758
     700: aload         4
     702: invokevirtual #118                // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
     705: astore        6
     707: aload         4
     709: invokevirtual #116                // Method java/net/Socket.close:()V
     712: new           #119                // class java/io/IOException
     715: dup
     716: new           #6                  // class java/lang/StringBuilder
     719: dup
     720: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     723: ldc           #120                // String Host attempting data connection
     725: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     728: aload         6
     730: invokevirtual #122                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     733: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     736: ldc           #123                // String  is not same as server
     738: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     741: aload_0
     742: invokevirtual #72                 // Method getRemoteAddress:()Ljava/net/InetAddress;
     745: invokevirtual #122                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     748: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     751: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     754: invokespecial #124                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     757: athrow
     758: aload         4
     760: areturn
    Exception table:
       from    to  target type
          98   103   106   Class java/lang/Throwable
         158   163   166   Class java/lang/Throwable
         219   224   227   Class java/lang/Throwable
         272   277   280   Class java/lang/Throwable
         373   378   381   Class java/lang/Throwable
          62    88   401   Class java/lang/Throwable
         126   148   401   Class java/lang/Throwable
         186   209   401   Class java/lang/Throwable
         247   262   401   Class java/lang/Throwable
         300   363   401   Class java/lang/Throwable
          62    88   410   any
         126   148   410   any
         186   209   410   any
         247   262   410   any
         300   363   410   any
         422   427   430   Class java/lang/Throwable
         401   412   410   any

  protected void _parseExtendedPassiveModeReply(java.lang.String) throws org.apache.commons.net.MalformedServerReplyException;
    Code:
       0: aload_1
       1: aload_1
       2: bipush        40
       4: invokevirtual #125                // Method java/lang/String.indexOf:(I)I
       7: iconst_1
       8: iadd
       9: aload_1
      10: bipush        41
      12: invokevirtual #125                // Method java/lang/String.indexOf:(I)I
      15: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;
      18: invokevirtual #127                // Method java/lang/String.trim:()Ljava/lang/String;
      21: astore_1
      22: aload_1
      23: iconst_0
      24: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      27: istore_2
      28: aload_1
      29: iconst_1
      30: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      33: istore_3
      34: aload_1
      35: iconst_2
      36: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      39: istore        4
      41: aload_1
      42: aload_1
      43: invokevirtual #8                  // Method java/lang/String.length:()I
      46: iconst_1
      47: isub
      48: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      51: istore        5
      53: iload_2
      54: iload_3
      55: if_icmpne     71
      58: iload_3
      59: iload         4
      61: if_icmpne     71
      64: iload         4
      66: iload         5
      68: if_icmpeq     98
      71: new           #128                // class org/apache/commons/net/MalformedServerReplyException
      74: dup
      75: new           #6                  // class java/lang/StringBuilder
      78: dup
      79: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #129                // String Could not parse extended passive host information.\nServer Reply:
      84: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #130                // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_1
      99: iconst_3
     100: aload_1
     101: invokevirtual #8                  // Method java/lang/String.length:()I
     104: iconst_1
     105: isub
     106: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;
     109: invokestatic  #131                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     112: istore        6
     114: goto          146
     117: astore        7
     119: new           #128                // class org/apache/commons/net/MalformedServerReplyException
     122: dup
     123: new           #6                  // class java/lang/StringBuilder
     126: dup
     127: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #129                // String Could not parse extended passive host information.\nServer Reply:
     132: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_1
     136: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #130                // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
     145: athrow
     146: aload_0
     147: aload_0
     148: invokevirtual #72                 // Method getRemoteAddress:()Ljava/net/InetAddress;
     151: invokevirtual #122                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     154: putfield      #111                // Field passiveHost:Ljava/lang/String;
     157: aload_0
     158: iload         6
     160: putfield      #112                // Field passivePort:I
     163: return
    Exception table:
       from    to  target type
          98   114   117   Class java/lang/NumberFormatException

  protected void _parsePassiveModeReply(java.lang.String) throws org.apache.commons.net.MalformedServerReplyException;
    Code:
       0: getstatic     #133                // Field PARMS_PAT:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #134                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #135                // Method java/util/regex/Matcher.find:()Z
      12: ifne          42
      15: new           #128                // class org/apache/commons/net/MalformedServerReplyException
      18: dup
      19: new           #6                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #136                // String Could not parse passive host information.\nServer Reply:
      28: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #130                // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: ldc           #137                // String 0,0,0,0
      44: aload_2
      45: iconst_1
      46: invokevirtual #138                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      49: invokevirtual #139                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          68
      55: aload_0
      56: getfield      #140                // Field _socket_:Ljava/net/Socket;
      59: invokevirtual #118                // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
      62: invokevirtual #122                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      65: goto          80
      68: aload_2
      69: iconst_1
      70: invokevirtual #138                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      73: bipush        44
      75: bipush        46
      77: invokevirtual #141                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      80: astore        4
      82: aload_2
      83: iconst_2
      84: invokevirtual #138                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      87: invokestatic  #131                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      90: istore        5
      92: aload_2
      93: iconst_3
      94: invokevirtual #138                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      97: invokestatic  #131                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     100: istore        6
     102: iload         5
     104: bipush        8
     106: ishl
     107: iload         6
     109: ior
     110: istore_3
     111: goto          143
     114: astore        5
     116: new           #128                // class org/apache/commons/net/MalformedServerReplyException
     119: dup
     120: new           #6                  // class java/lang/StringBuilder
     123: dup
     124: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #142                // String Could not parse passive port information.\nServer Reply:
     129: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_1
     133: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #130                // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: aload_0
     144: invokevirtual #143                // Method isIpAddressFromPasvResponse:()Z
     147: ifeq          258
     150: aload_0
     151: getfield      #19                 // Field passiveNatWorkaroundStrategy:Lorg/apache/commons/net/ftp/FTPClient$HostnameResolver;
     154: ifnull        283
     157: aload_0
     158: getfield      #19                 // Field passiveNatWorkaroundStrategy:Lorg/apache/commons/net/ftp/FTPClient$HostnameResolver;
     161: aload         4
     163: invokeinterface #144,  2          // InterfaceMethod org/apache/commons/net/ftp/FTPClient$HostnameResolver.resolve:(Ljava/lang/String;)Ljava/lang/String;
     168: astore        5
     170: aload         4
     172: aload         5
     174: invokevirtual #139                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     177: ifne          226
     180: aload_0
     181: iconst_0
     182: new           #6                  // class java/lang/StringBuilder
     185: dup
     186: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #145                // String [Replacing PASV mode reply address
     191: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_0
     195: getfield      #111                // Field passiveHost:Ljava/lang/String;
     198: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: ldc           #146                // String  with
     203: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload         5
     208: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: ldc           #147                // String ]\n
     213: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     219: invokevirtual #148                // Method fireReplyReceived:(ILjava/lang/String;)V
     222: aload         5
     224: astore        4
     226: goto          283
     229: astore        5
     231: new           #128                // class org/apache/commons/net/MalformedServerReplyException
     234: dup
     235: new           #6                  // class java/lang/StringBuilder
     238: dup
     239: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     242: ldc           #136                // String Could not parse passive host information.\nServer Reply:
     244: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: aload_1
     248: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: invokespecial #130                // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
     257: athrow
     258: aload_0
     259: getfield      #140                // Field _socket_:Ljava/net/Socket;
     262: ifnonnull     271
     265: aconst_null
     266: astore        4
     268: goto          283
     271: aload_0
     272: getfield      #140                // Field _socket_:Ljava/net/Socket;
     275: invokevirtual #118                // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
     278: invokevirtual #122                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     281: astore        4
     283: aload_0
     284: aload         4
     286: putfield      #111                // Field passiveHost:Ljava/lang/String;
     289: aload_0
     290: iload_3
     291: putfield      #112                // Field passivePort:I
     294: return
    Exception table:
       from    to  target type
          82   111   114   Class java/lang/NumberFormatException
         157   226   229   Class java/net/UnknownHostException

  protected boolean _retrieveFile(java.lang.String, java.lang.String, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #69                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: astore        4
       8: aload         4
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aconst_null
      16: astore        5
      18: aconst_null
      19: astore        6
      21: aload_0
      22: getfield      #150                // Field fileType:I
      25: ifne          49
      28: new           #151                // class org/apache/commons/net/io/FromNetASCIIInputStream
      31: dup
      32: aload_0
      33: aload         4
      35: invokevirtual #152                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      38: invokespecial #153                // Method getBufferedInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
      41: invokespecial #154                // Method org/apache/commons/net/io/FromNetASCIIInputStream."<init>":(Ljava/io/InputStream;)V
      44: astore        5
      46: goto          60
      49: aload_0
      50: aload         4
      52: invokevirtual #152                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      55: invokespecial #153                // Method getBufferedInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
      58: astore        5
      60: aload_0
      61: getfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
      64: invokestatic  #155                // Method org/apache/commons/net/ftp/DurationUtils.isPositive:(Ljava/time/Duration;)Z
      67: ifeq          88
      70: new           #156                // class org/apache/commons/net/ftp/FTPClient$CSL
      73: dup
      74: aload_0
      75: aload_0
      76: getfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
      79: aload_0
      80: getfield      #16                 // Field controlKeepAliveReplyTimeout:Ljava/time/Duration;
      83: invokespecial #157                // Method org/apache/commons/net/ftp/FTPClient$CSL."<init>":(Lorg/apache/commons/net/ftp/FTPClient;Ljava/time/Duration;Ljava/time/Duration;)V
      86: astore        6
      88: aload         5
      90: aload_3
      91: aload_0
      92: invokevirtual #158                // Method getBufferSize:()I
      95: ldc2_w        #26                 // long -1l
      98: aload_0
      99: aload         6
     101: invokespecial #160                // Method mergeListeners:(Lorg/apache/commons/net/io/CopyStreamListener;)Lorg/apache/commons/net/io/CopyStreamListener;
     104: iconst_0
     105: invokestatic  #161                // Method org/apache/commons/net/io/Util.copyStream:(Ljava/io/InputStream;Ljava/io/OutputStream;IJLorg/apache/commons/net/io/CopyStreamListener;Z)J
     108: pop2
     109: aload         5
     111: invokestatic  #162                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/io/Closeable;)V
     114: goto          127
     117: astore        7
     119: aload         5
     121: invokestatic  #162                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/io/Closeable;)V
     124: aload         7
     126: athrow
     127: aload_0
     128: invokevirtual #163                // Method completePendingCommand:()Z
     131: istore        7
     133: aload         4
     135: invokestatic  #164                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
     138: aload         6
     140: ifnull        152
     143: aload_0
     144: aload         6
     146: invokevirtual #165                // Method org/apache/commons/net/ftp/FTPClient$CSL.cleanUp:()[I
     149: putfield      #166                // Field cslDebug:[I
     152: iload         7
     154: ireturn
     155: astore        8
     157: aload         4
     159: invokestatic  #164                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
     162: aload         6
     164: ifnull        176
     167: aload_0
     168: aload         6
     170: invokevirtual #165                // Method org/apache/commons/net/ftp/FTPClient$CSL.cleanUp:()[I
     173: putfield      #166                // Field cslDebug:[I
     176: aload         8
     178: athrow
    Exception table:
       from    to  target type
          21   109   117   any
         117   119   117   any
          21   133   155   any
         155   157   155   any

  protected java.io.InputStream _retrieveFileStream(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #69                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #150                // Field fileType:I
      17: ifne          40
      20: new           #151                // class org/apache/commons/net/io/FromNetASCIIInputStream
      23: dup
      24: aload_0
      25: aload_3
      26: invokevirtual #152                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      29: invokespecial #153                // Method getBufferedInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
      32: invokespecial #154                // Method org/apache/commons/net/io/FromNetASCIIInputStream."<init>":(Ljava/io/InputStream;)V
      35: astore        4
      37: goto          46
      40: aload_3
      41: invokevirtual #152                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      44: astore        4
      46: new           #167                // class org/apache/commons/net/io/SocketInputStream
      49: dup
      50: aload_3
      51: aload         4
      53: invokespecial #168                // Method org/apache/commons/net/io/SocketInputStream."<init>":(Ljava/net/Socket;Ljava/io/InputStream;)V
      56: areturn

  protected boolean _storeFile(java.lang.String, java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #69                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: astore        4
       8: aload         4
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: getfield      #150                // Field fileType:I
      19: ifne          43
      22: new           #169                // class org/apache/commons/net/io/ToNetASCIIOutputStream
      25: dup
      26: aload_0
      27: aload         4
      29: invokevirtual #170                // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      32: invokespecial #171                // Method getBufferedOutputStream:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      35: invokespecial #172                // Method org/apache/commons/net/io/ToNetASCIIOutputStream."<init>":(Ljava/io/OutputStream;)V
      38: astore        5
      40: goto          54
      43: aload_0
      44: aload         4
      46: invokevirtual #170                // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      49: invokespecial #171                // Method getBufferedOutputStream:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      52: astore        5
      54: aconst_null
      55: astore        6
      57: aload_0
      58: getfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
      61: invokestatic  #155                // Method org/apache/commons/net/ftp/DurationUtils.isPositive:(Ljava/time/Duration;)Z
      64: ifeq          85
      67: new           #156                // class org/apache/commons/net/ftp/FTPClient$CSL
      70: dup
      71: aload_0
      72: aload_0
      73: getfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
      76: aload_0
      77: getfield      #16                 // Field controlKeepAliveReplyTimeout:Ljava/time/Duration;
      80: invokespecial #157                // Method org/apache/commons/net/ftp/FTPClient$CSL."<init>":(Lorg/apache/commons/net/ftp/FTPClient;Ljava/time/Duration;Ljava/time/Duration;)V
      83: astore        6
      85: aload_3
      86: aload         5
      88: aload_0
      89: invokevirtual #158                // Method getBufferSize:()I
      92: ldc2_w        #26                 // long -1l
      95: aload_0
      96: aload         6
      98: invokespecial #160                // Method mergeListeners:(Lorg/apache/commons/net/io/CopyStreamListener;)Lorg/apache/commons/net/io/CopyStreamListener;
     101: iconst_0
     102: invokestatic  #161                // Method org/apache/commons/net/io/Util.copyStream:(Ljava/io/InputStream;Ljava/io/OutputStream;IJLorg/apache/commons/net/io/CopyStreamListener;Z)J
     105: pop2
     106: aload         5
     108: invokevirtual #173                // Method java/io/OutputStream.close:()V
     111: aload         4
     113: invokevirtual #116                // Method java/net/Socket.close:()V
     116: aload_0
     117: invokevirtual #163                // Method completePendingCommand:()Z
     120: istore        7
     122: aload         6
     124: ifnull        136
     127: aload_0
     128: aload         6
     130: invokevirtual #165                // Method org/apache/commons/net/ftp/FTPClient$CSL.cleanUp:()[I
     133: putfield      #166                // Field cslDebug:[I
     136: iload         7
     138: ireturn
     139: astore        7
     141: aload         5
     143: invokestatic  #162                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/io/Closeable;)V
     146: aload         4
     148: invokestatic  #164                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
     151: aload         7
     153: athrow
     154: astore        8
     156: aload         6
     158: ifnull        170
     161: aload_0
     162: aload         6
     164: invokevirtual #165                // Method org/apache/commons/net/ftp/FTPClient$CSL.cleanUp:()[I
     167: putfield      #166                // Field cslDebug:[I
     170: aload         8
     172: athrow
    Exception table:
       from    to  target type
          85   122   139   Class java/io/IOException
          85   122   154   any
         139   156   154   any

  protected java.io.OutputStream _storeFileStream(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #69                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #150                // Field fileType:I
      17: ifne          40
      20: new           #169                // class org/apache/commons/net/io/ToNetASCIIOutputStream
      23: dup
      24: aload_0
      25: aload_3
      26: invokevirtual #170                // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      29: invokespecial #171                // Method getBufferedOutputStream:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      32: invokespecial #172                // Method org/apache/commons/net/io/ToNetASCIIOutputStream."<init>":(Ljava/io/OutputStream;)V
      35: astore        4
      37: goto          46
      40: aload_3
      41: invokevirtual #170                // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      44: astore        4
      46: new           #174                // class org/apache/commons/net/io/SocketOutputStream
      49: dup
      50: aload_3
      51: aload         4
      53: invokespecial #175                // Method org/apache/commons/net/io/SocketOutputStream."<init>":(Ljava/net/Socket;Ljava/io/OutputStream;)V
      56: areturn

  public boolean abort() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #176                // Method abor:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean allocate(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #177                // Method allo:(I)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean allocate(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #178                // Method allo:(II)I
       6: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ireturn

  public boolean allocate(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #179                // Method allo:(J)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean allocate(long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #180                // Method allo:(JI)I
       6: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ireturn

  public boolean appendFile(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #181                // Field org/apache/commons/net/ftp/FTPCmd.APPE:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: aload_2
       6: invokespecial #182                // Method storeFile:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;Ljava/io/InputStream;)Z
       9: ireturn

  public java.io.OutputStream appendFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #181                // Field org/apache/commons/net/ftp/FTPCmd.APPE:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: invokespecial #183                // Method storeFileStream:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)Ljava/io/OutputStream;
       8: areturn

  public boolean changeToParentDirectory() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #184                // Method cdup:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean changeWorkingDirectory(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #185                // Method cwd:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean completePendingCommand() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #186                // Method getReply:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public void configure(org.apache.commons.net.ftp.FTPClientConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
       5: return

  void createParser(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
       4: ifnull        22
       7: aload_1
       8: ifnull        194
      11: aload_0
      12: getfield      #188                // Field entryParserKey:Ljava/lang/String;
      15: aload_1
      16: invokevirtual #139                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifne          194
      22: aconst_null
      23: aload_1
      24: if_acmpeq     49
      27: aload_0
      28: aload_0
      29: getfield      #33                 // Field parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
      32: aload_1
      33: invokeinterface #189,  2          // InterfaceMethod org/apache/commons/net/ftp/parser/FTPFileEntryParserFactory.createFileEntryParser:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      38: putfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      41: aload_0
      42: aload_1
      43: putfield      #188                // Field entryParserKey:Ljava/lang/String;
      46: goto          194
      49: aconst_null
      50: aload_0
      51: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      54: if_acmpeq     101
      57: aload_0
      58: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      61: invokevirtual #190                // Method org/apache/commons/net/ftp/FTPClientConfig.getServerSystemKey:()Ljava/lang/String;
      64: invokevirtual #8                  // Method java/lang/String.length:()I
      67: ifle          101
      70: aload_0
      71: aload_0
      72: getfield      #33                 // Field parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
      75: aload_0
      76: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      79: invokeinterface #191,  2          // InterfaceMethod org/apache/commons/net/ftp/parser/FTPFileEntryParserFactory.createFileEntryParser:(Lorg/apache/commons/net/ftp/FTPClientConfig;)Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      84: putfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      87: aload_0
      88: aload_0
      89: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      92: invokevirtual #190                // Method org/apache/commons/net/ftp/FTPClientConfig.getServerSystemKey:()Ljava/lang/String;
      95: putfield      #188                // Field entryParserKey:Ljava/lang/String;
      98: goto          194
     101: ldc           #192                // String org.apache.commons.net.ftp.systemType
     103: invokestatic  #22                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     106: astore_2
     107: aload_2
     108: ifnonnull     139
     111: aload_0
     112: invokevirtual #193                // Method getSystemType:()Ljava/lang/String;
     115: astore_2
     116: invokestatic  #194                // Method getOverrideProperties:()Ljava/util/Properties;
     119: astore_3
     120: aload_3
     121: ifnull        139
     124: aload_3
     125: aload_2
     126: invokevirtual #195                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     129: astore        4
     131: aload         4
     133: ifnull        139
     136: aload         4
     138: astore_2
     139: aconst_null
     140: aload_0
     141: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
     144: if_acmpeq     175
     147: aload_0
     148: aload_0
     149: getfield      #33                 // Field parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
     152: new           #196                // class org/apache/commons/net/ftp/FTPClientConfig
     155: dup
     156: aload_2
     157: aload_0
     158: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
     161: invokespecial #197                // Method org/apache/commons/net/ftp/FTPClientConfig."<init>":(Ljava/lang/String;Lorg/apache/commons/net/ftp/FTPClientConfig;)V
     164: invokeinterface #191,  2          // InterfaceMethod org/apache/commons/net/ftp/parser/FTPFileEntryParserFactory.createFileEntryParser:(Lorg/apache/commons/net/ftp/FTPClientConfig;)Lorg/apache/commons/net/ftp/FTPFileEntryParser;
     169: putfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
     172: goto          189
     175: aload_0
     176: aload_0
     177: getfield      #33                 // Field parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
     180: aload_2
     181: invokeinterface #189,  2          // InterfaceMethod org/apache/commons/net/ftp/parser/FTPFileEntryParserFactory.createFileEntryParser:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPFileEntryParser;
     186: putfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
     189: aload_0
     190: aload_2
     191: putfield      #188                // Field entryParserKey:Ljava/lang/String;
     194: return

  public boolean deleteFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #198                // Method dele:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public void disconnect() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #199                // Method org/apache/commons/net/ftp/FTP.disconnect:()V
       4: aload_0
       5: invokespecial #25                 // Method initDefaults:()V
       8: return

  public boolean doCommand(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #89                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
       6: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ireturn

  public java.lang.String[] doCommandAsStrings(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #89                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
       6: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: istore_3
      10: iload_3
      11: ifeq          19
      14: aload_0
      15: invokevirtual #200                // Method getReplyStrings:()[Ljava/lang/String;
      18: areturn
      19: aconst_null
      20: areturn

  public void enterLocalActiveMode();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #71                 // Field dataConnectionMode:I
       5: aload_0
       6: aconst_null
       7: putfield      #111                // Field passiveHost:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #112                // Field passivePort:I
      15: return

  public void enterLocalPassiveMode();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #71                 // Field dataConnectionMode:I
       5: aload_0
       6: aconst_null
       7: putfield      #111                // Field passiveHost:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #112                // Field passivePort:I
      15: return

  public boolean enterRemoteActiveMode(java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #86                 // Method port:(Ljava/net/InetAddress;I)I
       6: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ifeq          29
      12: aload_0
      13: iconst_1
      14: putfield      #71                 // Field dataConnectionMode:I
      17: aload_0
      18: aconst_null
      19: putfield      #111                // Field passiveHost:Ljava/lang/String;
      22: aload_0
      23: iconst_m1
      24: putfield      #112                // Field passivePort:I
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public boolean enterRemotePassiveMode() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #104                // Method pasv:()I
       4: sipush        227
       7: if_icmpeq     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: iconst_3
      14: putfield      #71                 // Field dataConnectionMode:I
      17: aload_0
      18: aload_0
      19: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      22: iconst_0
      23: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      26: checkcast     #102                // class java/lang/String
      29: invokevirtual #105                // Method _parsePassiveModeReply:(Ljava/lang/String;)V
      32: iconst_1
      33: ireturn

  public boolean features() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #201                // Method feat:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public java.lang.String featureValue(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #202                // Method featureValues:(Ljava/lang/String;)[Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        14
      10: aload_2
      11: iconst_0
      12: aaload
      13: areturn
      14: aconst_null
      15: areturn

  public java.lang.String[] featureValues(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #203                // Method initFeatureMap:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #204                // Field featuresMap:Ljava/util/HashMap;
      13: aload_1
      14: getstatic     #205                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #206                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokevirtual #207                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #208                // class java/util/Set
      26: astore_2
      27: aload_2
      28: ifnull        44
      31: aload_2
      32: getstatic     #209                // Field org/apache/commons/net/util/NetConstants.EMPTY_STRING_ARRAY:[Ljava/lang/String;
      35: invokeinterface #210,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      40: checkcast     #211                // class "[Ljava/lang/String;"
      43: areturn
      44: aconst_null
      45: areturn

  int getActivePort();
    Code:
       0: aload_0
       1: getfield      #212                // Field activeMinPort:I
       4: ifle          58
       7: aload_0
       8: getfield      #213                // Field activeMaxPort:I
      11: aload_0
      12: getfield      #212                // Field activeMinPort:I
      15: if_icmplt     58
      18: aload_0
      19: getfield      #213                // Field activeMaxPort:I
      22: aload_0
      23: getfield      #212                // Field activeMinPort:I
      26: if_icmpne     34
      29: aload_0
      30: getfield      #213                // Field activeMaxPort:I
      33: ireturn
      34: aload_0
      35: getfield      #39                 // Field random:Ljava/util/Random;
      38: aload_0
      39: getfield      #213                // Field activeMaxPort:I
      42: aload_0
      43: getfield      #212                // Field activeMinPort:I
      46: isub
      47: iconst_1
      48: iadd
      49: invokevirtual #214                // Method java/util/Random.nextInt:(I)I
      52: aload_0
      53: getfield      #212                // Field activeMinPort:I
      56: iadd
      57: ireturn
      58: iconst_0
      59: ireturn

  public boolean getAutodetectUTF8();
    Code:
       0: aload_0
       1: getfield      #43                 // Field autodetectEncoding:Z
       4: ireturn

  private java.io.InputStream getBufferedInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: getfield      #215                // Field bufferSize:I
       4: ifle          20
       7: new           #216                // class java/io/BufferedInputStream
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #215                // Field bufferSize:I
      16: invokespecial #217                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
      19: areturn
      20: new           #216                // class java/io/BufferedInputStream
      23: dup
      24: aload_1
      25: invokespecial #218                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      28: areturn

  private java.io.OutputStream getBufferedOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: getfield      #215                // Field bufferSize:I
       4: ifle          20
       7: new           #219                // class java/io/BufferedOutputStream
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #215                // Field bufferSize:I
      16: invokespecial #220                // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      19: areturn
      20: new           #219                // class java/io/BufferedOutputStream
      23: dup
      24: aload_1
      25: invokespecial #221                // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      28: areturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #215                // Field bufferSize:I
       4: ireturn

  public int getControlKeepAliveReplyTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field controlKeepAliveReplyTimeout:Ljava/time/Duration;
       4: invokestatic  #74                 // Method org/apache/commons/net/ftp/DurationUtils.toMillisInt:(Ljava/time/Duration;)I
       7: ireturn

  public java.time.Duration getControlKeepAliveReplyTimeoutDuration();
    Code:
       0: aload_0
       1: getfield      #16                 // Field controlKeepAliveReplyTimeout:Ljava/time/Duration;
       4: areturn

  public long getControlKeepAliveTimeout();
    Code:
       0: aload_0
       1: getfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
       4: invokevirtual #222                // Method java/time/Duration.getSeconds:()J
       7: lreturn

  public java.time.Duration getControlKeepAliveTimeoutDuration();
    Code:
       0: aload_0
       1: getfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
       4: areturn

  public org.apache.commons.net.io.CopyStreamListener getCopyStreamListener();
    Code:
       0: aload_0
       1: getfield      #223                // Field copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
       4: areturn

  public int[] getCslDebug();
    Code:
       0: aload_0
       1: getfield      #166                // Field cslDebug:[I
       4: areturn

  public int getDataConnectionMode();
    Code:
       0: aload_0
       1: getfield      #71                 // Field dataConnectionMode:I
       4: ireturn

  public java.time.Duration getDataTimeout();
    Code:
       0: aload_0
       1: getfield      #29                 // Field dataTimeout:Ljava/time/Duration;
       4: areturn

  org.apache.commons.net.ftp.FTPFileEntryParser getEntryParser();
    Code:
       0: aload_0
       1: getfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
       4: areturn

  java.net.InetAddress getHostAddress();
    Code:
       0: aload_0
       1: getfield      #224                // Field activeExternalHost:Ljava/net/InetAddress;
       4: ifnull        12
       7: aload_0
       8: getfield      #224                // Field activeExternalHost:Ljava/net/InetAddress;
      11: areturn
      12: aload_0
      13: invokevirtual #225                // Method getLocalAddress:()Ljava/net/InetAddress;
      16: areturn

  protected java.lang.String getListArguments(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #226                // Method getListHiddenFiles:()Z
       4: ifeq          46
       7: aload_1
       8: ifnull        43
      11: new           #6                  // class java/lang/StringBuilder
      14: dup
      15: aload_1
      16: invokevirtual #8                  // Method java/lang/String.length:()I
      19: iconst_3
      20: iadd
      21: invokespecial #227                // Method java/lang/StringBuilder."<init>":(I)V
      24: astore_2
      25: aload_2
      26: ldc           #228                // String -a
      28: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_2
      33: aload_1
      34: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_2
      39: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn
      43: ldc           #229                // String -a
      45: areturn
      46: aload_1
      47: areturn

  public boolean getListHiddenFiles();
    Code:
       0: aload_0
       1: getfield      #35                 // Field listHiddenFiles:Z
       4: ireturn

  public java.lang.String getModificationTime(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #230                // Method mdtm:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          21
      11: aload_0
      12: iconst_0
      13: invokevirtual #231                // Method getReplyString:(I)Ljava/lang/String;
      16: iconst_4
      17: invokevirtual #3                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      20: areturn
      21: aconst_null
      22: areturn

  public java.lang.String getPassiveHost();
    Code:
       0: aload_0
       1: getfield      #111                // Field passiveHost:Ljava/lang/String;
       4: areturn

  public java.net.InetAddress getPassiveLocalIPAddress();
    Code:
       0: aload_0
       1: getfield      #40                 // Field passiveLocalHost:Ljava/net/InetAddress;
       4: areturn

  public int getPassivePort();
    Code:
       0: aload_0
       1: getfield      #112                // Field passivePort:I
       4: ireturn

  public int getReceiveDataSocketBufferSize();
    Code:
       0: aload_0
       1: getfield      #94                 // Field receiveDataSocketBufferSize:I
       4: ireturn

  java.net.InetAddress getReportHostAddress();
    Code:
       0: aload_0
       1: getfield      #232                // Field reportActiveExternalHost:Ljava/net/InetAddress;
       4: ifnull        12
       7: aload_0
       8: getfield      #232                // Field reportActiveExternalHost:Ljava/net/InetAddress;
      11: areturn
      12: aload_0
      13: invokevirtual #77                 // Method getHostAddress:()Ljava/net/InetAddress;
      16: areturn

  public long getRestartOffset();
    Code:
       0: aload_0
       1: getfield      #87                 // Field restartOffset:J
       4: lreturn

  public int getSendDataSocketBufferSize();
    Code:
       0: aload_0
       1: getfield      #96                 // Field sendDataSocketBufferSize:I
       4: ireturn

  public java.lang.String getSize(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #233                // Method size:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          21
      11: aload_0
      12: iconst_0
      13: invokevirtual #231                // Method getReplyString:(I)Ljava/lang/String;
      16: iconst_4
      17: invokevirtual #3                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      20: areturn
      21: aconst_null
      22: areturn

  public java.lang.String getStatus() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #234                // Method stat:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #235                // Method getReplyString:()Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  public java.lang.String getStatus(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #236                // Method stat:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          16
      11: aload_0
      12: invokevirtual #235                // Method getReplyString:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  public java.lang.String getSystemName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #237                // Field systemName:Ljava/lang/String;
       4: ifnonnull     44
       7: aload_0
       8: invokevirtual #238                // Method syst:()I
      11: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      14: ifeq          44
      17: aload_0
      18: aload_0
      19: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      22: aload_0
      23: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      26: invokevirtual #239                // Method java/util/ArrayList.size:()I
      29: iconst_1
      30: isub
      31: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      34: checkcast     #102                // class java/lang/String
      37: iconst_4
      38: invokevirtual #3                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: putfield      #237                // Field systemName:Ljava/lang/String;
      44: aload_0
      45: getfield      #237                // Field systemName:Ljava/lang/String;
      48: areturn

  public java.lang.String getSystemType() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #237                // Field systemName:Ljava/lang/String;
       4: ifnonnull     92
       7: aload_0
       8: invokevirtual #238                // Method syst:()I
      11: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      14: ifeq          47
      17: aload_0
      18: aload_0
      19: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      22: aload_0
      23: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      26: invokevirtual #239                // Method java/util/ArrayList.size:()I
      29: iconst_1
      30: isub
      31: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      34: checkcast     #102                // class java/lang/String
      37: iconst_4
      38: invokevirtual #3                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: putfield      #237                // Field systemName:Ljava/lang/String;
      44: goto          92
      47: ldc           #240                // String org.apache.commons.net.ftp.systemType.default
      49: invokestatic  #22                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      52: astore_1
      53: aload_1
      54: ifnonnull     87
      57: new           #119                // class java/io/IOException
      60: dup
      61: new           #6                  // class java/lang/StringBuilder
      64: dup
      65: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #241                // String Unable to determine system type - response:
      70: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #235                // Method getReplyString:()Ljava/lang/String;
      77: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #124                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_0
      88: aload_1
      89: putfield      #237                // Field systemName:Ljava/lang/String;
      92: aload_0
      93: getfield      #237                // Field systemName:Ljava/lang/String;
      96: areturn

  public boolean hasFeature(org.apache.commons.net.ftp.FTPCmd) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #242                // Method org/apache/commons/net/ftp/FTPCmd.name:()Ljava/lang/String;
       5: invokevirtual #49                 // Method hasFeature:(Ljava/lang/String;)Z
       8: ireturn

  public boolean hasFeature(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #203                // Method initFeatureMap:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #204                // Field featuresMap:Ljava/util/HashMap;
      13: aload_1
      14: getstatic     #205                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #206                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokevirtual #243                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      23: ireturn

  public boolean hasFeature(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #203                // Method initFeatureMap:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #204                // Field featuresMap:Ljava/util/HashMap;
      13: aload_1
      14: getstatic     #205                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #206                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokevirtual #207                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #208                // class java/util/Set
      26: astore_3
      27: aload_3
      28: ifnull        39
      31: aload_3
      32: aload_2
      33: invokeinterface #244,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      38: ireturn
      39: iconst_0
      40: ireturn

  private void initDefaults();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #71                 // Field dataConnectionMode:I
       5: aload_0
       6: aconst_null
       7: putfield      #111                // Field passiveHost:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #112                // Field passivePort:I
      15: aload_0
      16: aconst_null
      17: putfield      #224                // Field activeExternalHost:Ljava/net/InetAddress;
      20: aload_0
      21: aconst_null
      22: putfield      #232                // Field reportActiveExternalHost:Ljava/net/InetAddress;
      25: aload_0
      26: iconst_0
      27: putfield      #212                // Field activeMinPort:I
      30: aload_0
      31: iconst_0
      32: putfield      #213                // Field activeMaxPort:I
      35: aload_0
      36: iconst_0
      37: putfield      #150                // Field fileType:I
      40: aload_0
      41: bipush        7
      43: putfield      #245                // Field fileStructure:I
      46: aload_0
      47: iconst_4
      48: putfield      #246                // Field fileFormat:I
      51: aload_0
      52: bipush        10
      54: putfield      #247                // Field fileTransferMode:I
      57: aload_0
      58: lconst_0
      59: putfield      #87                 // Field restartOffset:J
      62: aload_0
      63: aconst_null
      64: putfield      #237                // Field systemName:Ljava/lang/String;
      67: aload_0
      68: aconst_null
      69: putfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      72: aload_0
      73: ldc           #248                // String
      75: putfield      #188                // Field entryParserKey:Ljava/lang/String;
      78: aload_0
      79: aconst_null
      80: putfield      #204                // Field featuresMap:Ljava/util/HashMap;
      83: return

  private boolean initFeatureMap() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #204                // Field featuresMap:Ljava/util/HashMap;
       4: ifnonnull     174
       7: aload_0
       8: invokevirtual #201                // Method feat:()I
      11: istore_1
      12: iload_1
      13: sipush        530
      16: if_icmpne     21
      19: iconst_0
      20: ireturn
      21: iload_1
      22: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      25: istore_2
      26: aload_0
      27: new           #249                // class java/util/HashMap
      30: dup
      31: invokespecial #250                // Method java/util/HashMap."<init>":()V
      34: putfield      #204                // Field featuresMap:Ljava/util/HashMap;
      37: iload_2
      38: ifne          43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      47: invokevirtual #251                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      50: astore_3
      51: aload_3
      52: invokeinterface #252,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          174
      60: aload_3
      61: invokeinterface #253,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #102                // class java/lang/String
      69: astore        4
      71: aload         4
      73: ldc           #254                // String
      75: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      78: ifeq          171
      81: ldc           #248                // String
      83: astore        6
      85: aload         4
      87: bipush        32
      89: iconst_1
      90: invokevirtual #255                // Method java/lang/String.indexOf:(II)I
      93: istore        7
      95: iload         7
      97: ifle          124
     100: aload         4
     102: iconst_1
     103: iload         7
     105: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;
     108: astore        5
     110: aload         4
     112: iload         7
     114: iconst_1
     115: iadd
     116: invokevirtual #3                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     119: astore        6
     121: goto          132
     124: aload         4
     126: iconst_1
     127: invokevirtual #3                  // Method java/lang/String.substring:(I)Ljava/lang/String;
     130: astore        5
     132: aload         5
     134: getstatic     #205                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     137: invokevirtual #206                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
     140: astore        5
     142: aload_0
     143: getfield      #204                // Field featuresMap:Ljava/util/HashMap;
     146: aload         5
     148: invokedynamic #256,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     153: invokevirtual #257                // Method java/util/HashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     156: checkcast     #208                // class java/util/Set
     159: astore        8
     161: aload         8
     163: aload         6
     165: invokeinterface #258,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     170: pop
     171: goto          51
     174: iconst_1
     175: ireturn

  public org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #102                // class java/lang/String
       5: invokevirtual #259                // Method initiateListParsing:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       8: areturn

  private org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(org.apache.commons.net.ftp.FTPFileEntryParser, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #260                // Field org/apache/commons/net/ftp/FTPCmd.LIST:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_0
       5: aload_2
       6: invokevirtual #261                // Method getListArguments:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #262                // Method _openDataConnection_:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)Ljava/net/Socket;
      12: astore_3
      13: new           #263                // class org/apache/commons/net/ftp/FTPListParseEngine
      16: dup
      17: aload_1
      18: aload_0
      19: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      22: invokespecial #264                // Method org/apache/commons/net/ftp/FTPListParseEngine."<init>":(Lorg/apache/commons/net/ftp/FTPFileEntryParser;Lorg/apache/commons/net/ftp/FTPClientConfig;)V
      25: astore        4
      27: aload_3
      28: ifnonnull     34
      31: aload         4
      33: areturn
      34: aload         4
      36: aload_3
      37: invokevirtual #152                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      40: aload_0
      41: invokevirtual #55                 // Method getControlEncoding:()Ljava/lang/String;
      44: invokevirtual #265                // Method org/apache/commons/net/ftp/FTPListParseEngine.readServerList:(Ljava/io/InputStream;Ljava/lang/String;)V
      47: aload_3
      48: invokestatic  #164                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      51: goto          63
      54: astore        5
      56: aload_3
      57: invokestatic  #164                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      60: aload         5
      62: athrow
      63: aload_0
      64: invokevirtual #163                // Method completePendingCommand:()Z
      67: pop
      68: aload         4
      70: areturn
    Exception table:
       from    to  target type
          34    47    54   any
          54    56    54   any

  public org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #102                // class java/lang/String
       5: aload_1
       6: invokevirtual #266                // Method initiateListParsing:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       9: areturn

  public org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #267                // Method createParser:(Ljava/lang/String;)V
       5: aload_0
       6: aload_0
       7: getfield      #187                // Field entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      10: aload_2
      11: invokespecial #268                // Method initiateListParsing:(Lorg/apache/commons/net/ftp/FTPFileEntryParser;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
      14: areturn

  public org.apache.commons.net.ftp.FTPListParseEngine initiateMListParsing() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #269                // Method initiateMListParsing:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       5: areturn

  public org.apache.commons.net.ftp.FTPListParseEngine initiateMListParsing(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #270                // Field org/apache/commons/net/ftp/FTPCmd.MLSD:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: invokevirtual #262                // Method _openDataConnection_:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)Ljava/net/Socket;
       8: astore_2
       9: new           #263                // class org/apache/commons/net/ftp/FTPListParseEngine
      12: dup
      13: invokestatic  #271                // Method org/apache/commons/net/ftp/parser/MLSxEntryParser.getInstance:()Lorg/apache/commons/net/ftp/parser/MLSxEntryParser;
      16: aload_0
      17: getfield      #34                 // Field configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      20: invokespecial #264                // Method org/apache/commons/net/ftp/FTPListParseEngine."<init>":(Lorg/apache/commons/net/ftp/FTPFileEntryParser;Lorg/apache/commons/net/ftp/FTPClientConfig;)V
      23: astore_3
      24: aload_2
      25: ifnonnull     30
      28: aload_3
      29: areturn
      30: aload_3
      31: aload_2
      32: invokevirtual #152                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      35: aload_0
      36: invokevirtual #55                 // Method getControlEncoding:()Ljava/lang/String;
      39: invokevirtual #265                // Method org/apache/commons/net/ftp/FTPListParseEngine.readServerList:(Ljava/io/InputStream;Ljava/lang/String;)V
      42: aload_2
      43: invokestatic  #164                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      46: aload_0
      47: invokevirtual #163                // Method completePendingCommand:()Z
      50: pop
      51: goto          68
      54: astore        4
      56: aload_2
      57: invokestatic  #164                // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      60: aload_0
      61: invokevirtual #163                // Method completePendingCommand:()Z
      64: pop
      65: aload         4
      67: athrow
      68: aload_3
      69: areturn
    Exception table:
       from    to  target type
          30    42    54   any
          54    56    54   any

  public boolean isIpAddressFromPasvResponse();
    Code:
       0: aload_0
       1: getfield      #24                 // Field ipAddressFromPasvResponse:Z
       4: ireturn

  public boolean isRemoteVerificationEnabled();
    Code:
       0: aload_0
       1: getfield      #30                 // Field remoteVerificationEnabled:Z
       4: ireturn

  public boolean isUseEPSVwithIPv4();
    Code:
       0: aload_0
       1: getfield      #36                 // Field useEPSVwithIPv4:Z
       4: ireturn

  public org.apache.commons.net.ftp.FTPFile[] listDirectories() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #102                // class java/lang/String
       5: invokevirtual #272                // Method listDirectories:(Ljava/lang/String;)[Lorg/apache/commons/net/ftp/FTPFile;
       8: areturn

  public org.apache.commons.net.ftp.FTPFile[] listDirectories(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #273                // Field org/apache/commons/net/ftp/FTPFileFilters.DIRECTORIES:Lorg/apache/commons/net/ftp/FTPFileFilter;
       5: invokevirtual #274                // Method listFiles:(Ljava/lang/String;Lorg/apache/commons/net/ftp/FTPFileFilter;)[Lorg/apache/commons/net/ftp/FTPFile;
       8: areturn

  public org.apache.commons.net.ftp.FTPFile[] listFiles() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #102                // class java/lang/String
       5: invokevirtual #275                // Method listFiles:(Ljava/lang/String;)[Lorg/apache/commons/net/ftp/FTPFile;
       8: areturn

  public org.apache.commons.net.ftp.FTPFile[] listFiles(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #102                // class java/lang/String
       5: aload_1
       6: invokevirtual #266                // Method initiateListParsing:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       9: invokevirtual #276                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:()[Lorg/apache/commons/net/ftp/FTPFile;
      12: areturn

  public org.apache.commons.net.ftp.FTPFile[] listFiles(java.lang.String, org.apache.commons.net.ftp.FTPFileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #102                // class java/lang/String
       5: aload_1
       6: invokevirtual #266                // Method initiateListParsing:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       9: aload_2
      10: invokevirtual #277                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:(Lorg/apache/commons/net/ftp/FTPFileFilter;)[Lorg/apache/commons/net/ftp/FTPFile;
      13: areturn

  public java.lang.String listHelp() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #278                // Method help:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ifeq          17
      10: aload_0
      11: invokevirtual #235                // Method getReplyString:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public java.lang.String listHelp(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #279                // Method help:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          18
      11: aload_0
      12: invokevirtual #235                // Method getReplyString:()Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: areturn

  public java.lang.String[] listNames() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #280                // Method listNames:(Ljava/lang/String;)[Ljava/lang/String;
       5: areturn

  public java.lang.String[] listNames(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #44                 // class java/util/ArrayList
       3: dup
       4: invokespecial #281                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getstatic     #282                // Field org/apache/commons/net/ftp/FTPCmd.NLST:Lorg/apache/commons/net/ftp/FTPCmd;
      12: aload_0
      13: aload_1
      14: invokevirtual #261                // Method getListArguments:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #262                // Method _openDataConnection_:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)Ljava/net/Socket;
      20: astore_3
      21: aconst_null
      22: astore        4
      24: aload_3
      25: ifnonnull     66
      28: aconst_null
      29: astore        5
      31: aload_3
      32: ifnull        63
      35: aload         4
      37: ifnull        59
      40: aload_3
      41: invokevirtual #116                // Method java/net/Socket.close:()V
      44: goto          63
      47: astore        6
      49: aload         4
      51: aload         6
      53: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      56: goto          63
      59: aload_3
      60: invokevirtual #116                // Method java/net/Socket.close:()V
      63: aload         5
      65: areturn
      66: new           #283                // class java/io/BufferedReader
      69: dup
      70: new           #53                 // class java/io/InputStreamReader
      73: dup
      74: aload_3
      75: invokevirtual #152                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      78: aload_0
      79: invokevirtual #55                 // Method getControlEncoding:()Ljava/lang/String;
      82: invokespecial #56                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      85: invokespecial #284                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      88: astore        5
      90: aconst_null
      91: astore        6
      93: aload         5
      95: invokevirtual #285                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      98: dup
      99: astore        7
     101: ifnull        114
     104: aload_2
     105: aload         7
     107: invokevirtual #286                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     110: pop
     111: goto          93
     114: aload         5
     116: ifnull        201
     119: aload         6
     121: ifnull        144
     124: aload         5
     126: invokevirtual #287                // Method java/io/BufferedReader.close:()V
     129: goto          201
     132: astore        7
     134: aload         6
     136: aload         7
     138: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     141: goto          201
     144: aload         5
     146: invokevirtual #287                // Method java/io/BufferedReader.close:()V
     149: goto          201
     152: astore        7
     154: aload         7
     156: astore        6
     158: aload         7
     160: athrow
     161: astore        8
     163: aload         5
     165: ifnull        198
     168: aload         6
     170: ifnull        193
     173: aload         5
     175: invokevirtual #287                // Method java/io/BufferedReader.close:()V
     178: goto          198
     181: astore        9
     183: aload         6
     185: aload         9
     187: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     190: goto          198
     193: aload         5
     195: invokevirtual #287                // Method java/io/BufferedReader.close:()V
     198: aload         8
     200: athrow
     201: aload_3
     202: ifnull        282
     205: aload         4
     207: ifnull        229
     210: aload_3
     211: invokevirtual #116                // Method java/net/Socket.close:()V
     214: goto          282
     217: astore        5
     219: aload         4
     221: aload         5
     223: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     226: goto          282
     229: aload_3
     230: invokevirtual #116                // Method java/net/Socket.close:()V
     233: goto          282
     236: astore        5
     238: aload         5
     240: astore        4
     242: aload         5
     244: athrow
     245: astore        10
     247: aload_3
     248: ifnull        279
     251: aload         4
     253: ifnull        275
     256: aload_3
     257: invokevirtual #116                // Method java/net/Socket.close:()V
     260: goto          279
     263: astore        11
     265: aload         4
     267: aload         11
     269: invokevirtual #85                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     272: goto          279
     275: aload_3
     276: invokevirtual #116                // Method java/net/Socket.close:()V
     279: aload         10
     281: athrow
     282: aload_0
     283: invokevirtual #163                // Method completePendingCommand:()Z
     286: ifeq          300
     289: aload_2
     290: getstatic     #209                // Field org/apache/commons/net/util/NetConstants.EMPTY_STRING_ARRAY:[Ljava/lang/String;
     293: invokevirtual #288                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     296: checkcast     #211                // class "[Ljava/lang/String;"
     299: areturn
     300: aconst_null
     301: areturn
    Exception table:
       from    to  target type
          40    44    47   Class java/lang/Throwable
         124   129   132   Class java/lang/Throwable
          93   114   152   Class java/lang/Throwable
          93   114   161   any
         173   178   181   Class java/lang/Throwable
         152   163   161   any
         210   214   217   Class java/lang/Throwable
          24    31   236   Class java/lang/Throwable
          66   201   236   Class java/lang/Throwable
          24    31   245   any
          66   201   245   any
         256   260   263   Class java/lang/Throwable
         236   247   245   any

  public boolean login(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #289                // Method user:(Ljava/lang/String;)I
       5: pop
       6: aload_0
       7: getfield      #47                 // Field _replyCode:I
      10: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: getfield      #47                 // Field _replyCode:I
      22: invokestatic  #290                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: aload_2
      32: invokevirtual #291                // Method pass:(Ljava/lang/String;)I
      35: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      38: ireturn

  public boolean login(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #289                // Method user:(Ljava/lang/String;)I
       5: pop
       6: aload_0
       7: getfield      #47                 // Field _replyCode:I
      10: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: getfield      #47                 // Field _replyCode:I
      22: invokestatic  #290                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: aload_2
      32: invokevirtual #291                // Method pass:(Ljava/lang/String;)I
      35: pop
      36: aload_0
      37: getfield      #47                 // Field _replyCode:I
      40: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: aload_0
      49: getfield      #47                 // Field _replyCode:I
      52: invokestatic  #290                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      55: ifne          60
      58: iconst_0
      59: ireturn
      60: aload_0
      61: aload_3
      62: invokevirtual #292                // Method acct:(Ljava/lang/String;)I
      65: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      68: ireturn

  public boolean logout() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #293                // Method quit:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean makeDirectory(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #294                // Method mkd:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public java.util.Calendar mdtmCalendar(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #295                // Method getModificationTime:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        15
      10: aload_2
      11: invokestatic  #296                // Method org/apache/commons/net/ftp/parser/MLSxEntryParser.parseGMTdateTime:(Ljava/lang/String;)Ljava/util/Calendar;
      14: areturn
      15: aconst_null
      16: areturn

  public org.apache.commons.net.ftp.FTPFile mdtmFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #295                // Method getModificationTime:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        38
      10: new           #297                // class org/apache/commons/net/ftp/FTPFile
      13: dup
      14: invokespecial #298                // Method org/apache/commons/net/ftp/FTPFile."<init>":()V
      17: astore_3
      18: aload_3
      19: aload_1
      20: invokevirtual #299                // Method org/apache/commons/net/ftp/FTPFile.setName:(Ljava/lang/String;)V
      23: aload_3
      24: aload_2
      25: invokevirtual #300                // Method org/apache/commons/net/ftp/FTPFile.setRawListing:(Ljava/lang/String;)V
      28: aload_3
      29: aload_2
      30: invokestatic  #296                // Method org/apache/commons/net/ftp/parser/MLSxEntryParser.parseGMTdateTime:(Ljava/lang/String;)Ljava/util/Calendar;
      33: invokevirtual #301                // Method org/apache/commons/net/ftp/FTPFile.setTimestamp:(Ljava/util/Calendar;)V
      36: aload_3
      37: areturn
      38: aconst_null
      39: areturn

  public java.time.Instant mdtmInstant(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #295                // Method getModificationTime:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        15
      10: aload_2
      11: invokestatic  #302                // Method org/apache/commons/net/ftp/parser/MLSxEntryParser.parseGmtInstant:(Ljava/lang/String;)Ljava/time/Instant;
      14: areturn
      15: aconst_null
      16: areturn

  private org.apache.commons.net.io.CopyStreamListener mergeListeners(org.apache.commons.net.io.CopyStreamListener);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: getfield      #223                // Field copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
       8: areturn
       9: aload_0
      10: getfield      #223                // Field copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
      13: ifnonnull     18
      16: aload_1
      17: areturn
      18: new           #303                // class org/apache/commons/net/io/CopyStreamAdapter
      21: dup
      22: invokespecial #304                // Method org/apache/commons/net/io/CopyStreamAdapter."<init>":()V
      25: astore_2
      26: aload_2
      27: aload_1
      28: invokevirtual #305                // Method org/apache/commons/net/io/CopyStreamAdapter.addCopyStreamListener:(Lorg/apache/commons/net/io/CopyStreamListener;)V
      31: aload_2
      32: aload_0
      33: getfield      #223                // Field copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
      36: invokevirtual #305                // Method org/apache/commons/net/io/CopyStreamAdapter.addCopyStreamListener:(Lorg/apache/commons/net/io/CopyStreamListener;)V
      39: aload_2
      40: areturn

  public org.apache.commons.net.ftp.FTPFile[] mlistDir() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #306                // Method mlistDir:(Ljava/lang/String;)[Lorg/apache/commons/net/ftp/FTPFile;
       5: areturn

  public org.apache.commons.net.ftp.FTPFile[] mlistDir(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #269                // Method initiateMListParsing:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       5: invokevirtual #276                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:()[Lorg/apache/commons/net/ftp/FTPFile;
       8: areturn

  public org.apache.commons.net.ftp.FTPFile[] mlistDir(java.lang.String, org.apache.commons.net.ftp.FTPFileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #269                // Method initiateMListParsing:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       5: aload_2
       6: invokevirtual #277                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:(Lorg/apache/commons/net/ftp/FTPFileFilter;)[Lorg/apache/commons/net/ftp/FTPFile;
       9: areturn

  public org.apache.commons.net.ftp.FTPFile mlistFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #307                // Field org/apache/commons/net/ftp/FTPCmd.MLST:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: invokevirtual #308                // Method sendCommand:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)I
       8: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      11: istore_2
      12: iload_2
      13: ifeq          111
      16: aload_0
      17: iconst_1
      18: invokevirtual #231                // Method getReplyString:(I)Ljava/lang/String;
      21: astore_3
      22: aload_3
      23: iconst_0
      24: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      27: bipush        32
      29: if_icmpeq     52
      32: new           #6                  // class java/lang/StringBuilder
      35: dup
      36: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #254                // String
      41: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_3
      45: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: astore_3
      52: aload_3
      53: invokevirtual #8                  // Method java/lang/String.length:()I
      56: iconst_3
      57: if_icmpge     94
      60: new           #128                // class org/apache/commons/net/MalformedServerReplyException
      63: dup
      64: new           #6                  // class java/lang/StringBuilder
      67: dup
      68: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      71: ldc_w         #309                // String Invalid server reply (MLST): \'
      74: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_3
      78: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc_w         #310                // String \'
      84: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #130                // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_3
      95: ldc_w         #311                // String ^\\s+
      98: ldc           #248                // String
     100: invokevirtual #312                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     103: astore        4
     105: aload         4
     107: invokestatic  #313                // Method org/apache/commons/net/ftp/parser/MLSxEntryParser.parseEntry:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPFile;
     110: areturn
     111: aconst_null
     112: areturn

  public java.lang.String printWorkingDirectory() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #314                // Method pwd:()I
       4: sipush        257
       7: if_icmpeq     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      16: aload_0
      17: getfield      #45                 // Field _replyLines:Ljava/util/ArrayList;
      20: invokevirtual #239                // Method java/util/ArrayList.size:()I
      23: iconst_1
      24: isub
      25: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      28: checkcast     #102                // class java/lang/String
      31: invokestatic  #315                // Method parsePathname:(Ljava/lang/String;)Ljava/lang/String;
      34: areturn

  public boolean reinitialize() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #316                // Method rein:()I
       4: pop
       5: aload_0
       6: getfield      #47                 // Field _replyCode:I
       9: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      12: ifne          35
      15: aload_0
      16: getfield      #47                 // Field _replyCode:I
      19: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      22: ifeq          41
      25: aload_0
      26: invokevirtual #186                // Method getReply:()I
      29: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      32: ifeq          41
      35: aload_0
      36: invokespecial #25                 // Method initDefaults:()V
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public boolean remoteAppend(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #71                 // Field dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #317                // Method appe:(Ljava/lang/String;)I
      21: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean remoteRetrieve(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #71                 // Field dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #318                // Method retr:(Ljava/lang/String;)I
      21: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean remoteStore(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #71                 // Field dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #319                // Method stor:(Ljava/lang/String;)I
      21: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean remoteStoreUnique() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #71                 // Field dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     24
      16: aload_0
      17: invokevirtual #320                // Method stou:()I
      20: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public boolean remoteStoreUnique(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #71                 // Field dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #321                // Method stou:(Ljava/lang/String;)I
      21: invokestatic  #90                 // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean removeDirectory(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #322                // Method rmd:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean rename(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #323                // Method rnfr:(Ljava/lang/String;)I
       5: invokestatic  #290                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: aload_2
      15: invokevirtual #324                // Method rnto:(Ljava/lang/String;)I
      18: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      21: ireturn

  protected boolean restart(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #87                 // Field restartOffset:J
       5: aload_0
       6: lload_1
       7: invokestatic  #325                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      10: invokevirtual #326                // Method rest:(Ljava/lang/String;)I
      13: invokestatic  #290                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      16: ireturn

  public boolean retrieveFile(java.lang.String, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #327                // Field org/apache/commons/net/ftp/FTPCmd.RETR:Lorg/apache/commons/net/ftp/FTPCmd;
       4: invokevirtual #68                 // Method org/apache/commons/net/ftp/FTPCmd.getCommand:()Ljava/lang/String;
       7: aload_1
       8: aload_2
       9: invokevirtual #328                // Method _retrieveFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/OutputStream;)Z
      12: ireturn

  public java.io.InputStream retrieveFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #327                // Field org/apache/commons/net/ftp/FTPCmd.RETR:Lorg/apache/commons/net/ftp/FTPCmd;
       4: invokevirtual #68                 // Method org/apache/commons/net/ftp/FTPCmd.getCommand:()Ljava/lang/String;
       7: aload_1
       8: invokevirtual #329                // Method _retrieveFileStream:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;
      11: areturn

  public boolean sendNoOp() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #330                // Method noop:()I
       4: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean sendSiteCommand(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #331                // Method site:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public void setActiveExternalIPAddress(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #332                // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       5: putfield      #224                // Field activeExternalHost:Ljava/net/InetAddress;
       8: return

  public void setActivePortRange(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #212                // Field activeMinPort:I
       5: aload_0
       6: iload_2
       7: putfield      #213                // Field activeMaxPort:I
      10: return

  public void setAutodetectUTF8(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field autodetectEncoding:Z
       5: return

  public void setBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #215                // Field bufferSize:I
       5: return

  public void setControlKeepAliveReplyTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // Method org/apache/commons/net/ftp/DurationUtils.zeroIfNull:(Ljava/time/Duration;)Ljava/time/Duration;
       5: putfield      #16                 // Field controlKeepAliveReplyTimeout:Ljava/time/Duration;
       8: return

  public void setControlKeepAliveReplyTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokestatic  #28                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
       6: putfield      #16                 // Field controlKeepAliveReplyTimeout:Ljava/time/Duration;
       9: return

  public void setControlKeepAliveTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // Method org/apache/commons/net/ftp/DurationUtils.zeroIfNull:(Ljava/time/Duration;)Ljava/time/Duration;
       5: putfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
       8: return

  public void setControlKeepAliveTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #15                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
       5: putfield      #14                 // Field controlKeepAliveTimeout:Ljava/time/Duration;
       8: return

  public void setCopyStreamListener(org.apache.commons.net.io.CopyStreamListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #223                // Field copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
       5: return

  public void setDataTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // Method org/apache/commons/net/ftp/DurationUtils.zeroIfNull:(Ljava/time/Duration;)Ljava/time/Duration;
       5: putfield      #29                 // Field dataTimeout:Ljava/time/Duration;
       8: return

  public void setDataTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokestatic  #28                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
       6: putfield      #29                 // Field dataTimeout:Ljava/time/Duration;
       9: return

  public boolean setFileStructure(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #334                // Method stru:(I)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          18
      11: aload_0
      12: iload_1
      13: putfield      #245                // Field fileStructure:I
      16: iconst_1
      17: ireturn
      18: iconst_0
      19: ireturn

  public boolean setFileTransferMode(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #335                // Method mode:(I)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          18
      11: aload_0
      12: iload_1
      13: putfield      #247                // Field fileTransferMode:I
      16: iconst_1
      17: ireturn
      18: iconst_0
      19: ireturn

  public boolean setFileType(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #336                // Method type:(I)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          23
      11: aload_0
      12: iload_1
      13: putfield      #150                // Field fileType:I
      16: aload_0
      17: iconst_4
      18: putfield      #246                // Field fileFormat:I
      21: iconst_1
      22: ireturn
      23: iconst_0
      24: ireturn

  public boolean setFileType(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #337                // Method type:(II)I
       6: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ifeq          24
      12: aload_0
      13: iload_1
      14: putfield      #150                // Field fileType:I
      17: aload_0
      18: iload_2
      19: putfield      #246                // Field fileFormat:I
      22: iconst_1
      23: ireturn
      24: iconst_0
      25: ireturn

  public void setIpAddressFromPasvResponse(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field ipAddressFromPasvResponse:Z
       5: return

  public void setListHiddenFiles(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field listHiddenFiles:Z
       5: return

  public boolean setModificationTime(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #338                // Method mfmt:(Ljava/lang/String;Ljava/lang/String;)I
       6: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ireturn

  public void setParserFactory(org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
       5: return

  public void setPassiveLocalIPAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field passiveLocalHost:Ljava/net/InetAddress;
       5: return

  public void setPassiveLocalIPAddress(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #332                // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       5: putfield      #40                 // Field passiveLocalHost:Ljava/net/InetAddress;
       8: return

  public void setPassiveNatWorkaround(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          16
       5: new           #17                 // class org/apache/commons/net/ftp/FTPClient$NatServerResolverImpl
       8: dup
       9: aload_0
      10: invokespecial #18                 // Method org/apache/commons/net/ftp/FTPClient$NatServerResolverImpl."<init>":(Lorg/apache/commons/net/ftp/FTPClient;)V
      13: goto          17
      16: aconst_null
      17: putfield      #19                 // Field passiveNatWorkaroundStrategy:Lorg/apache/commons/net/ftp/FTPClient$HostnameResolver;
      20: return

  public void setPassiveNatWorkaroundStrategy(org.apache.commons.net.ftp.FTPClient$HostnameResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field passiveNatWorkaroundStrategy:Lorg/apache/commons/net/ftp/FTPClient$HostnameResolver;
       5: return

  public void setReceieveDataSocketBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #94                 // Field receiveDataSocketBufferSize:I
       5: return

  public void setRemoteVerificationEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field remoteVerificationEnabled:Z
       5: return

  public void setReportActiveExternalIPAddress(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #332                // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       5: putfield      #232                // Field reportActiveExternalHost:Ljava/net/InetAddress;
       8: return

  public void setRestartOffset(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          11
       6: aload_0
       7: lload_1
       8: putfield      #87                 // Field restartOffset:J
      11: return

  public void setSendDataSocketBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #96                 // Field sendDataSocketBufferSize:I
       5: return

  public void setUseEPSVwithIPv4(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field useEPSVwithIPv4:Z
       5: return

  private boolean storeFile(org.apache.commons.net.ftp.FTPCmd, java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method org/apache/commons/net/ftp/FTPCmd.getCommand:()Ljava/lang/String;
       5: aload_2
       6: aload_3
       7: invokevirtual #339                // Method _storeFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)Z
      10: ireturn

  public boolean storeFile(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #340                // Field org/apache/commons/net/ftp/FTPCmd.STOR:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: aload_2
       6: invokespecial #182                // Method storeFile:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;Ljava/io/InputStream;)Z
       9: ireturn

  private java.io.OutputStream storeFileStream(org.apache.commons.net.ftp.FTPCmd, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method org/apache/commons/net/ftp/FTPCmd.getCommand:()Ljava/lang/String;
       5: aload_2
       6: invokevirtual #341                // Method _storeFileStream:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/OutputStream;
       9: areturn

  public java.io.OutputStream storeFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #340                // Field org/apache/commons/net/ftp/FTPCmd.STOR:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: invokespecial #183                // Method storeFileStream:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)Ljava/io/OutputStream;
       8: areturn

  public boolean storeUniqueFile(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #342                // Field org/apache/commons/net/ftp/FTPCmd.STOU:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aconst_null
       5: aload_1
       6: invokespecial #182                // Method storeFile:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;Ljava/io/InputStream;)Z
       9: ireturn

  public boolean storeUniqueFile(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #342                // Field org/apache/commons/net/ftp/FTPCmd.STOU:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: aload_2
       6: invokespecial #182                // Method storeFile:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;Ljava/io/InputStream;)Z
       9: ireturn

  public java.io.OutputStream storeUniqueFileStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #342                // Field org/apache/commons/net/ftp/FTPCmd.STOU:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aconst_null
       5: invokespecial #183                // Method storeFileStream:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)Ljava/io/OutputStream;
       8: areturn

  public java.io.OutputStream storeUniqueFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #342                // Field org/apache/commons/net/ftp/FTPCmd.STOU:Lorg/apache/commons/net/ftp/FTPCmd;
       4: aload_1
       5: invokespecial #183                // Method storeFileStream:(Lorg/apache/commons/net/ftp/FTPCmd;Ljava/lang/String;)Ljava/io/OutputStream;
       8: areturn

  public boolean structureMount(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #343                // Method smnt:(Ljava/lang/String;)I
       5: invokestatic  #82                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  private static java.util.Set lambda$initFeatureMap$0(java.lang.String);
    Code:
       0: new           #344                // class java/util/HashSet
       3: dup
       4: invokespecial #345                // Method java/util/HashSet."<init>":()V
       7: areturn

  static {};
    Code:
       0: ldc_w         #346                // String (\\d{1,3},\\d{1,3},\\d{1,3},\\d{1,3}),(\\d{1,3}),(\\d{1,3})
       3: invokestatic  #347                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       6: putstatic     #133                // Field PARMS_PAT:Ljava/util/regex/Pattern;
       9: return
}
