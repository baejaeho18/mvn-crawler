Compiled from "TelnetClient.java"
public class org.apache.commons.net.telnet.TelnetClient extends org.apache.commons.net.telnet.Telnet {
  private static final int DEFAULT_MAX_SUBNEGOTIATION_LENGTH;

  final int maxSubnegotiationLength;

  private java.io.InputStream input;

  private java.io.OutputStream output;

  protected boolean readerThread;

  private org.apache.commons.net.telnet.TelnetInputListener inputListener;

  public org.apache.commons.net.telnet.TelnetClient();
    Code:
       0: aload_0
       1: ldc           #1                  // String VT100
       3: sipush        512
       6: invokespecial #3                  // Method "<init>":(Ljava/lang/String;I)V
       9: return

  public org.apache.commons.net.telnet.TelnetClient(int);
    Code:
       0: aload_0
       1: ldc           #1                  // String VT100
       3: iload_1
       4: invokespecial #3                  // Method "<init>":(Ljava/lang/String;I)V
       7: return

  public org.apache.commons.net.telnet.TelnetClient(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        512
       5: invokespecial #3                  // Method "<init>":(Ljava/lang/String;I)V
       8: return

  public org.apache.commons.net.telnet.TelnetClient(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/commons/net/telnet/Telnet."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_1
       7: putfield      #5                  // Field readerThread:Z
      10: aload_0
      11: aconst_null
      12: putfield      #6                  // Field input:Ljava/io/InputStream;
      15: aload_0
      16: aconst_null
      17: putfield      #7                  // Field output:Ljava/io/OutputStream;
      20: aload_0
      21: iload_2
      22: putfield      #8                  // Field maxSubnegotiationLength:I
      25: return

  protected void _connectAction_() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/apache/commons/net/telnet/Telnet._connectAction_:()V
       4: new           #10                 // class org/apache/commons/net/telnet/TelnetInputStream
       7: dup
       8: aload_0
       9: getfield      #11                 // Field _input_:Ljava/io/InputStream;
      12: aload_0
      13: aload_0
      14: getfield      #5                  // Field readerThread:Z
      17: invokespecial #12                 // Method org/apache/commons/net/telnet/TelnetInputStream."<init>":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V
      20: astore_1
      21: aload_0
      22: getfield      #5                  // Field readerThread:Z
      25: ifeq          32
      28: aload_1
      29: invokevirtual #13                 // Method org/apache/commons/net/telnet/TelnetInputStream.start:()V
      32: aload_0
      33: new           #14                 // class java/io/BufferedInputStream
      36: dup
      37: aload_1
      38: invokespecial #15                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      41: putfield      #6                  // Field input:Ljava/io/InputStream;
      44: aload_0
      45: new           #16                 // class org/apache/commons/net/telnet/TelnetOutputStream
      48: dup
      49: aload_0
      50: invokespecial #17                 // Method org/apache/commons/net/telnet/TelnetOutputStream."<init>":(Lorg/apache/commons/net/telnet/TelnetClient;)V
      53: putfield      #7                  // Field output:Ljava/io/OutputStream;
      56: return

  public void addOptionHandler(org.apache.commons.net.telnet.TelnetOptionHandler) throws org.apache.commons.net.telnet.InvalidTelnetOptionException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/apache/commons/net/telnet/Telnet.addOptionHandler:(Lorg/apache/commons/net/telnet/TelnetOptionHandler;)V
       5: return

  void closeOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field _output_:Ljava/io/OutputStream;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #19                 // Field _output_:Ljava/io/OutputStream;
      12: invokevirtual #20                 // Method java/io/OutputStream.close:()V
      15: aload_0
      16: aconst_null
      17: putfield      #19                 // Field _output_:Ljava/io/OutputStream;
      20: goto          31
      23: astore_1
      24: aload_0
      25: aconst_null
      26: putfield      #19                 // Field _output_:Ljava/io/OutputStream;
      29: aload_1
      30: athrow
      31: return
    Exception table:
       from    to  target type
           8    15    23   any

  public void deleteOptionHandler(int) throws org.apache.commons.net.telnet.InvalidTelnetOptionException, java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #21                 // Method org/apache/commons/net/telnet/Telnet.deleteOptionHandler:(I)V
       5: return

  public void disconnect() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field input:Ljava/io/InputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #6                  // Field input:Ljava/io/InputStream;
      11: invokevirtual #22                 // Method java/io/InputStream.close:()V
      14: aload_0
      15: getfield      #7                  // Field output:Ljava/io/OutputStream;
      18: ifnull        28
      21: aload_0
      22: getfield      #7                  // Field output:Ljava/io/OutputStream;
      25: invokevirtual #20                 // Method java/io/OutputStream.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #7                  // Field output:Ljava/io/OutputStream;
      33: aload_0
      34: aconst_null
      35: putfield      #6                  // Field input:Ljava/io/InputStream;
      38: aload_0
      39: invokespecial #23                 // Method org/apache/commons/net/telnet/Telnet.disconnect:()V
      42: goto          62
      45: astore_1
      46: aload_0
      47: aconst_null
      48: putfield      #7                  // Field output:Ljava/io/OutputStream;
      51: aload_0
      52: aconst_null
      53: putfield      #6                  // Field input:Ljava/io/InputStream;
      56: aload_0
      57: invokespecial #23                 // Method org/apache/commons/net/telnet/Telnet.disconnect:()V
      60: aload_1
      61: athrow
      62: return
    Exception table:
       from    to  target type
           0    28    45   any

  void flushOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field _output_:Ljava/io/OutputStream;
       4: ifnonnull     17
       7: new           #24                 // class java/io/IOException
      10: dup
      11: ldc           #25                 // String Stream closed
      13: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #19                 // Field _output_:Ljava/io/OutputStream;
      21: invokevirtual #27                 // Method java/io/OutputStream.flush:()V
      24: return

  public java.io.InputStream getInputStream();
    Code:
       0: aload_0
       1: getfield      #6                  // Field input:Ljava/io/InputStream;
       4: areturn

  public boolean getLocalOptionState(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #28                 // Method stateIsWill:(I)Z
       5: ifeq          20
       8: aload_0
       9: iload_1
      10: invokevirtual #29                 // Method requestedWill:(I)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #7                  // Field output:Ljava/io/OutputStream;
       4: areturn

  public boolean getReaderThread();
    Code:
       0: aload_0
       1: getfield      #5                  // Field readerThread:Z
       4: ireturn

  public boolean getRemoteOptionState(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #30                 // Method stateIsDo:(I)Z
       5: ifeq          20
       8: aload_0
       9: iload_1
      10: invokevirtual #31                 // Method requestedDo:(I)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  void notifyInputListener();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #32                 // Field inputListener:Lorg/apache/commons/net/telnet/TelnetInputListener;
       8: astore_1
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: aload_1
      20: ifnull        29
      23: aload_1
      24: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/net/telnet/TelnetInputListener.telnetInputAvailable:()V
      29: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public synchronized void registerInputListener(org.apache.commons.net.telnet.TelnetInputListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field inputListener:Lorg/apache/commons/net/telnet/TelnetInputListener;
       5: return

  public void registerNotifHandler(org.apache.commons.net.telnet.TelnetNotificationHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method org/apache/commons/net/telnet/Telnet.registerNotifHandler:(Lorg/apache/commons/net/telnet/TelnetNotificationHandler;)V
       5: return

  public void registerSpyStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method org/apache/commons/net/telnet/Telnet._registerSpyStream:(Ljava/io/OutputStream;)V
       5: return

  public boolean sendAYT(long) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #36                 // Method _sendAYT:(J)Z
       5: ireturn

  public void sendCommand(byte) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #37                 // Method _sendCommand:(B)V
       5: return

  public void sendSubnegotiation(int[]) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: if_icmpge     16
       6: new           #38                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #39                 // String zero length message
      12: invokespecial #40                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #41                 // Method _sendSubnegotiation:([I)V
      21: return

  public void setReaderThread(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field readerThread:Z
       5: return

  public void stopSpyStream();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/apache/commons/net/telnet/Telnet._stopSpyStream:()V
       4: return

  public synchronized void unregisterInputListener();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #32                 // Field inputListener:Lorg/apache/commons/net/telnet/TelnetInputListener;
       5: return

  public void unregisterNotifHandler();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method org/apache/commons/net/telnet/Telnet.unregisterNotifHandler:()V
       4: return
}
