Compiled from "DefaultJOSEObjectTypeVerifier.java"
public class com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier<C extends com.nimbusds.jose.proc.SecurityContext> implements com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C> {
  private final java.util.Set<com.nimbusds.jose.JOSEObjectType> allowedTypes;

  public static final com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier JOSE;

  public static final com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier JWT;

  public com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: invokestatic  #25                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       9: putfield      #27                 // Field allowedTypes:Ljava/util/Set;
      12: return

  public com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier(java.util.Set<com.nimbusds.jose.JOSEObjectType>);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        17
       8: aload_1
       9: invokeinterface #37,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      14: ifeq          27
      17: new           #39                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #41                 // String The allowed types must not be null or empty
      23: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: aload_1
      29: putfield      #27                 // Field allowedTypes:Ljava/util/Set;
      32: return

  public com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier(com.nimbusds.jose.JOSEObjectType...);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        13
       8: aload_1
       9: arraylength
      10: ifne          23
      13: new           #39                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #41                 // String The allowed types must not be null or empty
      19: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: new           #49                 // class java/util/HashSet
      27: dup
      28: aload_1
      29: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      32: invokespecial #58                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      35: putfield      #27                 // Field allowedTypes:Ljava/util/Set;
      38: return

  public java.util.Set<com.nimbusds.jose.JOSEObjectType> getAllowedTypes();
    Code:
       0: aload_0
       1: getfield      #27                 // Field allowedTypes:Ljava/util/Set;
       4: areturn

  public void verify(com.nimbusds.jose.JOSEObjectType, C) throws com.nimbusds.jose.proc.BadJOSEException;
    Code:
       0: aload_1
       1: ifnonnull     27
       4: aload_0
       5: getfield      #27                 // Field allowedTypes:Ljava/util/Set;
       8: aconst_null
       9: invokeinterface #70,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      14: ifne          27
      17: new           #66                 // class com/nimbusds/jose/proc/BadJOSEException
      20: dup
      21: ldc           #72                 // String Required JOSE header \"typ\" (type) parameter is missing
      23: invokespecial #73                 // Method com/nimbusds/jose/proc/BadJOSEException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #27                 // Field allowedTypes:Ljava/util/Set;
      31: aload_1
      32: invokeinterface #70,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      37: ifne          72
      40: new           #66                 // class com/nimbusds/jose/proc/BadJOSEException
      43: dup
      44: new           #75                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #78                 // String JOSE header \"typ\" (type) \"
      53: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #87                 // String \" not allowed
      62: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #73                 // Method com/nimbusds/jose/proc/BadJOSEException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  static {};
    Code:
       0: new           #2                  // class com/nimbusds/jose/proc/DefaultJOSEObjectTypeVerifier
       3: dup
       4: iconst_2
       5: anewarray     #99                 // class com/nimbusds/jose/JOSEObjectType
       8: dup
       9: iconst_0
      10: getstatic     #101                // Field com/nimbusds/jose/JOSEObjectType.JOSE:Lcom/nimbusds/jose/JOSEObjectType;
      13: aastore
      14: dup
      15: iconst_1
      16: aconst_null
      17: aastore
      18: invokespecial #103                // Method "<init>":([Lcom/nimbusds/jose/JOSEObjectType;)V
      21: putstatic     #105                // Field JOSE:Lcom/nimbusds/jose/proc/DefaultJOSEObjectTypeVerifier;
      24: new           #2                  // class com/nimbusds/jose/proc/DefaultJOSEObjectTypeVerifier
      27: dup
      28: iconst_2
      29: anewarray     #99                 // class com/nimbusds/jose/JOSEObjectType
      32: dup
      33: iconst_0
      34: getstatic     #107                // Field com/nimbusds/jose/JOSEObjectType.JWT:Lcom/nimbusds/jose/JOSEObjectType;
      37: aastore
      38: dup
      39: iconst_1
      40: aconst_null
      41: aastore
      42: invokespecial #103                // Method "<init>":([Lcom/nimbusds/jose/JOSEObjectType;)V
      45: putstatic     #109                // Field JWT:Lcom/nimbusds/jose/proc/DefaultJOSEObjectTypeVerifier;
      48: return
}
