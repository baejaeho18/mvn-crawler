Compiled from "MACSigner.java"
public class com.nimbusds.jose.crypto.MACSigner extends com.nimbusds.jose.crypto.impl.MACProvider implements com.nimbusds.jose.JWSSigner {
  public static int getMinRequiredSecretLength(com.nimbusds.jose.JWSAlgorithm) throws com.nimbusds.jose.JOSEException;
    Code:
       0: getstatic     #18                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
       3: aload_0
       4: invokevirtual #22                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: sipush        256
      13: ireturn
      14: getstatic     #25                 // Field com/nimbusds/jose/JWSAlgorithm.HS384:Lcom/nimbusds/jose/JWSAlgorithm;
      17: aload_0
      18: invokevirtual #22                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: sipush        384
      27: ireturn
      28: getstatic     #28                 // Field com/nimbusds/jose/JWSAlgorithm.HS512:Lcom/nimbusds/jose/JWSAlgorithm;
      31: aload_0
      32: invokevirtual #22                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: sipush        512
      41: ireturn
      42: new           #12                 // class com/nimbusds/jose/JOSEException
      45: dup
      46: aload_0
      47: getstatic     #32                 // Field SUPPORTED_ALGORITHMS:Ljava/util/Set;
      50: invokestatic  #38                 // Method com/nimbusds/jose/crypto/impl/AlgorithmSupportMessage.unsupportedJWSAlgorithm:(Lcom/nimbusds/jose/JWSAlgorithm;Ljava/util/Collection;)Ljava/lang/String;
      53: invokespecial #42                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      56: athrow

  public static java.util.Set<com.nimbusds.jose.JWSAlgorithm> getCompatibleAlgorithms(int);
    Code:
       0: new           #48                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #51                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: iload_0
       9: sipush        256
      12: if_icmplt     25
      15: aload_1
      16: getstatic     #18                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
      19: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: iload_0
      26: sipush        384
      29: if_icmplt     42
      32: aload_1
      33: getstatic     #25                 // Field com/nimbusds/jose/JWSAlgorithm.HS384:Lcom/nimbusds/jose/JWSAlgorithm;
      36: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      41: pop
      42: iload_0
      43: sipush        512
      46: if_icmplt     59
      49: aload_1
      50: getstatic     #28                 // Field com/nimbusds/jose/JWSAlgorithm.HS512:Lcom/nimbusds/jose/JWSAlgorithm;
      53: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: invokestatic  #62                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      63: areturn

  public com.nimbusds.jose.crypto.MACSigner(byte[]) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: arraylength
       4: invokestatic  #75                 // Method com/nimbusds/jose/util/ByteUtils.bitLength:(I)I
       7: invokestatic  #77                 // Method getCompatibleAlgorithms:(I)Ljava/util/Set;
      10: invokespecial #80                 // Method com/nimbusds/jose/crypto/impl/MACProvider."<init>":([BLjava/util/Set;)V
      13: return

  public com.nimbusds.jose.crypto.MACSigner(java.lang.String) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #90                 // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #96                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: invokespecial #98                 // Method "<init>":([B)V
      11: return

  public com.nimbusds.jose.crypto.MACSigner(javax.crypto.SecretKey) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #107,  1          // InterfaceMethod javax/crypto/SecretKey.getEncoded:()[B
       7: invokespecial #98                 // Method "<init>":([B)V
      10: return

  public com.nimbusds.jose.crypto.MACSigner(com.nimbusds.jose.jwk.OctetSequenceKey) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method com/nimbusds/jose/jwk/OctetSequenceKey.toByteArray:()[B
       5: invokespecial #98                 // Method "<init>":([B)V
       8: return

  public com.nimbusds.jose.util.Base64URL sign(com.nimbusds.jose.JWSHeader, byte[]) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_1
       1: invokevirtual #125                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
       4: invokestatic  #127                // Method getMinRequiredSecretLength:(Lcom/nimbusds/jose/JWSAlgorithm;)I
       7: istore_3
       8: aload_0
       9: invokevirtual #130                // Method getSecret:()[B
      12: arraylength
      13: iload_3
      14: invokestatic  #133                // Method com/nimbusds/jose/util/ByteUtils.byteLength:(I)I
      17: if_icmpge     64
      20: new           #69                 // class com/nimbusds/jose/KeyLengthException
      23: dup
      24: new           #135                // class java/lang/StringBuilder
      27: dup
      28: invokespecial #136                // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #138                // String The secret length for
      33: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #125                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      40: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #147                // String  must be at least
      45: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: iload_3
      49: invokevirtual #150                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #152                // String  bits
      54: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #156                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #157                // Method com/nimbusds/jose/KeyLengthException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_1
      65: invokevirtual #125                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      68: invokestatic  #161                // Method getJCAAlgorithmName:(Lcom/nimbusds/jose/JWSAlgorithm;)Ljava/lang/String;
      71: astore        4
      73: aload         4
      75: aload_0
      76: invokevirtual #130                // Method getSecret:()[B
      79: aload_2
      80: aload_0
      81: invokevirtual #165                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JCAContext;
      84: invokevirtual #171                // Method com/nimbusds/jose/jca/JCAContext.getProvider:()Ljava/security/Provider;
      87: invokestatic  #177                // Method com/nimbusds/jose/crypto/impl/HMAC.compute:(Ljava/lang/String;[B[BLjava/security/Provider;)[B
      90: astore        5
      92: aload         5
      94: invokestatic  #183                // Method com/nimbusds/jose/util/Base64URL.encode:([B)Lcom/nimbusds/jose/util/Base64URL;
      97: areturn
}
