Compiled from "DeflateHelper.java"
public class com.nimbusds.jose.crypto.impl.DeflateHelper {
  public com.nimbusds.jose.crypto.impl.DeflateHelper();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] applyCompression(com.nimbusds.jose.JWEHeader, byte[]) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/nimbusds/jose/JWEHeader.getCompressionAlgorithm:()Lcom/nimbusds/jose/CompressionAlgorithm;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aload_1
      10: areturn
      11: aload_2
      12: getstatic     #30                 // Field com/nimbusds/jose/CompressionAlgorithm.DEF:Lcom/nimbusds/jose/CompressionAlgorithm;
      15: invokevirtual #34                 // Method com/nimbusds/jose/CompressionAlgorithm.equals:(Ljava/lang/Object;)Z
      18: ifeq          58
      21: aload_1
      22: invokestatic  #40                 // Method com/nimbusds/jose/util/DeflateUtils.compress:([B)[B
      25: areturn
      26: astore_3
      27: new           #16                 // class com/nimbusds/jose/JOSEException
      30: dup
      31: new           #42                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #45                 // String Couldn\'t compress plain text:
      40: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_3
      44: invokevirtual #53                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      47: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: aload_3
      54: invokespecial #59                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: athrow
      58: new           #16                 // class com/nimbusds/jose/JOSEException
      61: dup
      62: new           #42                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #61                 // String Unsupported compression algorithm:
      71: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_2
      75: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #67                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      84: athrow
    Exception table:
       from    to  target type
          21    25    26   Class java/lang/Exception

  public static byte[] applyDecompression(com.nimbusds.jose.JWEHeader, byte[]) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/nimbusds/jose/JWEHeader.getCompressionAlgorithm:()Lcom/nimbusds/jose/CompressionAlgorithm;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aload_1
      10: areturn
      11: aload_2
      12: getstatic     #30                 // Field com/nimbusds/jose/CompressionAlgorithm.DEF:Lcom/nimbusds/jose/CompressionAlgorithm;
      15: invokevirtual #34                 // Method com/nimbusds/jose/CompressionAlgorithm.equals:(Ljava/lang/Object;)Z
      18: ifeq          58
      21: aload_1
      22: invokestatic  #78                 // Method com/nimbusds/jose/util/DeflateUtils.decompress:([B)[B
      25: areturn
      26: astore_3
      27: new           #16                 // class com/nimbusds/jose/JOSEException
      30: dup
      31: new           #42                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #80                 // String Couldn\'t decompress plain text:
      40: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_3
      44: invokevirtual #53                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      47: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: aload_3
      54: invokespecial #59                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: athrow
      58: new           #16                 // class com/nimbusds/jose/JOSEException
      61: dup
      62: new           #42                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #61                 // String Unsupported compression algorithm:
      71: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_2
      75: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #67                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      84: athrow
    Exception table:
       from    to  target type
          21    25    26   Class java/lang/Exception
}
