Compiled from "Header.java"
public abstract class com.nimbusds.jose.Header implements java.io.Serializable {
  private static final long serialVersionUID;

  private final com.nimbusds.jose.Algorithm alg;

  private final com.nimbusds.jose.JOSEObjectType typ;

  private final java.lang.String cty;

  private final java.util.Set<java.lang.String> crit;

  private final java.util.Map<java.lang.String, java.lang.Object> customParams;

  private static final java.util.Map<java.lang.String, java.lang.Object> EMPTY_CUSTOM_PARAMS;

  private final com.nimbusds.jose.util.Base64URL parsedBase64URL;

  protected com.nimbusds.jose.Header(com.nimbusds.jose.Algorithm, com.nimbusds.jose.JOSEObjectType, java.lang.String, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>, com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #34                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #36                 // String The algorithm \"alg\" header parameter must not be null
      14: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #53                 // Field alg:Lcom/nimbusds/jose/Algorithm;
      23: aload_0
      24: aload_2
      25: putfield      #55                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      28: aload_0
      29: aload_3
      30: putfield      #57                 // Field cty:Ljava/lang/String;
      33: aload         4
      35: ifnull        57
      38: aload_0
      39: new           #59                 // class java/util/HashSet
      42: dup
      43: aload         4
      45: invokespecial #62                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      48: invokestatic  #68                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      51: putfield      #70                 // Field crit:Ljava/util/Set;
      54: goto          62
      57: aload_0
      58: aconst_null
      59: putfield      #70                 // Field crit:Ljava/util/Set;
      62: aload         5
      64: ifnull        86
      67: aload_0
      68: new           #72                 // class java/util/HashMap
      71: dup
      72: aload         5
      74: invokespecial #75                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      77: invokestatic  #79                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      80: putfield      #81                 // Field customParams:Ljava/util/Map;
      83: goto          93
      86: aload_0
      87: getstatic     #83                 // Field EMPTY_CUSTOM_PARAMS:Ljava/util/Map;
      90: putfield      #81                 // Field customParams:Ljava/util/Map;
      93: aload_0
      94: aload         6
      96: putfield      #85                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
      99: return

  protected com.nimbusds.jose.Header(com.nimbusds.jose.Header);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method getAlgorithm:()Lcom/nimbusds/jose/Algorithm;
       5: aload_1
       6: invokevirtual #96                 // Method getType:()Lcom/nimbusds/jose/JOSEObjectType;
       9: aload_1
      10: invokevirtual #100                // Method getContentType:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #104                // Method getCriticalParams:()Ljava/util/Set;
      17: aload_1
      18: invokevirtual #108                // Method getCustomParams:()Ljava/util/Map;
      21: aload_1
      22: invokevirtual #112                // Method getParsedBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
      25: invokespecial #114                // Method "<init>":(Lcom/nimbusds/jose/Algorithm;Lcom/nimbusds/jose/JOSEObjectType;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)V
      28: return

  public com.nimbusds.jose.Algorithm getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #53                 // Field alg:Lcom/nimbusds/jose/Algorithm;
       4: areturn

  public com.nimbusds.jose.JOSEObjectType getType();
    Code:
       0: aload_0
       1: getfield      #55                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #57                 // Field cty:Ljava/lang/String;
       4: areturn

  public java.util.Set<java.lang.String> getCriticalParams();
    Code:
       0: aload_0
       1: getfield      #70                 // Field crit:Ljava/util/Set;
       4: areturn

  public java.lang.Object getCustomParam(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #81                 // Field customParams:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #122,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getCustomParams();
    Code:
       0: aload_0
       1: getfield      #81                 // Field customParams:Ljava/util/Map;
       4: areturn

  public com.nimbusds.jose.util.Base64URL getParsedBase64URL();
    Code:
       0: aload_0
       1: getfield      #85                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
       4: areturn

  public java.util.Set<java.lang.String> getIncludedParams();
    Code:
       0: new           #59                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokevirtual #108                // Method getCustomParams:()Ljava/util/Map;
       8: invokeinterface #128,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #62                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_1
      18: ldc           #129                // String alg
      20: invokeinterface #133,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: invokevirtual #96                 // Method getType:()Lcom/nimbusds/jose/JOSEObjectType;
      30: ifnull        42
      33: aload_1
      34: ldc           #134                // String typ
      36: invokeinterface #133,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: invokevirtual #100                // Method getContentType:()Ljava/lang/String;
      46: ifnull        58
      49: aload_1
      50: ldc           #135                // String cty
      52: invokeinterface #133,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: invokevirtual #104                // Method getCriticalParams:()Ljava/util/Set;
      62: ifnull        86
      65: aload_0
      66: invokevirtual #104                // Method getCriticalParams:()Ljava/util/Set;
      69: invokeinterface #139,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      74: ifne          86
      77: aload_1
      78: ldc           #140                // String crit
      80: invokeinterface #133,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_1
      87: areturn

  public java.util.Map<java.lang.String, java.lang.Object> toJSONObject();
    Code:
       0: invokestatic  #147                // Method com/nimbusds/jose/util/JSONObjectUtils.newJSONObject:()Ljava/util/Map;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #81                 // Field customParams:Ljava/util/Map;
       9: invokeinterface #150,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      14: aload_1
      15: ldc           #129                // String alg
      17: aload_0
      18: getfield      #53                 // Field alg:Lcom/nimbusds/jose/Algorithm;
      21: invokevirtual #153                // Method com/nimbusds/jose/Algorithm.toString:()Ljava/lang/String;
      24: invokeinterface #157,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: getfield      #55                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      34: ifnull        53
      37: aload_1
      38: ldc           #134                // String typ
      40: aload_0
      41: getfield      #55                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      44: invokevirtual #158                // Method com/nimbusds/jose/JOSEObjectType.toString:()Ljava/lang/String;
      47: invokeinterface #157,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload_0
      54: getfield      #57                 // Field cty:Ljava/lang/String;
      57: ifnull        73
      60: aload_1
      61: ldc           #135                // String cty
      63: aload_0
      64: getfield      #57                 // Field cty:Ljava/lang/String;
      67: invokeinterface #157,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getfield      #70                 // Field crit:Ljava/util/Set;
      77: ifnull        112
      80: aload_0
      81: getfield      #70                 // Field crit:Ljava/util/Set;
      84: invokeinterface #139,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      89: ifne          112
      92: aload_1
      93: ldc           #140                // String crit
      95: new           #160                // class java/util/ArrayList
      98: dup
      99: aload_0
     100: getfield      #70                 // Field crit:Ljava/util/Set;
     103: invokespecial #161                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     106: invokeinterface #157,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: aload_1
     113: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method toJSONObject:()Ljava/util/Map;
       4: invokestatic  #168                // Method com/nimbusds/jose/util/JSONObjectUtils.toJSONString:(Ljava/util/Map;)Ljava/lang/String;
       7: areturn

  public com.nimbusds.jose.util.Base64URL toBase64URL();
    Code:
       0: aload_0
       1: getfield      #85                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
       4: ifnonnull     15
       7: aload_0
       8: invokevirtual #170                // Method toString:()Ljava/lang/String;
      11: invokestatic  #174                // Method com/nimbusds/jose/util/Base64URL.encode:(Ljava/lang/String;)Lcom/nimbusds/jose/util/Base64URL;
      14: areturn
      15: aload_0
      16: getfield      #85                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
      19: areturn

  public static com.nimbusds.jose.Algorithm parseAlgorithm(java.util.Map<java.lang.String, java.lang.Object>) throws java.text.ParseException;
    Code:
       0: aload_0
       1: ldc           #129                // String alg
       3: invokestatic  #183                // Method com/nimbusds/jose/util/JSONObjectUtils.getString:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     22
      11: new           #179                // class java/text/ParseException
      14: dup
      15: ldc           #185                // String Missing \"alg\" in header JSON object
      17: iconst_0
      18: invokespecial #188                // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
      21: athrow
      22: aload_1
      23: getstatic     #191                // Field com/nimbusds/jose/Algorithm.NONE:Lcom/nimbusds/jose/Algorithm;
      26: invokevirtual #194                // Method com/nimbusds/jose/Algorithm.getName:()Ljava/lang/String;
      29: invokevirtual #197                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          39
      35: getstatic     #191                // Field com/nimbusds/jose/Algorithm.NONE:Lcom/nimbusds/jose/Algorithm;
      38: areturn
      39: aload_0
      40: ldc           #199                // String enc
      42: invokeinterface #202,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      47: ifeq          55
      50: aload_1
      51: invokestatic  #208                // Method com/nimbusds/jose/JWEAlgorithm.parse:(Ljava/lang/String;)Lcom/nimbusds/jose/JWEAlgorithm;
      54: areturn
      55: aload_1
      56: invokestatic  #213                // Method com/nimbusds/jose/JWSAlgorithm.parse:(Ljava/lang/String;)Lcom/nimbusds/jose/JWSAlgorithm;
      59: areturn

  public static com.nimbusds.jose.Header parse(java.util.Map<java.lang.String, java.lang.Object>) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #220                // Method parse:(Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
       5: areturn

  public static com.nimbusds.jose.Header parse(java.util.Map<java.lang.String, java.lang.Object>, com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokestatic  #224                // Method parseAlgorithm:(Ljava/util/Map;)Lcom/nimbusds/jose/Algorithm;
       4: astore_2
       5: aload_2
       6: getstatic     #191                // Field com/nimbusds/jose/Algorithm.NONE:Lcom/nimbusds/jose/Algorithm;
       9: invokevirtual #225                // Method com/nimbusds/jose/Algorithm.equals:(Ljava/lang/Object;)Z
      12: ifeq          21
      15: aload_0
      16: aload_1
      17: invokestatic  #230                // Method com/nimbusds/jose/PlainHeader.parse:(Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/PlainHeader;
      20: areturn
      21: aload_2
      22: instanceof    #210                // class com/nimbusds/jose/JWSAlgorithm
      25: ifeq          34
      28: aload_0
      29: aload_1
      30: invokestatic  #235                // Method com/nimbusds/jose/JWSHeader.parse:(Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/JWSHeader;
      33: areturn
      34: aload_2
      35: instanceof    #204                // class com/nimbusds/jose/JWEAlgorithm
      38: ifeq          47
      41: aload_0
      42: aload_1
      43: invokestatic  #240                // Method com/nimbusds/jose/JWEHeader.parse:(Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/JWEHeader;
      46: areturn
      47: new           #242                // class java/lang/AssertionError
      50: dup
      51: new           #244                // class java/lang/StringBuilder
      54: dup
      55: invokespecial #245                // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #247                // String Unexpected algorithm type:
      60: invokevirtual #251                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #255                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #258                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      73: athrow

  public static com.nimbusds.jose.Header parse(java.lang.String) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #262                // Method parse:(Ljava/lang/String;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
       5: areturn

  public static com.nimbusds.jose.Header parse(java.lang.String, com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokestatic  #266                // Method com/nimbusds/jose/util/JSONObjectUtils.parse:(Ljava/lang/String;)Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokestatic  #220                // Method parse:(Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
      10: areturn

  public static com.nimbusds.jose.Header parse(com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokevirtual #270                // Method com/nimbusds/jose/util/Base64URL.decodeToString:()Ljava/lang/String;
       4: aload_0
       5: invokestatic  #262                // Method parse:(Ljava/lang/String;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
       8: areturn

  static {};
    Code:
       0: new           #72                 // class java/util/HashMap
       3: dup
       4: invokespecial #273                // Method java/util/HashMap."<init>":()V
       7: invokestatic  #79                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #83                 // Field EMPTY_CUSTOM_PARAMS:Ljava/util/Map;
      13: return
}
