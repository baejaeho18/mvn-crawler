Compiled from "PasswordBasedEncrypter.java"
public class com.nimbusds.jose.crypto.PasswordBasedEncrypter extends com.nimbusds.jose.crypto.impl.PasswordBasedCryptoProvider implements com.nimbusds.jose.JWEEncrypter {
  public static final int MIN_SALT_LENGTH;

  private final int saltLength;

  public static final int MIN_RECOMMENDED_ITERATION_COUNT;

  private final int iterationCount;

  public com.nimbusds.jose.crypto.PasswordBasedEncrypter(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method com/nimbusds/jose/crypto/impl/PasswordBasedCryptoProvider."<init>":([B)V
       5: iload_2
       6: bipush        8
       8: if_icmpge     21
      11: new           #27                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #29                 // String The minimum salt length (p2s) is 8 bytes
      17: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iload_2
      23: putfield      #36                 // Field saltLength:I
      26: iload_3
      27: sipush        1000
      30: if_icmpge     43
      33: new           #27                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #38                 // String The minimum recommended iteration count (p2c) is 1000
      39: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iload_3
      45: putfield      #40                 // Field iterationCount:I
      48: return

  public com.nimbusds.jose.crypto.PasswordBasedEncrypter(java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #50                 // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #56                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: iload_2
       9: iload_3
      10: invokespecial #58                 // Method "<init>":([BII)V
      13: return

  public com.nimbusds.jose.JWECryptoParts encrypt(com.nimbusds.jose.JWEHeader, byte[]) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method com/nimbusds/jose/JWEHeader.getAlgorithm:()Lcom/nimbusds/jose/JWEAlgorithm;
       4: astore_3
       5: aload_1
       6: invokevirtual #71                 // Method com/nimbusds/jose/JWEHeader.getEncryptionMethod:()Lcom/nimbusds/jose/EncryptionMethod;
       9: astore        4
      11: aload_0
      12: getfield      #36                 // Field saltLength:I
      15: newarray       byte
      17: astore        5
      19: aload_0
      20: invokevirtual #75                 // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
      23: invokevirtual #81                 // Method com/nimbusds/jose/jca/JWEJCAContext.getSecureRandom:()Ljava/security/SecureRandom;
      26: aload         5
      28: invokevirtual #86                 // Method java/security/SecureRandom.nextBytes:([B)V
      31: aload_3
      32: aload         5
      34: invokestatic  #92                 // Method com/nimbusds/jose/crypto/impl/PBKDF2.formatSalt:(Lcom/nimbusds/jose/JWEAlgorithm;[B)[B
      37: astore        6
      39: aload_3
      40: aload_0
      41: invokevirtual #75                 // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
      44: invokevirtual #96                 // Method com/nimbusds/jose/jca/JWEJCAContext.getMACProvider:()Ljava/security/Provider;
      47: invokestatic  #102                // Method com/nimbusds/jose/crypto/impl/PRFParams.resolve:(Lcom/nimbusds/jose/JWEAlgorithm;Ljava/security/Provider;)Lcom/nimbusds/jose/crypto/impl/PRFParams;
      50: astore        7
      52: aload_0
      53: invokevirtual #106                // Method getPassword:()[B
      56: aload         6
      58: aload_0
      59: getfield      #40                 // Field iterationCount:I
      62: aload         7
      64: invokestatic  #110                // Method com/nimbusds/jose/crypto/impl/PBKDF2.deriveKey:([B[BILcom/nimbusds/jose/crypto/impl/PRFParams;)Ljavax/crypto/SecretKey;
      67: astore        8
      69: new           #10                 // class com/nimbusds/jose/JWEHeader$Builder
      72: dup
      73: aload_1
      74: invokespecial #113                // Method com/nimbusds/jose/JWEHeader$Builder."<init>":(Lcom/nimbusds/jose/JWEHeader;)V
      77: aload         5
      79: invokestatic  #119                // Method com/nimbusds/jose/util/Base64URL.encode:([B)Lcom/nimbusds/jose/util/Base64URL;
      82: invokevirtual #123                // Method com/nimbusds/jose/JWEHeader$Builder.pbes2Salt:(Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/JWEHeader$Builder;
      85: aload_0
      86: getfield      #40                 // Field iterationCount:I
      89: invokevirtual #127                // Method com/nimbusds/jose/JWEHeader$Builder.pbes2Count:(I)Lcom/nimbusds/jose/JWEHeader$Builder;
      92: invokevirtual #131                // Method com/nimbusds/jose/JWEHeader$Builder.build:()Lcom/nimbusds/jose/JWEHeader;
      95: astore        9
      97: aload         4
      99: aload_0
     100: invokevirtual #75                 // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     103: invokevirtual #81                 // Method com/nimbusds/jose/jca/JWEJCAContext.getSecureRandom:()Ljava/security/SecureRandom;
     106: invokestatic  #137                // Method com/nimbusds/jose/crypto/impl/ContentCryptoProvider.generateCEK:(Lcom/nimbusds/jose/EncryptionMethod;Ljava/security/SecureRandom;)Ljavax/crypto/SecretKey;
     109: astore        10
     111: aload         10
     113: aload         8
     115: aload_0
     116: invokevirtual #75                 // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     119: invokevirtual #140                // Method com/nimbusds/jose/jca/JWEJCAContext.getKeyEncryptionProvider:()Ljava/security/Provider;
     122: invokestatic  #146                // Method com/nimbusds/jose/crypto/impl/AESKW.wrapCEK:(Ljavax/crypto/SecretKey;Ljavax/crypto/SecretKey;Ljava/security/Provider;)[B
     125: invokestatic  #119                // Method com/nimbusds/jose/util/Base64URL.encode:([B)Lcom/nimbusds/jose/util/Base64URL;
     128: astore        11
     130: aload         9
     132: aload_2
     133: aload         10
     135: aload         11
     137: aload_0
     138: invokevirtual #75                 // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     141: invokestatic  #149                // Method com/nimbusds/jose/crypto/impl/ContentCryptoProvider.encrypt:(Lcom/nimbusds/jose/JWEHeader;[BLjavax/crypto/SecretKey;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/jca/JWEJCAContext;)Lcom/nimbusds/jose/JWECryptoParts;
     144: areturn

  public int getSaltLength();
    Code:
       0: aload_0
       1: getfield      #36                 // Field saltLength:I
       4: ireturn

  public int getIterationCount();
    Code:
       0: aload_0
       1: getfield      #40                 // Field iterationCount:I
       4: ireturn
}
