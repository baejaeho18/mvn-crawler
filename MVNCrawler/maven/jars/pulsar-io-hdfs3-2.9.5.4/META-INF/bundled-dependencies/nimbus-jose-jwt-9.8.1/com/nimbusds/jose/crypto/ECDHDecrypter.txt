Compiled from "ECDHDecrypter.java"
public class com.nimbusds.jose.crypto.ECDHDecrypter extends com.nimbusds.jose.crypto.impl.ECDHCryptoProvider implements com.nimbusds.jose.JWEDecrypter,com.nimbusds.jose.CriticalHeaderParamsAware {
  public static final java.util.Set<com.nimbusds.jose.jwk.Curve> SUPPORTED_ELLIPTIC_CURVES;

  private final java.security.PrivateKey privateKey;

  private final com.nimbusds.jose.crypto.impl.CriticalHeaderParamsDeferral critPolicy;

  public com.nimbusds.jose.crypto.ECDHDecrypter(java.security.interfaces.ECPrivateKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #23                 // Method "<init>":(Ljava/security/interfaces/ECPrivateKey;Ljava/util/Set;)V
       6: return

  public com.nimbusds.jose.crypto.ECDHDecrypter(com.nimbusds.jose.jwk.ECKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method com/nimbusds/jose/jwk/ECKey.getCurve:()Lcom/nimbusds/jose/jwk/Curve;
       5: invokespecial #36                 // Method com/nimbusds/jose/crypto/impl/ECDHCryptoProvider."<init>":(Lcom/nimbusds/jose/jwk/Curve;)V
       8: aload_0
       9: new           #38                 // class com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral
      12: dup
      13: invokespecial #41                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral."<init>":()V
      16: putfield      #43                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      19: aload_1
      20: invokevirtual #47                 // Method com/nimbusds/jose/jwk/ECKey.isPrivate:()Z
      23: ifne          36
      26: new           #20                 // class com/nimbusds/jose/JOSEException
      29: dup
      30: ldc           #49                 // String The EC JWK doesn\'t contain a private part
      32: invokespecial #52                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: invokevirtual #56                 // Method com/nimbusds/jose/jwk/ECKey.toECPrivateKey:()Ljava/security/interfaces/ECPrivateKey;
      41: putfield      #58                 // Field privateKey:Ljava/security/PrivateKey;
      44: return

  public com.nimbusds.jose.crypto.ECDHDecrypter(java.security.interfaces.ECPrivateKey, java.util.Set<java.lang.String>) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokeinterface #67,  1           // InterfaceMethod java/security/interfaces/ECPrivateKey.getParams:()Ljava/security/spec/ECParameterSpec;
       9: invokestatic  #73                 // Method com/nimbusds/jose/jwk/Curve.forECParameterSpec:(Ljava/security/spec/ECParameterSpec;)Lcom/nimbusds/jose/jwk/Curve;
      12: invokespecial #76                 // Method "<init>":(Ljava/security/PrivateKey;Ljava/util/Set;Lcom/nimbusds/jose/jwk/Curve;)V
      15: return

  public com.nimbusds.jose.crypto.ECDHDecrypter(java.security.PrivateKey, java.util.Set<java.lang.String>, com.nimbusds.jose.jwk.Curve) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #36                 // Method com/nimbusds/jose/crypto/impl/ECDHCryptoProvider."<init>":(Lcom/nimbusds/jose/jwk/Curve;)V
       5: aload_0
       6: new           #38                 // class com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral
       9: dup
      10: invokespecial #41                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral."<init>":()V
      13: putfield      #43                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      16: aload_0
      17: getfield      #43                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      20: aload_2
      21: invokevirtual #83                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.setDeferredCriticalHeaderParams:(Ljava/util/Set;)V
      24: aload_0
      25: aload_1
      26: putfield      #58                 // Field privateKey:Ljava/security/PrivateKey;
      29: return

  public java.security.PrivateKey getPrivateKey();
    Code:
       0: aload_0
       1: getfield      #58                 // Field privateKey:Ljava/security/PrivateKey;
       4: areturn

  public java.util.Set<com.nimbusds.jose.jwk.Curve> supportedEllipticCurves();
    Code:
       0: getstatic     #92                 // Field SUPPORTED_ELLIPTIC_CURVES:Ljava/util/Set;
       3: areturn

  public java.util.Set<java.lang.String> getProcessedCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #43                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
       4: invokevirtual #96                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> getDeferredCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #43                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
       4: invokevirtual #96                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public byte[] decrypt(com.nimbusds.jose.JWEHeader, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
       4: aload_1
       5: invokevirtual #103                // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.ensureHeaderPasses:(Lcom/nimbusds/jose/JWEHeader;)V
       8: aload_1
       9: invokevirtual #109                // Method com/nimbusds/jose/JWEHeader.getEphemeralPublicKey:()Lcom/nimbusds/jose/jwk/JWK;
      12: checkcast     #29                 // class com/nimbusds/jose/jwk/ECKey
      15: astore        6
      17: aload         6
      19: ifnonnull     32
      22: new           #20                 // class com/nimbusds/jose/JOSEException
      25: dup
      26: ldc           #111                // String Missing ephemeral public EC key \"epk\" JWE header parameter
      28: invokespecial #52                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload         6
      34: invokevirtual #115                // Method com/nimbusds/jose/jwk/ECKey.toECPublicKey:()Ljava/security/interfaces/ECPublicKey;
      37: astore        7
      39: aload_0
      40: invokevirtual #117                // Method getPrivateKey:()Ljava/security/PrivateKey;
      43: instanceof    #63                 // class java/security/interfaces/ECPrivateKey
      46: ifeq          81
      49: aload_0
      50: invokevirtual #117                // Method getPrivateKey:()Ljava/security/PrivateKey;
      53: checkcast     #63                 // class java/security/interfaces/ECPrivateKey
      56: astore        8
      58: aload         7
      60: aload         8
      62: invokestatic  #123                // Method com/nimbusds/jose/crypto/utils/ECChecks.isPointOnCurve:(Ljava/security/interfaces/ECPublicKey;Ljava/security/interfaces/ECPrivateKey;)Z
      65: ifne          78
      68: new           #20                 // class com/nimbusds/jose/JOSEException
      71: dup
      72: ldc           #125                // String Invalid ephemeral public EC key: Point(s) not on the expected curve
      74: invokespecial #52                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: goto          106
      81: aload         7
      83: aload_0
      84: invokevirtual #128                // Method getCurve:()Lcom/nimbusds/jose/jwk/Curve;
      87: invokevirtual #131                // Method com/nimbusds/jose/jwk/Curve.toECParameterSpec:()Ljava/security/spec/ECParameterSpec;
      90: invokestatic  #134                // Method com/nimbusds/jose/crypto/utils/ECChecks.isPointOnCurve:(Ljava/security/interfaces/ECPublicKey;Ljava/security/spec/ECParameterSpec;)Z
      93: ifne          106
      96: new           #20                 // class com/nimbusds/jose/JOSEException
      99: dup
     100: ldc           #125                // String Invalid ephemeral public EC key: Point(s) not on the expected curve
     102: invokespecial #52                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: aload         7
     108: aload_0
     109: getfield      #58                 // Field privateKey:Ljava/security/PrivateKey;
     112: aload_0
     113: invokevirtual #138                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     116: invokevirtual #144                // Method com/nimbusds/jose/jca/JWEJCAContext.getKeyEncryptionProvider:()Ljava/security/Provider;
     119: invokestatic  #150                // Method com/nimbusds/jose/crypto/impl/ECDH.deriveSharedSecret:(Ljava/security/interfaces/ECPublicKey;Ljava/security/PrivateKey;Ljava/security/Provider;)Ljavax/crypto/SecretKey;
     122: astore        8
     124: aload_0
     125: aload_1
     126: aload         8
     128: aload_2
     129: aload_3
     130: aload         4
     132: aload         5
     134: invokevirtual #154                // Method decryptWithZ:(Lcom/nimbusds/jose/JWEHeader;Ljavax/crypto/SecretKey;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;)[B
     137: areturn

  static {};
    Code:
       0: new           #170                // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #171                // Method java/util/LinkedHashSet."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #174                // Field com/nimbusds/jose/jwk/Curve.P_256:Lcom/nimbusds/jose/jwk/Curve;
      12: invokeinterface #180,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: getstatic     #183                // Field com/nimbusds/jose/jwk/Curve.P_384:Lcom/nimbusds/jose/jwk/Curve;
      22: invokeinterface #180,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: getstatic     #186                // Field com/nimbusds/jose/jwk/Curve.P_521:Lcom/nimbusds/jose/jwk/Curve;
      32: invokeinterface #180,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_0
      39: invokestatic  #192                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      42: putstatic     #92                 // Field SUPPORTED_ELLIPTIC_CURVES:Ljava/util/Set;
      45: return
}
