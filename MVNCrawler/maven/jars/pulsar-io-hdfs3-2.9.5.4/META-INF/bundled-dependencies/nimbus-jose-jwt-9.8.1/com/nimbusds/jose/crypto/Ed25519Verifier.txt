Compiled from "Ed25519Verifier.java"
public class com.nimbusds.jose.crypto.Ed25519Verifier extends com.nimbusds.jose.crypto.impl.EdDSAProvider implements com.nimbusds.jose.JWSVerifier,com.nimbusds.jose.CriticalHeaderParamsAware {
  private final com.nimbusds.jose.crypto.impl.CriticalHeaderParamsDeferral critPolicy;

  private final com.nimbusds.jose.jwk.OctetKeyPair publicKey;

  private final com.google.crypto.tink.subtle.Ed25519Verify tinkVerifier;

  public com.nimbusds.jose.crypto.Ed25519Verifier(com.nimbusds.jose.jwk.OctetKeyPair) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #23                 // Method "<init>":(Lcom/nimbusds/jose/jwk/OctetKeyPair;Ljava/util/Set;)V
       6: return

  public com.nimbusds.jose.crypto.Ed25519Verifier(com.nimbusds.jose.jwk.OctetKeyPair, java.util.Set<java.lang.String>) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/nimbusds/jose/crypto/impl/EdDSAProvider."<init>":()V
       4: aload_0
       5: new           #31                 // class com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral
       8: dup
       9: invokespecial #32                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral."<init>":()V
      12: putfield      #34                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      15: getstatic     #40                 // Field com/nimbusds/jose/jwk/Curve.Ed25519:Lcom/nimbusds/jose/jwk/Curve;
      18: aload_1
      19: invokevirtual #46                 // Method com/nimbusds/jose/jwk/OctetKeyPair.getCurve:()Lcom/nimbusds/jose/jwk/Curve;
      22: invokevirtual #50                 // Method com/nimbusds/jose/jwk/Curve.equals:(Ljava/lang/Object;)Z
      25: ifne          38
      28: new           #20                 // class com/nimbusds/jose/JOSEException
      31: dup
      32: ldc           #52                 // String Ed25519Verifier only supports OctetKeyPairs with crv=Ed25519
      34: invokespecial #55                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: invokevirtual #61                 // Method com/nimbusds/jose/jwk/OctetKeyPair.isPrivate:()Z
      42: ifeq          55
      45: new           #20                 // class com/nimbusds/jose/JOSEException
      48: dup
      49: ldc           #63                 // String Ed25519Verifier requires a public key, use OctetKeyPair.toPublicJWK()
      51: invokespecial #55                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: aload_1
      57: putfield      #65                 // Field publicKey:Lcom/nimbusds/jose/jwk/OctetKeyPair;
      60: aload_0
      61: new           #67                 // class com/google/crypto/tink/subtle/Ed25519Verify
      64: dup
      65: aload_1
      66: invokevirtual #71                 // Method com/nimbusds/jose/jwk/OctetKeyPair.getDecodedX:()[B
      69: invokespecial #74                 // Method com/google/crypto/tink/subtle/Ed25519Verify."<init>":([B)V
      72: putfield      #76                 // Field tinkVerifier:Lcom/google/crypto/tink/subtle/Ed25519Verify;
      75: aload_0
      76: getfield      #34                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      79: aload_2
      80: invokevirtual #80                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.setDeferredCriticalHeaderParams:(Ljava/util/Set;)V
      83: return

  public com.nimbusds.jose.jwk.OctetKeyPair getPublicKey();
    Code:
       0: aload_0
       1: getfield      #65                 // Field publicKey:Lcom/nimbusds/jose/jwk/OctetKeyPair;
       4: areturn

  public java.util.Set<java.lang.String> getProcessedCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #34                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
       4: invokevirtual #90                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> getDeferredCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #34                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
       4: invokevirtual #90                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public boolean verify(com.nimbusds.jose.JWSHeader, byte[], com.nimbusds.jose.util.Base64URL) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_1
       1: invokevirtual #101                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
       4: astore        4
       6: getstatic     #107                // Field com/nimbusds/jose/JWSAlgorithm.EdDSA:Lcom/nimbusds/jose/JWSAlgorithm;
       9: aload         4
      11: invokevirtual #108                // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
      14: ifne          27
      17: new           #20                 // class com/nimbusds/jose/JOSEException
      20: dup
      21: ldc           #110                // String Ed25519Verifier requires alg=EdDSA in JWSHeader
      23: invokespecial #55                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #34                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      31: aload_1
      32: invokevirtual #114                // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.headerPasses:(Lcom/nimbusds/jose/Header;)Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: aload_3
      41: invokevirtual #119                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
      44: astore        5
      46: aload_0
      47: getfield      #76                 // Field tinkVerifier:Lcom/google/crypto/tink/subtle/Ed25519Verify;
      50: aload         5
      52: aload_2
      53: invokevirtual #122                // Method com/google/crypto/tink/subtle/Ed25519Verify.verify:([B[B)V
      56: iconst_1
      57: ireturn
      58: astore        6
      60: iconst_0
      61: ireturn
    Exception table:
       from    to  target type
          46    57    58   Class java/security/GeneralSecurityException
}
