Compiled from "ECDSAVerifier.java"
public class com.nimbusds.jose.crypto.ECDSAVerifier extends com.nimbusds.jose.crypto.impl.ECDSAProvider implements com.nimbusds.jose.JWSVerifier,com.nimbusds.jose.CriticalHeaderParamsAware {
  private final com.nimbusds.jose.crypto.impl.CriticalHeaderParamsDeferral critPolicy;

  private final java.security.interfaces.ECPublicKey publicKey;

  public com.nimbusds.jose.crypto.ECDSAVerifier(java.security.interfaces.ECPublicKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #21                 // Method "<init>":(Ljava/security/interfaces/ECPublicKey;Ljava/util/Set;)V
       6: return

  public com.nimbusds.jose.crypto.ECDSAVerifier(com.nimbusds.jose.jwk.ECKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method com/nimbusds/jose/jwk/ECKey.toECPublicKey:()Ljava/security/interfaces/ECPublicKey;
       5: invokespecial #32                 // Method "<init>":(Ljava/security/interfaces/ECPublicKey;)V
       8: return

  public com.nimbusds.jose.crypto.ECDSAVerifier(java.security.interfaces.ECPublicKey, java.util.Set<java.lang.String>) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method com/nimbusds/jose/crypto/impl/ECDSA.resolveAlgorithm:(Ljava/security/interfaces/ECKey;)Lcom/nimbusds/jose/JWSAlgorithm;
       5: invokespecial #44                 // Method com/nimbusds/jose/crypto/impl/ECDSAProvider."<init>":(Lcom/nimbusds/jose/JWSAlgorithm;)V
       8: aload_0
       9: new           #46                 // class com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral
      12: dup
      13: invokespecial #49                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral."<init>":()V
      16: putfield      #51                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      19: aload_0
      20: aload_1
      21: putfield      #53                 // Field publicKey:Ljava/security/interfaces/ECPublicKey;
      24: aload_1
      25: aload_0
      26: invokevirtual #57                 // Method supportedECDSAAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      29: invokestatic  #63                 // Method com/nimbusds/jose/jwk/Curve.forJWSAlgorithm:(Lcom/nimbusds/jose/JWSAlgorithm;)Ljava/util/Set;
      32: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #59                 // class com/nimbusds/jose/jwk/Curve
      45: invokevirtual #79                 // Method com/nimbusds/jose/jwk/Curve.toECParameterSpec:()Ljava/security/spec/ECParameterSpec;
      48: invokestatic  #85                 // Method com/nimbusds/jose/crypto/utils/ECChecks.isPointOnCurve:(Ljava/security/interfaces/ECPublicKey;Ljava/security/spec/ECParameterSpec;)Z
      51: ifne          64
      54: new           #18                 // class com/nimbusds/jose/JOSEException
      57: dup
      58: ldc           #87                 // String Curve / public key parameters mismatch
      60: invokespecial #90                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: getfield      #51                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      68: aload_2
      69: invokevirtual #96                 // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.setDeferredCriticalHeaderParams:(Ljava/util/Set;)V
      72: return

  public java.security.interfaces.ECPublicKey getPublicKey();
    Code:
       0: aload_0
       1: getfield      #53                 // Field publicKey:Ljava/security/interfaces/ECPublicKey;
       4: areturn

  public java.util.Set<java.lang.String> getProcessedCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #51                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
       4: invokevirtual #105                // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> getDeferredCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #51                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
       4: invokevirtual #105                // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public boolean verify(com.nimbusds.jose.JWSHeader, byte[], com.nimbusds.jose.util.Base64URL) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_1
       1: invokevirtual #117                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
       4: astore        4
       6: aload_0
       7: invokevirtual #120                // Method supportedJWSAlgorithms:()Ljava/util/Set;
      10: aload         4
      12: invokeinterface #124,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifne          37
      20: new           #18                 // class com/nimbusds/jose/JOSEException
      23: dup
      24: aload         4
      26: aload_0
      27: invokevirtual #120                // Method supportedJWSAlgorithms:()Ljava/util/Set;
      30: invokestatic  #130                // Method com/nimbusds/jose/crypto/impl/AlgorithmSupportMessage.unsupportedJWSAlgorithm:(Lcom/nimbusds/jose/JWSAlgorithm;Ljava/util/Collection;)Ljava/lang/String;
      33: invokespecial #90                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #51                 // Field critPolicy:Lcom/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral;
      41: aload_1
      42: invokevirtual #136                // Method com/nimbusds/jose/crypto/impl/CriticalHeaderParamsDeferral.headerPasses:(Lcom/nimbusds/jose/Header;)Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: aload_3
      51: invokevirtual #142                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
      54: astore        5
      56: aload_1
      57: invokevirtual #117                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      60: invokestatic  #146                // Method com/nimbusds/jose/crypto/impl/ECDSA.getSignatureByteArrayLength:(Lcom/nimbusds/jose/JWSAlgorithm;)I
      63: aload         5
      65: arraylength
      66: if_icmpeq     71
      69: iconst_0
      70: ireturn
      71: aload         5
      73: invokestatic  #152                // Method com/nimbusds/jose/crypto/impl/ECDSA.transcodeSignatureToDER:([B)[B
      76: astore        6
      78: goto          85
      81: astore        7
      83: iconst_0
      84: ireturn
      85: aload         4
      87: aload_0
      88: invokevirtual #156                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JCAContext;
      91: invokevirtual #162                // Method com/nimbusds/jose/jca/JCAContext.getProvider:()Ljava/security/Provider;
      94: invokestatic  #166                // Method com/nimbusds/jose/crypto/impl/ECDSA.getSignerAndVerifier:(Lcom/nimbusds/jose/JWSAlgorithm;Ljava/security/Provider;)Ljava/security/Signature;
      97: astore        7
      99: aload         7
     101: aload_0
     102: getfield      #53                 // Field publicKey:Ljava/security/interfaces/ECPublicKey;
     105: invokevirtual #172                // Method java/security/Signature.initVerify:(Ljava/security/PublicKey;)V
     108: aload         7
     110: aload_2
     111: invokevirtual #176                // Method java/security/Signature.update:([B)V
     114: aload         7
     116: aload         6
     118: invokevirtual #179                // Method java/security/Signature.verify:([B)Z
     121: ireturn
     122: astore        8
     124: new           #18                 // class com/nimbusds/jose/JOSEException
     127: dup
     128: new           #181                // class java/lang/StringBuilder
     131: dup
     132: invokespecial #182                // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #184                // String Invalid EC public key:
     137: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload         8
     142: invokevirtual #192                // Method java/security/InvalidKeyException.getMessage:()Ljava/lang/String;
     145: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: aload         8
     153: invokespecial #198                // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     156: athrow
     157: astore        8
     159: iconst_0
     160: ireturn
    Exception table:
       from    to  target type
          71    78    81   Class com/nimbusds/jose/JOSEException
          99   121   122   Class java/security/InvalidKeyException
          99   121   157   Class java/security/SignatureException
}
