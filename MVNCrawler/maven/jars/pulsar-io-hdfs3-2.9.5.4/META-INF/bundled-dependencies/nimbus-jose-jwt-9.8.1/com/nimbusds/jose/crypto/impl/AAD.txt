Compiled from "AAD.java"
public class com.nimbusds.jose.crypto.impl.AAD {
  public com.nimbusds.jose.crypto.impl.AAD();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] compute(com.nimbusds.jose.JWEHeader);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method com/nimbusds/jose/JWEHeader.toBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
       4: invokestatic  #22                 // Method compute:(Lcom/nimbusds/jose/util/Base64URL;)[B
       7: areturn

  public static byte[] compute(com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
       4: getstatic     #36                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
       7: invokevirtual #42                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      10: areturn

  public static byte[] computeLength(byte[]) throws com.nimbusds.jose.util.IntegerOverflowException;
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method com/nimbusds/jose/util/ByteUtils.safeBitLength:([B)I
       4: istore_1
       5: bipush        8
       7: invokestatic  #60                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: iload_1
      11: i2l
      12: invokevirtual #64                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      15: invokevirtual #68                 // Method java/nio/ByteBuffer.array:()[B
      18: areturn
}
