Compiled from "JWSObject.java"
public class com.nimbusds.jose.JWSObject extends com.nimbusds.jose.JOSEObject {
  private static final long serialVersionUID;

  private final com.nimbusds.jose.JWSHeader header;

  private final java.lang.String signingInputString;

  private com.nimbusds.jose.util.Base64URL signature;

  private final java.util.concurrent.atomic.AtomicReference<com.nimbusds.jose.JWSObject$State> state;

  public com.nimbusds.jose.JWSObject(com.nimbusds.jose.JWSHeader, com.nimbusds.jose.Payload);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/nimbusds/jose/JOSEObject."<init>":()V
       4: aload_0
       5: new           #31                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #32                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_1
      16: ifnonnull     29
      19: new           #36                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #38                 // String The JWS header must not be null
      25: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #47                 // Field header:Lcom/nimbusds/jose/JWSHeader;
      34: aload_2
      35: ifnonnull     48
      38: new           #36                 // class java/lang/IllegalArgumentException
      41: dup
      42: ldc           #49                 // String The payload must not be null
      44: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_2
      50: invokevirtual #53                 // Method setPayload:(Lcom/nimbusds/jose/Payload;)V
      53: aload_0
      54: aload_0
      55: invokespecial #57                 // Method composeSigningInput:()Ljava/lang/String;
      58: putfield      #59                 // Field signingInputString:Ljava/lang/String;
      61: aload_0
      62: aconst_null
      63: putfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
      66: aload_0
      67: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      70: getstatic     #65                 // Field com/nimbusds/jose/JWSObject$State.UNSIGNED:Lcom/nimbusds/jose/JWSObject$State;
      73: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      76: return

  public com.nimbusds.jose.JWSObject(com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #45                 // class com/nimbusds/jose/Payload
       5: dup
       6: aload_2
       7: invokespecial #79                 // Method com/nimbusds/jose/Payload."<init>":(Lcom/nimbusds/jose/util/Base64URL;)V
      10: aload_3
      11: invokespecial #82                 // Method "<init>":(Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/Payload;Lcom/nimbusds/jose/util/Base64URL;)V
      14: return

  public com.nimbusds.jose.JWSObject(com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.Payload, com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/nimbusds/jose/JOSEObject."<init>":()V
       4: aload_0
       5: new           #31                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #32                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_1
      16: ifnonnull     29
      19: new           #36                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #87                 // String The first part must not be null
      25: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: invokestatic  #93                 // Method com/nimbusds/jose/JWSHeader.parse:(Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/JWSHeader;
      34: putfield      #47                 // Field header:Lcom/nimbusds/jose/JWSHeader;
      37: goto          74
      40: astore        4
      42: new           #76                 // class java/text/ParseException
      45: dup
      46: new           #95                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #98                 // String Invalid JWS header:
      55: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload         4
      60: invokevirtual #105                // Method java/text/ParseException.getMessage:()Ljava/lang/String;
      63: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: iconst_0
      70: invokespecial #111                // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
      73: athrow
      74: aload_2
      75: ifnonnull     88
      78: new           #36                 // class java/lang/IllegalArgumentException
      81: dup
      82: ldc           #113                // String The payload (second part) must not be null
      84: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: aload_2
      90: invokevirtual #53                 // Method setPayload:(Lcom/nimbusds/jose/Payload;)V
      93: aload_0
      94: aload_0
      95: invokespecial #57                 // Method composeSigningInput:()Ljava/lang/String;
      98: putfield      #59                 // Field signingInputString:Ljava/lang/String;
     101: aload_3
     102: ifnonnull     115
     105: new           #36                 // class java/lang/IllegalArgumentException
     108: dup
     109: ldc           #115                // String The third part must not be null
     111: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     114: athrow
     115: aload_0
     116: aload_3
     117: putfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
     120: aload_0
     121: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
     124: getstatic     #118                // Field com/nimbusds/jose/JWSObject$State.SIGNED:Lcom/nimbusds/jose/JWSObject$State;
     127: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     130: aload_0
     131: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
     134: invokevirtual #126                // Method com/nimbusds/jose/JWSHeader.isBase64URLEncodePayload:()Z
     137: ifeq          166
     140: aload_0
     141: iconst_3
     142: anewarray     #89                 // class com/nimbusds/jose/util/Base64URL
     145: dup
     146: iconst_0
     147: aload_1
     148: aastore
     149: dup
     150: iconst_1
     151: aload_2
     152: invokevirtual #130                // Method com/nimbusds/jose/Payload.toBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
     155: aastore
     156: dup
     157: iconst_2
     158: aload_3
     159: aastore
     160: invokevirtual #134                // Method setParsedParts:([Lcom/nimbusds/jose/util/Base64URL;)V
     163: goto          194
     166: aload_0
     167: iconst_3
     168: anewarray     #89                 // class com/nimbusds/jose/util/Base64URL
     171: dup
     172: iconst_0
     173: aload_1
     174: aastore
     175: dup
     176: iconst_1
     177: new           #89                 // class com/nimbusds/jose/util/Base64URL
     180: dup
     181: ldc           #136                // String
     183: invokespecial #137                // Method com/nimbusds/jose/util/Base64URL."<init>":(Ljava/lang/String;)V
     186: aastore
     187: dup
     188: iconst_2
     189: aload_3
     190: aastore
     191: invokevirtual #134                // Method setParsedParts:([Lcom/nimbusds/jose/util/Base64URL;)V
     194: return
    Exception table:
       from    to  target type
          29    37    40   Class java/text/ParseException

  public com.nimbusds.jose.JWSHeader getHeader();
    Code:
       0: aload_0
       1: getfield      #47                 // Field header:Lcom/nimbusds/jose/JWSHeader;
       4: areturn

  private java.lang.String composeSigningInput();
    Code:
       0: aload_0
       1: getfield      #47                 // Field header:Lcom/nimbusds/jose/JWSHeader;
       4: invokevirtual #126                // Method com/nimbusds/jose/JWSHeader.isBase64URLEncodePayload:()Z
       7: ifeq          52
      10: new           #95                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_0
      18: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
      21: invokevirtual #140                // Method com/nimbusds/jose/JWSHeader.toBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
      24: invokevirtual #141                // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
      27: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: bipush        46
      32: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #148                // Method getPayload:()Lcom/nimbusds/jose/Payload;
      39: invokevirtual #130                // Method com/nimbusds/jose/Payload.toBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
      42: invokevirtual #141                // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
      45: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
      52: new           #95                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      59: aload_0
      60: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
      63: invokevirtual #140                // Method com/nimbusds/jose/JWSHeader.toBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
      66: invokevirtual #141                // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
      69: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: bipush        46
      74: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      77: aload_0
      78: invokevirtual #148                // Method getPayload:()Lcom/nimbusds/jose/Payload;
      81: invokevirtual #149                // Method com/nimbusds/jose/Payload.toString:()Ljava/lang/String;
      84: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: areturn

  public byte[] getSigningInput();
    Code:
       0: aload_0
       1: getfield      #59                 // Field signingInputString:Ljava/lang/String;
       4: getstatic     #157                // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
       7: invokevirtual #163                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      10: areturn

  public com.nimbusds.jose.util.Base64URL getSignature();
    Code:
       0: aload_0
       1: getfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
       4: areturn

  public com.nimbusds.jose.JWSObject$State getState();
    Code:
       0: aload_0
       1: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class com/nimbusds/jose/JWSObject$State
      10: areturn

  private void ensureUnsignedState();
    Code:
       0: aload_0
       1: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #65                 // Field com/nimbusds/jose/JWSObject$State.UNSIGNED:Lcom/nimbusds/jose/JWSObject$State;
      10: if_acmpeq     23
      13: new           #173                // class java/lang/IllegalStateException
      16: dup
      17: ldc           #175                // String The JWS object must be in an unsigned state
      19: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  private void ensureSignedOrVerifiedState();
    Code:
       0: aload_0
       1: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #118                // Field com/nimbusds/jose/JWSObject$State.SIGNED:Lcom/nimbusds/jose/JWSObject$State;
      10: if_acmpeq     36
      13: aload_0
      14: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      17: invokevirtual #170                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      20: getstatic     #180                // Field com/nimbusds/jose/JWSObject$State.VERIFIED:Lcom/nimbusds/jose/JWSObject$State;
      23: if_acmpeq     36
      26: new           #173                // class java/lang/IllegalStateException
      29: dup
      30: ldc           #182                // String The JWS object must be in a signed or verified state
      32: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  private void ensureJWSSignerSupport(com.nimbusds.jose.JWSSigner) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_1
       1: invokeinterface #192,  1          // InterfaceMethod com/nimbusds/jose/JWSSigner.supportedJWSAlgorithms:()Ljava/util/Set;
       6: aload_0
       7: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
      10: invokevirtual #196                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      13: invokeinterface #202,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      18: ifne          68
      21: new           #186                // class com/nimbusds/jose/JOSEException
      24: dup
      25: new           #95                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #204                // String The \"
      34: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
      41: invokevirtual #196                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      44: invokevirtual #207                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #209                // String \" algorithm is not allowed or supported by the JWS signer: Supported algorithms:
      49: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokeinterface #192,  1          // InterfaceMethod com/nimbusds/jose/JWSSigner.supportedJWSAlgorithms:()Ljava/util/Set;
      58: invokevirtual #207                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #210                // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: return

  public synchronized void sign(com.nimbusds.jose.JWSSigner) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: invokespecial #219                // Method ensureUnsignedState:()V
       4: aload_0
       5: aload_1
       6: invokespecial #221                // Method ensureJWSSignerSupport:(Lcom/nimbusds/jose/JWSSigner;)V
       9: aload_0
      10: aload_1
      11: aload_0
      12: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
      15: aload_0
      16: invokevirtual #223                // Method getSigningInput:()[B
      19: invokeinterface #226,  3          // InterfaceMethod com/nimbusds/jose/JWSSigner.sign:(Lcom/nimbusds/jose/JWSHeader;[B)Lcom/nimbusds/jose/util/Base64URL;
      24: putfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
      27: goto          73
      30: astore_2
      31: new           #215                // class com/nimbusds/jose/ActionRequiredForJWSCompletionException
      34: dup
      35: aload_2
      36: invokevirtual #227                // Method com/nimbusds/jose/ActionRequiredForJWSCompletionException.getMessage:()Ljava/lang/String;
      39: aload_2
      40: invokevirtual #231                // Method com/nimbusds/jose/ActionRequiredForJWSCompletionException.getTriggeringOption:()Lcom/nimbusds/jose/JWSSignerOption;
      43: new           #11                 // class com/nimbusds/jose/JWSObject$1
      46: dup
      47: aload_0
      48: aload_2
      49: invokespecial #234                // Method com/nimbusds/jose/JWSObject$1."<init>":(Lcom/nimbusds/jose/JWSObject;Lcom/nimbusds/jose/ActionRequiredForJWSCompletionException;)V
      52: invokespecial #237                // Method com/nimbusds/jose/ActionRequiredForJWSCompletionException."<init>":(Ljava/lang/String;Lcom/nimbusds/jose/JWSSignerOption;Lcom/nimbusds/jose/CompletableJWSObjectSigning;)V
      55: athrow
      56: astore_2
      57: aload_2
      58: athrow
      59: astore_2
      60: new           #186                // class com/nimbusds/jose/JOSEException
      63: dup
      64: aload_2
      65: invokevirtual #238                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      68: aload_2
      69: invokespecial #241                // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      72: athrow
      73: aload_0
      74: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      77: getstatic     #118                // Field com/nimbusds/jose/JWSObject$State.SIGNED:Lcom/nimbusds/jose/JWSObject$State;
      80: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      83: return
    Exception table:
       from    to  target type
           9    27    30   Class com/nimbusds/jose/ActionRequiredForJWSCompletionException
           9    27    56   Class com/nimbusds/jose/JOSEException
           9    27    59   Class java/lang/Exception

  public synchronized boolean verify(com.nimbusds.jose.JWSVerifier) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: invokespecial #248                // Method ensureSignedOrVerifiedState:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
       9: aload_0
      10: invokevirtual #223                // Method getSigningInput:()[B
      13: aload_0
      14: invokevirtual #250                // Method getSignature:()Lcom/nimbusds/jose/util/Base64URL;
      17: invokeinterface #255,  4          // InterfaceMethod com/nimbusds/jose/JWSVerifier.verify:(Lcom/nimbusds/jose/JWSHeader;[BLcom/nimbusds/jose/util/Base64URL;)Z
      22: istore_2
      23: goto          43
      26: astore_3
      27: aload_3
      28: athrow
      29: astore_3
      30: new           #186                // class com/nimbusds/jose/JOSEException
      33: dup
      34: aload_3
      35: invokevirtual #238                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      38: aload_3
      39: invokespecial #241                // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
      43: iload_2
      44: ifeq          57
      47: aload_0
      48: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      51: getstatic     #180                // Field com/nimbusds/jose/JWSObject$State.VERIFIED:Lcom/nimbusds/jose/JWSObject$State;
      54: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      57: iload_2
      58: ireturn
    Exception table:
       from    to  target type
           4    23    26   Class com/nimbusds/jose/JOSEException
           4    23    29   Class java/lang/Exception

  public java.lang.String serialize();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #263                // Method serialize:(Z)Ljava/lang/String;
       5: areturn

  public java.lang.String serialize(boolean);
    Code:
       0: aload_0
       1: invokespecial #248                // Method ensureSignedOrVerifiedState:()V
       4: iload_1
       5: ifeq          52
       8: new           #95                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: getfield      #47                 // Field header:Lcom/nimbusds/jose/JWSHeader;
      19: invokevirtual #140                // Method com/nimbusds/jose/JWSHeader.toBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
      22: invokevirtual #141                // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
      25: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: bipush        46
      30: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      33: bipush        46
      35: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
      42: invokevirtual #141                // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
      45: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
      52: new           #95                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      59: aload_0
      60: getfield      #59                 // Field signingInputString:Ljava/lang/String;
      63: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: bipush        46
      68: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
      75: invokevirtual #141                // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
      78: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: areturn

  public static com.nimbusds.jose.JWSObject parse(java.lang.String) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokestatic  #269                // Method com/nimbusds/jose/JOSEObject.split:(Ljava/lang/String;)[Lcom/nimbusds/jose/util/Base64URL;
       4: astore_1
       5: aload_1
       6: arraylength
       7: iconst_3
       8: if_icmpeq     23
      11: new           #76                 // class java/text/ParseException
      14: dup
      15: ldc_w         #271                // String Unexpected number of Base64URL parts, must be three
      18: iconst_0
      19: invokespecial #111                // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
      22: athrow
      23: new           #2                  // class com/nimbusds/jose/JWSObject
      26: dup
      27: aload_1
      28: iconst_0
      29: aaload
      30: aload_1
      31: iconst_1
      32: aaload
      33: aload_1
      34: iconst_2
      35: aaload
      36: invokespecial #275                // Method "<init>":(Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;)V
      39: areturn

  public static com.nimbusds.jose.JWSObject parse(java.lang.String, com.nimbusds.jose.Payload) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokestatic  #269                // Method com/nimbusds/jose/JOSEObject.split:(Ljava/lang/String;)[Lcom/nimbusds/jose/util/Base64URL;
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_3
       8: if_icmpeq     23
      11: new           #76                 // class java/text/ParseException
      14: dup
      15: ldc_w         #271                // String Unexpected number of Base64URL parts, must be three
      18: iconst_0
      19: invokespecial #111                // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
      22: athrow
      23: aload_2
      24: iconst_1
      25: aaload
      26: invokevirtual #141                // Method com/nimbusds/jose/util/Base64URL.toString:()Ljava/lang/String;
      29: invokevirtual #281                // Method java/lang/String.isEmpty:()Z
      32: ifne          47
      35: new           #76                 // class java/text/ParseException
      38: dup
      39: ldc_w         #283                // String The payload Base64URL part must be empty
      42: iconst_0
      43: invokespecial #111                // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
      46: athrow
      47: new           #2                  // class com/nimbusds/jose/JWSObject
      50: dup
      51: aload_2
      52: iconst_0
      53: aaload
      54: aload_1
      55: aload_2
      56: iconst_2
      57: aaload
      58: invokespecial #82                 // Method "<init>":(Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/Payload;Lcom/nimbusds/jose/util/Base64URL;)V
      61: areturn

  public com.nimbusds.jose.Header getHeader();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method getHeader:()Lcom/nimbusds/jose/JWSHeader;
       4: areturn

  static com.nimbusds.jose.util.Base64URL access$002(com.nimbusds.jose.JWSObject, com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
       6: areturn

  static java.util.concurrent.atomic.AtomicReference access$100(com.nimbusds.jose.JWSObject);
    Code:
       0: aload_0
       1: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static com.nimbusds.jose.util.Base64URL access$000(com.nimbusds.jose.JWSObject);
    Code:
       0: aload_0
       1: getfield      #61                 // Field signature:Lcom/nimbusds/jose/util/Base64URL;
       4: areturn
}
