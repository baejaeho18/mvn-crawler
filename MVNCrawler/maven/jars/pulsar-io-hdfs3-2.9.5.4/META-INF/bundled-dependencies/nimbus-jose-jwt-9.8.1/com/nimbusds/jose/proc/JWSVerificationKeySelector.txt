Compiled from "JWSVerificationKeySelector.java"
public class com.nimbusds.jose.proc.JWSVerificationKeySelector<C extends com.nimbusds.jose.proc.SecurityContext> extends com.nimbusds.jose.proc.AbstractJWKSelectorWithSource<C> implements com.nimbusds.jose.proc.JWSKeySelector<C> {
  private final java.util.Set<com.nimbusds.jose.JWSAlgorithm> jwsAlgs;

  private final boolean singleJwsAlgConstructorWasCalled;

  public com.nimbusds.jose.proc.JWSVerificationKeySelector(com.nimbusds.jose.JWSAlgorithm, com.nimbusds.jose.jwk.source.JWKSource<C>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #20                 // Method com/nimbusds/jose/proc/AbstractJWKSelectorWithSource."<init>":(Lcom/nimbusds/jose/jwk/source/JWKSource;)V
       5: aload_1
       6: ifnonnull     19
       9: new           #22                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #24                 // String The JWS algorithm must not be null
      15: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_1
      21: invokestatic  #37                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      24: putfield      #39                 // Field jwsAlgs:Ljava/util/Set;
      27: aload_0
      28: iconst_1
      29: putfield      #41                 // Field singleJwsAlgConstructorWasCalled:Z
      32: return

  public com.nimbusds.jose.proc.JWSVerificationKeySelector(java.util.Set<com.nimbusds.jose.JWSAlgorithm>, com.nimbusds.jose.jwk.source.JWKSource<C>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #20                 // Method com/nimbusds/jose/proc/AbstractJWKSelectorWithSource."<init>":(Lcom/nimbusds/jose/jwk/source/JWKSource;)V
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #57,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      15: ifeq          28
      18: new           #22                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #59                 // String The JWS algorithms must not be null or empty
      24: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: invokestatic  #63                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      33: putfield      #39                 // Field jwsAlgs:Ljava/util/Set;
      36: aload_0
      37: iconst_0
      38: putfield      #41                 // Field singleJwsAlgConstructorWasCalled:Z
      41: return

  public boolean isAllowed(com.nimbusds.jose.JWSAlgorithm);
    Code:
       0: aload_0
       1: getfield      #39                 // Field jwsAlgs:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #69,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public com.nimbusds.jose.JWSAlgorithm getExpectedJWSAlgorithm();
    Code:
       0: aload_0
       1: getfield      #41                 // Field singleJwsAlgConstructorWasCalled:Z
       4: ifeq          25
       7: aload_0
       8: getfield      #39                 // Field jwsAlgs:Ljava/util/Set;
      11: invokeinterface #76,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #29                 // class com/nimbusds/jose/JWSAlgorithm
      24: areturn
      25: new           #84                 // class java/lang/UnsupportedOperationException
      28: dup
      29: ldc           #86                 // String Since this class was constructed with multiple algorithms, the behavior of this method is undefined.
      31: invokespecial #87                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      34: athrow

  protected com.nimbusds.jose.jwk.JWKMatcher createJWKMatcher(com.nimbusds.jose.JWSHeader);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
       5: invokevirtual #96                 // Method isAllowed:(Lcom/nimbusds/jose/JWSAlgorithm;)Z
       8: ifne          13
      11: aconst_null
      12: areturn
      13: aload_1
      14: invokestatic  #101                // Method com/nimbusds/jose/jwk/JWKMatcher.forJWSHeader:(Lcom/nimbusds/jose/JWSHeader;)Lcom/nimbusds/jose/jwk/JWKMatcher;
      17: areturn

  public java.util.List<java.security.Key> selectJWSKeys(com.nimbusds.jose.JWSHeader, C) throws com.nimbusds.jose.KeySourceException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field jwsAlgs:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #94                 // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
       8: invokeinterface #69,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ifne          20
      16: invokestatic  #112                // Method java/util/Collections.emptyList:()Ljava/util/List;
      19: areturn
      20: aload_0
      21: aload_1
      22: invokevirtual #114                // Method createJWKMatcher:(Lcom/nimbusds/jose/JWSHeader;)Lcom/nimbusds/jose/jwk/JWKMatcher;
      25: astore_3
      26: aload_3
      27: ifnonnull     34
      30: invokestatic  #112                // Method java/util/Collections.emptyList:()Ljava/util/List;
      33: areturn
      34: aload_0
      35: invokevirtual #118                // Method getJWKSource:()Lcom/nimbusds/jose/jwk/source/JWKSource;
      38: new           #120                // class com/nimbusds/jose/jwk/JWKSelector
      41: dup
      42: aload_3
      43: invokespecial #123                // Method com/nimbusds/jose/jwk/JWKSelector."<init>":(Lcom/nimbusds/jose/jwk/JWKMatcher;)V
      46: aload_2
      47: invokeinterface #127,  3          // InterfaceMethod com/nimbusds/jose/jwk/source/JWKSource.get:(Lcom/nimbusds/jose/jwk/JWKSelector;Lcom/nimbusds/jose/proc/SecurityContext;)Ljava/util/List;
      52: astore        4
      54: new           #129                // class java/util/LinkedList
      57: dup
      58: invokespecial #132                // Method java/util/LinkedList."<init>":()V
      61: astore        5
      63: aload         4
      65: invokestatic  #138                // Method com/nimbusds/jose/jwk/KeyConverter.toJavaKeys:(Ljava/util/List;)Ljava/util/List;
      68: invokeinterface #141,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      73: astore        6
      75: aload         6
      77: invokeinterface #144,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          126
      85: aload         6
      87: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      92: checkcast     #146                // class java/security/Key
      95: astore        7
      97: aload         7
      99: instanceof    #148                // class java/security/PublicKey
     102: ifne          113
     105: aload         7
     107: instanceof    #150                // class javax/crypto/SecretKey
     110: ifeq          123
     113: aload         5
     115: aload         7
     117: invokeinterface #153,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     122: pop
     123: goto          75
     126: aload         5
     128: areturn

  public com.nimbusds.jose.jwk.source.JWKSource getJWKSource();
    Code:
       0: aload_0
       1: invokespecial #166                // Method com/nimbusds/jose/proc/AbstractJWKSelectorWithSource.getJWKSource:()Lcom/nimbusds/jose/jwk/source/JWKSource;
       4: areturn
}
