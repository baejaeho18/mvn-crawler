Compiled from "Constants.java"
final class org.objectweb.asm.Constants {
  static final java.lang.String CONSTANT_VALUE;

  static final java.lang.String CODE;

  static final java.lang.String STACK_MAP_TABLE;

  static final java.lang.String EXCEPTIONS;

  static final java.lang.String INNER_CLASSES;

  static final java.lang.String ENCLOSING_METHOD;

  static final java.lang.String SYNTHETIC;

  static final java.lang.String SIGNATURE;

  static final java.lang.String SOURCE_FILE;

  static final java.lang.String SOURCE_DEBUG_EXTENSION;

  static final java.lang.String LINE_NUMBER_TABLE;

  static final java.lang.String LOCAL_VARIABLE_TABLE;

  static final java.lang.String LOCAL_VARIABLE_TYPE_TABLE;

  static final java.lang.String DEPRECATED;

  static final java.lang.String RUNTIME_VISIBLE_ANNOTATIONS;

  static final java.lang.String RUNTIME_INVISIBLE_ANNOTATIONS;

  static final java.lang.String RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS;

  static final java.lang.String RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS;

  static final java.lang.String RUNTIME_VISIBLE_TYPE_ANNOTATIONS;

  static final java.lang.String RUNTIME_INVISIBLE_TYPE_ANNOTATIONS;

  static final java.lang.String ANNOTATION_DEFAULT;

  static final java.lang.String BOOTSTRAP_METHODS;

  static final java.lang.String METHOD_PARAMETERS;

  static final java.lang.String MODULE;

  static final java.lang.String MODULE_PACKAGES;

  static final java.lang.String MODULE_MAIN_CLASS;

  static final java.lang.String NEST_HOST;

  static final java.lang.String NEST_MEMBERS;

  static final java.lang.String PERMITTED_SUBCLASSES;

  static final java.lang.String RECORD;

  static final int ACC_CONSTRUCTOR;

  static final int F_INSERT;

  static final int LDC_W;

  static final int LDC2_W;

  static final int ILOAD_0;

  static final int ILOAD_1;

  static final int ILOAD_2;

  static final int ILOAD_3;

  static final int LLOAD_0;

  static final int LLOAD_1;

  static final int LLOAD_2;

  static final int LLOAD_3;

  static final int FLOAD_0;

  static final int FLOAD_1;

  static final int FLOAD_2;

  static final int FLOAD_3;

  static final int DLOAD_0;

  static final int DLOAD_1;

  static final int DLOAD_2;

  static final int DLOAD_3;

  static final int ALOAD_0;

  static final int ALOAD_1;

  static final int ALOAD_2;

  static final int ALOAD_3;

  static final int ISTORE_0;

  static final int ISTORE_1;

  static final int ISTORE_2;

  static final int ISTORE_3;

  static final int LSTORE_0;

  static final int LSTORE_1;

  static final int LSTORE_2;

  static final int LSTORE_3;

  static final int FSTORE_0;

  static final int FSTORE_1;

  static final int FSTORE_2;

  static final int FSTORE_3;

  static final int DSTORE_0;

  static final int DSTORE_1;

  static final int DSTORE_2;

  static final int DSTORE_3;

  static final int ASTORE_0;

  static final int ASTORE_1;

  static final int ASTORE_2;

  static final int ASTORE_3;

  static final int WIDE;

  static final int GOTO_W;

  static final int JSR_W;

  static final int WIDE_JUMP_OPCODE_DELTA;

  static final int ASM_OPCODE_DELTA;

  static final int ASM_IFNULL_OPCODE_DELTA;

  static final int ASM_IFEQ;

  static final int ASM_IFNE;

  static final int ASM_IFLT;

  static final int ASM_IFGE;

  static final int ASM_IFGT;

  static final int ASM_IFLE;

  static final int ASM_IF_ICMPEQ;

  static final int ASM_IF_ICMPNE;

  static final int ASM_IF_ICMPLT;

  static final int ASM_IF_ICMPGE;

  static final int ASM_IF_ICMPGT;

  static final int ASM_IF_ICMPLE;

  static final int ASM_IF_ACMPEQ;

  static final int ASM_IF_ACMPNE;

  static final int ASM_GOTO;

  static final int ASM_JSR;

  static final int ASM_IFNULL;

  static final int ASM_IFNONNULL;

  static final int ASM_GOTO_W;

  private org.objectweb.asm.Constants();
    Code:
       0: aload_0
       1: invokespecial #237                // Method java/lang/Object."<init>":()V
       4: return

  static void checkAsmExperimental(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #245                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: invokevirtual #251                // Method java/lang/Class.getName:()Ljava/lang/String;
       9: bipush        46
      11: bipush        47
      13: invokevirtual #257                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: invokestatic  #261                // Method isWhitelisted:(Ljava/lang/String;)Z
      21: ifne          54
      24: aload_1
      25: invokevirtual #265                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      28: new           #267                // class java/lang/StringBuilder
      31: dup
      32: invokespecial #268                // Method java/lang/StringBuilder."<init>":()V
      35: aload_2
      36: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc_w         #274                // String .class
      42: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #277                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokevirtual #283                // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      51: invokestatic  #287                // Method checkIsPreview:(Ljava/io/InputStream;)V
      54: return

  static boolean isWhitelisted(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #295                // String org/objectweb/asm/
       4: invokevirtual #298                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: ldc_w         #300                // String (Annotation|Class|Field|Method|Module|RecordComponent|Signature)
      15: astore_1
      16: aload_0
      17: ldc_w         #302                // String Test$
      20: invokevirtual #306                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      23: ifne          92
      26: new           #267                // class java/lang/StringBuilder
      29: dup
      30: invokespecial #268                // Method java/lang/StringBuilder."<init>":()V
      33: ldc_w         #308                // String org/objectweb/asm/util/Trace
      36: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc_w         #310                // String Visitor(\\$.*)?
      46: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #277                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aload_0
      53: invokestatic  #316                // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
      56: ifne          92
      59: new           #267                // class java/lang/StringBuilder
      62: dup
      63: invokespecial #268                // Method java/lang/StringBuilder."<init>":()V
      66: ldc_w         #318                // String org/objectweb/asm/util/Check
      69: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc_w         #320                // String Adapter(\\$.*)?
      79: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #277                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: aload_0
      86: invokestatic  #316                // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
      89: ifeq          96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: ireturn

  static void checkIsPreview(java.io.InputStream);
    Code:
       0: aload_0
       1: ifnonnull     15
       4: new           #327                // class java/lang/IllegalStateException
       7: dup
       8: ldc_w         #329                // String Bytecode not available, can\'t check class version
      11: invokespecial #332                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: new           #334                // class java/io/DataInputStream
      18: dup
      19: aload_0
      20: invokespecial #336                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      23: astore_2
      24: aload_2
      25: invokevirtual #340                // Method java/io/DataInputStream.readInt:()I
      28: pop
      29: aload_2
      30: invokevirtual #343                // Method java/io/DataInputStream.readUnsignedShort:()I
      33: istore_1
      34: aload_2
      35: invokevirtual #346                // Method java/io/DataInputStream.close:()V
      38: goto          57
      41: astore_3
      42: aload_2
      43: invokevirtual #346                // Method java/io/DataInputStream.close:()V
      46: goto          55
      49: astore        4
      51: aload_3
      52: aload         4
      54: pop2
      55: aload_3
      56: athrow
      57: goto          73
      60: astore_2
      61: new           #327                // class java/lang/IllegalStateException
      64: dup
      65: ldc_w         #348                // String I/O error, can\'t check class version
      68: aload_2
      69: invokespecial #351                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      72: athrow
      73: iload_1
      74: ldc_w         #352                // int 65535
      77: if_icmpeq     91
      80: new           #327                // class java/lang/IllegalStateException
      83: dup
      84: ldc_w         #354                // String ASM9_EXPERIMENTAL can only be used by classes compiled with --enable-preview
      87: invokespecial #332                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: return
    Exception table:
       from    to  target type
          24    34    41   Class java/lang/Throwable
          42    46    49   Class java/lang/Throwable
          15    57    60   Class java/io/IOException
}
