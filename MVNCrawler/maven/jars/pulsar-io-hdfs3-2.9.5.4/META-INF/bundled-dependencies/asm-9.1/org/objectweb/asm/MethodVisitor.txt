Compiled from "MethodVisitor.java"
public abstract class org.objectweb.asm.MethodVisitor {
  private static final java.lang.String REQUIRES_ASM5;

  protected final int api;

  protected org.objectweb.asm.MethodVisitor mv;

  public org.objectweb.asm.MethodVisitor(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokespecial #18                 // Method "<init>":(ILorg/objectweb/asm/MethodVisitor;)V
       6: return

  public org.objectweb.asm.MethodVisitor(int, org.objectweb.asm.MethodVisitor);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ldc           #23                 // int 589824
       7: if_icmpeq     73
      10: iload_1
      11: ldc           #24                 // int 524288
      13: if_icmpeq     73
      16: iload_1
      17: ldc           #25                 // int 458752
      19: if_icmpeq     73
      22: iload_1
      23: ldc           #26                 // int 393216
      25: if_icmpeq     73
      28: iload_1
      29: ldc           #27                 // int 327680
      31: if_icmpeq     73
      34: iload_1
      35: ldc           #28                 // int 262144
      37: if_icmpeq     73
      40: iload_1
      41: ldc           #29                 // int 17432576
      43: if_icmpeq     73
      46: new           #31                 // class java/lang/IllegalArgumentException
      49: dup
      50: new           #33                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #36                 // String Unsupported api
      59: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: iload_1
      63: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: iload_1
      74: ldc           #29                 // int 17432576
      76: if_icmpne     83
      79: aload_0
      80: invokestatic  #56                 // Method org/objectweb/asm/Constants.checkAsmExperimental:(Ljava/lang/Object;)V
      83: aload_0
      84: iload_1
      85: putfield      #58                 // Field api:I
      88: aload_0
      89: aload_2
      90: putfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      93: return

  public void visitParameter(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     19
       9: new           #65                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #9                  // String This feature requires ASM5
      15: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      23: ifnull        35
      26: aload_0
      27: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      30: aload_1
      31: iload_2
      32: invokevirtual #68                 // Method visitParameter:(Ljava/lang/String;I)V
      35: return

  public org.objectweb.asm.AnnotationVisitor visitAnnotationDefault();
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        15
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: invokevirtual #74                 // Method visitAnnotationDefault:()Lorg/objectweb/asm/AnnotationVisitor;
      14: areturn
      15: aconst_null
      16: areturn

  public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: aload_1
      12: iload_2
      13: invokevirtual #78                 // Method visitAnnotation:(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
      16: areturn
      17: aconst_null
      18: areturn

  public org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, org.objectweb.asm.TypePath, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     19
       9: new           #65                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #9                  // String This feature requires ASM5
      15: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      23: ifnull        39
      26: aload_0
      27: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      30: iload_1
      31: aload_2
      32: aload_3
      33: iload         4
      35: invokevirtual #85                 // Method visitTypeAnnotation:(ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
      38: areturn
      39: aconst_null
      40: areturn

  public void visitAnnotableParameterCount(int, boolean);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: iload_2
      13: invokevirtual #92                 // Method visitAnnotableParameterCount:(IZ)V
      16: return

  public org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        18
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: aload_2
      13: iload_3
      14: invokevirtual #97                 // Method visitParameterAnnotation:(ILjava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
      17: areturn
      18: aconst_null
      19: areturn

  public void visitAttribute(org.objectweb.asm.Attribute);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        15
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: aload_1
      12: invokevirtual #102                // Method visitAttribute:(Lorg/objectweb/asm/Attribute;)V
      15: return

  public void visitCode();
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        14
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: invokevirtual #107                // Method visitCode:()V
      14: return

  public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        21
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: iload_2
      13: aload_3
      14: iload         4
      16: aload         5
      18: invokevirtual #111                // Method visitFrame:(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
      21: return

  public void visitInsn(int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        15
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: invokevirtual #120                // Method visitInsn:(I)V
      15: return

  public void visitIntInsn(int, int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: iload_2
      13: invokevirtual #125                // Method visitIntInsn:(II)V
      16: return

  public void visitVarInsn(int, int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: iload_2
      13: invokevirtual #129                // Method visitVarInsn:(II)V
      16: return

  public void visitTypeInsn(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: aload_2
      13: invokevirtual #134                // Method visitTypeInsn:(ILjava/lang/String;)V
      16: return

  public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        19
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokevirtual #138                // Method visitFieldInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      19: return

  public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #58                 // Field api:I
       5: ldc           #27                 // int 327680
       7: if_icmpge     16
      10: sipush        256
      13: goto          17
      16: iconst_0
      17: ior
      18: istore        5
      20: aload_0
      21: iload         5
      23: aload_2
      24: aload_3
      25: aload         4
      27: iload_1
      28: sipush        185
      31: if_icmpne     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokevirtual #144                // Method visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      42: return

  public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     54
       9: iload_1
      10: sipush        256
      13: iand
      14: ifne          54
      17: iload         5
      19: iload_1
      20: sipush        185
      23: if_icmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: if_icmpeq     44
      34: new           #65                 // class java/lang/UnsupportedOperationException
      37: dup
      38: ldc           #147                // String INVOKESPECIAL/STATIC on interfaces requires ASM5
      40: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: iload_1
      46: aload_2
      47: aload_3
      48: aload         4
      50: invokevirtual #149                // Method visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      53: return
      54: aload_0
      55: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      58: ifnull        79
      61: aload_0
      62: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      65: iload_1
      66: sipush        -257
      69: iand
      70: aload_2
      71: aload_3
      72: aload         4
      74: iload         5
      76: invokevirtual #144                // Method visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      79: return

  public void visitInvokeDynamicInsn(java.lang.String, java.lang.String, org.objectweb.asm.Handle, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     19
       9: new           #65                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #9                  // String This feature requires ASM5
      15: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      23: ifnull        38
      26: aload_0
      27: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      30: aload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: invokevirtual #154                // Method visitInvokeDynamicInsn:(Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/Handle;[Ljava/lang/Object;)V
      38: return

  public void visitJumpInsn(int, org.objectweb.asm.Label);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: aload_2
      13: invokevirtual #161                // Method visitJumpInsn:(ILorg/objectweb/asm/Label;)V
      16: return

  public void visitLabel(org.objectweb.asm.Label);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        15
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: aload_1
      12: invokevirtual #167                // Method visitLabel:(Lorg/objectweb/asm/Label;)V
      15: return

  public void visitLdcInsn(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     45
       9: aload_1
      10: instanceof    #170                // class org/objectweb/asm/Handle
      13: ifne          35
      16: aload_1
      17: instanceof    #172                // class org/objectweb/asm/Type
      20: ifeq          45
      23: aload_1
      24: checkcast     #172                // class org/objectweb/asm/Type
      27: invokevirtual #176                // Method org/objectweb/asm/Type.getSort:()I
      30: bipush        11
      32: if_icmpne     45
      35: new           #65                 // class java/lang/UnsupportedOperationException
      38: dup
      39: ldc           #9                  // String This feature requires ASM5
      41: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #58                 // Field api:I
      49: ldc           #25                 // int 458752
      51: if_icmpge     71
      54: aload_1
      55: instanceof    #178                // class org/objectweb/asm/ConstantDynamic
      58: ifeq          71
      61: new           #65                 // class java/lang/UnsupportedOperationException
      64: dup
      65: ldc           #180                // String This feature requires ASM7
      67: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      75: ifnull        86
      78: aload_0
      79: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      82: aload_1
      83: invokevirtual #182                // Method visitLdcInsn:(Ljava/lang/Object;)V
      86: return

  public void visitIincInsn(int, int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: iload_2
      13: invokevirtual #187                // Method visitIincInsn:(II)V
      16: return

  public void visitTableSwitchInsn(int, int, org.objectweb.asm.Label, org.objectweb.asm.Label...);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        19
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: iload_2
      13: aload_3
      14: aload         4
      16: invokevirtual #192                // Method visitTableSwitchInsn:(IILorg/objectweb/asm/Label;[Lorg/objectweb/asm/Label;)V
      19: return

  public void visitLookupSwitchInsn(org.objectweb.asm.Label, int[], org.objectweb.asm.Label[]);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokevirtual #201                // Method visitLookupSwitchInsn:(Lorg/objectweb/asm/Label;[I[Lorg/objectweb/asm/Label;)V
      17: return

  public void visitMultiANewArrayInsn(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: aload_1
      12: iload_2
      13: invokevirtual #206                // Method visitMultiANewArrayInsn:(Ljava/lang/String;I)V
      16: return

  public org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int, org.objectweb.asm.TypePath, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     19
       9: new           #65                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #9                  // String This feature requires ASM5
      15: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      23: ifnull        39
      26: aload_0
      27: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      30: iload_1
      31: aload_2
      32: aload_3
      33: iload         4
      35: invokevirtual #210                // Method visitInsnAnnotation:(ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
      38: areturn
      39: aconst_null
      40: areturn

  public void visitTryCatchBlock(org.objectweb.asm.Label, org.objectweb.asm.Label, org.objectweb.asm.Label, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        19
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: aload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokevirtual #214                // Method visitTryCatchBlock:(Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Ljava/lang/String;)V
      19: return

  public org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int, org.objectweb.asm.TypePath, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     19
       9: new           #65                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #9                  // String This feature requires ASM5
      15: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      23: ifnull        39
      26: aload_0
      27: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      30: iload_1
      31: aload_2
      32: aload_3
      33: iload         4
      35: invokevirtual #220                // Method visitTryCatchAnnotation:(ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
      38: areturn
      39: aconst_null
      40: areturn

  public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.objectweb.asm.Label, org.objectweb.asm.Label, int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        23
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: aload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: aload         5
      18: iload         6
      20: invokevirtual #224                // Method visitLocalVariable:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;I)V
      23: return

  public org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, org.objectweb.asm.TypePath, org.objectweb.asm.Label[], org.objectweb.asm.Label[], int[], java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field api:I
       4: ldc           #27                 // int 327680
       6: if_icmpge     19
       9: new           #65                 // class java/lang/UnsupportedOperationException
      12: dup
      13: ldc           #9                  // String This feature requires ASM5
      15: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      23: ifnull        45
      26: aload_0
      27: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      30: iload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: aload         5
      37: aload         6
      39: iload         7
      41: invokevirtual #230                // Method visitLocalVariableAnnotation:(ILorg/objectweb/asm/TypePath;[Lorg/objectweb/asm/Label;[Lorg/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
      44: areturn
      45: aconst_null
      46: areturn

  public void visitLineNumber(int, org.objectweb.asm.Label);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: aload_2
      13: invokevirtual #233                // Method visitLineNumber:(ILorg/objectweb/asm/Label;)V
      16: return

  public void visitMaxs(int, int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        16
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: iload_1
      12: iload_2
      13: invokevirtual #237                // Method visitMaxs:(II)V
      16: return

  public void visitEnd();
    Code:
       0: aload_0
       1: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
       4: ifnull        14
       7: aload_0
       8: getfield      #60                 // Field mv:Lorg/objectweb/asm/MethodVisitor;
      11: invokevirtual #242                // Method visitEnd:()V
      14: return
}
