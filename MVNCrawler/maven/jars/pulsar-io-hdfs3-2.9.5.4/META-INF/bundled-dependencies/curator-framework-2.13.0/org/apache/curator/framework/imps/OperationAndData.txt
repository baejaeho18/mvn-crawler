Compiled from "OperationAndData.java"
class org.apache.curator.framework.imps.OperationAndData<T> implements java.util.concurrent.Delayed, org.apache.curator.RetrySleeper {
  private static final java.util.concurrent.atomic.AtomicLong nextOrdinal;

  private final org.apache.curator.framework.imps.BackgroundOperation<T> operation;

  private final T data;

  private final org.apache.curator.framework.api.BackgroundCallback callback;

  private final long startTimeMs;

  private final org.apache.curator.framework.imps.OperationAndData$ErrorCallback<T> errorCallback;

  private final java.util.concurrent.atomic.AtomicInteger retryCount;

  private final java.util.concurrent.atomic.AtomicLong sleepUntilTimeMs;

  private final java.util.concurrent.atomic.AtomicLong ordinal;

  private final java.lang.Object context;

  org.apache.curator.framework.imps.OperationAndData(org.apache.curator.framework.imps.BackgroundOperation<T>, T, org.apache.curator.framework.api.BackgroundCallback, org.apache.curator.framework.imps.OperationAndData$ErrorCallback<T>, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
       8: putfield      #46                 // Field startTimeMs:J
      11: aload_0
      12: new           #48                 // class java/util/concurrent/atomic/AtomicInteger
      15: dup
      16: iconst_0
      17: invokespecial #51                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      20: putfield      #53                 // Field retryCount:Ljava/util/concurrent/atomic/AtomicInteger;
      23: aload_0
      24: new           #55                 // class java/util/concurrent/atomic/AtomicLong
      27: dup
      28: lconst_0
      29: invokespecial #58                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      32: putfield      #60                 // Field sleepUntilTimeMs:Ljava/util/concurrent/atomic/AtomicLong;
      35: aload_0
      36: new           #55                 // class java/util/concurrent/atomic/AtomicLong
      39: dup
      40: invokespecial #61                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      43: putfield      #63                 // Field ordinal:Ljava/util/concurrent/atomic/AtomicLong;
      46: aload_0
      47: aload_1
      48: putfield      #65                 // Field operation:Lorg/apache/curator/framework/imps/BackgroundOperation;
      51: aload_0
      52: aload_2
      53: putfield      #67                 // Field data:Ljava/lang/Object;
      56: aload_0
      57: aload_3
      58: putfield      #69                 // Field callback:Lorg/apache/curator/framework/api/BackgroundCallback;
      61: aload_0
      62: aload         4
      64: putfield      #71                 // Field errorCallback:Lorg/apache/curator/framework/imps/OperationAndData$ErrorCallback;
      67: aload_0
      68: aload         5
      70: putfield      #73                 // Field context:Ljava/lang/Object;
      73: aload_0
      74: invokevirtual #76                 // Method reset:()V
      77: return

  void reset();
    Code:
       0: aload_0
       1: getfield      #53                 // Field retryCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_0
       5: invokevirtual #82                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: aload_0
       9: getfield      #63                 // Field ordinal:Ljava/util/concurrent/atomic/AtomicLong;
      12: getstatic     #84                 // Field nextOrdinal:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #87                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      18: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      21: return

  java.lang.Object getContext();
    Code:
       0: aload_0
       1: getfield      #73                 // Field context:Ljava/lang/Object;
       4: areturn

  void callPerformBackgroundOperation() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #65                 // Field operation:Lorg/apache/curator/framework/imps/BackgroundOperation;
       4: aload_0
       5: invokeinterface #100,  2          // InterfaceMethod org/apache/curator/framework/imps/BackgroundOperation.performBackgroundOperation:(Lorg/apache/curator/framework/imps/OperationAndData;)V
      10: return

  T getData();
    Code:
       0: aload_0
       1: getfield      #67                 // Field data:Ljava/lang/Object;
       4: areturn

  long getElapsedTimeMs();
    Code:
       0: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #46                 // Field startTimeMs:J
       7: lsub
       8: lreturn

  int getThenIncrementRetryCount();
    Code:
       0: aload_0
       1: getfield      #53                 // Field retryCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ireturn

  org.apache.curator.framework.api.BackgroundCallback getCallback();
    Code:
       0: aload_0
       1: getfield      #69                 // Field callback:Lorg/apache/curator/framework/api/BackgroundCallback;
       4: areturn

  org.apache.curator.framework.imps.OperationAndData$ErrorCallback<T> getErrorCallback();
    Code:
       0: aload_0
       1: getfield      #71                 // Field errorCallback:Lorg/apache/curator/framework/imps/OperationAndData$ErrorCallback;
       4: areturn

  org.apache.curator.framework.imps.BackgroundOperation<T> getOperation();
    Code:
       0: aload_0
       1: getfield      #65                 // Field operation:Lorg/apache/curator/framework/imps/BackgroundOperation;
       4: areturn

  public void sleepFor(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field sleepUntilTimeMs:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
       7: getstatic     #123                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      10: lload_1
      11: aload_3
      12: invokevirtual #127                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      15: ladd
      16: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      19: return

  public long getDelay(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #60                 // Field sleepUntilTimeMs:Ljava/util/concurrent/atomic/AtomicLong;
       5: invokevirtual #134                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       8: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
      11: lsub
      12: getstatic     #123                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      15: invokevirtual #127                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      18: lreturn

  public int compareTo(java.util.concurrent.Delayed);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getstatic     #123                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokevirtual #138                // Method getDelay:(Ljava/util/concurrent/TimeUnit;)J
      14: aload_1
      15: getstatic     #123                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokeinterface #139,  2          // InterfaceMethod java/util/concurrent/Delayed.getDelay:(Ljava/util/concurrent/TimeUnit;)J
      23: lsub
      24: lstore_2
      25: lload_2
      26: lconst_0
      27: lcmp
      28: ifne          57
      31: aload_1
      32: instanceof    #2                  // class org/apache/curator/framework/imps/OperationAndData
      35: ifeq          57
      38: aload_0
      39: getfield      #63                 // Field ordinal:Ljava/util/concurrent/atomic/AtomicLong;
      42: invokevirtual #134                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      45: aload_1
      46: checkcast     #2                  // class org/apache/curator/framework/imps/OperationAndData
      49: getfield      #63                 // Field ordinal:Ljava/util/concurrent/atomic/AtomicLong;
      52: invokevirtual #134                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      55: lsub
      56: lstore_2
      57: lload_2
      58: lconst_0
      59: lcmp
      60: ifge          67
      63: iconst_m1
      64: goto          78
      67: lload_2
      68: lconst_0
      69: lcmp
      70: ifle          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/util/concurrent/Delayed
       5: invokevirtual #145                // Method compareTo:(Ljava/util/concurrent/Delayed;)I
       8: ireturn

  static {};
    Code:
       0: new           #55                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #61                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: putstatic     #84                 // Field nextOrdinal:Ljava/util/concurrent/atomic/AtomicLong;
      10: return
}
