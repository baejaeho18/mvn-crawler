Compiled from "AsyncJSON.java"
public class org.eclipse.jetty.util.ajax.AsyncJSON {
  private static final java.lang.Object UNSET;

  private final org.eclipse.jetty.util.ajax.AsyncJSON$FrameStack stack;

  private final org.eclipse.jetty.util.ajax.AsyncJSON$NumberBuilder numberBuilder;

  private final org.eclipse.jetty.util.Utf8StringBuilder stringBuilder;

  private final org.eclipse.jetty.util.ajax.AsyncJSON$Factory factory;

  private java.util.List<java.nio.ByteBuffer> chunks;

  public org.eclipse.jetty.util.ajax.AsyncJSON(org.eclipse.jetty.util.ajax.AsyncJSON$Factory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack
       8: dup
       9: aconst_null
      10: invokespecial #3                  // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack."<init>":(Lorg/eclipse/jetty/util/ajax/AsyncJSON$1;)V
      13: putfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      16: aload_0
      17: new           #5                  // class org/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder
      20: dup
      21: aconst_null
      22: invokespecial #6                  // Method org/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder."<init>":(Lorg/eclipse/jetty/util/ajax/AsyncJSON$1;)V
      25: putfield      #7                  // Field numberBuilder:Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;
      28: aload_0
      29: new           #8                  // class org/eclipse/jetty/util/Utf8StringBuilder
      32: dup
      33: bipush        32
      35: invokespecial #9                  // Method org/eclipse/jetty/util/Utf8StringBuilder."<init>":(I)V
      38: putfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
      41: aload_0
      42: aload_1
      43: putfield      #11                 // Field factory:Lorg/eclipse/jetty/util/ajax/AsyncJSON$Factory;
      46: return

  boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #12                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$600:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Z
       7: ireturn

  public boolean parse(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #13                 // Method parse:([BII)Z
       8: ireturn

  public boolean parse(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #14                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
       7: invokevirtual #15                 // Method parse:(Ljava/nio/ByteBuffer;)Z
      10: ireturn

  public boolean parse(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #11                 // Field factory:Lorg/eclipse/jetty/util/ajax/AsyncJSON$Factory;
       4: invokevirtual #16                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Factory.isDetailedParseException:()Z
       7: ifeq          78
      10: aload_0
      11: getfield      #17                 // Field chunks:Ljava/util/List;
      14: ifnonnull     28
      17: aload_0
      18: new           #18                 // class java/util/ArrayList
      21: dup
      22: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      25: putfield      #17                 // Field chunks:Ljava/util/List;
      28: aload_1
      29: invokevirtual #20                 // Method java/nio/ByteBuffer.isDirect:()Z
      32: ifeq          45
      35: aload_1
      36: invokevirtual #21                 // Method java/nio/ByteBuffer.remaining:()I
      39: invokestatic  #22                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      42: goto          52
      45: aload_1
      46: invokevirtual #21                 // Method java/nio/ByteBuffer.remaining:()I
      49: invokestatic  #23                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      52: astore_2
      53: aload_2
      54: aload_1
      55: invokevirtual #24                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      58: invokevirtual #25                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      61: pop
      62: aload_0
      63: getfield      #17                 // Field chunks:Ljava/util/List;
      66: aload_2
      67: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_1
      74: invokevirtual #25                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      77: pop
      78: aload_0
      79: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      82: invokestatic  #12                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$600:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Z
      85: ifeq          101
      88: aload_0
      89: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      92: getstatic     #27                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.COMPLETE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      95: getstatic     #28                 // Field UNSET:Ljava/lang/Object;
      98: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
     101: aload_0
     102: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     105: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     108: astore_2
     109: aload_2
     110: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     113: astore_3
     114: getstatic     #32                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$1.$SwitchMap$org$eclipse$jetty$util$ajax$AsyncJSON$State:[I
     117: aload_3
     118: invokevirtual #33                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$State.ordinal:()I
     121: iaload
     122: tableswitch   { // 1 to 13
                     1: 188
                     2: 265
                     3: 278
                     4: 291
                     5: 304
                     6: 317
                     7: 330
                     8: 343
                     9: 356
                    10: 369
                    11: 382
                    12: 395
                    13: 408
               default: 421
          }
     188: aload_2
     189: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
     192: getstatic     #28                 // Field UNSET:Ljava/lang/Object;
     195: if_acmpne     211
     198: aload_0
     199: aload_1
     200: invokespecial #35                 // Method parseAny:(Ljava/nio/ByteBuffer;)Z
     203: ifeq          209
     206: goto          448
     209: iconst_0
     210: ireturn
     211: aload_1
     212: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     215: ifeq          263
     218: aload_1
     219: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
     222: istore        4
     224: aload_1
     225: iload         4
     227: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
     230: istore        5
     232: iload         5
     234: invokestatic  #39                 // Method isWhitespace:(B)Z
     237: ifeq          252
     240: aload_1
     241: iload         4
     243: iconst_1
     244: iadd
     245: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     248: pop
     249: goto          260
     252: aload_0
     253: aload_1
     254: ldc           #41                 // String invalid character after JSON data
     256: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     259: athrow
     260: goto          211
     263: iconst_1
     264: ireturn
     265: aload_0
     266: aload_1
     267: invokespecial #43                 // Method parseNull:(Ljava/nio/ByteBuffer;)Z
     270: ifeq          276
     273: goto          448
     276: iconst_0
     277: ireturn
     278: aload_0
     279: aload_1
     280: invokespecial #44                 // Method parseTrue:(Ljava/nio/ByteBuffer;)Z
     283: ifeq          289
     286: goto          448
     289: iconst_0
     290: ireturn
     291: aload_0
     292: aload_1
     293: invokespecial #45                 // Method parseFalse:(Ljava/nio/ByteBuffer;)Z
     296: ifeq          302
     299: goto          448
     302: iconst_0
     303: ireturn
     304: aload_0
     305: aload_1
     306: invokespecial #46                 // Method parseNumber:(Ljava/nio/ByteBuffer;)Z
     309: ifeq          315
     312: goto          448
     315: iconst_0
     316: ireturn
     317: aload_0
     318: aload_1
     319: invokespecial #47                 // Method parseString:(Ljava/nio/ByteBuffer;)Z
     322: ifeq          328
     325: goto          448
     328: iconst_0
     329: ireturn
     330: aload_0
     331: aload_1
     332: invokespecial #48                 // Method parseEscape:(Ljava/nio/ByteBuffer;)Z
     335: ifeq          341
     338: goto          448
     341: iconst_0
     342: ireturn
     343: aload_0
     344: aload_1
     345: invokespecial #49                 // Method parseUnicode:(Ljava/nio/ByteBuffer;)Z
     348: ifeq          354
     351: goto          448
     354: iconst_0
     355: ireturn
     356: aload_0
     357: aload_1
     358: invokespecial #50                 // Method parseArray:(Ljava/nio/ByteBuffer;)Z
     361: ifeq          367
     364: goto          448
     367: iconst_0
     368: ireturn
     369: aload_0
     370: aload_1
     371: invokespecial #51                 // Method parseObject:(Ljava/nio/ByteBuffer;)Z
     374: ifeq          380
     377: goto          448
     380: iconst_0
     381: ireturn
     382: aload_0
     383: aload_1
     384: invokespecial #52                 // Method parseObjectField:(Ljava/nio/ByteBuffer;)Z
     387: ifeq          393
     390: goto          448
     393: iconst_0
     394: ireturn
     395: aload_0
     396: aload_1
     397: invokespecial #53                 // Method parseObjectFieldName:(Ljava/nio/ByteBuffer;)Z
     400: ifeq          406
     403: goto          448
     406: iconst_0
     407: ireturn
     408: aload_0
     409: aload_1
     410: invokespecial #54                 // Method parseObjectFieldValue:(Ljava/nio/ByteBuffer;)Z
     413: ifeq          419
     416: goto          448
     419: iconst_0
     420: ireturn
     421: new           #55                 // class java/lang/IllegalStateException
     424: dup
     425: new           #56                 // class java/lang/StringBuilder
     428: dup
     429: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     432: ldc           #58                 // String invalid state
     434: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: aload_3
     438: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     441: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     444: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     447: athrow
     448: goto          101
     451: astore_2
     452: aload_0
     453: invokespecial #64                 // Method reset:()V
     456: aload_2
     457: athrow
    Exception table:
       from    to  target type
           0   210   451   Class java/lang/Throwable
         211   264   451   Class java/lang/Throwable
         265   277   451   Class java/lang/Throwable
         278   290   451   Class java/lang/Throwable
         291   303   451   Class java/lang/Throwable
         304   316   451   Class java/lang/Throwable
         317   329   451   Class java/lang/Throwable
         330   342   451   Class java/lang/Throwable
         343   355   451   Class java/lang/Throwable
         356   368   451   Class java/lang/Throwable
         369   381   451   Class java/lang/Throwable
         382   394   451   Class java/lang/Throwable
         395   407   451   Class java/lang/Throwable
         408   420   451   Class java/lang/Throwable
         421   451   451   Class java/lang/Throwable

  public <R> R complete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #12                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$600:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Z
       7: ifeq          20
      10: new           #55                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #65                 // String no JSON parsed
      16: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      24: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      27: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      30: astore_1
      31: getstatic     #32                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$1.$SwitchMap$org$eclipse$jetty$util$ajax$AsyncJSON$State:[I
      34: aload_1
      35: invokevirtual #33                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$State.ordinal:()I
      38: iaload
      39: lookupswitch  { // 2
                     1: 93
                     5: 64
               default: 141
          }
      64: aload_0
      65: getfield      #7                  // Field numberBuilder:Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;
      68: invokestatic  #66                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder.access$1100:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;)Ljava/lang/Number;
      71: astore_2
      72: aload_0
      73: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      76: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
      79: aload_0
      80: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      83: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      86: aload_2
      87: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
      90: goto          151
      93: aload_0
      94: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      97: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     100: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
     103: getstatic     #28                 // Field UNSET:Ljava/lang/Object;
     106: if_acmpne     136
     109: new           #55                 // class java/lang/IllegalStateException
     112: dup
     113: new           #56                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #58                 // String invalid state
     122: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload_0
     137: invokespecial #69                 // Method end:()Ljava/lang/Object;
     140: areturn
     141: aload_0
     142: getstatic     #70                 // Field org/eclipse/jetty/util/BufferUtil.EMPTY_BUFFER:Ljava/nio/ByteBuffer;
     145: ldc           #71                 // String incomplete JSON
     147: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     150: athrow
     151: goto          20
     154: astore_1
     155: aload_0
     156: invokespecial #64                 // Method reset:()V
     159: aload_1
     160: athrow
    Exception table:
       from    to  target type
           0   140   154   Class java/lang/Throwable
         141   154   154   Class java/lang/Throwable

  protected java.util.Map<java.lang.String, java.lang.Object> newObject(org.eclipse.jetty.util.ajax.AsyncJSON$Context);
    Code:
       0: new           #72                 // class java/util/HashMap
       3: dup
       4: invokespecial #73                 // Method java/util/HashMap."<init>":()V
       7: areturn

  protected java.util.List<java.lang.Object> newArray(org.eclipse.jetty.util.ajax.AsyncJSON$Context);
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  private java.lang.Object end();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
       7: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      10: astore_1
      11: aload_0
      12: invokespecial #64                 // Method reset:()V
      15: aload_1
      16: areturn

  private void reset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #74                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1400:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
       7: aload_0
       8: aconst_null
       9: putfield      #17                 // Field chunks:Ljava/util/List;
      12: return

  private boolean parseAny(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          260
       7: aload_1
       8: aload_1
       9: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
      12: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      15: istore_2
      16: iload_2
      17: lookupswitch  { // 17
                    34: 194
                    45: 184
                    48: 184
                    49: 184
                    50: 184
                    51: 184
                    52: 184
                    53: 184
                    54: 184
                    55: 184
                    56: 184
                    57: 184
                    91: 164
                   102: 204
                   110: 214
                   116: 224
                   123: 174
               default: 234
          }
     164: aload_0
     165: aload_1
     166: invokespecial #50                 // Method parseArray:(Ljava/nio/ByteBuffer;)Z
     169: ifeq          257
     172: iconst_1
     173: ireturn
     174: aload_0
     175: aload_1
     176: invokespecial #51                 // Method parseObject:(Ljava/nio/ByteBuffer;)Z
     179: ifeq          257
     182: iconst_1
     183: ireturn
     184: aload_0
     185: aload_1
     186: invokespecial #46                 // Method parseNumber:(Ljava/nio/ByteBuffer;)Z
     189: ifeq          257
     192: iconst_1
     193: ireturn
     194: aload_0
     195: aload_1
     196: invokespecial #47                 // Method parseString:(Ljava/nio/ByteBuffer;)Z
     199: ifeq          257
     202: iconst_1
     203: ireturn
     204: aload_0
     205: aload_1
     206: invokespecial #45                 // Method parseFalse:(Ljava/nio/ByteBuffer;)Z
     209: ifeq          257
     212: iconst_1
     213: ireturn
     214: aload_0
     215: aload_1
     216: invokespecial #43                 // Method parseNull:(Ljava/nio/ByteBuffer;)Z
     219: ifeq          257
     222: iconst_1
     223: ireturn
     224: aload_0
     225: aload_1
     226: invokespecial #44                 // Method parseTrue:(Ljava/nio/ByteBuffer;)Z
     229: ifeq          257
     232: iconst_1
     233: ireturn
     234: iload_2
     235: invokestatic  #39                 // Method isWhitespace:(B)Z
     238: ifeq          249
     241: aload_1
     242: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
     245: pop
     246: goto          257
     249: aload_0
     250: aload_1
     251: ldc           #76                 // String unrecognized JSON value
     253: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     256: athrow
     257: goto          0
     260: iconst_0
     261: ireturn

  private boolean parseNull(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          184
       7: aload_1
       8: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: lookupswitch  { // 3
                   108: 104
                   110: 48
                   117: 95
               default: 173
          }
      48: aload_0
      49: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      52: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      55: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      58: getstatic     #77                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.NULL:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      61: if_acmpeq     87
      64: aload_0
      65: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      68: getstatic     #77                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.NULL:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      71: iconst_0
      72: invokestatic  #78                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      78: aload_0
      79: aload_1
      80: iconst_0
      81: invokespecial #79                 // Method parseNullCharacter:(Ljava/nio/ByteBuffer;I)V
      84: goto          181
      87: aload_0
      88: aload_1
      89: ldc           #80                 // String invalid \'null\' literal
      91: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
      94: athrow
      95: aload_0
      96: aload_1
      97: iconst_1
      98: invokespecial #79                 // Method parseNullCharacter:(Ljava/nio/ByteBuffer;I)V
     101: goto          181
     104: aload_0
     105: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     108: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     111: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
     114: checkcast     #81                 // class java/lang/Integer
     117: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
     120: istore_3
     121: iload_3
     122: iconst_2
     123: if_icmpeq     131
     126: iload_3
     127: iconst_3
     128: if_icmpne     140
     131: aload_0
     132: aload_1
     133: iload_3
     134: invokespecial #79                 // Method parseNullCharacter:(Ljava/nio/ByteBuffer;I)V
     137: goto          148
     140: aload_0
     141: aload_1
     142: ldc           #80                 // String invalid \'null\' literal
     144: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     147: athrow
     148: iload_3
     149: iconst_3
     150: if_icmpne     181
     153: aload_0
     154: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     157: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     160: aload_0
     161: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     164: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     167: aconst_null
     168: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
     171: iconst_1
     172: ireturn
     173: aload_0
     174: aload_1
     175: ldc           #80                 // String invalid \'null\' literal
     177: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     180: athrow
     181: goto          0
     184: iconst_0
     185: ireturn

  private void parseNullCharacter(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
       7: astore_3
       8: aload_3
       9: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      12: checkcast     #81                 // class java/lang/Integer
      15: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpne     42
      26: aload_3
      27: iinc          4, 1
      30: iload         4
      32: invokestatic  #78                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokestatic  #83                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1002:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: goto          50
      42: aload_0
      43: aload_1
      44: ldc           #80                 // String invalid \'null\' literal
      46: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
      49: athrow
      50: return

  private boolean parseTrue(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          160
       7: aload_1
       8: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: lookupswitch  { // 4
                   101: 121
                   114: 103
                   116: 56
                   117: 112
               default: 149
          }
      56: aload_0
      57: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      60: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      63: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      66: getstatic     #84                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.TRUE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      69: if_acmpeq     95
      72: aload_0
      73: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      76: getstatic     #84                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.TRUE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      79: iconst_0
      80: invokestatic  #78                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      86: aload_0
      87: aload_1
      88: iconst_0
      89: invokespecial #85                 // Method parseTrueCharacter:(Ljava/nio/ByteBuffer;I)V
      92: goto          157
      95: aload_0
      96: aload_1
      97: ldc           #86                 // String invalid \'true\' literal
      99: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     102: athrow
     103: aload_0
     104: aload_1
     105: iconst_1
     106: invokespecial #85                 // Method parseTrueCharacter:(Ljava/nio/ByteBuffer;I)V
     109: goto          157
     112: aload_0
     113: aload_1
     114: iconst_2
     115: invokespecial #85                 // Method parseTrueCharacter:(Ljava/nio/ByteBuffer;I)V
     118: goto          157
     121: aload_0
     122: aload_1
     123: iconst_3
     124: invokespecial #85                 // Method parseTrueCharacter:(Ljava/nio/ByteBuffer;I)V
     127: aload_0
     128: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     131: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     134: aload_0
     135: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     138: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     141: getstatic     #87                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     144: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
     147: iconst_1
     148: ireturn
     149: aload_0
     150: aload_1
     151: ldc           #86                 // String invalid \'true\' literal
     153: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     156: athrow
     157: goto          0
     160: iconst_0
     161: ireturn

  private void parseTrueCharacter(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
       7: astore_3
       8: aload_3
       9: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      12: checkcast     #81                 // class java/lang/Integer
      15: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpne     42
      26: aload_3
      27: iinc          4, 1
      30: iload         4
      32: invokestatic  #78                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokestatic  #83                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1002:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: goto          50
      42: aload_0
      43: aload_1
      44: ldc           #86                 // String invalid \'true\' literal
      46: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
      49: athrow
      50: return

  private boolean parseFalse(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          177
       7: aload_1
       8: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: lookupswitch  { // 5
                    97: 111
                   101: 138
                   102: 64
                   108: 120
                   115: 129
               default: 166
          }
      64: aload_0
      65: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      68: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      71: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      74: getstatic     #88                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.FALSE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      77: if_acmpeq     103
      80: aload_0
      81: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      84: getstatic     #88                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.FALSE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      87: iconst_0
      88: invokestatic  #78                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      94: aload_0
      95: aload_1
      96: iconst_0
      97: invokespecial #89                 // Method parseFalseCharacter:(Ljava/nio/ByteBuffer;I)V
     100: goto          174
     103: aload_0
     104: aload_1
     105: ldc           #90                 // String invalid \'false\' literal
     107: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     110: athrow
     111: aload_0
     112: aload_1
     113: iconst_1
     114: invokespecial #89                 // Method parseFalseCharacter:(Ljava/nio/ByteBuffer;I)V
     117: goto          174
     120: aload_0
     121: aload_1
     122: iconst_2
     123: invokespecial #89                 // Method parseFalseCharacter:(Ljava/nio/ByteBuffer;I)V
     126: goto          174
     129: aload_0
     130: aload_1
     131: iconst_3
     132: invokespecial #89                 // Method parseFalseCharacter:(Ljava/nio/ByteBuffer;I)V
     135: goto          174
     138: aload_0
     139: aload_1
     140: iconst_4
     141: invokespecial #89                 // Method parseFalseCharacter:(Ljava/nio/ByteBuffer;I)V
     144: aload_0
     145: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     148: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     151: aload_0
     152: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     155: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     158: getstatic     #91                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     161: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
     164: iconst_1
     165: ireturn
     166: aload_0
     167: aload_1
     168: ldc           #90                 // String invalid \'false\' literal
     170: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     173: athrow
     174: goto          0
     177: iconst_0
     178: ireturn

  private void parseFalseCharacter(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
       7: astore_3
       8: aload_3
       9: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      12: checkcast     #81                 // class java/lang/Integer
      15: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpne     42
      26: aload_3
      27: iinc          4, 1
      30: iload         4
      32: invokestatic  #78                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokestatic  #83                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1002:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: goto          50
      42: aload_0
      43: aload_1
      44: ldc           #90                 // String invalid \'false\' literal
      46: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
      49: athrow
      50: return

  private boolean parseNumber(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
       7: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      10: getstatic     #92                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.NUMBER:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      13: if_acmpeq     30
      16: aload_0
      17: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      20: getstatic     #92                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.NUMBER:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      23: aload_0
      24: getfield      #7                  // Field numberBuilder:Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;
      27: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      30: aload_1
      31: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      34: ifeq          389
      37: aload_1
      38: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      41: istore_2
      42: iload_2
      43: tableswitch   { // 43 to 101
                    43: 292
                    44: 347
                    45: 292
                    46: 314
                    47: 347
                    48: 336
                    49: 336
                    50: 336
                    51: 336
                    52: 336
                    53: 336
                    54: 336
                    55: 336
                    56: 336
                    57: 336
                    58: 347
                    59: 347
                    60: 347
                    61: 347
                    62: 347
                    63: 347
                    64: 347
                    65: 347
                    66: 347
                    67: 347
                    68: 347
                    69: 314
                    70: 347
                    71: 347
                    72: 347
                    73: 347
                    74: 347
                    75: 347
                    76: 347
                    77: 347
                    78: 347
                    79: 347
                    80: 347
                    81: 347
                    82: 347
                    83: 347
                    84: 347
                    85: 347
                    86: 347
                    87: 347
                    88: 347
                    89: 347
                    90: 347
                    91: 347
                    92: 347
                    93: 347
                    94: 347
                    95: 347
                    96: 347
                    97: 347
                    98: 347
                    99: 347
                   100: 347
                   101: 314
               default: 347
          }
     292: aload_0
     293: getfield      #7                  // Field numberBuilder:Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;
     296: iload_2
     297: invokestatic  #93                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder.access$1500:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;B)Z
     300: ifeq          306
     303: goto          386
     306: aload_0
     307: aload_1
     308: ldc           #94                 // String invalid number
     310: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     313: athrow
     314: aload_0
     315: getfield      #7                  // Field numberBuilder:Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;
     318: iload_2
     319: invokestatic  #95                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder.access$1600:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;B)Z
     322: ifeq          328
     325: goto          386
     328: aload_0
     329: aload_1
     330: ldc           #94                 // String invalid number
     332: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     335: athrow
     336: aload_0
     337: getfield      #7                  // Field numberBuilder:Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;
     340: iload_2
     341: invokestatic  #96                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder.access$1700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;B)V
     344: goto          386
     347: aload_1
     348: aload_1
     349: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
     352: iconst_1
     353: isub
     354: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     357: pop
     358: aload_0
     359: getfield      #7                  // Field numberBuilder:Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;
     362: invokestatic  #66                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder.access$1100:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$NumberBuilder;)Ljava/lang/Number;
     365: astore_3
     366: aload_0
     367: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     370: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     373: aload_0
     374: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     377: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     380: aload_3
     381: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
     384: iconst_1
     385: ireturn
     386: goto          30
     389: iconst_0
     390: ireturn

  private boolean parseString(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
       7: astore_2
       8: aload_1
       9: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifeq          45
      15: aload_2
      16: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      19: getstatic     #97                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.STRING:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      22: if_acmpeq     45
      25: aload_0
      26: getfield      #11                 // Field factory:Lorg/eclipse/jetty/util/ajax/AsyncJSON$Factory;
      29: aload_1
      30: invokevirtual #98                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Factory.cached:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
      33: astore_3
      34: aload_3
      35: ifnull        45
      38: aload_2
      39: aload_3
      40: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
      43: iconst_1
      44: ireturn
      45: aload_1
      46: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      49: ifeq          189
      52: aload_1
      53: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      56: istore_3
      57: iload_3
      58: lookupswitch  { // 2
                    34: 84
                    92: 154
               default: 178
          }
      84: aload_0
      85: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      88: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      91: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      94: getstatic     #97                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.STRING:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      97: if_acmpeq     117
     100: aload_0
     101: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     104: getstatic     #97                 // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.STRING:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     107: aload_0
     108: getfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
     111: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
     114: goto          186
     117: aload_0
     118: getfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
     121: invokevirtual #99                 // Method org/eclipse/jetty/util/Utf8StringBuilder.toString:()Ljava/lang/String;
     124: astore        4
     126: aload_0
     127: getfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
     130: invokevirtual #100                // Method org/eclipse/jetty/util/Utf8StringBuilder.reset:()V
     133: aload_0
     134: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     137: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     140: aload_0
     141: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     144: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     147: aload         4
     149: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
     152: iconst_1
     153: ireturn
     154: aload_1
     155: aload_1
     156: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
     159: iconst_1
     160: isub
     161: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     164: pop
     165: aload_0
     166: aload_1
     167: invokespecial #48                 // Method parseEscape:(Ljava/nio/ByteBuffer;)Z
     170: ifeq          176
     173: goto          186
     176: iconst_0
     177: ireturn
     178: aload_0
     179: getfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
     182: iload_3
     183: invokevirtual #101                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(B)V
     186: goto          45
     189: iconst_0
     190: ireturn

  private boolean parseEscape(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          209
       7: aload_1
       8: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: lookupswitch  { // 9
                    34: 136
                    47: 136
                    92: 96
                    98: 143
                   102: 150
                   110: 157
                   114: 164
                   116: 171
                   117: 178
               default: 198
          }
      96: aload_0
      97: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     100: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     103: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     106: getstatic     #102                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.ESCAPE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     109: if_acmpeq     129
     112: aload_0
     113: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     116: getstatic     #102                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.ESCAPE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     119: aload_0
     120: getfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
     123: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
     126: goto          206
     129: aload_0
     130: iload_2
     131: i2c
     132: invokespecial #103                // Method parseEscapeCharacter:(C)Z
     135: ireturn
     136: aload_0
     137: iload_2
     138: i2c
     139: invokespecial #103                // Method parseEscapeCharacter:(C)Z
     142: ireturn
     143: aload_0
     144: bipush        8
     146: invokespecial #103                // Method parseEscapeCharacter:(C)Z
     149: ireturn
     150: aload_0
     151: bipush        12
     153: invokespecial #103                // Method parseEscapeCharacter:(C)Z
     156: ireturn
     157: aload_0
     158: bipush        10
     160: invokespecial #103                // Method parseEscapeCharacter:(C)Z
     163: ireturn
     164: aload_0
     165: bipush        13
     167: invokespecial #103                // Method parseEscapeCharacter:(C)Z
     170: ireturn
     171: aload_0
     172: bipush        9
     174: invokespecial #103                // Method parseEscapeCharacter:(C)Z
     177: ireturn
     178: aload_0
     179: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     182: getstatic     #104                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.UNICODE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     185: iconst_4
     186: invokestatic  #23                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     189: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
     192: aload_0
     193: aload_1
     194: invokespecial #49                 // Method parseUnicode:(Ljava/nio/ByteBuffer;)Z
     197: ireturn
     198: aload_0
     199: aload_1
     200: ldc           #105                // String invalid escape sequence
     202: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     205: athrow
     206: goto          0
     209: iconst_0
     210: ireturn

  private boolean parseEscapeCharacter(char);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
       7: aload_0
       8: getfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
      11: iload_1
      12: invokevirtual #106                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(C)V
      15: iconst_1
      16: ireturn

  private boolean parseUnicode(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          106
       7: aload_1
       8: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: aload_0
      13: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      16: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      19: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      22: checkcast     #107                // class java/nio/ByteBuffer
      25: astore_3
      26: aload_3
      27: aload_0
      28: aload_1
      29: iload_2
      30: invokespecial #108                // Method hexToByte:(Ljava/nio/ByteBuffer;B)B
      33: invokevirtual #109                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      36: pop
      37: aload_3
      38: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      41: ifne          103
      44: aload_3
      45: iconst_0
      46: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      49: bipush        12
      51: ishl
      52: aload_3
      53: iconst_1
      54: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      57: bipush        8
      59: ishl
      60: iadd
      61: aload_3
      62: iconst_2
      63: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      66: iconst_4
      67: ishl
      68: iadd
      69: aload_3
      70: iconst_3
      71: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      74: iadd
      75: istore        4
      77: aload_0
      78: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      81: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
      84: aload_0
      85: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      88: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
      91: aload_0
      92: getfield      #10                 // Field stringBuilder:Lorg/eclipse/jetty/util/Utf8StringBuilder;
      95: iload         4
      97: i2c
      98: invokevirtual #106                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(C)V
     101: iconst_1
     102: ireturn
     103: goto          0
     106: iconst_0
     107: ireturn

  private byte hexToByte(java.nio.ByteBuffer, byte);
    Code:
       0: iload_2
       1: invokestatic  #110                // Method org/eclipse/jetty/util/TypeUtil.convertHexDigit:(B)B
       4: ireturn
       5: astore_3
       6: aload_0
       7: aload_1
       8: ldc           #111                // String invalid hex digit
      10: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
      13: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/Throwable

  private boolean parseArray(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          160
       7: aload_1
       8: aload_1
       9: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
      12: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      15: istore_2
      16: iload_2
      17: lookupswitch  { // 3
                    44: 121
                    91: 52
                    93: 78
               default: 129
          }
      52: aload_1
      53: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      56: pop
      57: aload_0
      58: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      61: getstatic     #112                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.ARRAY:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      64: aload_0
      65: aload_0
      66: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      69: invokevirtual #113                // Method newArray:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Context;)Ljava/util/List;
      72: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      75: goto          157
      78: aload_1
      79: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      82: pop
      83: aload_0
      84: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      87: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      90: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      93: checkcast     #114                // class java/util/List
      96: astore_3
      97: aload_0
      98: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     101: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     104: aload_0
     105: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     108: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     111: aload_0
     112: aload_3
     113: invokespecial #115                // Method convertArray:(Ljava/util/List;)Ljava/lang/Object;
     116: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
     119: iconst_1
     120: ireturn
     121: aload_1
     122: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
     125: pop
     126: goto          157
     129: iload_2
     130: invokestatic  #39                 // Method isWhitespace:(B)Z
     133: ifeq          144
     136: aload_1
     137: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
     140: pop
     141: goto          157
     144: aload_0
     145: aload_1
     146: invokespecial #35                 // Method parseAny:(Ljava/nio/ByteBuffer;)Z
     149: ifeq          155
     152: goto          157
     155: iconst_0
     156: ireturn
     157: goto          0
     160: iconst_0
     161: ireturn

  private boolean parseObject(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          171
       7: aload_1
       8: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: lookupswitch  { // 3
                    44: 131
                   123: 48
                   125: 93
               default: 134
          }
      48: aload_0
      49: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      52: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      55: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      58: getstatic     #116                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      61: if_acmpeq     85
      64: aload_0
      65: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      68: getstatic     #116                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      71: aload_0
      72: aload_0
      73: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      76: invokevirtual #117                // Method newObject:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Context;)Ljava/util/Map;
      79: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      82: goto          168
      85: aload_0
      86: aload_1
      87: ldc           #118                // String invalid object
      89: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
      92: athrow
      93: aload_0
      94: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      97: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     100: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
     103: checkcast     #119                // class java/util/Map
     106: astore_3
     107: aload_0
     108: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     111: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     114: aload_0
     115: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     118: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     121: aload_0
     122: aload_3
     123: invokespecial #120                // Method convertObject:(Ljava/util/Map;)Ljava/lang/Object;
     126: invokestatic  #68                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1300:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;Ljava/lang/Object;)V
     129: iconst_1
     130: ireturn
     131: goto          168
     134: iload_2
     135: invokestatic  #39                 // Method isWhitespace:(B)Z
     138: ifeq          144
     141: goto          168
     144: aload_1
     145: aload_1
     146: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
     149: iconst_1
     150: isub
     151: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     154: pop
     155: aload_0
     156: aload_1
     157: invokespecial #52                 // Method parseObjectField:(Ljava/nio/ByteBuffer;)Z
     160: ifeq          166
     163: goto          168
     166: iconst_0
     167: ireturn
     168: goto          0
     171: iconst_0
     172: ireturn

  private boolean parseObjectField(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          132
       7: aload_1
       8: aload_1
       9: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
      12: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      15: istore_2
      16: iload_2
      17: lookupswitch  { // 1
                    34: 36
               default: 84
          }
      36: aload_0
      37: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      40: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      43: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      46: getstatic     #116                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      49: if_acmpne     78
      52: aload_0
      53: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      56: getstatic     #121                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT_FIELD:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      59: getstatic     #28                 // Field UNSET:Ljava/lang/Object;
      62: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      65: aload_0
      66: aload_1
      67: invokespecial #53                 // Method parseObjectFieldName:(Ljava/nio/ByteBuffer;)Z
      70: ifeq          76
      73: goto          129
      76: iconst_0
      77: ireturn
      78: aload_0
      79: aload_1
      80: invokespecial #54                 // Method parseObjectFieldValue:(Ljava/nio/ByteBuffer;)Z
      83: ireturn
      84: iload_2
      85: invokestatic  #39                 // Method isWhitespace:(B)Z
      88: ifeq          99
      91: aload_1
      92: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      95: pop
      96: goto          129
      99: aload_0
     100: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     103: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     106: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     109: getstatic     #122                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT_FIELD_VALUE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     112: if_acmpne     121
     115: aload_0
     116: aload_1
     117: invokespecial #54                 // Method parseObjectFieldValue:(Ljava/nio/ByteBuffer;)Z
     120: ireturn
     121: aload_0
     122: aload_1
     123: ldc           #123                // String invalid object field
     125: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     128: athrow
     129: goto          0
     132: iconst_0
     133: ireturn

  private boolean parseObjectFieldName(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          162
       7: aload_1
       8: aload_1
       9: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
      12: invokevirtual #38                 // Method java/nio/ByteBuffer.get:(I)B
      15: istore_2
      16: iload_2
      17: lookupswitch  { // 2
                    34: 44
                    58: 94
               default: 136
          }
      44: aload_0
      45: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      48: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      51: invokestatic  #31                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      54: getstatic     #121                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT_FIELD:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      57: if_acmpne     86
      60: aload_0
      61: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      64: getstatic     #124                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT_FIELD_NAME:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
      67: getstatic     #28                 // Field UNSET:Ljava/lang/Object;
      70: invokestatic  #29                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$700:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
      73: aload_0
      74: aload_1
      75: invokespecial #47                 // Method parseString:(Ljava/nio/ByteBuffer;)Z
      78: ifeq          84
      81: goto          159
      84: iconst_0
      85: ireturn
      86: aload_0
      87: aload_1
      88: ldc           #123                // String invalid object field
      90: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
      93: athrow
      94: aload_1
      95: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
      98: pop
      99: aload_0
     100: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     103: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
     106: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
     109: checkcast     #125                // class java/lang/String
     112: astore_3
     113: aload_0
     114: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     117: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
     120: aload_0
     121: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
     124: aload_3
     125: getstatic     #122                // Field org/eclipse/jetty/util/ajax/AsyncJSON$State.OBJECT_FIELD_VALUE:Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;
     128: getstatic     #28                 // Field UNSET:Ljava/lang/Object;
     131: invokestatic  #126                // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;Ljava/lang/String;Lorg/eclipse/jetty/util/ajax/AsyncJSON$State;Ljava/lang/Object;)V
     134: iconst_1
     135: ireturn
     136: iload_2
     137: invokestatic  #39                 // Method isWhitespace:(B)Z
     140: ifeq          151
     143: aload_1
     144: invokevirtual #75                 // Method java/nio/ByteBuffer.get:()B
     147: pop
     148: goto          159
     151: aload_0
     152: aload_1
     153: ldc           #123                // String invalid object field
     155: invokevirtual #42                 // Method newInvalidJSON:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/RuntimeException;
     158: athrow
     159: goto          0
     162: iconst_0
     163: ireturn

  private boolean parseObjectFieldValue(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
       4: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
       7: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      10: getstatic     #28                 // Field UNSET:Ljava/lang/Object;
      13: if_acmpne     26
      16: aload_0
      17: aload_1
      18: invokespecial #35                 // Method parseAny:(Ljava/nio/ByteBuffer;)Z
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      30: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      33: astore_2
      34: aload_2
      35: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      38: astore_3
      39: aload_2
      40: invokestatic  #127                // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1900:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/String;
      43: astore        4
      45: aload_0
      46: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      49: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
      52: aload_0
      53: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      56: invokestatic  #67                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$1200:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)V
      59: aload_0
      60: getfield      #4                  // Field stack:Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;
      63: invokestatic  #30                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$FrameStack.access$800:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$FrameStack;)Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;
      66: invokestatic  #34                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Frame.access$1000:(Lorg/eclipse/jetty/util/ajax/AsyncJSON$Frame;)Ljava/lang/Object;
      69: checkcast     #119                // class java/util/Map
      72: astore        5
      74: aload         5
      76: aload         4
      78: aload_3
      79: invokeinterface #128,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: iconst_1
      86: ireturn

  private java.lang.Object convertArray(java.util.List<?>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field factory:Lorg/eclipse/jetty/util/ajax/AsyncJSON$Factory;
       4: invokevirtual #129                // Method org/eclipse/jetty/util/ajax/AsyncJSON$Factory.getArrayConverter:()Ljava/util/function/Function;
       7: aload_1
       8: invokeinterface #130,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private java.lang.Object convertObject(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ldc           #131                // String x-class
       3: aload_1
       4: invokespecial #132                // Method convertObject:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: ifnonnull     26
      12: aload_0
      13: ldc           #133                // String class
      15: aload_1
      16: invokespecial #132                // Method convertObject:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
      19: astore_2
      20: aload_2
      21: ifnonnull     26
      24: aload_1
      25: areturn
      26: aload_2
      27: areturn

  private java.lang.Object convertObject(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #134,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #125                // class java/lang/String
      10: astore_3
      11: aload_3
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: aload_3
      19: invokespecial #135                // Method toConvertible:(Ljava/lang/String;)Lorg/eclipse/jetty/util/ajax/JSON$Convertible;
      22: astore        4
      24: aload         4
      26: ifnull        40
      29: aload         4
      31: aload_2
      32: invokeinterface #136,  2          // InterfaceMethod org/eclipse/jetty/util/ajax/JSON$Convertible.fromJSON:(Ljava/util/Map;)V
      37: aload         4
      39: areturn
      40: aload_0
      41: getfield      #11                 // Field factory:Lorg/eclipse/jetty/util/ajax/AsyncJSON$Factory;
      44: aload_3
      45: invokevirtual #137                // Method org/eclipse/jetty/util/ajax/AsyncJSON$Factory.getConvertor:(Ljava/lang/String;)Lorg/eclipse/jetty/util/ajax/JSON$Convertor;
      48: astore        5
      50: aload         5
      52: ifnull        64
      55: aload         5
      57: aload_2
      58: invokeinterface #138,  2          // InterfaceMethod org/eclipse/jetty/util/ajax/JSON$Convertor.fromJSON:(Ljava/util/Map;)Ljava/lang/Object;
      63: areturn
      64: aconst_null
      65: areturn

  private org.eclipse.jetty.util.ajax.JSON$Convertible toConvertible(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #139                // Method org/eclipse/jetty/util/Loader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       4: astore_2
       5: ldc           #140                // class org/eclipse/jetty/util/ajax/JSON$Convertible
       7: aload_2
       8: invokevirtual #141                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: ifeq          33
      14: aload_2
      15: iconst_0
      16: anewarray     #142                // class java/lang/Class
      19: invokevirtual #143                // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      22: iconst_0
      23: anewarray     #144                // class java/lang/Object
      26: invokevirtual #145                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #140                // class org/eclipse/jetty/util/ajax/JSON$Convertible
      32: areturn
      33: aconst_null
      34: areturn
      35: astore_2
      36: new           #146                // class java/lang/IllegalArgumentException
      39: dup
      40: aload_2
      41: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      44: athrow
    Exception table:
       from    to  target type
           0    32    35   Class java/lang/Throwable
          33    34    35   Class java/lang/Throwable

  protected java.lang.RuntimeException newInvalidJSON(java.nio.ByteBuffer, java.lang.String);
    Code:
       0: new           #8                  // class org/eclipse/jetty/util/Utf8StringBuilder
       3: dup
       4: invokespecial #148                // Method org/eclipse/jetty/util/Utf8StringBuilder."<init>":()V
       7: astore_3
       8: aload_3
       9: invokestatic  #149                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
      12: invokevirtual #150                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(Ljava/lang/String;)V
      15: aload_1
      16: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
      19: istore        4
      21: aload_0
      22: getfield      #11                 // Field factory:Lorg/eclipse/jetty/util/ajax/AsyncJSON$Factory;
      25: invokevirtual #16                 // Method org/eclipse/jetty/util/ajax/AsyncJSON$Factory.isDetailedParseException:()Z
      28: ifeq          50
      31: aload_0
      32: getfield      #17                 // Field chunks:Ljava/util/List;
      35: aload_3
      36: aload_1
      37: invokedynamic #151,  0            // InvokeDynamic #0:accept:(Lorg/eclipse/jetty/util/Utf8StringBuilder;Ljava/nio/ByteBuffer;)Ljava/util/function/Consumer;
      42: invokeinterface #152,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      47: goto          68
      50: aload_1
      51: iconst_0
      52: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      55: pop
      56: aload_3
      57: aload_1
      58: invokevirtual #153                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(Ljava/nio/ByteBuffer;)V
      61: aload_1
      62: iload         4
      64: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: aload_3
      69: invokestatic  #149                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
      72: invokevirtual #150                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(Ljava/lang/String;)V
      75: ldc           #154                // String
      77: astore        5
      79: iload         4
      81: iconst_1
      82: if_icmple     111
      85: iload         4
      87: iconst_1
      88: isub
      89: newarray       char
      91: astore        6
      93: aload         6
      95: bipush        32
      97: invokestatic  #155                // Method java/util/Arrays.fill:([CC)V
     100: new           #125                // class java/lang/String
     103: dup
     104: aload         6
     106: invokespecial #156                // Method java/lang/String."<init>":([C)V
     109: astore        5
     111: aload_3
     112: aload         5
     114: invokevirtual #150                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(Ljava/lang/String;)V
     117: aload_3
     118: ldc           #157                // String ^
     120: invokevirtual #150                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(Ljava/lang/String;)V
     123: aload_3
     124: aload_2
     125: invokevirtual #150                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(Ljava/lang/String;)V
     128: new           #146                // class java/lang/IllegalArgumentException
     131: dup
     132: aload_3
     133: invokevirtual #99                 // Method org/eclipse/jetty/util/Utf8StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #158                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: areturn

  private static boolean isWhitespace(byte);
    Code:
       0: iload_0
       1: lookupswitch  { // 4
                     9: 44
                    10: 44
                    13: 44
                    32: 44
               default: 46
          }
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn

  private static void lambda$newInvalidJSON$0(org.eclipse.jetty.util.Utf8StringBuilder, java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #153                // Method org/eclipse/jetty/util/Utf8StringBuilder.append:(Ljava/nio/ByteBuffer;)V
       5: return

  static {};
    Code:
       0: new           #144                // class java/lang/Object
       3: dup
       4: invokespecial #1                  // Method java/lang/Object."<init>":()V
       7: putstatic     #28                 // Field UNSET:Ljava/lang/Object;
      10: return
}
