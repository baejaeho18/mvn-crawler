Compiled from "JSON.java"
public class org.eclipse.jetty.util.ajax.JSON$ReaderSource implements org.eclipse.jetty.util.ajax.JSON$Source {
  private java.io.Reader _reader;

  private int _next;

  private char[] scratch;

  public org.eclipse.jetty.util.ajax.JSON$ReaderSource(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field _next:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field _reader:Ljava/io/Reader;
      14: return

  public void setReader(java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field _reader:Ljava/io/Reader;
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field _next:I
      10: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getNext:()V
       4: aload_0
       5: getfield      #2                  // Field _next:I
       8: ifge          18
      11: aload_0
      12: aconst_null
      13: putfield      #5                  // Field scratch:[C
      16: iconst_0
      17: ireturn
      18: iconst_1
      19: ireturn

  public char next();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getNext:()V
       4: aload_0
       5: getfield      #2                  // Field _next:I
       8: i2c
       9: istore_1
      10: aload_0
      11: iconst_m1
      12: putfield      #2                  // Field _next:I
      15: iload_1
      16: ireturn

  public char peek();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getNext:()V
       4: aload_0
       5: getfield      #2                  // Field _next:I
       8: i2c
       9: ireturn

  private void getNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _next:I
       4: ifge          31
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field _reader:Ljava/io/Reader;
      12: invokevirtual #6                  // Method java/io/Reader.read:()I
      15: putfield      #2                  // Field _next:I
      18: goto          31
      21: astore_1
      22: new           #8                  // class java/lang/RuntimeException
      25: dup
      26: aload_1
      27: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: return
    Exception table:
       from    to  target type
           7    18    21   Class java/io/IOException

  public char[] scratchBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scratch:[C
       4: ifnonnull     16
       7: aload_0
       8: sipush        1024
      11: newarray       char
      13: putfield      #5                  // Field scratch:[C
      16: aload_0
      17: getfield      #5                  // Field scratch:[C
      20: areturn
}
