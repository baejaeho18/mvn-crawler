Compiled from "Tokenizer.java"
public class org.xbill.DNS.Tokenizer$Token {
  public int type;

  public java.lang.String value;

  private org.xbill.DNS.Tokenizer$Token();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #4                  // Field type:I
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field value:Ljava/lang/String;
      14: return

  private org.xbill.DNS.Tokenizer$Token set(int, java.lang.StringBuffer);
    Code:
       0: iload_1
       1: ifge          12
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_0
      13: iload_1
      14: putfield      #4                  // Field type:I
      17: aload_0
      18: aload_2
      19: ifnonnull     26
      22: aconst_null
      23: goto          30
      26: aload_2
      27: invokevirtual #8                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      30: putfield      #5                  // Field value:Ljava/lang/String;
      33: aload_0
      34: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 47
                     2: 50
                     3: 53
                     4: 81
                     5: 109
               default: 137
          }
      44: ldc           #9                  // String <eof>
      46: areturn
      47: ldc           #10                 // String <eol>
      49: areturn
      50: ldc           #11                 // String <whitespace>
      52: areturn
      53: new           #12                 // class java/lang/StringBuffer
      56: dup
      57: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      60: ldc           #14                 // String <identifier:
      62: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      65: aload_0
      66: getfield      #5                  // Field value:Ljava/lang/String;
      69: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      72: ldc           #16                 // String >
      74: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      77: invokevirtual #8                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      80: areturn
      81: new           #12                 // class java/lang/StringBuffer
      84: dup
      85: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      88: ldc           #17                 // String <quoted_string:
      90: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      93: aload_0
      94: getfield      #5                  // Field value:Ljava/lang/String;
      97: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     100: ldc           #16                 // String >
     102: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     105: invokevirtual #8                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     108: areturn
     109: new           #12                 // class java/lang/StringBuffer
     112: dup
     113: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
     116: ldc           #18                 // String <comment:
     118: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     121: aload_0
     122: getfield      #5                  // Field value:Ljava/lang/String;
     125: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     128: ldc           #16                 // String >
     130: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     133: invokevirtual #8                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     136: areturn
     137: ldc           #19                 // String <unknown>
     139: areturn

  public boolean isString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: iconst_3
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #4                  // Field type:I
      12: iconst_4
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isEOL();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:I
       4: iconst_1
       5: if_icmpeq     15
       8: aload_0
       9: getfield      #4                  // Field type:I
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  org.xbill.DNS.Tokenizer$Token(org.xbill.DNS.Tokenizer$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return

  static org.xbill.DNS.Tokenizer$Token access$100(org.xbill.DNS.Tokenizer$Token, int, java.lang.StringBuffer);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #1                  // Method set:(ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
       6: areturn
}
