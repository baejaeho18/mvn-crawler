Compiled from "Zone.java"
public class org.xbill.DNS.Zone implements java.io.Serializable {
  private static final long serialVersionUID;

  public static final int PRIMARY;

  public static final int SECONDARY;

  private java.util.Map data;

  private org.xbill.DNS.Name origin;

  private java.lang.Object originNode;

  private int dclass;

  private org.xbill.DNS.RRset NS;

  private org.xbill.DNS.SOARecord SOA;

  private boolean hasWild;

  private void validate() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       6: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       9: putfield      #4                  // Field originNode:Ljava/lang/Object;
      12: aload_0
      13: getfield      #4                  // Field originNode:Ljava/lang/Object;
      16: ifnonnull     49
      19: new           #7                  // class java/io/IOException
      22: dup
      23: new           #8                  // class java/lang/StringBuffer
      26: dup
      27: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      30: aload_0
      31: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      34: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      37: ldc           #11                 // String : no data specified
      39: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      45: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_0
      51: getfield      #4                  // Field originNode:Ljava/lang/Object;
      54: bipush        6
      56: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
      59: astore_1
      60: aload_1
      61: ifnull        72
      64: aload_1
      65: invokevirtual #15                 // Method org/xbill/DNS/RRset.size:()I
      68: iconst_1
      69: if_icmpeq     102
      72: new           #7                  // class java/io/IOException
      75: dup
      76: new           #8                  // class java/lang/StringBuffer
      79: dup
      80: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      83: aload_0
      84: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      87: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      90: ldc           #16                 // String : exactly 1 SOA must be specified
      92: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      95: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      98: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_1
     103: invokevirtual #17                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/Iterator;
     106: astore_2
     107: aload_0
     108: aload_2
     109: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: checkcast     #19                 // class org/xbill/DNS/SOARecord
     117: putfield      #20                 // Field SOA:Lorg/xbill/DNS/SOARecord;
     120: aload_0
     121: aload_0
     122: aload_0
     123: getfield      #4                  // Field originNode:Ljava/lang/Object;
     126: iconst_2
     127: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     130: putfield      #21                 // Field NS:Lorg/xbill/DNS/RRset;
     133: aload_0
     134: getfield      #21                 // Field NS:Lorg/xbill/DNS/RRset;
     137: ifnonnull     170
     140: new           #7                  // class java/io/IOException
     143: dup
     144: new           #8                  // class java/lang/StringBuffer
     147: dup
     148: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
     151: aload_0
     152: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
     155: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     158: ldc           #22                 // String : no NS set specified
     160: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     163: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     166: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: return

  private final void maybeAddRecord(org.xbill.DNS.Record) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/xbill/DNS/Record.getType:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #24                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       9: astore_3
      10: iload_2
      11: bipush        6
      13: if_icmpne     66
      16: aload_3
      17: aload_0
      18: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      21: invokevirtual #25                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      24: ifne          66
      27: new           #7                  // class java/io/IOException
      30: dup
      31: new           #8                  // class java/lang/StringBuffer
      34: dup
      35: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      38: ldc           #26                 // String SOA owner
      40: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: aload_3
      44: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      47: ldc           #27                 // String  does not match zone origin
      49: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: aload_0
      53: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      56: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      59: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      62: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_3
      67: aload_0
      68: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      71: invokevirtual #28                 // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
      74: ifeq          82
      77: aload_0
      78: aload_1
      79: invokevirtual #29                 // Method addRecord:(Lorg/xbill/DNS/Record;)V
      82: return

  public org.xbill.DNS.Zone(org.xbill.DNS.Name, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #31                 // Field dclass:I
       9: aload_0
      10: new           #32                 // class java/util/TreeMap
      13: dup
      14: invokespecial #33                 // Method java/util/TreeMap."<init>":()V
      17: putfield      #5                  // Field data:Ljava/util/Map;
      20: aload_1
      21: ifnonnull     34
      24: new           #34                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #35                 // String no zone name specified
      30: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: new           #37                 // class org/xbill/DNS/Master
      37: dup
      38: aload_2
      39: aload_1
      40: invokespecial #38                 // Method org/xbill/DNS/Master."<init>":(Ljava/lang/String;Lorg/xbill/DNS/Name;)V
      43: astore_3
      44: aload_0
      45: aload_1
      46: putfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      49: aload_3
      50: invokevirtual #39                 // Method org/xbill/DNS/Master.nextRecord:()Lorg/xbill/DNS/Record;
      53: dup
      54: astore        4
      56: ifnull        68
      59: aload_0
      60: aload         4
      62: invokespecial #40                 // Method maybeAddRecord:(Lorg/xbill/DNS/Record;)V
      65: goto          49
      68: aload_0
      69: invokespecial #41                 // Method validate:()V
      72: return

  public org.xbill.DNS.Zone(org.xbill.DNS.Name, org.xbill.DNS.Record[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #31                 // Field dclass:I
       9: aload_0
      10: new           #32                 // class java/util/TreeMap
      13: dup
      14: invokespecial #33                 // Method java/util/TreeMap."<init>":()V
      17: putfield      #5                  // Field data:Ljava/util/Map;
      20: aload_1
      21: ifnonnull     34
      24: new           #34                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #35                 // String no zone name specified
      30: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: putfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      39: iconst_0
      40: istore_3
      41: iload_3
      42: aload_2
      43: arraylength
      44: if_icmpge     60
      47: aload_0
      48: aload_2
      49: iload_3
      50: aaload
      51: invokespecial #40                 // Method maybeAddRecord:(Lorg/xbill/DNS/Record;)V
      54: iinc          3, 1
      57: goto          41
      60: aload_0
      61: invokespecial #41                 // Method validate:()V
      64: return

  private void fromXFR(org.xbill.DNS.ZoneTransferIn) throws java.io.IOException, org.xbill.DNS.ZoneTransferException;
    Code:
       0: aload_0
       1: new           #32                 // class java/util/TreeMap
       4: dup
       5: invokespecial #33                 // Method java/util/TreeMap."<init>":()V
       8: putfield      #5                  // Field data:Ljava/util/Map;
      11: aload_0
      12: aload_1
      13: invokevirtual #42                 // Method org/xbill/DNS/ZoneTransferIn.getName:()Lorg/xbill/DNS/Name;
      16: putfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      19: aload_1
      20: invokevirtual #43                 // Method org/xbill/DNS/ZoneTransferIn.run:()Ljava/util/List;
      23: astore_2
      24: aload_2
      25: invokeinterface #44,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore_3
      31: aload_3
      32: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          60
      40: aload_3
      41: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #46                 // class org/xbill/DNS/Record
      49: astore        4
      51: aload_0
      52: aload         4
      54: invokespecial #40                 // Method maybeAddRecord:(Lorg/xbill/DNS/Record;)V
      57: goto          31
      60: aload_1
      61: invokevirtual #47                 // Method org/xbill/DNS/ZoneTransferIn.isAXFR:()Z
      64: ifne          77
      67: new           #34                 // class java/lang/IllegalArgumentException
      70: dup
      71: ldc           #48                 // String zones can only be created from AXFRs
      73: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: invokespecial #41                 // Method validate:()V
      81: return

  public org.xbill.DNS.Zone(org.xbill.DNS.ZoneTransferIn) throws java.io.IOException, org.xbill.DNS.ZoneTransferException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #31                 // Field dclass:I
       9: aload_0
      10: aload_1
      11: invokespecial #49                 // Method fromXFR:(Lorg/xbill/DNS/ZoneTransferIn;)V
      14: return

  public org.xbill.DNS.Zone(org.xbill.DNS.Name, int, java.lang.String) throws java.io.IOException, org.xbill.DNS.ZoneTransferException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #31                 // Field dclass:I
       9: aload_1
      10: aload_3
      11: aconst_null
      12: invokestatic  #50                 // Method org/xbill/DNS/ZoneTransferIn.newAXFR:(Lorg/xbill/DNS/Name;Ljava/lang/String;Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;
      15: astore        4
      17: aload         4
      19: iload_2
      20: invokevirtual #51                 // Method org/xbill/DNS/ZoneTransferIn.setDClass:(I)V
      23: aload_0
      24: aload         4
      26: invokespecial #49                 // Method fromXFR:(Lorg/xbill/DNS/ZoneTransferIn;)V
      29: return

  public org.xbill.DNS.Name getOrigin();
    Code:
       0: aload_0
       1: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       4: areturn

  public org.xbill.DNS.RRset getNS();
    Code:
       0: aload_0
       1: getfield      #21                 // Field NS:Lorg/xbill/DNS/RRset;
       4: areturn

  public org.xbill.DNS.SOARecord getSOA();
    Code:
       0: aload_0
       1: getfield      #20                 // Field SOA:Lorg/xbill/DNS/SOARecord;
       4: areturn

  public int getDClass();
    Code:
       0: aload_0
       1: getfield      #31                 // Field dclass:I
       4: ireturn

  private synchronized java.lang.Object exactName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  private synchronized org.xbill.DNS.RRset[] allRRsets(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #53                 // class java/util/List
       4: ifeq          34
       7: aload_1
       8: checkcast     #53                 // class java/util/List
      11: astore_2
      12: aload_2
      13: aload_2
      14: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      19: anewarray     #55                 // class org/xbill/DNS/RRset
      22: invokeinterface #56,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      27: checkcast     #57                 // class "[Lorg/xbill/DNS/RRset;"
      30: checkcast     #57                 // class "[Lorg/xbill/DNS/RRset;"
      33: areturn
      34: aload_1
      35: checkcast     #55                 // class org/xbill/DNS/RRset
      38: astore_2
      39: iconst_1
      40: anewarray     #55                 // class org/xbill/DNS/RRset
      43: dup
      44: iconst_0
      45: aload_2
      46: aastore
      47: areturn

  private synchronized org.xbill.DNS.RRset oneRRset(java.lang.Object, int);
    Code:
       0: iload_2
       1: sipush        255
       4: if_icmpne     17
       7: new           #34                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #58                 // String oneRRset(ANY)
      13: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: instanceof    #53                 // class java/util/List
      21: ifeq          77
      24: aload_1
      25: checkcast     #53                 // class java/util/List
      28: astore_3
      29: iconst_0
      30: istore        4
      32: iload         4
      34: aload_3
      35: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      40: if_icmpge     74
      43: aload_3
      44: iload         4
      46: invokeinterface #59,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #55                 // class org/xbill/DNS/RRset
      54: astore        5
      56: aload         5
      58: invokevirtual #60                 // Method org/xbill/DNS/RRset.getType:()I
      61: iload_2
      62: if_icmpne     68
      65: aload         5
      67: areturn
      68: iinc          4, 1
      71: goto          32
      74: goto          92
      77: aload_1
      78: checkcast     #55                 // class org/xbill/DNS/RRset
      81: astore_3
      82: aload_3
      83: invokevirtual #60                 // Method org/xbill/DNS/RRset.getType:()I
      86: iload_2
      87: if_icmpne     92
      90: aload_3
      91: areturn
      92: aconst_null
      93: areturn

  private synchronized org.xbill.DNS.RRset findRRset(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_3
      14: iload_2
      15: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
      18: areturn

  private synchronized void addRRset(org.xbill.DNS.Name, org.xbill.DNS.RRset);
    Code:
       0: aload_0
       1: getfield      #61                 // Field hasWild:Z
       4: ifne          19
       7: aload_1
       8: invokevirtual #62                 // Method org/xbill/DNS/Name.isWild:()Z
      11: ifeq          19
      14: aload_0
      15: iconst_1
      16: putfield      #61                 // Field hasWild:Z
      19: aload_0
      20: getfield      #5                  // Field data:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore_3
      30: aload_3
      31: ifnonnull     47
      34: aload_0
      35: getfield      #5                  // Field data:Ljava/util/Map;
      38: aload_1
      39: aload_2
      40: invokeinterface #63,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: return
      47: aload_2
      48: invokevirtual #60                 // Method org/xbill/DNS/RRset.getType:()I
      51: istore        4
      53: aload_3
      54: instanceof    #53                 // class java/util/List
      57: ifeq          135
      60: aload_3
      61: checkcast     #53                 // class java/util/List
      64: astore        5
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload         5
      73: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      78: if_icmpge     123
      81: aload         5
      83: iload         6
      85: invokeinterface #59,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      90: checkcast     #55                 // class org/xbill/DNS/RRset
      93: astore        7
      95: aload         7
      97: invokevirtual #60                 // Method org/xbill/DNS/RRset.getType:()I
     100: iload         4
     102: if_icmpne     117
     105: aload         5
     107: iload         6
     109: aload_2
     110: invokeinterface #64,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     115: pop
     116: return
     117: iinc          6, 1
     120: goto          69
     123: aload         5
     125: aload_2
     126: invokeinterface #65,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     131: pop
     132: goto          203
     135: aload_3
     136: checkcast     #55                 // class org/xbill/DNS/RRset
     139: astore        5
     141: aload         5
     143: invokevirtual #60                 // Method org/xbill/DNS/RRset.getType:()I
     146: iload         4
     148: if_icmpne     166
     151: aload_0
     152: getfield      #5                  // Field data:Ljava/util/Map;
     155: aload_1
     156: aload_2
     157: invokeinterface #63,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     162: pop
     163: goto          203
     166: new           #66                 // class java/util/LinkedList
     169: dup
     170: invokespecial #67                 // Method java/util/LinkedList."<init>":()V
     173: astore        6
     175: aload         6
     177: aload         5
     179: invokevirtual #68                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     182: pop
     183: aload         6
     185: aload_2
     186: invokevirtual #68                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     189: pop
     190: aload_0
     191: getfield      #5                  // Field data:Ljava/util/Map;
     194: aload_1
     195: aload         6
     197: invokeinterface #63,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     202: pop
     203: return

  private synchronized void removeRRset(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnonnull     16
      15: return
      16: aload_3
      17: instanceof    #53                 // class java/util/List
      20: ifeq          108
      23: aload_3
      24: checkcast     #53                 // class java/util/List
      27: astore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: aload         4
      36: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      41: if_icmpge     105
      44: aload         4
      46: iload         5
      48: invokeinterface #59,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      53: checkcast     #55                 // class org/xbill/DNS/RRset
      56: astore        6
      58: aload         6
      60: invokevirtual #60                 // Method org/xbill/DNS/RRset.getType:()I
      63: iload_2
      64: if_icmpne     99
      67: aload         4
      69: iload         5
      71: invokeinterface #69,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      76: pop
      77: aload         4
      79: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      84: ifne          98
      87: aload_0
      88: getfield      #5                  // Field data:Ljava/util/Map;
      91: aload_1
      92: invokeinterface #70,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: return
      99: iinc          5, 1
     102: goto          32
     105: goto          135
     108: aload_3
     109: checkcast     #55                 // class org/xbill/DNS/RRset
     112: astore        4
     114: aload         4
     116: invokevirtual #60                 // Method org/xbill/DNS/RRset.getType:()I
     119: iload_2
     120: if_icmpeq     124
     123: return
     124: aload_0
     125: getfield      #5                  // Field data:Ljava/util/Map;
     128: aload_1
     129: invokeinterface #70,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: return

  private synchronized org.xbill.DNS.SetResponse lookup(org.xbill.DNS.Name, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       5: invokevirtual #28                 // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
       8: ifne          16
      11: iconst_1
      12: invokestatic  #71                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
      15: areturn
      16: aload_1
      17: invokevirtual #72                 // Method org/xbill/DNS/Name.labels:()I
      20: istore_3
      21: aload_0
      22: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      25: invokevirtual #72                 // Method org/xbill/DNS/Name.labels:()I
      28: istore        4
      30: iload         4
      32: istore        5
      34: iload         5
      36: iload_3
      37: if_icmpgt     320
      40: iload         5
      42: iload         4
      44: if_icmpne     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        10
      54: iload         5
      56: iload_3
      57: if_icmpne     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: istore        11
      67: iload         10
      69: ifeq          81
      72: aload_0
      73: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      76: astore        7
      78: goto          106
      81: iload         11
      83: ifeq          92
      86: aload_1
      87: astore        7
      89: goto          106
      92: new           #73                 // class org/xbill/DNS/Name
      95: dup
      96: aload_1
      97: iload_3
      98: iload         5
     100: isub
     101: invokespecial #74                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/Name;I)V
     104: astore        7
     106: aload_0
     107: aload         7
     109: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
     112: astore        8
     114: aload         8
     116: ifnonnull     122
     119: goto          314
     122: iload         10
     124: ifne          152
     127: aload_0
     128: aload         8
     130: iconst_2
     131: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     134: astore        12
     136: aload         12
     138: ifnull        152
     141: new           #75                 // class org/xbill/DNS/SetResponse
     144: dup
     145: iconst_3
     146: aload         12
     148: invokespecial #76                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     151: areturn
     152: iload         11
     154: ifeq          213
     157: iload_2
     158: sipush        255
     161: if_icmpne     213
     164: new           #75                 // class org/xbill/DNS/SetResponse
     167: dup
     168: bipush        6
     170: invokespecial #77                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     173: astore        9
     175: aload_0
     176: aload         8
     178: invokespecial #3                  // Method allRRsets:(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;
     181: astore        12
     183: iconst_0
     184: istore        13
     186: iload         13
     188: aload         12
     190: arraylength
     191: if_icmpge     210
     194: aload         9
     196: aload         12
     198: iload         13
     200: aaload
     201: invokevirtual #78                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     204: iinc          13, 1
     207: goto          186
     210: aload         9
     212: areturn
     213: iload         11
     215: ifeq          278
     218: aload_0
     219: aload         8
     221: iload_2
     222: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     225: astore        6
     227: aload         6
     229: ifnull        253
     232: new           #75                 // class org/xbill/DNS/SetResponse
     235: dup
     236: bipush        6
     238: invokespecial #77                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     241: astore        9
     243: aload         9
     245: aload         6
     247: invokevirtual #78                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     250: aload         9
     252: areturn
     253: aload_0
     254: aload         8
     256: iconst_5
     257: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     260: astore        6
     262: aload         6
     264: ifnull        304
     267: new           #75                 // class org/xbill/DNS/SetResponse
     270: dup
     271: iconst_4
     272: aload         6
     274: invokespecial #76                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     277: areturn
     278: aload_0
     279: aload         8
     281: bipush        39
     283: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     286: astore        6
     288: aload         6
     290: ifnull        304
     293: new           #75                 // class org/xbill/DNS/SetResponse
     296: dup
     297: iconst_5
     298: aload         6
     300: invokespecial #76                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     303: areturn
     304: iload         11
     306: ifeq          314
     309: iconst_2
     310: invokestatic  #71                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     313: areturn
     314: iinc          5, 1
     317: goto          34
     320: aload_0
     321: getfield      #61                 // Field hasWild:Z
     324: ifeq          406
     327: iconst_0
     328: istore        10
     330: iload         10
     332: iload_3
     333: iload         4
     335: isub
     336: if_icmpge     406
     339: aload_1
     340: iload         10
     342: iconst_1
     343: iadd
     344: invokevirtual #79                 // Method org/xbill/DNS/Name.wild:(I)Lorg/xbill/DNS/Name;
     347: astore        7
     349: aload_0
     350: aload         7
     352: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
     355: astore        8
     357: aload         8
     359: ifnonnull     365
     362: goto          400
     365: aload_0
     366: aload         8
     368: iload_2
     369: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     372: astore        6
     374: aload         6
     376: ifnull        400
     379: new           #75                 // class org/xbill/DNS/SetResponse
     382: dup
     383: bipush        6
     385: invokespecial #77                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     388: astore        9
     390: aload         9
     392: aload         6
     394: invokevirtual #78                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     397: aload         9
     399: areturn
     400: iinc          10, 1
     403: goto          330
     406: iconst_1
     407: invokestatic  #71                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     410: areturn

  public org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #80                 // Method lookup:(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/SetResponse;
       6: areturn

  public org.xbill.DNS.RRset findExactMatch(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_3
      14: iload_2
      15: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
      18: areturn

  public void addRRset(org.xbill.DNS.RRset);
    Code:
       0: aload_1
       1: invokevirtual #81                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
       4: astore_2
       5: aload_0
       6: aload_2
       7: aload_1
       8: invokespecial #82                 // Method addRRset:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/RRset;)V
      11: return

  public void addRecord(org.xbill.DNS.Record);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       4: astore_2
       5: aload_1
       6: invokevirtual #83                 // Method org/xbill/DNS/Record.getRRsetType:()I
       9: istore_3
      10: aload_0
      11: dup
      12: astore        4
      14: monitorenter
      15: aload_0
      16: aload_2
      17: iload_3
      18: invokespecial #84                 // Method findRRset:(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/RRset;
      21: astore        5
      23: aload         5
      25: ifnonnull     48
      28: new           #55                 // class org/xbill/DNS/RRset
      31: dup
      32: aload_1
      33: invokespecial #85                 // Method org/xbill/DNS/RRset."<init>":(Lorg/xbill/DNS/Record;)V
      36: astore        5
      38: aload_0
      39: aload_2
      40: aload         5
      42: invokespecial #82                 // Method addRRset:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/RRset;)V
      45: goto          54
      48: aload         5
      50: aload_1
      51: invokevirtual #86                 // Method org/xbill/DNS/RRset.addRR:(Lorg/xbill/DNS/Record;)V
      54: aload         4
      56: monitorexit
      57: goto          68
      60: astore        6
      62: aload         4
      64: monitorexit
      65: aload         6
      67: athrow
      68: return
    Exception table:
       from    to  target type
          15    57    60   any
          60    65    60   any

  public void removeRecord(org.xbill.DNS.Record);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       4: astore_2
       5: aload_1
       6: invokevirtual #83                 // Method org/xbill/DNS/Record.getRRsetType:()I
       9: istore_3
      10: aload_0
      11: dup
      12: astore        4
      14: monitorenter
      15: aload_0
      16: aload_2
      17: iload_3
      18: invokespecial #84                 // Method findRRset:(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/RRset;
      21: astore        5
      23: aload         5
      25: ifnonnull     32
      28: aload         4
      30: monitorexit
      31: return
      32: aload         5
      34: invokevirtual #15                 // Method org/xbill/DNS/RRset.size:()I
      37: iconst_1
      38: if_icmpne     62
      41: aload         5
      43: invokevirtual #87                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
      46: aload_1
      47: invokevirtual #88                 // Method org/xbill/DNS/Record.equals:(Ljava/lang/Object;)Z
      50: ifeq          62
      53: aload_0
      54: aload_2
      55: iload_3
      56: invokespecial #89                 // Method removeRRset:(Lorg/xbill/DNS/Name;I)V
      59: goto          68
      62: aload         5
      64: aload_1
      65: invokevirtual #90                 // Method org/xbill/DNS/RRset.deleteRR:(Lorg/xbill/DNS/Record;)V
      68: aload         4
      70: monitorexit
      71: goto          82
      74: astore        6
      76: aload         4
      78: monitorexit
      79: aload         6
      81: athrow
      82: return
    Exception table:
       from    to  target type
          15    31    74   any
          32    71    74   any
          74    79    74   any

  public java.util.Iterator iterator();
    Code:
       0: new           #91                 // class org/xbill/DNS/Zone$ZoneIterator
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #92                 // Method org/xbill/DNS/Zone$ZoneIterator."<init>":(Lorg/xbill/DNS/Zone;Z)V
       9: areturn

  public java.util.Iterator AXFR();
    Code:
       0: new           #91                 // class org/xbill/DNS/Zone$ZoneIterator
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #92                 // Method org/xbill/DNS/Zone$ZoneIterator."<init>":(Lorg/xbill/DNS/Zone;Z)V
       9: areturn

  private void nodeToString(java.lang.StringBuffer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method allRRsets:(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;
       5: astore_3
       6: iconst_0
       7: istore        4
       9: iload         4
      11: aload_3
      12: arraylength
      13: if_icmpge     128
      16: aload_3
      17: iload         4
      19: aaload
      20: astore        5
      22: aload         5
      24: invokevirtual #17                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/Iterator;
      27: astore        6
      29: aload         6
      31: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          72
      39: aload_1
      40: new           #8                  // class java/lang/StringBuffer
      43: dup
      44: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      47: aload         6
      49: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      57: ldc           #93                 // String \n
      59: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      65: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      68: pop
      69: goto          29
      72: aload         5
      74: invokevirtual #94                 // Method org/xbill/DNS/RRset.sigs:()Ljava/util/Iterator;
      77: astore        6
      79: aload         6
      81: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          122
      89: aload_1
      90: new           #8                  // class java/lang/StringBuffer
      93: dup
      94: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      97: aload         6
      99: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     107: ldc           #93                 // String \n
     109: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     112: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     115: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     118: pop
     119: goto          79
     122: iinc          4, 1
     125: goto          9
     128: return

  public synchronized java.lang.String toMasterFile();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Ljava/util/Map;
       4: invokeinterface #95,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #96,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: new           #8                  // class java/lang/StringBuffer
      18: dup
      19: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      22: astore_2
      23: aload_0
      24: aload_2
      25: aload_0
      26: getfield      #4                  // Field originNode:Ljava/lang/Object;
      29: invokespecial #97                 // Method nodeToString:(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
      32: aload_1
      33: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          81
      41: aload_1
      42: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #98                 // class java/util/Map$Entry
      50: astore_3
      51: aload_0
      52: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      55: aload_3
      56: invokeinterface #99,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      61: invokevirtual #25                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      64: ifne          78
      67: aload_0
      68: aload_2
      69: aload_3
      70: invokeinterface #100,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokespecial #97                 // Method nodeToString:(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
      78: goto          32
      81: aload_2
      82: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      85: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method toMasterFile:()Ljava/lang/String;
       4: areturn

  static java.util.Map access$000(org.xbill.DNS.Zone);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Ljava/util/Map;
       4: areturn

  static java.lang.Object access$100(org.xbill.DNS.Zone);
    Code:
       0: aload_0
       1: getfield      #4                  // Field originNode:Ljava/lang/Object;
       4: areturn

  static org.xbill.DNS.RRset[] access$200(org.xbill.DNS.Zone, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method allRRsets:(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;
       5: areturn

  static org.xbill.DNS.RRset access$300(org.xbill.DNS.Zone, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
       6: areturn

  static org.xbill.DNS.Name access$400(org.xbill.DNS.Zone);
    Code:
       0: aload_0
       1: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       4: areturn
}
