Compiled from "SOARecord.java"
public class org.xbill.DNS.SOARecord extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private org.xbill.DNS.Name host;

  private org.xbill.DNS.Name admin;

  private long serial;

  private long refresh;

  private long retry;

  private long expire;

  private long minimum;

  org.xbill.DNS.SOARecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/SOARecord
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public org.xbill.DNS.SOARecord(org.xbill.DNS.Name, int, long, org.xbill.DNS.Name, org.xbill.DNS.Name, long, long, long, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        6
       4: iload_2
       5: lload_3
       6: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #5                  // String host
      12: aload         5
      14: invokestatic  #6                  // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      17: putfield      #7                  // Field host:Lorg/xbill/DNS/Name;
      20: aload_0
      21: ldc           #8                  // String admin
      23: aload         6
      25: invokestatic  #6                  // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      28: putfield      #9                  // Field admin:Lorg/xbill/DNS/Name;
      31: aload_0
      32: ldc           #10                 // String serial
      34: lload         7
      36: invokestatic  #11                 // Method checkU32:(Ljava/lang/String;J)J
      39: putfield      #12                 // Field serial:J
      42: aload_0
      43: ldc           #13                 // String refresh
      45: lload         9
      47: invokestatic  #11                 // Method checkU32:(Ljava/lang/String;J)J
      50: putfield      #14                 // Field refresh:J
      53: aload_0
      54: ldc           #15                 // String retry
      56: lload         11
      58: invokestatic  #11                 // Method checkU32:(Ljava/lang/String;J)J
      61: putfield      #16                 // Field retry:J
      64: aload_0
      65: ldc           #17                 // String expire
      67: lload         13
      69: invokestatic  #11                 // Method checkU32:(Ljava/lang/String;J)J
      72: putfield      #18                 // Field expire:J
      75: aload_0
      76: ldc           #19                 // String minimum
      78: lload         15
      80: invokestatic  #11                 // Method checkU32:(Ljava/lang/String;J)J
      83: putfield      #20                 // Field minimum:J
      86: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #21                 // class org/xbill/DNS/Name
       4: dup
       5: aload_1
       6: invokespecial #22                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
       9: putfield      #7                  // Field host:Lorg/xbill/DNS/Name;
      12: aload_0
      13: new           #21                 // class org/xbill/DNS/Name
      16: dup
      17: aload_1
      18: invokespecial #22                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
      21: putfield      #9                  // Field admin:Lorg/xbill/DNS/Name;
      24: aload_0
      25: aload_1
      26: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.readU32:()J
      29: putfield      #12                 // Field serial:J
      32: aload_0
      33: aload_1
      34: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.readU32:()J
      37: putfield      #14                 // Field refresh:J
      40: aload_0
      41: aload_1
      42: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.readU32:()J
      45: putfield      #16                 // Field retry:J
      48: aload_0
      49: aload_1
      50: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.readU32:()J
      53: putfield      #18                 // Field expire:J
      56: aload_0
      57: aload_1
      58: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.readU32:()J
      61: putfield      #20                 // Field minimum:J
      64: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       6: putfield      #7                  // Field host:Lorg/xbill/DNS/Name;
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      15: putfield      #9                  // Field admin:Lorg/xbill/DNS/Name;
      18: aload_0
      19: aload_1
      20: invokevirtual #25                 // Method org/xbill/DNS/Tokenizer.getUInt32:()J
      23: putfield      #12                 // Field serial:J
      26: aload_0
      27: aload_1
      28: invokevirtual #26                 // Method org/xbill/DNS/Tokenizer.getTTLLike:()J
      31: putfield      #14                 // Field refresh:J
      34: aload_0
      35: aload_1
      36: invokevirtual #26                 // Method org/xbill/DNS/Tokenizer.getTTLLike:()J
      39: putfield      #16                 // Field retry:J
      42: aload_0
      43: aload_1
      44: invokevirtual #26                 // Method org/xbill/DNS/Tokenizer.getTTLLike:()J
      47: putfield      #18                 // Field expire:J
      50: aload_0
      51: aload_1
      52: invokevirtual #26                 // Method org/xbill/DNS/Tokenizer.getTTLLike:()J
      55: putfield      #20                 // Field minimum:J
      58: return

  java.lang.String rrToString();
    Code:
       0: new           #27                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field host:Lorg/xbill/DNS/Name;
      13: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: ldc           #30                 // String
      20: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #9                  // Field admin:Lorg/xbill/DNS/Name;
      29: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      32: pop
      33: ldc           #32                 // String multiline
      35: invokestatic  #33                 // Method org/xbill/DNS/Options.check:(Ljava/lang/String;)Z
      38: ifeq          131
      41: aload_1
      42: ldc           #34                 // String  (\n\t\t\t\t\t
      44: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      47: pop
      48: aload_1
      49: aload_0
      50: getfield      #12                 // Field serial:J
      53: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      56: pop
      57: aload_1
      58: ldc           #36                 // String \t; serial\n\t\t\t\t\t
      60: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      63: pop
      64: aload_1
      65: aload_0
      66: getfield      #14                 // Field refresh:J
      69: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      72: pop
      73: aload_1
      74: ldc           #37                 // String \t; refresh\n\t\t\t\t\t
      76: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      79: pop
      80: aload_1
      81: aload_0
      82: getfield      #16                 // Field retry:J
      85: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      88: pop
      89: aload_1
      90: ldc           #38                 // String \t; retry\n\t\t\t\t\t
      92: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      95: pop
      96: aload_1
      97: aload_0
      98: getfield      #18                 // Field expire:J
     101: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     104: pop
     105: aload_1
     106: ldc           #39                 // String \t; expire\n\t\t\t\t\t
     108: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     111: pop
     112: aload_1
     113: aload_0
     114: getfield      #20                 // Field minimum:J
     117: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     120: pop
     121: aload_1
     122: ldc           #40                 // String  )\t; minimum
     124: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     127: pop
     128: goto          211
     131: aload_1
     132: ldc           #30                 // String
     134: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     137: pop
     138: aload_1
     139: aload_0
     140: getfield      #12                 // Field serial:J
     143: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     146: pop
     147: aload_1
     148: ldc           #30                 // String
     150: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     153: pop
     154: aload_1
     155: aload_0
     156: getfield      #14                 // Field refresh:J
     159: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     162: pop
     163: aload_1
     164: ldc           #30                 // String
     166: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     169: pop
     170: aload_1
     171: aload_0
     172: getfield      #16                 // Field retry:J
     175: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     178: pop
     179: aload_1
     180: ldc           #30                 // String
     182: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     185: pop
     186: aload_1
     187: aload_0
     188: getfield      #18                 // Field expire:J
     191: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     194: pop
     195: aload_1
     196: ldc           #30                 // String
     198: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     201: pop
     202: aload_1
     203: aload_0
     204: getfield      #20                 // Field minimum:J
     207: invokevirtual #35                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
     210: pop
     211: aload_1
     212: invokevirtual #41                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     215: areturn

  public org.xbill.DNS.Name getHost();
    Code:
       0: aload_0
       1: getfield      #7                  // Field host:Lorg/xbill/DNS/Name;
       4: areturn

  public org.xbill.DNS.Name getAdmin();
    Code:
       0: aload_0
       1: getfield      #9                  // Field admin:Lorg/xbill/DNS/Name;
       4: areturn

  public long getSerial();
    Code:
       0: aload_0
       1: getfield      #12                 // Field serial:J
       4: lreturn

  public long getRefresh();
    Code:
       0: aload_0
       1: getfield      #14                 // Field refresh:J
       4: lreturn

  public long getRetry();
    Code:
       0: aload_0
       1: getfield      #16                 // Field retry:J
       4: lreturn

  public long getExpire();
    Code:
       0: aload_0
       1: getfield      #18                 // Field expire:J
       4: lreturn

  public long getMinimum();
    Code:
       0: aload_0
       1: getfield      #20                 // Field minimum:J
       4: lreturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field host:Lorg/xbill/DNS/Name;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #42                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      10: aload_0
      11: getfield      #9                  // Field admin:Lorg/xbill/DNS/Name;
      14: aload_1
      15: aload_2
      16: iload_3
      17: invokevirtual #42                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      20: aload_1
      21: aload_0
      22: getfield      #12                 // Field serial:J
      25: invokevirtual #43                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      28: aload_1
      29: aload_0
      30: getfield      #14                 // Field refresh:J
      33: invokevirtual #43                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      36: aload_1
      37: aload_0
      38: getfield      #16                 // Field retry:J
      41: invokevirtual #43                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      44: aload_1
      45: aload_0
      46: getfield      #18                 // Field expire:J
      49: invokevirtual #43                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      52: aload_1
      53: aload_0
      54: getfield      #20                 // Field minimum:J
      57: invokevirtual #43                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      60: return
}
