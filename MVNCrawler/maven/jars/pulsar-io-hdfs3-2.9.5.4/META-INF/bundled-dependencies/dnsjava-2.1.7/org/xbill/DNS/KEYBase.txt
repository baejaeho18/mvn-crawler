Compiled from "KEYBase.java"
abstract class org.xbill.DNS.KEYBase extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  protected int flags;

  protected int proto;

  protected int alg;

  protected byte[] key;

  protected int footprint;

  protected java.security.PublicKey publicKey;

  protected org.xbill.DNS.KEYBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field footprint:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field publicKey:Ljava/security/PublicKey;
      14: return

  public org.xbill.DNS.KEYBase(org.xbill.DNS.Name, int, int, long, int, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: iconst_m1
      11: putfield      #2                  // Field footprint:I
      14: aload_0
      15: aconst_null
      16: putfield      #3                  // Field publicKey:Ljava/security/PublicKey;
      19: aload_0
      20: ldc           #5                  // String flags
      22: iload         6
      24: invokestatic  #6                  // Method checkU16:(Ljava/lang/String;I)I
      27: putfield      #7                  // Field flags:I
      30: aload_0
      31: ldc           #8                  // String proto
      33: iload         7
      35: invokestatic  #9                  // Method checkU8:(Ljava/lang/String;I)I
      38: putfield      #10                 // Field proto:I
      41: aload_0
      42: ldc           #11                 // String alg
      44: iload         8
      46: invokestatic  #9                  // Method checkU8:(Ljava/lang/String;I)I
      49: putfield      #12                 // Field alg:I
      52: aload_0
      53: aload         9
      55: putfield      #13                 // Field key:[B
      58: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: putfield      #7                  // Field flags:I
       8: aload_0
       9: aload_1
      10: invokevirtual #15                 // Method org/xbill/DNS/DNSInput.readU8:()I
      13: putfield      #10                 // Field proto:I
      16: aload_0
      17: aload_1
      18: invokevirtual #15                 // Method org/xbill/DNS/DNSInput.readU8:()I
      21: putfield      #12                 // Field alg:I
      24: aload_1
      25: invokevirtual #16                 // Method org/xbill/DNS/DNSInput.remaining:()I
      28: ifle          39
      31: aload_0
      32: aload_1
      33: invokevirtual #17                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
      36: putfield      #13                 // Field key:[B
      39: return

  java.lang.String rrToString();
    Code:
       0: new           #18                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field flags:I
      13: invokevirtual #20                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: ldc           #21                 // String
      20: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #10                 // Field proto:I
      29: invokevirtual #20                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      32: pop
      33: aload_1
      34: ldc           #21                 // String
      36: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #12                 // Field alg:I
      45: invokevirtual #20                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      48: pop
      49: aload_0
      50: getfield      #13                 // Field key:[B
      53: ifnull        126
      56: ldc           #23                 // String multiline
      58: invokestatic  #24                 // Method org/xbill/DNS/Options.check:(Ljava/lang/String;)Z
      61: ifeq          107
      64: aload_1
      65: ldc           #25                 // String  (\n
      67: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: pop
      71: aload_1
      72: aload_0
      73: getfield      #13                 // Field key:[B
      76: bipush        64
      78: ldc           #26                 // String \t
      80: iconst_1
      81: invokestatic  #27                 // Method org/xbill/DNS/utils/base64.formatString:([BILjava/lang/String;Z)Ljava/lang/String;
      84: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: pop
      88: aload_1
      89: ldc           #28                 // String  ; key_tag =
      91: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: aload_1
      96: aload_0
      97: invokevirtual #29                 // Method getFootprint:()I
     100: invokevirtual #20                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     103: pop
     104: goto          126
     107: aload_1
     108: ldc           #21                 // String
     110: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     113: pop
     114: aload_1
     115: aload_0
     116: getfield      #13                 // Field key:[B
     119: invokestatic  #30                 // Method org/xbill/DNS/utils/base64.toString:([B)Ljava/lang/String;
     122: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     125: pop
     126: aload_1
     127: invokevirtual #31                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     130: areturn

  public int getFlags();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flags:I
       4: ireturn

  public int getProtocol();
    Code:
       0: aload_0
       1: getfield      #10                 // Field proto:I
       4: ireturn

  public int getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #12                 // Field alg:I
       4: ireturn

  public byte[] getKey();
    Code:
       0: aload_0
       1: getfield      #13                 // Field key:[B
       4: areturn

  public int getFootprint();
    Code:
       0: aload_0
       1: getfield      #2                  // Field footprint:I
       4: iflt          12
       7: aload_0
       8: getfield      #2                  // Field footprint:I
      11: ireturn
      12: iconst_0
      13: istore_1
      14: new           #32                 // class org/xbill/DNS/DNSOutput
      17: dup
      18: invokespecial #33                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      21: astore_2
      22: aload_0
      23: aload_2
      24: aconst_null
      25: iconst_0
      26: invokevirtual #34                 // Method rrToWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      29: aload_2
      30: invokevirtual #35                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      33: astore_3
      34: aload_0
      35: getfield      #12                 // Field alg:I
      38: iconst_1
      39: if_icmpne     78
      42: aload_3
      43: aload_3
      44: arraylength
      45: iconst_3
      46: isub
      47: baload
      48: sipush        255
      51: iand
      52: istore        4
      54: aload_3
      55: aload_3
      56: arraylength
      57: iconst_2
      58: isub
      59: baload
      60: sipush        255
      63: iand
      64: istore        5
      66: iload         4
      68: bipush        8
      70: ishl
      71: iload         5
      73: iadd
      74: istore_1
      75: goto          164
      78: iconst_0
      79: istore        4
      81: iload         4
      83: aload_3
      84: arraylength
      85: iconst_1
      86: isub
      87: if_icmpge     129
      90: aload_3
      91: iload         4
      93: baload
      94: sipush        255
      97: iand
      98: istore        5
     100: aload_3
     101: iload         4
     103: iconst_1
     104: iadd
     105: baload
     106: sipush        255
     109: iand
     110: istore        6
     112: iload_1
     113: iload         5
     115: bipush        8
     117: ishl
     118: iload         6
     120: iadd
     121: iadd
     122: istore_1
     123: iinc          4, 2
     126: goto          81
     129: iload         4
     131: aload_3
     132: arraylength
     133: if_icmpge     154
     136: aload_3
     137: iload         4
     139: baload
     140: sipush        255
     143: iand
     144: istore        5
     146: iload_1
     147: iload         5
     149: bipush        8
     151: ishl
     152: iadd
     153: istore_1
     154: iload_1
     155: iload_1
     156: bipush        16
     158: ishr
     159: ldc           #36                 // int 65535
     161: iand
     162: iadd
     163: istore_1
     164: aload_0
     165: iload_1
     166: ldc           #36                 // int 65535
     168: iand
     169: putfield      #2                  // Field footprint:I
     172: aload_0
     173: getfield      #2                  // Field footprint:I
     176: ireturn

  public java.security.PublicKey getPublicKey() throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field publicKey:Ljava/security/PublicKey;
       4: ifnull        12
       7: aload_0
       8: getfield      #3                  // Field publicKey:Ljava/security/PublicKey;
      11: areturn
      12: aload_0
      13: aload_0
      14: invokestatic  #37                 // Method org/xbill/DNS/DNSSEC.toPublicKey:(Lorg/xbill/DNS/KEYBase;)Ljava/security/PublicKey;
      17: putfield      #3                  // Field publicKey:Ljava/security/PublicKey;
      20: aload_0
      21: getfield      #3                  // Field publicKey:Ljava/security/PublicKey;
      24: areturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field flags:I
       5: invokevirtual #38                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #10                 // Field proto:I
      13: invokevirtual #39                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #12                 // Field alg:I
      21: invokevirtual #39                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      24: aload_0
      25: getfield      #13                 // Field key:[B
      28: ifnull        39
      31: aload_1
      32: aload_0
      33: getfield      #13                 // Field key:[B
      36: invokevirtual #40                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      39: return
}
