Compiled from "Cache.java"
public class org.xbill.DNS.Cache {
  private org.xbill.DNS.Cache$CacheMap data;

  private int maxncache;

  private int maxcache;

  private int dclass;

  private static final int defaultMaxEntries;

  private static int limitExpire(long, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: iflt          14
       6: lload_2
       7: lload_0
       8: lcmp
       9: ifge          14
      12: lload_2
      13: lstore_0
      14: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
      17: ldc2_w        #3                  // long 1000l
      20: ldiv
      21: lload_0
      22: ladd
      23: lstore        4
      25: lload         4
      27: lconst_0
      28: lcmp
      29: iflt          41
      32: lload         4
      34: ldc2_w        #5                  // long 2147483647l
      37: lcmp
      38: ifle          44
      41: ldc           #7                  // int 2147483647
      43: ireturn
      44: lload         4
      46: l2i
      47: ireturn

  public org.xbill.DNS.Cache(int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #9                  // Field maxncache:I
       9: aload_0
      10: iconst_m1
      11: putfield      #10                 // Field maxcache:I
      14: aload_0
      15: iload_1
      16: putfield      #11                 // Field dclass:I
      19: aload_0
      20: new           #12                 // class org/xbill/DNS/Cache$CacheMap
      23: dup
      24: ldc           #13                 // int 50000
      26: invokespecial #14                 // Method org/xbill/DNS/Cache$CacheMap."<init>":(I)V
      29: putfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      32: return

  public org.xbill.DNS.Cache();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #16                 // Method "<init>":(I)V
       5: return

  public org.xbill.DNS.Cache(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #9                  // Field maxncache:I
       9: aload_0
      10: iconst_m1
      11: putfield      #10                 // Field maxcache:I
      14: aload_0
      15: new           #12                 // class org/xbill/DNS/Cache$CacheMap
      18: dup
      19: ldc           #13                 // int 50000
      21: invokespecial #14                 // Method org/xbill/DNS/Cache$CacheMap."<init>":(I)V
      24: putfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      27: new           #17                 // class org/xbill/DNS/Master
      30: dup
      31: aload_1
      32: invokespecial #18                 // Method org/xbill/DNS/Master."<init>":(Ljava/lang/String;)V
      35: astore_2
      36: aload_2
      37: invokevirtual #19                 // Method org/xbill/DNS/Master.nextRecord:()Lorg/xbill/DNS/Record;
      40: dup
      41: astore_3
      42: ifnull        55
      45: aload_0
      46: aload_3
      47: iconst_0
      48: aload_2
      49: invokevirtual #20                 // Method addRecord:(Lorg/xbill/DNS/Record;ILjava/lang/Object;)V
      52: goto          36
      55: return

  private synchronized java.lang.Object exactName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #21                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  private synchronized void removeName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #22                 // Method org/xbill/DNS/Cache$CacheMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  private synchronized org.xbill.DNS.Cache$Element[] allElements(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #23                 // class java/util/List
       4: ifeq          36
       7: aload_1
       8: checkcast     #23                 // class java/util/List
      11: astore_2
      12: aload_2
      13: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      18: istore_3
      19: aload_2
      20: iload_3
      21: anewarray     #25                 // class org/xbill/DNS/Cache$Element
      24: invokeinterface #26,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      29: checkcast     #27                 // class "[Lorg/xbill/DNS/Cache$Element;"
      32: checkcast     #27                 // class "[Lorg/xbill/DNS/Cache$Element;"
      35: areturn
      36: aload_1
      37: checkcast     #25                 // class org/xbill/DNS/Cache$Element
      40: astore_2
      41: iconst_1
      42: anewarray     #25                 // class org/xbill/DNS/Cache$Element
      45: dup
      46: iconst_0
      47: aload_2
      48: aastore
      49: areturn

  private synchronized org.xbill.DNS.Cache$Element oneElement(org.xbill.DNS.Name, java.lang.Object, int, int);
    Code:
       0: aconst_null
       1: astore        5
       3: iload_3
       4: sipush        255
       7: if_icmpne     20
      10: new           #28                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #29                 // String oneElement(ANY)
      16: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_2
      21: instanceof    #23                 // class java/util/List
      24: ifeq          89
      27: aload_2
      28: checkcast     #23                 // class java/util/List
      31: astore        6
      33: iconst_0
      34: istore        7
      36: iload         7
      38: aload         6
      40: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      45: if_icmpge     86
      48: aload         6
      50: iload         7
      52: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      57: checkcast     #25                 // class org/xbill/DNS/Cache$Element
      60: astore        8
      62: aload         8
      64: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      69: iload_3
      70: if_icmpne     80
      73: aload         8
      75: astore        5
      77: goto          86
      80: iinc          7, 1
      83: goto          36
      86: goto          110
      89: aload_2
      90: checkcast     #25                 // class org/xbill/DNS/Cache$Element
      93: astore        6
      95: aload         6
      97: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     102: iload_3
     103: if_icmpne     110
     106: aload         6
     108: astore        5
     110: aload         5
     112: ifnonnull     117
     115: aconst_null
     116: areturn
     117: aload         5
     119: invokeinterface #33,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.expired:()Z
     124: ifeq          135
     127: aload_0
     128: aload_1
     129: iload_3
     130: invokespecial #34                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
     133: aconst_null
     134: areturn
     135: aload         5
     137: iload         4
     139: invokeinterface #35,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
     144: ifge          149
     147: aconst_null
     148: areturn
     149: aload         5
     151: areturn

  private synchronized org.xbill.DNS.Cache$Element findElement(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       5: astore        4
       7: aload         4
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: aload_1
      16: aload         4
      18: iload_2
      19: iload_3
      20: invokespecial #37                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
      23: areturn

  private synchronized void addElement(org.xbill.DNS.Name, org.xbill.DNS.Cache$Element);
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #21                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: ifnonnull     24
      13: aload_0
      14: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      17: aload_1
      18: aload_2
      19: invokevirtual #38                 // Method org/xbill/DNS/Cache$CacheMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return
      24: aload_2
      25: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      30: istore        4
      32: aload_3
      33: instanceof    #23                 // class java/util/List
      36: ifeq          116
      39: aload_3
      40: checkcast     #23                 // class java/util/List
      43: astore        5
      45: iconst_0
      46: istore        6
      48: iload         6
      50: aload         5
      52: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      57: if_icmpge     104
      60: aload         5
      62: iload         6
      64: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      69: checkcast     #25                 // class org/xbill/DNS/Cache$Element
      72: astore        7
      74: aload         7
      76: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      81: iload         4
      83: if_icmpne     98
      86: aload         5
      88: iload         6
      90: aload_2
      91: invokeinterface #39,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: return
      98: iinc          6, 1
     101: goto          48
     104: aload         5
     106: aload_2
     107: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          182
     116: aload_3
     117: checkcast     #25                 // class org/xbill/DNS/Cache$Element
     120: astore        5
     122: aload         5
     124: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     129: iload         4
     131: if_icmpne     147
     134: aload_0
     135: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
     138: aload_1
     139: aload_2
     140: invokevirtual #38                 // Method org/xbill/DNS/Cache$CacheMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: goto          182
     147: new           #41                 // class java/util/LinkedList
     150: dup
     151: invokespecial #42                 // Method java/util/LinkedList."<init>":()V
     154: astore        6
     156: aload         6
     158: aload         5
     160: invokevirtual #43                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     163: pop
     164: aload         6
     166: aload_2
     167: invokevirtual #43                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     170: pop
     171: aload_0
     172: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
     175: aload_1
     176: aload         6
     178: invokevirtual #38                 // Method org/xbill/DNS/Cache$CacheMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     181: pop
     182: return

  private synchronized void removeElement(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #21                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: ifnonnull     14
      13: return
      14: aload_3
      15: instanceof    #23                 // class java/util/List
      18: ifeq          106
      21: aload_3
      22: checkcast     #23                 // class java/util/List
      25: astore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: aload         4
      34: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      39: if_icmpge     103
      42: aload         4
      44: iload         5
      46: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #25                 // class org/xbill/DNS/Cache$Element
      54: astore        6
      56: aload         6
      58: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      63: iload_2
      64: if_icmpne     97
      67: aload         4
      69: iload         5
      71: invokeinterface #44,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      76: pop
      77: aload         4
      79: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      84: ifne          96
      87: aload_0
      88: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      91: aload_1
      92: invokevirtual #22                 // Method org/xbill/DNS/Cache$CacheMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: return
      97: iinc          5, 1
     100: goto          30
     103: goto          133
     106: aload_3
     107: checkcast     #25                 // class org/xbill/DNS/Cache$Element
     110: astore        4
     112: aload         4
     114: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     119: iload_2
     120: if_icmpeq     124
     123: return
     124: aload_0
     125: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
     128: aload_1
     129: invokevirtual #22                 // Method org/xbill/DNS/Cache$CacheMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: return

  public synchronized void clearCache();
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: invokevirtual #45                 // Method org/xbill/DNS/Cache$CacheMap.clear:()V
       7: return

  public synchronized void addRecord(org.xbill.DNS.Record, int, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       4: astore        4
       6: aload_1
       7: invokevirtual #47                 // Method org/xbill/DNS/Record.getRRsetType:()I
      10: istore        5
      12: iload         5
      14: invokestatic  #48                 // Method org/xbill/DNS/Type.isRR:(I)Z
      17: ifne          21
      20: return
      21: aload_0
      22: aload         4
      24: iload         5
      26: iload_2
      27: invokespecial #49                 // Method findElement:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Cache$Element;
      30: astore        6
      32: aload         6
      34: ifnonnull     63
      37: new           #50                 // class org/xbill/DNS/Cache$CacheRRset
      40: dup
      41: aload_1
      42: iload_2
      43: aload_0
      44: getfield      #10                 // Field maxcache:I
      47: i2l
      48: invokespecial #51                 // Method org/xbill/DNS/Cache$CacheRRset."<init>":(Lorg/xbill/DNS/Record;IJ)V
      51: astore        7
      53: aload_0
      54: aload         7
      56: iload_2
      57: invokevirtual #52                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
      60: goto          95
      63: aload         6
      65: iload_2
      66: invokeinterface #35,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      71: ifne          95
      74: aload         6
      76: instanceof    #50                 // class org/xbill/DNS/Cache$CacheRRset
      79: ifeq          95
      82: aload         6
      84: checkcast     #50                 // class org/xbill/DNS/Cache$CacheRRset
      87: astore        7
      89: aload         7
      91: aload_1
      92: invokevirtual #53                 // Method org/xbill/DNS/Cache$CacheRRset.addRR:(Lorg/xbill/DNS/Record;)V
      95: return

  public synchronized void addRRset(org.xbill.DNS.RRset, int);
    Code:
       0: aload_1
       1: invokevirtual #54                 // Method org/xbill/DNS/RRset.getTTL:()J
       4: lstore_3
       5: aload_1
       6: invokevirtual #55                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
       9: astore        5
      11: aload_1
      12: invokevirtual #56                 // Method org/xbill/DNS/RRset.getType:()I
      15: istore        6
      17: aload_0
      18: aload         5
      20: iload         6
      22: iconst_0
      23: invokespecial #49                 // Method findElement:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Cache$Element;
      26: astore        7
      28: lload_3
      29: lconst_0
      30: lcmp
      31: ifne          61
      34: aload         7
      36: ifnull        125
      39: aload         7
      41: iload_2
      42: invokeinterface #35,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      47: ifgt          125
      50: aload_0
      51: aload         5
      53: iload         6
      55: invokespecial #34                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
      58: goto          125
      61: aload         7
      63: ifnull        80
      66: aload         7
      68: iload_2
      69: invokeinterface #35,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      74: ifgt          80
      77: aconst_null
      78: astore        7
      80: aload         7
      82: ifnonnull     125
      85: aload_1
      86: instanceof    #50                 // class org/xbill/DNS/Cache$CacheRRset
      89: ifeq          101
      92: aload_1
      93: checkcast     #50                 // class org/xbill/DNS/Cache$CacheRRset
      96: astore        8
      98: goto          117
     101: new           #50                 // class org/xbill/DNS/Cache$CacheRRset
     104: dup
     105: aload_1
     106: iload_2
     107: aload_0
     108: getfield      #10                 // Field maxcache:I
     111: i2l
     112: invokespecial #57                 // Method org/xbill/DNS/Cache$CacheRRset."<init>":(Lorg/xbill/DNS/RRset;IJ)V
     115: astore        8
     117: aload_0
     118: aload         5
     120: aload         8
     122: invokespecial #58                 // Method addElement:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Cache$Element;)V
     125: return

  public synchronized void addNegative(org.xbill.DNS.Name, int, org.xbill.DNS.SOARecord, int);
    Code:
       0: lconst_0
       1: lstore        5
       3: aload_3
       4: ifnull        13
       7: aload_3
       8: invokevirtual #59                 // Method org/xbill/DNS/SOARecord.getTTL:()J
      11: lstore        5
      13: aload_0
      14: aload_1
      15: iload_2
      16: iconst_0
      17: invokespecial #49                 // Method findElement:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Cache$Element;
      20: astore        7
      22: lload         5
      24: lconst_0
      25: lcmp
      26: ifne          55
      29: aload         7
      31: ifnull        102
      34: aload         7
      36: iload         4
      38: invokeinterface #35,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      43: ifgt          102
      46: aload_0
      47: aload_1
      48: iload_2
      49: invokespecial #34                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
      52: goto          102
      55: aload         7
      57: ifnull        75
      60: aload         7
      62: iload         4
      64: invokeinterface #35,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      69: ifgt          75
      72: aconst_null
      73: astore        7
      75: aload         7
      77: ifnonnull     102
      80: aload_0
      81: aload_1
      82: new           #60                 // class org/xbill/DNS/Cache$NegativeElement
      85: dup
      86: aload_1
      87: iload_2
      88: aload_3
      89: iload         4
      91: aload_0
      92: getfield      #9                  // Field maxncache:I
      95: i2l
      96: invokespecial #61                 // Method org/xbill/DNS/Cache$NegativeElement."<init>":(Lorg/xbill/DNS/Name;ILorg/xbill/DNS/SOARecord;IJ)V
      99: invokespecial #58                 // Method addElement:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Cache$Element;)V
     102: return

  protected synchronized org.xbill.DNS.SetResponse lookup(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method org/xbill/DNS/Name.labels:()I
       4: istore        4
       6: iload         4
       8: istore        5
      10: iload         5
      12: iconst_1
      13: if_icmplt     457
      16: iload         5
      18: iconst_1
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore        10
      29: iload         5
      31: iload         4
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore        11
      43: iload         10
      45: ifeq          56
      48: getstatic     #63                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      51: astore        7
      53: goto          82
      56: iload         11
      58: ifeq          67
      61: aload_1
      62: astore        7
      64: goto          82
      67: new           #64                 // class org/xbill/DNS/Name
      70: dup
      71: aload_1
      72: iload         4
      74: iload         5
      76: isub
      77: invokespecial #65                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/Name;I)V
      80: astore        7
      82: aload_0
      83: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      86: aload         7
      88: invokevirtual #21                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      91: astore        8
      93: aload         8
      95: ifnonnull     101
      98: goto          451
     101: iload         11
     103: ifeq          234
     106: iload_2
     107: sipush        255
     110: if_icmpne     234
     113: new           #66                 // class org/xbill/DNS/SetResponse
     116: dup
     117: bipush        6
     119: invokespecial #67                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     122: astore        9
     124: aload_0
     125: aload         8
     127: invokespecial #68                 // Method allElements:(Ljava/lang/Object;)[Lorg/xbill/DNS/Cache$Element;
     130: astore        12
     132: iconst_0
     133: istore        13
     135: iconst_0
     136: istore        14
     138: iload         14
     140: aload         12
     142: arraylength
     143: if_icmpge     223
     146: aload         12
     148: iload         14
     150: aaload
     151: astore        6
     153: aload         6
     155: invokeinterface #33,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.expired:()Z
     160: ifeq          179
     163: aload_0
     164: aload         7
     166: aload         6
     168: invokeinterface #32,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     173: invokespecial #34                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
     176: goto          217
     179: aload         6
     181: instanceof    #50                 // class org/xbill/DNS/Cache$CacheRRset
     184: ifne          190
     187: goto          217
     190: aload         6
     192: iload_3
     193: invokeinterface #35,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
     198: ifge          204
     201: goto          217
     204: aload         9
     206: aload         6
     208: checkcast     #50                 // class org/xbill/DNS/Cache$CacheRRset
     211: invokevirtual #69                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     214: iinc          13, 1
     217: iinc          14, 1
     220: goto          138
     223: iload         13
     225: ifle          231
     228: aload         9
     230: areturn
     231: goto          385
     234: iload         11
     236: ifeq          345
     239: aload_0
     240: aload         7
     242: aload         8
     244: iload_2
     245: iload_3
     246: invokespecial #37                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     249: astore        6
     251: aload         6
     253: ifnull        288
     256: aload         6
     258: instanceof    #50                 // class org/xbill/DNS/Cache$CacheRRset
     261: ifeq          288
     264: new           #66                 // class org/xbill/DNS/SetResponse
     267: dup
     268: bipush        6
     270: invokespecial #67                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     273: astore        9
     275: aload         9
     277: aload         6
     279: checkcast     #50                 // class org/xbill/DNS/Cache$CacheRRset
     282: invokevirtual #69                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     285: aload         9
     287: areturn
     288: aload         6
     290: ifnull        306
     293: new           #66                 // class org/xbill/DNS/SetResponse
     296: dup
     297: iconst_2
     298: invokespecial #67                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     301: astore        9
     303: aload         9
     305: areturn
     306: aload_0
     307: aload         7
     309: aload         8
     311: iconst_5
     312: iload_3
     313: invokespecial #37                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     316: astore        6
     318: aload         6
     320: ifnull        385
     323: aload         6
     325: instanceof    #50                 // class org/xbill/DNS/Cache$CacheRRset
     328: ifeq          385
     331: new           #66                 // class org/xbill/DNS/SetResponse
     334: dup
     335: iconst_4
     336: aload         6
     338: checkcast     #50                 // class org/xbill/DNS/Cache$CacheRRset
     341: invokespecial #70                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     344: areturn
     345: aload_0
     346: aload         7
     348: aload         8
     350: bipush        39
     352: iload_3
     353: invokespecial #37                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     356: astore        6
     358: aload         6
     360: ifnull        385
     363: aload         6
     365: instanceof    #50                 // class org/xbill/DNS/Cache$CacheRRset
     368: ifeq          385
     371: new           #66                 // class org/xbill/DNS/SetResponse
     374: dup
     375: iconst_5
     376: aload         6
     378: checkcast     #50                 // class org/xbill/DNS/Cache$CacheRRset
     381: invokespecial #70                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     384: areturn
     385: aload_0
     386: aload         7
     388: aload         8
     390: iconst_2
     391: iload_3
     392: invokespecial #37                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     395: astore        6
     397: aload         6
     399: ifnull        424
     402: aload         6
     404: instanceof    #50                 // class org/xbill/DNS/Cache$CacheRRset
     407: ifeq          424
     410: new           #66                 // class org/xbill/DNS/SetResponse
     413: dup
     414: iconst_3
     415: aload         6
     417: checkcast     #50                 // class org/xbill/DNS/Cache$CacheRRset
     420: invokespecial #70                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     423: areturn
     424: iload         11
     426: ifeq          451
     429: aload_0
     430: aload         7
     432: aload         8
     434: iconst_0
     435: iload_3
     436: invokespecial #37                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     439: astore        6
     441: aload         6
     443: ifnull        451
     446: iconst_1
     447: invokestatic  #71                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     450: areturn
     451: iinc          5, -1
     454: goto          10
     457: iconst_0
     458: invokestatic  #71                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     461: areturn

  public org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #72                 // Method lookup:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
       7: areturn

  private org.xbill.DNS.RRset[] findRecords(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #73                 // Method lookupRecords:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
       7: astore        4
       9: aload         4
      11: invokevirtual #74                 // Method org/xbill/DNS/SetResponse.isSuccessful:()Z
      14: ifeq          23
      17: aload         4
      19: invokevirtual #75                 // Method org/xbill/DNS/SetResponse.answers:()[Lorg/xbill/DNS/RRset;
      22: areturn
      23: aconst_null
      24: areturn

  public org.xbill.DNS.RRset[] findRecords(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_3
       4: invokespecial #76                 // Method findRecords:(Lorg/xbill/DNS/Name;II)[Lorg/xbill/DNS/RRset;
       7: areturn

  public org.xbill.DNS.RRset[] findAnyRecords(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_2
       4: invokespecial #76                 // Method findRecords:(Lorg/xbill/DNS/Name;II)[Lorg/xbill/DNS/RRset;
       7: areturn

  private final int getCred(int, boolean);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     13
       5: iload_2
       6: ifeq          11
       9: iconst_4
      10: ireturn
      11: iconst_3
      12: ireturn
      13: iload_1
      14: iconst_2
      15: if_icmpne     26
      18: iload_2
      19: ifeq          24
      22: iconst_4
      23: ireturn
      24: iconst_3
      25: ireturn
      26: iload_1
      27: iconst_3
      28: if_icmpne     33
      31: iconst_1
      32: ireturn
      33: new           #28                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #77                 // String getCred: invalid section
      39: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow

  private static void markAdditional(org.xbill.DNS.RRset, java.util.Set);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
       4: astore_2
       5: aload_2
       6: invokevirtual #79                 // Method org/xbill/DNS/Record.getAdditionalName:()Lorg/xbill/DNS/Name;
       9: ifnonnull     13
      12: return
      13: aload_0
      14: invokevirtual #80                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          62
      27: aload_3
      28: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #83                 // class org/xbill/DNS/Record
      36: astore        4
      38: aload         4
      40: invokevirtual #79                 // Method org/xbill/DNS/Record.getAdditionalName:()Lorg/xbill/DNS/Name;
      43: astore        5
      45: aload         5
      47: ifnull        59
      50: aload_1
      51: aload         5
      53: invokeinterface #84,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: goto          18
      62: return

  public org.xbill.DNS.SetResponse addMessage(org.xbill.DNS.Message);
    Code:
       0: aload_1
       1: invokevirtual #85                 // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
       4: iconst_5
       5: invokevirtual #86                 // Method org/xbill/DNS/Header.getFlag:(I)Z
       8: istore_2
       9: aload_1
      10: invokevirtual #87                 // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
      13: astore_3
      14: aload_1
      15: invokevirtual #85                 // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
      18: invokevirtual #88                 // Method org/xbill/DNS/Header.getRcode:()I
      21: istore        9
      23: iconst_0
      24: istore        10
      26: aconst_null
      27: astore        14
      29: ldc           #89                 // String verbosecache
      31: invokestatic  #90                 // Method org/xbill/DNS/Options.check:(Ljava/lang/String;)Z
      34: istore        15
      36: iload         9
      38: ifeq          47
      41: iload         9
      43: iconst_3
      44: if_icmpne     51
      47: aload_3
      48: ifnonnull     53
      51: aconst_null
      52: areturn
      53: aload_3
      54: invokevirtual #46                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      57: astore        4
      59: aload_3
      60: invokevirtual #91                 // Method org/xbill/DNS/Record.getType:()I
      63: istore        6
      65: aload_3
      66: invokevirtual #92                 // Method org/xbill/DNS/Record.getDClass:()I
      69: istore        7
      71: aload         4
      73: astore        5
      75: new           #93                 // class java/util/HashSet
      78: dup
      79: invokespecial #94                 // Method java/util/HashSet."<init>":()V
      82: astore        16
      84: aload_1
      85: iconst_1
      86: invokevirtual #95                 // Method org/xbill/DNS/Message.getSectionRRsets:(I)[Lorg/xbill/DNS/RRset;
      89: astore        11
      91: iconst_0
      92: istore        17
      94: iload         17
      96: aload         11
      98: arraylength
      99: if_icmpge     389
     102: aload         11
     104: iload         17
     106: aaload
     107: invokevirtual #96                 // Method org/xbill/DNS/RRset.getDClass:()I
     110: iload         7
     112: if_icmpeq     118
     115: goto          383
     118: aload         11
     120: iload         17
     122: aaload
     123: invokevirtual #56                 // Method org/xbill/DNS/RRset.getType:()I
     126: istore        18
     128: aload         11
     130: iload         17
     132: aaload
     133: invokevirtual #55                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     136: astore        19
     138: aload_0
     139: iconst_1
     140: iload_2
     141: invokespecial #97                 // Method getCred:(IZ)I
     144: istore        8
     146: iload         18
     148: iload         6
     150: if_icmpeq     161
     153: iload         6
     155: sipush        255
     158: if_icmpne     231
     161: aload         19
     163: aload         5
     165: invokevirtual #98                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
     168: ifeq          231
     171: aload_0
     172: aload         11
     174: iload         17
     176: aaload
     177: iload         8
     179: invokevirtual #52                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     182: iconst_1
     183: istore        10
     185: aload         5
     187: aload         4
     189: if_acmpne     218
     192: aload         14
     194: ifnonnull     208
     197: new           #66                 // class org/xbill/DNS/SetResponse
     200: dup
     201: bipush        6
     203: invokespecial #67                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     206: astore        14
     208: aload         14
     210: aload         11
     212: iload         17
     214: aaload
     215: invokevirtual #69                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     218: aload         11
     220: iload         17
     222: aaload
     223: aload         16
     225: invokestatic  #99                 // Method markAdditional:(Lorg/xbill/DNS/RRset;Ljava/util/Set;)V
     228: goto          383
     231: iload         18
     233: iconst_5
     234: if_icmpne     303
     237: aload         19
     239: aload         5
     241: invokevirtual #98                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
     244: ifeq          303
     247: aload_0
     248: aload         11
     250: iload         17
     252: aaload
     253: iload         8
     255: invokevirtual #52                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     258: aload         5
     260: aload         4
     262: if_acmpne     280
     265: new           #66                 // class org/xbill/DNS/SetResponse
     268: dup
     269: iconst_4
     270: aload         11
     272: iload         17
     274: aaload
     275: invokespecial #70                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     278: astore        14
     280: aload         11
     282: iload         17
     284: aaload
     285: invokevirtual #78                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
     288: checkcast     #100                // class org/xbill/DNS/CNAMERecord
     291: astore        20
     293: aload         20
     295: invokevirtual #101                // Method org/xbill/DNS/CNAMERecord.getTarget:()Lorg/xbill/DNS/Name;
     298: astore        5
     300: goto          383
     303: iload         18
     305: bipush        39
     307: if_icmpne     383
     310: aload         5
     312: aload         19
     314: invokevirtual #102                // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
     317: ifeq          383
     320: aload_0
     321: aload         11
     323: iload         17
     325: aaload
     326: iload         8
     328: invokevirtual #52                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     331: aload         5
     333: aload         4
     335: if_acmpne     353
     338: new           #66                 // class org/xbill/DNS/SetResponse
     341: dup
     342: iconst_5
     343: aload         11
     345: iload         17
     347: aaload
     348: invokespecial #70                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     351: astore        14
     353: aload         11
     355: iload         17
     357: aaload
     358: invokevirtual #78                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
     361: checkcast     #103                // class org/xbill/DNS/DNAMERecord
     364: astore        20
     366: aload         5
     368: aload         20
     370: invokevirtual #104                // Method org/xbill/DNS/Name.fromDNAME:(Lorg/xbill/DNS/DNAMERecord;)Lorg/xbill/DNS/Name;
     373: astore        5
     375: goto          383
     378: astore        21
     380: goto          389
     383: iinc          17, 1
     386: goto          94
     389: aload_1
     390: iconst_2
     391: invokevirtual #95                 // Method org/xbill/DNS/Message.getSectionRRsets:(I)[Lorg/xbill/DNS/RRset;
     394: astore        12
     396: aconst_null
     397: astore        17
     399: aconst_null
     400: astore        18
     402: iconst_0
     403: istore        19
     405: iload         19
     407: aload         12
     409: arraylength
     410: if_icmpge     493
     413: aload         12
     415: iload         19
     417: aaload
     418: invokevirtual #56                 // Method org/xbill/DNS/RRset.getType:()I
     421: bipush        6
     423: if_icmpne     452
     426: aload         5
     428: aload         12
     430: iload         19
     432: aaload
     433: invokevirtual #55                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     436: invokevirtual #102                // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
     439: ifeq          452
     442: aload         12
     444: iload         19
     446: aaload
     447: astore        17
     449: goto          487
     452: aload         12
     454: iload         19
     456: aaload
     457: invokevirtual #56                 // Method org/xbill/DNS/RRset.getType:()I
     460: iconst_2
     461: if_icmpne     487
     464: aload         5
     466: aload         12
     468: iload         19
     470: aaload
     471: invokevirtual #55                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     474: invokevirtual #102                // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
     477: ifeq          487
     480: aload         12
     482: iload         19
     484: aaload
     485: astore        18
     487: iinc          19, 1
     490: goto          405
     493: iload         10
     495: ifne          639
     498: iload         9
     500: iconst_3
     501: if_icmpne     508
     504: iconst_0
     505: goto          510
     508: iload         6
     510: istore        19
     512: iload         9
     514: iconst_3
     515: if_icmpeq     528
     518: aload         17
     520: ifnonnull     528
     523: aload         18
     525: ifnonnull     596
     528: aload_0
     529: iconst_2
     530: iload_2
     531: invokespecial #97                 // Method getCred:(IZ)I
     534: istore        8
     536: aconst_null
     537: astore        20
     539: aload         17
     541: ifnull        554
     544: aload         17
     546: invokevirtual #78                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
     549: checkcast     #106                // class org/xbill/DNS/SOARecord
     552: astore        20
     554: aload_0
     555: aload         5
     557: iload         19
     559: aload         20
     561: iload         8
     563: invokevirtual #107                // Method addNegative:(Lorg/xbill/DNS/Name;ILorg/xbill/DNS/SOARecord;I)V
     566: aload         14
     568: ifnonnull     593
     571: iload         9
     573: iconst_3
     574: if_icmpne     583
     577: iconst_1
     578: istore        21
     580: goto          586
     583: iconst_2
     584: istore        21
     586: iload         21
     588: invokestatic  #71                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     591: astore        14
     593: goto          636
     596: aload_0
     597: iconst_2
     598: iload_2
     599: invokespecial #97                 // Method getCred:(IZ)I
     602: istore        8
     604: aload_0
     605: aload         18
     607: iload         8
     609: invokevirtual #52                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     612: aload         18
     614: aload         16
     616: invokestatic  #99                 // Method markAdditional:(Lorg/xbill/DNS/RRset;Ljava/util/Set;)V
     619: aload         14
     621: ifnonnull     636
     624: new           #66                 // class org/xbill/DNS/SetResponse
     627: dup
     628: iconst_3
     629: aload         18
     631: invokespecial #70                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     634: astore        14
     636: goto          672
     639: iload         9
     641: ifne          672
     644: aload         18
     646: ifnull        672
     649: aload_0
     650: iconst_2
     651: iload_2
     652: invokespecial #97                 // Method getCred:(IZ)I
     655: istore        8
     657: aload_0
     658: aload         18
     660: iload         8
     662: invokevirtual #52                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     665: aload         18
     667: aload         16
     669: invokestatic  #99                 // Method markAdditional:(Lorg/xbill/DNS/RRset;Ljava/util/Set;)V
     672: aload_1
     673: iconst_3
     674: invokevirtual #95                 // Method org/xbill/DNS/Message.getSectionRRsets:(I)[Lorg/xbill/DNS/RRset;
     677: astore        13
     679: iconst_0
     680: istore        19
     682: iload         19
     684: aload         13
     686: arraylength
     687: if_icmpge     771
     690: aload         13
     692: iload         19
     694: aaload
     695: invokevirtual #56                 // Method org/xbill/DNS/RRset.getType:()I
     698: istore        20
     700: iload         20
     702: iconst_1
     703: if_icmpeq     723
     706: iload         20
     708: bipush        28
     710: if_icmpeq     723
     713: iload         20
     715: bipush        38
     717: if_icmpeq     723
     720: goto          765
     723: aload         13
     725: iload         19
     727: aaload
     728: invokevirtual #55                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     731: astore        21
     733: aload         16
     735: aload         21
     737: invokevirtual #108                // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     740: ifne          746
     743: goto          765
     746: aload_0
     747: iconst_3
     748: iload_2
     749: invokespecial #97                 // Method getCred:(IZ)I
     752: istore        8
     754: aload_0
     755: aload         13
     757: iload         19
     759: aaload
     760: iload         8
     762: invokevirtual #52                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     765: iinc          19, 1
     768: goto          682
     771: iload         15
     773: ifeq          802
     776: getstatic     #109                // Field java/lang/System.out:Ljava/io/PrintStream;
     779: new           #110                // class java/lang/StringBuffer
     782: dup
     783: invokespecial #111                // Method java/lang/StringBuffer."<init>":()V
     786: ldc           #112                // String addMessage:
     788: invokevirtual #113                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     791: aload         14
     793: invokevirtual #114                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     796: invokevirtual #115                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     799: invokevirtual #116                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     802: aload         14
     804: areturn
    Exception table:
       from    to  target type
         366   375   378   Class org/xbill/DNS/NameTooLongException

  public void flushSet(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #34                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
       6: return

  public void flushName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #117                // Method removeName:(Lorg/xbill/DNS/Name;)V
       5: return

  public void setMaxNCache(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field maxncache:I
       5: return

  public int getMaxNCache();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxncache:I
       4: ireturn

  public void setMaxCache(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field maxcache:I
       5: return

  public int getMaxCache();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxcache:I
       4: ireturn

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: invokevirtual #118                // Method org/xbill/DNS/Cache$CacheMap.size:()I
       7: ireturn

  public int getMaxEntries();
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: invokevirtual #119                // Method org/xbill/DNS/Cache$CacheMap.getMaxSize:()I
       7: ireturn

  public void setMaxEntries(int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: iload_1
       5: invokevirtual #120                // Method org/xbill/DNS/Cache$CacheMap.setMaxSize:(I)V
       8: return

  public int getDClass();
    Code:
       0: aload_0
       1: getfield      #11                 // Field dclass:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #110                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #111                // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #15                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      16: invokevirtual #121                // Method org/xbill/DNS/Cache$CacheMap.values:()Ljava/util/Collection;
      19: invokeinterface #122,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          83
      34: aload_0
      35: aload_3
      36: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: invokespecial #68                 // Method allElements:(Ljava/lang/Object;)[Lorg/xbill/DNS/Cache$Element;
      44: astore        4
      46: iconst_0
      47: istore        5
      49: iload         5
      51: aload         4
      53: arraylength
      54: if_icmpge     80
      57: aload_1
      58: aload         4
      60: iload         5
      62: aaload
      63: invokevirtual #114                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      66: pop
      67: aload_1
      68: ldc           #123                // String \n
      70: invokevirtual #113                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      73: pop
      74: iinc          5, 1
      77: goto          49
      80: goto          25
      83: aload_2
      84: monitorexit
      85: goto          95
      88: astore        6
      90: aload_2
      91: monitorexit
      92: aload         6
      94: athrow
      95: aload_1
      96: invokevirtual #115                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      99: areturn
    Exception table:
       from    to  target type
          12    85    88   any
          88    92    88   any

  static int access$000(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #1                  // Method limitExpire:(JJ)I
       5: ireturn
}
