Compiled from "DNSSEC.java"
public class org.xbill.DNS.DNSSEC {
  private static final org.xbill.DNS.DNSSEC$ECKeyInfo GOST;

  private static final org.xbill.DNS.DNSSEC$ECKeyInfo ECDSA_P256;

  private static final org.xbill.DNS.DNSSEC$ECKeyInfo ECDSA_P384;

  private static final int ASN1_SEQ;

  private static final int ASN1_INT;

  private static final int DSA_LEN;

  private org.xbill.DNS.DNSSEC();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static void digestSIG(org.xbill.DNS.DNSOutput, org.xbill.DNS.SIGBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method org/xbill/DNS/SIGBase.getTypeCovered:()I
       5: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_0
       9: aload_1
      10: invokevirtual #4                  // Method org/xbill/DNS/SIGBase.getAlgorithm:()I
      13: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      16: aload_0
      17: aload_1
      18: invokevirtual #6                  // Method org/xbill/DNS/SIGBase.getLabels:()I
      21: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      24: aload_0
      25: aload_1
      26: invokevirtual #7                  // Method org/xbill/DNS/SIGBase.getOrigTTL:()J
      29: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      32: aload_0
      33: aload_1
      34: invokevirtual #9                  // Method org/xbill/DNS/SIGBase.getExpire:()Ljava/util/Date;
      37: invokevirtual #10                 // Method java/util/Date.getTime:()J
      40: ldc2_w        #11                 // long 1000l
      43: ldiv
      44: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      47: aload_0
      48: aload_1
      49: invokevirtual #13                 // Method org/xbill/DNS/SIGBase.getTimeSigned:()Ljava/util/Date;
      52: invokevirtual #10                 // Method java/util/Date.getTime:()J
      55: ldc2_w        #11                 // long 1000l
      58: ldiv
      59: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      62: aload_0
      63: aload_1
      64: invokevirtual #14                 // Method org/xbill/DNS/SIGBase.getFootprint:()I
      67: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      70: aload_1
      71: invokevirtual #15                 // Method org/xbill/DNS/SIGBase.getSigner:()Lorg/xbill/DNS/Name;
      74: aload_0
      75: invokevirtual #16                 // Method org/xbill/DNS/Name.toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
      78: return

  public static byte[] digestRRset(org.xbill.DNS.RRSIGRecord, org.xbill.DNS.RRset);
    Code:
       0: new           #17                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokestatic  #19                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
      13: aload_1
      14: invokevirtual #20                 // Method org/xbill/DNS/RRset.size:()I
      17: istore_3
      18: iload_3
      19: anewarray     #21                 // class org/xbill/DNS/Record
      22: astore        4
      24: aload_1
      25: invokevirtual #22                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/Iterator;
      28: astore        5
      30: aload_1
      31: invokevirtual #23                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
      34: astore        6
      36: aconst_null
      37: astore        7
      39: aload_0
      40: invokevirtual #24                 // Method org/xbill/DNS/RRSIGRecord.getLabels:()I
      43: iconst_1
      44: iadd
      45: istore        8
      47: aload         6
      49: invokevirtual #25                 // Method org/xbill/DNS/Name.labels:()I
      52: iload         8
      54: if_icmple     72
      57: aload         6
      59: aload         6
      61: invokevirtual #25                 // Method org/xbill/DNS/Name.labels:()I
      64: iload         8
      66: isub
      67: invokevirtual #26                 // Method org/xbill/DNS/Name.wild:(I)Lorg/xbill/DNS/Name;
      70: astore        7
      72: aload         5
      74: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          102
      82: aload         4
      84: iinc          3, -1
      87: iload_3
      88: aload         5
      90: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #21                 // class org/xbill/DNS/Record
      98: aastore
      99: goto          72
     102: aload         4
     104: invokestatic  #29                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
     107: new           #17                 // class org/xbill/DNS/DNSOutput
     110: dup
     111: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
     114: astore        9
     116: aload         7
     118: ifnull        131
     121: aload         7
     123: aload         9
     125: invokevirtual #16                 // Method org/xbill/DNS/Name.toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
     128: goto          138
     131: aload         6
     133: aload         9
     135: invokevirtual #16                 // Method org/xbill/DNS/Name.toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
     138: aload         9
     140: aload_1
     141: invokevirtual #30                 // Method org/xbill/DNS/RRset.getType:()I
     144: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
     147: aload         9
     149: aload_1
     150: invokevirtual #31                 // Method org/xbill/DNS/RRset.getDClass:()I
     153: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
     156: aload         9
     158: aload_0
     159: invokevirtual #32                 // Method org/xbill/DNS/RRSIGRecord.getOrigTTL:()J
     162: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
     165: iconst_0
     166: istore        10
     168: iload         10
     170: aload         4
     172: arraylength
     173: if_icmpge     245
     176: aload_2
     177: aload         9
     179: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     182: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     185: aload_2
     186: invokevirtual #35                 // Method org/xbill/DNS/DNSOutput.current:()I
     189: istore        11
     191: aload_2
     192: iconst_0
     193: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
     196: aload_2
     197: aload         4
     199: iload         10
     201: aaload
     202: invokevirtual #36                 // Method org/xbill/DNS/Record.rdataToWireCanonical:()[B
     205: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     208: aload_2
     209: invokevirtual #35                 // Method org/xbill/DNS/DNSOutput.current:()I
     212: iload         11
     214: isub
     215: iconst_2
     216: isub
     217: istore        12
     219: aload_2
     220: invokevirtual #37                 // Method org/xbill/DNS/DNSOutput.save:()V
     223: aload_2
     224: iload         11
     226: invokevirtual #38                 // Method org/xbill/DNS/DNSOutput.jump:(I)V
     229: aload_2
     230: iload         12
     232: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
     235: aload_2
     236: invokevirtual #39                 // Method org/xbill/DNS/DNSOutput.restore:()V
     239: iinc          10, 1
     242: goto          168
     245: aload_2
     246: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     249: areturn

  public static byte[] digestMessage(org.xbill.DNS.SIGRecord, org.xbill.DNS.Message, byte[]);
    Code:
       0: new           #17                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokestatic  #19                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
      13: aload_2
      14: ifnull        22
      17: aload_3
      18: aload_2
      19: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      22: aload_1
      23: aload_3
      24: invokevirtual #40                 // Method org/xbill/DNS/Message.toWire:(Lorg/xbill/DNS/DNSOutput;)V
      27: aload_3
      28: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      31: areturn

  private static int BigIntegerLength(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method java/math/BigInteger.bitLength:()I
       4: bipush        7
       6: iadd
       7: bipush        8
       9: idiv
      10: ireturn

  private static java.math.BigInteger readBigInteger(org.xbill.DNS.DNSInput, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
       5: astore_2
       6: new           #43                 // class java/math/BigInteger
       9: dup
      10: iconst_1
      11: aload_2
      12: invokespecial #44                 // Method java/math/BigInteger."<init>":(I[B)V
      15: areturn

  private static java.math.BigInteger readBigInteger(org.xbill.DNS.DNSInput);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
       4: astore_1
       5: new           #43                 // class java/math/BigInteger
       8: dup
       9: iconst_1
      10: aload_1
      11: invokespecial #44                 // Method java/math/BigInteger."<init>":(I[B)V
      14: areturn

  private static byte[] trimByteArray(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: baload
       3: ifne          26
       6: aload_0
       7: arraylength
       8: iconst_1
       9: isub
      10: newarray       byte
      12: astore_1
      13: aload_0
      14: iconst_1
      15: aload_1
      16: iconst_0
      17: aload_0
      18: arraylength
      19: iconst_1
      20: isub
      21: invokestatic  #46                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_1
      25: areturn
      26: aload_0
      27: areturn

  private static void reverseByteArray(byte[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: arraylength
       5: iconst_2
       6: idiv
       7: if_icmpge     37
      10: aload_0
      11: arraylength
      12: iload_1
      13: isub
      14: iconst_1
      15: isub
      16: istore_2
      17: aload_0
      18: iload_1
      19: baload
      20: istore_3
      21: aload_0
      22: iload_1
      23: aload_0
      24: iload_2
      25: baload
      26: bastore
      27: aload_0
      28: iload_2
      29: iload_3
      30: bastore
      31: iinc          1, 1
      34: goto          2
      37: return

  private static java.math.BigInteger readBigIntegerLittleEndian(org.xbill.DNS.DNSInput, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
       5: astore_2
       6: aload_2
       7: invokestatic  #47                 // Method reverseByteArray:([B)V
      10: new           #43                 // class java/math/BigInteger
      13: dup
      14: iconst_1
      15: aload_2
      16: invokespecial #44                 // Method java/math/BigInteger."<init>":(I[B)V
      19: areturn

  private static void writeBigInteger(org.xbill.DNS.DNSOutput, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method java/math/BigInteger.toByteArray:()[B
       4: invokestatic  #49                 // Method trimByteArray:([B)[B
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      13: return

  private static void writePaddedBigInteger(org.xbill.DNS.DNSOutput, java.math.BigInteger, int);
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method java/math/BigInteger.toByteArray:()[B
       4: invokestatic  #49                 // Method trimByteArray:([B)[B
       7: astore_3
       8: aload_3
       9: arraylength
      10: iload_2
      11: if_icmple     22
      14: new           #50                 // class java/lang/IllegalArgumentException
      17: dup
      18: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":()V
      21: athrow
      22: aload_3
      23: arraylength
      24: iload_2
      25: if_icmpge     42
      28: iload_2
      29: aload_3
      30: arraylength
      31: isub
      32: newarray       byte
      34: astore        4
      36: aload_0
      37: aload         4
      39: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      42: aload_0
      43: aload_3
      44: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      47: return

  private static void writePaddedBigIntegerLittleEndian(org.xbill.DNS.DNSOutput, java.math.BigInteger, int);
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method java/math/BigInteger.toByteArray:()[B
       4: invokestatic  #49                 // Method trimByteArray:([B)[B
       7: astore_3
       8: aload_3
       9: arraylength
      10: iload_2
      11: if_icmple     22
      14: new           #50                 // class java/lang/IllegalArgumentException
      17: dup
      18: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":()V
      21: athrow
      22: aload_3
      23: invokestatic  #47                 // Method reverseByteArray:([B)V
      26: aload_0
      27: aload_3
      28: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      31: aload_3
      32: arraylength
      33: iload_2
      34: if_icmpge     51
      37: iload_2
      38: aload_3
      39: arraylength
      40: isub
      41: newarray       byte
      43: astore        4
      45: aload_0
      46: aload         4
      48: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      51: return

  private static java.security.PublicKey toRSAPublicKey(org.xbill.DNS.KEYBase) throws java.io.IOException, java.security.GeneralSecurityException;
    Code:
       0: new           #52                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokevirtual #53                 // Method org/xbill/DNS/KEYBase.getKey:()[B
       8: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      11: astore_1
      12: aload_1
      13: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      16: istore_2
      17: iload_2
      18: ifne          26
      21: aload_1
      22: invokevirtual #56                 // Method org/xbill/DNS/DNSInput.readU16:()I
      25: istore_2
      26: aload_1
      27: iload_2
      28: invokestatic  #57                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      31: astore_3
      32: aload_1
      33: invokestatic  #58                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;)Ljava/math/BigInteger;
      36: astore        4
      38: ldc           #59                 // String RSA
      40: invokestatic  #60                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      43: astore        5
      45: aload         5
      47: new           #61                 // class java/security/spec/RSAPublicKeySpec
      50: dup
      51: aload         4
      53: aload_3
      54: invokespecial #62                 // Method java/security/spec/RSAPublicKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      57: invokevirtual #63                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      60: areturn

  private static java.security.PublicKey toDSAPublicKey(org.xbill.DNS.KEYBase) throws java.io.IOException, java.security.GeneralSecurityException, org.xbill.DNS.DNSSEC$MalformedKeyException;
    Code:
       0: new           #52                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokevirtual #53                 // Method org/xbill/DNS/KEYBase.getKey:()[B
       8: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      11: astore_1
      12: aload_1
      13: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      16: istore_2
      17: iload_2
      18: bipush        8
      20: if_icmple     32
      23: new           #64                 // class org/xbill/DNS/DNSSEC$MalformedKeyException
      26: dup
      27: aload_0
      28: invokespecial #65                 // Method org/xbill/DNS/DNSSEC$MalformedKeyException."<init>":(Lorg/xbill/DNS/KEYBase;)V
      31: athrow
      32: aload_1
      33: bipush        20
      35: invokestatic  #57                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      38: astore_3
      39: aload_1
      40: bipush        64
      42: iload_2
      43: bipush        8
      45: imul
      46: iadd
      47: invokestatic  #57                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      50: astore        4
      52: aload_1
      53: bipush        64
      55: iload_2
      56: bipush        8
      58: imul
      59: iadd
      60: invokestatic  #57                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      63: astore        5
      65: aload_1
      66: bipush        64
      68: iload_2
      69: bipush        8
      71: imul
      72: iadd
      73: invokestatic  #57                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      76: astore        6
      78: ldc           #66                 // String DSA
      80: invokestatic  #60                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      83: astore        7
      85: aload         7
      87: new           #67                 // class java/security/spec/DSAPublicKeySpec
      90: dup
      91: aload         6
      93: aload         4
      95: aload_3
      96: aload         5
      98: invokespecial #68                 // Method java/security/spec/DSAPublicKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     101: invokevirtual #63                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
     104: areturn

  private static java.security.PublicKey toECGOSTPublicKey(org.xbill.DNS.KEYBase, org.xbill.DNS.DNSSEC$ECKeyInfo) throws java.io.IOException, java.security.GeneralSecurityException, org.xbill.DNS.DNSSEC$MalformedKeyException;
    Code:
       0: new           #52                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokevirtual #53                 // Method org/xbill/DNS/KEYBase.getKey:()[B
       8: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      17: invokestatic  #70                 // Method readBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      20: astore_3
      21: aload_2
      22: aload_1
      23: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      26: invokestatic  #70                 // Method readBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      29: astore        4
      31: new           #71                 // class java/security/spec/ECPoint
      34: dup
      35: aload_3
      36: aload         4
      38: invokespecial #72                 // Method java/security/spec/ECPoint."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      41: astore        5
      43: ldc           #73                 // String ECGOST3410
      45: invokestatic  #60                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      48: astore        6
      50: aload         6
      52: new           #74                 // class java/security/spec/ECPublicKeySpec
      55: dup
      56: aload         5
      58: aload_1
      59: getfield      #75                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.spec:Ljava/security/spec/ECParameterSpec;
      62: invokespecial #76                 // Method java/security/spec/ECPublicKeySpec."<init>":(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V
      65: invokevirtual #63                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      68: areturn

  private static java.security.PublicKey toECDSAPublicKey(org.xbill.DNS.KEYBase, org.xbill.DNS.DNSSEC$ECKeyInfo) throws java.io.IOException, java.security.GeneralSecurityException, org.xbill.DNS.DNSSEC$MalformedKeyException;
    Code:
       0: new           #52                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokevirtual #53                 // Method org/xbill/DNS/KEYBase.getKey:()[B
       8: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      17: invokestatic  #57                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      20: astore_3
      21: aload_2
      22: aload_1
      23: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      26: invokestatic  #57                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      29: astore        4
      31: new           #71                 // class java/security/spec/ECPoint
      34: dup
      35: aload_3
      36: aload         4
      38: invokespecial #72                 // Method java/security/spec/ECPoint."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      41: astore        5
      43: ldc           #77                 // String EC
      45: invokestatic  #60                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      48: astore        6
      50: aload         6
      52: new           #74                 // class java/security/spec/ECPublicKeySpec
      55: dup
      56: aload         5
      58: aload_1
      59: getfield      #75                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.spec:Ljava/security/spec/ECParameterSpec;
      62: invokespecial #76                 // Method java/security/spec/ECPublicKeySpec."<init>":(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V
      65: invokevirtual #63                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      68: areturn

  static java.security.PublicKey toPublicKey(org.xbill.DNS.KEYBase) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method org/xbill/DNS/KEYBase.getAlgorithm:()I
       4: istore_1
       5: iload_1
       6: tableswitch   { // 1 to 14
                     1: 76
                     2: 110
                     3: 81
                     4: 110
                     5: 76
                     6: 81
                     7: 76
                     8: 76
                     9: 110
                    10: 76
                    11: 110
                    12: 86
                    13: 94
                    14: 102
               default: 110
          }
      76: aload_0
      77: invokestatic  #79                 // Method toRSAPublicKey:(Lorg/xbill/DNS/KEYBase;)Ljava/security/PublicKey;
      80: areturn
      81: aload_0
      82: invokestatic  #80                 // Method toDSAPublicKey:(Lorg/xbill/DNS/KEYBase;)Ljava/security/PublicKey;
      85: areturn
      86: aload_0
      87: getstatic     #81                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      90: invokestatic  #82                 // Method toECGOSTPublicKey:(Lorg/xbill/DNS/KEYBase;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)Ljava/security/PublicKey;
      93: areturn
      94: aload_0
      95: getstatic     #83                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      98: invokestatic  #84                 // Method toECDSAPublicKey:(Lorg/xbill/DNS/KEYBase;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)Ljava/security/PublicKey;
     101: areturn
     102: aload_0
     103: getstatic     #85                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     106: invokestatic  #84                 // Method toECDSAPublicKey:(Lorg/xbill/DNS/KEYBase;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)Ljava/security/PublicKey;
     109: areturn
     110: new           #86                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     113: dup
     114: iload_1
     115: invokespecial #87                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     118: athrow
     119: astore_2
     120: new           #64                 // class org/xbill/DNS/DNSSEC$MalformedKeyException
     123: dup
     124: aload_0
     125: invokespecial #65                 // Method org/xbill/DNS/DNSSEC$MalformedKeyException."<init>":(Lorg/xbill/DNS/KEYBase;)V
     128: athrow
     129: astore_2
     130: new           #90                 // class org/xbill/DNS/DNSSEC$DNSSECException
     133: dup
     134: aload_2
     135: invokevirtual #91                 // Method java/security/GeneralSecurityException.toString:()Ljava/lang/String;
     138: invokespecial #92                 // Method org/xbill/DNS/DNSSEC$DNSSECException."<init>":(Ljava/lang/String;)V
     141: athrow
    Exception table:
       from    to  target type
           5    80   119   Class java/io/IOException
          81    85   119   Class java/io/IOException
          86    93   119   Class java/io/IOException
          94   101   119   Class java/io/IOException
         102   109   119   Class java/io/IOException
         110   119   119   Class java/io/IOException
           5    80   129   Class java/security/GeneralSecurityException
          81    85   129   Class java/security/GeneralSecurityException
          86    93   129   Class java/security/GeneralSecurityException
          94   101   129   Class java/security/GeneralSecurityException
         102   109   129   Class java/security/GeneralSecurityException
         110   119   129   Class java/security/GeneralSecurityException

  private static byte[] fromRSAPublicKey(java.security.interfaces.RSAPublicKey);
    Code:
       0: new           #17                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #93,  1           // InterfaceMethod java/security/interfaces/RSAPublicKey.getPublicExponent:()Ljava/math/BigInteger;
      14: astore_2
      15: aload_0
      16: invokeinterface #94,  1           // InterfaceMethod java/security/interfaces/RSAPublicKey.getModulus:()Ljava/math/BigInteger;
      21: astore_3
      22: aload_2
      23: invokestatic  #95                 // Method BigIntegerLength:(Ljava/math/BigInteger;)I
      26: istore        4
      28: iload         4
      30: sipush        256
      33: if_icmpge     45
      36: aload_1
      37: iload         4
      39: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      42: goto          56
      45: aload_1
      46: iconst_0
      47: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      50: aload_1
      51: iload         4
      53: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      56: aload_1
      57: aload_2
      58: invokestatic  #96                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      61: aload_1
      62: aload_3
      63: invokestatic  #96                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      66: aload_1
      67: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      70: areturn

  private static byte[] fromDSAPublicKey(java.security.interfaces.DSAPublicKey);
    Code:
       0: new           #17                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #97,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      14: invokeinterface #98,  1           // InterfaceMethod java/security/interfaces/DSAParams.getQ:()Ljava/math/BigInteger;
      19: astore_2
      20: aload_0
      21: invokeinterface #97,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      26: invokeinterface #99,  1           // InterfaceMethod java/security/interfaces/DSAParams.getP:()Ljava/math/BigInteger;
      31: astore_3
      32: aload_0
      33: invokeinterface #97,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      38: invokeinterface #100,  1          // InterfaceMethod java/security/interfaces/DSAParams.getG:()Ljava/math/BigInteger;
      43: astore        4
      45: aload_0
      46: invokeinterface #101,  1          // InterfaceMethod java/security/interfaces/DSAPublicKey.getY:()Ljava/math/BigInteger;
      51: astore        5
      53: aload_3
      54: invokevirtual #48                 // Method java/math/BigInteger.toByteArray:()[B
      57: arraylength
      58: bipush        64
      60: isub
      61: bipush        8
      63: idiv
      64: istore        6
      66: aload_1
      67: iload         6
      69: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      72: aload_1
      73: aload_2
      74: invokestatic  #96                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      77: aload_1
      78: aload_3
      79: invokestatic  #96                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      82: aload_1
      83: aload         4
      85: bipush        8
      87: iload         6
      89: imul
      90: bipush        64
      92: iadd
      93: invokestatic  #102                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      96: aload_1
      97: aload         5
      99: bipush        8
     101: iload         6
     103: imul
     104: bipush        64
     106: iadd
     107: invokestatic  #102                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
     110: aload_1
     111: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     114: areturn

  private static byte[] fromECGOSTPublicKey(java.security.interfaces.ECPublicKey, org.xbill.DNS.DNSSEC$ECKeyInfo);
    Code:
       0: new           #17                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #103,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      14: invokevirtual #104                // Method java/security/spec/ECPoint.getAffineX:()Ljava/math/BigInteger;
      17: astore_3
      18: aload_0
      19: invokeinterface #103,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      24: invokevirtual #105                // Method java/security/spec/ECPoint.getAffineY:()Ljava/math/BigInteger;
      27: astore        4
      29: aload_2
      30: aload_3
      31: aload_1
      32: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      35: invokestatic  #106                // Method writePaddedBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      38: aload_2
      39: aload         4
      41: aload_1
      42: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      45: invokestatic  #106                // Method writePaddedBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      48: aload_2
      49: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      52: areturn

  private static byte[] fromECDSAPublicKey(java.security.interfaces.ECPublicKey, org.xbill.DNS.DNSSEC$ECKeyInfo);
    Code:
       0: new           #17                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #103,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      14: invokevirtual #104                // Method java/security/spec/ECPoint.getAffineX:()Ljava/math/BigInteger;
      17: astore_3
      18: aload_0
      19: invokeinterface #103,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      24: invokevirtual #105                // Method java/security/spec/ECPoint.getAffineY:()Ljava/math/BigInteger;
      27: astore        4
      29: aload_2
      30: aload_3
      31: aload_1
      32: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      35: invokestatic  #102                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      38: aload_2
      39: aload         4
      41: aload_1
      42: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      45: invokestatic  #102                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      48: aload_2
      49: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      52: areturn

  static byte[] fromPublicKey(java.security.PublicKey, int) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 14
                     1: 72
                     2: 196
                     3: 95
                     4: 196
                     5: 72
                     6: 95
                     7: 72
                     8: 72
                     9: 196
                    10: 72
                    11: 196
                    12: 118
                    13: 144
                    14: 170
               default: 196
          }
      72: aload_0
      73: instanceof    #107                // class java/security/interfaces/RSAPublicKey
      76: ifne          87
      79: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
      82: dup
      83: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
      86: athrow
      87: aload_0
      88: checkcast     #107                // class java/security/interfaces/RSAPublicKey
      91: invokestatic  #110                // Method fromRSAPublicKey:(Ljava/security/interfaces/RSAPublicKey;)[B
      94: areturn
      95: aload_0
      96: instanceof    #111                // class java/security/interfaces/DSAPublicKey
      99: ifne          110
     102: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     105: dup
     106: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     109: athrow
     110: aload_0
     111: checkcast     #111                // class java/security/interfaces/DSAPublicKey
     114: invokestatic  #112                // Method fromDSAPublicKey:(Ljava/security/interfaces/DSAPublicKey;)[B
     117: areturn
     118: aload_0
     119: instanceof    #113                // class java/security/interfaces/ECPublicKey
     122: ifne          133
     125: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     128: dup
     129: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     132: athrow
     133: aload_0
     134: checkcast     #113                // class java/security/interfaces/ECPublicKey
     137: getstatic     #81                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     140: invokestatic  #114                // Method fromECGOSTPublicKey:(Ljava/security/interfaces/ECPublicKey;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     143: areturn
     144: aload_0
     145: instanceof    #113                // class java/security/interfaces/ECPublicKey
     148: ifne          159
     151: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     154: dup
     155: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     158: athrow
     159: aload_0
     160: checkcast     #113                // class java/security/interfaces/ECPublicKey
     163: getstatic     #83                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     166: invokestatic  #115                // Method fromECDSAPublicKey:(Ljava/security/interfaces/ECPublicKey;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     169: areturn
     170: aload_0
     171: instanceof    #113                // class java/security/interfaces/ECPublicKey
     174: ifne          185
     177: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     180: dup
     181: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     184: athrow
     185: aload_0
     186: checkcast     #113                // class java/security/interfaces/ECPublicKey
     189: getstatic     #85                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     192: invokestatic  #115                // Method fromECDSAPublicKey:(Ljava/security/interfaces/ECPublicKey;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     195: areturn
     196: new           #86                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     199: dup
     200: iload_1
     201: invokespecial #87                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     204: athrow

  public static java.lang.String algString(int) throws org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException;
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 14
                     1: 72
                     2: 96
                     3: 75
                     4: 96
                     5: 78
                     6: 75
                     7: 78
                     8: 81
                     9: 96
                    10: 84
                    11: 96
                    12: 87
                    13: 90
                    14: 93
               default: 96
          }
      72: ldc           #116                // String MD5withRSA
      74: areturn
      75: ldc           #117                // String SHA1withDSA
      77: areturn
      78: ldc           #118                // String SHA1withRSA
      80: areturn
      81: ldc           #119                // String SHA256withRSA
      83: areturn
      84: ldc           #120                // String SHA512withRSA
      86: areturn
      87: ldc           #121                // String GOST3411withECGOST3410
      89: areturn
      90: ldc           #122                // String SHA256withECDSA
      92: areturn
      93: ldc           #123                // String SHA384withECDSA
      95: areturn
      96: new           #86                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
      99: dup
     100: iload_0
     101: invokespecial #87                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     104: athrow

  private static byte[] DSASignaturefromDNS(byte[]) throws org.xbill.DNS.DNSSEC$DNSSECException, java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: bipush        41
       4: if_icmpeq     15
       7: new           #124                // class org/xbill/DNS/DNSSEC$SignatureVerificationException
      10: dup
      11: invokespecial #125                // Method org/xbill/DNS/DNSSEC$SignatureVerificationException."<init>":()V
      14: athrow
      15: new           #52                 // class org/xbill/DNS/DNSInput
      18: dup
      19: aload_0
      20: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      23: astore_1
      24: new           #17                 // class org/xbill/DNS/DNSOutput
      27: dup
      28: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      31: astore_2
      32: aload_1
      33: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      36: istore_3
      37: aload_1
      38: bipush        20
      40: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      43: astore        4
      45: bipush        20
      47: istore        5
      49: aload         4
      51: iconst_0
      52: baload
      53: ifge          59
      56: iinc          5, 1
      59: aload_1
      60: bipush        20
      62: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      65: astore        6
      67: bipush        20
      69: istore        7
      71: aload         6
      73: iconst_0
      74: baload
      75: ifge          81
      78: iinc          7, 1
      81: aload_2
      82: bipush        48
      84: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      87: aload_2
      88: iload         5
      90: iload         7
      92: iadd
      93: iconst_4
      94: iadd
      95: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      98: aload_2
      99: iconst_2
     100: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     103: aload_2
     104: iload         5
     106: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     109: iload         5
     111: bipush        20
     113: if_icmple     121
     116: aload_2
     117: iconst_0
     118: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     121: aload_2
     122: aload         4
     124: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     127: aload_2
     128: iconst_2
     129: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     132: aload_2
     133: iload         7
     135: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     138: iload         7
     140: bipush        20
     142: if_icmple     150
     145: aload_2
     146: iconst_0
     147: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     150: aload_2
     151: aload         6
     153: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     156: aload_2
     157: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     160: areturn

  private static byte[] DSASignaturetoDNS(byte[], int) throws java.io.IOException;
    Code:
       0: new           #52                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: astore_2
       9: new           #17                 // class org/xbill/DNS/DNSOutput
      12: dup
      13: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      16: astore_3
      17: aload_3
      18: iload_1
      19: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      22: aload_2
      23: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      26: istore        4
      28: iload         4
      30: bipush        48
      32: if_icmpeq     43
      35: new           #88                 // class java/io/IOException
      38: dup
      39: invokespecial #126                // Method java/io/IOException."<init>":()V
      42: athrow
      43: aload_2
      44: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      47: istore        5
      49: aload_2
      50: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      53: istore        4
      55: iload         4
      57: iconst_2
      58: if_icmpeq     69
      61: new           #88                 // class java/io/IOException
      64: dup
      65: invokespecial #126                // Method java/io/IOException."<init>":()V
      68: athrow
      69: aload_2
      70: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      73: istore        6
      75: iload         6
      77: bipush        21
      79: if_icmpne     97
      82: aload_2
      83: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      86: ifeq          112
      89: new           #88                 // class java/io/IOException
      92: dup
      93: invokespecial #126                // Method java/io/IOException."<init>":()V
      96: athrow
      97: iload         6
      99: bipush        20
     101: if_icmpeq     112
     104: new           #88                 // class java/io/IOException
     107: dup
     108: invokespecial #126                // Method java/io/IOException."<init>":()V
     111: athrow
     112: aload_2
     113: bipush        20
     115: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
     118: astore        7
     120: aload_3
     121: aload         7
     123: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     126: aload_2
     127: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
     130: istore        4
     132: iload         4
     134: iconst_2
     135: if_icmpeq     146
     138: new           #88                 // class java/io/IOException
     141: dup
     142: invokespecial #126                // Method java/io/IOException."<init>":()V
     145: athrow
     146: aload_2
     147: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
     150: istore        8
     152: iload         8
     154: bipush        21
     156: if_icmpne     174
     159: aload_2
     160: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
     163: ifeq          189
     166: new           #88                 // class java/io/IOException
     169: dup
     170: invokespecial #126                // Method java/io/IOException."<init>":()V
     173: athrow
     174: iload         8
     176: bipush        20
     178: if_icmpeq     189
     181: new           #88                 // class java/io/IOException
     184: dup
     185: invokespecial #126                // Method java/io/IOException."<init>":()V
     188: athrow
     189: aload_2
     190: bipush        20
     192: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
     195: astore        7
     197: aload_3
     198: aload         7
     200: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     203: aload_3
     204: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     207: areturn

  private static byte[] ECGOSTSignaturefromDNS(byte[], org.xbill.DNS.DNSSEC$ECKeyInfo) throws org.xbill.DNS.DNSSEC$DNSSECException, java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: aload_1
       3: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
       6: iconst_2
       7: imul
       8: if_icmpeq     19
      11: new           #124                // class org/xbill/DNS/DNSSEC$SignatureVerificationException
      14: dup
      15: invokespecial #125                // Method org/xbill/DNS/DNSSEC$SignatureVerificationException."<init>":()V
      18: athrow
      19: aload_0
      20: areturn

  private static byte[] ECDSASignaturefromDNS(byte[], org.xbill.DNS.DNSSEC$ECKeyInfo) throws org.xbill.DNS.DNSSEC$DNSSECException, java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: aload_1
       3: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
       6: iconst_2
       7: imul
       8: if_icmpeq     19
      11: new           #124                // class org/xbill/DNS/DNSSEC$SignatureVerificationException
      14: dup
      15: invokespecial #125                // Method org/xbill/DNS/DNSSEC$SignatureVerificationException."<init>":()V
      18: athrow
      19: new           #52                 // class org/xbill/DNS/DNSInput
      22: dup
      23: aload_0
      24: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      27: astore_2
      28: new           #17                 // class org/xbill/DNS/DNSOutput
      31: dup
      32: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      35: astore_3
      36: aload_2
      37: aload_1
      38: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      41: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      44: astore        4
      46: aload_1
      47: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      50: istore        5
      52: aload         4
      54: iconst_0
      55: baload
      56: ifge          62
      59: iinc          5, 1
      62: aload_2
      63: aload_1
      64: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      67: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      70: astore        6
      72: aload_1
      73: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      76: istore        7
      78: aload         6
      80: iconst_0
      81: baload
      82: ifge          88
      85: iinc          7, 1
      88: aload_3
      89: bipush        48
      91: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      94: aload_3
      95: iload         5
      97: iload         7
      99: iadd
     100: iconst_4
     101: iadd
     102: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     105: aload_3
     106: iconst_2
     107: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     110: aload_3
     111: iload         5
     113: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     116: iload         5
     118: aload_1
     119: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     122: if_icmple     130
     125: aload_3
     126: iconst_0
     127: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     130: aload_3
     131: aload         4
     133: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     136: aload_3
     137: iconst_2
     138: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     141: aload_3
     142: iload         7
     144: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     147: iload         7
     149: aload_1
     150: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     153: if_icmple     161
     156: aload_3
     157: iconst_0
     158: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     161: aload_3
     162: aload         6
     164: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     167: aload_3
     168: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     171: areturn

  private static byte[] ECDSASignaturetoDNS(byte[], org.xbill.DNS.DNSSEC$ECKeyInfo) throws java.io.IOException;
    Code:
       0: new           #52                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: astore_2
       9: new           #17                 // class org/xbill/DNS/DNSOutput
      12: dup
      13: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      16: astore_3
      17: aload_2
      18: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      21: istore        4
      23: iload         4
      25: bipush        48
      27: if_icmpeq     38
      30: new           #88                 // class java/io/IOException
      33: dup
      34: invokespecial #126                // Method java/io/IOException."<init>":()V
      37: athrow
      38: aload_2
      39: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      42: istore        5
      44: aload_2
      45: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      48: istore        4
      50: iload         4
      52: iconst_2
      53: if_icmpeq     64
      56: new           #88                 // class java/io/IOException
      59: dup
      60: invokespecial #126                // Method java/io/IOException."<init>":()V
      63: athrow
      64: aload_2
      65: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      68: istore        6
      70: iload         6
      72: aload_1
      73: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      76: iconst_1
      77: iadd
      78: if_icmpne     96
      81: aload_2
      82: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
      85: ifeq          113
      88: new           #88                 // class java/io/IOException
      91: dup
      92: invokespecial #126                // Method java/io/IOException."<init>":()V
      95: athrow
      96: iload         6
      98: aload_1
      99: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     102: if_icmpeq     113
     105: new           #88                 // class java/io/IOException
     108: dup
     109: invokespecial #126                // Method java/io/IOException."<init>":()V
     112: athrow
     113: aload_2
     114: aload_1
     115: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     118: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
     121: astore        7
     123: aload_3
     124: aload         7
     126: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     129: aload_2
     130: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
     133: istore        4
     135: iload         4
     137: iconst_2
     138: if_icmpeq     149
     141: new           #88                 // class java/io/IOException
     144: dup
     145: invokespecial #126                // Method java/io/IOException."<init>":()V
     148: athrow
     149: aload_2
     150: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
     153: istore        8
     155: iload         8
     157: aload_1
     158: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     161: iconst_1
     162: iadd
     163: if_icmpne     181
     166: aload_2
     167: invokevirtual #55                 // Method org/xbill/DNS/DNSInput.readU8:()I
     170: ifeq          198
     173: new           #88                 // class java/io/IOException
     176: dup
     177: invokespecial #126                // Method java/io/IOException."<init>":()V
     180: athrow
     181: iload         8
     183: aload_1
     184: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     187: if_icmpeq     198
     190: new           #88                 // class java/io/IOException
     193: dup
     194: invokespecial #126                // Method java/io/IOException."<init>":()V
     197: athrow
     198: aload_2
     199: aload_1
     200: getfield      #69                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     203: invokevirtual #42                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
     206: astore        7
     208: aload_3
     209: aload         7
     211: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     214: aload_3
     215: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     218: areturn

  private static void verify(java.security.PublicKey, int, byte[], byte[]) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: instanceof    #111                // class java/security/interfaces/DSAPublicKey
       4: ifeq          25
       7: aload_3
       8: invokestatic  #127                // Method DSASignaturefromDNS:([B)[B
      11: astore_3
      12: goto          115
      15: astore        4
      17: new           #128                // class java/lang/IllegalStateException
      20: dup
      21: invokespecial #129                // Method java/lang/IllegalStateException."<init>":()V
      24: athrow
      25: aload_0
      26: instanceof    #113                // class java/security/interfaces/ECPublicKey
      29: ifeq          115
      32: iload_1
      33: tableswitch   { // 12 to 14
                    12: 60
                    13: 71
                    14: 82
               default: 93
          }
      60: aload_3
      61: getstatic     #81                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      64: invokestatic  #130                // Method ECGOSTSignaturefromDNS:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
      67: astore_3
      68: goto          102
      71: aload_3
      72: getstatic     #83                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      75: invokestatic  #131                // Method ECDSASignaturefromDNS:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
      78: astore_3
      79: goto          102
      82: aload_3
      83: getstatic     #85                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      86: invokestatic  #131                // Method ECDSASignaturefromDNS:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
      89: astore_3
      90: goto          102
      93: new           #86                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
      96: dup
      97: iload_1
      98: invokespecial #87                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     101: athrow
     102: goto          115
     105: astore        4
     107: new           #128                // class java/lang/IllegalStateException
     110: dup
     111: invokespecial #129                // Method java/lang/IllegalStateException."<init>":()V
     114: athrow
     115: iload_1
     116: invokestatic  #132                // Method algString:(I)Ljava/lang/String;
     119: invokestatic  #133                // Method java/security/Signature.getInstance:(Ljava/lang/String;)Ljava/security/Signature;
     122: astore        4
     124: aload         4
     126: aload_0
     127: invokevirtual #134                // Method java/security/Signature.initVerify:(Ljava/security/PublicKey;)V
     130: aload         4
     132: aload_2
     133: invokevirtual #135                // Method java/security/Signature.update:([B)V
     136: aload         4
     138: aload_3
     139: invokevirtual #136                // Method java/security/Signature.verify:([B)Z
     142: ifne          153
     145: new           #124                // class org/xbill/DNS/DNSSEC$SignatureVerificationException
     148: dup
     149: invokespecial #125                // Method org/xbill/DNS/DNSSEC$SignatureVerificationException."<init>":()V
     152: athrow
     153: goto          171
     156: astore        4
     158: new           #90                 // class org/xbill/DNS/DNSSEC$DNSSECException
     161: dup
     162: aload         4
     164: invokevirtual #91                 // Method java/security/GeneralSecurityException.toString:()Ljava/lang/String;
     167: invokespecial #92                 // Method org/xbill/DNS/DNSSEC$DNSSECException."<init>":(Ljava/lang/String;)V
     170: athrow
     171: return
    Exception table:
       from    to  target type
           7    12    15   Class java/io/IOException
          32   102   105   Class java/io/IOException
         115   153   156   Class java/security/GeneralSecurityException

  private static boolean matches(org.xbill.DNS.SIGBase, org.xbill.DNS.KEYBase);
    Code:
       0: aload_1
       1: invokevirtual #78                 // Method org/xbill/DNS/KEYBase.getAlgorithm:()I
       4: aload_0
       5: invokevirtual #4                  // Method org/xbill/DNS/SIGBase.getAlgorithm:()I
       8: if_icmpne     40
      11: aload_1
      12: invokevirtual #137                // Method org/xbill/DNS/KEYBase.getFootprint:()I
      15: aload_0
      16: invokevirtual #14                 // Method org/xbill/DNS/SIGBase.getFootprint:()I
      19: if_icmpne     40
      22: aload_1
      23: invokevirtual #138                // Method org/xbill/DNS/KEYBase.getName:()Lorg/xbill/DNS/Name;
      26: aload_0
      27: invokevirtual #15                 // Method org/xbill/DNS/SIGBase.getSigner:()Lorg/xbill/DNS/Name;
      30: invokevirtual #139                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public static void verify(org.xbill.DNS.RRset, org.xbill.DNS.RRSIGRecord, org.xbill.DNS.DNSKEYRecord) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #140                // Method matches:(Lorg/xbill/DNS/SIGBase;Lorg/xbill/DNS/KEYBase;)Z
       5: ifne          18
       8: new           #141                // class org/xbill/DNS/DNSSEC$KeyMismatchException
      11: dup
      12: aload_2
      13: aload_1
      14: invokespecial #142                // Method org/xbill/DNS/DNSSEC$KeyMismatchException."<init>":(Lorg/xbill/DNS/KEYBase;Lorg/xbill/DNS/SIGBase;)V
      17: athrow
      18: new           #143                // class java/util/Date
      21: dup
      22: invokespecial #144                // Method java/util/Date."<init>":()V
      25: astore_3
      26: aload_3
      27: aload_1
      28: invokevirtual #145                // Method org/xbill/DNS/RRSIGRecord.getExpire:()Ljava/util/Date;
      31: invokevirtual #146                // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      34: ifle          50
      37: new           #147                // class org/xbill/DNS/DNSSEC$SignatureExpiredException
      40: dup
      41: aload_1
      42: invokevirtual #145                // Method org/xbill/DNS/RRSIGRecord.getExpire:()Ljava/util/Date;
      45: aload_3
      46: invokespecial #148                // Method org/xbill/DNS/DNSSEC$SignatureExpiredException."<init>":(Ljava/util/Date;Ljava/util/Date;)V
      49: athrow
      50: aload_3
      51: aload_1
      52: invokevirtual #149                // Method org/xbill/DNS/RRSIGRecord.getTimeSigned:()Ljava/util/Date;
      55: invokevirtual #146                // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      58: ifge          74
      61: new           #150                // class org/xbill/DNS/DNSSEC$SignatureNotYetValidException
      64: dup
      65: aload_1
      66: invokevirtual #149                // Method org/xbill/DNS/RRSIGRecord.getTimeSigned:()Ljava/util/Date;
      69: aload_3
      70: invokespecial #151                // Method org/xbill/DNS/DNSSEC$SignatureNotYetValidException."<init>":(Ljava/util/Date;Ljava/util/Date;)V
      73: athrow
      74: aload_2
      75: invokevirtual #152                // Method org/xbill/DNS/DNSKEYRecord.getPublicKey:()Ljava/security/PublicKey;
      78: aload_1
      79: invokevirtual #153                // Method org/xbill/DNS/RRSIGRecord.getAlgorithm:()I
      82: aload_1
      83: aload_0
      84: invokestatic  #154                // Method digestRRset:(Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/RRset;)[B
      87: aload_1
      88: invokevirtual #155                // Method org/xbill/DNS/RRSIGRecord.getSignature:()[B
      91: invokestatic  #156                // Method verify:(Ljava/security/PublicKey;I[B[B)V
      94: return

  private static byte[] sign(java.security.PrivateKey, java.security.PublicKey, int, byte[], java.lang.String) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload         4
       2: ifnull        19
       5: iload_2
       6: invokestatic  #132                // Method algString:(I)Ljava/lang/String;
       9: aload         4
      11: invokestatic  #157                // Method java/security/Signature.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Signature;
      14: astore        6
      16: goto          28
      19: iload_2
      20: invokestatic  #132                // Method algString:(I)Ljava/lang/String;
      23: invokestatic  #133                // Method java/security/Signature.getInstance:(Ljava/lang/String;)Ljava/security/Signature;
      26: astore        6
      28: aload         6
      30: aload_0
      31: invokevirtual #158                // Method java/security/Signature.initSign:(Ljava/security/PrivateKey;)V
      34: aload         6
      36: aload_3
      37: invokevirtual #135                // Method java/security/Signature.update:([B)V
      40: aload         6
      42: invokevirtual #159                // Method java/security/Signature.sign:()[B
      45: astore        5
      47: goto          65
      50: astore        6
      52: new           #90                 // class org/xbill/DNS/DNSSEC$DNSSECException
      55: dup
      56: aload         6
      58: invokevirtual #91                 // Method java/security/GeneralSecurityException.toString:()Ljava/lang/String;
      61: invokespecial #92                 // Method org/xbill/DNS/DNSSEC$DNSSECException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_1
      66: instanceof    #111                // class java/security/interfaces/DSAPublicKey
      69: ifeq          127
      72: aload_1
      73: checkcast     #111                // class java/security/interfaces/DSAPublicKey
      76: astore        6
      78: aload         6
      80: invokeinterface #97,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      85: invokeinterface #99,  1           // InterfaceMethod java/security/interfaces/DSAParams.getP:()Ljava/math/BigInteger;
      90: astore        7
      92: aload         7
      94: invokestatic  #95                 // Method BigIntegerLength:(Ljava/math/BigInteger;)I
      97: bipush        64
      99: isub
     100: bipush        8
     102: idiv
     103: istore        8
     105: aload         5
     107: iload         8
     109: invokestatic  #160                // Method DSASignaturetoDNS:([BI)[B
     112: astore        5
     114: goto          211
     117: astore        6
     119: new           #128                // class java/lang/IllegalStateException
     122: dup
     123: invokespecial #129                // Method java/lang/IllegalStateException."<init>":()V
     126: athrow
     127: aload_1
     128: instanceof    #113                // class java/security/interfaces/ECPublicKey
     131: ifeq          211
     134: iload_2
     135: tableswitch   { // 12 to 14
                    12: 160
                    13: 163
                    14: 176
               default: 189
          }
     160: goto          198
     163: aload         5
     165: getstatic     #83                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     168: invokestatic  #161                // Method ECDSASignaturetoDNS:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     171: astore        5
     173: goto          198
     176: aload         5
     178: getstatic     #85                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     181: invokestatic  #161                // Method ECDSASignaturetoDNS:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     184: astore        5
     186: goto          198
     189: new           #86                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     192: dup
     193: iload_2
     194: invokespecial #87                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     197: athrow
     198: goto          211
     201: astore        6
     203: new           #128                // class java/lang/IllegalStateException
     206: dup
     207: invokespecial #129                // Method java/lang/IllegalStateException."<init>":()V
     210: athrow
     211: aload         5
     213: areturn
    Exception table:
       from    to  target type
           0    47    50   Class java/security/GeneralSecurityException
          72   114   117   Class java/io/IOException
         134   198   201   Class java/io/IOException

  static void checkAlgorithm(java.security.PrivateKey, int) throws org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException;
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 14
                     1: 72
                     2: 117
                     3: 87
                     4: 117
                     5: 72
                     6: 87
                     7: 72
                     8: 72
                     9: 117
                    10: 72
                    11: 117
                    12: 102
                    13: 102
                    14: 102
               default: 117
          }
      72: aload_0
      73: instanceof    #162                // class java/security/interfaces/RSAPrivateKey
      76: ifne          126
      79: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
      82: dup
      83: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
      86: athrow
      87: aload_0
      88: instanceof    #163                // class java/security/interfaces/DSAPrivateKey
      91: ifne          126
      94: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
      97: dup
      98: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     101: athrow
     102: aload_0
     103: instanceof    #164                // class java/security/interfaces/ECPrivateKey
     106: ifne          126
     109: new           #108                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     112: dup
     113: invokespecial #109                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     116: athrow
     117: new           #86                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     120: dup
     121: iload_1
     122: invokespecial #87                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     125: athrow
     126: return

  public static org.xbill.DNS.RRSIGRecord sign(org.xbill.DNS.RRset, org.xbill.DNS.DNSKEYRecord, java.security.PrivateKey, java.util.Date, java.util.Date) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokestatic  #165                // Method sign:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/DNSKEYRecord;Ljava/security/PrivateKey;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;)Lorg/xbill/DNS/RRSIGRecord;
      10: areturn

  public static org.xbill.DNS.RRSIGRecord sign(org.xbill.DNS.RRset, org.xbill.DNS.DNSKEYRecord, java.security.PrivateKey, java.util.Date, java.util.Date, java.lang.String) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_1
       1: invokevirtual #166                // Method org/xbill/DNS/DNSKEYRecord.getAlgorithm:()I
       4: istore        6
       6: aload_2
       7: iload         6
       9: invokestatic  #167                // Method checkAlgorithm:(Ljava/security/PrivateKey;I)V
      12: new           #168                // class org/xbill/DNS/RRSIGRecord
      15: dup
      16: aload_0
      17: invokevirtual #23                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
      20: aload_0
      21: invokevirtual #31                 // Method org/xbill/DNS/RRset.getDClass:()I
      24: aload_0
      25: invokevirtual #169                // Method org/xbill/DNS/RRset.getTTL:()J
      28: aload_0
      29: invokevirtual #30                 // Method org/xbill/DNS/RRset.getType:()I
      32: iload         6
      34: aload_0
      35: invokevirtual #169                // Method org/xbill/DNS/RRset.getTTL:()J
      38: aload         4
      40: aload_3
      41: aload_1
      42: invokevirtual #170                // Method org/xbill/DNS/DNSKEYRecord.getFootprint:()I
      45: aload_1
      46: invokevirtual #171                // Method org/xbill/DNS/DNSKEYRecord.getName:()Lorg/xbill/DNS/Name;
      49: aconst_null
      50: invokespecial #172                // Method org/xbill/DNS/RRSIGRecord."<init>":(Lorg/xbill/DNS/Name;IJIIJLjava/util/Date;Ljava/util/Date;ILorg/xbill/DNS/Name;[B)V
      53: astore        7
      55: aload         7
      57: aload_2
      58: aload_1
      59: invokevirtual #152                // Method org/xbill/DNS/DNSKEYRecord.getPublicKey:()Ljava/security/PublicKey;
      62: iload         6
      64: aload         7
      66: aload_0
      67: invokestatic  #154                // Method digestRRset:(Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/RRset;)[B
      70: aload         5
      72: invokestatic  #173                // Method sign:(Ljava/security/PrivateKey;Ljava/security/PublicKey;I[BLjava/lang/String;)[B
      75: invokevirtual #174                // Method org/xbill/DNS/RRSIGRecord.setSignature:([B)V
      78: aload         7
      80: areturn

  static org.xbill.DNS.SIGRecord signMessage(org.xbill.DNS.Message, org.xbill.DNS.SIGRecord, org.xbill.DNS.KEYRecord, java.security.PrivateKey, java.util.Date, java.util.Date) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_2
       1: invokevirtual #175                // Method org/xbill/DNS/KEYRecord.getAlgorithm:()I
       4: istore        6
       6: aload_3
       7: iload         6
       9: invokestatic  #167                // Method checkAlgorithm:(Ljava/security/PrivateKey;I)V
      12: new           #176                // class org/xbill/DNS/SIGRecord
      15: dup
      16: getstatic     #177                // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      19: sipush        255
      22: lconst_0
      23: iconst_0
      24: iload         6
      26: lconst_0
      27: aload         5
      29: aload         4
      31: aload_2
      32: invokevirtual #178                // Method org/xbill/DNS/KEYRecord.getFootprint:()I
      35: aload_2
      36: invokevirtual #179                // Method org/xbill/DNS/KEYRecord.getName:()Lorg/xbill/DNS/Name;
      39: aconst_null
      40: invokespecial #180                // Method org/xbill/DNS/SIGRecord."<init>":(Lorg/xbill/DNS/Name;IJIIJLjava/util/Date;Ljava/util/Date;ILorg/xbill/DNS/Name;[B)V
      43: astore        7
      45: new           #17                 // class org/xbill/DNS/DNSOutput
      48: dup
      49: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      52: astore        8
      54: aload         8
      56: aload         7
      58: invokestatic  #19                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
      61: aload_1
      62: ifnull        74
      65: aload         8
      67: aload_1
      68: invokevirtual #181                // Method org/xbill/DNS/SIGRecord.getSignature:()[B
      71: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      74: aload         8
      76: aload_0
      77: invokevirtual #182                // Method org/xbill/DNS/Message.toWire:()[B
      80: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      83: aload         7
      85: aload_3
      86: aload_2
      87: invokevirtual #183                // Method org/xbill/DNS/KEYRecord.getPublicKey:()Ljava/security/PublicKey;
      90: iload         6
      92: aload         8
      94: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      97: aconst_null
      98: invokestatic  #173                // Method sign:(Ljava/security/PrivateKey;Ljava/security/PublicKey;I[BLjava/lang/String;)[B
     101: invokevirtual #184                // Method org/xbill/DNS/SIGRecord.setSignature:([B)V
     104: aload         7
     106: areturn

  static void verifyMessage(org.xbill.DNS.Message, byte[], org.xbill.DNS.SIGRecord, org.xbill.DNS.SIGRecord, org.xbill.DNS.KEYRecord) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: getfield      #185                // Field org/xbill/DNS/Message.sig0start:I
       4: ifne          15
       7: new           #186                // class org/xbill/DNS/DNSSEC$NoSignatureException
      10: dup
      11: invokespecial #187                // Method org/xbill/DNS/DNSSEC$NoSignatureException."<init>":()V
      14: athrow
      15: aload_2
      16: aload         4
      18: invokestatic  #140                // Method matches:(Lorg/xbill/DNS/SIGBase;Lorg/xbill/DNS/KEYBase;)Z
      21: ifne          35
      24: new           #141                // class org/xbill/DNS/DNSSEC$KeyMismatchException
      27: dup
      28: aload         4
      30: aload_2
      31: invokespecial #142                // Method org/xbill/DNS/DNSSEC$KeyMismatchException."<init>":(Lorg/xbill/DNS/KEYBase;Lorg/xbill/DNS/SIGBase;)V
      34: athrow
      35: new           #143                // class java/util/Date
      38: dup
      39: invokespecial #144                // Method java/util/Date."<init>":()V
      42: astore        5
      44: aload         5
      46: aload_2
      47: invokevirtual #188                // Method org/xbill/DNS/SIGRecord.getExpire:()Ljava/util/Date;
      50: invokevirtual #146                // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      53: ifle          70
      56: new           #147                // class org/xbill/DNS/DNSSEC$SignatureExpiredException
      59: dup
      60: aload_2
      61: invokevirtual #188                // Method org/xbill/DNS/SIGRecord.getExpire:()Ljava/util/Date;
      64: aload         5
      66: invokespecial #148                // Method org/xbill/DNS/DNSSEC$SignatureExpiredException."<init>":(Ljava/util/Date;Ljava/util/Date;)V
      69: athrow
      70: aload         5
      72: aload_2
      73: invokevirtual #189                // Method org/xbill/DNS/SIGRecord.getTimeSigned:()Ljava/util/Date;
      76: invokevirtual #146                // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      79: ifge          96
      82: new           #150                // class org/xbill/DNS/DNSSEC$SignatureNotYetValidException
      85: dup
      86: aload_2
      87: invokevirtual #189                // Method org/xbill/DNS/SIGRecord.getTimeSigned:()Ljava/util/Date;
      90: aload         5
      92: invokespecial #151                // Method org/xbill/DNS/DNSSEC$SignatureNotYetValidException."<init>":(Ljava/util/Date;Ljava/util/Date;)V
      95: athrow
      96: new           #17                 // class org/xbill/DNS/DNSOutput
      99: dup
     100: invokespecial #18                 // Method org/xbill/DNS/DNSOutput."<init>":()V
     103: astore        6
     105: aload         6
     107: aload_2
     108: invokestatic  #19                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
     111: aload_3
     112: ifnull        124
     115: aload         6
     117: aload_3
     118: invokevirtual #181                // Method org/xbill/DNS/SIGRecord.getSignature:()[B
     121: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     124: aload_0
     125: invokevirtual #190                // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
     128: invokevirtual #191                // Method org/xbill/DNS/Header.clone:()Ljava/lang/Object;
     131: checkcast     #192                // class org/xbill/DNS/Header
     134: astore        7
     136: aload         7
     138: iconst_3
     139: invokevirtual #193                // Method org/xbill/DNS/Header.decCount:(I)V
     142: aload         6
     144: aload         7
     146: invokevirtual #194                // Method org/xbill/DNS/Header.toWire:()[B
     149: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     152: aload         6
     154: aload_1
     155: bipush        12
     157: aload_0
     158: getfield      #185                // Field org/xbill/DNS/Message.sig0start:I
     161: bipush        12
     163: isub
     164: invokevirtual #195                // Method org/xbill/DNS/DNSOutput.writeByteArray:([BII)V
     167: aload         4
     169: invokevirtual #183                // Method org/xbill/DNS/KEYRecord.getPublicKey:()Ljava/security/PublicKey;
     172: aload_2
     173: invokevirtual #196                // Method org/xbill/DNS/SIGRecord.getAlgorithm:()I
     176: aload         6
     178: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     181: aload_2
     182: invokevirtual #181                // Method org/xbill/DNS/SIGRecord.getSignature:()[B
     185: invokestatic  #156                // Method verify:(Ljava/security/PublicKey;I[B[B)V
     188: return

  static byte[] generateDSDigest(org.xbill.DNS.DNSKEYRecord, int);
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 4
                     1: 32
                     2: 41
                     3: 50
                     4: 59
               default: 68
          }
      32: ldc           #197                // String sha-1
      34: invokestatic  #198                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      37: astore_2
      38: goto          95
      41: ldc           #199                // String sha-256
      43: invokestatic  #198                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      46: astore_2
      47: goto          95
      50: ldc           #200                // String GOST3411
      52: invokestatic  #198                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      55: astore_2
      56: goto          95
      59: ldc           #201                // String sha-384
      61: invokestatic  #198                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      64: astore_2
      65: goto          95
      68: new           #50                 // class java/lang/IllegalArgumentException
      71: dup
      72: new           #202                // class java/lang/StringBuffer
      75: dup
      76: invokespecial #203                // Method java/lang/StringBuffer."<init>":()V
      79: ldc           #204                // String unknown DS digest type
      81: invokevirtual #205                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: iload_1
      85: invokevirtual #206                // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      88: invokevirtual #207                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      91: invokespecial #208                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: goto          109
      98: astore_3
      99: new           #128                // class java/lang/IllegalStateException
     102: dup
     103: ldc           #210                // String no message digest support
     105: invokespecial #211                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_2
     110: aload_0
     111: invokevirtual #171                // Method org/xbill/DNS/DNSKEYRecord.getName:()Lorg/xbill/DNS/Name;
     114: invokevirtual #212                // Method org/xbill/DNS/Name.toWireCanonical:()[B
     117: invokevirtual #213                // Method java/security/MessageDigest.update:([B)V
     120: aload_2
     121: aload_0
     122: invokevirtual #214                // Method org/xbill/DNS/DNSKEYRecord.rdataToWireCanonical:()[B
     125: invokevirtual #213                // Method java/security/MessageDigest.update:([B)V
     128: aload_2
     129: invokevirtual #215                // Method java/security/MessageDigest.digest:()[B
     132: areturn
    Exception table:
       from    to  target type
           0    95    98   Class java/security/NoSuchAlgorithmException

  static {};
    Code:
       0: new           #216                // class org/xbill/DNS/DNSSEC$ECKeyInfo
       3: dup
       4: bipush        32
       6: ldc           #217                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD97
       8: ldc           #218                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD94
      10: ldc           #219                // String A6
      12: ldc           #220                // String 1
      14: ldc           #221                // String 8D91E471E0989CDA27DF505A453F2B7635294F2DDF23E3B122ACC99C9E9F1E14
      16: ldc           #222                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6C611070995AD10045841B09B761B893
      18: invokespecial #223                // Method org/xbill/DNS/DNSSEC$ECKeyInfo."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      21: putstatic     #81                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      24: new           #216                // class org/xbill/DNS/DNSSEC$ECKeyInfo
      27: dup
      28: bipush        32
      30: ldc           #224                // String FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF
      32: ldc           #225                // String FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC
      34: ldc           #226                // String 5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B
      36: ldc           #227                // String 6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296
      38: ldc           #228                // String 4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5
      40: ldc           #229                // String FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551
      42: invokespecial #223                // Method org/xbill/DNS/DNSSEC$ECKeyInfo."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      45: putstatic     #83                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      48: new           #216                // class org/xbill/DNS/DNSSEC$ECKeyInfo
      51: dup
      52: bipush        48
      54: ldc           #230                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF
      56: ldc           #231                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC
      58: ldc           #232                // String B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF
      60: ldc           #233                // String AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7
      62: ldc           #234                // String 3617DE4A96262C6F5D9E98BF9292DC29F8F41DBD289A147CE9DA3113B5F0B8C00A60B1CE1D7E819D7A431D7C90EA0E5F
      64: ldc           #235                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973
      66: invokespecial #223                // Method org/xbill/DNS/DNSSEC$ECKeyInfo."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      69: putstatic     #85                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      72: return
}
