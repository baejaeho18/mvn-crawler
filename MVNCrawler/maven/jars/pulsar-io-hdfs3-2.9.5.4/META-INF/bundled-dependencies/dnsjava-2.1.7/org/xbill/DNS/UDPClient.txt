Compiled from "UDPClient.java"
final class org.xbill.DNS.UDPClient extends org.xbill.DNS.Client {
  private static final int EPHEMERAL_START;

  private static final int EPHEMERAL_STOP;

  private static final int EPHEMERAL_RANGE;

  private static java.security.SecureRandom prng;

  private static volatile boolean prng_initializing;

  private boolean bound;

  public org.xbill.DNS.UDPClient(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method java/nio/channels/DatagramChannel.open:()Ljava/nio/channels/DatagramChannel;
       4: lload_1
       5: invokespecial #4                  // Method org/xbill/DNS/Client."<init>":(Ljava/nio/channels/SelectableChannel;J)V
       8: aload_0
       9: iconst_0
      10: putfield      #5                  // Field bound:Z
      13: return

  private void bind_random(java.net.InetSocketAddress) throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field prng_initializing:Z
       3: ifeq          23
       6: ldc2_w        #6                  // long 2l
       9: invokestatic  #8                  // Method java/lang/Thread.sleep:(J)V
      12: goto          16
      15: astore_2
      16: getstatic     #1                  // Field prng_initializing:Z
      19: ifeq          23
      22: return
      23: aload_0
      24: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      27: invokevirtual #11                 // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      30: checkcast     #12                 // class java/nio/channels/DatagramChannel
      33: astore_2
      34: iconst_0
      35: istore        4
      37: iload         4
      39: sipush        1024
      42: if_icmpge     112
      45: getstatic     #2                  // Field prng:Ljava/security/SecureRandom;
      48: ldc           #13                 // int 64511
      50: invokevirtual #14                 // Method java/security/SecureRandom.nextInt:(I)I
      53: sipush        1024
      56: iadd
      57: istore        5
      59: aload_1
      60: ifnull        80
      63: new           #15                 // class java/net/InetSocketAddress
      66: dup
      67: aload_1
      68: invokevirtual #16                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      71: iload         5
      73: invokespecial #17                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      76: astore_3
      77: goto          90
      80: new           #15                 // class java/net/InetSocketAddress
      83: dup
      84: iload         5
      86: invokespecial #18                 // Method java/net/InetSocketAddress."<init>":(I)V
      89: astore_3
      90: aload_2
      91: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      94: aload_3
      95: invokevirtual #20                 // Method java/net/DatagramSocket.bind:(Ljava/net/SocketAddress;)V
      98: aload_0
      99: iconst_1
     100: putfield      #5                  // Field bound:Z
     103: return
     104: astore        5
     106: iinc          4, 1
     109: goto          37
     112: return
    Exception table:
       from    to  target type
           6    12    15   Class java/lang/InterruptedException
          45   103   104   Class java/net/SocketException

  void bind(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_1
       5: instanceof    #15                 // class java/net/InetSocketAddress
       8: ifeq          37
      11: aload_1
      12: checkcast     #15                 // class java/net/InetSocketAddress
      15: invokevirtual #22                 // Method java/net/InetSocketAddress.getPort:()I
      18: ifne          37
      21: aload_0
      22: aload_1
      23: checkcast     #15                 // class java/net/InetSocketAddress
      26: invokespecial #23                 // Method bind_random:(Ljava/net/InetSocketAddress;)V
      29: aload_0
      30: getfield      #5                  // Field bound:Z
      33: ifeq          37
      36: return
      37: aload_1
      38: ifnull        65
      41: aload_0
      42: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      45: invokevirtual #11                 // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      48: checkcast     #12                 // class java/nio/channels/DatagramChannel
      51: astore_2
      52: aload_2
      53: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      56: aload_1
      57: invokevirtual #20                 // Method java/net/DatagramSocket.bind:(Ljava/net/SocketAddress;)V
      60: aload_0
      61: iconst_1
      62: putfield      #5                  // Field bound:Z
      65: return

  void connect(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field bound:Z
       4: ifne          12
       7: aload_0
       8: aconst_null
       9: invokevirtual #24                 // Method bind:(Ljava/net/SocketAddress;)V
      12: aload_0
      13: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      16: invokevirtual #11                 // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      19: checkcast     #12                 // class java/nio/channels/DatagramChannel
      22: astore_2
      23: aload_2
      24: aload_1
      25: invokevirtual #25                 // Method java/nio/channels/DatagramChannel.connect:(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;
      28: pop
      29: return

  void send(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
       4: invokevirtual #11                 // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
       7: checkcast     #12                 // class java/nio/channels/DatagramChannel
      10: astore_2
      11: ldc           #26                 // String UDP write
      13: aload_2
      14: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      17: invokevirtual #27                 // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      20: aload_2
      21: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      24: invokevirtual #28                 // Method java/net/DatagramSocket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      27: aload_1
      28: invokestatic  #29                 // Method verboseLog:(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/net/SocketAddress;[B)V
      31: aload_2
      32: aload_1
      33: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      36: invokevirtual #31                 // Method java/nio/channels/DatagramChannel.write:(Ljava/nio/ByteBuffer;)I
      39: pop
      40: return

  byte[] recv(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
       4: invokevirtual #11                 // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
       7: checkcast     #12                 // class java/nio/channels/DatagramChannel
      10: astore_2
      11: iload_1
      12: newarray       byte
      14: astore_3
      15: aload_0
      16: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      19: iconst_1
      20: invokevirtual #32                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      23: pop
      24: aload_0
      25: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      28: invokevirtual #33                 // Method java/nio/channels/SelectionKey.isReadable:()Z
      31: ifne          48
      34: aload_0
      35: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      38: aload_0
      39: getfield      #34                 // Field endTime:J
      42: invokestatic  #35                 // Method blockUntil:(Ljava/nio/channels/SelectionKey;J)V
      45: goto          24
      48: aload_0
      49: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      52: invokevirtual #36                 // Method java/nio/channels/SelectionKey.isValid:()Z
      55: ifeq          94
      58: aload_0
      59: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      62: iconst_0
      63: invokevirtual #32                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      66: pop
      67: goto          94
      70: astore        4
      72: aload_0
      73: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      76: invokevirtual #36                 // Method java/nio/channels/SelectionKey.isValid:()Z
      79: ifeq          91
      82: aload_0
      83: getfield      #10                 // Field key:Ljava/nio/channels/SelectionKey;
      86: iconst_0
      87: invokevirtual #32                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      90: pop
      91: aload         4
      93: athrow
      94: aload_2
      95: aload_3
      96: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      99: invokevirtual #37                 // Method java/nio/channels/DatagramChannel.read:(Ljava/nio/ByteBuffer;)I
     102: i2l
     103: lstore        4
     105: lload         4
     107: lconst_0
     108: lcmp
     109: ifgt          120
     112: new           #38                 // class java/io/EOFException
     115: dup
     116: invokespecial #39                 // Method java/io/EOFException."<init>":()V
     119: athrow
     120: lload         4
     122: l2i
     123: istore        6
     125: iload         6
     127: newarray       byte
     129: astore        7
     131: aload_3
     132: iconst_0
     133: aload         7
     135: iconst_0
     136: iload         6
     138: invokestatic  #40                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     141: ldc           #41                 // String UDP read
     143: aload_2
     144: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     147: invokevirtual #27                 // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
     150: aload_2
     151: invokevirtual #19                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     154: invokevirtual #28                 // Method java/net/DatagramSocket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
     157: aload         7
     159: invokestatic  #29                 // Method verboseLog:(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/net/SocketAddress;[B)V
     162: aload         7
     164: areturn
    Exception table:
       from    to  target type
          24    48    70   any
          70    72    70   any

  static byte[] sendrecv(java.net.SocketAddress, java.net.SocketAddress, byte[], int, long) throws java.io.IOException;
    Code:
       0: new           #42                 // class org/xbill/DNS/UDPClient
       3: dup
       4: lload         4
       6: invokespecial #43                 // Method "<init>":(J)V
       9: astore        6
      11: aload         6
      13: aload_0
      14: invokevirtual #24                 // Method bind:(Ljava/net/SocketAddress;)V
      17: aload         6
      19: aload_1
      20: invokevirtual #44                 // Method connect:(Ljava/net/SocketAddress;)V
      23: aload         6
      25: aload_2
      26: invokevirtual #45                 // Method send:([B)V
      29: aload         6
      31: iload_3
      32: invokevirtual #46                 // Method recv:(I)[B
      35: astore        7
      37: aload         6
      39: invokevirtual #47                 // Method cleanup:()V
      42: aload         7
      44: areturn
      45: astore        8
      47: aload         6
      49: invokevirtual #47                 // Method cleanup:()V
      52: aload         8
      54: athrow
    Exception table:
       from    to  target type
          11    37    45   any
          45    47    45   any

  static byte[] sendrecv(java.net.SocketAddress, byte[], int, long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: aload_0
       2: aload_1
       3: iload_2
       4: lload_3
       5: invokestatic  #48                 // Method sendrecv:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;[BIJ)[B
       8: areturn

  static java.security.SecureRandom access$000();
    Code:
       0: getstatic     #2                  // Field prng:Ljava/security/SecureRandom;
       3: areturn

  static boolean access$102(boolean);
    Code:
       0: iload_0
       1: dup
       2: putstatic     #1                  // Field prng_initializing:Z
       5: ireturn

  static {};
    Code:
       0: new           #49                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #50                 // Method java/security/SecureRandom."<init>":()V
       7: putstatic     #2                  // Field prng:Ljava/security/SecureRandom;
      10: iconst_1
      11: putstatic     #1                  // Field prng_initializing:Z
      14: new           #51                 // class java/lang/Thread
      17: dup
      18: new           #52                 // class org/xbill/DNS/UDPClient$1
      21: dup
      22: invokespecial #53                 // Method org/xbill/DNS/UDPClient$1."<init>":()V
      25: invokespecial #54                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      28: invokevirtual #55                 // Method java/lang/Thread.start:()V
      31: return
}
