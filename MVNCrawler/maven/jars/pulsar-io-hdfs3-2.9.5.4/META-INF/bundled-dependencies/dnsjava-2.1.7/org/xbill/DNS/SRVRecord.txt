Compiled from "SRVRecord.java"
public class org.xbill.DNS.SRVRecord extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private int priority;

  private int weight;

  private int port;

  private org.xbill.DNS.Name target;

  org.xbill.DNS.SRVRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/SRVRecord
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public org.xbill.DNS.SRVRecord(org.xbill.DNS.Name, int, long, int, int, int, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        33
       4: iload_2
       5: lload_3
       6: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #5                  // String priority
      12: iload         5
      14: invokestatic  #6                  // Method checkU16:(Ljava/lang/String;I)I
      17: putfield      #7                  // Field priority:I
      20: aload_0
      21: ldc           #8                  // String weight
      23: iload         6
      25: invokestatic  #6                  // Method checkU16:(Ljava/lang/String;I)I
      28: putfield      #9                  // Field weight:I
      31: aload_0
      32: ldc           #10                 // String port
      34: iload         7
      36: invokestatic  #6                  // Method checkU16:(Ljava/lang/String;I)I
      39: putfield      #11                 // Field port:I
      42: aload_0
      43: ldc           #12                 // String target
      45: aload         8
      47: invokestatic  #13                 // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      50: putfield      #14                 // Field target:Lorg/xbill/DNS/Name;
      53: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: putfield      #7                  // Field priority:I
       8: aload_0
       9: aload_1
      10: invokevirtual #15                 // Method org/xbill/DNS/DNSInput.readU16:()I
      13: putfield      #9                  // Field weight:I
      16: aload_0
      17: aload_1
      18: invokevirtual #15                 // Method org/xbill/DNS/DNSInput.readU16:()I
      21: putfield      #11                 // Field port:I
      24: aload_0
      25: new           #16                 // class org/xbill/DNS/Name
      28: dup
      29: aload_1
      30: invokespecial #17                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
      33: putfield      #14                 // Field target:Lorg/xbill/DNS/Name;
      36: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
       5: putfield      #7                  // Field priority:I
       8: aload_0
       9: aload_1
      10: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
      13: putfield      #9                  // Field weight:I
      16: aload_0
      17: aload_1
      18: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
      21: putfield      #11                 // Field port:I
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #19                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      30: putfield      #14                 // Field target:Lorg/xbill/DNS/Name;
      33: return

  java.lang.String rrToString();
    Code:
       0: new           #20                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #20                 // class java/lang/StringBuffer
      12: dup
      13: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      16: aload_0
      17: getfield      #7                  // Field priority:I
      20: invokevirtual #22                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      23: ldc           #23                 // String
      25: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      28: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      31: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: pop
      35: aload_1
      36: new           #20                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      43: aload_0
      44: getfield      #9                  // Field weight:I
      47: invokevirtual #22                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      50: ldc           #23                 // String
      52: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      55: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      58: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      61: pop
      62: aload_1
      63: new           #20                 // class java/lang/StringBuffer
      66: dup
      67: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      70: aload_0
      71: getfield      #11                 // Field port:I
      74: invokevirtual #22                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      77: ldc           #23                 // String
      79: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      82: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      85: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      88: pop
      89: aload_1
      90: aload_0
      91: getfield      #14                 // Field target:Lorg/xbill/DNS/Name;
      94: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      97: pop
      98: aload_1
      99: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     102: areturn

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #7                  // Field priority:I
       4: ireturn

  public int getWeight();
    Code:
       0: aload_0
       1: getfield      #9                  // Field weight:I
       4: ireturn

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #11                 // Field port:I
       4: ireturn

  public org.xbill.DNS.Name getTarget();
    Code:
       0: aload_0
       1: getfield      #14                 // Field target:Lorg/xbill/DNS/Name;
       4: areturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field priority:I
       5: invokevirtual #27                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field weight:I
      13: invokevirtual #27                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #11                 // Field port:I
      21: invokevirtual #27                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      24: aload_0
      25: getfield      #14                 // Field target:Lorg/xbill/DNS/Name;
      28: aload_1
      29: aconst_null
      30: iload_3
      31: invokevirtual #28                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      34: return

  public org.xbill.DNS.Name getAdditionalName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field target:Lorg/xbill/DNS/Name;
       4: areturn
}
