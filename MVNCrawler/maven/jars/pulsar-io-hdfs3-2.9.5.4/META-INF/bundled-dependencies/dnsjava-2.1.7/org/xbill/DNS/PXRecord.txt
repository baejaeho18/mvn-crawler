Compiled from "PXRecord.java"
public class org.xbill.DNS.PXRecord extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private int preference;

  private org.xbill.DNS.Name map822;

  private org.xbill.DNS.Name mapX400;

  org.xbill.DNS.PXRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/PXRecord
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public org.xbill.DNS.PXRecord(org.xbill.DNS.Name, int, long, int, org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        26
       4: iload_2
       5: lload_3
       6: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #5                  // String preference
      12: iload         5
      14: invokestatic  #6                  // Method checkU16:(Ljava/lang/String;I)I
      17: putfield      #7                  // Field preference:I
      20: aload_0
      21: ldc           #8                  // String map822
      23: aload         6
      25: invokestatic  #9                  // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      28: putfield      #10                 // Field map822:Lorg/xbill/DNS/Name;
      31: aload_0
      32: ldc           #11                 // String mapX400
      34: aload         7
      36: invokestatic  #9                  // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      39: putfield      #12                 // Field mapX400:Lorg/xbill/DNS/Name;
      42: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: putfield      #7                  // Field preference:I
       8: aload_0
       9: new           #14                 // class org/xbill/DNS/Name
      12: dup
      13: aload_1
      14: invokespecial #15                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
      17: putfield      #10                 // Field map822:Lorg/xbill/DNS/Name;
      20: aload_0
      21: new           #14                 // class org/xbill/DNS/Name
      24: dup
      25: aload_1
      26: invokespecial #15                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
      29: putfield      #12                 // Field mapX400:Lorg/xbill/DNS/Name;
      32: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
       5: putfield      #7                  // Field preference:I
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #17                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      14: putfield      #10                 // Field map822:Lorg/xbill/DNS/Name;
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #17                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      23: putfield      #12                 // Field mapX400:Lorg/xbill/DNS/Name;
      26: return

  java.lang.String rrToString();
    Code:
       0: new           #18                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field preference:I
      13: invokevirtual #20                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: ldc           #21                 // String
      20: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #10                 // Field map822:Lorg/xbill/DNS/Name;
      29: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      32: pop
      33: aload_1
      34: ldc           #21                 // String
      36: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #12                 // Field mapX400:Lorg/xbill/DNS/Name;
      45: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      48: pop
      49: aload_1
      50: invokevirtual #24                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      53: areturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field preference:I
       5: invokevirtual #25                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_0
       9: getfield      #10                 // Field map822:Lorg/xbill/DNS/Name;
      12: aload_1
      13: aconst_null
      14: iload_3
      15: invokevirtual #26                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      18: aload_0
      19: getfield      #12                 // Field mapX400:Lorg/xbill/DNS/Name;
      22: aload_1
      23: aconst_null
      24: iload_3
      25: invokevirtual #26                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      28: return

  public int getPreference();
    Code:
       0: aload_0
       1: getfield      #7                  // Field preference:I
       4: ireturn

  public org.xbill.DNS.Name getMap822();
    Code:
       0: aload_0
       1: getfield      #10                 // Field map822:Lorg/xbill/DNS/Name;
       4: areturn

  public org.xbill.DNS.Name getMapX400();
    Code:
       0: aload_0
       1: getfield      #12                 // Field mapX400:Lorg/xbill/DNS/Name;
       4: areturn
}
