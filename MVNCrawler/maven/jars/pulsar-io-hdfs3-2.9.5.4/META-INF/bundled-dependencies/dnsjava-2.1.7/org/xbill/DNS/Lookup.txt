Compiled from "Lookup.java"
public final class org.xbill.DNS.Lookup {
  private static org.xbill.DNS.Resolver defaultResolver;

  private static org.xbill.DNS.Name[] defaultSearchPath;

  private static java.util.Map defaultCaches;

  private static int defaultNdots;

  private org.xbill.DNS.Resolver resolver;

  private org.xbill.DNS.Name[] searchPath;

  private org.xbill.DNS.Cache cache;

  private boolean temporary_cache;

  private int credibility;

  private org.xbill.DNS.Name name;

  private int type;

  private int dclass;

  private boolean verbose;

  private int iterations;

  private boolean foundAlias;

  private boolean done;

  private boolean doneCurrent;

  private java.util.List aliases;

  private org.xbill.DNS.Record[] answers;

  private int result;

  private java.lang.String error;

  private boolean nxdomain;

  private boolean badresponse;

  private java.lang.String badresponse_error;

  private boolean networkerror;

  private boolean timedout;

  private boolean nametoolong;

  private boolean referral;

  private static final org.xbill.DNS.Name[] noAliases;

  public static final int SUCCESSFUL;

  public static final int UNRECOVERABLE;

  public static final int TRY_AGAIN;

  public static final int HOST_NOT_FOUND;

  public static final int TYPE_NOT_FOUND;

  static java.lang.Class class$org$xbill$DNS$Lookup;

  public static synchronized void refreshDefault();
    Code:
       0: new           #6                  // class org/xbill/DNS/ExtendedResolver
       3: dup
       4: invokespecial #7                  // Method org/xbill/DNS/ExtendedResolver."<init>":()V
       7: putstatic     #8                  // Field defaultResolver:Lorg/xbill/DNS/Resolver;
      10: goto          24
      13: astore_0
      14: new           #10                 // class java/lang/RuntimeException
      17: dup
      18: ldc           #11                 // String Failed to initialize resolver
      20: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: invokestatic  #13                 // Method org/xbill/DNS/ResolverConfig.getCurrentConfig:()Lorg/xbill/DNS/ResolverConfig;
      27: invokevirtual #14                 // Method org/xbill/DNS/ResolverConfig.searchPath:()[Lorg/xbill/DNS/Name;
      30: putstatic     #15                 // Field defaultSearchPath:[Lorg/xbill/DNS/Name;
      33: new           #16                 // class java/util/HashMap
      36: dup
      37: invokespecial #17                 // Method java/util/HashMap."<init>":()V
      40: putstatic     #18                 // Field defaultCaches:Ljava/util/Map;
      43: invokestatic  #13                 // Method org/xbill/DNS/ResolverConfig.getCurrentConfig:()Lorg/xbill/DNS/ResolverConfig;
      46: invokevirtual #19                 // Method org/xbill/DNS/ResolverConfig.ndots:()I
      49: putstatic     #20                 // Field defaultNdots:I
      52: return
    Exception table:
       from    to  target type
           0    10    13   Class java/net/UnknownHostException

  public static synchronized org.xbill.DNS.Resolver getDefaultResolver();
    Code:
       0: getstatic     #8                  // Field defaultResolver:Lorg/xbill/DNS/Resolver;
       3: areturn

  public static synchronized void setDefaultResolver(org.xbill.DNS.Resolver);
    Code:
       0: aload_0
       1: putstatic     #8                  // Field defaultResolver:Lorg/xbill/DNS/Resolver;
       4: return

  public static synchronized org.xbill.DNS.Cache getDefaultCache(int);
    Code:
       0: iload_0
       1: invokestatic  #21                 // Method org/xbill/DNS/DClass.check:(I)V
       4: getstatic     #18                 // Field defaultCaches:Ljava/util/Map;
       7: iload_0
       8: invokestatic  #22                 // Method org/xbill/DNS/Mnemonic.toInteger:(I)Ljava/lang/Integer;
      11: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #24                 // class org/xbill/DNS/Cache
      19: astore_1
      20: aload_1
      21: ifnonnull     47
      24: new           #24                 // class org/xbill/DNS/Cache
      27: dup
      28: iload_0
      29: invokespecial #25                 // Method org/xbill/DNS/Cache."<init>":(I)V
      32: astore_1
      33: getstatic     #18                 // Field defaultCaches:Ljava/util/Map;
      36: iload_0
      37: invokestatic  #22                 // Method org/xbill/DNS/Mnemonic.toInteger:(I)Ljava/lang/Integer;
      40: aload_1
      41: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_1
      48: areturn

  public static synchronized void setDefaultCache(org.xbill.DNS.Cache, int);
    Code:
       0: iload_1
       1: invokestatic  #21                 // Method org/xbill/DNS/DClass.check:(I)V
       4: getstatic     #18                 // Field defaultCaches:Ljava/util/Map;
       7: iload_1
       8: invokestatic  #22                 // Method org/xbill/DNS/Mnemonic.toInteger:(I)Ljava/lang/Integer;
      11: aload_0
      12: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public static synchronized org.xbill.DNS.Name[] getDefaultSearchPath();
    Code:
       0: getstatic     #15                 // Field defaultSearchPath:[Lorg/xbill/DNS/Name;
       3: areturn

  public static synchronized void setDefaultSearchPath(org.xbill.DNS.Name[]);
    Code:
       0: aload_0
       1: putstatic     #15                 // Field defaultSearchPath:[Lorg/xbill/DNS/Name;
       4: return

  public static synchronized void setDefaultSearchPath(java.lang.String[]) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: ifnonnull     9
       4: aconst_null
       5: putstatic     #15                 // Field defaultSearchPath:[Lorg/xbill/DNS/Name;
       8: return
       9: aload_0
      10: arraylength
      11: anewarray     #27                 // class org/xbill/DNS/Name
      14: astore_1
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: arraylength
      20: if_icmpge     41
      23: aload_1
      24: iload_2
      25: aload_0
      26: iload_2
      27: aaload
      28: getstatic     #28                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      31: invokestatic  #29                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      34: aastore
      35: iinc          2, 1
      38: goto          17
      41: aload_1
      42: putstatic     #15                 // Field defaultSearchPath:[Lorg/xbill/DNS/Name;
      45: return

  public static synchronized void setPacketLogger(org.xbill.DNS.PacketLogger);
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method org/xbill/DNS/Client.setPacketLogger:(Lorg/xbill/DNS/PacketLogger;)V
       4: return

  private final void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #31                 // Field iterations:I
       5: aload_0
       6: iconst_0
       7: putfield      #32                 // Field foundAlias:Z
      10: aload_0
      11: iconst_0
      12: putfield      #33                 // Field done:Z
      15: aload_0
      16: iconst_0
      17: putfield      #34                 // Field doneCurrent:Z
      20: aload_0
      21: aconst_null
      22: putfield      #35                 // Field aliases:Ljava/util/List;
      25: aload_0
      26: aconst_null
      27: putfield      #36                 // Field answers:[Lorg/xbill/DNS/Record;
      30: aload_0
      31: iconst_m1
      32: putfield      #37                 // Field result:I
      35: aload_0
      36: aconst_null
      37: putfield      #38                 // Field error:Ljava/lang/String;
      40: aload_0
      41: iconst_0
      42: putfield      #39                 // Field nxdomain:Z
      45: aload_0
      46: iconst_0
      47: putfield      #40                 // Field badresponse:Z
      50: aload_0
      51: aconst_null
      52: putfield      #41                 // Field badresponse_error:Ljava/lang/String;
      55: aload_0
      56: iconst_0
      57: putfield      #42                 // Field networkerror:Z
      60: aload_0
      61: iconst_0
      62: putfield      #43                 // Field timedout:Z
      65: aload_0
      66: iconst_0
      67: putfield      #44                 // Field nametoolong:Z
      70: aload_0
      71: iconst_0
      72: putfield      #45                 // Field referral:Z
      75: aload_0
      76: getfield      #46                 // Field temporary_cache:Z
      79: ifeq          89
      82: aload_0
      83: getfield      #47                 // Field cache:Lorg/xbill/DNS/Cache;
      86: invokevirtual #48                 // Method org/xbill/DNS/Cache.clearCache:()V
      89: return

  public org.xbill.DNS.Lookup(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: invokespecial #49                 // Method java/lang/Object."<init>":()V
       4: iload_2
       5: invokestatic  #50                 // Method org/xbill/DNS/Type.check:(I)V
       8: iload_3
       9: invokestatic  #21                 // Method org/xbill/DNS/DClass.check:(I)V
      12: iload_2
      13: invokestatic  #51                 // Method org/xbill/DNS/Type.isRR:(I)Z
      16: ifne          36
      19: iload_2
      20: sipush        255
      23: if_icmpeq     36
      26: new           #52                 // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #53                 // String Cannot query for meta-types other than ANY
      32: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #55                 // Field name:Lorg/xbill/DNS/Name;
      41: aload_0
      42: iload_2
      43: putfield      #56                 // Field type:I
      46: aload_0
      47: iload_3
      48: putfield      #57                 // Field dclass:I
      51: getstatic     #58                 // Field class$org$xbill$DNS$Lookup:Ljava/lang/Class;
      54: ifnonnull     69
      57: ldc           #59                 // String org.xbill.DNS.Lookup
      59: invokestatic  #60                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      62: dup
      63: putstatic     #58                 // Field class$org$xbill$DNS$Lookup:Ljava/lang/Class;
      66: goto          72
      69: getstatic     #58                 // Field class$org$xbill$DNS$Lookup:Ljava/lang/Class;
      72: dup
      73: astore        4
      75: monitorenter
      76: aload_0
      77: invokestatic  #61                 // Method getDefaultResolver:()Lorg/xbill/DNS/Resolver;
      80: putfield      #62                 // Field resolver:Lorg/xbill/DNS/Resolver;
      83: aload_0
      84: invokestatic  #63                 // Method getDefaultSearchPath:()[Lorg/xbill/DNS/Name;
      87: putfield      #64                 // Field searchPath:[Lorg/xbill/DNS/Name;
      90: aload_0
      91: iload_3
      92: invokestatic  #65                 // Method getDefaultCache:(I)Lorg/xbill/DNS/Cache;
      95: putfield      #47                 // Field cache:Lorg/xbill/DNS/Cache;
      98: aload         4
     100: monitorexit
     101: goto          112
     104: astore        5
     106: aload         4
     108: monitorexit
     109: aload         5
     111: athrow
     112: aload_0
     113: iconst_3
     114: putfield      #66                 // Field credibility:I
     117: aload_0
     118: ldc           #67                 // String verbose
     120: invokestatic  #68                 // Method org/xbill/DNS/Options.check:(Ljava/lang/String;)Z
     123: putfield      #69                 // Field verbose:Z
     126: aload_0
     127: iconst_m1
     128: putfield      #37                 // Field result:I
     131: return
    Exception table:
       from    to  target type
          76   101   104   any
         104   109   104   any

  public org.xbill.DNS.Lookup(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokespecial #70                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
       7: return

  public org.xbill.DNS.Lookup(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: invokespecial #70                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
       7: return

  public org.xbill.DNS.Lookup(java.lang.String, int, int) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;)Lorg/xbill/DNS/Name;
       5: iload_2
       6: iload_3
       7: invokespecial #70                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
      10: return

  public org.xbill.DNS.Lookup(java.lang.String, int) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;)Lorg/xbill/DNS/Name;
       5: iload_2
       6: iconst_1
       7: invokespecial #70                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
      10: return

  public org.xbill.DNS.Lookup(java.lang.String) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;)Lorg/xbill/DNS/Name;
       5: iconst_1
       6: iconst_1
       7: invokespecial #70                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
      10: return

  public void setResolver(org.xbill.DNS.Resolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field resolver:Lorg/xbill/DNS/Resolver;
       5: return

  public void setSearchPath(org.xbill.DNS.Name[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field searchPath:[Lorg/xbill/DNS/Name;
       5: return

  public void setSearchPath(java.lang.String[]) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #64                 // Field searchPath:[Lorg/xbill/DNS/Name;
       9: return
      10: aload_1
      11: arraylength
      12: anewarray     #27                 // class org/xbill/DNS/Name
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_1
      20: arraylength
      21: if_icmpge     42
      24: aload_2
      25: iload_3
      26: aload_1
      27: iload_3
      28: aaload
      29: getstatic     #28                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      32: invokestatic  #29                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      35: aastore
      36: iinc          3, 1
      39: goto          18
      42: aload_0
      43: aload_2
      44: putfield      #64                 // Field searchPath:[Lorg/xbill/DNS/Name;
      47: return

  public void setCache(org.xbill.DNS.Cache);
    Code:
       0: aload_1
       1: ifnonnull     27
       4: aload_0
       5: new           #24                 // class org/xbill/DNS/Cache
       8: dup
       9: aload_0
      10: getfield      #57                 // Field dclass:I
      13: invokespecial #25                 // Method org/xbill/DNS/Cache."<init>":(I)V
      16: putfield      #47                 // Field cache:Lorg/xbill/DNS/Cache;
      19: aload_0
      20: iconst_1
      21: putfield      #46                 // Field temporary_cache:Z
      24: goto          37
      27: aload_0
      28: aload_1
      29: putfield      #47                 // Field cache:Lorg/xbill/DNS/Cache;
      32: aload_0
      33: iconst_0
      34: putfield      #46                 // Field temporary_cache:Z
      37: return

  public void setNdots(int);
    Code:
       0: iload_1
       1: ifge          31
       4: new           #52                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #72                 // class java/lang/StringBuffer
      11: dup
      12: invokespecial #73                 // Method java/lang/StringBuffer."<init>":()V
      15: ldc           #74                 // String Illegal ndots value:
      17: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: iload_1
      21: invokevirtual #76                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      24: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      27: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_1
      32: putstatic     #20                 // Field defaultNdots:I
      35: return

  public void setCredibility(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field credibility:I
       5: return

  private void follow(org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #32                 // Field foundAlias:Z
       5: aload_0
       6: iconst_0
       7: putfield      #40                 // Field badresponse:Z
      10: aload_0
      11: iconst_0
      12: putfield      #42                 // Field networkerror:Z
      15: aload_0
      16: iconst_0
      17: putfield      #43                 // Field timedout:Z
      20: aload_0
      21: iconst_0
      22: putfield      #39                 // Field nxdomain:Z
      25: aload_0
      26: iconst_0
      27: putfield      #45                 // Field referral:Z
      30: aload_0
      31: dup
      32: getfield      #31                 // Field iterations:I
      35: iconst_1
      36: iadd
      37: putfield      #31                 // Field iterations:I
      40: aload_0
      41: getfield      #31                 // Field iterations:I
      44: bipush        6
      46: if_icmpge     57
      49: aload_1
      50: aload_2
      51: invokevirtual #78                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      54: ifeq          74
      57: aload_0
      58: iconst_1
      59: putfield      #37                 // Field result:I
      62: aload_0
      63: ldc           #79                 // String CNAME loop
      65: putfield      #38                 // Field error:Ljava/lang/String;
      68: aload_0
      69: iconst_1
      70: putfield      #33                 // Field done:Z
      73: return
      74: aload_0
      75: getfield      #35                 // Field aliases:Ljava/util/List;
      78: ifnonnull     92
      81: aload_0
      82: new           #80                 // class java/util/ArrayList
      85: dup
      86: invokespecial #81                 // Method java/util/ArrayList."<init>":()V
      89: putfield      #35                 // Field aliases:Ljava/util/List;
      92: aload_0
      93: getfield      #35                 // Field aliases:Ljava/util/List;
      96: aload_2
      97: invokeinterface #82,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     102: pop
     103: aload_0
     104: aload_1
     105: invokespecial #83                 // Method lookup:(Lorg/xbill/DNS/Name;)V
     108: return

  private void processResponse(org.xbill.DNS.Name, org.xbill.DNS.SetResponse);
    Code:
       0: aload_2
       1: invokevirtual #84                 // Method org/xbill/DNS/SetResponse.isSuccessful:()Z
       4: ifeq          114
       7: aload_2
       8: invokevirtual #85                 // Method org/xbill/DNS/SetResponse.answers:()[Lorg/xbill/DNS/RRset;
      11: astore_3
      12: new           #80                 // class java/util/ArrayList
      15: dup
      16: invokespecial #81                 // Method java/util/ArrayList."<init>":()V
      19: astore        4
      21: iconst_0
      22: istore        6
      24: iload         6
      26: aload_3
      27: arraylength
      28: if_icmpge     74
      31: aload_3
      32: iload         6
      34: aaload
      35: invokevirtual #86                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/Iterator;
      38: astore        5
      40: aload         5
      42: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          68
      50: aload         4
      52: aload         5
      54: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: invokeinterface #82,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          40
      68: iinc          6, 1
      71: goto          24
      74: aload_0
      75: iconst_0
      76: putfield      #37                 // Field result:I
      79: aload_0
      80: aload         4
      82: aload         4
      84: invokeinterface #89,  1           // InterfaceMethod java/util/List.size:()I
      89: anewarray     #90                 // class org/xbill/DNS/Record
      92: invokeinterface #91,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      97: checkcast     #92                 // class "[Lorg/xbill/DNS/Record;"
     100: checkcast     #92                 // class "[Lorg/xbill/DNS/Record;"
     103: putfield      #36                 // Field answers:[Lorg/xbill/DNS/Record;
     106: aload_0
     107: iconst_1
     108: putfield      #33                 // Field done:Z
     111: goto          258
     114: aload_2
     115: invokevirtual #93                 // Method org/xbill/DNS/SetResponse.isNXDOMAIN:()Z
     118: ifeq          151
     121: aload_0
     122: iconst_1
     123: putfield      #39                 // Field nxdomain:Z
     126: aload_0
     127: iconst_1
     128: putfield      #34                 // Field doneCurrent:Z
     131: aload_0
     132: getfield      #31                 // Field iterations:I
     135: ifle          258
     138: aload_0
     139: iconst_3
     140: putfield      #37                 // Field result:I
     143: aload_0
     144: iconst_1
     145: putfield      #33                 // Field done:Z
     148: goto          258
     151: aload_2
     152: invokevirtual #94                 // Method org/xbill/DNS/SetResponse.isNXRRSET:()Z
     155: ifeq          176
     158: aload_0
     159: iconst_4
     160: putfield      #37                 // Field result:I
     163: aload_0
     164: aconst_null
     165: putfield      #36                 // Field answers:[Lorg/xbill/DNS/Record;
     168: aload_0
     169: iconst_1
     170: putfield      #33                 // Field done:Z
     173: goto          258
     176: aload_2
     177: invokevirtual #95                 // Method org/xbill/DNS/SetResponse.isCNAME:()Z
     180: ifeq          200
     183: aload_2
     184: invokevirtual #96                 // Method org/xbill/DNS/SetResponse.getCNAME:()Lorg/xbill/DNS/CNAMERecord;
     187: astore_3
     188: aload_0
     189: aload_3
     190: invokevirtual #97                 // Method org/xbill/DNS/CNAMERecord.getTarget:()Lorg/xbill/DNS/Name;
     193: aload_1
     194: invokespecial #98                 // Method follow:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     197: goto          258
     200: aload_2
     201: invokevirtual #99                 // Method org/xbill/DNS/SetResponse.isDNAME:()Z
     204: ifeq          246
     207: aload_2
     208: invokevirtual #100                // Method org/xbill/DNS/SetResponse.getDNAME:()Lorg/xbill/DNS/DNAMERecord;
     211: astore_3
     212: aload_0
     213: aload_1
     214: aload_3
     215: invokevirtual #101                // Method org/xbill/DNS/Name.fromDNAME:(Lorg/xbill/DNS/DNAMERecord;)Lorg/xbill/DNS/Name;
     218: aload_1
     219: invokespecial #98                 // Method follow:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     222: goto          243
     225: astore        4
     227: aload_0
     228: iconst_1
     229: putfield      #37                 // Field result:I
     232: aload_0
     233: ldc           #103                // String Invalid DNAME target
     235: putfield      #38                 // Field error:Ljava/lang/String;
     238: aload_0
     239: iconst_1
     240: putfield      #33                 // Field done:Z
     243: goto          258
     246: aload_2
     247: invokevirtual #104                // Method org/xbill/DNS/SetResponse.isDelegation:()Z
     250: ifeq          258
     253: aload_0
     254: iconst_1
     255: putfield      #45                 // Field referral:Z
     258: return
    Exception table:
       from    to  target type
         212   222   225   Class org/xbill/DNS/NameTooLongException

  private void lookup(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #47                 // Field cache:Lorg/xbill/DNS/Cache;
       4: aload_1
       5: aload_0
       6: getfield      #56                 // Field type:I
       9: aload_0
      10: getfield      #66                 // Field credibility:I
      13: invokevirtual #105                // Method org/xbill/DNS/Cache.lookupRecords:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
      16: astore_2
      17: aload_0
      18: getfield      #69                 // Field verbose:Z
      21: ifeq          71
      24: getstatic     #106                // Field java/lang/System.err:Ljava/io/PrintStream;
      27: new           #72                 // class java/lang/StringBuffer
      30: dup
      31: invokespecial #73                 // Method java/lang/StringBuffer."<init>":()V
      34: ldc           #107                // String lookup
      36: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: aload_1
      40: invokevirtual #108                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      43: ldc           #109                // String
      45: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: aload_0
      49: getfield      #56                 // Field type:I
      52: invokestatic  #110                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
      55: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      61: invokevirtual #111                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      64: getstatic     #106                // Field java/lang/System.err:Ljava/io/PrintStream;
      67: aload_2
      68: invokevirtual #112                // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      71: aload_0
      72: aload_1
      73: aload_2
      74: invokespecial #113                // Method processResponse:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/SetResponse;)V
      77: aload_0
      78: getfield      #33                 // Field done:Z
      81: ifne          91
      84: aload_0
      85: getfield      #34                 // Field doneCurrent:Z
      88: ifeq          92
      91: return
      92: aload_1
      93: aload_0
      94: getfield      #56                 // Field type:I
      97: aload_0
      98: getfield      #57                 // Field dclass:I
     101: invokestatic  #114                // Method org/xbill/DNS/Record.newRecord:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;
     104: astore_3
     105: aload_3
     106: invokestatic  #115                // Method org/xbill/DNS/Message.newQuery:(Lorg/xbill/DNS/Record;)Lorg/xbill/DNS/Message;
     109: astore        4
     111: aconst_null
     112: astore        5
     114: aload_0
     115: getfield      #62                 // Field resolver:Lorg/xbill/DNS/Resolver;
     118: aload         4
     120: invokeinterface #116,  2          // InterfaceMethod org/xbill/DNS/Resolver.send:(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/Message;
     125: astore        5
     127: goto          154
     130: astore        6
     132: aload         6
     134: instanceof    #118                // class java/io/InterruptedIOException
     137: ifeq          148
     140: aload_0
     141: iconst_1
     142: putfield      #43                 // Field timedout:Z
     145: goto          153
     148: aload_0
     149: iconst_1
     150: putfield      #42                 // Field networkerror:Z
     153: return
     154: aload         5
     156: invokevirtual #119                // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
     159: invokevirtual #120                // Method org/xbill/DNS/Header.getRcode:()I
     162: istore        6
     164: iload         6
     166: ifeq          190
     169: iload         6
     171: iconst_3
     172: if_icmpeq     190
     175: aload_0
     176: iconst_1
     177: putfield      #40                 // Field badresponse:Z
     180: aload_0
     181: iload         6
     183: invokestatic  #121                // Method org/xbill/DNS/Rcode.string:(I)Ljava/lang/String;
     186: putfield      #41                 // Field badresponse_error:Ljava/lang/String;
     189: return
     190: aload         4
     192: invokevirtual #122                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
     195: aload         5
     197: invokevirtual #122                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
     200: invokevirtual #123                // Method org/xbill/DNS/Record.equals:(Ljava/lang/Object;)Z
     203: ifne          218
     206: aload_0
     207: iconst_1
     208: putfield      #40                 // Field badresponse:Z
     211: aload_0
     212: ldc           #124                // String response does not match query
     214: putfield      #41                 // Field badresponse_error:Ljava/lang/String;
     217: return
     218: aload_0
     219: getfield      #47                 // Field cache:Lorg/xbill/DNS/Cache;
     222: aload         5
     224: invokevirtual #125                // Method org/xbill/DNS/Cache.addMessage:(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/SetResponse;
     227: astore_2
     228: aload_2
     229: ifnonnull     249
     232: aload_0
     233: getfield      #47                 // Field cache:Lorg/xbill/DNS/Cache;
     236: aload_1
     237: aload_0
     238: getfield      #56                 // Field type:I
     241: aload_0
     242: getfield      #66                 // Field credibility:I
     245: invokevirtual #105                // Method org/xbill/DNS/Cache.lookupRecords:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
     248: astore_2
     249: aload_0
     250: getfield      #69                 // Field verbose:Z
     253: ifeq          303
     256: getstatic     #106                // Field java/lang/System.err:Ljava/io/PrintStream;
     259: new           #72                 // class java/lang/StringBuffer
     262: dup
     263: invokespecial #73                 // Method java/lang/StringBuffer."<init>":()V
     266: ldc           #126                // String queried
     268: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     271: aload_1
     272: invokevirtual #108                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     275: ldc           #109                // String
     277: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     280: aload_0
     281: getfield      #56                 // Field type:I
     284: invokestatic  #110                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
     287: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     290: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     293: invokevirtual #111                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     296: getstatic     #106                // Field java/lang/System.err:Ljava/io/PrintStream;
     299: aload_2
     300: invokevirtual #112                // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
     303: aload_0
     304: aload_1
     305: aload_2
     306: invokespecial #113                // Method processResponse:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/SetResponse;)V
     309: return
    Exception table:
       from    to  target type
         114   127   130   Class java/io/IOException

  private void resolve(org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #34                 // Field doneCurrent:Z
       5: aconst_null
       6: astore_3
       7: aload_2
       8: ifnonnull     16
      11: aload_1
      12: astore_3
      13: goto          33
      16: aload_1
      17: aload_2
      18: invokestatic  #127                // Method org/xbill/DNS/Name.concatenate:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      21: astore_3
      22: goto          33
      25: astore        4
      27: aload_0
      28: iconst_1
      29: putfield      #44                 // Field nametoolong:Z
      32: return
      33: aload_0
      34: aload_3
      35: invokespecial #83                 // Method lookup:(Lorg/xbill/DNS/Name;)V
      38: return
    Exception table:
       from    to  target type
          16    22    25   Class org/xbill/DNS/NameTooLongException

  public org.xbill.DNS.Record[] run();
    Code:
       0: aload_0
       1: getfield      #33                 // Field done:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #128                // Method reset:()V
      11: aload_0
      12: getfield      #55                 // Field name:Lorg/xbill/DNS/Name;
      15: invokevirtual #129                // Method org/xbill/DNS/Name.isAbsolute:()Z
      18: ifeq          33
      21: aload_0
      22: aload_0
      23: getfield      #55                 // Field name:Lorg/xbill/DNS/Name;
      26: aconst_null
      27: invokespecial #130                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      30: goto          143
      33: aload_0
      34: getfield      #64                 // Field searchPath:[Lorg/xbill/DNS/Name;
      37: ifnonnull     54
      40: aload_0
      41: aload_0
      42: getfield      #55                 // Field name:Lorg/xbill/DNS/Name;
      45: getstatic     #28                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      48: invokespecial #130                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      51: goto          143
      54: aload_0
      55: getfield      #55                 // Field name:Lorg/xbill/DNS/Name;
      58: invokevirtual #131                // Method org/xbill/DNS/Name.labels:()I
      61: getstatic     #20                 // Field defaultNdots:I
      64: if_icmple     78
      67: aload_0
      68: aload_0
      69: getfield      #55                 // Field name:Lorg/xbill/DNS/Name;
      72: getstatic     #28                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      75: invokespecial #130                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      78: aload_0
      79: getfield      #33                 // Field done:Z
      82: ifeq          90
      85: aload_0
      86: getfield      #36                 // Field answers:[Lorg/xbill/DNS/Record;
      89: areturn
      90: iconst_0
      91: istore_1
      92: iload_1
      93: aload_0
      94: getfield      #64                 // Field searchPath:[Lorg/xbill/DNS/Name;
      97: arraylength
      98: if_icmpge     143
     101: aload_0
     102: aload_0
     103: getfield      #55                 // Field name:Lorg/xbill/DNS/Name;
     106: aload_0
     107: getfield      #64                 // Field searchPath:[Lorg/xbill/DNS/Name;
     110: iload_1
     111: aaload
     112: invokespecial #130                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     115: aload_0
     116: getfield      #33                 // Field done:Z
     119: ifeq          127
     122: aload_0
     123: getfield      #36                 // Field answers:[Lorg/xbill/DNS/Record;
     126: areturn
     127: aload_0
     128: getfield      #32                 // Field foundAlias:Z
     131: ifeq          137
     134: goto          143
     137: iinc          1, 1
     140: goto          92
     143: aload_0
     144: getfield      #33                 // Field done:Z
     147: ifne          299
     150: aload_0
     151: getfield      #40                 // Field badresponse:Z
     154: ifeq          178
     157: aload_0
     158: iconst_2
     159: putfield      #37                 // Field result:I
     162: aload_0
     163: aload_0
     164: getfield      #41                 // Field badresponse_error:Ljava/lang/String;
     167: putfield      #38                 // Field error:Ljava/lang/String;
     170: aload_0
     171: iconst_1
     172: putfield      #33                 // Field done:Z
     175: goto          299
     178: aload_0
     179: getfield      #43                 // Field timedout:Z
     182: ifeq          204
     185: aload_0
     186: iconst_2
     187: putfield      #37                 // Field result:I
     190: aload_0
     191: ldc           #132                // String timed out
     193: putfield      #38                 // Field error:Ljava/lang/String;
     196: aload_0
     197: iconst_1
     198: putfield      #33                 // Field done:Z
     201: goto          299
     204: aload_0
     205: getfield      #42                 // Field networkerror:Z
     208: ifeq          230
     211: aload_0
     212: iconst_2
     213: putfield      #37                 // Field result:I
     216: aload_0
     217: ldc           #133                // String network error
     219: putfield      #38                 // Field error:Ljava/lang/String;
     222: aload_0
     223: iconst_1
     224: putfield      #33                 // Field done:Z
     227: goto          299
     230: aload_0
     231: getfield      #39                 // Field nxdomain:Z
     234: ifeq          250
     237: aload_0
     238: iconst_3
     239: putfield      #37                 // Field result:I
     242: aload_0
     243: iconst_1
     244: putfield      #33                 // Field done:Z
     247: goto          299
     250: aload_0
     251: getfield      #45                 // Field referral:Z
     254: ifeq          276
     257: aload_0
     258: iconst_1
     259: putfield      #37                 // Field result:I
     262: aload_0
     263: ldc           #134                // String referral
     265: putfield      #38                 // Field error:Ljava/lang/String;
     268: aload_0
     269: iconst_1
     270: putfield      #33                 // Field done:Z
     273: goto          299
     276: aload_0
     277: getfield      #44                 // Field nametoolong:Z
     280: ifeq          299
     283: aload_0
     284: iconst_1
     285: putfield      #37                 // Field result:I
     288: aload_0
     289: ldc           #135                // String name too long
     291: putfield      #38                 // Field error:Ljava/lang/String;
     294: aload_0
     295: iconst_1
     296: putfield      #33                 // Field done:Z
     299: aload_0
     300: getfield      #36                 // Field answers:[Lorg/xbill/DNS/Record;
     303: areturn

  private void checkDone();
    Code:
       0: aload_0
       1: getfield      #33                 // Field done:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #37                 // Field result:I
      11: iconst_m1
      12: if_icmpeq     16
      15: return
      16: new           #72                 // class java/lang/StringBuffer
      19: dup
      20: new           #72                 // class java/lang/StringBuffer
      23: dup
      24: invokespecial #73                 // Method java/lang/StringBuffer."<init>":()V
      27: ldc           #136                // String Lookup of
      29: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: aload_0
      33: getfield      #55                 // Field name:Lorg/xbill/DNS/Name;
      36: invokevirtual #108                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      39: ldc           #109                // String
      41: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      47: invokespecial #137                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      50: astore_1
      51: aload_0
      52: getfield      #57                 // Field dclass:I
      55: iconst_1
      56: if_icmpeq     89
      59: aload_1
      60: new           #72                 // class java/lang/StringBuffer
      63: dup
      64: invokespecial #73                 // Method java/lang/StringBuffer."<init>":()V
      67: aload_0
      68: getfield      #57                 // Field dclass:I
      71: invokestatic  #138                // Method org/xbill/DNS/DClass.string:(I)Ljava/lang/String;
      74: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      77: ldc           #109                // String
      79: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      82: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      85: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      88: pop
      89: aload_1
      90: new           #72                 // class java/lang/StringBuffer
      93: dup
      94: invokespecial #73                 // Method java/lang/StringBuffer."<init>":()V
      97: aload_0
      98: getfield      #56                 // Field type:I
     101: invokestatic  #110                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
     104: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     107: ldc           #139                // String  isn\'t done
     109: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     112: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     115: invokevirtual #75                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     118: pop
     119: new           #140                // class java/lang/IllegalStateException
     122: dup
     123: aload_1
     124: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     127: invokespecial #141                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     130: athrow

  public org.xbill.DNS.Record[] getAnswers();
    Code:
       0: aload_0
       1: invokespecial #142                // Method checkDone:()V
       4: aload_0
       5: getfield      #36                 // Field answers:[Lorg/xbill/DNS/Record;
       8: areturn

  public org.xbill.DNS.Name[] getAliases();
    Code:
       0: aload_0
       1: invokespecial #142                // Method checkDone:()V
       4: aload_0
       5: getfield      #35                 // Field aliases:Ljava/util/List;
       8: ifnonnull     15
      11: getstatic     #143                // Field noAliases:[Lorg/xbill/DNS/Name;
      14: areturn
      15: aload_0
      16: getfield      #35                 // Field aliases:Ljava/util/List;
      19: aload_0
      20: getfield      #35                 // Field aliases:Ljava/util/List;
      23: invokeinterface #89,  1           // InterfaceMethod java/util/List.size:()I
      28: anewarray     #27                 // class org/xbill/DNS/Name
      31: invokeinterface #91,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      36: checkcast     #144                // class "[Lorg/xbill/DNS/Name;"
      39: checkcast     #144                // class "[Lorg/xbill/DNS/Name;"
      42: areturn

  public int getResult();
    Code:
       0: aload_0
       1: invokespecial #142                // Method checkDone:()V
       4: aload_0
       5: getfield      #37                 // Field result:I
       8: ireturn

  public java.lang.String getErrorString();
    Code:
       0: aload_0
       1: invokespecial #142                // Method checkDone:()V
       4: aload_0
       5: getfield      #38                 // Field error:Ljava/lang/String;
       8: ifnull        16
      11: aload_0
      12: getfield      #38                 // Field error:Ljava/lang/String;
      15: areturn
      16: aload_0
      17: getfield      #37                 // Field result:I
      20: tableswitch   { // 0 to 4
                     0: 56
                     1: 59
                     2: 62
                     3: 65
                     4: 68
               default: 71
          }
      56: ldc           #145                // String successful
      58: areturn
      59: ldc           #146                // String unrecoverable error
      61: areturn
      62: ldc           #147                // String try again
      64: areturn
      65: ldc           #148                // String host not found
      67: areturn
      68: ldc           #149                // String type not found
      70: areturn
      71: new           #140                // class java/lang/IllegalStateException
      74: dup
      75: ldc           #150                // String unknown result
      77: invokespecial #141                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: invokespecial #4                  // Method java/lang/NoClassDefFoundError."<init>":()V
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/NoClassDefFoundError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: iconst_0
       1: anewarray     #27                 // class org/xbill/DNS/Name
       4: putstatic     #143                // Field noAliases:[Lorg/xbill/DNS/Name;
       7: invokestatic  #151                // Method refreshDefault:()V
      10: return
}
