Compiled from "ARecord.java"
public class org.xbill.DNS.ARecord extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private int addr;

  org.xbill.DNS.ARecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/ARecord
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  private static final int fromArray(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: baload
       3: sipush        255
       6: iand
       7: bipush        24
       9: ishl
      10: aload_0
      11: iconst_1
      12: baload
      13: sipush        255
      16: iand
      17: bipush        16
      19: ishl
      20: ior
      21: aload_0
      22: iconst_2
      23: baload
      24: sipush        255
      27: iand
      28: bipush        8
      30: ishl
      31: ior
      32: aload_0
      33: iconst_3
      34: baload
      35: sipush        255
      38: iand
      39: ior
      40: ireturn

  private static final byte[] toArray(int);
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore_1
       4: aload_1
       5: iconst_0
       6: iload_0
       7: bipush        24
       9: iushr
      10: sipush        255
      13: iand
      14: i2b
      15: bastore
      16: aload_1
      17: iconst_1
      18: iload_0
      19: bipush        16
      21: iushr
      22: sipush        255
      25: iand
      26: i2b
      27: bastore
      28: aload_1
      29: iconst_2
      30: iload_0
      31: bipush        8
      33: iushr
      34: sipush        255
      37: iand
      38: i2b
      39: bastore
      40: aload_1
      41: iconst_3
      42: iload_0
      43: sipush        255
      46: iand
      47: i2b
      48: bastore
      49: aload_1
      50: areturn

  public org.xbill.DNS.ARecord(org.xbill.DNS.Name, int, long, java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iload_2
       4: lload_3
       5: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       8: aload         5
      10: invokestatic  #5                  // Method org/xbill/DNS/Address.familyOf:(Ljava/net/InetAddress;)I
      13: iconst_1
      14: if_icmpeq     27
      17: new           #6                  // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #7                  // String invalid IPv4 address
      23: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: aload         5
      30: invokevirtual #9                  // Method java/net/InetAddress.getAddress:()[B
      33: invokestatic  #10                 // Method fromArray:([B)I
      36: putfield      #11                 // Field addr:I
      39: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_4
       3: invokevirtual #12                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
       6: invokestatic  #10                 // Method fromArray:([B)I
       9: putfield      #11                 // Field addr:I
      12: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #13                 // Method org/xbill/DNS/Tokenizer.getAddressBytes:(I)[B
       6: invokestatic  #10                 // Method fromArray:([B)I
       9: putfield      #11                 // Field addr:I
      12: return

  java.lang.String rrToString();
    Code:
       0: aload_0
       1: getfield      #11                 // Field addr:I
       4: invokestatic  #14                 // Method toArray:(I)[B
       7: invokestatic  #15                 // Method org/xbill/DNS/Address.toDottedQuad:([B)Ljava/lang/String;
      10: areturn

  public java.net.InetAddress getAddress();
    Code:
       0: aload_0
       1: getfield      #16                 // Field name:Lorg/xbill/DNS/Name;
       4: ifnonnull     18
       7: aload_0
       8: getfield      #11                 // Field addr:I
      11: invokestatic  #14                 // Method toArray:(I)[B
      14: invokestatic  #17                 // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
      17: areturn
      18: aload_0
      19: getfield      #16                 // Field name:Lorg/xbill/DNS/Name;
      22: invokevirtual #18                 // Method org/xbill/DNS/Name.toString:()Ljava/lang/String;
      25: aload_0
      26: getfield      #11                 // Field addr:I
      29: invokestatic  #14                 // Method toArray:(I)[B
      32: invokestatic  #19                 // Method java/net/InetAddress.getByAddress:(Ljava/lang/String;[B)Ljava/net/InetAddress;
      35: areturn
      36: astore_1
      37: aconst_null
      38: areturn
    Exception table:
       from    to  target type
           0    17    36   Class java/net/UnknownHostException
          18    35    36   Class java/net/UnknownHostException

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field addr:I
       5: i2l
       6: ldc2_w        #21                 // long 4294967295l
       9: land
      10: invokevirtual #23                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      13: return
}
