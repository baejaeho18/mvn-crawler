Compiled from "DSRecord.java"
public class org.xbill.DNS.DSRecord extends org.xbill.DNS.Record {
  public static final int SHA1_DIGEST_ID;

  public static final int SHA256_DIGEST_ID;

  public static final int GOST3411_DIGEST_ID;

  public static final int SHA384_DIGEST_ID;

  private static final long serialVersionUID;

  private int footprint;

  private int alg;

  private int digestid;

  private byte[] digest;

  org.xbill.DNS.DSRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/DSRecord
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public org.xbill.DNS.DSRecord(org.xbill.DNS.Name, int, long, int, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        43
       4: iload_2
       5: lload_3
       6: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #5                  // String footprint
      12: iload         5
      14: invokestatic  #6                  // Method checkU16:(Ljava/lang/String;I)I
      17: putfield      #7                  // Field footprint:I
      20: aload_0
      21: ldc           #8                  // String alg
      23: iload         6
      25: invokestatic  #9                  // Method checkU8:(Ljava/lang/String;I)I
      28: putfield      #10                 // Field alg:I
      31: aload_0
      32: ldc           #11                 // String digestid
      34: iload         7
      36: invokestatic  #9                  // Method checkU8:(Ljava/lang/String;I)I
      39: putfield      #12                 // Field digestid:I
      42: aload_0
      43: aload         8
      45: putfield      #13                 // Field digest:[B
      48: return

  public org.xbill.DNS.DSRecord(org.xbill.DNS.Name, int, long, int, org.xbill.DNS.DNSKEYRecord);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: aload         6
       6: invokevirtual #14                 // Method org/xbill/DNS/DNSKEYRecord.getFootprint:()I
       9: aload         6
      11: invokevirtual #15                 // Method org/xbill/DNS/DNSKEYRecord.getAlgorithm:()I
      14: iload         5
      16: aload         6
      18: iload         5
      20: invokestatic  #16                 // Method org/xbill/DNS/DNSSEC.generateDSDigest:(Lorg/xbill/DNS/DNSKEYRecord;I)[B
      23: invokespecial #17                 // Method "<init>":(Lorg/xbill/DNS/Name;IJIII[B)V
      26: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: putfield      #7                  // Field footprint:I
       8: aload_0
       9: aload_1
      10: invokevirtual #19                 // Method org/xbill/DNS/DNSInput.readU8:()I
      13: putfield      #10                 // Field alg:I
      16: aload_0
      17: aload_1
      18: invokevirtual #19                 // Method org/xbill/DNS/DNSInput.readU8:()I
      21: putfield      #12                 // Field digestid:I
      24: aload_0
      25: aload_1
      26: invokevirtual #20                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
      29: putfield      #13                 // Field digest:[B
      32: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
       5: putfield      #7                  // Field footprint:I
       8: aload_0
       9: aload_1
      10: invokevirtual #22                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
      13: putfield      #10                 // Field alg:I
      16: aload_0
      17: aload_1
      18: invokevirtual #22                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
      21: putfield      #12                 // Field digestid:I
      24: aload_0
      25: aload_1
      26: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.getHex:()[B
      29: putfield      #13                 // Field digest:[B
      32: return

  java.lang.String rrToString();
    Code:
       0: new           #24                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field footprint:I
      13: invokevirtual #26                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: ldc           #27                 // String
      20: invokevirtual #28                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #10                 // Field alg:I
      29: invokevirtual #26                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      32: pop
      33: aload_1
      34: ldc           #27                 // String
      36: invokevirtual #28                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #12                 // Field digestid:I
      45: invokevirtual #26                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      48: pop
      49: aload_0
      50: getfield      #13                 // Field digest:[B
      53: ifnull        75
      56: aload_1
      57: ldc           #27                 // String
      59: invokevirtual #28                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: pop
      63: aload_1
      64: aload_0
      65: getfield      #13                 // Field digest:[B
      68: invokestatic  #29                 // Method org/xbill/DNS/utils/base16.toString:([B)Ljava/lang/String;
      71: invokevirtual #28                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      74: pop
      75: aload_1
      76: invokevirtual #30                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      79: areturn

  public int getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #10                 // Field alg:I
       4: ireturn

  public int getDigestID();
    Code:
       0: aload_0
       1: getfield      #12                 // Field digestid:I
       4: ireturn

  public byte[] getDigest();
    Code:
       0: aload_0
       1: getfield      #13                 // Field digest:[B
       4: areturn

  public int getFootprint();
    Code:
       0: aload_0
       1: getfield      #7                  // Field footprint:I
       4: ireturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field footprint:I
       5: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #10                 // Field alg:I
      13: invokevirtual #32                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #12                 // Field digestid:I
      21: invokevirtual #32                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      24: aload_0
      25: getfield      #13                 // Field digest:[B
      28: ifnull        39
      31: aload_1
      32: aload_0
      33: getfield      #13                 // Field digest:[B
      36: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      39: return
}
