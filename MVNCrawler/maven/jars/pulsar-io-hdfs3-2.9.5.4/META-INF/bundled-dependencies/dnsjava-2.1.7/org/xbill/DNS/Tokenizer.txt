Compiled from "Tokenizer.java"
public class org.xbill.DNS.Tokenizer {
  private static java.lang.String delim;

  private static java.lang.String quotes;

  public static final int EOF;

  public static final int EOL;

  public static final int WHITESPACE;

  public static final int IDENTIFIER;

  public static final int QUOTED_STRING;

  public static final int COMMENT;

  private java.io.PushbackInputStream is;

  private boolean ungottenToken;

  private int multiline;

  private boolean quoting;

  private java.lang.String delimiters;

  private org.xbill.DNS.Tokenizer$Token current;

  private java.lang.StringBuffer sb;

  private boolean wantClose;

  private java.lang.String filename;

  private int line;

  public org.xbill.DNS.Tokenizer(java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: instanceof    #2                  // class java/io/BufferedInputStream
       8: ifne          20
      11: new           #2                  // class java/io/BufferedInputStream
      14: dup
      15: aload_1
      16: invokespecial #3                  // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      19: astore_1
      20: aload_0
      21: new           #4                  // class java/io/PushbackInputStream
      24: dup
      25: aload_1
      26: iconst_2
      27: invokespecial #5                  // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;I)V
      30: putfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      33: aload_0
      34: iconst_0
      35: putfield      #7                  // Field ungottenToken:Z
      38: aload_0
      39: iconst_0
      40: putfield      #8                  // Field multiline:I
      43: aload_0
      44: iconst_0
      45: putfield      #9                  // Field quoting:Z
      48: aload_0
      49: getstatic     #10                 // Field delim:Ljava/lang/String;
      52: putfield      #11                 // Field delimiters:Ljava/lang/String;
      55: aload_0
      56: new           #12                 // class org/xbill/DNS/Tokenizer$Token
      59: dup
      60: aconst_null
      61: invokespecial #13                 // Method org/xbill/DNS/Tokenizer$Token."<init>":(Lorg/xbill/DNS/Tokenizer$1;)V
      64: putfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      67: aload_0
      68: new           #15                 // class java/lang/StringBuffer
      71: dup
      72: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      75: putfield      #17                 // Field sb:Ljava/lang/StringBuffer;
      78: aload_0
      79: ldc           #18                 // String <none>
      81: putfield      #19                 // Field filename:Ljava/lang/String;
      84: aload_0
      85: iconst_1
      86: putfield      #20                 // Field line:I
      89: return

  public org.xbill.DNS.Tokenizer(java.lang.String);
    Code:
       0: aload_0
       1: new           #21                 // class java/io/ByteArrayInputStream
       4: dup
       5: aload_1
       6: invokevirtual #22                 // Method java/lang/String.getBytes:()[B
       9: invokespecial #23                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      12: invokespecial #24                 // Method "<init>":(Ljava/io/InputStream;)V
      15: return

  public org.xbill.DNS.Tokenizer(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: new           #25                 // class java/io/FileInputStream
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       9: invokespecial #24                 // Method "<init>":(Ljava/io/InputStream;)V
      12: aload_0
      13: iconst_1
      14: putfield      #27                 // Field wantClose:Z
      17: aload_0
      18: aload_1
      19: invokevirtual #28                 // Method java/io/File.getName:()Ljava/lang/String;
      22: putfield      #19                 // Field filename:Ljava/lang/String;
      25: return

  private int getChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
       4: invokevirtual #29                 // Method java/io/PushbackInputStream.read:()I
       7: istore_1
       8: iload_1
       9: bipush        13
      11: if_icmpne     39
      14: aload_0
      15: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      18: invokevirtual #29                 // Method java/io/PushbackInputStream.read:()I
      21: istore_2
      22: iload_2
      23: bipush        10
      25: if_icmpeq     36
      28: aload_0
      29: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      32: iload_2
      33: invokevirtual #30                 // Method java/io/PushbackInputStream.unread:(I)V
      36: bipush        10
      38: istore_1
      39: iload_1
      40: bipush        10
      42: if_icmpne     55
      45: aload_0
      46: dup
      47: getfield      #20                 // Field line:I
      50: iconst_1
      51: iadd
      52: putfield      #20                 // Field line:I
      55: iload_1
      56: ireturn

  private void ungetChar(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpne     6
       5: return
       6: aload_0
       7: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      10: iload_1
      11: invokevirtual #30                 // Method java/io/PushbackInputStream.unread:(I)V
      14: iload_1
      15: bipush        10
      17: if_icmpne     30
      20: aload_0
      21: dup
      22: getfield      #20                 // Field line:I
      25: iconst_1
      26: isub
      27: putfield      #20                 // Field line:I
      30: return

  private int skipWhitespace() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokespecial #31                 // Method getChar:()I
       6: istore_2
       7: iload_2
       8: bipush        32
      10: if_icmpeq     39
      13: iload_2
      14: bipush        9
      16: if_icmpeq     39
      19: iload_2
      20: bipush        10
      22: if_icmpne     32
      25: aload_0
      26: getfield      #8                  // Field multiline:I
      29: ifgt          39
      32: aload_0
      33: iload_2
      34: invokespecial #32                 // Method ungetChar:(I)V
      37: iload_1
      38: ireturn
      39: iinc          1, 1
      42: goto          2

  private void checkUnbalancedParens() throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field multiline:I
       4: ifle          14
       7: aload_0
       8: ldc           #33                 // String unbalanced parentheses
      10: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      13: athrow
      14: return

  public org.xbill.DNS.Tokenizer$Token get(boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field ungottenToken:Z
       4: ifeq          78
       7: aload_0
       8: iconst_0
       9: putfield      #7                  // Field ungottenToken:Z
      12: aload_0
      13: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      16: getfield      #35                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      19: iconst_2
      20: if_icmpne     32
      23: iload_1
      24: ifeq          78
      27: aload_0
      28: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      31: areturn
      32: aload_0
      33: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      36: getfield      #35                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      39: iconst_5
      40: if_icmpne     52
      43: iload_2
      44: ifeq          78
      47: aload_0
      48: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      51: areturn
      52: aload_0
      53: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      56: getfield      #35                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      59: iconst_1
      60: if_icmpne     73
      63: aload_0
      64: dup
      65: getfield      #20                 // Field line:I
      68: iconst_1
      69: iadd
      70: putfield      #20                 // Field line:I
      73: aload_0
      74: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      77: areturn
      78: aload_0
      79: invokespecial #36                 // Method skipWhitespace:()I
      82: istore        5
      84: iload         5
      86: ifle          103
      89: iload_1
      90: ifeq          103
      93: aload_0
      94: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      97: iconst_2
      98: aconst_null
      99: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     102: areturn
     103: iconst_3
     104: istore_3
     105: aload_0
     106: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     109: iconst_0
     110: invokevirtual #38                 // Method java/lang/StringBuffer.setLength:(I)V
     113: aload_0
     114: invokespecial #31                 // Method getChar:()I
     117: istore        4
     119: iload         4
     121: iconst_m1
     122: if_icmpeq     138
     125: aload_0
     126: getfield      #11                 // Field delimiters:Ljava/lang/String;
     129: iload         4
     131: invokevirtual #39                 // Method java/lang/String.indexOf:(I)I
     134: iconst_m1
     135: if_icmpeq     479
     138: iload         4
     140: iconst_m1
     141: if_icmpne     191
     144: aload_0
     145: getfield      #9                  // Field quoting:Z
     148: ifeq          158
     151: aload_0
     152: ldc           #40                 // String EOF in quoted string
     154: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     157: athrow
     158: aload_0
     159: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     162: invokevirtual #41                 // Method java/lang/StringBuffer.length:()I
     165: ifne          178
     168: aload_0
     169: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     172: iconst_0
     173: aconst_null
     174: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     177: areturn
     178: aload_0
     179: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     182: iload_3
     183: aload_0
     184: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     187: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     190: areturn
     191: aload_0
     192: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     195: invokevirtual #41                 // Method java/lang/StringBuffer.length:()I
     198: ifne          470
     201: iload_3
     202: iconst_4
     203: if_icmpeq     470
     206: iload         4
     208: bipush        40
     210: if_icmpne     231
     213: aload_0
     214: dup
     215: getfield      #8                  // Field multiline:I
     218: iconst_1
     219: iadd
     220: putfield      #8                  // Field multiline:I
     223: aload_0
     224: invokespecial #36                 // Method skipWhitespace:()I
     227: pop
     228: goto          113
     231: iload         4
     233: bipush        41
     235: if_icmpne     270
     238: aload_0
     239: getfield      #8                  // Field multiline:I
     242: ifgt          252
     245: aload_0
     246: ldc           #42                 // String invalid close parenthesis
     248: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     251: athrow
     252: aload_0
     253: dup
     254: getfield      #8                  // Field multiline:I
     257: iconst_1
     258: isub
     259: putfield      #8                  // Field multiline:I
     262: aload_0
     263: invokespecial #36                 // Method skipWhitespace:()I
     266: pop
     267: goto          113
     270: iload         4
     272: bipush        34
     274: if_icmpne     321
     277: aload_0
     278: getfield      #9                  // Field quoting:Z
     281: ifne          301
     284: aload_0
     285: iconst_1
     286: putfield      #9                  // Field quoting:Z
     289: aload_0
     290: getstatic     #43                 // Field quotes:Ljava/lang/String;
     293: putfield      #11                 // Field delimiters:Ljava/lang/String;
     296: iconst_4
     297: istore_3
     298: goto          113
     301: aload_0
     302: iconst_0
     303: putfield      #9                  // Field quoting:Z
     306: aload_0
     307: getstatic     #10                 // Field delim:Ljava/lang/String;
     310: putfield      #11                 // Field delimiters:Ljava/lang/String;
     313: aload_0
     314: invokespecial #36                 // Method skipWhitespace:()I
     317: pop
     318: goto          113
     321: iload         4
     323: bipush        10
     325: if_icmpne     338
     328: aload_0
     329: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     332: iconst_1
     333: aconst_null
     334: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     337: areturn
     338: iload         4
     340: bipush        59
     342: if_icmpne     462
     345: aload_0
     346: invokespecial #31                 // Method getChar:()I
     349: istore        4
     351: iload         4
     353: bipush        10
     355: if_icmpeq     381
     358: iload         4
     360: iconst_m1
     361: if_icmpne     367
     364: goto          381
     367: aload_0
     368: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     371: iload         4
     373: i2c
     374: invokevirtual #44                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     377: pop
     378: goto          345
     381: iload_2
     382: ifeq          404
     385: aload_0
     386: iload         4
     388: invokespecial #32                 // Method ungetChar:(I)V
     391: aload_0
     392: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     395: iconst_5
     396: aload_0
     397: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     400: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     403: areturn
     404: iload         4
     406: iconst_m1
     407: if_icmpne     429
     410: iload_3
     411: iconst_4
     412: if_icmpeq     429
     415: aload_0
     416: invokespecial #45                 // Method checkUnbalancedParens:()V
     419: aload_0
     420: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     423: iconst_0
     424: aconst_null
     425: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     428: areturn
     429: aload_0
     430: getfield      #8                  // Field multiline:I
     433: ifle          452
     436: aload_0
     437: invokespecial #36                 // Method skipWhitespace:()I
     440: pop
     441: aload_0
     442: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     445: iconst_0
     446: invokevirtual #38                 // Method java/lang/StringBuffer.setLength:(I)V
     449: goto          113
     452: aload_0
     453: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     456: iconst_1
     457: aconst_null
     458: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     461: areturn
     462: new           #46                 // class java/lang/IllegalStateException
     465: dup
     466: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":()V
     469: athrow
     470: aload_0
     471: iload         4
     473: invokespecial #32                 // Method ungetChar:(I)V
     476: goto          553
     479: iload         4
     481: bipush        92
     483: if_icmpne     518
     486: aload_0
     487: invokespecial #31                 // Method getChar:()I
     490: istore        4
     492: iload         4
     494: iconst_m1
     495: if_icmpne     505
     498: aload_0
     499: ldc           #48                 // String unterminated escape sequence
     501: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     504: athrow
     505: aload_0
     506: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     509: bipush        92
     511: invokevirtual #44                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     514: pop
     515: goto          539
     518: aload_0
     519: getfield      #9                  // Field quoting:Z
     522: ifeq          539
     525: iload         4
     527: bipush        10
     529: if_icmpne     539
     532: aload_0
     533: ldc           #49                 // String newline in quoted string
     535: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     538: athrow
     539: aload_0
     540: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     543: iload         4
     545: i2c
     546: invokevirtual #44                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     549: pop
     550: goto          113
     553: aload_0
     554: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     557: invokevirtual #41                 // Method java/lang/StringBuffer.length:()I
     560: ifne          582
     563: iload_3
     564: iconst_4
     565: if_icmpeq     582
     568: aload_0
     569: invokespecial #45                 // Method checkUnbalancedParens:()V
     572: aload_0
     573: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     576: iconst_0
     577: aconst_null
     578: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     581: areturn
     582: aload_0
     583: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
     586: iload_3
     587: aload_0
     588: getfield      #17                 // Field sb:Ljava/lang/StringBuffer;
     591: invokestatic  #37                 // Method org/xbill/DNS/Tokenizer$Token.access$100:(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;
     594: areturn

  public org.xbill.DNS.Tokenizer$Token get() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokevirtual #50                 // Method get:(ZZ)Lorg/xbill/DNS/Tokenizer$Token;
       6: areturn

  public void unget();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ungottenToken:Z
       4: ifeq          17
       7: new           #46                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #51                 // String Cannot unget multiple tokens
      13: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #14                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      21: getfield      #35                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      24: iconst_1
      25: if_icmpne     38
      28: aload_0
      29: dup
      30: getfield      #20                 // Field line:I
      33: iconst_1
      34: isub
      35: putfield      #20                 // Field line:I
      38: aload_0
      39: iconst_1
      40: putfield      #7                  // Field ungottenToken:Z
      43: return

  public java.lang.String getString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       4: astore_1
       5: aload_1
       6: invokevirtual #54                 // Method org/xbill/DNS/Tokenizer$Token.isString:()Z
       9: ifne          19
      12: aload_0
      13: ldc           #55                 // String expected a string
      15: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      18: athrow
      19: aload_1
      20: getfield      #56                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      23: areturn

  private java.lang.String _getIdentifier(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       4: astore_2
       5: aload_2
       6: getfield      #35                 // Field org/xbill/DNS/Tokenizer$Token.type:I
       9: iconst_3
      10: if_icmpeq     37
      13: aload_0
      14: new           #15                 // class java/lang/StringBuffer
      17: dup
      18: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      21: ldc           #57                 // String expected
      23: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: aload_1
      27: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      36: athrow
      37: aload_2
      38: getfield      #56                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      41: areturn

  public java.lang.String getIdentifier() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #60                 // String an identifier
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public long getLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #62                 // String an integer
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: iconst_0
       9: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      12: invokestatic  #64                 // Method java/lang/Character.isDigit:(C)Z
      15: ifne          25
      18: aload_0
      19: ldc           #65                 // String expected an integer
      21: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      24: athrow
      25: aload_1
      26: invokestatic  #66                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: lreturn
      30: astore_2
      31: aload_0
      32: ldc           #65                 // String expected an integer
      34: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      37: athrow
    Exception table:
       from    to  target type
          25    29    30   Class java/lang/NumberFormatException

  public long getUInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: iflt          19
      11: lload_1
      12: ldc2_w        #69                 // long 4294967295l
      15: lcmp
      16: ifle          26
      19: aload_0
      20: ldc           #71                 // String expected an 32 bit unsigned integer
      22: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      25: athrow
      26: lload_1
      27: lreturn

  public int getUInt16() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: iflt          19
      11: lload_1
      12: ldc2_w        #72                 // long 65535l
      15: lcmp
      16: ifle          26
      19: aload_0
      20: ldc           #74                 // String expected an 16 bit unsigned integer
      22: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      25: athrow
      26: lload_1
      27: l2i
      28: ireturn

  public int getUInt8() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: iflt          19
      11: lload_1
      12: ldc2_w        #75                 // long 255l
      15: lcmp
      16: ifle          26
      19: aload_0
      20: ldc           #77                 // String expected an 8 bit unsigned integer
      22: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      25: athrow
      26: lload_1
      27: l2i
      28: ireturn

  public long getTTL() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #78                 // String a TTL value
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #79                 // Method org/xbill/DNS/TTL.parseTTL:(Ljava/lang/String;)J
      11: lreturn
      12: astore_2
      13: aload_0
      14: ldc           #80                 // String expected a TTL value
      16: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      19: athrow
    Exception table:
       from    to  target type
           7    11    12   Class java/lang/NumberFormatException

  public long getTTLLike() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #81                 // String a TTL-like value
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: iconst_0
       9: invokestatic  #82                 // Method org/xbill/DNS/TTL.parse:(Ljava/lang/String;Z)J
      12: lreturn
      13: astore_2
      14: aload_0
      15: ldc           #83                 // String expected a TTL-like value
      17: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      20: athrow
    Exception table:
       from    to  target type
           7    12    13   Class java/lang/NumberFormatException

  public org.xbill.DNS.Name getName(org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #84                 // String a name
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokestatic  #85                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      12: astore_3
      13: aload_3
      14: invokevirtual #86                 // Method org/xbill/DNS/Name.isAbsolute:()Z
      17: ifne          29
      20: new           #87                 // class org/xbill/DNS/RelativeNameException
      23: dup
      24: aload_3
      25: invokespecial #88                 // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      28: athrow
      29: aload_3
      30: areturn
      31: astore_3
      32: aload_0
      33: aload_3
      34: invokevirtual #90                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      37: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      40: athrow
    Exception table:
       from    to  target type
           7    30    31   Class org/xbill/DNS/TextParseException

  public byte[] getAddressBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #91                 // String an address
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: iload_1
       9: invokestatic  #92                 // Method org/xbill/DNS/Address.toByteArray:(Ljava/lang/String;I)[B
      12: astore_3
      13: aload_3
      14: ifnonnull     41
      17: aload_0
      18: new           #15                 // class java/lang/StringBuffer
      21: dup
      22: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      25: ldc           #93                 // String Invalid address:
      27: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: aload_2
      31: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      37: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      40: athrow
      41: aload_3
      42: areturn

  public java.net.InetAddress getAddress(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #91                 // String an address
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: iload_1
       9: invokestatic  #94                 // Method org/xbill/DNS/Address.getByAddress:(Ljava/lang/String;I)Ljava/net/InetAddress;
      12: areturn
      13: astore_3
      14: aload_0
      15: aload_3
      16: invokevirtual #96                 // Method java/net/UnknownHostException.getMessage:()Ljava/lang/String;
      19: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      22: athrow
    Exception table:
       from    to  target type
           7    12    13   Class java/net/UnknownHostException

  public void getEOL() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       4: astore_1
       5: aload_1
       6: getfield      #35                 // Field org/xbill/DNS/Tokenizer$Token.type:I
       9: iconst_1
      10: if_icmpeq     27
      13: aload_1
      14: getfield      #35                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      17: ifeq          27
      20: aload_0
      21: ldc           #97                 // String expected EOL or EOF
      23: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      26: athrow
      27: return

  private java.lang.String remainingStrings() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #53                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       6: astore_2
       7: aload_2
       8: invokevirtual #54                 // Method org/xbill/DNS/Tokenizer$Token.isString:()Z
      11: ifne          17
      14: goto          41
      17: aload_1
      18: ifnonnull     29
      21: new           #15                 // class java/lang/StringBuffer
      24: dup
      25: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      28: astore_1
      29: aload_1
      30: aload_2
      31: getfield      #56                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      34: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: pop
      38: goto          2
      41: aload_0
      42: invokevirtual #98                 // Method unget:()V
      45: aload_1
      46: ifnonnull     51
      49: aconst_null
      50: areturn
      51: aload_1
      52: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      55: areturn

  public byte[] getBase64(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method remainingStrings:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     22
       9: iload_1
      10: ifeq          20
      13: aload_0
      14: ldc           #100                // String expected base64 encoded string
      16: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      19: athrow
      20: aconst_null
      21: areturn
      22: aload_2
      23: invokestatic  #101                // Method org/xbill/DNS/utils/base64.fromString:(Ljava/lang/String;)[B
      26: astore_3
      27: aload_3
      28: ifnonnull     38
      31: aload_0
      32: ldc           #102                // String invalid base64 encoding
      34: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      37: athrow
      38: aload_3
      39: areturn

  public byte[] getBase64() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #103                // Method getBase64:(Z)[B
       5: areturn

  public byte[] getHex(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method remainingStrings:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     22
       9: iload_1
      10: ifeq          20
      13: aload_0
      14: ldc           #104                // String expected hex encoded string
      16: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      19: athrow
      20: aconst_null
      21: areturn
      22: aload_2
      23: invokestatic  #105                // Method org/xbill/DNS/utils/base16.fromString:(Ljava/lang/String;)[B
      26: astore_3
      27: aload_3
      28: ifnonnull     38
      31: aload_0
      32: ldc           #106                // String invalid hex encoding
      34: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      37: athrow
      38: aload_3
      39: areturn

  public byte[] getHex() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #107                // Method getHex:(Z)[B
       5: areturn

  public byte[] getHexString() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #108                // String a hex string
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #105                // Method org/xbill/DNS/utils/base16.fromString:(Ljava/lang/String;)[B
      11: astore_2
      12: aload_2
      13: ifnonnull     23
      16: aload_0
      17: ldc           #106                // String invalid hex encoding
      19: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      22: athrow
      23: aload_2
      24: areturn

  public byte[] getBase32String(org.xbill.DNS.utils.base32) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #109                // String a base32 string
       3: invokespecial #61                 // Method _getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokevirtual #110                // Method org/xbill/DNS/utils/base32.fromString:(Ljava/lang/String;)[B
      12: astore_3
      13: aload_3
      14: ifnonnull     24
      17: aload_0
      18: ldc           #111                // String invalid base32 encoding
      20: invokevirtual #34                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      23: athrow
      24: aload_3
      25: areturn

  public org.xbill.DNS.TextParseException exception(java.lang.String);
    Code:
       0: new           #112                // class org/xbill/DNS/Tokenizer$TokenizerException
       3: dup
       4: aload_0
       5: getfield      #19                 // Field filename:Ljava/lang/String;
       8: aload_0
       9: getfield      #20                 // Field line:I
      12: aload_1
      13: invokespecial #113                // Method org/xbill/DNS/Tokenizer$TokenizerException."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      16: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #27                 // Field wantClose:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      11: invokevirtual #114                // Method java/io/PushbackInputStream.close:()V
      14: goto          18
      17: astore_1
      18: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException

  protected void finalize();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method close:()V
       4: return

  static {};
    Code:
       0: ldc           #117                // String  \t\n;()\"
       2: putstatic     #10                 // Field delim:Ljava/lang/String;
       5: ldc           #118                // String \"
       7: putstatic     #43                 // Field quotes:Ljava/lang/String;
      10: return
}
