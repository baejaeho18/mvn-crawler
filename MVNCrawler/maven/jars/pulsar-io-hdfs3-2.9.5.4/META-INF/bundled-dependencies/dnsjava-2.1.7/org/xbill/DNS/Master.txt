Compiled from "Master.java"
public class org.xbill.DNS.Master {
  private org.xbill.DNS.Name origin;

  private java.io.File file;

  private org.xbill.DNS.Record last;

  private long defaultTTL;

  private org.xbill.DNS.Master included;

  private org.xbill.DNS.Tokenizer st;

  private int currentType;

  private int currentDClass;

  private long currentTTL;

  private boolean needSOATTL;

  private org.xbill.DNS.Generator generator;

  private java.util.List generators;

  private boolean noExpandGenerate;

  org.xbill.DNS.Master(java.io.File, org.xbill.DNS.Name, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field last:Lorg/xbill/DNS/Record;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field included:Lorg/xbill/DNS/Master;
      14: aload_2
      15: ifnull        34
      18: aload_2
      19: invokevirtual #4                  // Method org/xbill/DNS/Name.isAbsolute:()Z
      22: ifne          34
      25: new           #5                  // class org/xbill/DNS/RelativeNameException
      28: dup
      29: aload_2
      30: invokespecial #6                  // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: putfield      #7                  // Field file:Ljava/io/File;
      39: aload_0
      40: new           #8                  // class org/xbill/DNS/Tokenizer
      43: dup
      44: aload_1
      45: invokespecial #9                  // Method org/xbill/DNS/Tokenizer."<init>":(Ljava/io/File;)V
      48: putfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      51: aload_0
      52: aload_2
      53: putfield      #11                 // Field origin:Lorg/xbill/DNS/Name;
      56: aload_0
      57: lload_3
      58: putfield      #12                 // Field defaultTTL:J
      61: return

  public org.xbill.DNS.Master(java.lang.String, org.xbill.DNS.Name, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #13                 // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: aload_2
      10: lload_3
      11: invokespecial #15                 // Method "<init>":(Ljava/io/File;Lorg/xbill/DNS/Name;J)V
      14: return

  public org.xbill.DNS.Master(java.lang.String, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #13                 // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: aload_2
      10: ldc2_w        #16                 // long -1l
      13: invokespecial #15                 // Method "<init>":(Ljava/io/File;Lorg/xbill/DNS/Name;J)V
      16: return

  public org.xbill.DNS.Master(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #13                 // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: aconst_null
      10: ldc2_w        #16                 // long -1l
      13: invokespecial #15                 // Method "<init>":(Ljava/io/File;Lorg/xbill/DNS/Name;J)V
      16: return

  public org.xbill.DNS.Master(java.io.InputStream, org.xbill.DNS.Name, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field last:Lorg/xbill/DNS/Record;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field included:Lorg/xbill/DNS/Master;
      14: aload_2
      15: ifnull        34
      18: aload_2
      19: invokevirtual #4                  // Method org/xbill/DNS/Name.isAbsolute:()Z
      22: ifne          34
      25: new           #5                  // class org/xbill/DNS/RelativeNameException
      28: dup
      29: aload_2
      30: invokespecial #6                  // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      33: athrow
      34: aload_0
      35: new           #8                  // class org/xbill/DNS/Tokenizer
      38: dup
      39: aload_1
      40: invokespecial #18                 // Method org/xbill/DNS/Tokenizer."<init>":(Ljava/io/InputStream;)V
      43: putfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      46: aload_0
      47: aload_2
      48: putfield      #11                 // Field origin:Lorg/xbill/DNS/Name;
      51: aload_0
      52: lload_3
      53: putfield      #12                 // Field defaultTTL:J
      56: return

  public org.xbill.DNS.Master(java.io.InputStream, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #16                 // long -1l
       6: invokespecial #19                 // Method "<init>":(Ljava/io/InputStream;Lorg/xbill/DNS/Name;J)V
       9: return

  public org.xbill.DNS.Master(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: ldc2_w        #16                 // long -1l
       6: invokespecial #19                 // Method "<init>":(Ljava/io/InputStream;Lorg/xbill/DNS/Name;J)V
       9: return

  private org.xbill.DNS.Name parseName(java.lang.String, org.xbill.DNS.Name) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #20                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       5: areturn
       6: astore_3
       7: aload_0
       8: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      11: aload_3
      12: invokevirtual #22                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      15: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      18: athrow
    Exception table:
       from    to  target type
           0     5     6   Class org/xbill/DNS/TextParseException

  private void parseTTLClassAndType() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
       8: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokestatic  #25                 // Method org/xbill/DNS/DClass.value:(Ljava/lang/String;)I
      17: dup_x1
      18: putfield      #26                 // Field currentDClass:I
      21: iflt          34
      24: aload_0
      25: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      28: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      31: astore_1
      32: iconst_1
      33: istore_2
      34: aload_0
      35: ldc2_w        #16                 // long -1l
      38: putfield      #27                 // Field currentTTL:J
      41: aload_0
      42: aload_1
      43: invokestatic  #28                 // Method org/xbill/DNS/TTL.parseTTL:(Ljava/lang/String;)J
      46: putfield      #27                 // Field currentTTL:J
      49: aload_0
      50: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      53: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      56: astore_1
      57: goto          99
      60: astore_3
      61: aload_0
      62: getfield      #12                 // Field defaultTTL:J
      65: lconst_0
      66: lcmp
      67: iflt          81
      70: aload_0
      71: aload_0
      72: getfield      #12                 // Field defaultTTL:J
      75: putfield      #27                 // Field currentTTL:J
      78: goto          99
      81: aload_0
      82: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
      85: ifnull        99
      88: aload_0
      89: aload_0
      90: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
      93: invokevirtual #30                 // Method org/xbill/DNS/Record.getTTL:()J
      96: putfield      #27                 // Field currentTTL:J
      99: iload_2
     100: ifne          131
     103: aload_0
     104: aload_1
     105: invokestatic  #25                 // Method org/xbill/DNS/DClass.value:(Ljava/lang/String;)I
     108: dup_x1
     109: putfield      #26                 // Field currentDClass:I
     112: iflt          126
     115: aload_0
     116: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     119: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
     122: astore_1
     123: goto          131
     126: aload_0
     127: iconst_1
     128: putfield      #26                 // Field currentDClass:I
     131: aload_0
     132: aload_1
     133: invokestatic  #31                 // Method org/xbill/DNS/Type.value:(Ljava/lang/String;)I
     136: dup_x1
     137: putfield      #32                 // Field currentType:I
     140: ifge          175
     143: aload_0
     144: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     147: new           #33                 // class java/lang/StringBuffer
     150: dup
     151: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
     154: ldc           #35                 // String Invalid type \'
     156: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     159: aload_1
     160: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     163: ldc           #37                 // String \'
     165: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     168: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     171: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     174: athrow
     175: aload_0
     176: getfield      #27                 // Field currentTTL:J
     179: lconst_0
     180: lcmp
     181: ifge          213
     184: aload_0
     185: getfield      #32                 // Field currentType:I
     188: bipush        6
     190: if_icmpeq     203
     193: aload_0
     194: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     197: ldc           #39                 // String missing TTL
     199: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     202: athrow
     203: aload_0
     204: iconst_1
     205: putfield      #40                 // Field needSOATTL:Z
     208: aload_0
     209: lconst_0
     210: putfield      #27                 // Field currentTTL:J
     213: return
    Exception table:
       from    to  target type
          41    57    60   Class java/lang/NumberFormatException

  private long parseUInt32(java.lang.String);
    Code:
       0: aload_1
       1: iconst_0
       2: invokevirtual #41                 // Method java/lang/String.charAt:(I)C
       5: invokestatic  #42                 // Method java/lang/Character.isDigit:(C)Z
       8: ifne          15
      11: ldc2_w        #16                 // long -1l
      14: lreturn
      15: aload_1
      16: invokestatic  #43                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      19: lstore_2
      20: lload_2
      21: lconst_0
      22: lcmp
      23: iflt          34
      26: lload_2
      27: ldc2_w        #44                 // long 4294967295l
      30: lcmp
      31: ifle          38
      34: ldc2_w        #16                 // long -1l
      37: lreturn
      38: lload_2
      39: lreturn
      40: astore_2
      41: ldc2_w        #16                 // long -1l
      44: lreturn
    Exception table:
       from    to  target type
          15    37    40   Class java/lang/NumberFormatException
          38    39    40   Class java/lang/NumberFormatException

  private void startGenerate() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
       4: invokevirtual #46                 // Method org/xbill/DNS/Tokenizer.getIdentifier:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ldc           #47                 // String -
      11: invokevirtual #48                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      14: istore_2
      15: iload_2
      16: ifge          46
      19: aload_0
      20: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      23: new           #33                 // class java/lang/StringBuffer
      26: dup
      27: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
      30: ldc           #49                 // String Invalid $GENERATE range specifier:
      32: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: aload_1
      36: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      42: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      45: athrow
      46: aload_1
      47: iconst_0
      48: iload_2
      49: invokevirtual #50                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      52: astore_3
      53: aload_1
      54: iload_2
      55: iconst_1
      56: iadd
      57: invokevirtual #51                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      60: astore        4
      62: aconst_null
      63: astore        5
      65: aload         4
      67: ldc           #52                 // String /
      69: invokevirtual #48                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      72: istore_2
      73: iload_2
      74: iflt          96
      77: aload         4
      79: iload_2
      80: iconst_1
      81: iadd
      82: invokevirtual #51                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      85: astore        5
      87: aload         4
      89: iconst_0
      90: iload_2
      91: invokevirtual #50                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      94: astore        4
      96: aload_0
      97: aload_3
      98: invokespecial #53                 // Method parseUInt32:(Ljava/lang/String;)J
     101: lstore        6
     103: aload_0
     104: aload         4
     106: invokespecial #53                 // Method parseUInt32:(Ljava/lang/String;)J
     109: lstore        8
     111: aload         5
     113: ifnull        127
     116: aload_0
     117: aload         5
     119: invokespecial #53                 // Method parseUInt32:(Ljava/lang/String;)J
     122: lstore        10
     124: goto          130
     127: lconst_1
     128: lstore        10
     130: lload         6
     132: lconst_0
     133: lcmp
     134: iflt          159
     137: lload         8
     139: lconst_0
     140: lcmp
     141: iflt          159
     144: lload         6
     146: lload         8
     148: lcmp
     149: ifgt          159
     152: lload         10
     154: lconst_0
     155: lcmp
     156: ifgt          186
     159: aload_0
     160: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     163: new           #33                 // class java/lang/StringBuffer
     166: dup
     167: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
     170: ldc           #49                 // String Invalid $GENERATE range specifier:
     172: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     175: aload_1
     176: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     179: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     182: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     185: athrow
     186: aload_0
     187: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     190: invokevirtual #46                 // Method org/xbill/DNS/Tokenizer.getIdentifier:()Ljava/lang/String;
     193: astore        12
     195: aload_0
     196: invokespecial #54                 // Method parseTTLClassAndType:()V
     199: aload_0
     200: getfield      #32                 // Field currentType:I
     203: invokestatic  #55                 // Method org/xbill/DNS/Generator.supportedType:(I)Z
     206: ifne          247
     209: aload_0
     210: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     213: new           #33                 // class java/lang/StringBuffer
     216: dup
     217: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
     220: ldc           #56                 // String $GENERATE does not support
     222: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     225: aload_0
     226: getfield      #32                 // Field currentType:I
     229: invokestatic  #57                 // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
     232: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     235: ldc           #58                 // String  records
     237: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     240: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     243: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     246: athrow
     247: aload_0
     248: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     251: invokevirtual #46                 // Method org/xbill/DNS/Tokenizer.getIdentifier:()Ljava/lang/String;
     254: astore        13
     256: aload_0
     257: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     260: invokevirtual #59                 // Method org/xbill/DNS/Tokenizer.getEOL:()V
     263: aload_0
     264: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     267: invokevirtual #60                 // Method org/xbill/DNS/Tokenizer.unget:()V
     270: aload_0
     271: new           #61                 // class org/xbill/DNS/Generator
     274: dup
     275: lload         6
     277: lload         8
     279: lload         10
     281: aload         12
     283: aload_0
     284: getfield      #32                 // Field currentType:I
     287: aload_0
     288: getfield      #26                 // Field currentDClass:I
     291: aload_0
     292: getfield      #27                 // Field currentTTL:J
     295: aload         13
     297: aload_0
     298: getfield      #11                 // Field origin:Lorg/xbill/DNS/Name;
     301: invokespecial #62                 // Method org/xbill/DNS/Generator."<init>":(JJJLjava/lang/String;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)V
     304: putfield      #63                 // Field generator:Lorg/xbill/DNS/Generator;
     307: aload_0
     308: getfield      #64                 // Field generators:Ljava/util/List;
     311: ifnonnull     326
     314: aload_0
     315: new           #65                 // class java/util/ArrayList
     318: dup
     319: iconst_1
     320: invokespecial #66                 // Method java/util/ArrayList."<init>":(I)V
     323: putfield      #64                 // Field generators:Ljava/util/List;
     326: aload_0
     327: getfield      #64                 // Field generators:Ljava/util/List;
     330: aload_0
     331: getfield      #63                 // Field generator:Lorg/xbill/DNS/Generator;
     334: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     339: pop
     340: return

  private void endGenerate() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
       4: invokevirtual #59                 // Method org/xbill/DNS/Tokenizer.getEOL:()V
       7: aload_0
       8: aconst_null
       9: putfield      #63                 // Field generator:Lorg/xbill/DNS/Generator;
      12: return

  private org.xbill.DNS.Record nextGenerated() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #63                 // Field generator:Lorg/xbill/DNS/Generator;
       4: invokevirtual #68                 // Method org/xbill/DNS/Generator.nextRecord:()Lorg/xbill/DNS/Record;
       7: areturn
       8: astore_1
       9: aload_0
      10: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      13: new           #33                 // class java/lang/StringBuffer
      16: dup
      17: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
      20: ldc           #70                 // String Parsing $GENERATE:
      22: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: aload_1
      26: invokevirtual #71                 // Method org/xbill/DNS/Tokenizer$TokenizerException.getBaseMessage:()Ljava/lang/String;
      29: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      35: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      38: athrow
      39: astore_1
      40: aload_0
      41: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      44: new           #33                 // class java/lang/StringBuffer
      47: dup
      48: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
      51: ldc           #70                 // String Parsing $GENERATE:
      53: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: aload_1
      57: invokevirtual #22                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      60: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      63: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      66: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      69: athrow
    Exception table:
       from    to  target type
           0     7     8   Class org/xbill/DNS/Tokenizer$TokenizerException
           0     7    39   Class org/xbill/DNS/TextParseException

  public org.xbill.DNS.Record _nextRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field included:Lorg/xbill/DNS/Master;
       4: ifnull        26
       7: aload_0
       8: getfield      #3                  // Field included:Lorg/xbill/DNS/Master;
      11: invokevirtual #72                 // Method nextRecord:()Lorg/xbill/DNS/Record;
      14: astore_3
      15: aload_3
      16: ifnull        21
      19: aload_3
      20: areturn
      21: aload_0
      22: aconst_null
      23: putfield      #3                  // Field included:Lorg/xbill/DNS/Master;
      26: aload_0
      27: getfield      #63                 // Field generator:Lorg/xbill/DNS/Generator;
      30: ifnull        48
      33: aload_0
      34: invokespecial #73                 // Method nextGenerated:()Lorg/xbill/DNS/Record;
      37: astore_3
      38: aload_3
      39: ifnull        44
      42: aload_3
      43: areturn
      44: aload_0
      45: invokespecial #74                 // Method endGenerate:()V
      48: aload_0
      49: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      52: iconst_1
      53: iconst_0
      54: invokevirtual #75                 // Method org/xbill/DNS/Tokenizer.get:(ZZ)Lorg/xbill/DNS/Tokenizer$Token;
      57: astore_1
      58: aload_1
      59: getfield      #76                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      62: iconst_2
      63: if_icmpne     132
      66: aload_0
      67: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      70: invokevirtual #77                 // Method org/xbill/DNS/Tokenizer.get:()Lorg/xbill/DNS/Tokenizer$Token;
      73: astore        4
      75: aload         4
      77: getfield      #76                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      80: iconst_1
      81: if_icmpne     87
      84: goto          48
      87: aload         4
      89: getfield      #76                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      92: ifne          97
      95: aconst_null
      96: areturn
      97: aload_0
      98: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     101: invokevirtual #60                 // Method org/xbill/DNS/Tokenizer.unget:()V
     104: aload_0
     105: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     108: ifnonnull     121
     111: aload_0
     112: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     115: ldc           #78                 // String no owner
     117: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     120: athrow
     121: aload_0
     122: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     125: invokevirtual #79                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
     128: astore_3
     129: goto          479
     132: aload_1
     133: getfield      #76                 // Field org/xbill/DNS/Tokenizer$Token.type:I
     136: iconst_1
     137: if_icmpne     143
     140: goto          48
     143: aload_1
     144: getfield      #76                 // Field org/xbill/DNS/Tokenizer$Token.type:I
     147: ifne          152
     150: aconst_null
     151: areturn
     152: aload_1
     153: getfield      #80                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
     156: iconst_0
     157: invokevirtual #41                 // Method java/lang/String.charAt:(I)C
     160: bipush        36
     162: if_icmpne     435
     165: aload_1
     166: getfield      #80                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
     169: astore_2
     170: aload_2
     171: ldc           #81                 // String $ORIGIN
     173: invokevirtual #82                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     176: ifeq          203
     179: aload_0
     180: aload_0
     181: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     184: getstatic     #83                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
     187: invokevirtual #84                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
     190: putfield      #11                 // Field origin:Lorg/xbill/DNS/Name;
     193: aload_0
     194: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     197: invokevirtual #59                 // Method org/xbill/DNS/Tokenizer.getEOL:()V
     200: goto          48
     203: aload_2
     204: ldc           #85                 // String $TTL
     206: invokevirtual #82                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     209: ifeq          233
     212: aload_0
     213: aload_0
     214: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     217: invokevirtual #86                 // Method org/xbill/DNS/Tokenizer.getTTL:()J
     220: putfield      #12                 // Field defaultTTL:J
     223: aload_0
     224: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     227: invokevirtual #59                 // Method org/xbill/DNS/Tokenizer.getEOL:()V
     230: goto          48
     233: aload_2
     234: ldc           #87                 // String $INCLUDE
     236: invokevirtual #82                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     239: ifeq          359
     242: aload_0
     243: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     246: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
     249: astore        4
     251: aload_0
     252: getfield      #7                  // Field file:Ljava/io/File;
     255: ifnull        283
     258: aload_0
     259: getfield      #7                  // Field file:Ljava/io/File;
     262: invokevirtual #88                 // Method java/io/File.getParent:()Ljava/lang/String;
     265: astore        6
     267: new           #13                 // class java/io/File
     270: dup
     271: aload         6
     273: aload         4
     275: invokespecial #89                 // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     278: astore        5
     280: goto          294
     283: new           #13                 // class java/io/File
     286: dup
     287: aload         4
     289: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     292: astore        5
     294: aload_0
     295: getfield      #11                 // Field origin:Lorg/xbill/DNS/Name;
     298: astore        6
     300: aload_0
     301: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     304: invokevirtual #77                 // Method org/xbill/DNS/Tokenizer.get:()Lorg/xbill/DNS/Tokenizer$Token;
     307: astore_1
     308: aload_1
     309: invokevirtual #90                 // Method org/xbill/DNS/Tokenizer$Token.isString:()Z
     312: ifeq          335
     315: aload_0
     316: aload_1
     317: getfield      #80                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
     320: getstatic     #83                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
     323: invokespecial #91                 // Method parseName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
     326: astore        6
     328: aload_0
     329: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     332: invokevirtual #59                 // Method org/xbill/DNS/Tokenizer.getEOL:()V
     335: aload_0
     336: new           #92                 // class org/xbill/DNS/Master
     339: dup
     340: aload         5
     342: aload         6
     344: aload_0
     345: getfield      #12                 // Field defaultTTL:J
     348: invokespecial #15                 // Method "<init>":(Ljava/io/File;Lorg/xbill/DNS/Name;J)V
     351: putfield      #3                  // Field included:Lorg/xbill/DNS/Master;
     354: aload_0
     355: invokevirtual #72                 // Method nextRecord:()Lorg/xbill/DNS/Record;
     358: areturn
     359: aload_2
     360: ldc           #93                 // String $GENERATE
     362: invokevirtual #82                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     365: ifeq          408
     368: aload_0
     369: getfield      #63                 // Field generator:Lorg/xbill/DNS/Generator;
     372: ifnull        385
     375: new           #94                 // class java/lang/IllegalStateException
     378: dup
     379: ldc           #95                 // String cannot nest $GENERATE
     381: invokespecial #96                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     384: athrow
     385: aload_0
     386: invokespecial #97                 // Method startGenerate:()V
     389: aload_0
     390: getfield      #98                 // Field noExpandGenerate:Z
     393: ifeq          403
     396: aload_0
     397: invokespecial #74                 // Method endGenerate:()V
     400: goto          48
     403: aload_0
     404: invokespecial #73                 // Method nextGenerated:()Lorg/xbill/DNS/Record;
     407: areturn
     408: aload_0
     409: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     412: new           #33                 // class java/lang/StringBuffer
     415: dup
     416: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
     419: ldc           #99                 // String Invalid directive:
     421: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     424: aload_2
     425: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     428: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     431: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     434: athrow
     435: aload_1
     436: getfield      #80                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
     439: astore_2
     440: aload_0
     441: aload_2
     442: aload_0
     443: getfield      #11                 // Field origin:Lorg/xbill/DNS/Name;
     446: invokespecial #91                 // Method parseName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
     449: astore_3
     450: aload_0
     451: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     454: ifnull        479
     457: aload_3
     458: aload_0
     459: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     462: invokevirtual #79                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
     465: invokevirtual #100                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
     468: ifeq          479
     471: aload_0
     472: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     475: invokevirtual #79                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
     478: astore_3
     479: aload_0
     480: invokespecial #54                 // Method parseTTLClassAndType:()V
     483: aload_0
     484: aload_3
     485: aload_0
     486: getfield      #32                 // Field currentType:I
     489: aload_0
     490: getfield      #26                 // Field currentDClass:I
     493: aload_0
     494: getfield      #27                 // Field currentTTL:J
     497: aload_0
     498: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
     501: aload_0
     502: getfield      #11                 // Field origin:Lorg/xbill/DNS/Name;
     505: invokestatic  #101                // Method org/xbill/DNS/Record.fromString:(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;
     508: putfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     511: aload_0
     512: getfield      #40                 // Field needSOATTL:Z
     515: ifeq          550
     518: aload_0
     519: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     522: checkcast     #102                // class org/xbill/DNS/SOARecord
     525: invokevirtual #103                // Method org/xbill/DNS/SOARecord.getMinimum:()J
     528: lstore        4
     530: aload_0
     531: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     534: lload         4
     536: invokevirtual #104                // Method org/xbill/DNS/Record.setTTL:(J)V
     539: aload_0
     540: lload         4
     542: putfield      #12                 // Field defaultTTL:J
     545: aload_0
     546: iconst_0
     547: putfield      #40                 // Field needSOATTL:Z
     550: aload_0
     551: getfield      #2                  // Field last:Lorg/xbill/DNS/Record;
     554: areturn

  public org.xbill.DNS.Record nextRecord() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #105                // Method _nextRecord:()Lorg/xbill/DNS/Record;
       6: astore_1
       7: aload_1
       8: ifnonnull     35
      11: aload_0
      12: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      15: invokevirtual #106                // Method org/xbill/DNS/Tokenizer.close:()V
      18: goto          35
      21: astore_2
      22: aload_1
      23: ifnonnull     33
      26: aload_0
      27: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      30: invokevirtual #106                // Method org/xbill/DNS/Tokenizer.close:()V
      33: aload_2
      34: athrow
      35: aload_1
      36: areturn
    Exception table:
       from    to  target type
           2     7    21   any
          21    22    21   any

  public void expandGenerate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifne          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #98                 // Field noExpandGenerate:Z
      13: return

  public java.util.Iterator generators();
    Code:
       0: aload_0
       1: getfield      #64                 // Field generators:Ljava/util/List;
       4: ifnull        20
       7: aload_0
       8: getfield      #64                 // Field generators:Ljava/util/List;
      11: invokestatic  #107                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      14: invokeinterface #108,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: areturn
      20: getstatic     #109                // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      23: invokeinterface #108,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: areturn

  protected void finalize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
       4: ifnull        14
       7: aload_0
       8: getfield      #10                 // Field st:Lorg/xbill/DNS/Tokenizer;
      11: invokevirtual #106                // Method org/xbill/DNS/Tokenizer.close:()V
      14: return
}
