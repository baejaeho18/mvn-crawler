Compiled from "EDNSOption.java"
public abstract class org.xbill.DNS.EDNSOption {
  private final int code;

  public org.xbill.DNS.EDNSOption(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String code
       7: iload_1
       8: invokestatic  #3                  // Method org/xbill/DNS/Record.checkU16:(Ljava/lang/String;I)I
      11: putfield      #4                  // Field code:I
      14: return

  public java.lang.String toString();
    Code:
       0: new           #5                  // class java/lang/StringBuffer
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #7                  // String {
      11: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field code:I
      20: invokestatic  #9                  // Method org/xbill/DNS/EDNSOption$Code.string:(I)Ljava/lang/String;
      23: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: pop
      27: aload_1
      28: ldc           #10                 // String :
      30: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: pop
      34: aload_1
      35: aload_0
      36: invokevirtual #11                 // Method optionToString:()Ljava/lang/String;
      39: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: pop
      43: aload_1
      44: ldc           #12                 // String }
      46: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: pop
      50: aload_1
      51: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      54: areturn

  public int getCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field code:I
       4: ireturn

  byte[] getData();
    Code:
       0: new           #14                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #15                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #16                 // Method optionToWire:(Lorg/xbill/DNS/DNSOutput;)V
      13: aload_1
      14: invokevirtual #17                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      17: areturn

  abstract void optionFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;

  static org.xbill.DNS.EDNSOption fromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #19                 // Method org/xbill/DNS/DNSInput.remaining:()I
      14: iload_2
      15: if_icmpge     28
      18: new           #20                 // class org/xbill/DNS/WireParseException
      21: dup
      22: ldc           #21                 // String truncated option
      24: invokespecial #22                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.saveActive:()I
      32: istore_3
      33: aload_0
      34: iload_2
      35: invokevirtual #24                 // Method org/xbill/DNS/DNSInput.setActive:(I)V
      38: iload_1
      39: lookupswitch  { // 2
                     3: 64
                     8: 76
               default: 88
          }
      64: new           #25                 // class org/xbill/DNS/NSIDOption
      67: dup
      68: invokespecial #26                 // Method org/xbill/DNS/NSIDOption."<init>":()V
      71: astore        4
      73: goto          98
      76: new           #27                 // class org/xbill/DNS/ClientSubnetOption
      79: dup
      80: invokespecial #28                 // Method org/xbill/DNS/ClientSubnetOption."<init>":()V
      83: astore        4
      85: goto          98
      88: new           #29                 // class org/xbill/DNS/GenericEDNSOption
      91: dup
      92: iload_1
      93: invokespecial #30                 // Method org/xbill/DNS/GenericEDNSOption."<init>":(I)V
      96: astore        4
      98: aload         4
     100: aload_0
     101: invokevirtual #31                 // Method optionFromWire:(Lorg/xbill/DNS/DNSInput;)V
     104: aload_0
     105: iload_3
     106: invokevirtual #32                 // Method org/xbill/DNS/DNSInput.restoreActive:(I)V
     109: aload         4
     111: areturn

  public static org.xbill.DNS.EDNSOption fromWire(byte[]) throws java.io.IOException;
    Code:
       0: new           #33                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #34                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: invokestatic  #35                 // Method fromWire:(Lorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/EDNSOption;
      11: areturn

  abstract void optionToWire(org.xbill.DNS.DNSOutput);

  void toWire(org.xbill.DNS.DNSOutput);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field code:I
       5: invokevirtual #36                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: invokevirtual #37                 // Method org/xbill/DNS/DNSOutput.current:()I
      12: istore_2
      13: aload_1
      14: iconst_0
      15: invokevirtual #36                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      18: aload_0
      19: aload_1
      20: invokevirtual #16                 // Method optionToWire:(Lorg/xbill/DNS/DNSOutput;)V
      23: aload_1
      24: invokevirtual #37                 // Method org/xbill/DNS/DNSOutput.current:()I
      27: iload_2
      28: isub
      29: iconst_2
      30: isub
      31: istore_3
      32: aload_1
      33: iload_3
      34: iload_2
      35: invokevirtual #38                 // Method org/xbill/DNS/DNSOutput.writeU16At:(II)V
      38: return

  public byte[] toWire() throws java.io.IOException;
    Code:
       0: new           #14                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #15                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #39                 // Method toWire:(Lorg/xbill/DNS/DNSOutput;)V
      13: aload_1
      14: invokevirtual #17                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      17: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #40                 // class org/xbill/DNS/EDNSOption
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #40                 // class org/xbill/DNS/EDNSOption
      17: astore_2
      18: aload_0
      19: getfield      #4                  // Field code:I
      22: aload_2
      23: getfield      #4                  // Field code:I
      26: if_icmpeq     31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #41                 // Method getData:()[B
      35: aload_2
      36: invokevirtual #41                 // Method getData:()[B
      39: invokestatic  #42                 // Method java/util/Arrays.equals:([B[B)Z
      42: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method getData:()[B
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_1
      11: arraylength
      12: if_icmpge     35
      15: iload_2
      16: iload_2
      17: iconst_3
      18: ishl
      19: aload_1
      20: iload_3
      21: baload
      22: sipush        255
      25: iand
      26: iadd
      27: iadd
      28: istore_2
      29: iinc          3, 1
      32: goto          9
      35: iload_2
      36: ireturn

  abstract java.lang.String optionToString();
}
