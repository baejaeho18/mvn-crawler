Compiled from "NSEC3PARAMRecord.java"
public class org.xbill.DNS.NSEC3PARAMRecord extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private int hashAlg;

  private int flags;

  private int iterations;

  private byte[] salt;

  org.xbill.DNS.NSEC3PARAMRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/NSEC3PARAMRecord
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public org.xbill.DNS.NSEC3PARAMRecord(org.xbill.DNS.Name, int, long, int, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        51
       4: iload_2
       5: lload_3
       6: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #5                  // String hashAlg
      12: iload         5
      14: invokestatic  #6                  // Method checkU8:(Ljava/lang/String;I)I
      17: putfield      #7                  // Field hashAlg:I
      20: aload_0
      21: ldc           #8                  // String flags
      23: iload         6
      25: invokestatic  #6                  // Method checkU8:(Ljava/lang/String;I)I
      28: putfield      #9                  // Field flags:I
      31: aload_0
      32: ldc           #10                 // String iterations
      34: iload         7
      36: invokestatic  #11                 // Method checkU16:(Ljava/lang/String;I)I
      39: putfield      #12                 // Field iterations:I
      42: aload         8
      44: ifnull        95
      47: aload         8
      49: arraylength
      50: sipush        255
      53: if_icmple     66
      56: new           #13                 // class java/lang/IllegalArgumentException
      59: dup
      60: ldc           #14                 // String Invalid salt length
      62: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload         8
      68: arraylength
      69: ifle          95
      72: aload_0
      73: aload         8
      75: arraylength
      76: newarray       byte
      78: putfield      #16                 // Field salt:[B
      81: aload         8
      83: iconst_0
      84: aload_0
      85: getfield      #16                 // Field salt:[B
      88: iconst_0
      89: aload         8
      91: arraylength
      92: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      95: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU8:()I
       5: putfield      #7                  // Field hashAlg:I
       8: aload_0
       9: aload_1
      10: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU8:()I
      13: putfield      #9                  // Field flags:I
      16: aload_0
      17: aload_1
      18: invokevirtual #19                 // Method org/xbill/DNS/DNSInput.readU16:()I
      21: putfield      #12                 // Field iterations:I
      24: aload_1
      25: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU8:()I
      28: istore_2
      29: iload_2
      30: ifle          45
      33: aload_0
      34: aload_1
      35: iload_2
      36: invokevirtual #20                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      39: putfield      #16                 // Field salt:[B
      42: goto          50
      45: aload_0
      46: aconst_null
      47: putfield      #16                 // Field salt:[B
      50: return

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field hashAlg:I
       5: invokevirtual #21                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field flags:I
      13: invokevirtual #21                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #12                 // Field iterations:I
      21: invokevirtual #22                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      24: aload_0
      25: getfield      #16                 // Field salt:[B
      28: ifnull        51
      31: aload_1
      32: aload_0
      33: getfield      #16                 // Field salt:[B
      36: arraylength
      37: invokevirtual #21                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      40: aload_1
      41: aload_0
      42: getfield      #16                 // Field salt:[B
      45: invokevirtual #23                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      48: goto          56
      51: aload_1
      52: iconst_0
      53: invokevirtual #21                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      56: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
       5: putfield      #7                  // Field hashAlg:I
       8: aload_0
       9: aload_1
      10: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
      13: putfield      #9                  // Field flags:I
      16: aload_0
      17: aload_1
      18: invokevirtual #25                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
      21: putfield      #12                 // Field iterations:I
      24: aload_1
      25: invokevirtual #26                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      28: astore_3
      29: aload_3
      30: ldc           #27                 // String -
      32: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          46
      38: aload_0
      39: aconst_null
      40: putfield      #16                 // Field salt:[B
      43: goto          76
      46: aload_1
      47: invokevirtual #29                 // Method org/xbill/DNS/Tokenizer.unget:()V
      50: aload_0
      51: aload_1
      52: invokevirtual #30                 // Method org/xbill/DNS/Tokenizer.getHexString:()[B
      55: putfield      #16                 // Field salt:[B
      58: aload_0
      59: getfield      #16                 // Field salt:[B
      62: arraylength
      63: sipush        255
      66: if_icmple     76
      69: aload_1
      70: ldc           #31                 // String salt value too long
      72: invokevirtual #32                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      75: athrow
      76: return

  java.lang.String rrToString();
    Code:
       0: new           #33                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field hashAlg:I
      13: invokevirtual #35                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: bipush        32
      20: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #9                  // Field flags:I
      29: invokevirtual #35                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      32: pop
      33: aload_1
      34: bipush        32
      36: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #12                 // Field iterations:I
      45: invokevirtual #35                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      48: pop
      49: aload_1
      50: bipush        32
      52: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      55: pop
      56: aload_0
      57: getfield      #16                 // Field salt:[B
      60: ifnonnull     73
      63: aload_1
      64: bipush        45
      66: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      69: pop
      70: goto          85
      73: aload_1
      74: aload_0
      75: getfield      #16                 // Field salt:[B
      78: invokestatic  #37                 // Method org/xbill/DNS/utils/base16.toString:([B)Ljava/lang/String;
      81: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: pop
      85: aload_1
      86: invokevirtual #39                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      89: areturn

  public int getHashAlgorithm();
    Code:
       0: aload_0
       1: getfield      #7                  // Field hashAlg:I
       4: ireturn

  public int getFlags();
    Code:
       0: aload_0
       1: getfield      #9                  // Field flags:I
       4: ireturn

  public int getIterations();
    Code:
       0: aload_0
       1: getfield      #12                 // Field iterations:I
       4: ireturn

  public byte[] getSalt();
    Code:
       0: aload_0
       1: getfield      #16                 // Field salt:[B
       4: areturn

  public byte[] hashName(org.xbill.DNS.Name) throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field hashAlg:I
       5: aload_0
       6: getfield      #12                 // Field iterations:I
       9: aload_0
      10: getfield      #16                 // Field salt:[B
      13: invokestatic  #40                 // Method org/xbill/DNS/NSEC3Record.hashName:(Lorg/xbill/DNS/Name;II[B)[B
      16: areturn
}
