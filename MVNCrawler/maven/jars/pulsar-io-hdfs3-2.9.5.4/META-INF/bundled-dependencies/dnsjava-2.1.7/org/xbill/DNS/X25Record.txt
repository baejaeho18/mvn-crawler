Compiled from "X25Record.java"
public class org.xbill.DNS.X25Record extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private byte[] address;

  org.xbill.DNS.X25Record();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/X25Record
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  private static final byte[] checkAndConvertAddress(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/String.length:()I
       4: istore_1
       5: iload_1
       6: newarray       byte
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_1
      13: if_icmpge     45
      16: aload_0
      17: iload_3
      18: invokevirtual #5                  // Method java/lang/String.charAt:(I)C
      21: istore        4
      23: iload         4
      25: invokestatic  #6                  // Method java/lang/Character.isDigit:(C)Z
      28: ifne          33
      31: aconst_null
      32: areturn
      33: aload_2
      34: iload_3
      35: iload         4
      37: i2b
      38: bastore
      39: iinc          3, 1
      42: goto          11
      45: aload_2
      46: areturn

  public org.xbill.DNS.X25Record(org.xbill.DNS.Name, int, long, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        19
       4: iload_2
       5: lload_3
       6: invokespecial #7                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: aload         5
      12: invokestatic  #8                  // Method checkAndConvertAddress:(Ljava/lang/String;)[B
      15: putfield      #9                  // Field address:[B
      18: aload_0
      19: getfield      #9                  // Field address:[B
      22: ifnonnull     53
      25: new           #10                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #11                 // class java/lang/StringBuffer
      32: dup
      33: invokespecial #12                 // Method java/lang/StringBuffer."<init>":()V
      36: ldc           #13                 // String invalid PSDN address
      38: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: aload         5
      43: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      49: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method org/xbill/DNS/DNSInput.readCountedString:()[B
       5: putfield      #9                  // Field address:[B
       8: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokestatic  #8                  // Method checkAndConvertAddress:(Ljava/lang/String;)[B
      10: putfield      #9                  // Field address:[B
      13: aload_0
      14: getfield      #9                  // Field address:[B
      17: ifnonnull     44
      20: aload_1
      21: new           #11                 // class java/lang/StringBuffer
      24: dup
      25: invokespecial #12                 // Method java/lang/StringBuffer."<init>":()V
      28: ldc           #13                 // String invalid PSDN address
      30: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: aload_3
      34: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      40: invokevirtual #19                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      43: athrow
      44: return

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #9                  // Field address:[B
       4: iconst_0
       5: invokestatic  #20                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field address:[B
       5: invokevirtual #21                 // Method org/xbill/DNS/DNSOutput.writeCountedString:([B)V
       8: return

  java.lang.String rrToString();
    Code:
       0: aload_0
       1: getfield      #9                  // Field address:[B
       4: iconst_1
       5: invokestatic  #20                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn
}
