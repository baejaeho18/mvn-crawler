Compiled from "APLRecord.java"
public class org.xbill.DNS.APLRecord extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private java.util.List elements;

  org.xbill.DNS.APLRecord();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #3                  // class org/xbill/DNS/APLRecord
       3: dup
       4: invokespecial #4                  // Method "<init>":()V
       7: areturn

  private static boolean validatePrefixLength(int, int);
    Code:
       0: iload_1
       1: iflt          11
       4: iload_1
       5: sipush        256
       8: if_icmplt     13
      11: iconst_0
      12: ireturn
      13: iload_0
      14: iconst_1
      15: if_icmpne     24
      18: iload_1
      19: bipush        32
      21: if_icmpgt     36
      24: iload_0
      25: iconst_2
      26: if_icmpne     38
      29: iload_1
      30: sipush        128
      33: if_icmple     38
      36: iconst_0
      37: ireturn
      38: iconst_1
      39: ireturn

  public org.xbill.DNS.APLRecord(org.xbill.DNS.Name, int, long, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        42
       4: iload_2
       5: lload_3
       6: invokespecial #5                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: new           #6                  // class java/util/ArrayList
      13: dup
      14: aload         5
      16: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      21: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      24: putfield      #9                  // Field elements:Ljava/util/List;
      27: aload         5
      29: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore        6
      36: aload         6
      38: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          123
      46: aload         6
      48: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: astore        7
      55: aload         7
      57: instanceof    #13                 // class org/xbill/DNS/APLRecord$Element
      60: ifne          73
      63: new           #14                 // class java/lang/IllegalArgumentException
      66: dup
      67: ldc           #15                 // String illegal element
      69: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload         7
      75: checkcast     #13                 // class org/xbill/DNS/APLRecord$Element
      78: astore        8
      80: aload         8
      82: getfield      #17                 // Field org/xbill/DNS/APLRecord$Element.family:I
      85: iconst_1
      86: if_icmpeq     108
      89: aload         8
      91: getfield      #17                 // Field org/xbill/DNS/APLRecord$Element.family:I
      94: iconst_2
      95: if_icmpeq     108
      98: new           #14                 // class java/lang/IllegalArgumentException
     101: dup
     102: ldc           #18                 // String unknown family
     104: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: getfield      #9                  // Field elements:Ljava/util/List;
     112: aload         8
     114: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     119: pop
     120: goto          36
     123: return

  private static byte[] parseAddress(byte[], int) throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: if_icmple     16
       6: new           #20                 // class org/xbill/DNS/WireParseException
       9: dup
      10: ldc           #21                 // String invalid address length
      12: invokespecial #22                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: arraylength
      18: iload_1
      19: if_icmpne     24
      22: aload_0
      23: areturn
      24: iload_1
      25: newarray       byte
      27: astore_2
      28: aload_0
      29: iconst_0
      30: aload_2
      31: iconst_0
      32: aload_0
      33: arraylength
      34: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload_2
      38: areturn

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #6                  // class java/util/ArrayList
       4: dup
       5: iconst_1
       6: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
       9: putfield      #9                  // Field elements:Ljava/util/List;
      12: aload_1
      13: invokevirtual #24                 // Method org/xbill/DNS/DNSInput.remaining:()I
      16: ifeq          161
      19: aload_1
      20: invokevirtual #25                 // Method org/xbill/DNS/DNSInput.readU16:()I
      23: istore_2
      24: aload_1
      25: invokevirtual #26                 // Method org/xbill/DNS/DNSInput.readU8:()I
      28: istore_3
      29: aload_1
      30: invokevirtual #26                 // Method org/xbill/DNS/DNSInput.readU8:()I
      33: istore        4
      35: iload         4
      37: sipush        128
      40: iand
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: istore        5
      51: iload         4
      53: sipush        -129
      56: iand
      57: istore        4
      59: aload_1
      60: iload         4
      62: invokevirtual #27                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      65: astore        6
      67: iload_2
      68: iload_3
      69: invokestatic  #1                  // Method validatePrefixLength:(II)Z
      72: ifne          85
      75: new           #20                 // class org/xbill/DNS/WireParseException
      78: dup
      79: ldc           #28                 // String invalid prefix length
      81: invokespecial #22                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: iload_2
      86: iconst_1
      87: if_icmpeq     95
      90: iload_2
      91: iconst_2
      92: if_icmpne     130
      95: aload         6
      97: iload_2
      98: invokestatic  #29                 // Method org/xbill/DNS/Address.addressLength:(I)I
     101: invokestatic  #30                 // Method parseAddress:([BI)[B
     104: astore        6
     106: aload         6
     108: invokestatic  #31                 // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
     111: astore        8
     113: new           #13                 // class org/xbill/DNS/APLRecord$Element
     116: dup
     117: iload         5
     119: aload         8
     121: iload_3
     122: invokespecial #32                 // Method org/xbill/DNS/APLRecord$Element."<init>":(ZLjava/net/InetAddress;I)V
     125: astore        7
     127: goto          146
     130: new           #13                 // class org/xbill/DNS/APLRecord$Element
     133: dup
     134: iload_2
     135: iload         5
     137: aload         6
     139: iload_3
     140: aconst_null
     141: invokespecial #33                 // Method org/xbill/DNS/APLRecord$Element."<init>":(IZLjava/lang/Object;ILorg/xbill/DNS/APLRecord$1;)V
     144: astore        7
     146: aload_0
     147: getfield      #9                  // Field elements:Ljava/util/List;
     150: aload         7
     152: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     157: pop
     158: goto          12
     161: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #6                  // class java/util/ArrayList
       4: dup
       5: iconst_1
       6: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
       9: putfield      #9                  // Field elements:Ljava/util/List;
      12: aload_1
      13: invokevirtual #34                 // Method org/xbill/DNS/Tokenizer.get:()Lorg/xbill/DNS/Tokenizer$Token;
      16: astore_3
      17: aload_3
      18: invokevirtual #35                 // Method org/xbill/DNS/Tokenizer$Token.isString:()Z
      21: ifne          27
      24: goto          288
      27: iconst_0
      28: istore        4
      30: iconst_0
      31: istore        5
      33: iconst_0
      34: istore        6
      36: aload_3
      37: getfield      #36                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      40: astore        7
      42: iconst_0
      43: istore        8
      45: aload         7
      47: ldc           #37                 // String !
      49: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      52: ifeq          61
      55: iconst_1
      56: istore        4
      58: iconst_1
      59: istore        8
      61: aload         7
      63: bipush        58
      65: iload         8
      67: invokevirtual #39                 // Method java/lang/String.indexOf:(II)I
      70: istore        9
      72: iload         9
      74: ifge          84
      77: aload_1
      78: ldc           #40                 // String invalid address prefix element
      80: invokevirtual #41                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      83: athrow
      84: aload         7
      86: bipush        47
      88: iload         9
      90: invokevirtual #39                 // Method java/lang/String.indexOf:(II)I
      93: istore        10
      95: iload         10
      97: ifge          107
     100: aload_1
     101: ldc           #40                 // String invalid address prefix element
     103: invokevirtual #41                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     106: athrow
     107: aload         7
     109: iload         8
     111: iload         9
     113: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     116: astore        11
     118: aload         7
     120: iload         9
     122: iconst_1
     123: iadd
     124: iload         10
     126: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     129: astore        12
     131: aload         7
     133: iload         10
     135: iconst_1
     136: iadd
     137: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     140: astore        13
     142: aload         11
     144: invokestatic  #44                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     147: istore        5
     149: goto          161
     152: astore        14
     154: aload_1
     155: ldc           #46                 // String invalid family
     157: invokevirtual #41                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     160: athrow
     161: iload         5
     163: iconst_1
     164: if_icmpeq     180
     167: iload         5
     169: iconst_2
     170: if_icmpeq     180
     173: aload_1
     174: ldc           #18                 // String unknown family
     176: invokevirtual #41                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     179: athrow
     180: aload         13
     182: invokestatic  #44                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     185: istore        6
     187: goto          199
     190: astore        14
     192: aload_1
     193: ldc           #28                 // String invalid prefix length
     195: invokevirtual #41                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     198: athrow
     199: iload         5
     201: iload         6
     203: invokestatic  #1                  // Method validatePrefixLength:(II)Z
     206: ifne          216
     209: aload_1
     210: ldc           #28                 // String invalid prefix length
     212: invokevirtual #41                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     215: athrow
     216: aload         12
     218: iload         5
     220: invokestatic  #47                 // Method org/xbill/DNS/Address.toByteArray:(Ljava/lang/String;I)[B
     223: astore        14
     225: aload         14
     227: ifnonnull     255
     230: aload_1
     231: new           #48                 // class java/lang/StringBuffer
     234: dup
     235: invokespecial #49                 // Method java/lang/StringBuffer."<init>":()V
     238: ldc           #50                 // String invalid IP address
     240: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     243: aload         12
     245: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     248: invokevirtual #52                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     251: invokevirtual #41                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     254: athrow
     255: aload         14
     257: invokestatic  #31                 // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
     260: astore        15
     262: aload_0
     263: getfield      #9                  // Field elements:Ljava/util/List;
     266: new           #13                 // class org/xbill/DNS/APLRecord$Element
     269: dup
     270: iload         4
     272: aload         15
     274: iload         6
     276: invokespecial #32                 // Method org/xbill/DNS/APLRecord$Element."<init>":(ZLjava/net/InetAddress;I)V
     279: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     284: pop
     285: goto          12
     288: aload_1
     289: invokevirtual #53                 // Method org/xbill/DNS/Tokenizer.unget:()V
     292: return
    Exception table:
       from    to  target type
         142   149   152   Class java/lang/NumberFormatException
         180   187   190   Class java/lang/NumberFormatException

  java.lang.String rrToString();
    Code:
       0: new           #48                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #49                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field elements:Ljava/util/List;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          62
      27: aload_2
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #13                 // class org/xbill/DNS/APLRecord$Element
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokevirtual #54                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      42: pop
      43: aload_2
      44: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          59
      52: aload_1
      53: ldc           #55                 // String
      55: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: goto          18
      62: aload_1
      63: invokevirtual #52                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      66: areturn

  public java.util.List getElements();
    Code:
       0: aload_0
       1: getfield      #9                  // Field elements:Ljava/util/List;
       4: areturn

  private static int addressLength(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_1
       5: iload_1
       6: iflt          25
       9: aload_0
      10: iload_1
      11: baload
      12: ifeq          19
      15: iload_1
      16: iconst_1
      17: iadd
      18: ireturn
      19: iinc          1, -1
      22: goto          5
      25: iconst_0
      26: ireturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field elements:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          155
      21: aload         4
      23: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #13                 // class org/xbill/DNS/APLRecord$Element
      31: astore        5
      33: iconst_0
      34: istore        6
      36: aload         5
      38: getfield      #17                 // Field org/xbill/DNS/APLRecord$Element.family:I
      41: iconst_1
      42: if_icmpeq     54
      45: aload         5
      47: getfield      #17                 // Field org/xbill/DNS/APLRecord$Element.family:I
      50: iconst_2
      51: if_icmpne     81
      54: aload         5
      56: getfield      #56                 // Field org/xbill/DNS/APLRecord$Element.address:Ljava/lang/Object;
      59: checkcast     #57                 // class java/net/InetAddress
      62: astore        8
      64: aload         8
      66: invokevirtual #58                 // Method java/net/InetAddress.getAddress:()[B
      69: astore        7
      71: aload         7
      73: invokestatic  #59                 // Method addressLength:([B)I
      76: istore        6
      78: goto          99
      81: aload         5
      83: getfield      #56                 // Field org/xbill/DNS/APLRecord$Element.address:Ljava/lang/Object;
      86: checkcast     #60                 // class "[B"
      89: checkcast     #60                 // class "[B"
      92: astore        7
      94: aload         7
      96: arraylength
      97: istore        6
      99: iload         6
     101: istore        8
     103: aload         5
     105: getfield      #61                 // Field org/xbill/DNS/APLRecord$Element.negative:Z
     108: ifeq          119
     111: iload         8
     113: sipush        128
     116: ior
     117: istore        8
     119: aload_1
     120: aload         5
     122: getfield      #17                 // Field org/xbill/DNS/APLRecord$Element.family:I
     125: invokevirtual #62                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
     128: aload_1
     129: aload         5
     131: getfield      #63                 // Field org/xbill/DNS/APLRecord$Element.prefixLength:I
     134: invokevirtual #64                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     137: aload_1
     138: iload         8
     140: invokevirtual #64                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     143: aload_1
     144: aload         7
     146: iconst_0
     147: iload         6
     149: invokevirtual #65                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([BII)V
     152: goto          11
     155: return

  static boolean access$000(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #1                  // Method validatePrefixLength:(II)Z
       5: ireturn
}
