Compiled from "NXTRecord.java"
public class org.xbill.DNS.NXTRecord extends org.xbill.DNS.Record {
  private static final long serialVersionUID;

  private org.xbill.DNS.Name next;

  private java.util.BitSet bitmap;

  org.xbill.DNS.NXTRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  org.xbill.DNS.Record getObject();
    Code:
       0: new           #2                  // class org/xbill/DNS/NXTRecord
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public org.xbill.DNS.NXTRecord(org.xbill.DNS.Name, int, long, org.xbill.DNS.Name, java.util.BitSet);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        30
       4: iload_2
       5: lload_3
       6: invokespecial #4                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #5                  // String next
      12: aload         5
      14: invokestatic  #6                  // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      17: putfield      #7                  // Field next:Lorg/xbill/DNS/Name;
      20: aload_0
      21: aload         6
      23: putfield      #8                  // Field bitmap:Ljava/util/BitSet;
      26: return

  void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #9                  // class org/xbill/DNS/Name
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
       9: putfield      #7                  // Field next:Lorg/xbill/DNS/Name;
      12: aload_0
      13: new           #11                 // class java/util/BitSet
      16: dup
      17: invokespecial #12                 // Method java/util/BitSet."<init>":()V
      20: putfield      #8                  // Field bitmap:Ljava/util/BitSet;
      23: aload_1
      24: invokevirtual #13                 // Method org/xbill/DNS/DNSInput.remaining:()I
      27: istore_2
      28: iconst_0
      29: istore_3
      30: iload_3
      31: iload_2
      32: if_icmpge     90
      35: aload_1
      36: invokevirtual #14                 // Method org/xbill/DNS/DNSInput.readU8:()I
      39: istore        4
      41: iconst_0
      42: istore        5
      44: iload         5
      46: bipush        8
      48: if_icmpge     84
      51: iload         4
      53: iconst_1
      54: bipush        7
      56: iload         5
      58: isub
      59: ishl
      60: iand
      61: ifeq          78
      64: aload_0
      65: getfield      #8                  // Field bitmap:Ljava/util/BitSet;
      68: iload_3
      69: bipush        8
      71: imul
      72: iload         5
      74: iadd
      75: invokevirtual #15                 // Method java/util/BitSet.set:(I)V
      78: iinc          5, 1
      81: goto          44
      84: iinc          3, 1
      87: goto          30
      90: return

  void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #16                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       6: putfield      #7                  // Field next:Lorg/xbill/DNS/Name;
       9: aload_0
      10: new           #11                 // class java/util/BitSet
      13: dup
      14: invokespecial #12                 // Method java/util/BitSet."<init>":()V
      17: putfield      #8                  // Field bitmap:Ljava/util/BitSet;
      20: aload_1
      21: invokevirtual #17                 // Method org/xbill/DNS/Tokenizer.get:()Lorg/xbill/DNS/Tokenizer$Token;
      24: astore_3
      25: aload_3
      26: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer$Token.isString:()Z
      29: ifne          35
      32: goto          97
      35: aload_3
      36: getfield      #19                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      39: iconst_1
      40: invokestatic  #20                 // Method org/xbill/DNS/Type.value:(Ljava/lang/String;Z)I
      43: istore        4
      45: iload         4
      47: ifle          58
      50: iload         4
      52: sipush        128
      55: if_icmple     85
      58: aload_1
      59: new           #21                 // class java/lang/StringBuffer
      62: dup
      63: invokespecial #22                 // Method java/lang/StringBuffer."<init>":()V
      66: ldc           #23                 // String Invalid type:
      68: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      71: aload_3
      72: getfield      #19                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      75: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      81: invokevirtual #26                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      84: athrow
      85: aload_0
      86: getfield      #8                  // Field bitmap:Ljava/util/BitSet;
      89: iload         4
      91: invokevirtual #15                 // Method java/util/BitSet.set:(I)V
      94: goto          20
      97: aload_1
      98: invokevirtual #27                 // Method org/xbill/DNS/Tokenizer.unget:()V
     101: return

  java.lang.String rrToString();
    Code:
       0: new           #21                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field next:Lorg/xbill/DNS/Name;
      13: invokevirtual #28                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      16: pop
      17: aload_0
      18: getfield      #8                  // Field bitmap:Ljava/util/BitSet;
      21: invokevirtual #29                 // Method java/util/BitSet.length:()I
      24: istore_2
      25: iconst_0
      26: istore_3
      27: iload_3
      28: iload_2
      29: if_icmpge     67
      32: aload_0
      33: getfield      #8                  // Field bitmap:Ljava/util/BitSet;
      36: iload_3
      37: invokevirtual #30                 // Method java/util/BitSet.get:(I)Z
      40: ifeq          59
      43: aload_1
      44: ldc           #31                 // String
      46: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: pop
      50: aload_1
      51: iload_3
      52: invokestatic  #32                 // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
      55: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: iload_3
      60: iconst_1
      61: iadd
      62: i2s
      63: istore_3
      64: goto          27
      67: aload_1
      68: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      71: areturn

  public org.xbill.DNS.Name getNext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field next:Lorg/xbill/DNS/Name;
       4: areturn

  public java.util.BitSet getBitmap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bitmap:Ljava/util/BitSet;
       4: areturn

  void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field next:Lorg/xbill/DNS/Name;
       4: aload_1
       5: aconst_null
       6: iload_3
       7: invokevirtual #33                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      10: aload_0
      11: getfield      #8                  // Field bitmap:Ljava/util/BitSet;
      14: invokevirtual #29                 // Method java/util/BitSet.length:()I
      17: istore        4
      19: iconst_0
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         5
      27: iload         4
      29: if_icmpge     97
      32: iload         6
      34: aload_0
      35: getfield      #8                  // Field bitmap:Ljava/util/BitSet;
      38: iload         5
      40: invokevirtual #30                 // Method java/util/BitSet.get:(I)Z
      43: ifeq          59
      46: iconst_1
      47: bipush        7
      49: iload         5
      51: bipush        8
      53: irem
      54: isub
      55: ishl
      56: goto          60
      59: iconst_0
      60: ior
      61: istore        6
      63: iload         5
      65: bipush        8
      67: irem
      68: bipush        7
      70: if_icmpeq     82
      73: iload         5
      75: iload         4
      77: iconst_1
      78: isub
      79: if_icmpne     91
      82: aload_1
      83: iload         6
      85: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      88: iconst_0
      89: istore        6
      91: iinc          5, 1
      94: goto          25
      97: return
}
