Compiled from "Monitor.java"
public final class org.apache.curator.shaded.com.google.common.util.concurrent.Monitor {
  private final boolean fair;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard activeGuards;

  public org.apache.curator.shaded.com.google.common.util.concurrent.Monitor();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #22                 // Method "<init>":(Z)V
       5: return

  public org.apache.curator.shaded.com.google.common.util.concurrent.Monitor(boolean);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #28                 // Field activeGuards:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
       9: aload_0
      10: iload_1
      11: putfield      #30                 // Field fair:Z
      14: aload_0
      15: new           #32                 // class java/util/concurrent/locks/ReentrantLock
      18: dup
      19: iload_1
      20: invokespecial #33                 // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      23: putfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: return

  public void enter();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: return

  public void enterInterruptibly() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #44                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
       7: return

  public boolean enter(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: lload_1
       2: invokevirtual #51                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       5: lstore        4
       7: aload_0
       8: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      11: astore        6
      13: aload_0
      14: getfield      #30                 // Field fair:Z
      17: ifne          30
      20: aload         6
      22: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
      33: lload         4
      35: ladd
      36: lstore        7
      38: invokestatic  #66                 // Method java/lang/Thread.interrupted:()Z
      41: istore        9
      43: aload         6
      45: lload         4
      47: getstatic     #70                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      50: invokevirtual #72                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
      53: istore        10
      55: iload         9
      57: ifeq          66
      60: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      63: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
      66: iload         10
      68: ireturn
      69: astore        10
      71: iconst_1
      72: istore        9
      74: lload         7
      76: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
      79: lsub
      80: lstore        4
      82: goto          43
      85: astore        11
      87: iload         9
      89: ifeq          98
      92: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      95: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
      98: aload         11
     100: athrow
    Exception table:
       from    to  target type
          43    55    69   Class java/lang/InterruptedException
          43    55    85   any
          69    87    85   any

  public boolean enterInterruptibly(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: lload_1
       5: aload_3
       6: invokevirtual #72                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public boolean tryEnter();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
       7: ireturn

  public void enterWhen(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: astore_2
      21: aload_2
      22: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      25: istore_3
      26: aload_2
      27: invokevirtual #44                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      30: iconst_0
      31: istore        4
      33: aload_1
      34: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      37: ifne          46
      40: aload_0
      41: aload_1
      42: iload_3
      43: invokespecial #106                // Method await:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;Z)V
      46: iconst_1
      47: istore        4
      49: iload         4
      51: ifne          75
      54: aload_0
      55: invokevirtual #109                // Method leave:()V
      58: goto          75
      61: astore        5
      63: iload         4
      65: ifne          72
      68: aload_0
      69: invokevirtual #109                // Method leave:()V
      72: aload         5
      74: athrow
      75: return
    Exception table:
       from    to  target type
          33    49    61   any
          61    63    61   any

  public void enterWhenUninterruptibly(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: astore_2
      21: aload_2
      22: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      25: istore_3
      26: aload_2
      27: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      30: iconst_0
      31: istore        4
      33: aload_1
      34: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      37: ifne          46
      40: aload_0
      41: aload_1
      42: iload_3
      43: invokespecial #116                // Method awaitUninterruptibly:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;Z)V
      46: iconst_1
      47: istore        4
      49: iload         4
      51: ifne          75
      54: aload_0
      55: invokevirtual #109                // Method leave:()V
      58: goto          75
      61: astore        5
      63: iload         4
      65: ifne          72
      68: aload_0
      69: invokevirtual #109                // Method leave:()V
      72: aload         5
      74: athrow
      75: return
    Exception table:
       from    to  target type
          33    49    61   any
          61    63    61   any

  public boolean enterWhen(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #51                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: lstore        5
       8: aload_1
       9: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
      12: aload_0
      13: if_acmpeq     24
      16: new           #95                 // class java/lang/IllegalMonitorStateException
      19: dup
      20: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      28: astore        7
      30: aload         7
      32: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      35: istore        8
      37: aload_0
      38: getfield      #30                 // Field fair:Z
      41: ifne          52
      44: aload         7
      46: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
      49: ifne          81
      52: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
      55: lload         5
      57: ladd
      58: lstore        9
      60: aload         7
      62: lload_2
      63: aload         4
      65: invokevirtual #72                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
      68: ifne          73
      71: iconst_0
      72: ireturn
      73: lload         9
      75: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
      78: lsub
      79: lstore        5
      81: iconst_0
      82: istore        11
      84: iconst_1
      85: istore        12
      87: aload_1
      88: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      91: ifne          106
      94: aload_0
      95: aload_1
      96: lload         5
      98: iload         8
     100: invokespecial #121                // Method awaitNanos:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;JZ)Z
     103: ifeq          110
     106: iconst_1
     107: goto          111
     110: iconst_0
     111: istore        11
     113: iconst_0
     114: istore        12
     116: iload         11
     118: istore        13
     120: iload         11
     122: ifne          157
     125: iload         12
     127: ifeq          139
     130: iload         8
     132: ifne          139
     135: aload_0
     136: invokespecial #124                // Method signalNextWaiter:()V
     139: aload         7
     141: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     144: goto          157
     147: astore        14
     149: aload         7
     151: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     154: aload         14
     156: athrow
     157: iload         13
     159: ireturn
     160: astore        15
     162: iload         11
     164: ifne          199
     167: iload         12
     169: ifeq          181
     172: iload         8
     174: ifne          181
     177: aload_0
     178: invokespecial #124                // Method signalNextWaiter:()V
     181: aload         7
     183: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     186: goto          199
     189: astore        16
     191: aload         7
     193: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     196: aload         16
     198: athrow
     199: aload         15
     201: athrow
    Exception table:
       from    to  target type
         125   139   147   any
         147   149   147   any
          87   120   160   any
         167   181   189   any
         189   191   189   any
         160   162   160   any

  public boolean enterWhenUninterruptibly(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #51                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: lstore        5
       8: aload_1
       9: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
      12: aload_0
      13: if_acmpeq     24
      16: new           #95                 // class java/lang/IllegalMonitorStateException
      19: dup
      20: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      28: astore        7
      30: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
      33: lload         5
      35: ladd
      36: lstore        8
      38: aload         7
      40: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      43: istore        10
      45: invokestatic  #66                 // Method java/lang/Thread.interrupted:()Z
      48: istore        11
      50: aload_0
      51: getfield      #30                 // Field fair:Z
      54: ifne          65
      57: aload         7
      59: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
      62: ifne          123
      65: iconst_0
      66: istore        12
      68: aload         7
      70: lload         5
      72: getstatic     #70                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      75: invokevirtual #72                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
      78: istore        12
      80: iload         12
      82: ifne          102
      85: iconst_0
      86: istore        13
      88: iload         11
      90: ifeq          99
      93: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      96: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
      99: iload         13
     101: ireturn
     102: goto          110
     105: astore        13
     107: iconst_1
     108: istore        11
     110: lload         8
     112: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
     115: lsub
     116: lstore        5
     118: iload         12
     120: ifeq          68
     123: iconst_0
     124: istore        12
     126: aload_1
     127: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
     130: ifne          145
     133: aload_0
     134: aload_1
     135: lload         5
     137: iload         10
     139: invokespecial #121                // Method awaitNanos:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;JZ)Z
     142: ifeq          149
     145: iconst_1
     146: goto          150
     149: iconst_0
     150: dup
     151: istore        12
     153: istore        13
     155: iload         12
     157: ifne          165
     160: aload         7
     162: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     165: iload         11
     167: ifeq          176
     170: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     173: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
     176: iload         13
     178: ireturn
     179: astore        13
     181: iconst_1
     182: istore        11
     184: iconst_0
     185: istore        10
     187: lload         8
     189: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
     192: lsub
     193: lstore        5
     195: goto          126
     198: astore        14
     200: iload         12
     202: ifne          210
     205: aload         7
     207: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     210: aload         14
     212: athrow
     213: astore        15
     215: iload         11
     217: ifeq          226
     220: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     223: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
     226: aload         15
     228: athrow
    Exception table:
       from    to  target type
          68    88   105   Class java/lang/InterruptedException
         126   155   179   Class java/lang/InterruptedException
         126   155   198   any
         179   200   198   any
          50    88   213   any
         102   165   213   any
         179   215   213   any

  public boolean enterIf(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: astore_2
      21: aload_2
      22: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      25: iconst_0
      26: istore_3
      27: aload_1
      28: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      31: dup
      32: istore_3
      33: istore        4
      35: iload_3
      36: ifne          43
      39: aload_2
      40: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      43: iload         4
      45: ireturn
      46: astore        5
      48: iload_3
      49: ifne          56
      52: aload_2
      53: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      56: aload         5
      58: athrow
    Exception table:
       from    to  target type
          27    35    46   any
          46    48    46   any

  public boolean enterIfInterruptibly(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: astore_2
      21: aload_2
      22: invokevirtual #44                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      25: iconst_0
      26: istore_3
      27: aload_1
      28: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      31: dup
      32: istore_3
      33: istore        4
      35: iload_3
      36: ifne          43
      39: aload_2
      40: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      43: iload         4
      45: ireturn
      46: astore        5
      48: iload_3
      49: ifne          56
      52: aload_2
      53: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      56: aload         5
      58: athrow
    Exception table:
       from    to  target type
          27    35    46   any
          46    48    46   any

  public boolean enterIf(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: lload_2
      18: aload         4
      20: invokevirtual #135                // Method enter:(JLjava/util/concurrent/TimeUnit;)Z
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: iconst_0
      29: istore        5
      31: aload_1
      32: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      35: dup
      36: istore        5
      38: istore        6
      40: iload         5
      42: ifne          52
      45: aload_0
      46: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      49: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      52: iload         6
      54: ireturn
      55: astore        7
      57: iload         5
      59: ifne          69
      62: aload_0
      63: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      66: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      69: aload         7
      71: athrow
    Exception table:
       from    to  target type
          31    40    55   any
          55    57    55   any

  public boolean enterIfInterruptibly(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: astore        5
      22: aload         5
      24: lload_2
      25: aload         4
      27: invokevirtual #72                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
      30: ifne          35
      33: iconst_0
      34: ireturn
      35: iconst_0
      36: istore        6
      38: aload_1
      39: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      42: dup
      43: istore        6
      45: istore        7
      47: iload         6
      49: ifne          57
      52: aload         5
      54: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      57: iload         7
      59: ireturn
      60: astore        8
      62: iload         6
      64: ifne          72
      67: aload         5
      69: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      72: aload         8
      74: athrow
    Exception table:
       from    to  target type
          38    47    60   any
          60    62    60   any

  public boolean tryEnterIf(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: astore_2
      21: aload_2
      22: invokevirtual #55                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: iconst_0
      31: istore_3
      32: aload_1
      33: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      36: dup
      37: istore_3
      38: istore        4
      40: iload_3
      41: ifne          48
      44: aload_2
      45: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      48: iload         4
      50: ireturn
      51: astore        5
      53: iload_3
      54: ifne          61
      57: aload_2
      58: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      61: aload         5
      63: athrow
    Exception table:
       from    to  target type
          32    40    51   any
          51    53    51   any

  public void waitFor(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: aload_0
      14: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      17: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      20: iand
      21: ifne          32
      24: new           #95                 // class java/lang/IllegalMonitorStateException
      27: dup
      28: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      31: athrow
      32: aload_1
      33: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      36: ifne          45
      39: aload_0
      40: aload_1
      41: iconst_1
      42: invokespecial #106                // Method await:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;Z)V
      45: return

  public void waitForUninterruptibly(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: aload_0
      14: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      17: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      20: iand
      21: ifne          32
      24: new           #95                 // class java/lang/IllegalMonitorStateException
      27: dup
      28: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      31: athrow
      32: aload_1
      33: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      36: ifne          45
      39: aload_0
      40: aload_1
      41: iconst_1
      42: invokespecial #116                // Method awaitUninterruptibly:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;Z)V
      45: return

  public boolean waitFor(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #51                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: lstore        5
       8: aload_1
       9: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
      12: aload_0
      13: if_acmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: aload_0
      22: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      25: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      28: iand
      29: ifne          40
      32: new           #95                 // class java/lang/IllegalMonitorStateException
      35: dup
      36: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      39: athrow
      40: aload_1
      41: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      44: ifne          58
      47: aload_0
      48: aload_1
      49: lload         5
      51: iconst_1
      52: invokespecial #121                // Method awaitNanos:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;JZ)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  public boolean waitForUninterruptibly(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #51                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: lstore        5
       8: aload_1
       9: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
      12: aload_0
      13: if_acmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: aload_0
      22: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      25: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
      28: iand
      29: ifne          40
      32: new           #95                 // class java/lang/IllegalMonitorStateException
      35: dup
      36: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      39: athrow
      40: aload_1
      41: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      44: ifeq          49
      47: iconst_1
      48: ireturn
      49: iconst_1
      50: istore        7
      52: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
      55: lload         5
      57: ladd
      58: lstore        8
      60: invokestatic  #66                 // Method java/lang/Thread.interrupted:()Z
      63: istore        10
      65: aload_0
      66: aload_1
      67: lload         5
      69: iload         7
      71: invokespecial #121                // Method awaitNanos:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;JZ)Z
      74: istore        11
      76: iload         10
      78: ifeq          87
      81: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      84: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
      87: iload         11
      89: ireturn
      90: astore        11
      92: iconst_1
      93: istore        10
      95: aload_1
      96: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      99: ifeq          119
     102: iconst_1
     103: istore        12
     105: iload         10
     107: ifeq          116
     110: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     113: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
     116: iload         12
     118: ireturn
     119: iconst_0
     120: istore        7
     122: lload         8
     124: invokestatic  #61                 // Method java/lang/System.nanoTime:()J
     127: lsub
     128: lstore        5
     130: goto          65
     133: astore        13
     135: iload         10
     137: ifeq          146
     140: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     143: invokevirtual #79                 // Method java/lang/Thread.interrupt:()V
     146: aload         13
     148: athrow
    Exception table:
       from    to  target type
          65    76    90   Class java/lang/InterruptedException
          65    76   133   any
          90   105   133   any
         119   135   133   any

  public void leave();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_1
       5: aload_1
       6: invokevirtual #142                // Method java/util/concurrent/locks/ReentrantLock.getHoldCount:()I
       9: iconst_1
      10: if_icmpne     17
      13: aload_0
      14: invokespecial #124                // Method signalNextWaiter:()V
      17: aload_1
      18: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      21: goto          31
      24: astore_2
      25: aload_1
      26: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
      31: return
    Exception table:
       from    to  target type
           5    17    24   any
          24    25    24   any

  public boolean isFair();
    Code:
       0: aload_0
       1: getfield      #30                 // Field fair:Z
       4: ireturn

  public boolean isOccupied();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #147                // Method java/util/concurrent/locks/ReentrantLock.isLocked:()Z
       7: ireturn

  public boolean isOccupiedByCurrentThread();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #99                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
       7: ireturn

  public int getOccupiedDepth();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #142                // Method java/util/concurrent/locks/ReentrantLock.getHoldCount:()I
       7: ireturn

  public int getQueueLength();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #152                // Method java/util/concurrent/locks/ReentrantLock.getQueueLength:()I
       7: ireturn

  public boolean hasQueuedThreads();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #155                // Method java/util/concurrent/locks/ReentrantLock.hasQueuedThreads:()Z
       7: ireturn

  public boolean hasQueuedThread(java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: aload_1
       5: invokevirtual #159                // Method java/util/concurrent/locks/ReentrantLock.hasQueuedThread:(Ljava/lang/Thread;)Z
       8: ireturn

  public boolean hasWaiters(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #166                // Method getWaitQueueLength:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)I
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int getWaitQueueLength(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: getfield      #93                 // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.monitor:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor;
       4: aload_0
       5: if_acmpeq     16
       8: new           #95                 // class java/lang/IllegalMonitorStateException
      11: dup
      12: invokespecial #96                 // Method java/lang/IllegalMonitorStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      23: aload_1
      24: getfield      #170                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.waiterCount:I
      27: istore_2
      28: aload_0
      29: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      32: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      35: iload_2
      36: ireturn
      37: astore_3
      38: aload_0
      39: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      42: invokevirtual #127                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      45: aload_3
      46: athrow
    Exception table:
       from    to  target type
          23    28    37   any
          37    38    37   any

  private void signalNextWaiter();
    Code:
       0: aload_0
       1: getfield      #28                 // Field activeGuards:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
       4: astore_1
       5: aload_1
       6: ifnull        37
       9: aload_0
      10: aload_1
      11: invokespecial #172                // Method isSatisfied:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
      14: ifeq          29
      17: aload_1
      18: getfield      #176                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.condition:Ljava/util/concurrent/locks/Condition;
      21: invokeinterface #181,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      26: goto          37
      29: aload_1
      30: getfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      33: astore_1
      34: goto          5
      37: return

  private boolean isSatisfied(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
       4: ireturn
       5: astore_2
       6: aload_0
       7: invokespecial #187                // Method signalAllWaiters:()V
      10: aload_2
      11: invokestatic  #193                // Method org/apache/curator/shaded/com/google/common/base/Throwables.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      14: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/Throwable

  private void signalAllWaiters();
    Code:
       0: aload_0
       1: getfield      #28                 // Field activeGuards:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
       4: astore_1
       5: aload_1
       6: ifnull        26
       9: aload_1
      10: getfield      #176                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.condition:Ljava/util/concurrent/locks/Condition;
      13: invokeinterface #198,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      18: aload_1
      19: getfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      22: astore_1
      23: goto          5
      26: return

  private void beginWaitingFor(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: dup
       2: getfield      #170                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.waiterCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #170                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.waiterCount:I
      11: istore_2
      12: iload_2
      13: ifne          29
      16: aload_1
      17: aload_0
      18: getfield      #28                 // Field activeGuards:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      21: putfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      24: aload_0
      25: aload_1
      26: putfield      #28                 // Field activeGuards:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      29: return

  private void endWaitingFor(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard);
    Code:
       0: aload_1
       1: dup
       2: getfield      #170                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.waiterCount:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #170                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.waiterCount:I
      11: istore_2
      12: iload_2
      13: ifne          73
      16: aload_0
      17: getfield      #28                 // Field activeGuards:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      20: astore_3
      21: aconst_null
      22: astore        4
      24: aload_3
      25: aload_1
      26: if_acmpne     62
      29: aload         4
      31: ifnonnull     45
      34: aload_0
      35: aload_3
      36: getfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      39: putfield      #28                 // Field activeGuards:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      42: goto          54
      45: aload         4
      47: aload_3
      48: getfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      51: putfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      54: aload_3
      55: aconst_null
      56: putfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      59: goto          73
      62: aload_3
      63: astore        4
      65: aload_3
      66: getfield      #184                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.next:Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;
      69: astore_3
      70: goto          24
      73: return

  private void await(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, boolean) throws java.lang.InterruptedException;
    Code:
       0: iload_2
       1: ifeq          8
       4: aload_0
       5: invokespecial #124                // Method signalNextWaiter:()V
       8: aload_0
       9: aload_1
      10: invokespecial #205                // Method beginWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      13: aload_1
      14: getfield      #176                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.condition:Ljava/util/concurrent/locks/Condition;
      17: invokeinterface #207,  1          // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      22: aload_1
      23: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      26: ifeq          13
      29: aload_0
      30: aload_1
      31: invokespecial #209                // Method endWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      34: goto          45
      37: astore_3
      38: aload_0
      39: aload_1
      40: invokespecial #209                // Method endWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
          13    29    37   any
          37    38    37   any

  private void awaitUninterruptibly(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, boolean);
    Code:
       0: iload_2
       1: ifeq          8
       4: aload_0
       5: invokespecial #124                // Method signalNextWaiter:()V
       8: aload_0
       9: aload_1
      10: invokespecial #205                // Method beginWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      13: aload_1
      14: getfield      #176                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.condition:Ljava/util/concurrent/locks/Condition;
      17: invokeinterface #211,  1          // InterfaceMethod java/util/concurrent/locks/Condition.awaitUninterruptibly:()V
      22: aload_1
      23: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      26: ifeq          13
      29: aload_0
      30: aload_1
      31: invokespecial #209                // Method endWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      34: goto          45
      37: astore_3
      38: aload_0
      39: aload_1
      40: invokespecial #209                // Method endWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
          13    29    37   any
          37    38    37   any

  private boolean awaitNanos(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor$Guard, long, boolean) throws java.lang.InterruptedException;
    Code:
       0: iload         4
       2: ifeq          9
       5: aload_0
       6: invokespecial #124                // Method signalNextWaiter:()V
       9: aload_0
      10: aload_1
      11: invokespecial #205                // Method beginWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      14: lload_2
      15: lconst_0
      16: lcmp
      17: ifge          31
      20: iconst_0
      21: istore        5
      23: aload_0
      24: aload_1
      25: invokespecial #209                // Method endWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      28: iload         5
      30: ireturn
      31: aload_1
      32: getfield      #176                // Field org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.condition:Ljava/util/concurrent/locks/Condition;
      35: lload_2
      36: invokeinterface #213,  3          // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      41: lstore_2
      42: aload_1
      43: invokevirtual #102                // Method org/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard.isSatisfied:()Z
      46: ifeq          14
      49: iconst_1
      50: istore        5
      52: aload_0
      53: aload_1
      54: invokespecial #209                // Method endWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      57: iload         5
      59: ireturn
      60: astore        6
      62: aload_0
      63: aload_1
      64: invokespecial #209                // Method endWaitingFor:(Lorg/apache/curator/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
      67: aload         6
      69: athrow
    Exception table:
       from    to  target type
          14    23    60   any
          31    52    60   any
          60    62    60   any

  static java.util.concurrent.locks.ReentrantLock access$000(org.apache.curator.shaded.com.google.common.util.concurrent.Monitor);
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: areturn
}
