Compiled from "SleepingRetry.java"
abstract class org.apache.curator.retry.SleepingRetry implements org.apache.curator.RetryPolicy {
  private final int n;

  protected org.apache.curator.retry.SleepingRetry(int);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #16                 // Field n:I
       9: return

  public int getN();
    Code:
       0: aload_0
       1: getfield      #16                 // Field n:I
       4: ireturn

  public boolean allowRetry(int, long, org.apache.curator.RetrySleeper);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #16                 // Field n:I
       5: if_icmpge     39
       8: aload         4
      10: aload_0
      11: iload_1
      12: lload_2
      13: invokevirtual #28                 // Method getSleepTimeMs:(IJ)J
      16: getstatic     #34                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      19: invokeinterface #40,  4           // InterfaceMethod org/apache/curator/RetrySleeper.sleepFor:(JLjava/util/concurrent/TimeUnit;)V
      24: goto          37
      27: astore        5
      29: invokestatic  #46                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: invokevirtual #49                 // Method java/lang/Thread.interrupt:()V
      35: iconst_0
      36: ireturn
      37: iconst_1
      38: ireturn
      39: iconst_0
      40: ireturn
    Exception table:
       from    to  target type
           8    24    27   Class java/lang/InterruptedException

  protected abstract long getSleepTimeMs(int, long);
}
