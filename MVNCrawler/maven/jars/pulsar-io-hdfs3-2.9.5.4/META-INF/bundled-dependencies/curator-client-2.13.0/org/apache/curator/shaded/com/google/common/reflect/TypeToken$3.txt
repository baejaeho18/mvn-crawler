Compiled from "TypeToken.java"
class org.apache.curator.shaded.com.google.common.reflect.TypeToken$3 extends org.apache.curator.shaded.com.google.common.reflect.TypeVisitor {
  final com.google.common.reflect.TypeToken this$0;

  org.apache.curator.shaded.com.google.common.reflect.TypeToken$3(com.google.common.reflect.TypeToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field this$0:Lcom/google/common/reflect/TypeToken;
       5: aload_0
       6: invokespecial #19                 // Method org/apache/curator/shaded/com/google/common/reflect/TypeVisitor."<init>":()V
       9: return

  void visitTypeVariable(java.lang.reflect.TypeVariable<?>);
    Code:
       0: new           #26                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: getfield      #16                 // Field this$0:Lcom/google/common/reflect/TypeToken;
      15: invokestatic  #33                 // Method com/google/common/reflect/TypeToken.access$400:(Lcom/google/common/reflect/TypeToken;)Ljava/lang/reflect/Type;
      18: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #39                 // String contains a type variable and is not safe for the operation
      23: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow

  void visitWildcardType(java.lang.reflect.WildcardType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #60,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
       7: invokevirtual #64                 // Method visit:([Ljava/lang/reflect/Type;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #67,  1           // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
      17: invokevirtual #64                 // Method visit:([Ljava/lang/reflect/Type;)V
      20: return

  void visitParameterizedType(java.lang.reflect.ParameterizedType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #75,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
       7: invokevirtual #64                 // Method visit:([Ljava/lang/reflect/Type;)V
      10: aload_0
      11: iconst_1
      12: anewarray     #77                 // class java/lang/reflect/Type
      15: dup
      16: iconst_0
      17: aload_1
      18: invokeinterface #81,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getOwnerType:()Ljava/lang/reflect/Type;
      23: aastore
      24: invokevirtual #64                 // Method visit:([Ljava/lang/reflect/Type;)V
      27: return

  void visitGenericArrayType(java.lang.reflect.GenericArrayType);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #77                 // class java/lang/reflect/Type
       5: dup
       6: iconst_0
       7: aload_1
       8: invokeinterface #89,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
      13: aastore
      14: invokevirtual #64                 // Method visit:([Ljava/lang/reflect/Type;)V
      17: return
}
