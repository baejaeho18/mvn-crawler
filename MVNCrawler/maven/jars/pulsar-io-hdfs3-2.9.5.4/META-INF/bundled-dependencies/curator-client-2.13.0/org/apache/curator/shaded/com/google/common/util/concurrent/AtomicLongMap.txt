Compiled from "AtomicLongMap.java"
public final class org.apache.curator.shaded.com.google.common.util.concurrent.AtomicLongMap<K> {
  private final java.util.concurrent.ConcurrentHashMap<K, java.util.concurrent.atomic.AtomicLong> map;

  private transient java.util.Map<K, java.lang.Long> asMap;

  private org.apache.curator.shaded.com.google.common.util.concurrent.AtomicLongMap(java.util.concurrent.ConcurrentHashMap<K, java.util.concurrent.atomic.AtomicLong>);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #31                 // Method org/apache/curator/shaded/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #33                 // class java/util/concurrent/ConcurrentHashMap
      12: putfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      15: return

  public static <K> org.apache.curator.shaded.com.google.common.util.concurrent.AtomicLongMap<K> create();
    Code:
       0: new           #2                  // class org/apache/curator/shaded/com/google/common/util/concurrent/AtomicLongMap
       3: dup
       4: new           #33                 // class java/util/concurrent/ConcurrentHashMap
       7: dup
       8: invokespecial #41                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      11: invokespecial #43                 // Method "<init>":(Ljava/util/concurrent/ConcurrentHashMap;)V
      14: areturn

  public static <K> org.apache.curator.shaded.com.google.common.util.concurrent.AtomicLongMap<K> create(java.util.Map<? extends K, ? extends java.lang.Long>);
    Code:
       0: invokestatic  #46                 // Method create:()Lorg/apache/curator/shaded/com/google/common/util/concurrent/AtomicLongMap;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #50                 // Method putAll:(Ljava/util/Map;)V
       9: aload_1
      10: areturn

  public long get(K);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: lconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      24: lreturn

  public long incrementAndGet(K);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_1
       3: invokevirtual #72                 // Method addAndGet:(Ljava/lang/Object;J)J
       6: lreturn

  public long decrementAndGet(K);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #74                 // long -1l
       5: invokevirtual #72                 // Method addAndGet:(Ljava/lang/Object;J)J
       8: lreturn

  public long addAndGet(K, long);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      11: astore        4
      13: aload         4
      15: ifnonnull     46
      18: aload_0
      19: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      26: dup
      27: lload_2
      28: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      31: invokevirtual #82                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      37: astore        4
      39: aload         4
      41: ifnonnull     46
      44: lload_2
      45: lreturn
      46: aload         4
      48: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      51: lstore        5
      53: lload         5
      55: lconst_0
      56: lcmp
      57: ifne          83
      60: aload_0
      61: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      64: aload_1
      65: aload         4
      67: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      70: dup
      71: lload_2
      72: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      75: invokevirtual #86                 // Method java/util/concurrent/ConcurrentHashMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      78: ifeq          0
      81: lload_2
      82: lreturn
      83: lload         5
      85: lload_2
      86: ladd
      87: lstore        7
      89: aload         4
      91: lload         5
      93: lload         7
      95: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      98: ifeq          104
     101: lload         7
     103: lreturn
     104: goto          46

  public long getAndIncrement(K);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_1
       3: invokevirtual #98                 // Method getAndAdd:(Ljava/lang/Object;J)J
       6: lreturn

  public long getAndDecrement(K);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #74                 // long -1l
       5: invokevirtual #98                 // Method getAndAdd:(Ljava/lang/Object;J)J
       8: lreturn

  public long getAndAdd(K, long);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      11: astore        4
      13: aload         4
      15: ifnonnull     46
      18: aload_0
      19: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      26: dup
      27: lload_2
      28: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      31: invokevirtual #82                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      37: astore        4
      39: aload         4
      41: ifnonnull     46
      44: lconst_0
      45: lreturn
      46: aload         4
      48: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      51: lstore        5
      53: lload         5
      55: lconst_0
      56: lcmp
      57: ifne          83
      60: aload_0
      61: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      64: aload_1
      65: aload         4
      67: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      70: dup
      71: lload_2
      72: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      75: invokevirtual #86                 // Method java/util/concurrent/ConcurrentHashMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      78: ifeq          0
      81: lconst_0
      82: lreturn
      83: lload         5
      85: lload_2
      86: ladd
      87: lstore        7
      89: aload         4
      91: lload         5
      93: lload         7
      95: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      98: ifeq          104
     101: lload         5
     103: lreturn
     104: goto          46

  public long put(K, long);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      11: astore        4
      13: aload         4
      15: ifnonnull     46
      18: aload_0
      19: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      26: dup
      27: lload_2
      28: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      31: invokevirtual #82                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      37: astore        4
      39: aload         4
      41: ifnonnull     46
      44: lconst_0
      45: lreturn
      46: aload         4
      48: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      51: lstore        5
      53: lload         5
      55: lconst_0
      56: lcmp
      57: ifne          83
      60: aload_0
      61: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      64: aload_1
      65: aload         4
      67: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      70: dup
      71: lload_2
      72: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      75: invokevirtual #86                 // Method java/util/concurrent/ConcurrentHashMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      78: ifeq          0
      81: lconst_0
      82: lreturn
      83: aload         4
      85: lload         5
      87: lload_2
      88: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      91: ifeq          97
      94: lload         5
      96: lreturn
      97: goto          46

  public void putAll(java.util.Map<? extends K, ? extends java.lang.Long>);
    Code:
       0: aload_1
       1: invokeinterface #104,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #110,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          57
      21: aload_2
      22: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #11                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #123,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #126,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #128                // class java/lang/Long
      47: invokevirtual #131                // Method java/lang/Long.longValue:()J
      50: invokevirtual #133                // Method put:(Ljava/lang/Object;J)J
      53: pop2
      54: goto          12
      57: return

  public long remove(K);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: lconst_0
      17: lreturn
      18: aload_2
      19: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      22: lstore_3
      23: lload_3
      24: lconst_0
      25: lcmp
      26: ifeq          38
      29: aload_2
      30: lload_3
      31: lconst_0
      32: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      35: ifeq          50
      38: aload_0
      39: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      42: aload_1
      43: aload_2
      44: invokevirtual #142                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      47: pop
      48: lload_3
      49: lreturn
      50: goto          18

  public void removeAllZeros();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #146                // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/Set;
       7: invokeinterface #110,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          67
      22: aload_1
      23: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore_2
      29: aload_0
      30: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      33: aload_2
      34: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      40: astore_3
      41: aload_3
      42: ifnull        64
      45: aload_3
      46: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      49: lconst_0
      50: lcmp
      51: ifne          64
      54: aload_0
      55: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      58: aload_2
      59: aload_3
      60: invokevirtual #142                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      63: pop
      64: goto          13
      67: return

  public long sum();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       6: invokevirtual #151                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       9: invokeinterface #154,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          46
      24: aload_3
      25: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      33: astore        4
      35: lload_1
      36: aload         4
      38: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      41: ladd
      42: lstore_1
      43: goto          15
      46: lload_1
      47: lreturn

  public java.util.Map<K, java.lang.Long> asMap();
    Code:
       0: aload_0
       1: getfield      #158                // Field asMap:Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: invokespecial #161                // Method createAsMap:()Ljava/util/Map;
      14: dup_x1
      15: putfield      #158                // Field asMap:Ljava/util/Map;
      18: goto          22
      21: aload_1
      22: areturn

  private java.util.Map<K, java.lang.Long> createAsMap();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: new           #9                  // class org/apache/curator/shaded/com/google/common/util/concurrent/AtomicLongMap$1
       7: dup
       8: aload_0
       9: invokespecial #164                // Method org/apache/curator/shaded/com/google/common/util/concurrent/AtomicLongMap$1."<init>":(Lorg/apache/curator/shaded/com/google/common/util/concurrent/AtomicLongMap;)V
      12: invokestatic  #170                // Method org/apache/curator/shaded/com/google/common/collect/Maps.transformValues:(Ljava/util/Map;Lcom/google/common/base/Function;)Ljava/util/Map;
      15: invokestatic  #176                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      18: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #180                // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #184                // Method java/util/concurrent/ConcurrentHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #187                // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #190                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #194                // Method java/util/concurrent/ConcurrentHashMap.toString:()Ljava/lang/String;
       7: areturn

  long putIfAbsent(K, long);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      11: astore        4
      13: aload         4
      15: ifnonnull     46
      18: aload_0
      19: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      26: dup
      27: lload_2
      28: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      31: invokevirtual #82                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      37: astore        4
      39: aload         4
      41: ifnonnull     46
      44: lconst_0
      45: lreturn
      46: aload         4
      48: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      51: lstore        5
      53: lload         5
      55: lconst_0
      56: lcmp
      57: ifne          83
      60: aload_0
      61: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      64: aload_1
      65: aload         4
      67: new           #59                 // class java/util/concurrent/atomic/AtomicLong
      70: dup
      71: lload_2
      72: invokespecial #78                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      75: invokevirtual #86                 // Method java/util/concurrent/ConcurrentHashMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      78: ifeq          0
      81: lconst_0
      82: lreturn
      83: lload         5
      85: lreturn

  boolean replace(K, long, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifne          24
       6: aload_0
       7: aload_1
       8: lload         4
      10: invokevirtual #197                // Method putIfAbsent:(Ljava/lang/Object;J)J
      13: lconst_0
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      28: aload_1
      29: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      35: astore        6
      37: aload         6
      39: ifnonnull     46
      42: iconst_0
      43: goto          54
      46: aload         6
      48: lload_2
      49: lload         4
      51: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      54: ireturn

  boolean remove(K, long);
    Code:
       0: aload_0
       1: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class java/util/concurrent/atomic/AtomicLong
      11: astore        4
      13: aload         4
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload         4
      22: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      25: lstore        5
      27: lload         5
      29: lload_2
      30: lcmp
      31: ifeq          36
      34: iconst_0
      35: ireturn
      36: lload         5
      38: lconst_0
      39: lcmp
      40: ifeq          54
      43: aload         4
      45: lload         5
      47: lconst_0
      48: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      51: ifeq          67
      54: aload_0
      55: getfield      #35                 // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      58: aload_1
      59: aload         4
      61: invokevirtual #142                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: pop
      65: iconst_1
      66: ireturn
      67: iconst_0
      68: ireturn
}
