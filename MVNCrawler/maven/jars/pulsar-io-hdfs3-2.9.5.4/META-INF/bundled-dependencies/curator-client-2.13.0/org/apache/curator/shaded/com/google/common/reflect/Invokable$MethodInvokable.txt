Compiled from "Invokable.java"
class org.apache.curator.shaded.com.google.common.reflect.Invokable$MethodInvokable<T> extends org.apache.curator.shaded.com.google.common.reflect.Invokable<T, java.lang.Object> {
  final java.lang.reflect.Method method;

  org.apache.curator.shaded.com.google.common.reflect.Invokable$MethodInvokable(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/apache/curator/shaded/com/google/common/reflect/Invokable."<init>":(Ljava/lang/reflect/AccessibleObject;)V
       5: aload_0
       6: aload_1
       7: putfield      #16                 // Field method:Ljava/lang/reflect/Method;
      10: return

  final java.lang.Object invokeInternal(java.lang.Object, java.lang.Object[]) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Ljava/lang/reflect/Method;
       4: aload_1
       5: aload_2
       6: invokevirtual #31                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  java.lang.reflect.Type getGenericReturnType();
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #39                 // Method java/lang/reflect/Method.getGenericReturnType:()Ljava/lang/reflect/Type;
       7: areturn

  java.lang.reflect.Type[] getGenericParameterTypes();
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #43                 // Method java/lang/reflect/Method.getGenericParameterTypes:()[Ljava/lang/reflect/Type;
       7: areturn

  java.lang.reflect.Type[] getGenericExceptionTypes();
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #46                 // Method java/lang/reflect/Method.getGenericExceptionTypes:()[Ljava/lang/reflect/Type;
       7: areturn

  final java.lang.annotation.Annotation[][] getParameterAnnotations();
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #50                 // Method java/lang/reflect/Method.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
       7: areturn

  public final java.lang.reflect.TypeVariable<?>[] getTypeParameters();
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #54                 // Method java/lang/reflect/Method.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;
       7: areturn

  public final boolean isOverridable();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isFinal:()Z
       4: ifne          38
       7: aload_0
       8: invokevirtual #62                 // Method isPrivate:()Z
      11: ifne          38
      14: aload_0
      15: invokevirtual #65                 // Method isStatic:()Z
      18: ifne          38
      21: aload_0
      22: invokevirtual #69                 // Method getDeclaringClass:()Ljava/lang/Class;
      25: invokevirtual #75                 // Method java/lang/Class.getModifiers:()I
      28: invokestatic  #80                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public final boolean isVarArgs();
    Code:
       0: aload_0
       1: getfield      #16                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #83                 // Method java/lang/reflect/Method.isVarArgs:()Z
       7: ireturn
}
