Compiled from "ExponentialBackoffRetry.java"
public class org.apache.curator.retry.ExponentialBackoffRetry extends org.apache.curator.retry.SleepingRetry {
  private static final org.slf4j.Logger log;

  private static final int MAX_RETRIES_LIMIT;

  private static final int DEFAULT_MAX_SLEEP_MS;

  private final java.util.Random random;

  private final int baseSleepTimeMs;

  private final int maxSleepMs;

  public org.apache.curator.retry.ExponentialBackoffRetry(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: ldc           #12                 // int 2147483647
       5: invokespecial #21                 // Method "<init>":(III)V
       8: return

  public org.apache.curator.retry.ExponentialBackoffRetry(int, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokestatic  #28                 // Method validateMaxRetries:(I)I
       5: invokespecial #31                 // Method org/apache/curator/retry/SleepingRetry."<init>":(I)V
       8: aload_0
       9: new           #33                 // class java/util/Random
      12: dup
      13: invokespecial #36                 // Method java/util/Random."<init>":()V
      16: putfield      #38                 // Field random:Ljava/util/Random;
      19: aload_0
      20: iload_1
      21: putfield      #40                 // Field baseSleepTimeMs:I
      24: aload_0
      25: iload_3
      26: putfield      #42                 // Field maxSleepMs:I
      29: return

  public int getBaseSleepTimeMs();
    Code:
       0: aload_0
       1: getfield      #40                 // Field baseSleepTimeMs:I
       4: ireturn

  protected long getSleepTimeMs(int, long);
    Code:
       0: aload_0
       1: getfield      #40                 // Field baseSleepTimeMs:I
       4: iconst_1
       5: aload_0
       6: getfield      #38                 // Field random:Ljava/util/Random;
       9: iconst_1
      10: iload_1
      11: iconst_1
      12: iadd
      13: ishl
      14: invokevirtual #50                 // Method java/util/Random.nextInt:(I)I
      17: invokestatic  #56                 // Method java/lang/Math.max:(II)I
      20: imul
      21: i2l
      22: lstore        4
      24: lload         4
      26: aload_0
      27: getfield      #42                 // Field maxSleepMs:I
      30: i2l
      31: lcmp
      32: ifle          77
      35: getstatic     #58                 // Field log:Lorg/slf4j/Logger;
      38: ldc           #60                 // String Sleep extension too large (%d). Pinning to %d
      40: iconst_2
      41: anewarray     #62                 // class java/lang/Object
      44: dup
      45: iconst_0
      46: lload         4
      48: invokestatic  #68                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_0
      55: getfield      #42                 // Field maxSleepMs:I
      58: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: invokeinterface #85,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      70: aload_0
      71: getfield      #42                 // Field maxSleepMs:I
      74: i2l
      75: lstore        4
      77: lload         4
      79: lreturn

  private static int validateMaxRetries(int);
    Code:
       0: iload_0
       1: bipush        29
       3: if_icmple     41
       6: getstatic     #58                 // Field log:Lorg/slf4j/Logger;
       9: ldc           #91                 // String maxRetries too large (%d). Pinning to %d
      11: iconst_2
      12: anewarray     #62                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: iload_0
      18: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aastore
      22: dup
      23: iconst_1
      24: bipush        29
      26: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokeinterface #85,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      38: bipush        29
      40: istore_0
      41: iload_0
      42: ireturn

  public boolean allowRetry(int, long, org.apache.curator.RetrySleeper);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: aload         4
       5: invokespecial #95                 // Method org/apache/curator/retry/SleepingRetry.allowRetry:(IJLorg/apache/curator/RetrySleeper;)Z
       8: ireturn

  public int getN();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method org/apache/curator/retry/SleepingRetry.getN:()I
       4: ireturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/curator/retry/ExponentialBackoffRetry
       2: invokestatic  #105                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #58                 // Field log:Lorg/slf4j/Logger;
       8: return
}
