Compiled from "OutstandingOps.java"
class org.apache.curator.framework.recipes.cache.OutstandingOps {
  private final java.util.concurrent.atomic.AtomicReference<java.lang.Runnable> completionProc;

  private final java.util.concurrent.atomic.AtomicLong count;

  private volatile boolean active;

  org.apache.curator.framework.recipes.cache.OutstandingOps(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #24                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: iconst_1
      18: putfield      #26                 // Field active:Z
      21: aload_0
      22: new           #28                 // class java/util/concurrent/atomic/AtomicReference
      25: dup
      26: aload_1
      27: invokespecial #31                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      30: putfield      #33                 // Field completionProc:Ljava/util/concurrent/atomic/AtomicReference;
      33: return

  void increment();
    Code:
       0: aload_0
       1: getfield      #26                 // Field active:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #24                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      14: pop2
      15: return

  void decrement();
    Code:
       0: aload_0
       1: getfield      #26                 // Field active:Z
       4: ifeq          46
       7: aload_0
       8: getfield      #24                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      14: lconst_0
      15: lcmp
      16: ifne          46
      19: aload_0
      20: getfield      #33                 // Field completionProc:Ljava/util/concurrent/atomic/AtomicReference;
      23: aconst_null
      24: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #51                 // class java/lang/Runnable
      30: astore_1
      31: aload_1
      32: ifnull        46
      35: aload_0
      36: iconst_0
      37: putfield      #26                 // Field active:Z
      40: aload_1
      41: invokeinterface #54,  1           // InterfaceMethod java/lang/Runnable.run:()V
      46: return
}
