Compiled from "RMProxy.java"
public class org.apache.hadoop.yarn.client.RMProxy<T> {
  private static final org.apache.commons.logging.Log LOG;

  private org.apache.hadoop.security.UserGroupInformation user;

  protected org.apache.hadoop.yarn.client.RMProxy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
       8: putfield      #3                  // Field user:Lorg/apache/hadoop/security/UserGroupInformation;
      11: goto          26
      14: astore_1
      15: new           #5                  // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      18: dup
      19: ldc           #6                  // String Unable to determine user
      21: aload_1
      22: invokespecial #7                  // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: athrow
      26: return
    Exception table:
       from    to  target type
           4    11    14   Class java/io/IOException

  public void checkAllowedProtocols(java.lang.Class<?>);
    Code:
       0: return

  public java.net.InetSocketAddress getRMAddress(org.apache.hadoop.yarn.conf.YarnConfiguration, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String This method should be invoked from an instance of ClientRMProxy or ServerRMProxy
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected static <T> T createRMProxy(org.apache.hadoop.conf.Configuration, java.lang.Class<T>, org.apache.hadoop.yarn.client.RMProxy<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #11                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
       4: ifeq          14
       7: aload_0
       8: checkcast     #11                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
      11: goto          22
      14: new           #11                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
      17: dup
      18: aload_0
      19: invokespecial #12                 // Method org/apache/hadoop/yarn/conf/YarnConfiguration."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      22: astore_3
      23: aload_3
      24: aload_3
      25: invokestatic  #13                 // Method org/apache/hadoop/yarn/conf/HAUtil.isHAEnabled:(Lorg/apache/hadoop/conf/Configuration;)Z
      28: ifne          38
      31: aload_3
      32: invokestatic  #14                 // Method org/apache/hadoop/yarn/conf/HAUtil.isFederationFailoverEnabled:(Lorg/apache/hadoop/conf/Configuration;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokestatic  #15                 // Method createRetryPolicy:(Lorg/apache/hadoop/conf/Configuration;Z)Lorg/apache/hadoop/io/retry/RetryPolicy;
      46: astore        4
      48: aload_3
      49: aload_1
      50: aload_2
      51: aload         4
      53: invokestatic  #16                 // Method newProxyInstance:(Lorg/apache/hadoop/yarn/conf/YarnConfiguration;Ljava/lang/Class;Lorg/apache/hadoop/yarn/client/RMProxy;Lorg/apache/hadoop/io/retry/RetryPolicy;)Ljava/lang/Object;
      56: areturn

  protected static <T> T createRMProxy(org.apache.hadoop.conf.Configuration, java.lang.Class<T>, org.apache.hadoop.yarn.client.RMProxy<T>, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #11                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
       4: ifeq          14
       7: aload_0
       8: checkcast     #11                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
      11: goto          22
      14: new           #11                 // class org/apache/hadoop/yarn/conf/YarnConfiguration
      17: dup
      18: aload_0
      19: invokespecial #12                 // Method org/apache/hadoop/yarn/conf/YarnConfiguration."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      22: astore        7
      24: aload         7
      26: lload_3
      27: lload         5
      29: aload         7
      31: invokestatic  #13                 // Method org/apache/hadoop/yarn/conf/HAUtil.isHAEnabled:(Lorg/apache/hadoop/conf/Configuration;)Z
      34: invokestatic  #17                 // Method createRetryPolicy:(Lorg/apache/hadoop/conf/Configuration;JJZ)Lorg/apache/hadoop/io/retry/RetryPolicy;
      37: astore        8
      39: aload         7
      41: aload_1
      42: aload_2
      43: aload         8
      45: invokestatic  #16                 // Method newProxyInstance:(Lorg/apache/hadoop/yarn/conf/YarnConfiguration;Ljava/lang/Class;Lorg/apache/hadoop/yarn/client/RMProxy;Lorg/apache/hadoop/io/retry/RetryPolicy;)Ljava/lang/Object;
      48: areturn

  private static <T> T newProxyInstance(org.apache.hadoop.yarn.conf.YarnConfiguration, java.lang.Class<T>, org.apache.hadoop.yarn.client.RMProxy<T>, org.apache.hadoop.io.retry.RetryPolicy) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method org/apache/hadoop/yarn/conf/HAUtil.isHAEnabled:(Lorg/apache/hadoop/conf/Configuration;)Z
       4: ifne          14
       7: aload_0
       8: invokestatic  #18                 // Method org/apache/hadoop/yarn/conf/HAUtil.isFederationEnabled:(Lorg/apache/hadoop/conf/Configuration;)Z
      11: ifeq          30
      14: aload_2
      15: aload_0
      16: aload_1
      17: invokespecial #19                 // Method createRMFailoverProxyProvider:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)Lorg/apache/hadoop/yarn/client/RMFailoverProxyProvider;
      20: astore        4
      22: aload_1
      23: aload         4
      25: aload_3
      26: invokestatic  #20                 // Method org/apache/hadoop/io/retry/RetryProxy.create:(Ljava/lang/Class;Lorg/apache/hadoop/io/retry/FailoverProxyProvider;Lorg/apache/hadoop/io/retry/RetryPolicy;)Ljava/lang/Object;
      29: areturn
      30: aload_2
      31: aload_0
      32: aload_1
      33: invokevirtual #21                 // Method getRMAddress:(Lorg/apache/hadoop/yarn/conf/YarnConfiguration;Ljava/lang/Class;)Ljava/net/InetSocketAddress;
      36: astore        4
      38: getstatic     #22                 // Field LOG:Lorg/apache/commons/logging/Log;
      41: new           #23                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #25                 // String Connecting to ResourceManager at
      50: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload         4
      55: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      66: aload_2
      67: aload_0
      68: aload_1
      69: aload         4
      71: invokevirtual #30                 // Method getProxy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;Ljava/net/InetSocketAddress;)Ljava/lang/Object;
      74: astore        5
      76: aload_1
      77: aload         5
      79: aload_3
      80: invokestatic  #31                 // Method org/apache/hadoop/io/retry/RetryProxy.create:(Ljava/lang/Class;Ljava/lang/Object;Lorg/apache/hadoop/io/retry/RetryPolicy;)Ljava/lang/Object;
      83: areturn

  public <T> T getProxy(org.apache.hadoop.conf.Configuration, java.lang.Class<T>, java.net.InetSocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field user:Lorg/apache/hadoop/security/UserGroupInformation;
       4: new           #32                 // class org/apache/hadoop/yarn/client/RMProxy$1
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokespecial #33                 // Method org/apache/hadoop/yarn/client/RMProxy$1."<init>":(Lorg/apache/hadoop/yarn/client/RMProxy;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;Ljava/net/InetSocketAddress;)V
      15: invokevirtual #34                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      18: areturn

  private <T> org.apache.hadoop.yarn.client.RMFailoverProxyProvider<T> createRMFailoverProxyProvider(org.apache.hadoop.conf.Configuration, java.lang.Class<T>);
    Code:
       0: ldc           #35                 // String org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider
       2: invokestatic  #36                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: astore_3
       6: goto          23
       9: astore        4
      11: new           #5                  // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      14: dup
      15: ldc           #38                 // String Invalid default failover provider classorg.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider
      17: aload         4
      19: invokespecial #7                  // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
      23: aload_1
      24: ldc           #39                 // String yarn.client.failover-proxy-provider
      26: aload_3
      27: ldc           #40                 // class org/apache/hadoop/yarn/client/RMFailoverProxyProvider
      29: invokevirtual #41                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      32: aload_1
      33: invokestatic  #42                 // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      36: checkcast     #40                 // class org/apache/hadoop/yarn/client/RMFailoverProxyProvider
      39: astore        4
      41: aload         4
      43: aload_1
      44: aload_0
      45: aload_2
      46: invokeinterface #43,  4           // InterfaceMethod org/apache/hadoop/yarn/client/RMFailoverProxyProvider.init:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/yarn/client/RMProxy;Ljava/lang/Class;)V
      51: aload         4
      53: areturn
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  public static org.apache.hadoop.io.retry.RetryPolicy createRetryPolicy(org.apache.hadoop.conf.Configuration, boolean);
    Code:
       0: aload_0
       1: ldc           #44                 // String yarn.resourcemanager.connect.max-wait.ms
       3: ldc2_w        #45                 // long 900000l
       6: invokevirtual #47                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
       9: lstore_2
      10: aload_0
      11: ldc           #48                 // String yarn.resourcemanager.connect.retry-interval.ms
      13: ldc2_w        #49                 // long 30000l
      16: invokevirtual #47                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      19: lstore        4
      21: aload_0
      22: lload_2
      23: lload         4
      25: iload_1
      26: invokestatic  #17                 // Method createRetryPolicy:(Lorg/apache/hadoop/conf/Configuration;JJZ)Lorg/apache/hadoop/io/retry/RetryPolicy;
      29: areturn

  protected static org.apache.hadoop.io.retry.RetryPolicy createRetryPolicy(org.apache.hadoop.conf.Configuration, long, long, boolean);
    Code:
       0: lload_1
       1: lstore        6
       3: lload_3
       4: lstore        8
       6: lload         6
       8: ldc2_w        #51                 // long -1l
      11: lcmp
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: istore        10
      22: iload         10
      24: ifne          65
      27: lload         6
      29: lconst_0
      30: lcmp
      31: ifge          44
      34: new           #5                  // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      37: dup
      38: ldc           #53                 // String Invalid Configuration. yarn.resourcemanager.connect.max-wait.ms can be -1, but can not be other negative numbers
      40: invokespecial #54                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: lload         6
      46: lload         8
      48: lcmp
      49: ifge          65
      52: getstatic     #22                 // Field LOG:Lorg/apache/commons/logging/Log;
      55: ldc           #55                 // String yarn.resourcemanager.connect.max-wait.ms is smaller than yarn.resourcemanager.connect.retry-interval.ms. Only try connect once.
      57: invokeinterface #56,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      62: lconst_0
      63: lstore        6
      65: iload         5
      67: ifeq          138
      70: aload_0
      71: ldc           #57                 // String yarn.client.failover-sleep-base-ms
      73: lload         8
      75: invokevirtual #47                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      78: lstore        11
      80: aload_0
      81: ldc           #58                 // String yarn.client.failover-sleep-max-ms
      83: lload         8
      85: invokevirtual #47                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      88: lstore        13
      90: aload_0
      91: ldc           #59                 // String yarn.client.failover-max-attempts
      93: iconst_m1
      94: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      97: istore        15
      99: iload         15
     101: iconst_m1
     102: if_icmpne     125
     105: iload         10
     107: ifeq          117
     110: ldc           #62                 // int 2147483647
     112: istore        15
     114: goto          125
     117: lload         6
     119: lload         11
     121: ldiv
     122: l2i
     123: istore        15
     125: getstatic     #63                 // Field org/apache/hadoop/io/retry/RetryPolicies.TRY_ONCE_THEN_FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy;
     128: iload         15
     130: lload         11
     132: lload         13
     134: invokestatic  #64                 // Method org/apache/hadoop/io/retry/RetryPolicies.failoverOnNetworkException:(Lorg/apache/hadoop/io/retry/RetryPolicy;IJJ)Lorg/apache/hadoop/io/retry/RetryPolicy;
     137: areturn
     138: lload         8
     140: lconst_0
     141: lcmp
     142: ifge          155
     145: new           #5                  // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
     148: dup
     149: ldc           #65                 // String Invalid Configuration. yarn.resourcemanager.connect.retry-interval.ms should not be negative.
     151: invokespecial #54                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: aconst_null
     156: astore        11
     158: iload         10
     160: ifeq          176
     163: lload         8
     165: getstatic     #66                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     168: invokestatic  #67                 // Method org/apache/hadoop/io/retry/RetryPolicies.retryForeverWithFixedSleep:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/io/retry/RetryPolicy;
     171: astore        11
     173: goto          188
     176: lload         6
     178: lload         8
     180: getstatic     #66                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     183: invokestatic  #68                 // Method org/apache/hadoop/io/retry/RetryPolicies.retryUpToMaximumTimeWithFixedSleep:(JJLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/io/retry/RetryPolicy;
     186: astore        11
     188: new           #69                 // class java/util/HashMap
     191: dup
     192: invokespecial #70                 // Method java/util/HashMap."<init>":()V
     195: astore        12
     197: aload         12
     199: ldc           #71                 // class java/io/EOFException
     201: aload         11
     203: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     208: pop
     209: aload         12
     211: ldc           #73                 // class java/net/ConnectException
     213: aload         11
     215: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     220: pop
     221: aload         12
     223: ldc           #74                 // class java/net/NoRouteToHostException
     225: aload         11
     227: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     232: pop
     233: aload         12
     235: ldc           #75                 // class java/net/UnknownHostException
     237: aload         11
     239: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     244: pop
     245: aload         12
     247: ldc           #76                 // class org/apache/hadoop/net/ConnectTimeoutException
     249: aload         11
     251: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     256: pop
     257: aload         12
     259: ldc           #77                 // class org/apache/hadoop/ipc/RetriableException
     261: aload         11
     263: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     268: pop
     269: aload         12
     271: ldc           #78                 // class java/net/SocketException
     273: aload         11
     275: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     280: pop
     281: aload         12
     283: ldc           #79                 // class java/net/SocketTimeoutException
     285: aload         11
     287: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     292: pop
     293: aload         12
     295: ldc           #80                 // class org/apache/hadoop/ipc/StandbyException
     297: aload         11
     299: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     304: pop
     305: aload         12
     307: ldc           #4                  // class java/io/IOException
     309: aload         11
     311: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     316: pop
     317: getstatic     #63                 // Field org/apache/hadoop/io/retry/RetryPolicies.TRY_ONCE_THEN_FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy;
     320: aload         12
     322: invokestatic  #81                 // Method org/apache/hadoop/io/retry/RetryPolicies.retryOtherThanRemoteException:(Lorg/apache/hadoop/io/retry/RetryPolicy;Ljava/util/Map;)Lorg/apache/hadoop/io/retry/RetryPolicy;
     325: areturn

  static {};
    Code:
       0: ldc           #82                 // class org/apache/hadoop/yarn/client/RMProxy
       2: invokestatic  #83                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #22                 // Field LOG:Lorg/apache/commons/logging/Log;
       8: return
}
