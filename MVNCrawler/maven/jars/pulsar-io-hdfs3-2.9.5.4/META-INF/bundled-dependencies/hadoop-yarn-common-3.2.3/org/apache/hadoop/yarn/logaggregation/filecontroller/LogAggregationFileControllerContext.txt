Compiled from "LogAggregationFileControllerContext.java"
public class org.apache.hadoop.yarn.logaggregation.filecontroller.LogAggregationFileControllerContext {
  private final boolean logAggregationInRolling;

  private final long rollingMonitorInterval;

  private final org.apache.hadoop.fs.Path remoteNodeLogFileForApp;

  private final org.apache.hadoop.yarn.api.records.NodeId nodeId;

  private final org.apache.hadoop.security.UserGroupInformation userUgi;

  private final org.apache.hadoop.yarn.api.records.ApplicationId appId;

  private final org.apache.hadoop.fs.Path remoteNodeTmpLogFileForApp;

  private final java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String> appAcls;

  private int logAggregationTimes;

  private int cleanOldLogsTimes;

  private boolean uploadedLogsInThisCycle;

  private long logUploadedTimeStamp;

  public org.apache.hadoop.yarn.logaggregation.filecontroller.LogAggregationFileControllerContext(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean, long, org.apache.hadoop.yarn.api.records.ApplicationId, java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String>, org.apache.hadoop.yarn.api.records.NodeId, org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field logAggregationTimes:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field cleanOldLogsTimes:I
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field remoteNodeLogFileForApp:Lorg/apache/hadoop/fs/Path;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field remoteNodeTmpLogFileForApp:Lorg/apache/hadoop/fs/Path;
      24: aload_0
      25: iload_3
      26: putfield      #6                  // Field logAggregationInRolling:Z
      29: aload_0
      30: lload         4
      32: putfield      #7                  // Field rollingMonitorInterval:J
      35: aload_0
      36: aload         8
      38: putfield      #8                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      41: aload_0
      42: aload         6
      44: putfield      #9                  // Field appId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      47: aload_0
      48: aload         7
      50: putfield      #10                 // Field appAcls:Ljava/util/Map;
      53: aload_0
      54: aload         9
      56: putfield      #11                 // Field userUgi:Lorg/apache/hadoop/security/UserGroupInformation;
      59: return

  public boolean isUploadedLogsInThisCycle();
    Code:
       0: aload_0
       1: getfield      #12                 // Field uploadedLogsInThisCycle:Z
       4: ireturn

  public void setUploadedLogsInThisCycle(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field uploadedLogsInThisCycle:Z
       5: return

  public org.apache.hadoop.fs.Path getRemoteNodeLogFileForApp();
    Code:
       0: aload_0
       1: getfield      #4                  // Field remoteNodeLogFileForApp:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public long getRollingMonitorInterval();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rollingMonitorInterval:J
       4: lreturn

  public boolean isLogAggregationInRolling();
    Code:
       0: aload_0
       1: getfield      #6                  // Field logAggregationInRolling:Z
       4: ireturn

  public long getLogUploadTimeStamp();
    Code:
       0: aload_0
       1: getfield      #13                 // Field logUploadedTimeStamp:J
       4: lreturn

  public void setLogUploadTimeStamp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field logUploadedTimeStamp:J
       5: return

  public org.apache.hadoop.yarn.api.records.NodeId getNodeId();
    Code:
       0: aload_0
       1: getfield      #8                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
       4: areturn

  public org.apache.hadoop.security.UserGroupInformation getUserUgi();
    Code:
       0: aload_0
       1: getfield      #11                 // Field userUgi:Lorg/apache/hadoop/security/UserGroupInformation;
       4: areturn

  public org.apache.hadoop.yarn.api.records.ApplicationId getAppId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field appId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
       4: areturn

  public org.apache.hadoop.fs.Path getRemoteNodeTmpLogFileForApp();
    Code:
       0: aload_0
       1: getfield      #5                  // Field remoteNodeTmpLogFileForApp:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public void increLogAggregationTimes();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field logAggregationTimes:I
       5: iconst_1
       6: iadd
       7: putfield      #2                  // Field logAggregationTimes:I
      10: return

  public void increcleanupOldLogTimes();
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field cleanOldLogsTimes:I
       5: iconst_1
       6: iadd
       7: putfield      #3                  // Field cleanOldLogsTimes:I
      10: return

  public int getLogAggregationTimes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logAggregationTimes:I
       4: ireturn

  public int getCleanOldLogsTimes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cleanOldLogsTimes:I
       4: ireturn

  public java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String> getAppAcls();
    Code:
       0: aload_0
       1: getfield      #10                 // Field appAcls:Ljava/util/Map;
       4: areturn
}
