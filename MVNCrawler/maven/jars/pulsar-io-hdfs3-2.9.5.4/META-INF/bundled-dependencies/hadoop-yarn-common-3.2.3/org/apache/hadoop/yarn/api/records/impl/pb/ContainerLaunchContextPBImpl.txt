Compiled from "ContainerLaunchContextPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl extends org.apache.hadoop.yarn.api.records.ContainerLaunchContext {
  org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto proto;

  org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto$Builder builder;

  boolean viaProto;

  private java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.LocalResource> localResources;

  private java.nio.ByteBuffer tokens;

  private java.nio.ByteBuffer tokensConf;

  private java.util.Map<java.lang.String, java.nio.ByteBuffer> serviceData;

  private java.util.Map<java.lang.String, java.lang.String> environment;

  private java.util.List<java.lang.String> commands;

  private java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String> applicationACLS;

  private org.apache.hadoop.yarn.api.records.ContainerRetryContext containerRetryContext;

  public org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/yarn/api/records/ContainerLaunchContext."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
       8: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      11: aload_0
      12: aconst_null
      13: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #10                 // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #5                  // Field localResources:Ljava/util/Map;
      26: aload_0
      27: aconst_null
      28: putfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      31: aload_0
      32: aconst_null
      33: putfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      36: aload_0
      37: aconst_null
      38: putfield      #3                  // Field serviceData:Ljava/util/Map;
      41: aload_0
      42: aconst_null
      43: putfield      #2                  // Field environment:Ljava/util/Map;
      46: aload_0
      47: aconst_null
      48: putfield      #13                 // Field commands:Ljava/util/List;
      51: aload_0
      52: aconst_null
      53: putfield      #1                  // Field applicationACLS:Ljava/util/Map;
      56: aload_0
      57: aconst_null
      58: putfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
      61: aload_0
      62: invokestatic  #15                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      65: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      68: return

  public org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/yarn/api/records/ContainerLaunchContext."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
       8: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      11: aload_0
      12: aconst_null
      13: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #10                 // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #5                  // Field localResources:Ljava/util/Map;
      26: aload_0
      27: aconst_null
      28: putfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      31: aload_0
      32: aconst_null
      33: putfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      36: aload_0
      37: aconst_null
      38: putfield      #3                  // Field serviceData:Ljava/util/Map;
      41: aload_0
      42: aconst_null
      43: putfield      #2                  // Field environment:Ljava/util/Map;
      46: aload_0
      47: aconst_null
      48: putfield      #13                 // Field commands:Ljava/util/List;
      51: aload_0
      52: aconst_null
      53: putfield      #1                  // Field applicationACLS:Ljava/util/Map;
      56: aload_0
      57: aconst_null
      58: putfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
      61: aload_0
      62: aload_1
      63: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      66: aload_0
      67: iconst_1
      68: putfield      #10                 // Field viaProto:Z
      71: return

  public org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto getProto();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #10                 // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      16: goto          26
      19: aload_0
      20: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      23: invokevirtual #17                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      26: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      29: aload_0
      30: iconst_1
      31: putfield      #10                 // Field viaProto:Z
      34: aload_0
      35: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
       4: invokevirtual #19                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #18                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      24: aload_0
      25: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #22                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #23                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl
      35: invokevirtual #18                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      38: invokevirtual #24                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
       4: invokestatic  #25                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  protected final java.nio.ByteBuffer convertFromProtoFormat(com.google.protobuf.ByteString);
    Code:
       0: aload_1
       1: invokestatic  #26                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lcom/google/protobuf/ByteString;)Ljava/nio/ByteBuffer;
       4: areturn

  protected final com.google.protobuf.ByteString convertToProtoFormat(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokestatic  #27                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/ByteString;
       4: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field localResources:Ljava/util/Map;
       4: ifnull        11
       7: aload_0
       8: invokespecial #28                 // Method addLocalResourcesToProto:()V
      11: aload_0
      12: getfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      15: ifnull        34
      18: aload_0
      19: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      22: aload_0
      23: aload_0
      24: getfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      27: invokevirtual #29                 // Method convertToProtoFormat:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/ByteString;
      30: invokevirtual #30                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.setTokens:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      33: pop
      34: aload_0
      35: getfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      38: ifnull        57
      41: aload_0
      42: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      45: aload_0
      46: aload_0
      47: getfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      50: invokevirtual #29                 // Method convertToProtoFormat:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/ByteString;
      53: invokevirtual #31                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.setTokensConf:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      56: pop
      57: aload_0
      58: getfield      #3                  // Field serviceData:Ljava/util/Map;
      61: ifnull        68
      64: aload_0
      65: invokespecial #32                 // Method addServiceDataToProto:()V
      68: aload_0
      69: getfield      #2                  // Field environment:Ljava/util/Map;
      72: ifnull        79
      75: aload_0
      76: invokespecial #33                 // Method addEnvToProto:()V
      79: aload_0
      80: getfield      #13                 // Field commands:Ljava/util/List;
      83: ifnull        90
      86: aload_0
      87: invokespecial #34                 // Method addCommandsToProto:()V
      90: aload_0
      91: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
      94: ifnull        101
      97: aload_0
      98: invokespecial #35                 // Method addApplicationACLs:()V
     101: aload_0
     102: getfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
     105: ifnull        124
     108: aload_0
     109: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
     112: aload_0
     113: aload_0
     114: getfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
     117: invokespecial #36                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerRetryContextProto;
     120: invokevirtual #37                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.setContainerRetryContext:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerRetryContextProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
     123: pop
     124: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #38                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #39                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      20: invokevirtual #17                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      23: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      26: aload_0
      27: iconst_1
      28: putfield      #10                 // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      19: invokestatic  #40                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      22: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #10                 // Field viaProto:Z
      30: return

  public java.util.List<java.lang.String> getCommands();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method initCommands:()V
       4: aload_0
       5: getfield      #13                 // Field commands:Ljava/util/List;
       8: areturn

  private void initCommands();
    Code:
       0: aload_0
       1: getfield      #13                 // Field commands:Ljava/util/List;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #42,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getCommandList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #43                 // class java/util/ArrayList
      38: dup
      39: invokespecial #44                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #13                 // Field commands:Ljava/util/List;
      45: aload_2
      46: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          87
      61: aload_3
      62: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #48                 // class java/lang/String
      70: astore        4
      72: aload_0
      73: getfield      #13                 // Field commands:Ljava/util/List;
      76: aload         4
      78: invokeinterface #49,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          52
      87: return

  public void setCommands(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #41                 // Method initCommands:()V
       9: aload_0
      10: getfield      #13                 // Field commands:Ljava/util/List;
      13: invokeinterface #50,  1           // InterfaceMethod java/util/List.clear:()V
      18: aload_0
      19: getfield      #13                 // Field commands:Ljava/util/List;
      22: aload_1
      23: invokeinterface #51,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: return

  private void addCommandsToProto();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
       8: invokevirtual #52                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearCommand:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #13                 // Field commands:Ljava/util/List;
      16: ifnonnull     20
      19: return
      20: aload_0
      21: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      24: aload_0
      25: getfield      #13                 // Field commands:Ljava/util/List;
      28: invokevirtual #53                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.addAllCommand:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      31: pop
      32: return

  public java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.LocalResource> getLocalResources();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method initLocalResources:()V
       4: aload_0
       5: getfield      #5                  // Field localResources:Ljava/util/Map;
       8: areturn

  private void initLocalResources();
    Code:
       0: aload_0
       1: getfield      #5                  // Field localResources:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #55,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getLocalResourcesList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #56                 // class java/util/HashMap
      38: dup
      39: invokespecial #57                 // Method java/util/HashMap."<init>":()V
      42: putfield      #5                  // Field localResources:Ljava/util/Map;
      45: aload_2
      46: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          99
      61: aload_3
      62: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #58                 // class org/apache/hadoop/yarn/proto/YarnProtos$StringLocalResourceMapProto
      70: astore        4
      72: aload_0
      73: getfield      #5                  // Field localResources:Ljava/util/Map;
      76: aload         4
      78: invokevirtual #59                 // Method org/apache/hadoop/yarn/proto/YarnProtos$StringLocalResourceMapProto.getKey:()Ljava/lang/String;
      81: aload_0
      82: aload         4
      84: invokevirtual #60                 // Method org/apache/hadoop/yarn/proto/YarnProtos$StringLocalResourceMapProto.getValue:()Lorg/apache/hadoop/yarn/proto/YarnProtos$LocalResourceProto;
      87: invokespecial #61                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$LocalResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/LocalResourcePBImpl;
      90: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: goto          52
      99: return

  public void setLocalResources(java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.LocalResource>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokespecial #63                 // Method checkLocalResources:(Ljava/util/Map;)V
      10: aload_0
      11: invokespecial #54                 // Method initLocalResources:()V
      14: aload_0
      15: getfield      #5                  // Field localResources:Ljava/util/Map;
      18: invokeinterface #64,  1           // InterfaceMethod java/util/Map.clear:()V
      23: aload_0
      24: getfield      #5                  // Field localResources:Ljava/util/Map;
      27: aload_1
      28: invokeinterface #65,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      33: return

  private void checkLocalResources(java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.LocalResource>);
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          235
      21: aload_2
      22: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #68                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: ifnull        55
      40: aload_3
      41: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #70                 // class org/apache/hadoop/yarn/api/records/LocalResource
      49: invokevirtual #71                 // Method org/apache/hadoop/yarn/api/records/LocalResource.getResource:()Lorg/apache/hadoop/yarn/api/records/URL;
      52: ifnonnull     104
      55: new           #72                 // class java/lang/NullPointerException
      58: dup
      59: new           #73                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #75                 // String Null resource URL for local resource
      68: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_3
      72: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      77: checkcast     #48                 // class java/lang/String
      80: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #78                 // String  :
      85: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_3
      89: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      94: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #81                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     110: checkcast     #70                 // class org/apache/hadoop/yarn/api/records/LocalResource
     113: invokevirtual #82                 // Method org/apache/hadoop/yarn/api/records/LocalResource.getType:()Lorg/apache/hadoop/yarn/api/records/LocalResourceType;
     116: ifnonnull     168
     119: new           #72                 // class java/lang/NullPointerException
     122: dup
     123: new           #73                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #83                 // String Null resource type for local resource
     132: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_3
     136: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     141: checkcast     #48                 // class java/lang/String
     144: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: ldc           #78                 // String  :
     149: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_3
     153: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     158: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     161: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: invokespecial #81                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     167: athrow
     168: aload_3
     169: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     174: checkcast     #70                 // class org/apache/hadoop/yarn/api/records/LocalResource
     177: invokevirtual #84                 // Method org/apache/hadoop/yarn/api/records/LocalResource.getVisibility:()Lorg/apache/hadoop/yarn/api/records/LocalResourceVisibility;
     180: ifnonnull     232
     183: new           #72                 // class java/lang/NullPointerException
     186: dup
     187: new           #73                 // class java/lang/StringBuilder
     190: dup
     191: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     194: ldc           #85                 // String Null resource visibility for local resource
     196: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_3
     200: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     205: checkcast     #48                 // class java/lang/String
     208: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: ldc           #78                 // String  :
     213: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_3
     217: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     222: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     225: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: invokespecial #81                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     231: athrow
     232: goto          12
     235: return

  private void addLocalResourcesToProto();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
       8: invokevirtual #86                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearLocalResources:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #5                  // Field localResources:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #87                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$1
      23: dup
      24: aload_0
      25: invokespecial #88                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$1."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      33: aload_1
      34: invokevirtual #89                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.addAllLocalResources:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      37: pop
      38: return

  public java.nio.ByteBuffer getTokens();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      23: ifnull        31
      26: aload_0
      27: getfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      30: areturn
      31: aload_1
      32: invokeinterface #90,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.hasTokens:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #91,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getTokens:()Lcom/google/protobuf/ByteString;
      50: invokevirtual #92                 // Method convertFromProtoFormat:(Lcom/google/protobuf/ByteString;)Ljava/nio/ByteBuffer;
      53: putfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      56: aload_0
      57: getfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      60: areturn

  public void setTokens(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      12: invokevirtual #93                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearTokens:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #11                 // Field tokens:Ljava/nio/ByteBuffer;
      21: return

  public java.nio.ByteBuffer getTokensConf();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      23: ifnull        31
      26: aload_0
      27: getfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      30: areturn
      31: aload_1
      32: invokeinterface #94,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.hasTokensConf:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #95,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getTokensConf:()Lcom/google/protobuf/ByteString;
      50: invokevirtual #92                 // Method convertFromProtoFormat:(Lcom/google/protobuf/ByteString;)Ljava/nio/ByteBuffer;
      53: putfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      56: aload_0
      57: getfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      60: areturn

  public void setTokensConf(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      12: invokevirtual #96                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearTokensConf:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #12                 // Field tokensConf:Ljava/nio/ByteBuffer;
      21: return

  public java.util.Map<java.lang.String, java.nio.ByteBuffer> getServiceData();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method initServiceData:()V
       4: aload_0
       5: getfield      #3                  // Field serviceData:Ljava/util/Map;
       8: areturn

  private void initServiceData();
    Code:
       0: aload_0
       1: getfield      #3                  // Field serviceData:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #98,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getServiceDataList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #56                 // class java/util/HashMap
      38: dup
      39: invokespecial #57                 // Method java/util/HashMap."<init>":()V
      42: putfield      #3                  // Field serviceData:Ljava/util/Map;
      45: aload_2
      46: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          99
      61: aload_3
      62: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #99                 // class org/apache/hadoop/yarn/proto/YarnProtos$StringBytesMapProto
      70: astore        4
      72: aload_0
      73: getfield      #3                  // Field serviceData:Ljava/util/Map;
      76: aload         4
      78: invokevirtual #100                // Method org/apache/hadoop/yarn/proto/YarnProtos$StringBytesMapProto.getKey:()Ljava/lang/String;
      81: aload_0
      82: aload         4
      84: invokevirtual #101                // Method org/apache/hadoop/yarn/proto/YarnProtos$StringBytesMapProto.getValue:()Lcom/google/protobuf/ByteString;
      87: invokevirtual #92                 // Method convertFromProtoFormat:(Lcom/google/protobuf/ByteString;)Ljava/nio/ByteBuffer;
      90: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: goto          52
      99: return

  public void setServiceData(java.util.Map<java.lang.String, java.nio.ByteBuffer>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #97                 // Method initServiceData:()V
       9: aload_0
      10: getfield      #3                  // Field serviceData:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #65,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      19: return

  private void addServiceDataToProto();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
       8: invokevirtual #102                // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearServiceData:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #3                  // Field serviceData:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #103                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$2
      23: dup
      24: aload_0
      25: invokespecial #104                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$2."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      33: aload_1
      34: invokevirtual #105                // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.addAllServiceData:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      37: pop
      38: return

  public java.util.Map<java.lang.String, java.lang.String> getEnvironment();
    Code:
       0: aload_0
       1: invokespecial #106                // Method initEnv:()V
       4: aload_0
       5: getfield      #2                  // Field environment:Ljava/util/Map;
       8: areturn

  private void initEnv();
    Code:
       0: aload_0
       1: getfield      #2                  // Field environment:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #107,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getEnvironmentList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #56                 // class java/util/HashMap
      38: dup
      39: invokespecial #57                 // Method java/util/HashMap."<init>":()V
      42: putfield      #2                  // Field environment:Ljava/util/Map;
      45: aload_2
      46: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          101
      61: aload_3
      62: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #108                // class org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto
      70: astore        4
      72: aload_0
      73: getfield      #2                  // Field environment:Ljava/util/Map;
      76: aload         4
      78: invokevirtual #109                // Method org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto.getKey:()Ljava/lang/String;
      81: invokestatic  #110                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      84: aload         4
      86: invokevirtual #111                // Method org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto.getValue:()Ljava/lang/String;
      89: invokestatic  #110                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      92: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          52
     101: return

  public void setEnvironment(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #106                // Method initEnv:()V
       9: aload_0
      10: getfield      #2                  // Field environment:Ljava/util/Map;
      13: invokeinterface #64,  1           // InterfaceMethod java/util/Map.clear:()V
      18: aload_1
      19: invokeinterface #66,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          86
      39: aload_2
      40: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #68                 // class java/util/Map$Entry
      48: astore_3
      49: aload_0
      50: getfield      #2                  // Field environment:Ljava/util/Map;
      53: aload_3
      54: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: checkcast     #48                 // class java/lang/String
      62: invokestatic  #110                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      65: aload_3
      66: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      71: checkcast     #48                 // class java/lang/String
      74: invokestatic  #110                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      77: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: goto          30
      86: return

  private void addEnvToProto();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
       8: invokevirtual #112                // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearEnvironment:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #2                  // Field environment:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #113                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$3
      23: dup
      24: aload_0
      25: invokespecial #114                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$3."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      33: aload_1
      34: invokevirtual #115                // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.addAllEnvironment:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      37: pop
      38: return

  public java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String> getApplicationACLs();
    Code:
       0: aload_0
       1: invokespecial #116                // Method initApplicationACLs:()V
       4: aload_0
       5: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
       8: areturn

  private void initApplicationACLs();
    Code:
       0: aload_0
       1: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #117,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getApplicationACLsList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #56                 // class java/util/HashMap
      38: dup
      39: aload_2
      40: invokeinterface #118,  1          // InterfaceMethod java/util/List.size:()I
      45: invokespecial #119                // Method java/util/HashMap."<init>":(I)V
      48: putfield      #1                  // Field applicationACLS:Ljava/util/Map;
      51: aload_2
      52: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          107
      67: aload_3
      68: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #120                // class org/apache/hadoop/yarn/proto/YarnProtos$ApplicationACLMapProto
      76: astore        4
      78: aload_0
      79: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
      82: aload         4
      84: invokevirtual #121                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationACLMapProto.getAccessType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAccessTypeProto;
      87: invokestatic  #122                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAccessTypeProto;)Lorg/apache/hadoop/yarn/api/records/ApplicationAccessType;
      90: aload         4
      92: invokevirtual #123                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationACLMapProto.getAcl:()Ljava/lang/String;
      95: invokestatic  #110                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      98: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          58
     107: return

  private void addApplicationACLs();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
       8: invokevirtual #124                // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearApplicationACLs:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #125                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$4
      23: dup
      24: aload_0
      25: invokespecial #126                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl$4."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      33: aload_1
      34: invokevirtual #127                // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.addAllApplicationACLs:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      37: pop
      38: return

  public void setApplicationACLs(java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #116                // Method initApplicationACLs:()V
       9: aload_0
      10: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
      13: invokeinterface #64,  1           // InterfaceMethod java/util/Map.clear:()V
      18: aload_1
      19: invokeinterface #66,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          80
      39: aload_2
      40: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #68                 // class java/util/Map$Entry
      48: astore_3
      49: aload_0
      50: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
      53: aload_3
      54: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: aload_3
      60: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      65: checkcast     #48                 // class java/lang/String
      68: invokestatic  #110                // Method org/apache/hadoop/util/StringInterner.weakIntern:(Ljava/lang/String;)Ljava/lang/String;
      71: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: goto          30
      80: return

  public org.apache.hadoop.yarn.api.records.ContainerRetryContext getContainerRetryContext();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
      23: ifnull        31
      26: aload_0
      27: getfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
      30: areturn
      31: aload_1
      32: invokeinterface #128,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.hasContainerRetryContext:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #129,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProtoOrBuilder.getContainerRetryContext:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerRetryContextProto;
      50: invokespecial #130                // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerRetryContextProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerRetryContextPBImpl;
      53: putfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
      56: aload_0
      57: getfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
      60: areturn

  public void setContainerRetryContext(org.apache.hadoop.yarn.api.records.ContainerRetryContext);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      12: invokevirtual #131                // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder.clearContainerRetryContext:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #14                 // Field containerRetryContext:Lorg/apache/hadoop/yarn/api/records/ContainerRetryContext;
      21: return

  private org.apache.hadoop.yarn.api.records.impl.pb.LocalResourcePBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$LocalResourceProto);
    Code:
       0: new           #132                // class org/apache/hadoop/yarn/api/records/impl/pb/LocalResourcePBImpl
       3: dup
       4: aload_1
       5: invokespecial #133                // Method org/apache/hadoop/yarn/api/records/impl/pb/LocalResourcePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$LocalResourceProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$LocalResourceProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.LocalResource);
    Code:
       0: aload_1
       1: checkcast     #132                // class org/apache/hadoop/yarn/api/records/impl/pb/LocalResourcePBImpl
       4: invokevirtual #134                // Method org/apache/hadoop/yarn/api/records/impl/pb/LocalResourcePBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$LocalResourceProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerRetryContextPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerRetryContextProto);
    Code:
       0: new           #135                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerRetryContextPBImpl
       3: dup
       4: aload_1
       5: invokespecial #136                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerRetryContextPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerRetryContextProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerRetryContextProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerRetryContext);
    Code:
       0: aload_1
       1: checkcast     #135                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerRetryContextPBImpl
       4: invokevirtual #137                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerRetryContextPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerRetryContextProto;
       7: areturn

  static java.util.Map access$000(org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field localResources:Ljava/util/Map;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$LocalResourceProto access$100(org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl, org.apache.hadoop.yarn.api.records.LocalResource);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/LocalResource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$LocalResourceProto;
       5: areturn

  static java.util.Map access$200(org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field serviceData:Ljava/util/Map;
       4: areturn

  static java.util.Map access$300(org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field environment:Ljava/util/Map;
       4: areturn

  static java.util.Map access$400(org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field applicationACLS:Ljava/util/Map;
       4: areturn
}
