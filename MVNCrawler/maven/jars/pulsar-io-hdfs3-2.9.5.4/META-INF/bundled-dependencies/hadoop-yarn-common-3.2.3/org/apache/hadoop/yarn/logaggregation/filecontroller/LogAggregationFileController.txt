Compiled from "LogAggregationFileController.java"
public abstract class org.apache.hadoop.yarn.logaggregation.filecontroller.LogAggregationFileController {
  private static final org.slf4j.Logger LOG;

  protected static final org.apache.hadoop.fs.permission.FsPermission TLDIR_PERMISSIONS;

  protected static final org.apache.hadoop.fs.permission.FsPermission APP_DIR_PERMISSIONS;

  protected static final org.apache.hadoop.fs.permission.FsPermission APP_LOG_FILE_UMASK;

  public static final java.lang.String LOG_AGGREGATION_FS_SUPPORT_APPEND;

  protected org.apache.hadoop.conf.Configuration conf;

  protected org.apache.hadoop.fs.Path remoteRootLogDir;

  protected java.lang.String remoteRootLogDirSuffix;

  protected int retentionSize;

  protected java.lang.String fileControllerName;

  protected boolean fsSupportsChmod;

  public org.apache.hadoop.yarn.logaggregation.filecontroller.LogAggregationFileController();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field fsSupportsChmod:Z
       9: return

  public void initialize(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_1
       6: ldc           #6                  // String yarn.nodemanager.log-aggregation.num-log-files-per-app
       8: bipush        30
      10: invokevirtual #7                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      13: istore_3
      14: iload_3
      15: ifgt          27
      18: aload_0
      19: bipush        30
      21: putfield      #8                  // Field retentionSize:I
      24: goto          32
      27: aload_0
      28: iload_3
      29: putfield      #8                  // Field retentionSize:I
      32: aload_0
      33: aload_2
      34: putfield      #9                  // Field fileControllerName:Ljava/lang/String;
      37: aload_0
      38: invokespecial #10                 // Method extractRemoteRootLogDir:()V
      41: aload_0
      42: invokespecial #11                 // Method extractRemoteRootLogDirSuffix:()V
      45: aload_0
      46: aload_1
      47: invokevirtual #12                 // Method initInternal:(Lorg/apache/hadoop/conf/Configuration;)V
      50: return

  protected abstract void initInternal(org.apache.hadoop.conf.Configuration);

  public org.apache.hadoop.fs.Path getRemoteRootLogDir();
    Code:
       0: aload_0
       1: getfield      #13                 // Field remoteRootLogDir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public java.lang.String getRemoteRootLogDirSuffix();
    Code:
       0: aload_0
       1: getfield      #14                 // Field remoteRootLogDirSuffix:Ljava/lang/String;
       4: areturn

  public abstract void initializeWriter(org.apache.hadoop.yarn.logaggregation.filecontroller.LogAggregationFileControllerContext) throws java.io.IOException;

  public abstract void closeWriter() throws org.apache.hadoop.yarn.logaggregation.filecontroller.LogAggregationDFSException;

  public abstract void write(org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogKey, org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue) throws java.io.IOException;

  public abstract void postWrite(org.apache.hadoop.yarn.logaggregation.filecontroller.LogAggregationFileControllerContext) throws java.lang.Exception;

  protected void closePrintStream(java.io.OutputStream);
    Code:
       0: aload_1
       1: getstatic     #15                 // Field java/lang/System.out:Ljava/io/PrintStream;
       4: if_acmpeq     21
       7: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      10: iconst_1
      11: anewarray     #16                 // class java/io/Closeable
      14: dup
      15: iconst_0
      16: aload_1
      17: aastore
      18: invokestatic  #17                 // Method org/apache/hadoop/io/IOUtils.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      21: return

  public abstract boolean readAggregatedLogs(org.apache.hadoop.yarn.logaggregation.ContainerLogsRequest, java.io.OutputStream) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.yarn.logaggregation.ContainerLogMeta> readAggregatedLogsMeta(org.apache.hadoop.yarn.logaggregation.ContainerLogsRequest) throws java.io.IOException;

  public abstract void renderAggregatedLogsBlock(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block, org.apache.hadoop.yarn.webapp.View$ViewContext);

  public abstract java.lang.String getApplicationOwner(org.apache.hadoop.fs.Path, org.apache.hadoop.yarn.api.records.ApplicationId) throws java.io.IOException;

  public abstract java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String> getApplicationAcls(org.apache.hadoop.fs.Path, org.apache.hadoop.yarn.api.records.ApplicationId) throws java.io.IOException;

  private void extractRemoteRootLogDirSuffix();
    Code:
       0: ldc           #18                 // String yarn.log-aggregation.%s.remote-app-log-dir-suffix
       2: iconst_1
       3: anewarray     #19                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #9                  // Field fileControllerName:Ljava/lang/String;
      12: aastore
      13: invokestatic  #20                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: astore_1
      17: aload_0
      18: aload_0
      19: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      22: aload_1
      23: invokevirtual #21                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      26: putfield      #14                 // Field remoteRootLogDirSuffix:Ljava/lang/String;
      29: aload_0
      30: getfield      #14                 // Field remoteRootLogDirSuffix:Ljava/lang/String;
      33: ifnull        46
      36: aload_0
      37: getfield      #14                 // Field remoteRootLogDirSuffix:Ljava/lang/String;
      40: invokevirtual #22                 // Method java/lang/String.isEmpty:()Z
      43: ifeq          89
      46: aload_0
      47: new           #23                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      54: aload_0
      55: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      58: ldc           #25                 // String yarn.nodemanager.remote-app-log-dir-suffix
      60: ldc           #26                 // String logs
      62: invokevirtual #27                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      65: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #29                 // String -
      70: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: getfield      #9                  // Field fileControllerName:Ljava/lang/String;
      77: invokevirtual #30                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      80: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: putfield      #14                 // Field remoteRootLogDirSuffix:Ljava/lang/String;
      89: return

  private void extractRemoteRootLogDir();
    Code:
       0: ldc           #32                 // String yarn.log-aggregation.%s.remote-app-log-dir
       2: iconst_1
       3: anewarray     #19                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #9                  // Field fileControllerName:Ljava/lang/String;
      12: aastore
      13: invokestatic  #20                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: astore_1
      17: aload_0
      18: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      21: aload_1
      22: invokevirtual #21                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      25: astore_2
      26: aload_2
      27: ifnull        37
      30: aload_2
      31: invokevirtual #22                 // Method java/lang/String.isEmpty:()Z
      34: ifeq          49
      37: aload_0
      38: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      41: ldc           #33                 // String yarn.nodemanager.remote-app-log-dir
      43: ldc           #34                 // String /tmp/logs
      45: invokevirtual #27                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: astore_2
      49: aload_0
      50: new           #35                 // class org/apache/hadoop/fs/Path
      53: dup
      54: aload_2
      55: invokespecial #36                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      58: putfield      #13                 // Field remoteRootLogDir:Lorg/apache/hadoop/fs/Path;
      61: return

  public void verifyAndCreateRemoteLogDir();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: aload_0
       4: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       7: invokevirtual #37                 // Method getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      10: astore_1
      11: goto          26
      14: astore_2
      15: new           #39                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      18: dup
      19: ldc           #40                 // String Unable to get Remote FileSystem instance
      21: aload_2
      22: invokespecial #41                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: athrow
      26: iconst_1
      27: istore_2
      28: aload_0
      29: invokevirtual #42                 // Method getRemoteRootLogDir:()Lorg/apache/hadoop/fs/Path;
      32: astore_3
      33: aload_1
      34: aload_3
      35: invokevirtual #43                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      38: invokevirtual #44                 // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
      41: astore        4
      43: aload         4
      45: getstatic     #45                 // Field TLDIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
      48: invokevirtual #46                 // Method org/apache/hadoop/fs/permission/FsPermission.equals:(Ljava/lang/Object;)Z
      51: ifne          107
      54: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      57: new           #23                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #47                 // String Remote Root Log Dir [
      66: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_3
      70: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: ldc           #49                 // String ] already exist, but with incorrect permissions. Expected: [
      75: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: getstatic     #45                 // Field TLDIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
      81: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: ldc           #50                 // String ], Found: [
      86: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload         4
      91: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #51                 // String ]. The cluster may have problems with multiple users.
      96: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     107: goto          153
     110: astore        4
     112: iconst_0
     113: istore_2
     114: goto          153
     117: astore        4
     119: new           #39                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
     122: dup
     123: new           #23                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #54                 // String Failed to check permissions for dir [
     132: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_3
     136: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: ldc           #55                 // String ]
     141: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: aload         4
     149: invokespecial #41                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     152: athrow
     153: aload_3
     154: aload_1
     155: invokevirtual #56                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
     158: aload_1
     159: invokevirtual #57                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
     162: invokevirtual #58                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     165: astore        4
     167: iload_2
     168: ifne          384
     171: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     174: new           #23                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #47                 // String Remote Root Log Dir [
     183: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_3
     187: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     190: ldc           #59                 // String ] does not exist. Attempting to create it.
     192: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     203: aload_1
     204: aload         4
     206: new           #60                 // class org/apache/hadoop/fs/permission/FsPermission
     209: dup
     210: getstatic     #45                 // Field TLDIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
     213: invokespecial #61                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
     216: invokevirtual #62                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
     219: pop
     220: aload_1
     221: aload         4
     223: new           #60                 // class org/apache/hadoop/fs/permission/FsPermission
     226: dup
     227: getstatic     #45                 // Field TLDIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
     230: invokespecial #61                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
     233: invokevirtual #63                 // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
     236: goto          260
     239: astore        5
     241: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     244: ldc           #65                 // String Unable to set permissions for configured filesystem since it does not support this
     246: aload_1
     247: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.getScheme:()Ljava/lang/String;
     250: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     255: aload_0
     256: iconst_0
     257: putfield      #4                  // Field fsSupportsChmod:Z
     260: invokestatic  #68                 // Method org/apache/hadoop/security/UserGroupInformation.getLoginUser:()Lorg/apache/hadoop/security/UserGroupInformation;
     263: astore        5
     265: aconst_null
     266: astore        6
     268: aload         5
     270: invokevirtual #69                 // Method org/apache/hadoop/security/UserGroupInformation.getPrimaryGroupName:()Ljava/lang/String;
     273: astore        6
     275: goto          290
     278: astore        7
     280: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     283: ldc           #70                 // String No primary group found. The remote root log directory will be created with the HDFS superuser being its group owner. JobHistoryServer may be unable to read the directory.
     285: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     290: aload         6
     292: ifnull        345
     295: aload_1
     296: aload         4
     298: aload         5
     300: invokevirtual #71                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
     303: aload         6
     305: invokevirtual #72                 // Method org/apache/hadoop/fs/FileSystem.setOwner:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
     308: goto          345
     311: astore        7
     313: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     316: new           #23                 // class java/lang/StringBuilder
     319: dup
     320: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     323: ldc           #73                 // String File System does not support setting user/group
     325: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: aload_1
     329: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.getScheme:()Ljava/lang/String;
     332: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     335: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     338: aload         7
     340: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
     345: goto          463
     348: astore        5
     350: new           #39                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
     353: dup
     354: new           #23                 // class java/lang/StringBuilder
     357: dup
     358: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     361: ldc           #75                 // String Failed to create remoteLogDir [
     363: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     366: aload_3
     367: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     370: ldc           #55                 // String ]
     372: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     375: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     378: aload         5
     380: invokespecial #41                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     383: athrow
     384: aload_1
     385: aload         4
     387: new           #60                 // class org/apache/hadoop/fs/permission/FsPermission
     390: dup
     391: getstatic     #45                 // Field TLDIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
     394: invokespecial #61                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
     397: invokevirtual #63                 // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
     400: goto          463
     403: astore        5
     405: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     408: ldc           #65                 // String Unable to set permissions for configured filesystem since it does not support this
     410: aload_1
     411: invokevirtual #66                 // Method org/apache/hadoop/fs/FileSystem.getScheme:()Ljava/lang/String;
     414: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     419: aload_0
     420: iconst_0
     421: putfield      #4                  // Field fsSupportsChmod:Z
     424: goto          463
     427: astore        5
     429: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     432: new           #23                 // class java/lang/StringBuilder
     435: dup
     436: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     439: ldc           #76                 // String Failed to check if FileSystem suppports permissions on remoteLogDir [
     441: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     444: aload_3
     445: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     448: ldc           #55                 // String ]
     450: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     453: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     456: aload         5
     458: invokeinterface #77,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     463: return
    Exception table:
       from    to  target type
           2    11    14   Class java/io/IOException
          33   107   110   Class java/io/FileNotFoundException
          33   107   117   Class java/io/IOException
         220   236   239   Class java/lang/UnsupportedOperationException
         268   275   278   Class java/io/IOException
         295   308   311   Class java/lang/UnsupportedOperationException
         203   345   348   Class java/io/IOException
         384   400   403   Class java/lang/UnsupportedOperationException
         384   400   427   Class java/io/IOException

  public void createAppDir(java.lang.String, org.apache.hadoop.yarn.api.records.ApplicationId, org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getRemoteRootLogDir:()Lorg/apache/hadoop/fs/Path;
       4: astore        4
       6: aload_0
       7: invokevirtual #78                 // Method getRemoteRootLogDirSuffix:()Ljava/lang/String;
      10: astore        5
      12: aload_3
      13: new           #79                 // class org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController$1
      16: dup
      17: aload_0
      18: aload         4
      20: aload_2
      21: aload_1
      22: aload         5
      24: invokespecial #80                 // Method org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController$1."<init>":(Lorg/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/yarn/api/records/ApplicationId;Ljava/lang/String;Ljava/lang/String;)V
      27: invokevirtual #81                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      30: pop
      31: goto          79
      34: astore        6
      36: aload         6
      38: instanceof    #83                 // class org/apache/hadoop/ipc/RemoteException
      41: ifeq          69
      44: new           #39                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      47: dup
      48: aload         6
      50: checkcast     #83                 // class org/apache/hadoop/ipc/RemoteException
      53: iconst_1
      54: anewarray     #84                 // class java/lang/Class
      57: dup
      58: iconst_0
      59: ldc           #85                 // class org/apache/hadoop/security/token/SecretManager$InvalidToken
      61: aastore
      62: invokevirtual #86                 // Method org/apache/hadoop/ipc/RemoteException.unwrapRemoteException:([Ljava/lang/Class;)Ljava/io/IOException;
      65: invokespecial #87                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/Throwable;)V
      68: athrow
      69: new           #39                 // class org/apache/hadoop/yarn/exceptions/YarnRuntimeException
      72: dup
      73: aload         6
      75: invokespecial #87                 // Method org/apache/hadoop/yarn/exceptions/YarnRuntimeException."<init>":(Ljava/lang/Throwable;)V
      78: athrow
      79: return
    Exception table:
       from    to  target type
          12    31    34   Class java/lang/Exception

  protected org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getRemoteRootLogDir:()Lorg/apache/hadoop/fs/Path;
       4: aload_1
       5: invokevirtual #88                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: areturn

  protected void createDir(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fsSupportsChmod:Z
       4: ifeq          65
       7: new           #60                 // class org/apache/hadoop/fs/permission/FsPermission
      10: dup
      11: aload_3
      12: invokespecial #61                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
      15: astore        4
      17: aload_1
      18: aload_2
      19: aload         4
      21: invokevirtual #62                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      24: pop
      25: aload_1
      26: invokevirtual #89                 // Method org/apache/hadoop/fs/FileSystem.getConf:()Lorg/apache/hadoop/conf/Configuration;
      29: invokestatic  #90                 // Method org/apache/hadoop/fs/permission/FsPermission.getUMask:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/permission/FsPermission;
      32: astore        5
      34: aload         4
      36: aload         4
      38: aload         5
      40: invokevirtual #91                 // Method org/apache/hadoop/fs/permission/FsPermission.applyUMask:(Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsPermission;
      43: invokevirtual #46                 // Method org/apache/hadoop/fs/permission/FsPermission.equals:(Ljava/lang/Object;)Z
      46: ifne          62
      49: aload_1
      50: aload_2
      51: new           #60                 // class org/apache/hadoop/fs/permission/FsPermission
      54: dup
      55: aload_3
      56: invokespecial #61                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Lorg/apache/hadoop/fs/permission/FsPermission;)V
      59: invokevirtual #63                 // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      62: goto          71
      65: aload_1
      66: aload_2
      67: invokevirtual #92                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      70: pop
      71: return

  protected boolean checkExists(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore        4
       3: aload_1
       4: aload_2
       5: invokevirtual #43                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       8: astore        5
      10: aload_0
      11: getfield      #4                  // Field fsSupportsChmod:Z
      14: ifeq          39
      17: getstatic     #93                 // Field APP_DIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
      20: aload         5
      22: invokevirtual #44                 // Method org/apache/hadoop/fs/FileStatus.getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
      25: invokevirtual #46                 // Method org/apache/hadoop/fs/permission/FsPermission.equals:(Ljava/lang/Object;)Z
      28: ifne          39
      31: aload_1
      32: aload_2
      33: getstatic     #93                 // Field APP_DIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
      36: invokevirtual #63                 // Method org/apache/hadoop/fs/FileSystem.setPermission:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      39: goto          47
      42: astore        5
      44: iconst_0
      45: istore        4
      47: iload         4
      49: ireturn
    Exception table:
       from    to  target type
           3    39    42   Class java/io/FileNotFoundException

  public org.apache.hadoop.fs.Path getRemoteNodeLogFileForApp(org.apache.hadoop.yarn.api.records.ApplicationId, java.lang.String, org.apache.hadoop.yarn.api.records.NodeId);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getRemoteRootLogDir:()Lorg/apache/hadoop/fs/Path;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload_0
       8: invokevirtual #78                 // Method getRemoteRootLogDirSuffix:()Ljava/lang/String;
      11: invokestatic  #94                 // Method org/apache/hadoop/yarn/logaggregation/LogAggregationUtils.getRemoteNodeLogFileForApp:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/yarn/api/records/ApplicationId;Ljava/lang/String;Lorg/apache/hadoop/yarn/api/records/NodeId;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      14: areturn

  public org.apache.hadoop.fs.Path getRemoteAppLogDir(org.apache.hadoop.yarn.api.records.ApplicationId, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #13                 // Field remoteRootLogDir:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: getfield      #14                 // Field remoteRootLogDirSuffix:Ljava/lang/String;
      14: invokestatic  #95                 // Method org/apache/hadoop/yarn/logaggregation/LogAggregationUtils.getRemoteAppLogDir:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/yarn/api/records/ApplicationId;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      17: areturn

  protected void cleanOldLogs(org.apache.hadoop.fs.Path, org.apache.hadoop.yarn.api.records.NodeId, org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: invokevirtual #88                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: astore        4
      10: aload_1
      11: invokevirtual #96                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      14: aload         4
      16: invokevirtual #56                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      19: aload         4
      21: invokevirtual #57                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      24: invokevirtual #58                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      27: astore        5
      29: new           #97                 // class java/util/HashSet
      32: dup
      33: aload         4
      35: aload         5
      37: invokevirtual #98                 // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      40: invokestatic  #99                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      43: invokespecial #100                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      46: astore        6
      48: aload         6
      50: invokeinterface #101,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      55: aload_2
      56: invokedynamic #102,  0            // InvokeDynamic #0:test:(Lorg/apache/hadoop/yarn/api/records/NodeId;)Ljava/util/function/Predicate;
      61: invokeinterface #103,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      66: invokestatic  #104                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      69: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      74: checkcast     #106                // class java/util/Set
      77: astore        6
      79: aload         6
      81: invokeinterface #107,  1          // InterfaceMethod java/util/Set.size:()I
      86: aload_0
      87: getfield      #8                  // Field retentionSize:I
      90: if_icmplt     212
      93: new           #108                // class java/util/ArrayList
      96: dup
      97: aload         6
      99: invokespecial #109                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     102: astore        7
     104: aload         7
     106: new           #110                // class org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController$2
     109: dup
     110: aload_0
     111: invokespecial #111                // Method org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController$2."<init>":(Lorg/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController;)V
     114: invokestatic  #112                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     117: iconst_0
     118: istore        8
     120: iload         8
     122: aload         7
     124: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I
     129: aload_0
     130: getfield      #8                  // Field retentionSize:I
     133: isub
     134: if_icmpgt     212
     137: aload         7
     139: iload         8
     141: invokeinterface #114,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     146: checkcast     #115                // class org/apache/hadoop/fs/FileStatus
     149: astore        9
     151: aload_3
     152: new           #116                // class org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController$3
     155: dup
     156: aload_0
     157: aload         4
     159: aload         9
     161: invokespecial #117                // Method org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController$3."<init>":(Lorg/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;)V
     164: invokevirtual #81                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     167: pop
     168: goto          206
     171: astore        10
     173: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     176: new           #23                 // class java/lang/StringBuilder
     179: dup
     180: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     183: ldc           #118                // String Failed to delete
     185: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: aload         9
     190: invokevirtual #119                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     193: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     196: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: aload         10
     201: invokeinterface #120,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     206: iinc          8, 1
     209: goto          120
     212: goto          229
     215: astore        4
     217: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     220: ldc           #121                // String Failed to clean old logs
     222: aload         4
     224: invokeinterface #120,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     229: return
    Exception table:
       from    to  target type
         151   168   171   Class java/lang/Exception
           0   212   215   Class java/lang/Exception

  protected java.lang.String aggregatedLogSuffix(java.lang.String);
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: new           #23                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #122                // String End of LogType:
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_3
      28: aload_2
      29: new           #23                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #123                // String \n
      38: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #123                // String \n
      47: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_2
      58: new           #23                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #124                // String *
      67: aload_3
      68: invokevirtual #125                // Method java/lang/String.length:()I
      71: bipush        50
      73: iadd
      74: invokestatic  #126                // Method org/apache/commons/lang3/StringUtils.repeat:(Ljava/lang/String;I)Ljava/lang/String;
      77: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #127                // String \n\n
      82: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: aload_2
      93: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: areturn

  public boolean isFsSupportsChmod();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fsSupportsChmod:Z
       4: ireturn

  protected boolean belongsToAppAttempt(org.apache.hadoop.yarn.api.records.ApplicationAttemptId, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: invokestatic  #128                // Method org/apache/hadoop/yarn/api/records/ContainerId.fromString:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ContainerId;
       6: astore_3
       7: goto          24
      10: astore        4
      12: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #130                // String Could not parse container id from aggregated log.
      17: aload         4
      19: invokeinterface #77,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: aload_3
      25: ifnull        44
      28: aload_3
      29: invokevirtual #131                // Method org/apache/hadoop/yarn/api/records/ContainerId.getApplicationAttemptId:()Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      32: ifnull        44
      35: aload_3
      36: invokevirtual #131                // Method org/apache/hadoop/yarn/api/records/ContainerId.getApplicationAttemptId:()Lorg/apache/hadoop/yarn/api/records/ApplicationAttemptId;
      39: aload_1
      40: invokevirtual #132                // Method org/apache/hadoop/yarn/api/records/ApplicationAttemptId.equals:(Ljava/lang/Object;)Z
      43: ireturn
      44: iconst_0
      45: ireturn
    Exception table:
       from    to  target type
           2     7    10   Class java/lang/IllegalArgumentException

  private static boolean lambda$cleanOldLogs$0(org.apache.hadoop.yarn.api.records.NodeId, org.apache.hadoop.fs.FileStatus);
    Code:
       0: aload_1
       1: invokevirtual #119                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
       4: invokevirtual #133                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       7: aload_0
       8: invokestatic  #134                // Method org/apache/hadoop/yarn/logaggregation/LogAggregationUtils.getNodeString:(Lorg/apache/hadoop/yarn/api/records/NodeId;)Ljava/lang/String;
      11: invokevirtual #135                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      14: ifeq          36
      17: aload_1
      18: invokevirtual #119                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      21: invokevirtual #133                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      24: ldc           #137                // String .tmp
      26: invokevirtual #138                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      29: ifne          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #139                // class org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController
       2: invokestatic  #140                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: sipush        1023
      11: invokestatic  #141                // Method org/apache/hadoop/fs/permission/FsPermission.createImmutable:(S)Lorg/apache/hadoop/fs/permission/FsPermission;
      14: putstatic     #45                 // Field TLDIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
      17: sipush        504
      20: invokestatic  #141                // Method org/apache/hadoop/fs/permission/FsPermission.createImmutable:(S)Lorg/apache/hadoop/fs/permission/FsPermission;
      23: putstatic     #93                 // Field APP_DIR_PERMISSIONS:Lorg/apache/hadoop/fs/permission/FsPermission;
      26: bipush        95
      28: invokestatic  #141                // Method org/apache/hadoop/fs/permission/FsPermission.createImmutable:(S)Lorg/apache/hadoop/fs/permission/FsPermission;
      31: putstatic     #142                // Field APP_LOG_FILE_UMASK:Lorg/apache/hadoop/fs/permission/FsPermission;
      34: return
}
