Compiled from "RegisterApplicationMasterResponsePBImpl.java"
public class org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl extends org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse {
  org.apache.hadoop.yarn.proto.YarnServiceProtos$RegisterApplicationMasterResponseProto proto;

  org.apache.hadoop.yarn.proto.YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder builder;

  boolean viaProto;

  private org.apache.hadoop.yarn.api.records.Resource maximumResourceCapability;

  private java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String> applicationACLS;

  private java.util.List<org.apache.hadoop.yarn.api.records.Container> containersFromPreviousAttempts;

  private java.util.List<org.apache.hadoop.yarn.api.records.NMToken> nmTokens;

  private java.util.EnumSet<org.apache.hadoop.yarn.proto.YarnServiceProtos$SchedulerResourceTypes> schedulerResourceTypes;

  private java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.Resource> profiles;

  private java.util.List<org.apache.hadoop.yarn.api.records.ResourceTypeInfo> resourceTypeInfo;

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
       8: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      11: aload_0
      12: aconst_null
      13: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #10                 // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #5                  // Field applicationACLS:Ljava/util/Map;
      26: aload_0
      27: aconst_null
      28: putfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      31: aload_0
      32: aconst_null
      33: putfield      #12                 // Field nmTokens:Ljava/util/List;
      36: aload_0
      37: aconst_null
      38: putfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      41: aload_0
      42: aconst_null
      43: putfield      #13                 // Field profiles:Ljava/util/Map;
      46: aload_0
      47: aconst_null
      48: putfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
      51: aload_0
      52: invokestatic  #14                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      55: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      58: return

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl(org.apache.hadoop.yarn.proto.YarnServiceProtos$RegisterApplicationMasterResponseProto);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterResponse."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
       8: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      11: aload_0
      12: aconst_null
      13: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #10                 // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #5                  // Field applicationACLS:Ljava/util/Map;
      26: aload_0
      27: aconst_null
      28: putfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      31: aload_0
      32: aconst_null
      33: putfield      #12                 // Field nmTokens:Ljava/util/List;
      36: aload_0
      37: aconst_null
      38: putfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      41: aload_0
      42: aconst_null
      43: putfield      #13                 // Field profiles:Ljava/util/Map;
      46: aload_0
      47: aconst_null
      48: putfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
      51: aload_0
      52: aload_1
      53: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      56: aload_0
      57: iconst_1
      58: putfield      #10                 // Field viaProto:Z
      61: return

  public org.apache.hadoop.yarn.proto.YarnServiceProtos$RegisterApplicationMasterResponseProto getProto();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #10                 // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      16: goto          26
      19: aload_0
      20: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      23: invokevirtual #16                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      26: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      29: aload_0
      30: iconst_1
      31: putfield      #10                 // Field viaProto:Z
      34: aload_0
      35: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
       4: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #20                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #17                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      24: aload_0
      25: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #21                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #22                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl
      35: invokevirtual #17                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      38: invokevirtual #23                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
       4: invokestatic  #24                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #25                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #26                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      20: invokevirtual #16                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      23: putfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      26: aload_0
      27: iconst_1
      28: putfield      #10                 // Field viaProto:Z
      31: return

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
       4: ifnull        23
       7: aload_0
       8: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: aload_0
      12: aload_0
      13: getfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      16: invokespecial #28                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      19: invokevirtual #29                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.setMaximumCapability:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      22: pop
      23: aload_0
      24: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
      27: ifnull        34
      30: aload_0
      31: invokespecial #30                 // Method addApplicationACLs:()V
      34: aload_0
      35: getfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      38: ifnull        45
      41: aload_0
      42: invokespecial #31                 // Method addContainersFromPreviousAttemptToProto:()V
      45: aload_0
      46: getfield      #12                 // Field nmTokens:Ljava/util/List;
      49: ifnull        78
      52: aload_0
      53: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      56: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearNmTokensFromPreviousAttempts:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      59: pop
      60: aload_0
      61: aload_0
      62: getfield      #12                 // Field nmTokens:Ljava/util/List;
      65: invokespecial #33                 // Method getTokenProtoIterable:(Ljava/util/List;)Ljava/lang/Iterable;
      68: astore_1
      69: aload_0
      70: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      73: aload_1
      74: invokevirtual #34                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.addAllNmTokensFromPreviousAttempts:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      77: pop
      78: aload_0
      79: getfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      82: ifnull        89
      85: aload_0
      86: invokespecial #35                 // Method addSchedulerResourceTypes:()V
      89: aload_0
      90: getfield      #13                 // Field profiles:Ljava/util/Map;
      93: ifnull        100
      96: aload_0
      97: invokespecial #36                 // Method addResourceProfiles:()V
     100: aload_0
     101: getfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
     104: ifnull        111
     107: aload_0
     108: invokespecial #37                 // Method addResourceTypeInfosToProto:()V
     111: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      19: invokestatic  #38                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      22: putfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #10                 // Field viaProto:Z
      30: return

  public org.apache.hadoop.yarn.api.records.Resource getMaximumResourceCapability();
    Code:
       0: aload_0
       1: getfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
       4: ifnull        12
       7: aload_0
       8: getfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      11: areturn
      12: aload_0
      13: getfield      #10                 // Field viaProto:Z
      16: ifeq          26
      19: aload_0
      20: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      23: goto          30
      26: aload_0
      27: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      30: astore_1
      31: aload_1
      32: invokeinterface #39,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.hasMaximumCapability:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #40,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getMaximumCapability:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #41                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/Resource;
      53: putfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public void setMaximumResourceCapability(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
       8: ifnonnull     19
      11: aload_0
      12: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      15: invokevirtual #42                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearMaximumCapability:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      18: pop
      19: aload_0
      20: aload_1
      21: putfield      #27                 // Field maximumResourceCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      24: return

  public java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String> getApplicationACLs();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initApplicationACLs:()V
       4: aload_0
       5: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
       8: areturn

  private void initApplicationACLs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #44,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getApplicationACLsList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #45                 // class java/util/HashMap
      38: dup
      39: aload_2
      40: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      45: invokespecial #47                 // Method java/util/HashMap."<init>":(I)V
      48: putfield      #5                  // Field applicationACLS:Ljava/util/Map;
      51: aload_2
      52: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          104
      67: aload_3
      68: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #51                 // class org/apache/hadoop/yarn/proto/YarnProtos$ApplicationACLMapProto
      76: astore        4
      78: aload_0
      79: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
      82: aload         4
      84: invokevirtual #52                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationACLMapProto.getAccessType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAccessTypeProto;
      87: invokestatic  #53                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationAccessTypeProto;)Lorg/apache/hadoop/yarn/api/records/ApplicationAccessType;
      90: aload         4
      92: invokevirtual #54                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationACLMapProto.getAcl:()Ljava/lang/String;
      95: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: goto          58
     104: return

  private void addApplicationACLs();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
       8: invokevirtual #56                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearApplicationACLs:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #57                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$1
      23: dup
      24: aload_0
      25: invokespecial #58                 // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$1."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      33: aload_1
      34: invokevirtual #59                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.addAllApplicationACLs:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      37: pop
      38: return

  public void setApplicationACLs(java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #43                 // Method initApplicationACLs:()V
       9: aload_0
      10: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
      13: invokeinterface #60,  1           // InterfaceMethod java/util/Map.clear:()V
      18: aload_0
      19: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #61,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      28: return

  public void setClientToAMTokenMasterKey(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      12: invokevirtual #62                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearClientToAmTokenMasterKey:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      21: aload_1
      22: invokestatic  #63                 // Method com/google/protobuf/ByteString.copyFrom:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/ByteString;
      25: invokevirtual #64                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.setClientToAmTokenMasterKey:(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      28: pop
      29: return

  public java.nio.ByteBuffer getClientToAMTokenMasterKey();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
       8: invokevirtual #65                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.getClientToAmTokenMasterKey:()Lcom/google/protobuf/ByteString;
      11: invokevirtual #66                 // Method com/google/protobuf/ByteString.toByteArray:()[B
      14: invokestatic  #67                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      17: astore_1
      18: aload_1
      19: areturn

  public java.util.List<org.apache.hadoop.yarn.api.records.Container> getContainersFromPreviousAttempts();
    Code:
       0: aload_0
       1: getfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
       4: ifnull        12
       7: aload_0
       8: getfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      11: areturn
      12: aload_0
      13: invokespecial #68                 // Method initContainersPreviousAttemptList:()V
      16: aload_0
      17: getfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      20: areturn

  public void setContainersFromPreviousAttempts(java.util.List<org.apache.hadoop.yarn.api.records.Container>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: new           #69                 // class java/util/ArrayList
       9: dup
      10: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
      13: putfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      16: aload_0
      17: getfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      20: aload_1
      21: invokeinterface #71,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      26: pop
      27: return

  public java.lang.String getQueue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      11: goto          18
      14: aload_0
      15: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #72,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.hasQueue:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #73,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getQueue:()Ljava/lang/String;
      36: areturn

  public void setQueue(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     19
       8: aload_0
       9: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      12: invokevirtual #74                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearQueue:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      15: pop
      16: goto          28
      19: aload_0
      20: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      23: aload_1
      24: invokevirtual #75                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.setQueue:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      27: pop
      28: return

  private void initContainersPreviousAttemptList();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      11: goto          18
      14: aload_0
      15: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #76,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getContainersFromPreviousAttemptsList:()Ljava/util/List;
      25: astore_2
      26: aload_0
      27: new           #69                 // class java/util/ArrayList
      30: dup
      31: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      37: aload_2
      38: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          83
      53: aload_3
      54: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #77                 // class org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto
      62: astore        4
      64: aload_0
      65: getfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      68: aload_0
      69: aload         4
      71: invokespecial #78                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl;
      74: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          44
      83: return

  private void addContainersFromPreviousAttemptToProto();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
       8: invokevirtual #80                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearContainersFromPreviousAttempts:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: pop
      12: new           #69                 // class java/util/ArrayList
      15: dup
      16: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
      19: astore_1
      20: aload_0
      21: getfield      #11                 // Field containersFromPreviousAttempts:Ljava/util/List;
      24: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          64
      39: aload_2
      40: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #81                 // class org/apache/hadoop/yarn/api/records/Container
      48: astore_3
      49: aload_1
      50: aload_0
      51: aload_3
      52: invokespecial #82                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Container;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      55: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: goto          30
      64: aload_0
      65: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      68: aload_1
      69: invokevirtual #83                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.addAllContainersFromPreviousAttempts:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      72: pop
      73: return

  public java.util.List<org.apache.hadoop.yarn.api.records.NMToken> getNMTokensFromPreviousAttempts();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nmTokens:Ljava/util/List;
       4: ifnull        12
       7: aload_0
       8: getfield      #12                 // Field nmTokens:Ljava/util/List;
      11: areturn
      12: aload_0
      13: invokespecial #84                 // Method initLocalNewNMTokenList:()V
      16: aload_0
      17: getfield      #12                 // Field nmTokens:Ljava/util/List;
      20: areturn

  public void setNMTokensFromPreviousAttempts(java.util.List<org.apache.hadoop.yarn.api.records.NMToken>);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnull        17
       8: aload_1
       9: invokeinterface #85,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifeq          42
      17: aload_0
      18: getfield      #12                 // Field nmTokens:Ljava/util/List;
      21: ifnull        33
      24: aload_0
      25: getfield      #12                 // Field nmTokens:Ljava/util/List;
      28: invokeinterface #86,  1           // InterfaceMethod java/util/List.clear:()V
      33: aload_0
      34: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      37: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearNmTokensFromPreviousAttempts:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      40: pop
      41: return
      42: aload_0
      43: new           #69                 // class java/util/ArrayList
      46: dup
      47: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
      50: putfield      #12                 // Field nmTokens:Ljava/util/List;
      53: aload_0
      54: getfield      #12                 // Field nmTokens:Ljava/util/List;
      57: aload_1
      58: invokeinterface #71,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      63: pop
      64: return

  private synchronized void initLocalNewNMTokenList();
    Code:
       0: aload_0
       1: getfield      #10                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      11: goto          18
      14: aload_0
      15: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getNmTokensFromPreviousAttemptsList:()Ljava/util/List;
      25: astore_2
      26: aload_0
      27: new           #69                 // class java/util/ArrayList
      30: dup
      31: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #12                 // Field nmTokens:Ljava/util/List;
      37: aload_2
      38: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          83
      53: aload_3
      54: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #88                 // class org/apache/hadoop/yarn/proto/YarnServiceProtos$NMTokenProto
      62: astore        4
      64: aload_0
      65: getfield      #12                 // Field nmTokens:Ljava/util/List;
      68: aload_0
      69: aload         4
      71: invokespecial #89                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$NMTokenProto;)Lorg/apache/hadoop/yarn/api/records/NMToken;
      74: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          44
      83: return

  private synchronized java.lang.Iterable<org.apache.hadoop.yarn.proto.YarnServiceProtos$NMTokenProto> getTokenProtoIterable(java.util.List<org.apache.hadoop.yarn.api.records.NMToken>);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: new           #90                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$2
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #91                 // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$2."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl;Ljava/util/List;)V
      13: areturn

  public java.util.EnumSet<org.apache.hadoop.yarn.proto.YarnServiceProtos$SchedulerResourceTypes> getSchedulerResourceTypes();
    Code:
       0: aload_0
       1: invokespecial #92                 // Method initSchedulerResourceTypes:()V
       4: aload_0
       5: getfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
       8: areturn

  private void initSchedulerResourceTypes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #93,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getSchedulerResourceTypesList:()Ljava/util/List;
      33: astore_2
      34: aload_2
      35: invokeinterface #85,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      40: ifeq          55
      43: aload_0
      44: ldc           #94                 // class org/apache/hadoop/yarn/proto/YarnServiceProtos$SchedulerResourceTypes
      46: invokestatic  #95                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      49: putfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      52: goto          63
      55: aload_0
      56: aload_2
      57: invokestatic  #96                 // Method java/util/EnumSet.copyOf:(Ljava/util/Collection;)Ljava/util/EnumSet;
      60: putfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      63: return

  private void addSchedulerResourceTypes();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
       8: invokevirtual #97                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearSchedulerResourceTypes:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      16: ifnonnull     20
      19: return
      20: new           #98                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$3
      23: dup
      24: aload_0
      25: invokespecial #99                 // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$3."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      33: aload_1
      34: invokevirtual #100                // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.addAllSchedulerResourceTypes:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      37: pop
      38: return

  public void setSchedulerResourceTypes(java.util.EnumSet<org.apache.hadoop.yarn.proto.YarnServiceProtos$SchedulerResourceTypes>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #92                 // Method initSchedulerResourceTypes:()V
       9: aload_0
      10: getfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      13: invokevirtual #101                // Method java/util/EnumSet.clear:()V
      16: aload_0
      17: getfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
      20: aload_1
      21: invokevirtual #102                // Method java/util/EnumSet.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: return

  private void addResourceProfiles();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
       8: invokevirtual #103                // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearResourceProfiles:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #13                 // Field profiles:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: invokestatic  #104                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto$Builder;
      23: astore_1
      24: aload_0
      25: getfield      #13                 // Field profiles:Ljava/util/Map;
      28: invokeinterface #105,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      33: invokeinterface #106,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore_2
      39: aload_2
      40: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          110
      48: aload_2
      49: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #107                // class java/util/Map$Entry
      57: astore_3
      58: invokestatic  #108                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry$Builder;
      61: astore        4
      63: aload         4
      65: aload_3
      66: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      71: checkcast     #110                // class java/lang/String
      74: invokevirtual #111                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry$Builder.setName:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry$Builder;
      77: pop
      78: aload         4
      80: aload_0
      81: aload_3
      82: invokeinterface #112,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      87: checkcast     #113                // class org/apache/hadoop/yarn/api/records/Resource
      90: invokespecial #28                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      93: invokevirtual #114                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry$Builder.setResources:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry$Builder;
      96: pop
      97: aload_1
      98: aload         4
     100: invokevirtual #115                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry;
     103: invokevirtual #116                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto$Builder.addResourceProfilesMap:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto$Builder;
     106: pop
     107: goto          39
     110: aload_0
     111: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
     114: aload_1
     115: invokevirtual #117                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto;
     118: invokevirtual #118                // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.setResourceProfiles:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
     121: pop
     122: return

  private void initResourceProfiles();
    Code:
       0: aload_0
       1: getfield      #13                 // Field profiles:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: new           #45                 // class java/util/HashMap
      12: dup
      13: invokespecial #119                // Method java/util/HashMap."<init>":()V
      16: putfield      #13                 // Field profiles:Ljava/util/Map;
      19: aload_0
      20: getfield      #10                 // Field viaProto:Z
      23: ifeq          33
      26: aload_0
      27: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      30: goto          37
      33: aload_0
      34: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      37: astore_1
      38: aload_1
      39: invokeinterface #120,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.hasResourceProfiles:()Z
      44: ifeq          111
      47: aload_1
      48: invokeinterface #121,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getResourceProfiles:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto;
      53: astore_2
      54: aload_2
      55: invokevirtual #122                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfilesProto.getResourceProfilesMapList:()Ljava/util/List;
      58: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: astore_3
      64: aload_3
      65: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          111
      73: aload_3
      74: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #123                // class org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry
      82: astore        4
      84: aload_0
      85: getfield      #13                 // Field profiles:Ljava/util/Map;
      88: aload         4
      90: invokevirtual #124                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry.getName:()Ljava/lang/String;
      93: aload_0
      94: aload         4
      96: invokevirtual #125                // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceProfileEntry.getResources:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      99: invokespecial #41                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/Resource;
     102: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: goto          64
     111: return

  public java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.Resource> getResourceProfiles();
    Code:
       0: aload_0
       1: invokespecial #126                // Method initResourceProfiles:()V
       4: aload_0
       5: getfield      #13                 // Field profiles:Ljava/util/Map;
       8: areturn

  public void setResourceProfiles(java.util.Map<java.lang.String, org.apache.hadoop.yarn.api.records.Resource>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #126                // Method initResourceProfiles:()V
       9: aload_0
      10: getfield      #13                 // Field profiles:Ljava/util/Map;
      13: invokeinterface #60,  1           // InterfaceMethod java/util/Map.clear:()V
      18: aload_0
      19: getfield      #13                 // Field profiles:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #61,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      28: return

  private org.apache.hadoop.yarn.api.records.Resource convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto);
    Code:
       0: new           #127                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl
       3: dup
       4: aload_1
       5: invokespecial #128                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_1
       1: invokestatic  #129                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
       4: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerProto);
    Code:
       0: new           #130                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl
       3: dup
       4: aload_1
       5: invokespecial #131                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Container);
    Code:
       0: aload_1
       1: checkcast     #130                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl
       4: invokevirtual #132                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
       7: areturn

  private org.apache.hadoop.yarn.proto.YarnServiceProtos$NMTokenProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.NMToken);
    Code:
       0: aload_1
       1: checkcast     #133                // class org/apache/hadoop/yarn/api/records/impl/pb/NMTokenPBImpl
       4: invokevirtual #134                // Method org/apache/hadoop/yarn/api/records/impl/pb/NMTokenPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$NMTokenProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.NMToken convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnServiceProtos$NMTokenProto);
    Code:
       0: new           #133                // class org/apache/hadoop/yarn/api/records/impl/pb/NMTokenPBImpl
       3: dup
       4: aload_1
       5: invokespecial #135                // Method org/apache/hadoop/yarn/api/records/impl/pb/NMTokenPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$NMTokenProto;)V
       8: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourceTypeInfoPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceTypeInfoProto);
    Code:
       0: new           #136                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceTypeInfoPBImpl
       3: dup
       4: aload_1
       5: invokespecial #137                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceTypeInfoPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceTypeInfoProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceTypeInfoProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ResourceTypeInfo);
    Code:
       0: aload_1
       1: checkcast     #136                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceTypeInfoPBImpl
       4: invokevirtual #138                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceTypeInfoPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceTypeInfoProto;
       7: areturn

  public java.util.List<org.apache.hadoop.yarn.api.records.ResourceTypeInfo> getResourceTypes();
    Code:
       0: aload_0
       1: invokespecial #139                // Method initResourceTypeInfosList:()V
       4: aload_0
       5: getfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
       8: areturn

  public void setResourceTypes(java.util.List<org.apache.hadoop.yarn.api.records.ResourceTypeInfo>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
       4: ifnonnull     15
       7: aload_0
       8: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: invokevirtual #140                // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearResourceTypes:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      14: pop
      15: aload_0
      16: aload_1
      17: putfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
      20: return

  private void addResourceTypeInfosToProto();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
       8: invokevirtual #140                // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.clearResourceTypes:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
      16: ifnonnull     20
      19: return
      20: new           #141                // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$4
      23: dup
      24: aload_0
      25: invokespecial #142                // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl$4."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      33: aload_1
      34: invokevirtual #143                // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder.addAllResourceTypes:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      37: pop
      38: return

  private void initResourceTypeInfosList();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #8                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto;
      19: goto          26
      22: aload_0
      23: getfield      #9                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #144,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$RegisterApplicationMasterResponseProtoOrBuilder.getResourceTypesList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #69                 // class java/util/ArrayList
      38: dup
      39: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
      45: aload_2
      46: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          91
      61: aload_3
      62: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #145                // class org/apache/hadoop/yarn/proto/YarnProtos$ResourceTypeInfoProto
      70: astore        4
      72: aload_0
      73: getfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
      76: aload_0
      77: aload         4
      79: invokespecial #146                // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceTypeInfoProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourceTypeInfoPBImpl;
      82: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          52
      91: return

  static java.util.Map access$000(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field applicationACLS:Ljava/util/Map;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnServiceProtos$NMTokenProto access$100(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl, org.apache.hadoop.yarn.api.records.NMToken);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/NMToken;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$NMTokenProto;
       5: areturn

  static java.util.EnumSet access$200(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field schedulerResourceTypes:Ljava/util/EnumSet;
       4: areturn

  static java.util.List access$300(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resourceTypeInfo:Ljava/util/List;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$ResourceTypeInfoProto access$400(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl, org.apache.hadoop.yarn.api.records.ResourceTypeInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ResourceTypeInfo;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceTypeInfoProto;
       5: areturn
}
