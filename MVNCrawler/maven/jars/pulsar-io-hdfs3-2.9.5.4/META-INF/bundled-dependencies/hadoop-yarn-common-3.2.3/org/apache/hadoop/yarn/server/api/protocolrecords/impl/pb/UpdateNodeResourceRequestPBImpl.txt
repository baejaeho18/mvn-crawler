Compiled from "UpdateNodeResourceRequestPBImpl.java"
public class org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.UpdateNodeResourceRequestPBImpl extends org.apache.hadoop.yarn.server.api.protocolrecords.UpdateNodeResourceRequest {
  org.apache.hadoop.yarn.proto.YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto proto;

  org.apache.hadoop.yarn.proto.YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder builder;

  boolean viaProto;

  java.util.Map<org.apache.hadoop.yarn.api.records.NodeId, org.apache.hadoop.yarn.api.records.ResourceOption> nodeResourceMap;

  public org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.UpdateNodeResourceRequestPBImpl();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/yarn/server/api/protocolrecords/UpdateNodeResourceRequest."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
       8: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
      26: aload_0
      27: invokestatic  #9                  // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      30: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      33: return

  public org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.UpdateNodeResourceRequestPBImpl(org.apache.hadoop.yarn.proto.YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/yarn/server/api/protocolrecords/UpdateNodeResourceRequest."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
       8: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      31: aload_0
      32: iconst_1
      33: putfield      #7                  // Field viaProto:Z
      36: return

  public java.util.Map<org.apache.hadoop.yarn.api.records.NodeId, org.apache.hadoop.yarn.api.records.ResourceOption> getNodeResourceMap();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method initNodeResourceMap:()V
       4: aload_0
       5: getfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
       8: areturn

  public void setNodeResourceMap(java.util.Map<org.apache.hadoop.yarn.api.records.NodeId, org.apache.hadoop.yarn.api.records.ResourceOption>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #10                 // Method initNodeResourceMap:()V
       9: aload_0
      10: getfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
      13: invokeinterface #11,  1           // InterfaceMethod java/util/Map.clear:()V
      18: aload_0
      19: getfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #12,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      28: return

  public org.apache.hadoop.yarn.proto.YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto getProto();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #7                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      16: goto          26
      19: aload_0
      20: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      23: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      26: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field viaProto:Z
      34: aload_0
      35: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      38: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
       4: ifnull        11
       7: aload_0
       8: invokespecial #15                 // Method addNodeResourceMap:()V
      11: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #16                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #17                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      20: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      23: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      26: aload_0
      27: iconst_1
      28: putfield      #7                  // Field viaProto:Z
      31: return

  private void initNodeResourceMap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #7                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      19: goto          26
      22: aload_0
      23: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProtoOrBuilder.getNodeResourceMapList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #19                 // class java/util/HashMap
      38: dup
      39: aload_2
      40: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      45: invokespecial #21                 // Method java/util/HashMap."<init>":(I)V
      48: putfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
      51: aload_2
      52: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          109
      67: aload_3
      68: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #25                 // class org/apache/hadoop/yarn/proto/YarnProtos$NodeResourceMapProto
      76: astore        4
      78: aload_0
      79: getfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
      82: aload_0
      83: aload         4
      85: invokevirtual #26                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeResourceMapProto.getNodeId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      88: invokespecial #27                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)Lorg/apache/hadoop/yarn/api/records/NodeId;
      91: aload_0
      92: aload         4
      94: invokevirtual #28                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeResourceMapProto.getResourceOption:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceOptionProto;
      97: invokespecial #29                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceOptionProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourceOptionPBImpl;
     100: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: goto          58
     109: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      19: invokestatic  #31                 // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;)Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      22: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field viaProto:Z
      30: return

  private org.apache.hadoop.yarn.proto.YarnProtos$NodeIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.NodeId);
    Code:
       0: aload_1
       1: checkcast     #32                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
       4: invokevirtual #33                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.NodeId convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$NodeIdProto);
    Code:
       0: new           #32                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #34                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourceOptionPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceOptionProto);
    Code:
       0: new           #35                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceOptionPBImpl
       3: dup
       4: aload_1
       5: invokespecial #36                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceOptionPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceOptionProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceOptionProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ResourceOption);
    Code:
       0: aload_1
       1: checkcast     #35                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceOptionPBImpl
       4: invokevirtual #37                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceOptionPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceOptionProto;
       7: areturn

  private void addNodeResourceMap();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
       8: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder.clearNodeResourceMap:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #8                  // Field nodeResourceMap:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #39                 // class org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/UpdateNodeResourceRequestPBImpl$1
      23: dup
      24: aload_0
      25: invokespecial #40                 // Method org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/UpdateNodeResourceRequestPBImpl$1."<init>":(Lorg/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/UpdateNodeResourceRequestPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      33: aload_1
      34: invokevirtual #41                 // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder.addAllNodeResourceMap:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto$Builder;
      37: pop
      38: return

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
       4: invokevirtual #43                 // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #45                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #42                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      24: aload_0
      25: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #46                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #47                 // class org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/UpdateNodeResourceRequestPBImpl
      35: invokevirtual #42                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto;
      38: invokevirtual #48                 // Method org/apache/hadoop/yarn/proto/YarnServerResourceManagerServiceProtos$UpdateNodeResourceRequestProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  static org.apache.hadoop.yarn.proto.YarnProtos$ResourceOptionProto access$000(org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.UpdateNodeResourceRequestPBImpl, org.apache.hadoop.yarn.api.records.ResourceOption);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ResourceOption;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceOptionProto;
       5: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$NodeIdProto access$100(org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.UpdateNodeResourceRequestPBImpl, org.apache.hadoop.yarn.api.records.NodeId);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/NodeId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
       5: areturn
}
