Compiled from "UpdateContainerRequestPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.UpdateContainerRequestPBImpl extends org.apache.hadoop.yarn.api.records.UpdateContainerRequest {
  private org.apache.hadoop.yarn.proto.YarnServiceProtos$UpdateContainerRequestProto proto;

  private org.apache.hadoop.yarn.proto.YarnServiceProtos$UpdateContainerRequestProto$Builder builder;

  private boolean viaProto;

  private org.apache.hadoop.yarn.api.records.ContainerId existingContainerId;

  private org.apache.hadoop.yarn.api.records.Resource targetCapability;

  public org.apache.hadoop.yarn.api.records.impl.pb.UpdateContainerRequestPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      31: aload_0
      32: invokestatic  #8                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      35: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      38: return

  public org.apache.hadoop.yarn.api.records.impl.pb.UpdateContainerRequestPBImpl(org.apache.hadoop.yarn.proto.YarnServiceProtos$UpdateContainerRequestProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/UpdateContainerRequest."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      31: aload_0
      32: aload_1
      33: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      36: aload_0
      37: iconst_1
      38: putfield      #5                  // Field viaProto:Z
      41: return

  public org.apache.hadoop.yarn.proto.YarnServiceProtos$UpdateContainerRequestProto getProto();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      23: invokevirtual #10                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      29: aload_0
      30: iconst_1
      31: putfield      #5                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      38: areturn

  public int getContainerVersion();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.hasContainerVersion:()Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.getContainerVersion:()I
      36: ireturn

  public void setContainerVersion(int);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
       8: iload_1
       9: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.setContainerVersion:(I)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      12: pop
      13: return

  public org.apache.hadoop.yarn.api.records.ContainerId getContainerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      23: ifnull        31
      26: aload_0
      27: getfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      30: areturn
      31: aload_1
      32: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.hasContainerId:()Z
      37: ifeq          53
      40: aload_0
      41: aload_1
      42: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.getContainerId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      47: invokestatic  #17                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl;
      50: putfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      53: aload_0
      54: getfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      57: areturn

  public void setContainerId(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      12: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.clearContainerId:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      21: return

  public org.apache.hadoop.yarn.api.records.Resource getCapability();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      23: ifnull        31
      26: aload_0
      27: getfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      30: areturn
      31: aload_1
      32: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.hasCapability:()Z
      37: ifeq          53
      40: aload_0
      41: aload_1
      42: invokeinterface #20,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.getCapability:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      47: invokestatic  #21                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/Resource;
      50: putfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      53: aload_0
      54: getfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      57: areturn

  public void setCapability(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      12: invokevirtual #22                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.clearCapability:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  public org.apache.hadoop.yarn.api.records.ExecutionType getExecutionType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.hasExecutionType:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #24,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.getExecutionType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
      36: invokestatic  #25                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      39: areturn

  public void setExecutionType(org.apache.hadoop.yarn.api.records.ExecutionType);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      12: invokevirtual #26                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.clearExecutionType:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      21: aload_1
      22: invokestatic  #27                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ExecutionType;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
      25: invokevirtual #28                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.setExecutionType:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      28: pop
      29: return

  public org.apache.hadoop.yarn.api.records.ContainerUpdateType getContainerUpdateType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.hasUpdateType:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProtoOrBuilder.getUpdateType:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ContainerUpdateTypeProto;
      36: invokestatic  #31                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ContainerUpdateTypeProto;)Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;
      39: areturn

  public void setContainerUpdateType(org.apache.hadoop.yarn.api.records.ContainerUpdateType);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      12: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.clearUpdateType:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      21: aload_1
      22: invokestatic  #33                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerUpdateType;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ContainerUpdateTypeProto;
      25: invokevirtual #34                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.setUpdateType:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ContainerUpdateTypeProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      28: pop
      29: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #13                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #35                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      20: invokevirtual #10                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
      19: invokestatic  #36                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
       4: ifnull        22
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      11: aload_0
      12: getfield      #6                  // Field existingContainerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      15: invokestatic  #37                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      18: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.setContainerId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      21: pop
      22: aload_0
      23: getfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      26: ifnull        44
      29: aload_0
      30: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      33: aload_0
      34: getfield      #7                  // Field targetCapability:Lorg/apache/hadoop/yarn/api/records/Resource;
      37: invokestatic  #39                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      40: invokevirtual #40                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder.setCapability:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto$Builder;
      43: pop
      44: return
}
