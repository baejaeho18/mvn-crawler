Compiled from "AbstractLivelinessMonitor.java"
public abstract class org.apache.hadoop.yarn.util.AbstractLivelinessMonitor<O> extends org.apache.hadoop.service.AbstractService {
  private static final org.apache.commons.logging.Log LOG;

  private java.lang.Thread checkerThread;

  private volatile boolean stopped;

  public static final int DEFAULT_EXPIRE;

  private long expireInterval;

  private long monitorInterval;

  private volatile boolean resetTimerOnStart;

  private final org.apache.hadoop.yarn.util.Clock clock;

  private java.util.Map<O, java.lang.Long> running;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.yarn.util.AbstractLivelinessMonitor(java.lang.String, org.apache.hadoop.yarn.util.Clock);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/hadoop/service/AbstractService."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: ldc2_w        #8                  // long 300000l
       9: putfield      #10                 // Field expireInterval:J
      12: aload_0
      13: aload_0
      14: getfield      #10                 // Field expireInterval:J
      17: ldc2_w        #11                 // long 3l
      20: ldiv
      21: putfield      #1                  // Field monitorInterval:J
      24: aload_0
      25: iconst_1
      26: putfield      #13                 // Field resetTimerOnStart:Z
      29: aload_0
      30: new           #14                 // class java/util/HashMap
      33: dup
      34: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      37: putfield      #4                  // Field running:Ljava/util/Map;
      40: aload_0
      41: aload_2
      42: putfield      #3                  // Field clock:Lorg/apache/hadoop/yarn/util/Clock;
      45: return

  public org.apache.hadoop.yarn.util.AbstractLivelinessMonitor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #16                 // class org/apache/hadoop/yarn/util/MonotonicClock
       5: dup
       6: invokespecial #17                 // Method org/apache/hadoop/yarn/util/MonotonicClock."<init>":()V
       9: invokespecial #18                 // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/yarn/util/Clock;)V
      12: return

  protected void serviceStart() throws java.lang.Exception;
    Code:
       0: getstatic     #19                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: aload_0
       7: getfield      #5                  // Field stopped:Z
      10: ifeq          23
      13: new           #20                 // class java/lang/AssertionError
      16: dup
      17: ldc           #21                 // String starting when already stopped
      19: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      22: athrow
      23: aload_0
      24: invokevirtual #23                 // Method resetTimer:()V
      27: aload_0
      28: new           #24                 // class java/lang/Thread
      31: dup
      32: new           #25                 // class org/apache/hadoop/yarn/util/AbstractLivelinessMonitor$PingChecker
      35: dup
      36: aload_0
      37: aconst_null
      38: invokespecial #26                 // Method org/apache/hadoop/yarn/util/AbstractLivelinessMonitor$PingChecker."<init>":(Lorg/apache/hadoop/yarn/util/AbstractLivelinessMonitor;Lorg/apache/hadoop/yarn/util/AbstractLivelinessMonitor$1;)V
      41: invokespecial #27                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      44: putfield      #28                 // Field checkerThread:Ljava/lang/Thread;
      47: aload_0
      48: getfield      #28                 // Field checkerThread:Ljava/lang/Thread;
      51: ldc           #29                 // String Ping Checker
      53: invokevirtual #30                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      56: aload_0
      57: getfield      #28                 // Field checkerThread:Ljava/lang/Thread;
      60: invokevirtual #31                 // Method java/lang/Thread.start:()V
      63: aload_0
      64: invokespecial #32                 // Method org/apache/hadoop/service/AbstractService.serviceStart:()V
      67: return

  protected void serviceStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field stopped:Z
       5: aload_0
       6: getfield      #28                 // Field checkerThread:Ljava/lang/Thread;
       9: ifnull        19
      12: aload_0
      13: getfield      #28                 // Field checkerThread:Ljava/lang/Thread;
      16: invokevirtual #33                 // Method java/lang/Thread.interrupt:()V
      19: aload_0
      20: invokespecial #34                 // Method org/apache/hadoop/service/AbstractService.serviceStop:()V
      23: return

  protected abstract void expire(O);

  protected void setExpireInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: putfield      #10                 // Field expireInterval:J
       6: return

  protected long getExpireInterval(O);
    Code:
       0: aload_0
       1: getfield      #10                 // Field expireInterval:J
       4: lreturn

  protected void setMonitorInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #1                  // Field monitorInterval:J
       5: return

  public synchronized void receivedPing(O);
    Code:
       0: aload_0
       1: getfield      #4                  // Field running:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          36
      13: aload_0
      14: getfield      #4                  // Field running:Ljava/util/Map;
      17: aload_1
      18: aload_0
      19: getfield      #3                  // Field clock:Lorg/apache/hadoop/yarn/util/Clock;
      22: invokeinterface #36,  1           // InterfaceMethod org/apache/hadoop/yarn/util/Clock.getTime:()J
      27: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: return

  public synchronized void register(O);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field clock:Lorg/apache/hadoop/yarn/util/Clock;
       6: invokeinterface #36,  1           // InterfaceMethod org/apache/hadoop/yarn/util/Clock.getTime:()J
      11: invokevirtual #39                 // Method register:(Ljava/lang/Object;J)V
      14: return

  public synchronized void register(O, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field running:Ljava/util/Map;
       4: aload_1
       5: lload_2
       6: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public synchronized void unregister(O);
    Code:
       0: aload_0
       1: getfield      #4                  // Field running:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public synchronized void resetTimer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field resetTimerOnStart:Z
       4: ifeq          68
       7: aload_0
       8: getfield      #3                  // Field clock:Lorg/apache/hadoop/yarn/util/Clock;
      11: invokeinterface #36,  1           // InterfaceMethod org/apache/hadoop/yarn/util/Clock.getTime:()J
      16: lstore_1
      17: aload_0
      18: getfield      #4                  // Field running:Ljava/util/Map;
      21: invokeinterface #41,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      26: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          68
      41: aload_3
      42: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: astore        4
      49: aload_0
      50: getfield      #4                  // Field running:Ljava/util/Map;
      53: aload         4
      55: lload_1
      56: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      59: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: goto          32
      68: return

  protected void setResetTimeOnStart(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field resetTimerOnStart:Z
       5: return

  static boolean access$100(org.apache.hadoop.yarn.util.AbstractLivelinessMonitor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field stopped:Z
       4: ireturn

  static java.util.Map access$200(org.apache.hadoop.yarn.util.AbstractLivelinessMonitor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field running:Ljava/util/Map;
       4: areturn

  static org.apache.hadoop.yarn.util.Clock access$300(org.apache.hadoop.yarn.util.AbstractLivelinessMonitor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field clock:Lorg/apache/hadoop/yarn/util/Clock;
       4: areturn

  static org.apache.commons.logging.Log access$400();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/apache/commons/logging/Log;
       3: areturn

  static long access$500(org.apache.hadoop.yarn.util.AbstractLivelinessMonitor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field monitorInterval:J
       4: lreturn

  static {};
    Code:
       0: ldc           #7                  // class org/apache/hadoop/yarn/util/AbstractLivelinessMonitor
       2: invokevirtual #45                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: ldc           #7                  // class org/apache/hadoop/yarn/util/AbstractLivelinessMonitor
      18: invokestatic  #46                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      21: putstatic     #2                  // Field LOG:Lorg/apache/commons/logging/Log;
      24: return
}
