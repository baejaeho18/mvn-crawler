Compiled from "ContainerPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.ContainerPBImpl extends org.apache.hadoop.yarn.api.records.Container {
  org.apache.hadoop.yarn.proto.YarnProtos$ContainerProto proto;

  org.apache.hadoop.yarn.proto.YarnProtos$ContainerProto$Builder builder;

  boolean viaProto;

  private org.apache.hadoop.yarn.api.records.ContainerId containerId;

  private org.apache.hadoop.yarn.api.records.NodeId nodeId;

  private org.apache.hadoop.yarn.api.records.Resource resource;

  private org.apache.hadoop.yarn.api.records.Priority priority;

  private org.apache.hadoop.yarn.api.records.Token containerToken;

  private java.util.Set<java.lang.String> allocationTags;

  public org.apache.hadoop.yarn.api.records.impl.pb.ContainerPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/Container."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      36: aload_0
      37: aconst_null
      38: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      41: aload_0
      42: aconst_null
      43: putfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
      46: aload_0
      47: aconst_null
      48: putfield      #11                 // Field allocationTags:Ljava/util/Set;
      51: aload_0
      52: invokestatic  #12                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      55: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      58: return

  public org.apache.hadoop.yarn.api.records.impl.pb.ContainerPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$ContainerProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/Container."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      36: aload_0
      37: aconst_null
      38: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      41: aload_0
      42: aconst_null
      43: putfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
      46: aload_0
      47: aconst_null
      48: putfield      #11                 // Field allocationTags:Ljava/util/Set;
      51: aload_0
      52: aload_1
      53: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      56: aload_0
      57: iconst_1
      58: putfield      #5                  // Field viaProto:Z
      61: return

  public synchronized org.apache.hadoop.yarn.proto.YarnProtos$ContainerProto getProto();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      23: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      29: aload_0
      30: iconst_1
      31: putfield      #5                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
       4: invokevirtual #16                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #18                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #15                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      24: aload_0
      25: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #19                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #20                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl
      35: invokevirtual #15                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      38: invokevirtual #21                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
       4: ifnull        46
       7: aload_0
       8: getfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      11: checkcast     #22                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
      14: invokevirtual #23                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      21: invokevirtual #24                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.getId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      24: invokevirtual #25                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto.equals:(Ljava/lang/Object;)Z
      27: ifne          46
      30: aload_0
      31: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      34: aload_0
      35: aload_0
      36: getfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      39: invokespecial #26                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      42: invokevirtual #27                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      45: pop
      46: aload_0
      47: getfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      50: ifnull        92
      53: aload_0
      54: getfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      57: checkcast     #28                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
      60: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      63: aload_0
      64: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      67: invokevirtual #30                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.getNodeId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      70: invokevirtual #31                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto.equals:(Ljava/lang/Object;)Z
      73: ifne          92
      76: aload_0
      77: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      80: aload_0
      81: aload_0
      82: getfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      85: invokespecial #32                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/NodeId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      88: invokevirtual #33                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setNodeId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      91: pop
      92: aload_0
      93: getfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      96: ifnull        115
      99: aload_0
     100: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     103: aload_0
     104: aload_0
     105: getfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
     108: invokespecial #34                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
     111: invokevirtual #35                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setResource:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     114: pop
     115: aload_0
     116: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
     119: ifnull        161
     122: aload_0
     123: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
     126: checkcast     #36                 // class org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl
     129: invokevirtual #37                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
     132: aload_0
     133: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     136: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.getPriority:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
     139: invokevirtual #39                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PriorityProto.equals:(Ljava/lang/Object;)Z
     142: ifne          161
     145: aload_0
     146: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     149: aload_0
     150: aload_0
     151: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
     154: invokespecial #40                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Priority;)Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
     157: invokevirtual #41                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setPriority:(Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     160: pop
     161: aload_0
     162: getfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
     165: ifnull        207
     168: aload_0
     169: getfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
     172: checkcast     #42                 // class org/apache/hadoop/yarn/api/records/impl/pb/TokenPBImpl
     175: invokevirtual #43                 // Method org/apache/hadoop/yarn/api/records/impl/pb/TokenPBImpl.getProto:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
     178: aload_0
     179: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     182: invokevirtual #44                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.getContainerToken:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
     185: invokevirtual #45                 // Method org/apache/hadoop/security/proto/SecurityProtos$TokenProto.equals:(Ljava/lang/Object;)Z
     188: ifne          207
     191: aload_0
     192: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     195: aload_0
     196: aload_0
     197: getfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
     200: invokespecial #46                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Token;)Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
     203: invokevirtual #47                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setContainerToken:(Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     206: pop
     207: aload_0
     208: getfield      #11                 // Field allocationTags:Ljava/util/Set;
     211: ifnull        234
     214: aload_0
     215: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     218: invokevirtual #48                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearAllocationTags:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     221: pop
     222: aload_0
     223: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     226: aload_0
     227: getfield      #11                 // Field allocationTags:Ljava/util/Set;
     230: invokevirtual #49                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.addAllAllocationTags:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
     233: pop
     234: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #50                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #51                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      20: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      19: invokestatic  #52                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  public synchronized org.apache.hadoop.yarn.api.records.ContainerId getId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      23: ifnull        31
      26: aload_0
      27: getfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      30: areturn
      31: aload_1
      32: invokeinterface #53,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.hasId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #54,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      50: invokespecial #55                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl;
      53: putfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      56: aload_0
      57: getfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      60: areturn

  public void setNodeId(org.apache.hadoop.yarn.api.records.NodeId);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: invokevirtual #56                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearNodeId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      21: return

  public org.apache.hadoop.yarn.api.records.NodeId getNodeId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      23: ifnull        31
      26: aload_0
      27: getfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      30: areturn
      31: aload_1
      32: invokeinterface #57,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.hasNodeId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #58,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getNodeId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      50: invokespecial #59                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl;
      53: putfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      56: aload_0
      57: getfield      #7                  // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      60: areturn

  public synchronized void setId(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: invokevirtual #60                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      21: return

  public java.lang.String getNodeHttpAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #61,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.hasNodeHttpAddress:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #62,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getNodeHttpAddress:()Ljava/lang/String;
      36: areturn

  public void setNodeHttpAddress(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: invokevirtual #63                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearNodeHttpAddress:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      21: aload_1
      22: invokevirtual #64                 // Method java/lang/String.intern:()Ljava/lang/String;
      25: invokevirtual #65                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setNodeHttpAddress:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      28: pop
      29: return

  public org.apache.hadoop.yarn.api.records.Resource getResource();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      23: ifnull        31
      26: aload_0
      27: getfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      30: areturn
      31: aload_1
      32: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.hasResource:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #67,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getResource:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #68                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public void setResource(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: invokevirtual #69                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearResource:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  public org.apache.hadoop.yarn.api.records.Priority getPriority();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      23: ifnull        31
      26: aload_0
      27: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      30: areturn
      31: aload_1
      32: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.hasPriority:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getPriority:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
      50: invokespecial #72                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl;
      53: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      56: aload_0
      57: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      60: areturn

  public void setPriority(org.apache.hadoop.yarn.api.records.Priority);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: invokevirtual #73                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearPriority:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      21: return

  public org.apache.hadoop.yarn.api.records.Token getContainerToken();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
      23: ifnull        31
      26: aload_0
      27: getfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
      30: areturn
      31: aload_1
      32: invokeinterface #74,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.hasContainerToken:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #75,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getContainerToken:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
      50: invokespecial #76                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/TokenPBImpl;
      53: putfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
      56: aload_0
      57: getfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
      60: areturn

  public void setContainerToken(org.apache.hadoop.yarn.api.records.Token);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: invokevirtual #77                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearContainerToken:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #10                 // Field containerToken:Lorg/apache/hadoop/yarn/api/records/Token;
      21: return

  public org.apache.hadoop.yarn.api.records.ExecutionType getExecutionType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_0
      20: aload_1
      21: invokeinterface #78,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getExecutionType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
      26: invokespecial #79                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      29: areturn

  public void setExecutionType(org.apache.hadoop.yarn.api.records.ExecutionType);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
       8: aload_0
       9: aload_1
      10: invokespecial #80                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ExecutionType;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
      13: invokevirtual #81                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setExecutionType:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      16: pop
      17: return

  public long getAllocationRequestId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #82,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getAllocationRequestId:()J
      25: lreturn

  public void setAllocationRequestId(long);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
       8: lload_1
       9: invokevirtual #83                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setAllocationRequestId:(J)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: pop
      13: return

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getVersion:()I
      25: ireturn

  public void setVersion(int);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
       8: iload_1
       9: invokevirtual #85                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.setVersion:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      12: pop
      13: return

  private void initAllocationTags();
    Code:
       0: aload_0
       1: getfield      #11                 // Field allocationTags:Ljava/util/Set;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #5                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto;
      19: goto          26
      22: aload_0
      23: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      26: astore_1
      27: aload_0
      28: new           #86                 // class java/util/HashSet
      31: dup
      32: invokespecial #87                 // Method java/util/HashSet."<init>":()V
      35: putfield      #11                 // Field allocationTags:Ljava/util/Set;
      38: aload_0
      39: getfield      #11                 // Field allocationTags:Ljava/util/Set;
      42: aload_1
      43: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerProtoOrBuilder.getAllocationTagsList:()Ljava/util/List;
      48: invokeinterface #89,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: return

  public java.util.Set<java.lang.String> getAllocationTags();
    Code:
       0: aload_0
       1: invokespecial #90                 // Method initAllocationTags:()V
       4: aload_0
       5: getfield      #11                 // Field allocationTags:Ljava/util/Set;
       8: areturn

  public void setAllocationTags(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
       8: invokevirtual #48                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder.clearAllocationTags:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerProto$Builder;
      11: pop
      12: aload_0
      13: aload_1
      14: putfield      #11                 // Field allocationTags:Ljava/util/Set;
      17: return

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto);
    Code:
       0: new           #22                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #91                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.NodeIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$NodeIdProto);
    Code:
       0: new           #28                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #92                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_1
       1: checkcast     #22                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       4: invokevirtual #23                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
       7: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$NodeIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.NodeId);
    Code:
       0: aload_1
       1: checkcast     #28                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
       4: invokevirtual #29                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourcePBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto);
    Code:
       0: new           #93                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl
       3: dup
       4: aload_1
       5: invokespecial #94                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_1
       1: invokestatic  #95                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
       4: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.PriorityPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$PriorityProto);
    Code:
       0: new           #36                 // class org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl
       3: dup
       4: aload_1
       5: invokespecial #96                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$PriorityProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Priority);
    Code:
       0: aload_1
       1: checkcast     #36                 // class org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl
       4: invokevirtual #37                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.TokenPBImpl convertFromProtoFormat(org.apache.hadoop.security.proto.SecurityProtos$TokenProto);
    Code:
       0: new           #42                 // class org/apache/hadoop/yarn/api/records/impl/pb/TokenPBImpl
       3: dup
       4: aload_1
       5: invokespecial #97                 // Method org/apache/hadoop/yarn/api/records/impl/pb/TokenPBImpl."<init>":(Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;)V
       8: areturn

  private org.apache.hadoop.security.proto.SecurityProtos$TokenProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Token);
    Code:
       0: aload_1
       1: checkcast     #42                 // class org/apache/hadoop/yarn/api/records/impl/pb/TokenPBImpl
       4: invokevirtual #43                 // Method org/apache/hadoop/yarn/api/records/impl/pb/TokenPBImpl.getProto:()Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.ExecutionType convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ExecutionTypeProto);
    Code:
       0: aload_1
       1: invokestatic  #98                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/api/records/ExecutionType;
       4: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ExecutionTypeProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ExecutionType);
    Code:
       0: aload_1
       1: invokestatic  #99                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ExecutionType;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #100                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #102                // String Container: [
      11: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #104                // String ContainerId:
      18: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #105                // Method getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      25: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #107                // String ,
      30: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: ldc           #108                // String AllocationRequestId:
      37: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #109                // Method getAllocationRequestId:()J
      44: invokevirtual #110                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      47: ldc           #107                // String ,
      49: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_1
      54: ldc           #111                // String Version:
      56: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #112                // Method getVersion:()I
      63: invokevirtual #113                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: ldc           #107                // String ,
      68: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: aload_1
      73: ldc           #114                // String NodeId:
      75: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #115                // Method getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      82: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #107                // String ,
      87: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: ldc           #116                // String NodeHttpAddress:
      94: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: invokevirtual #117                // Method getNodeHttpAddress:()Ljava/lang/String;
     101: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #107                // String ,
     106: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: pop
     110: aload_1
     111: ldc           #118                // String Resource:
     113: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_0
     117: invokevirtual #119                // Method getResource:()Lorg/apache/hadoop/yarn/api/records/Resource;
     120: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: ldc           #107                // String ,
     125: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_1
     130: ldc           #120                // String Priority:
     132: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_0
     136: invokevirtual #121                // Method getPriority:()Lorg/apache/hadoop/yarn/api/records/Priority;
     139: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     142: ldc           #107                // String ,
     144: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: pop
     148: aload_1
     149: ldc           #122                // String Token:
     151: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload_0
     155: invokevirtual #123                // Method getContainerToken:()Lorg/apache/hadoop/yarn/api/records/Token;
     158: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     161: ldc           #107                // String ,
     163: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: pop
     167: aload_1
     168: ldc           #124                // String ExecutionType:
     170: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_0
     174: invokevirtual #125                // Method getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
     177: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     180: ldc           #107                // String ,
     182: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: pop
     186: aload_1
     187: ldc           #126                // String ]
     189: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: pop
     193: aload_1
     194: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     197: areturn

  public int compareTo(org.apache.hadoop.yarn.api.records.Container);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
       4: aload_1
       5: invokevirtual #128                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
       8: invokevirtual #129                // Method org/apache/hadoop/yarn/api/records/ContainerId.compareTo:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)I
      11: ifne          52
      14: aload_0
      15: invokevirtual #115                // Method getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      18: aload_1
      19: invokevirtual #130                // Method org/apache/hadoop/yarn/api/records/Container.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      22: invokevirtual #131                // Method org/apache/hadoop/yarn/api/records/NodeId.compareTo:(Lorg/apache/hadoop/yarn/api/records/NodeId;)I
      25: ifne          40
      28: aload_0
      29: invokevirtual #119                // Method getResource:()Lorg/apache/hadoop/yarn/api/records/Resource;
      32: aload_1
      33: invokevirtual #132                // Method org/apache/hadoop/yarn/api/records/Container.getResource:()Lorg/apache/hadoop/yarn/api/records/Resource;
      36: invokevirtual #133                // Method org/apache/hadoop/yarn/api/records/Resource.compareTo:(Lorg/apache/hadoop/yarn/api/records/Resource;)I
      39: ireturn
      40: aload_0
      41: invokevirtual #115                // Method getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      44: aload_1
      45: invokevirtual #130                // Method org/apache/hadoop/yarn/api/records/Container.getNodeId:()Lorg/apache/hadoop/yarn/api/records/NodeId;
      48: invokevirtual #131                // Method org/apache/hadoop/yarn/api/records/NodeId.compareTo:(Lorg/apache/hadoop/yarn/api/records/NodeId;)I
      51: ireturn
      52: aload_0
      53: invokevirtual #105                // Method getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      56: aload_1
      57: invokevirtual #128                // Method org/apache/hadoop/yarn/api/records/Container.getId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      60: invokevirtual #129                // Method org/apache/hadoop/yarn/api/records/ContainerId.compareTo:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)I
      63: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #134                // class org/apache/hadoop/yarn/api/records/Container
       5: invokevirtual #135                // Method compareTo:(Lorg/apache/hadoop/yarn/api/records/Container;)I
       8: ireturn
}
