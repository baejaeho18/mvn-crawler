Compiled from "QueueConfigurationsPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.QueueConfigurationsPBImpl extends org.apache.hadoop.yarn.api.records.QueueConfigurations {
  org.apache.hadoop.yarn.proto.YarnProtos$QueueConfigurationsProto proto;

  org.apache.hadoop.yarn.proto.YarnProtos$QueueConfigurationsProto$Builder builder;

  org.apache.hadoop.yarn.api.records.Resource configuredMinResource;

  org.apache.hadoop.yarn.api.records.Resource configuredMaxResource;

  org.apache.hadoop.yarn.api.records.Resource effMinResource;

  org.apache.hadoop.yarn.api.records.Resource effMaxResource;

  boolean viaProto;

  public org.apache.hadoop.yarn.api.records.impl.pb.QueueConfigurationsPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/QueueConfigurations."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      36: aload_0
      37: iconst_0
      38: putfield      #9                  // Field viaProto:Z
      41: aload_0
      42: invokestatic  #10                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      45: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      48: return

  public org.apache.hadoop.yarn.api.records.impl.pb.QueueConfigurationsPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$QueueConfigurationsProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/QueueConfigurations."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      36: aload_0
      37: iconst_0
      38: putfield      #9                  // Field viaProto:Z
      41: aload_0
      42: aload_1
      43: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      46: aload_0
      47: iconst_1
      48: putfield      #9                  // Field viaProto:Z
      51: return

  public org.apache.hadoop.yarn.proto.YarnProtos$QueueConfigurationsProto getProto();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #9                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      23: invokevirtual #12                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      29: aload_0
      30: iconst_1
      31: putfield      #9                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      38: areturn

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #13                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #14                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      20: invokevirtual #12                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      26: aload_0
      27: iconst_1
      28: putfield      #9                  // Field viaProto:Z
      31: return

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      11: aload_0
      12: aload_0
      13: getfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      16: invokespecial #15                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      19: invokevirtual #16                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setEffectiveMinCapacity:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      22: pop
      23: aload_0
      24: getfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      27: ifnull        46
      30: aload_0
      31: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      34: aload_0
      35: aload_0
      36: getfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      39: invokespecial #15                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      42: invokevirtual #17                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setEffectiveMaxCapacity:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      45: pop
      46: aload_0
      47: getfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      50: ifnull        69
      53: aload_0
      54: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      57: aload_0
      58: aload_0
      59: getfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      62: invokespecial #15                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      65: invokevirtual #16                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setEffectiveMinCapacity:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      68: pop
      69: aload_0
      70: getfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      73: ifnull        92
      76: aload_0
      77: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      80: aload_0
      81: aload_0
      82: getfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      85: invokespecial #15                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      88: invokevirtual #17                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setEffectiveMaxCapacity:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      91: pop
      92: return

  public float getCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasCapacity:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getCapacity:()F
      34: goto          38
      37: fconst_0
      38: freturn

  public void setCapacity(float);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
       8: fload_1
       9: invokevirtual #20                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setCapacity:(F)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: pop
      13: return

  public float getAbsoluteCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #21,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasAbsoluteCapacity:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getAbsoluteCapacity:()F
      34: goto          38
      37: fconst_0
      38: freturn

  public void setAbsoluteCapacity(float);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
       8: fload_1
       9: invokevirtual #23                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setAbsoluteCapacity:(F)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: pop
      13: return

  public float getMaxCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #24,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasMaxCapacity:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #25,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getMaxCapacity:()F
      34: goto          38
      37: fconst_0
      38: freturn

  public void setMaxCapacity(float);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
       8: fload_1
       9: invokevirtual #26                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setMaxCapacity:(F)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: pop
      13: return

  public float getAbsoluteMaxCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasAbsoluteMaxCapacity:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #28,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getAbsoluteMaxCapacity:()F
      34: goto          38
      37: fconst_0
      38: freturn

  public void setAbsoluteMaxCapacity(float);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
       8: fload_1
       9: invokevirtual #29                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setAbsoluteMaxCapacity:(F)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: pop
      13: return

  public float getMaxAMPercentage();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasMaxAMPercentage:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getMaxAMPercentage:()F
      34: goto          38
      37: fconst_0
      38: freturn

  public void setMaxAMPercentage(float);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
       8: fload_1
       9: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.setMaxAMPercentage:(F)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: pop
      13: return

  public org.apache.hadoop.yarn.api.records.Resource getEffectiveMinCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      23: ifnull        31
      26: aload_0
      27: getfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      30: areturn
      31: aload_1
      32: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasEffectiveMinCapacity:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getEffectiveMinCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #35                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public void setEffectiveMinCapacity(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: invokevirtual #36                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.clearEffectiveMinCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #7                  // Field effMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  public org.apache.hadoop.yarn.api.records.Resource getEffectiveMaxCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      23: ifnull        31
      26: aload_0
      27: getfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      30: areturn
      31: aload_1
      32: invokeinterface #37,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasEffectiveMaxCapacity:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #38,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getEffectiveMaxCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #35                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public void setEffectiveMaxCapacity(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: invokevirtual #39                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.clearEffectiveMaxCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field effMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourcePBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto);
    Code:
       0: new           #40                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl
       3: dup
       4: aload_1
       5: invokespecial #41                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_1
       1: invokestatic  #42                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
       4: areturn

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      19: invokestatic  #43                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #9                  // Field viaProto:Z
      30: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
       4: invokestatic  #45                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
       4: invokevirtual #46                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #48                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #44                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      24: aload_0
      25: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #49                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #50                 // class org/apache/hadoop/yarn/api/records/impl/pb/QueueConfigurationsPBImpl
      35: invokevirtual #44                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      38: invokevirtual #51                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public org.apache.hadoop.yarn.api.records.Resource getConfiguredMinCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      23: ifnull        31
      26: aload_0
      27: getfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      30: areturn
      31: aload_1
      32: invokeinterface #52,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasConfiguredMinCapacity:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #53,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getConfiguredMinCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #35                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public void setConfiguredMinCapacity(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      12: invokevirtual #54                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.clearConfiguredMinCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field configuredMinResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  public org.apache.hadoop.yarn.api.records.Resource getConfiguredMaxCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      23: ifnull        31
      26: aload_0
      27: getfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      30: areturn
      31: aload_1
      32: invokeinterface #55,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.hasConfiguredMaxCapacity:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #56,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProtoOrBuilder.getConfiguredMaxCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #35                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public void setConfiguredMaxCapacity(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
       8: ifnonnull     19
      11: aload_0
      12: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      15: invokevirtual #57                 // Method org/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder.clearConfiguredMaxCapacity:()Lorg/apache/hadoop/yarn/proto/YarnProtos$QueueConfigurationsProto$Builder;
      18: pop
      19: aload_0
      20: aload_1
      21: putfield      #6                  // Field configuredMaxResource:Lorg/apache/hadoop/yarn/api/records/Resource;
      24: return
}
