Compiled from "NodeReportPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.NodeReportPBImpl extends org.apache.hadoop.yarn.api.records.NodeReport {
  private org.apache.hadoop.yarn.proto.YarnProtos$NodeReportProto proto;

  private org.apache.hadoop.yarn.proto.YarnProtos$NodeReportProto$Builder builder;

  private boolean viaProto;

  private org.apache.hadoop.yarn.api.records.NodeId nodeId;

  private org.apache.hadoop.yarn.api.records.Resource used;

  private org.apache.hadoop.yarn.api.records.Resource capability;

  private org.apache.hadoop.yarn.api.records.ResourceUtilization containersUtilization;

  private org.apache.hadoop.yarn.api.records.ResourceUtilization nodeUtilization;

  java.util.Set<java.lang.String> labels;

  private java.util.Set<org.apache.hadoop.yarn.api.records.NodeAttribute> nodeAttributes;

  public org.apache.hadoop.yarn.api.records.impl.pb.NodeReportPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/NodeReport."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      31: aload_0
      32: invokestatic  #8                  // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      35: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      38: return

  public org.apache.hadoop.yarn.api.records.impl.pb.NodeReportPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$NodeReportProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/NodeReport."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      31: aload_0
      32: aload_1
      33: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      36: aload_0
      37: iconst_1
      38: putfield      #5                  // Field viaProto:Z
      41: return

  public org.apache.hadoop.yarn.api.records.Resource getCapability();
    Code:
       0: aload_0
       1: getfield      #9                  // Field capability:Lorg/apache/hadoop/yarn/api/records/Resource;
       4: ifnull        12
       7: aload_0
       8: getfield      #9                  // Field capability:Lorg/apache/hadoop/yarn/api/records/Resource;
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field viaProto:Z
      16: ifeq          26
      19: aload_0
      20: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      23: goto          30
      26: aload_0
      27: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      30: astore_1
      31: aload_1
      32: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasCapability:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getCapability:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #12                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #9                  // Field capability:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #9                  // Field capability:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public java.lang.String getHealthReport();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #13,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getHealthReport:()Ljava/lang/String;
      25: areturn

  public void setHealthReport(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #15                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearHealthReport:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      21: aload_1
      22: invokevirtual #16                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setHealthReport:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      25: pop
      26: return

  public long getLastHealthReportTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #17,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getLastHealthReportTime:()J
      25: lreturn

  public void setLastHealthReportTime(long);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
       8: lload_1
       9: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setLastHealthReportTime:(J)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: pop
      13: return

  public java.lang.String getHttpAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasHttpAddress:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #20,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getHttpAddress:()Ljava/lang/String;
      34: goto          38
      37: aconst_null
      38: areturn

  public int getNumContainers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #21,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasNumContainers:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getNumContainers:()I
      34: goto          38
      37: iconst_0
      38: ireturn

  public java.lang.String getRackName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasRackName:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #24,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getRackName:()Ljava/lang/String;
      34: goto          38
      37: aconst_null
      38: areturn

  public org.apache.hadoop.yarn.api.records.Resource getUsed();
    Code:
       0: aload_0
       1: getfield      #25                 // Field used:Lorg/apache/hadoop/yarn/api/records/Resource;
       4: ifnull        12
       7: aload_0
       8: getfield      #25                 // Field used:Lorg/apache/hadoop/yarn/api/records/Resource;
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field viaProto:Z
      16: ifeq          26
      19: aload_0
      20: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      23: goto          30
      26: aload_0
      27: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      30: astore_1
      31: aload_1
      32: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasUsed:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getUsed:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #12                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #25                 // Field used:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #25                 // Field used:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public org.apache.hadoop.yarn.api.records.NodeId getNodeId();
    Code:
       0: aload_0
       1: getfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
       4: ifnull        12
       7: aload_0
       8: getfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field viaProto:Z
      16: ifeq          26
      19: aload_0
      20: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      23: goto          30
      26: aload_0
      27: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      30: astore_1
      31: aload_1
      32: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasNodeId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getNodeId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      50: invokespecial #31                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl;
      53: putfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      56: aload_0
      57: getfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      60: areturn

  public void setNodeId(org.apache.hadoop.yarn.api.records.NodeId);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      21: return

  public org.apache.hadoop.yarn.api.records.NodeState getNodeState();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasNodeState:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getNodeState:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeStateProto;
      36: invokestatic  #35                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeStateProto;)Lorg/apache/hadoop/yarn/api/records/NodeState;
      39: areturn

  public void setNodeState(org.apache.hadoop.yarn.api.records.NodeState);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #36                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeState:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      21: aload_1
      22: invokestatic  #37                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/NodeState;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeStateProto;
      25: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setNodeState:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeStateProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      28: pop
      29: return

  public void setCapability(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #39                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearCapability:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field capability:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  public void setHttpAddress(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #40                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearHttpAddress:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      21: aload_1
      22: invokevirtual #41                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setHttpAddress:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      25: pop
      26: return

  public void setNumContainers(int);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: iload_1
       5: ifne          17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #42                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNumContainers:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      21: iload_1
      22: invokevirtual #43                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setNumContainers:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      25: pop
      26: return

  public void setRackName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #44                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearRackName:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      21: aload_1
      22: invokevirtual #45                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setRackName:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      25: pop
      26: return

  public void setUsed(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #46                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearUsed:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #25                 // Field used:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  public org.apache.hadoop.yarn.proto.YarnProtos$NodeReportProto getProto();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      23: invokevirtual #48                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      29: aload_0
      30: iconst_1
      31: putfield      #5                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
       4: invokevirtual #50                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #51                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #51                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #52                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #49                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      24: aload_0
      25: invokevirtual #51                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #53                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #54                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl
      35: invokevirtual #49                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      38: invokevirtual #55                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
       4: invokestatic  #56                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
       4: ifnull        46
       7: aload_0
       8: getfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      11: checkcast     #57                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
      14: invokevirtual #58                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      21: invokevirtual #59                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.getNodeId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      24: invokevirtual #60                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto.equals:(Ljava/lang/Object;)Z
      27: ifne          46
      30: aload_0
      31: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      34: aload_0
      35: aload_0
      36: getfield      #28                 // Field nodeId:Lorg/apache/hadoop/yarn/api/records/NodeId;
      39: invokespecial #61                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/NodeId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
      42: invokevirtual #62                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setNodeId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      45: pop
      46: aload_0
      47: getfield      #25                 // Field used:Lorg/apache/hadoop/yarn/api/records/Resource;
      50: ifnull        69
      53: aload_0
      54: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      57: aload_0
      58: aload_0
      59: getfield      #25                 // Field used:Lorg/apache/hadoop/yarn/api/records/Resource;
      62: invokespecial #63                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      65: invokevirtual #64                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setUsed:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      68: pop
      69: aload_0
      70: getfield      #9                  // Field capability:Lorg/apache/hadoop/yarn/api/records/Resource;
      73: ifnull        92
      76: aload_0
      77: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      80: aload_0
      81: aload_0
      82: getfield      #9                  // Field capability:Lorg/apache/hadoop/yarn/api/records/Resource;
      85: invokespecial #63                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      88: invokevirtual #65                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setCapability:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      91: pop
      92: aload_0
      93: getfield      #66                 // Field labels:Ljava/util/Set;
      96: ifnull        119
      99: aload_0
     100: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     103: invokevirtual #67                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeLabels:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     106: pop
     107: aload_0
     108: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     111: aload_0
     112: getfield      #66                 // Field labels:Ljava/util/Set;
     115: invokevirtual #68                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.addAllNodeLabels:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     118: pop
     119: aload_0
     120: getfield      #69                 // Field nodeAttributes:Ljava/util/Set;
     123: ifnull        195
     126: aload_0
     127: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     130: invokevirtual #70                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeAttributes:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     133: pop
     134: new           #71                 // class java/util/ArrayList
     137: dup
     138: invokespecial #72                 // Method java/util/ArrayList."<init>":()V
     141: astore_1
     142: aload_0
     143: getfield      #69                 // Field nodeAttributes:Ljava/util/Set;
     146: invokeinterface #73,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     151: astore_2
     152: aload_2
     153: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     158: ifeq          186
     161: aload_2
     162: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     167: checkcast     #76                 // class org/apache/hadoop/yarn/api/records/NodeAttribute
     170: astore_3
     171: aload_1
     172: aload_0
     173: aload_3
     174: invokespecial #77                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/NodeAttribute;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeAttributeProto;
     177: invokeinterface #78,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     182: pop
     183: goto          152
     186: aload_0
     187: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     190: aload_1
     191: invokevirtual #79                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.addAllNodeAttributes:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     194: pop
     195: aload_0
     196: getfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
     199: ifnull        241
     202: aload_0
     203: getfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
     206: checkcast     #80                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl
     209: invokevirtual #81                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
     212: aload_0
     213: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     216: invokevirtual #82                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.getNodeUtilization:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
     219: invokevirtual #83                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto.equals:(Ljava/lang/Object;)Z
     222: ifne          241
     225: aload_0
     226: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     229: aload_0
     230: aload_0
     231: getfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
     234: invokespecial #84                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
     237: invokevirtual #85                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setNodeUtilization:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     240: pop
     241: aload_0
     242: getfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
     245: ifnull        287
     248: aload_0
     249: getfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
     252: checkcast     #80                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl
     255: invokevirtual #81                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
     258: aload_0
     259: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     262: invokevirtual #86                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.getContainersUtilization:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
     265: invokevirtual #83                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto.equals:(Ljava/lang/Object;)Z
     268: ifne          287
     271: aload_0
     272: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     275: aload_0
     276: aload_0
     277: getfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
     280: invokespecial #84                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
     283: invokevirtual #87                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setContainersUtilization:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
     286: pop
     287: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #14                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #88                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      20: invokevirtual #48                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      19: invokestatic  #89                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  private org.apache.hadoop.yarn.api.records.impl.pb.NodeIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$NodeIdProto);
    Code:
       0: new           #57                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #90                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$NodeIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.NodeId);
    Code:
       0: aload_1
       1: checkcast     #57                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl
       4: invokevirtual #58                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeIdProto;
       7: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$NodeAttributeProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.NodeAttribute);
    Code:
       0: aload_1
       1: checkcast     #91                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeAttributePBImpl
       4: invokevirtual #92                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeAttributePBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeAttributeProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.NodeAttributePBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$NodeAttributeProto);
    Code:
       0: new           #91                 // class org/apache/hadoop/yarn/api/records/impl/pb/NodeAttributePBImpl
       3: dup
       4: aload_1
       5: invokespecial #93                 // Method org/apache/hadoop/yarn/api/records/impl/pb/NodeAttributePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeAttributeProto;)V
       8: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourcePBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto);
    Code:
       0: new           #94                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl
       3: dup
       4: aload_1
       5: invokespecial #95                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_1
       1: invokestatic  #96                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
       4: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourceUtilizationPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceUtilizationProto);
    Code:
       0: new           #80                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl
       3: dup
       4: aload_1
       5: invokespecial #97                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceUtilizationProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ResourceUtilization);
    Code:
       0: aload_1
       1: checkcast     #80                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl
       4: invokevirtual #81                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
       7: areturn

  public java.util.Set<java.lang.String> getNodeLabels();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method initNodeLabels:()V
       4: aload_0
       5: getfield      #66                 // Field labels:Ljava/util/Set;
       8: areturn

  public void setNodeLabels(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
       8: invokevirtual #67                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeLabels:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      11: pop
      12: aload_0
      13: aload_1
      14: putfield      #66                 // Field labels:Ljava/util/Set;
      17: return

  private void initNodeLabels();
    Code:
       0: aload_0
       1: getfield      #66                 // Field labels:Ljava/util/Set;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #5                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      19: goto          26
      22: aload_0
      23: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      26: astore_1
      27: aload_0
      28: new           #99                 // class java/util/HashSet
      31: dup
      32: invokespecial #100                // Method java/util/HashSet."<init>":()V
      35: putfield      #66                 // Field labels:Ljava/util/Set;
      38: aload_0
      39: getfield      #66                 // Field labels:Ljava/util/Set;
      42: aload_1
      43: invokeinterface #101,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getNodeLabelsList:()Ljava/util/List;
      48: invokeinterface #102,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: return

  public org.apache.hadoop.yarn.api.records.ResourceUtilization getAggregatedContainersUtilization();
    Code:
       0: aload_0
       1: getfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
       4: ifnull        12
       7: aload_0
       8: getfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field viaProto:Z
      16: ifeq          26
      19: aload_0
      20: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      23: goto          30
      26: aload_0
      27: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      30: astore_1
      31: aload_1
      32: invokeinterface #103,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasContainersUtilization:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #104,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getContainersUtilization:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      50: invokespecial #105                // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl;
      53: putfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      56: aload_0
      57: getfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      60: areturn

  public void setAggregatedContainersUtilization(org.apache.hadoop.yarn.api.records.ResourceUtilization);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #106                // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearContainersUtilization:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field containersUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      21: return

  public org.apache.hadoop.yarn.api.records.ResourceUtilization getNodeUtilization();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
       4: ifnull        12
       7: aload_0
       8: getfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field viaProto:Z
      16: ifeq          26
      19: aload_0
      20: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      23: goto          30
      26: aload_0
      27: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      30: astore_1
      31: aload_1
      32: invokeinterface #107,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasNodeUtilization:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #108,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getNodeUtilization:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      50: invokespecial #105                // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourceUtilizationPBImpl;
      53: putfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      56: aload_0
      57: getfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      60: areturn

  public void setNodeUtilization(org.apache.hadoop.yarn.api.records.ResourceUtilization);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #109                // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeUtilization:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #7                  // Field nodeUtilization:Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;
      21: return

  public java.lang.Integer getDecommissioningTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #110,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasDecommissioningTimeout:()Z
      25: ifeq          40
      28: aload_1
      29: invokeinterface #111,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getDecommissioningTimeout:()I
      34: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: goto          41
      40: aconst_null
      41: areturn

  public void setDecommissioningTimeout(java.lang.Integer);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: invokevirtual #113                // Method java/lang/Integer.intValue:()I
      12: ifge          24
      15: aload_0
      16: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      19: invokevirtual #114                // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearDecommissioningTimeout:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      22: pop
      23: return
      24: aload_0
      25: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      28: aload_1
      29: invokevirtual #113                // Method java/lang/Integer.intValue:()I
      32: invokevirtual #115                // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setDecommissioningTimeout:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      35: pop
      36: return

  public org.apache.hadoop.yarn.api.records.NodeUpdateType getNodeUpdateType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #116,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.hasNodeUpdateType:()Z
      25: ifeq          40
      28: aload_1
      29: invokeinterface #117,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getNodeUpdateType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeUpdateTypeProto;
      34: invokestatic  #118                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeUpdateTypeProto;)Lorg/apache/hadoop/yarn/api/records/NodeUpdateType;
      37: goto          41
      40: aconst_null
      41: areturn

  public void setNodeUpdateType(org.apache.hadoop.yarn.api.records.NodeUpdateType);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      12: invokevirtual #119                // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeUpdateType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      21: aload_1
      22: invokestatic  #120                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/NodeUpdateType;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeUpdateTypeProto;
      25: invokevirtual #121                // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.setNodeUpdateType:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeUpdateTypeProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      28: pop
      29: return

  public void setNodeAttributes(java.util.Set<org.apache.hadoop.yarn.api.records.NodeAttribute>);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
       8: invokevirtual #70                 // Method org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder.clearNodeAttributes:()Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      11: pop
      12: aload_0
      13: aload_1
      14: putfield      #69                 // Field nodeAttributes:Ljava/util/Set;
      17: return

  public java.util.Set<org.apache.hadoop.yarn.api.records.NodeAttribute> getNodeAttributes();
    Code:
       0: aload_0
       1: getfield      #69                 // Field nodeAttributes:Ljava/util/Set;
       4: ifnull        12
       7: aload_0
       8: getfield      #69                 // Field nodeAttributes:Ljava/util/Set;
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field viaProto:Z
      16: ifeq          26
      19: aload_0
      20: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto;
      23: goto          30
      26: aload_0
      27: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeReportProto$Builder;
      30: astore_1
      31: aload_0
      32: new           #99                 // class java/util/HashSet
      35: dup
      36: invokespecial #100                // Method java/util/HashSet."<init>":()V
      39: putfield      #69                 // Field nodeAttributes:Ljava/util/Set;
      42: aload_1
      43: invokeinterface #122,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$NodeReportProtoOrBuilder.getNodeAttributesList:()Ljava/util/List;
      48: invokeinterface #123,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore_2
      54: aload_2
      55: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          91
      63: aload_2
      64: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #124                // class org/apache/hadoop/yarn/proto/YarnProtos$NodeAttributeProto
      72: astore_3
      73: aload_0
      74: getfield      #69                 // Field nodeAttributes:Ljava/util/Set;
      77: aload_0
      78: aload_3
      79: invokespecial #125                // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$NodeAttributeProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/NodeAttributePBImpl;
      82: invokeinterface #126,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          54
      91: aload_0
      92: getfield      #69                 // Field nodeAttributes:Ljava/util/Set;
      95: areturn
}
