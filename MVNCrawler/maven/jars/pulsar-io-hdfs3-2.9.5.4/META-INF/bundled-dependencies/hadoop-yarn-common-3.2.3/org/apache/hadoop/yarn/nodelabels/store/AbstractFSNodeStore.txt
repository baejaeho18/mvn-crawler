Compiled from "AbstractFSNodeStore.java"
public abstract class org.apache.hadoop.yarn.nodelabels.store.AbstractFSNodeStore<M> {
  protected static final org.apache.commons.logging.Log LOG;

  private org.apache.hadoop.yarn.nodelabels.store.FSStoreOpHandler$StoreType storeType;

  private org.apache.hadoop.fs.FSDataOutputStream editlogOs;

  private org.apache.hadoop.fs.Path editLogPath;

  private org.apache.hadoop.yarn.nodelabels.store.AbstractFSNodeStore$StoreSchema schema;

  protected M manager;

  protected org.apache.hadoop.fs.Path fsWorkingPath;

  protected org.apache.hadoop.fs.FileSystem fs;

  public org.apache.hadoop.yarn.nodelabels.store.AbstractFSNodeStore(org.apache.hadoop.yarn.nodelabels.store.FSStoreOpHandler$StoreType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field storeType:Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;
       9: return

  protected void initStore(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path, org.apache.hadoop.yarn.nodelabels.store.AbstractFSNodeStore$StoreSchema, M) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: putfield      #3                  // Field schema:Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;
       5: aload_0
       6: aload_2
       7: putfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: aload         4
      13: putfield      #5                  // Field manager:Ljava/lang/Object;
      16: aload_0
      17: aload_1
      18: invokevirtual #6                  // Method initFileSystem:(Lorg/apache/hadoop/conf/Configuration;)V
      21: aload_0
      22: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      25: aload_0
      26: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      29: invokevirtual #8                  // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      32: pop
      33: getstatic     #9                  // Field LOG:Lorg/apache/commons/logging/Log;
      36: new           #10                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #12                 // String Created store directory :
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      63: return

  public void initFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: new           #17                 // class org/apache/hadoop/conf/Configuration
       3: dup
       4: aload_1
       5: invokespecial #18                 // Method org/apache/hadoop/conf/Configuration."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       8: astore_2
       9: aload_0
      10: aload_0
      11: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      14: aload_2
      15: invokevirtual #19                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      18: putfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      21: aload_0
      22: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      25: invokevirtual #20                 // Method org/apache/hadoop/fs/FileSystem.getScheme:()Ljava/lang/String;
      28: ldc           #21                 // String file
      30: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifeq          50
      36: aload_0
      37: aload_0
      38: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      41: checkcast     #23                 // class org/apache/hadoop/fs/LocalFileSystem
      44: invokevirtual #24                 // Method org/apache/hadoop/fs/LocalFileSystem.getRaw:()Lorg/apache/hadoop/fs/FileSystem;
      47: putfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      50: return

  protected void writeToLog(org.apache.hadoop.yarn.nodelabels.store.op.FSNodeStoreLogOp) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method ensureAppendEditLogFile:()V
       4: aload_0
       5: getfield      #26                 // Field editlogOs:Lorg/apache/hadoop/fs/FSDataOutputStream;
       8: aload_1
       9: invokevirtual #27                 // Method org/apache/hadoop/yarn/nodelabels/store/op/FSNodeStoreLogOp.getOpCode:()I
      12: invokevirtual #28                 // Method org/apache/hadoop/fs/FSDataOutputStream.writeInt:(I)V
      15: aload_1
      16: aload_0
      17: getfield      #26                 // Field editlogOs:Lorg/apache/hadoop/fs/FSDataOutputStream;
      20: aload_0
      21: getfield      #5                  // Field manager:Ljava/lang/Object;
      24: invokevirtual #29                 // Method org/apache/hadoop/yarn/nodelabels/store/op/FSNodeStoreLogOp.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_0
      28: invokevirtual #30                 // Method ensureCloseEditlogFile:()V
      31: goto          41
      34: astore_2
      35: aload_0
      36: invokevirtual #30                 // Method ensureCloseEditlogFile:()V
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
           0    27    34   any

  protected void ensureAppendEditLogFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       5: aload_0
       6: getfield      #31                 // Field editLogPath:Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #32                 // Method org/apache/hadoop/fs/FileSystem.append:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      12: putfield      #26                 // Field editlogOs:Lorg/apache/hadoop/fs/FSDataOutputStream;
      15: return

  protected void ensureCloseEditlogFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field editlogOs:Lorg/apache/hadoop/fs/FSDataOutputStream;
       4: invokevirtual #33                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
       7: return

  protected void loadFromMirror(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #34                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
       8: ifeq          15
      11: aload_1
      12: goto          31
      15: aload_0
      16: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      19: aload_2
      20: invokevirtual #34                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      23: ifeq          30
      26: aload_2
      27: goto          31
      30: aconst_null
      31: astore_3
      32: aload_3
      33: ifnull        158
      36: aload_0
      37: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      40: aload_3
      41: invokevirtual #35                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      44: astore        4
      46: aconst_null
      47: astore        5
      49: aload_0
      50: getfield      #2                  // Field storeType:Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;
      53: invokestatic  #36                 // Method org/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler.getMirrorOp:(Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;)Lorg/apache/hadoop/yarn/nodelabels/store/op/FSNodeStoreLogOp;
      56: astore        6
      58: aload         6
      60: aload         4
      62: aload_0
      63: getfield      #5                  // Field manager:Ljava/lang/Object;
      66: invokeinterface #37,  3           // InterfaceMethod org/apache/hadoop/yarn/nodelabels/store/StoreOp.recover:(Ljava/lang/Object;Ljava/lang/Object;)V
      71: aload         4
      73: ifnull        158
      76: aload         5
      78: ifnull        101
      81: aload         4
      83: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      86: goto          158
      89: astore        6
      91: aload         5
      93: aload         6
      95: invokevirtual #40                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      98: goto          158
     101: aload         4
     103: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     106: goto          158
     109: astore        6
     111: aload         6
     113: astore        5
     115: aload         6
     117: athrow
     118: astore        7
     120: aload         4
     122: ifnull        155
     125: aload         5
     127: ifnull        150
     130: aload         4
     132: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     135: goto          155
     138: astore        8
     140: aload         5
     142: aload         8
     144: invokevirtual #40                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     147: goto          155
     150: aload         4
     152: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     155: aload         7
     157: athrow
     158: return
    Exception table:
       from    to  target type
          81    86    89   Class java/lang/Throwable
          49    71   109   Class java/lang/Throwable
          49    71   118   any
         130   135   138   Class java/lang/Throwable
         109   120   118   any

  protected org.apache.hadoop.yarn.nodelabels.store.FSStoreOpHandler$StoreType getStoreType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field storeType:Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;
       4: areturn

  public org.apache.hadoop.fs.Path getFsWorkingPath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
       4: areturn

  protected void recoverFromStore() throws java.io.IOException;
    Code:
       0: new           #41                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
       8: aload_0
       9: getfield      #3                  // Field schema:Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;
      12: invokestatic  #42                 // Method org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema.access$000:(Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;)Ljava/lang/String;
      15: invokespecial #43                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      18: astore_1
      19: new           #41                 // class org/apache/hadoop/fs/Path
      22: dup
      23: aload_0
      24: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      27: new           #10                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      34: aload_0
      35: getfield      #3                  // Field schema:Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;
      38: invokestatic  #42                 // Method org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema.access$000:(Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;)Ljava/lang/String;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #44                 // String .old
      46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #43                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      55: astore_2
      56: aload_0
      57: aload_1
      58: aload_2
      59: invokevirtual #45                 // Method loadFromMirror:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      62: aload_0
      63: new           #41                 // class org/apache/hadoop/fs/Path
      66: dup
      67: aload_0
      68: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      71: aload_0
      72: getfield      #3                  // Field schema:Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;
      75: invokestatic  #46                 // Method org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema.access$100:(Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;)Ljava/lang/String;
      78: invokespecial #43                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      81: putfield      #31                 // Field editLogPath:Lorg/apache/hadoop/fs/Path;
      84: aload_0
      85: aload_0
      86: getfield      #31                 // Field editLogPath:Lorg/apache/hadoop/fs/Path;
      89: invokevirtual #47                 // Method loadManagerFromEditLog:(Lorg/apache/hadoop/fs/Path;)V
      92: new           #41                 // class org/apache/hadoop/fs/Path
      95: dup
      96: aload_0
      97: getfield      #4                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
     100: new           #10                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     107: aload_0
     108: getfield      #3                  // Field schema:Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;
     111: invokestatic  #42                 // Method org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema.access$000:(Lorg/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore$StoreSchema;)Ljava/lang/String;
     114: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #48                 // String .writing
     119: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #43                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     128: astore_3
     129: aload_0
     130: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     133: aload_3
     134: iconst_1
     135: invokevirtual #49                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
     138: astore        4
     140: aconst_null
     141: astore        5
     143: aload_0
     144: getfield      #2                  // Field storeType:Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;
     147: invokestatic  #36                 // Method org/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler.getMirrorOp:(Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;)Lorg/apache/hadoop/yarn/nodelabels/store/op/FSNodeStoreLogOp;
     150: astore        6
     152: aload         6
     154: aload         4
     156: aload_0
     157: getfield      #5                  // Field manager:Ljava/lang/Object;
     160: invokeinterface #50,  3           // InterfaceMethod org/apache/hadoop/yarn/nodelabels/store/StoreOp.write:(Ljava/lang/Object;Ljava/lang/Object;)V
     165: aload         4
     167: ifnull        252
     170: aload         5
     172: ifnull        195
     175: aload         4
     177: invokevirtual #33                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     180: goto          252
     183: astore        6
     185: aload         5
     187: aload         6
     189: invokevirtual #40                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     192: goto          252
     195: aload         4
     197: invokevirtual #33                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     200: goto          252
     203: astore        6
     205: aload         6
     207: astore        5
     209: aload         6
     211: athrow
     212: astore        7
     214: aload         4
     216: ifnull        249
     219: aload         5
     221: ifnull        244
     224: aload         4
     226: invokevirtual #33                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     229: goto          249
     232: astore        8
     234: aload         5
     236: aload         8
     238: invokevirtual #40                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     241: goto          249
     244: aload         4
     246: invokevirtual #33                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     249: aload         7
     251: athrow
     252: aload_0
     253: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     256: aload_1
     257: invokevirtual #34                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     260: ifeq          283
     263: aload_0
     264: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     267: aload_2
     268: iconst_0
     269: invokevirtual #51                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     272: pop
     273: aload_0
     274: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     277: aload_1
     278: aload_2
     279: invokevirtual #52                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     282: pop
     283: aload_0
     284: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     287: aload_3
     288: aload_1
     289: invokevirtual #52                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     292: pop
     293: aload_0
     294: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     297: aload_3
     298: iconst_0
     299: invokevirtual #51                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     302: pop
     303: aload_0
     304: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     307: aload_2
     308: iconst_0
     309: invokevirtual #51                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     312: pop
     313: aload_0
     314: aload_0
     315: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     318: aload_0
     319: getfield      #31                 // Field editLogPath:Lorg/apache/hadoop/fs/Path;
     322: iconst_1
     323: invokevirtual #49                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
     326: putfield      #26                 // Field editlogOs:Lorg/apache/hadoop/fs/FSDataOutputStream;
     329: aload_0
     330: getfield      #26                 // Field editlogOs:Lorg/apache/hadoop/fs/FSDataOutputStream;
     333: invokevirtual #33                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     336: getstatic     #9                  // Field LOG:Lorg/apache/commons/logging/Log;
     339: new           #10                 // class java/lang/StringBuilder
     342: dup
     343: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     346: ldc           #53                 // String Finished write mirror at:
     348: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     351: aload_1
     352: invokevirtual #54                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     355: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     358: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     361: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     366: getstatic     #9                  // Field LOG:Lorg/apache/commons/logging/Log;
     369: new           #10                 // class java/lang/StringBuilder
     372: dup
     373: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     376: ldc           #55                 // String Finished create editlog file at:
     378: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     381: aload_0
     382: getfield      #31                 // Field editLogPath:Lorg/apache/hadoop/fs/Path;
     385: invokevirtual #54                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     388: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     391: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     394: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     399: return
    Exception table:
       from    to  target type
         175   180   183   Class java/lang/Throwable
         143   165   203   Class java/lang/Throwable
         143   165   212   any
         224   229   232   Class java/lang/Throwable
         203   214   212   any

  protected void loadManagerFromEditLog(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: invokevirtual #34                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      16: aload_1
      17: invokevirtual #35                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      20: astore_2
      21: aconst_null
      22: astore_3
      23: aload_2
      24: invokevirtual #56                 // Method org/apache/hadoop/fs/FSDataInputStream.readInt:()I
      27: aload_0
      28: getfield      #2                  // Field storeType:Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;
      31: invokestatic  #57                 // Method org/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler.get:(ILorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;)Lorg/apache/hadoop/yarn/nodelabels/store/op/FSNodeStoreLogOp;
      34: astore        4
      36: aload         4
      38: aload_2
      39: aload_0
      40: getfield      #5                  // Field manager:Ljava/lang/Object;
      43: invokeinterface #37,  3           // InterfaceMethod org/apache/hadoop/yarn/nodelabels/store/StoreOp.recover:(Ljava/lang/Object;Ljava/lang/Object;)V
      48: goto          23
      51: astore        4
      53: goto          56
      56: aload_2
      57: ifnull        132
      60: aload_3
      61: ifnull        82
      64: aload_2
      65: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      68: goto          132
      71: astore        4
      73: aload_3
      74: aload         4
      76: invokevirtual #40                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      79: goto          132
      82: aload_2
      83: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
      86: goto          132
      89: astore        4
      91: aload         4
      93: astore_3
      94: aload         4
      96: athrow
      97: astore        5
      99: aload_2
     100: ifnull        129
     103: aload_3
     104: ifnull        125
     107: aload_2
     108: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     111: goto          129
     114: astore        6
     116: aload_3
     117: aload         6
     119: invokevirtual #40                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     122: goto          129
     125: aload_2
     126: invokevirtual #38                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     129: aload         5
     131: athrow
     132: return
    Exception table:
       from    to  target type
          23    48    51   Class java/io/EOFException
          64    68    71   Class java/lang/Throwable
          23    56    89   Class java/lang/Throwable
          23    56    97   any
         107   111   114   Class java/lang/Throwable
          89    99    97   any

  public org.apache.hadoop.fs.FileSystem getFs();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public void setFs(org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       5: return

  protected void closeFSStore();
    Code:
       0: iconst_2
       1: anewarray     #59                 // class java/io/Closeable
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #26                 // Field editlogOs:Lorg/apache/hadoop/fs/FSDataOutputStream;
      17: aastore
      18: invokestatic  #60                 // Method org/apache/hadoop/io/IOUtils.closeStreams:([Ljava/io/Closeable;)V
      21: return

  static {};
    Code:
       0: ldc           #61                 // class org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore
       2: invokestatic  #62                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #9                  // Field LOG:Lorg/apache/commons/logging/Log;
       8: return
}
