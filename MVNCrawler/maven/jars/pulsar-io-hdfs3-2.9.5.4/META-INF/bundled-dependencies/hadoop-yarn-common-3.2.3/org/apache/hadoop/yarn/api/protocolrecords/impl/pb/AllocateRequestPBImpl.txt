Compiled from "AllocateRequestPBImpl.java"
public class org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl extends org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest {
  org.apache.hadoop.yarn.proto.YarnServiceProtos$AllocateRequestProto proto;

  org.apache.hadoop.yarn.proto.YarnServiceProtos$AllocateRequestProto$Builder builder;

  boolean viaProto;

  private java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest> ask;

  private java.util.List<org.apache.hadoop.yarn.api.records.ContainerId> release;

  private java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerRequest> updateRequests;

  private java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest> schedulingRequests;

  private org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest blacklistRequest;

  private java.lang.String trackingUrl;

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest."<init>":()V
       4: aload_0
       5: invokestatic  #10                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
       8: putfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #13                 // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field ask:Ljava/util/List;
      26: aload_0
      27: aconst_null
      28: putfield      #2                  // Field release:Ljava/util/List;
      31: aload_0
      32: aconst_null
      33: putfield      #6                  // Field updateRequests:Ljava/util/List;
      36: aload_0
      37: aconst_null
      38: putfield      #4                  // Field schedulingRequests:Ljava/util/List;
      41: aload_0
      42: aconst_null
      43: putfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      46: aload_0
      47: aconst_null
      48: putfield      #15                 // Field trackingUrl:Ljava/lang/String;
      51: aload_0
      52: invokestatic  #16                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      55: putfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      58: return

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl(org.apache.hadoop.yarn.proto.YarnServiceProtos$AllocateRequestProto);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/apache/hadoop/yarn/api/protocolrecords/AllocateRequest."<init>":()V
       4: aload_0
       5: invokestatic  #10                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
       8: putfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #13                 // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field ask:Ljava/util/List;
      26: aload_0
      27: aconst_null
      28: putfield      #2                  // Field release:Ljava/util/List;
      31: aload_0
      32: aconst_null
      33: putfield      #6                  // Field updateRequests:Ljava/util/List;
      36: aload_0
      37: aconst_null
      38: putfield      #4                  // Field schedulingRequests:Ljava/util/List;
      41: aload_0
      42: aconst_null
      43: putfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      46: aload_0
      47: aconst_null
      48: putfield      #15                 // Field trackingUrl:Ljava/lang/String;
      51: aload_0
      52: aload_1
      53: putfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      56: aload_0
      57: iconst_1
      58: putfield      #13                 // Field viaProto:Z
      61: return

  public org.apache.hadoop.yarn.proto.YarnServiceProtos$AllocateRequestProto getProto();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #13                 // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      16: goto          26
      19: aload_0
      20: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      23: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      26: putfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      29: aload_0
      30: iconst_1
      31: putfield      #13                 // Field viaProto:Z
      34: aload_0
      35: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
       4: invokevirtual #20                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #22                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      24: aload_0
      25: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #23                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #24                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl
      35: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      38: invokevirtual #25                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
       4: invokestatic  #26                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ask:Ljava/util/List;
       4: ifnull        11
       7: aload_0
       8: invokespecial #27                 // Method addAsksToProto:()V
      11: aload_0
      12: getfield      #2                  // Field release:Ljava/util/List;
      15: ifnull        22
      18: aload_0
      19: invokespecial #28                 // Method addReleasesToProto:()V
      22: aload_0
      23: getfield      #6                  // Field updateRequests:Ljava/util/List;
      26: ifnull        33
      29: aload_0
      30: invokespecial #29                 // Method addUpdateRequestsToProto:()V
      33: aload_0
      34: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
      37: ifnull        44
      40: aload_0
      41: invokespecial #30                 // Method addSchedulingRequestsToProto:()V
      44: aload_0
      45: getfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      48: ifnull        67
      51: aload_0
      52: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      55: aload_0
      56: aload_0
      57: getfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      60: invokespecial #31                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceBlacklistRequestProto;
      63: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.setBlacklistRequest:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceBlacklistRequestProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      66: pop
      67: aload_0
      68: getfield      #15                 // Field trackingUrl:Ljava/lang/String;
      71: ifnull        86
      74: aload_0
      75: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      78: aload_0
      79: getfield      #15                 // Field trackingUrl:Ljava/lang/String;
      82: invokevirtual #33                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.setTrackingUrl:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      85: pop
      86: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #13                 // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #34                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #35                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      20: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      23: putfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      26: aload_0
      27: iconst_1
      28: putfield      #13                 // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #13                 // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      19: invokestatic  #36                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      22: putfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #13                 // Field viaProto:Z
      30: return

  public int getResponseId();
    Code:
       0: aload_0
       1: getfield      #13                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #37,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getResponseId:()I
      25: ireturn

  public void setResponseId(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
       8: iload_1
       9: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.setResponseId:(I)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      12: pop
      13: return

  public float getProgress();
    Code:
       0: aload_0
       1: getfield      #13                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #39,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getProgress:()F
      25: freturn

  public void setProgress(float);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
       8: fload_1
       9: invokevirtual #40                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.setProgress:(F)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      12: pop
      13: return

  public java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest> getAskList();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method initAsks:()V
       4: aload_0
       5: getfield      #8                  // Field ask:Ljava/util/List;
       8: areturn

  public void setAskList(java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #41                 // Method initAsks:()V
       9: aload_0
      10: getfield      #8                  // Field ask:Ljava/util/List;
      13: invokeinterface #42,  1           // InterfaceMethod java/util/List.clear:()V
      18: aload_0
      19: getfield      #8                  // Field ask:Ljava/util/List;
      22: aload_1
      23: invokeinterface #43,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: return

  public java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerRequest> getUpdateRequests();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method initUpdateRequests:()V
       4: aload_0
       5: getfield      #6                  // Field updateRequests:Ljava/util/List;
       8: areturn

  public void setUpdateRequests(java.util.List<org.apache.hadoop.yarn.api.records.UpdateContainerRequest>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #44                 // Method initUpdateRequests:()V
       9: aload_0
      10: getfield      #6                  // Field updateRequests:Ljava/util/List;
      13: invokeinterface #42,  1           // InterfaceMethod java/util/List.clear:()V
      18: aload_0
      19: getfield      #6                  // Field updateRequests:Ljava/util/List;
      22: aload_1
      23: invokeinterface #43,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: return

  public java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest> getSchedulingRequests();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method initSchedulingRequests:()V
       4: aload_0
       5: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
       8: areturn

  public void setSchedulingRequests(java.util.List<org.apache.hadoop.yarn.api.records.SchedulingRequest>);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
       8: invokevirtual #46                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.clearSchedulingRequests:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      11: pop
      12: return
      13: aload_0
      14: invokespecial #45                 // Method initSchedulingRequests:()V
      17: aload_0
      18: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
      21: invokeinterface #42,  1           // InterfaceMethod java/util/List.clear:()V
      26: aload_0
      27: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
      30: aload_1
      31: invokeinterface #43,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      36: pop
      37: return

  public org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest getResourceBlacklistRequest();
    Code:
       0: aload_0
       1: getfield      #13                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      23: ifnull        31
      26: aload_0
      27: getfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      30: areturn
      31: aload_1
      32: invokeinterface #47,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.hasBlacklistRequest:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #48,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getBlacklistRequest:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceBlacklistRequestProto;
      50: invokespecial #49                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceBlacklistRequestProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourceBlacklistRequestPBImpl;
      53: putfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      56: aload_0
      57: getfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      60: areturn

  public void setResourceBlacklistRequest(org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      12: invokevirtual #50                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.clearBlacklistRequest:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #14                 // Field blacklistRequest:Lorg/apache/hadoop/yarn/api/records/ResourceBlacklistRequest;
      21: return

  private void initAsks();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ask:Ljava/util/List;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #13                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      19: goto          26
      22: aload_0
      23: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #51,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getAskList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #52                 // class java/util/ArrayList
      38: dup
      39: invokespecial #53                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #8                  // Field ask:Ljava/util/List;
      45: aload_2
      46: invokeinterface #54,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          91
      61: aload_3
      62: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #57                 // class org/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto
      70: astore        4
      72: aload_0
      73: getfield      #8                  // Field ask:Ljava/util/List;
      76: aload_0
      77: aload         4
      79: invokespecial #58                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl;
      82: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          52
      91: return

  private void addAsksToProto();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
       8: invokevirtual #60                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.clearAsk:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #8                  // Field ask:Ljava/util/List;
      16: ifnonnull     20
      19: return
      20: new           #61                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$1
      23: dup
      24: aload_0
      25: invokespecial #62                 // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$1."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      33: aload_1
      34: invokevirtual #63                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.addAllAsk:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      37: pop
      38: return

  private void initUpdateRequests();
    Code:
       0: aload_0
       1: getfield      #6                  // Field updateRequests:Ljava/util/List;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #13                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      19: goto          26
      22: aload_0
      23: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #64,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getUpdateRequestsList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #52                 // class java/util/ArrayList
      38: dup
      39: invokespecial #53                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #6                  // Field updateRequests:Ljava/util/List;
      45: aload_2
      46: invokeinterface #54,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          91
      61: aload_3
      62: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #65                 // class org/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto
      70: astore        4
      72: aload_0
      73: getfield      #6                  // Field updateRequests:Ljava/util/List;
      76: aload_0
      77: aload         4
      79: invokespecial #66                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/UpdateContainerRequestPBImpl;
      82: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          52
      91: return

  private void initSchedulingRequests();
    Code:
       0: aload_0
       1: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #13                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      19: goto          26
      22: aload_0
      23: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #67,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getSchedulingRequestsList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #52                 // class java/util/ArrayList
      38: dup
      39: invokespecial #53                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #4                  // Field schedulingRequests:Ljava/util/List;
      45: aload_2
      46: invokeinterface #54,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          91
      61: aload_3
      62: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #68                 // class org/apache/hadoop/yarn/proto/YarnProtos$SchedulingRequestProto
      70: astore        4
      72: aload_0
      73: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
      76: aload_0
      77: aload         4
      79: invokespecial #69                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$SchedulingRequestProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/SchedulingRequestPBImpl;
      82: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          52
      91: return

  private void addUpdateRequestsToProto();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
       8: invokevirtual #70                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.clearUpdateRequests:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #6                  // Field updateRequests:Ljava/util/List;
      16: ifnonnull     20
      19: return
      20: new           #71                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$2
      23: dup
      24: aload_0
      25: invokespecial #72                 // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$2."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      33: aload_1
      34: invokevirtual #73                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.addAllUpdateRequests:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      37: pop
      38: return

  private void addSchedulingRequestsToProto();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
       8: invokevirtual #46                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.clearSchedulingRequests:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
      16: ifnonnull     20
      19: return
      20: new           #74                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$3
      23: dup
      24: aload_0
      25: invokespecial #75                 // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$3."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      33: aload_1
      34: invokevirtual #76                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.addAllSchedulingRequests:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      37: pop
      38: return

  public java.util.List<org.apache.hadoop.yarn.api.records.ContainerId> getReleaseList();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method initReleases:()V
       4: aload_0
       5: getfield      #2                  // Field release:Ljava/util/List;
       8: areturn

  public void setReleaseList(java.util.List<org.apache.hadoop.yarn.api.records.ContainerId>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #77                 // Method initReleases:()V
       9: aload_0
      10: getfield      #2                  // Field release:Ljava/util/List;
      13: invokeinterface #42,  1           // InterfaceMethod java/util/List.clear:()V
      18: aload_0
      19: getfield      #2                  // Field release:Ljava/util/List;
      22: aload_1
      23: invokeinterface #43,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: return

  private void initReleases();
    Code:
       0: aload_0
       1: getfield      #2                  // Field release:Ljava/util/List;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #13                 // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      19: goto          26
      22: aload_0
      23: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #78,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getReleaseList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #52                 // class java/util/ArrayList
      38: dup
      39: invokespecial #53                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #2                  // Field release:Ljava/util/List;
      45: aload_2
      46: invokeinterface #54,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          91
      61: aload_3
      62: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #79                 // class org/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto
      70: astore        4
      72: aload_0
      73: getfield      #2                  // Field release:Ljava/util/List;
      76: aload_0
      77: aload         4
      79: invokespecial #80                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl;
      82: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          52
      91: return

  public java.lang.String getTrackingUrl();
    Code:
       0: aload_0
       1: getfield      #13                 // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #11                 // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #15                 // Field trackingUrl:Ljava/lang/String;
      23: ifnull        31
      26: aload_0
      27: getfield      #15                 // Field trackingUrl:Ljava/lang/String;
      30: areturn
      31: aload_1
      32: invokeinterface #81,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.hasTrackingUrl:()Z
      37: ifeq          50
      40: aload_0
      41: aload_1
      42: invokeinterface #82,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProtoOrBuilder.getTrackingUrl:()Ljava/lang/String;
      47: putfield      #15                 // Field trackingUrl:Ljava/lang/String;
      50: aload_0
      51: getfield      #15                 // Field trackingUrl:Ljava/lang/String;
      54: areturn

  public void setTrackingUrl(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      12: invokevirtual #83                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.clearTrackingUrl:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #15                 // Field trackingUrl:Ljava/lang/String;
      21: return

  private void addReleasesToProto();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
       8: invokevirtual #84                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.clearRelease:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #2                  // Field release:Ljava/util/List;
      16: ifnonnull     20
      19: return
      20: new           #85                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$4
      23: dup
      24: aload_0
      25: invokespecial #86                 // Method org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl$4."<init>":(Lorg/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #12                 // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      33: aload_1
      34: invokevirtual #87                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder.addAllRelease:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$AllocateRequestProto$Builder;
      37: pop
      38: return

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourceRequestPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceRequestProto);
    Code:
       0: new           #88                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl
       3: dup
       4: aload_1
       5: invokespecial #89                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceRequestProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ResourceRequest);
    Code:
       0: aload_1
       1: checkcast     #88                 // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl
       4: invokevirtual #90                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.UpdateContainerRequestPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnServiceProtos$UpdateContainerRequestProto);
    Code:
       0: new           #91                 // class org/apache/hadoop/yarn/api/records/impl/pb/UpdateContainerRequestPBImpl
       3: dup
       4: aload_1
       5: invokespecial #92                 // Method org/apache/hadoop/yarn/api/records/impl/pb/UpdateContainerRequestPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnServiceProtos$UpdateContainerRequestProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.UpdateContainerRequest);
    Code:
       0: aload_1
       1: checkcast     #91                 // class org/apache/hadoop/yarn/api/records/impl/pb/UpdateContainerRequestPBImpl
       4: invokevirtual #93                 // Method org/apache/hadoop/yarn/api/records/impl/pb/UpdateContainerRequestPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.SchedulingRequestPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$SchedulingRequestProto);
    Code:
       0: new           #94                 // class org/apache/hadoop/yarn/api/records/impl/pb/SchedulingRequestPBImpl
       3: dup
       4: aload_1
       5: invokespecial #95                 // Method org/apache/hadoop/yarn/api/records/impl/pb/SchedulingRequestPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$SchedulingRequestProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$SchedulingRequestProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.SchedulingRequest);
    Code:
       0: aload_1
       1: checkcast     #94                 // class org/apache/hadoop/yarn/api/records/impl/pb/SchedulingRequestPBImpl
       4: invokevirtual #96                 // Method org/apache/hadoop/yarn/api/records/impl/pb/SchedulingRequestPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$SchedulingRequestProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto);
    Code:
       0: new           #97                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #98                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_1
       1: checkcast     #97                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       4: invokevirtual #99                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourceBlacklistRequestPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceBlacklistRequestProto);
    Code:
       0: new           #100                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceBlacklistRequestPBImpl
       3: dup
       4: aload_1
       5: invokespecial #101                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceBlacklistRequestPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceBlacklistRequestProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceBlacklistRequestProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest);
    Code:
       0: aload_1
       1: checkcast     #100                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceBlacklistRequestPBImpl
       4: invokevirtual #102                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceBlacklistRequestPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceBlacklistRequestProto;
       7: areturn

  static java.util.List access$000(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ask:Ljava/util/List;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$ResourceRequestProto access$100(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl, org.apache.hadoop.yarn.api.records.ResourceRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ResourceRequest;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto;
       5: areturn

  static java.util.List access$200(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field updateRequests:Ljava/util/List;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnServiceProtos$UpdateContainerRequestProto access$300(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl, org.apache.hadoop.yarn.api.records.UpdateContainerRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/UpdateContainerRequest;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UpdateContainerRequestProto;
       5: areturn

  static java.util.List access$400(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field schedulingRequests:Ljava/util/List;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$SchedulingRequestProto access$500(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl, org.apache.hadoop.yarn.api.records.SchedulingRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/SchedulingRequest;)Lorg/apache/hadoop/yarn/proto/YarnProtos$SchedulingRequestProto;
       5: areturn

  static java.util.List access$600(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field release:Ljava/util/List;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto access$700(org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateRequestPBImpl, org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
       5: areturn
}
