Compiled from "NonAppendableFSNodeLabelStore.java"
public class org.apache.hadoop.yarn.nodelabels.NonAppendableFSNodeLabelStore extends org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore {
  protected static final org.apache.commons.logging.Log LOG;

  public org.apache.hadoop.yarn.nodelabels.NonAppendableFSNodeLabelStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore."<init>":()V
       4: return

  public void close() throws java.io.IOException;
    Code:
       0: return

  public void recover() throws org.apache.hadoop.yarn.exceptions.YarnException, java.io.IOException;
    Code:
       0: new           #2                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #3                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
       8: ldc           #5                  // String nodelabel.mirror.new
      10: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      13: astore_1
      14: new           #2                  // class org/apache/hadoop/fs/Path
      17: dup
      18: aload_0
      19: getfield      #3                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      22: ldc           #7                  // String nodelabel.mirror
      24: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      27: astore_2
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokevirtual #8                  // Method loadFromMirror:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      34: aload_0
      35: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      38: aload_1
      39: invokevirtual #10                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      42: ifeq          91
      45: aload_0
      46: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      49: aload_2
      50: iconst_0
      51: invokevirtual #11                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      54: pop
      55: goto          81
      58: astore_3
      59: getstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
      62: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      67: ifeq          81
      70: getstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
      73: ldc           #15                 // String Exception while removing old mirror
      75: aload_3
      76: invokeinterface #16,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      81: aload_0
      82: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      85: aload_1
      86: aload_2
      87: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      90: pop
      91: getstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
      94: ldc           #18                 // String Node label store recover is completed
      96: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     101: return
    Exception table:
       from    to  target type
          45    55    58   Class java/io/IOException

  public void updateNodeToLabelsMappings(java.util.Map<org.apache.hadoop.yarn.api.records.NodeId, java.util.Set<java.lang.String>>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method writeNewMirror:()V
       4: return

  public void storeNewClusterNodeLabels(java.util.List<org.apache.hadoop.yarn.api.records.NodeLabel>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method writeNewMirror:()V
       4: return

  public void removeClusterNodeLabels(java.util.Collection<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method writeNewMirror:()V
       4: return

  private void writeNewMirror() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field manager:Ljava/lang/Object;
       4: checkcast     #22                 // class org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager
       7: getfield      #23                 // Field org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      10: astore_1
      11: aload_1
      12: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      15: new           #2                  // class org/apache/hadoop/fs/Path
      18: dup
      19: aload_0
      20: getfield      #3                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
      23: ldc           #25                 // String nodelabel.mirror.new.tmp
      25: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      28: astore_2
      29: aload_0
      30: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      33: aload_2
      34: iconst_1
      35: invokevirtual #26                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
      38: astore_3
      39: aconst_null
      40: astore        4
      42: aload_0
      43: invokevirtual #27                 // Method getStoreType:()Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;
      46: invokestatic  #28                 // Method org/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler.getMirrorOp:(Lorg/apache/hadoop/yarn/nodelabels/store/FSStoreOpHandler$StoreType;)Lorg/apache/hadoop/yarn/nodelabels/store/op/FSNodeStoreLogOp;
      49: astore        5
      51: aload         5
      53: aload_3
      54: aload_0
      55: getfield      #21                 // Field manager:Ljava/lang/Object;
      58: invokeinterface #29,  3           // InterfaceMethod org/apache/hadoop/yarn/nodelabels/store/StoreOp.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      63: aload_3
      64: ifnull        144
      67: aload         4
      69: ifnull        91
      72: aload_3
      73: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      76: goto          144
      79: astore        5
      81: aload         4
      83: aload         5
      85: invokevirtual #32                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      88: goto          144
      91: aload_3
      92: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      95: goto          144
      98: astore        5
     100: aload         5
     102: astore        4
     104: aload         5
     106: athrow
     107: astore        6
     109: aload_3
     110: ifnull        141
     113: aload         4
     115: ifnull        137
     118: aload_3
     119: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     122: goto          141
     125: astore        7
     127: aload         4
     129: aload         7
     131: invokevirtual #32                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     134: goto          141
     137: aload_3
     138: invokevirtual #30                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
     141: aload         6
     143: athrow
     144: new           #2                  // class org/apache/hadoop/fs/Path
     147: dup
     148: aload_0
     149: getfield      #3                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
     152: ldc           #5                  // String nodelabel.mirror.new
     154: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     157: astore_3
     158: aload_0
     159: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     162: aload_3
     163: iconst_0
     164: invokevirtual #11                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     167: pop
     168: aload_0
     169: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     172: aload_2
     173: aload_3
     174: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     177: pop
     178: new           #2                  // class org/apache/hadoop/fs/Path
     181: dup
     182: aload_0
     183: getfield      #3                  // Field fsWorkingPath:Lorg/apache/hadoop/fs/Path;
     186: ldc           #7                  // String nodelabel.mirror
     188: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     191: astore        4
     193: aload_0
     194: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     197: aload         4
     199: iconst_0
     200: invokevirtual #11                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     203: pop
     204: aload_0
     205: getfield      #9                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     208: aload_3
     209: aload         4
     211: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     214: pop
     215: aload_1
     216: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     219: goto          231
     222: astore        8
     224: aload_1
     225: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     228: aload         8
     230: athrow
     231: return
    Exception table:
       from    to  target type
          72    76    79   Class java/lang/Throwable
          42    63    98   Class java/lang/Throwable
          42    63   107   any
         118   122   125   Class java/lang/Throwable
          98   109   107   any
          11   215   222   any
         222   224   222   any

  static {};
    Code:
       0: ldc           #34                 // class org/apache/hadoop/yarn/nodelabels/NonAppendableFSNodeLabelStore
       2: invokestatic  #35                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
       8: return
}
