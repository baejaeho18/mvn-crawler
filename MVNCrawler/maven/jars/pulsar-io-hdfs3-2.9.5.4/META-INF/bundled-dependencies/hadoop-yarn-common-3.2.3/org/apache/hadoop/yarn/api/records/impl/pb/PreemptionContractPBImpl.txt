Compiled from "PreemptionContractPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContractPBImpl extends org.apache.hadoop.yarn.api.records.PreemptionContract {
  org.apache.hadoop.yarn.proto.YarnProtos$PreemptionContractProto proto;

  org.apache.hadoop.yarn.proto.YarnProtos$PreemptionContractProto$Builder builder;

  boolean viaProto;

  private java.util.Set<org.apache.hadoop.yarn.api.records.PreemptionContainer> containers;

  private java.util.List<org.apache.hadoop.yarn.api.records.PreemptionResourceRequest> resources;

  public org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContractPBImpl();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/hadoop/yarn/api/records/PreemptionContract."<init>":()V
       4: aload_0
       5: invokestatic  #6                  // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
       8: putfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      11: aload_0
      12: aconst_null
      13: putfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #9                  // Field viaProto:Z
      21: aload_0
      22: invokestatic  #10                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      25: putfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      28: return

  public org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContractPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$PreemptionContractProto);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/hadoop/yarn/api/records/PreemptionContract."<init>":()V
       4: aload_0
       5: invokestatic  #6                  // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
       8: putfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      11: aload_0
      12: aconst_null
      13: putfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #9                  // Field viaProto:Z
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      26: aload_0
      27: iconst_1
      28: putfield      #9                  // Field viaProto:Z
      31: return

  public synchronized org.apache.hadoop.yarn.proto.YarnProtos$PreemptionContractProto getProto();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #9                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      16: goto          26
      19: aload_0
      20: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      23: invokevirtual #12                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      26: putfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      29: aload_0
      30: iconst_1
      31: putfield      #9                  // Field viaProto:Z
      34: aload_0
      35: getfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
       4: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #16                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #13                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      24: aload_0
      25: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #17                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #18                 // class org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContractPBImpl
      35: invokevirtual #13                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      38: invokevirtual #19                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
       4: invokestatic  #20                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #21                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #22                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      20: invokevirtual #12                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      23: putfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      26: aload_0
      27: iconst_1
      28: putfield      #9                  // Field viaProto:Z
      31: return

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resources:Ljava/util/List;
       4: ifnull        11
       7: aload_0
       8: invokespecial #23                 // Method addResourcesToProto:()V
      11: aload_0
      12: getfield      #2                  // Field containers:Ljava/util/Set;
      15: ifnull        22
      18: aload_0
      19: invokespecial #24                 // Method addContainersToProto:()V
      22: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      19: invokestatic  #25                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      22: putfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #9                  // Field viaProto:Z
      30: return

  public synchronized java.util.Set<org.apache.hadoop.yarn.api.records.PreemptionContainer> getContainers();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method initPreemptionContainers:()V
       4: aload_0
       5: getfield      #2                  // Field containers:Ljava/util/Set;
       8: areturn

  public synchronized void setContainers(java.util.Set<org.apache.hadoop.yarn.api.records.PreemptionContainer>);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: aload_0
       6: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
       9: invokevirtual #27                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.clearContainer:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      12: pop
      13: aload_0
      14: aload_1
      15: putfield      #2                  // Field containers:Ljava/util/Set;
      18: return

  public synchronized java.util.List<org.apache.hadoop.yarn.api.records.PreemptionResourceRequest> getResourceRequest();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method initPreemptionResourceRequests:()V
       4: aload_0
       5: getfield      #4                  // Field resources:Ljava/util/List;
       8: areturn

  public synchronized void setResourceRequest(java.util.List<org.apache.hadoop.yarn.api.records.PreemptionResourceRequest>);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #4                  // Field resources:Ljava/util/List;
       5: if_acmpne     16
       8: aload_0
       9: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      12: invokevirtual #29                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.clearResource:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #4                  // Field resources:Ljava/util/List;
      21: return

  private void initPreemptionResourceRequests();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resources:Ljava/util/List;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #9                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      19: goto          26
      22: aload_0
      23: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProtoOrBuilder.getResourceList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #31                 // class java/util/ArrayList
      38: dup
      39: invokespecial #32                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #4                  // Field resources:Ljava/util/List;
      45: aload_2
      46: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          91
      61: aload_3
      62: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #36                 // class org/apache/hadoop/yarn/proto/YarnProtos$PreemptionResourceRequestProto
      70: astore        4
      72: aload_0
      73: getfield      #4                  // Field resources:Ljava/util/List;
      76: aload_0
      77: aload         4
      79: invokespecial #37                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionResourceRequestProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/PreemptionResourceRequestPBImpl;
      82: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          52
      91: return

  private void addResourcesToProto();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
       8: invokevirtual #29                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.clearResource:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      11: pop
      12: aconst_null
      13: aload_0
      14: getfield      #4                  // Field resources:Ljava/util/List;
      17: if_acmpne     21
      20: return
      21: new           #39                 // class org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContractPBImpl$1
      24: dup
      25: aload_0
      26: invokespecial #40                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContractPBImpl$1."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/PreemptionContractPBImpl;)V
      29: astore_1
      30: aload_0
      31: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      34: aload_1
      35: invokevirtual #41                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.addAllResource:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      38: pop
      39: return

  private void initPreemptionContainers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field containers:Ljava/util/Set;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #9                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #7                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto;
      19: goto          26
      22: aload_0
      23: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #42,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProtoOrBuilder.getContainerList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #43                 // class java/util/HashSet
      38: dup
      39: invokespecial #44                 // Method java/util/HashSet."<init>":()V
      42: putfield      #2                  // Field containers:Ljava/util/Set;
      45: aload_2
      46: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          91
      61: aload_3
      62: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #45                 // class org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContainerProto
      70: astore        4
      72: aload_0
      73: getfield      #2                  // Field containers:Ljava/util/Set;
      76: aload_0
      77: aload         4
      79: invokespecial #46                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContainerProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/PreemptionContainerPBImpl;
      82: invokeinterface #47,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          52
      91: return

  private void addContainersToProto();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
       8: invokevirtual #27                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.clearContainer:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      11: pop
      12: aconst_null
      13: aload_0
      14: getfield      #2                  // Field containers:Ljava/util/Set;
      17: if_acmpne     21
      20: return
      21: new           #48                 // class org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContractPBImpl$2
      24: dup
      25: aload_0
      26: invokespecial #49                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContractPBImpl$2."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/PreemptionContractPBImpl;)V
      29: astore_1
      30: aload_0
      31: getfield      #8                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      34: aload_1
      35: invokevirtual #50                 // Method org/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder.addAllContainer:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContractProto$Builder;
      38: pop
      39: return

  private org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContainerPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$PreemptionContainerProto);
    Code:
       0: new           #51                 // class org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContainerPBImpl
       3: dup
       4: aload_1
       5: invokespecial #52                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContainerPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContainerProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$PreemptionContainerProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.PreemptionContainer);
    Code:
       0: aload_1
       1: checkcast     #51                 // class org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContainerPBImpl
       4: invokevirtual #53                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PreemptionContainerPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContainerProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.PreemptionResourceRequestPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$PreemptionResourceRequestProto);
    Code:
       0: new           #54                 // class org/apache/hadoop/yarn/api/records/impl/pb/PreemptionResourceRequestPBImpl
       3: dup
       4: aload_1
       5: invokespecial #55                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PreemptionResourceRequestPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionResourceRequestProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$PreemptionResourceRequestProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.PreemptionResourceRequest);
    Code:
       0: aload_1
       1: checkcast     #54                 // class org/apache/hadoop/yarn/api/records/impl/pb/PreemptionResourceRequestPBImpl
       4: invokevirtual #56                 // Method org/apache/hadoop/yarn/api/records/impl/pb/PreemptionResourceRequestPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionResourceRequestProto;
       7: areturn

  static java.util.List access$000(org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContractPBImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resources:Ljava/util/List;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$PreemptionResourceRequestProto access$100(org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContractPBImpl, org.apache.hadoop.yarn.api.records.PreemptionResourceRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/PreemptionResourceRequest;)Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionResourceRequestProto;
       5: areturn

  static java.util.Set access$200(org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContractPBImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field containers:Ljava/util/Set;
       4: areturn

  static org.apache.hadoop.yarn.proto.YarnProtos$PreemptionContainerProto access$300(org.apache.hadoop.yarn.api.records.impl.pb.PreemptionContractPBImpl, org.apache.hadoop.yarn.api.records.PreemptionContainer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/PreemptionContainer;)Lorg/apache/hadoop/yarn/proto/YarnProtos$PreemptionContainerProto;
       5: areturn
}
