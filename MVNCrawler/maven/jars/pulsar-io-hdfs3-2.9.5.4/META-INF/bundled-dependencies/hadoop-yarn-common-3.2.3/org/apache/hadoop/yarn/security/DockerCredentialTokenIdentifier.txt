Compiled from "DockerCredentialTokenIdentifier.java"
public class org.apache.hadoop.yarn.security.DockerCredentialTokenIdentifier extends org.apache.hadoop.security.token.TokenIdentifier {
  private static final org.slf4j.Logger LOG;

  private org.apache.hadoop.yarn.proto.YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto proto;

  public static final org.apache.hadoop.io.Text KIND;

  public org.apache.hadoop.yarn.security.DockerCredentialTokenIdentifier(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/security/token/TokenIdentifier."<init>":()V
       4: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto$Builder;
       7: astore_3
       8: aload_1
       9: ifnull        18
      12: aload_3
      13: aload_1
      14: invokevirtual #3                  // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto$Builder.setRegistryUrl:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto$Builder;
      17: pop
      18: aload_2
      19: ifnull        28
      22: aload_3
      23: aload_2
      24: invokevirtual #4                  // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto$Builder.setApplicationId:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto$Builder;
      27: pop
      28: aload_0
      29: aload_3
      30: invokevirtual #5                  // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
      33: putfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
      36: return

  public org.apache.hadoop.yarn.security.DockerCredentialTokenIdentifier();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/security/token/TokenIdentifier."<init>":()V
       4: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
       5: invokevirtual #7                  // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.toByteArray:()[B
       8: invokeinterface #8,  2            // InterfaceMethod java/io/DataOutput.write:([B)V
      13: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/io/DataInputStream
       5: invokestatic  #10                 // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.parseFrom:(Ljava/io/InputStream;)Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
       8: putfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
      11: return

  public org.apache.hadoop.yarn.proto.YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto getProto();
    Code:
       0: aload_0
       1: getfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
       4: areturn

  public org.apache.hadoop.io.Text getKind();
    Code:
       0: getstatic     #11                 // Field KIND:Lorg/apache/hadoop/io/Text;
       3: areturn

  public org.apache.hadoop.security.UserGroupInformation getUser();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #14                 // Method getRegistryUrl:()Ljava/lang/String;
      11: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #16                 // String -
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #17                 // Method getApplicationId:()Ljava/lang/String;
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokestatic  #19                 // Method org/apache/hadoop/security/UserGroupInformation.createRemoteUser:(Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
      32: areturn

  public java.lang.String getRegistryUrl();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
       6: invokevirtual #20                 // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.hasRegistryUrl:()Z
       9: ifeq          20
      12: aload_0
      13: getfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
      16: invokevirtual #21                 // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.getRegistryUrl:()Ljava/lang/String;
      19: astore_1
      20: aload_1
      21: areturn

  public java.lang.String getApplicationId();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
       6: invokevirtual #22                 // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.hasApplicationId:()Z
       9: ifeq          20
      12: aload_0
      13: getfield      #6                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
      16: invokevirtual #23                 // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.getApplicationId:()Ljava/lang/String;
      19: astore_1
      20: aload_1
      21: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
       4: invokevirtual #25                 // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #27                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #24                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
      24: aload_0
      25: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #28                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #29                 // class org/apache/hadoop/yarn/security/DockerCredentialTokenIdentifier
      35: invokevirtual #24                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
      38: invokevirtual #30                 // Method org/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnSecurityTokenProtos$DockerCredentialTokenIdentifierProto;
       4: invokestatic  #31                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: ldc           #29                 // class org/apache/hadoop/yarn/security/DockerCredentialTokenIdentifier
       2: invokestatic  #32                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
       8: new           #34                 // class org/apache/hadoop/io/Text
      11: dup
      12: ldc           #35                 // String DOCKER_CLIENT_CREDENTIAL_TOKEN
      14: invokespecial #36                 // Method org/apache/hadoop/io/Text."<init>":(Ljava/lang/String;)V
      17: putstatic     #11                 // Field KIND:Lorg/apache/hadoop/io/Text;
      20: return
}
