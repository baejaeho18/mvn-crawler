Compiled from "ContainerStatusPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.ContainerStatusPBImpl extends org.apache.hadoop.yarn.api.records.ContainerStatus {
  org.apache.hadoop.yarn.proto.YarnProtos$ContainerStatusProto proto;

  org.apache.hadoop.yarn.proto.YarnProtos$ContainerStatusProto$Builder builder;

  boolean viaProto;

  private org.apache.hadoop.yarn.api.records.ContainerId containerId;

  private static final java.lang.String HOST;

  private static final java.lang.String IPS;

  private java.util.Map<java.lang.String, java.lang.String> containerAttributes;

  public org.apache.hadoop.yarn.api.records.impl.pb.ContainerStatusPBImpl();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/yarn/api/records/ContainerStatus."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
       8: putfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: aload_0
      12: aconst_null
      13: putfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      26: aload_0
      27: new           #8                  // class java/util/HashMap
      30: dup
      31: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      34: putfield      #1                  // Field containerAttributes:Ljava/util/Map;
      37: aload_0
      38: invokestatic  #10                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      41: putfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      44: return

  public org.apache.hadoop.yarn.api.records.impl.pb.ContainerStatusPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$ContainerStatusProto);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/yarn/api/records/ContainerStatus."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
       8: putfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: aload_0
      12: aconst_null
      13: putfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      26: aload_0
      27: new           #8                  // class java/util/HashMap
      30: dup
      31: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      34: putfield      #1                  // Field containerAttributes:Ljava/util/Map;
      37: aload_0
      38: aload_1
      39: putfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      42: aload_0
      43: iconst_1
      44: putfield      #6                  // Field viaProto:Z
      47: return

  public synchronized org.apache.hadoop.yarn.proto.YarnProtos$ContainerStatusProto getProto();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      16: goto          26
      19: aload_0
      20: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      23: invokevirtual #12                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      26: putfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      29: aload_0
      30: iconst_1
      31: putfield      #6                  // Field viaProto:Z
      34: aload_0
      35: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
       4: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #16                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #13                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      24: aload_0
      25: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #17                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #18                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerStatusPBImpl
      35: invokevirtual #13                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      38: invokevirtual #19                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #22                 // String ContainerStatus: [
      11: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #24                 // String ContainerId:
      18: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #25                 // Method getContainerId:()Lorg/apache/hadoop/yarn/api/records/ContainerId;
      25: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #27                 // String ,
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: ldc           #28                 // String ExecutionType:
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #29                 // Method getExecutionType:()Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      44: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #27                 // String ,
      49: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_1
      54: ldc           #30                 // String State:
      56: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #31                 // Method getState:()Lorg/apache/hadoop/yarn/api/records/ContainerState;
      63: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #27                 // String ,
      68: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: aload_1
      73: ldc           #32                 // String Capability:
      75: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #33                 // Method getCapability:()Lorg/apache/hadoop/yarn/api/records/Resource;
      82: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #27                 // String ,
      87: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: ldc           #34                 // String Diagnostics:
      94: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: invokevirtual #35                 // Method getDiagnostics:()Ljava/lang/String;
     101: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #27                 // String ,
     106: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: pop
     110: aload_1
     111: ldc           #36                 // String ExitStatus:
     113: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_0
     117: invokevirtual #37                 // Method getExitStatus:()I
     120: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     123: ldc           #27                 // String ,
     125: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_1
     130: ldc           #39                 // String IP:
     132: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_0
     136: invokevirtual #40                 // Method getIPs:()Ljava/util/List;
     139: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     142: ldc           #27                 // String ,
     144: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: pop
     148: aload_1
     149: ldc           #41                 // String Host:
     151: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload_0
     155: invokevirtual #42                 // Method getHost:()Ljava/lang/String;
     158: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: ldc           #27                 // String ,
     163: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: pop
     167: aload_1
     168: ldc           #43                 // String ContainerSubState:
     170: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_0
     174: invokevirtual #44                 // Method getContainerSubState:()Lorg/apache/hadoop/yarn/api/records/ContainerSubState;
     177: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     180: pop
     181: aload_1
     182: ldc           #45                 // String ]
     184: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: pop
     188: aload_1
     189: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
       4: ifnull        23
       7: aload_0
       8: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      11: aload_0
      12: aload_0
      13: getfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      16: invokespecial #47                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      19: invokevirtual #48                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.setContainerId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      22: pop
      23: aload_0
      24: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      27: ifnull        46
      30: aload_0
      31: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      34: invokeinterface #49,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      39: ifne          46
      42: aload_0
      43: invokespecial #50                 // Method addContainerAttributesToProto:()V
      46: return

  private synchronized void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #51                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #52                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      20: invokevirtual #12                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      23: putfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      26: aload_0
      27: iconst_1
      28: putfield      #6                  // Field viaProto:Z
      31: return

  private synchronized void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      19: invokestatic  #53                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      22: putfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field viaProto:Z
      30: return

  private void addContainerAttributesToProto();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
       8: invokevirtual #54                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.clearContainerAttributes:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #55                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerStatusPBImpl$1
      23: dup
      24: aload_0
      25: invokespecial #56                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerStatusPBImpl$1."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerStatusPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      33: aload_1
      34: invokevirtual #57                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.addAllContainerAttributes:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      37: pop
      38: return

  private void initContainerAttributes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #58,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getContainerAttributesList:()Ljava/util/List;
      25: astore_2
      26: aload_2
      27: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore_3
      33: aload_3
      34: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          93
      42: aload_3
      43: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #62                 // class org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto
      51: astore        4
      53: aload_0
      54: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      57: aload         4
      59: invokevirtual #63                 // Method org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto.getKey:()Ljava/lang/String;
      62: invokeinterface #64,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      67: ifne          90
      70: aload_0
      71: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      74: aload         4
      76: invokevirtual #63                 // Method org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto.getKey:()Ljava/lang/String;
      79: aload         4
      81: invokevirtual #65                 // Method org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto.getValue:()Ljava/lang/String;
      84: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: goto          33
      93: return

  public synchronized org.apache.hadoop.yarn.api.records.ExecutionType getExecutionType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #67,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.hasExecutionType:()Z
      25: ifne          32
      28: getstatic     #68                 // Field org/apache/hadoop/yarn/api/records/ExecutionType.GUARANTEED:Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      31: areturn
      32: aload_0
      33: aload_1
      34: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getExecutionType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
      39: invokespecial #70                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/api/records/ExecutionType;
      42: areturn

  public synchronized void setExecutionType(org.apache.hadoop.yarn.api.records.ExecutionType);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      12: invokevirtual #71                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.clearExecutionType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      21: aload_0
      22: aload_1
      23: invokespecial #72                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ExecutionType;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
      26: invokevirtual #73                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.setExecutionType:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      29: pop
      30: return

  public synchronized org.apache.hadoop.yarn.api.records.ContainerState getState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #74,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.hasState:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_0
      31: aload_1
      32: invokeinterface #75,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getState:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStateProto;
      37: invokespecial #76                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStateProto;)Lorg/apache/hadoop/yarn/api/records/ContainerState;
      40: areturn

  public synchronized void setState(org.apache.hadoop.yarn.api.records.ContainerState);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      12: invokevirtual #77                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.clearState:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      21: aload_0
      22: aload_1
      23: invokespecial #78                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerState;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStateProto;
      26: invokevirtual #79                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.setState:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStateProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      29: pop
      30: return

  public synchronized org.apache.hadoop.yarn.api.records.ContainerSubState getContainerSubState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #80,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.hasContainerSubState:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #81,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getContainerSubState:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerSubStateProto;
      36: invokestatic  #82                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerSubStateProto;)Lorg/apache/hadoop/yarn/api/records/ContainerSubState;
      39: areturn

  public synchronized void setContainerSubState(org.apache.hadoop.yarn.api.records.ContainerSubState);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      12: invokevirtual #83                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.clearContainerSubState:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      21: aload_1
      22: invokestatic  #84                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerSubState;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerSubStateProto;
      25: invokevirtual #85                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.setContainerSubState:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerSubStateProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      28: pop
      29: return

  public synchronized org.apache.hadoop.yarn.api.records.ContainerId getContainerId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      23: ifnull        31
      26: aload_0
      27: getfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      30: areturn
      31: aload_1
      32: invokeinterface #86,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.hasContainerId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getContainerId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      50: invokespecial #88                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl;
      53: putfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      56: aload_0
      57: getfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      60: areturn

  public synchronized void setContainerId(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      12: invokevirtual #89                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.clearContainerId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #7                  // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      21: return

  public synchronized int getExitStatus();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #90,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getExitStatus:()I
      25: ireturn

  public synchronized void setExitStatus(int);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
       8: iload_1
       9: invokevirtual #91                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.setExitStatus:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      12: pop
      13: return

  public synchronized java.lang.String getDiagnostics();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #92,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getDiagnostics:()Ljava/lang/String;
      25: areturn

  public synchronized void setDiagnostics(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
       8: aload_1
       9: invokevirtual #93                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.setDiagnostics:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      12: pop
      13: return

  public synchronized org.apache.hadoop.yarn.api.records.Resource getCapability();
    Code:
       0: aload_0
       1: getfield      #6                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #4                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto;
      11: goto          18
      14: aload_0
      15: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #94,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.hasCapability:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_0
      31: aload_1
      32: invokeinterface #95,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProtoOrBuilder.getCapability:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      37: invokespecial #96                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      40: areturn

  public synchronized void setCapability(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      12: invokevirtual #97                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.clearCapability:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #5                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      21: aload_0
      22: aload_1
      23: invokespecial #98                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      26: invokevirtual #99                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder.setCapability:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStatusProto$Builder;
      29: pop
      30: return

  public synchronized java.util.List<java.lang.String> getIPs();
    Code:
       0: aload_0
       1: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
       4: ldc           #100                // String IPS
       6: invokeinterface #64,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      11: ifne          18
      14: aload_0
      15: invokespecial #101                // Method initContainerAttributes:()V
      18: aload_0
      19: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      22: ldc           #100                // String IPS
      24: invokeinterface #102,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #103                // class java/lang/String
      32: astore_1
      33: aload_1
      34: ifnonnull     41
      37: aconst_null
      38: goto          50
      41: aload_1
      42: ldc           #104                // String ,
      44: invokevirtual #105                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      47: invokestatic  #106                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      50: areturn

  public synchronized void setIPs(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     25
       8: aload_0
       9: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      12: ldc           #100                // String IPS
      14: invokeinterface #107,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: invokespecial #50                 // Method addContainerAttributesToProto:()V
      24: return
      25: aload_0
      26: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      29: ldc           #100                // String IPS
      31: ldc           #104                // String ,
      33: aload_1
      34: invokestatic  #108                // Method org/apache/hadoop/util/StringUtils.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
      37: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  public synchronized java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
       4: ldc           #109                // String HOST
       6: invokeinterface #102,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: ifnonnull     18
      14: aload_0
      15: invokespecial #101                // Method initContainerAttributes:()V
      18: aload_0
      19: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      22: ldc           #109                // String HOST
      24: invokeinterface #102,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #103                // class java/lang/String
      32: areturn

  public synchronized void setHost(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     21
       8: aload_0
       9: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      12: ldc           #109                // String HOST
      14: invokeinterface #107,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return
      21: aload_0
      22: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
      25: ldc           #109                // String HOST
      27: aload_1
      28: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: return

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerStateProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerState);
    Code:
       0: aload_1
       1: invokestatic  #110                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerState;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStateProto;
       4: areturn

  private org.apache.hadoop.yarn.api.records.ContainerState convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerStateProto);
    Code:
       0: aload_1
       1: invokestatic  #111                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerStateProto;)Lorg/apache/hadoop/yarn/api/records/ContainerState;
       4: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto);
    Code:
       0: new           #112                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #113                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_1
       1: checkcast     #112                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl
       4: invokevirtual #114                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.ExecutionType convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ExecutionTypeProto);
    Code:
       0: aload_1
       1: invokestatic  #115                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;)Lorg/apache/hadoop/yarn/api/records/ExecutionType;
       4: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ExecutionTypeProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ExecutionType);
    Code:
       0: aload_1
       1: invokestatic  #116                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ExecutionType;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ExecutionTypeProto;
       4: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_1
       1: invokestatic  #117                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
       4: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourcePBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto);
    Code:
       0: new           #118                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl
       3: dup
       4: aload_1
       5: invokespecial #119                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)V
       8: areturn

  static java.util.Map access$000(org.apache.hadoop.yarn.api.records.impl.pb.ContainerStatusPBImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field containerAttributes:Ljava/util/Map;
       4: areturn
}
