Compiled from "URLPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.URLPBImpl extends org.apache.hadoop.yarn.api.records.URL {
  org.apache.hadoop.yarn.proto.YarnProtos$URLProto proto;

  org.apache.hadoop.yarn.proto.YarnProtos$URLProto$Builder builder;

  boolean viaProto;

  public org.apache.hadoop.yarn.api.records.impl.pb.URLPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/URL."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: invokestatic  #6                  // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      25: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      28: return

  public org.apache.hadoop.yarn.api.records.impl.pb.URLPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$URLProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/URL."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aload_1
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  public org.apache.hadoop.yarn.proto.YarnProtos$URLProto getProto();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field viaProto:Z
       5: ifeq          15
       8: aload_0
       9: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      12: goto          22
      15: aload_0
      16: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      19: invokevirtual #7                  // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      22: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      25: aload_0
      26: iconst_1
      27: putfield      #5                  // Field viaProto:Z
      30: aload_0
      31: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      34: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
       4: invokevirtual #9                  // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #11                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #8                  // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      24: aload_0
      25: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #12                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #13                 // class org/apache/hadoop/yarn/api/records/impl/pb/URLPBImpl
      35: invokevirtual #8                  // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      38: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
       4: invokestatic  #15                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      19: invokestatic  #16                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  public java.lang.String getFile();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #17,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.hasFile:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.getFile:()Ljava/lang/String;
      36: areturn

  public void setFile(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      12: invokevirtual #20                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.clearFile:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      21: aload_1
      22: invokevirtual #21                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.setFile:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      25: pop
      26: return

  public java.lang.String getScheme();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.hasScheme:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.getScheme:()Ljava/lang/String;
      36: areturn

  public void setScheme(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      12: invokevirtual #24                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.clearScheme:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      21: aload_1
      22: invokevirtual #25                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.setScheme:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      25: pop
      26: return

  public java.lang.String getUserInfo();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.hasUserInfo:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.getUserInfo:()Ljava/lang/String;
      36: areturn

  public void setUserInfo(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      12: invokevirtual #28                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.clearUserInfo:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      21: aload_1
      22: invokevirtual #29                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.setUserInfo:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      25: pop
      26: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.hasHost:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.getHost:()Ljava/lang/String;
      36: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      12: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.clearHost:()Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      21: aload_1
      22: invokevirtual #33                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.setHost:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      25: pop
      26: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #34,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$URLProtoOrBuilder.getPort:()I
      25: ireturn

  public void setPort(int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
       8: iload_1
       9: invokevirtual #35                 // Method org/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder.setPort:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$URLProto$Builder;
      12: pop
      13: return
}
