Compiled from "WindowsBasedProcessTree.java"
public class org.apache.hadoop.yarn.util.WindowsBasedProcessTree extends org.apache.hadoop.yarn.util.ResourceCalculatorProcessTree {
  static final org.apache.commons.logging.Log LOG;

  private java.lang.String taskProcessId;

  private long cpuTimeMs;

  private java.util.Map<java.lang.String, org.apache.hadoop.yarn.util.WindowsBasedProcessTree$ProcessInfo> processTree;

  private final org.apache.hadoop.util.CpuTimeTracker cpuTimeTracker;

  private org.apache.hadoop.yarn.util.Clock clock;

  public static boolean isAvailable();
    Code:
       0: getstatic     #1                  // Field org/apache/hadoop/util/Shell.WINDOWS:Z
       3: ifeq          123
       6: invokestatic  #2                  // Method org/apache/hadoop/util/Shell.hasWinutilsPath:()Z
       9: ifne          14
      12: iconst_0
      13: ireturn
      14: new           #3                  // class org/apache/hadoop/util/Shell$ShellCommandExecutor
      17: dup
      18: iconst_2
      19: anewarray     #4                  // class java/lang/String
      22: dup
      23: iconst_0
      24: invokestatic  #5                  // Method org/apache/hadoop/util/Shell.getWinUtilsPath:()Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_1
      30: ldc           #6                  // String help
      32: aastore
      33: invokespecial #7                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor."<init>":([Ljava/lang/String;)V
      36: astore_0
      37: aload_0
      38: invokevirtual #8                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.execute:()V
      41: aload_0
      42: invokevirtual #9                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getOutput:()Ljava/lang/String;
      45: astore_1
      46: aload_1
      47: ifnull        61
      50: aload_1
      51: ldc           #10                 // String Prints to stdout a list of processes in the task
      53: invokevirtual #11                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      56: ifeq          61
      59: iconst_1
      60: ireturn
      61: goto          123
      64: astore_1
      65: getstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
      68: aload_1
      69: invokestatic  #14                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      72: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      77: aload_0
      78: invokevirtual #9                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getOutput:()Ljava/lang/String;
      81: astore_1
      82: aload_1
      83: ifnull        97
      86: aload_1
      87: ldc           #10                 // String Prints to stdout a list of processes in the task
      89: invokevirtual #11                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      92: ifeq          97
      95: iconst_1
      96: ireturn
      97: goto          123
     100: astore_2
     101: aload_0
     102: invokevirtual #9                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getOutput:()Ljava/lang/String;
     105: astore_3
     106: aload_3
     107: ifnull        121
     110: aload_3
     111: ldc           #10                 // String Prints to stdout a list of processes in the task
     113: invokevirtual #11                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     116: ifeq          121
     119: iconst_1
     120: ireturn
     121: aload_2
     122: athrow
     123: iconst_0
     124: ireturn
    Exception table:
       from    to  target type
          37    41    64   Class java/io/IOException
          37    41   100   any
          64    77   100   any

  public org.apache.hadoop.yarn.util.WindowsBasedProcessTree(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method org/apache/hadoop/yarn/util/SystemClock.getInstance:()Lorg/apache/hadoop/yarn/util/SystemClock;
       5: invokespecial #17                 // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/yarn/util/Clock;)V
       8: return

  public org.apache.hadoop.yarn.util.WindowsBasedProcessTree(java.lang.String, org.apache.hadoop.yarn.util.Clock);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aconst_null
       7: putfield      #19                 // Field taskProcessId:Ljava/lang/String;
      10: aload_0
      11: ldc2_w        #21                 // long -1l
      14: putfield      #23                 // Field cpuTimeMs:J
      17: aload_0
      18: new           #24                 // class java/util/HashMap
      21: dup
      22: invokespecial #25                 // Method java/util/HashMap."<init>":()V
      25: putfield      #26                 // Field processTree:Ljava/util/Map;
      28: aload_0
      29: aload_1
      30: putfield      #19                 // Field taskProcessId:Ljava/lang/String;
      33: aload_0
      34: aload_2
      35: putfield      #27                 // Field clock:Lorg/apache/hadoop/yarn/util/Clock;
      38: aload_0
      39: new           #28                 // class org/apache/hadoop/util/CpuTimeTracker
      42: dup
      43: lconst_1
      44: invokespecial #29                 // Method org/apache/hadoop/util/CpuTimeTracker."<init>":(J)V
      47: putfield      #30                 // Field cpuTimeTracker:Lorg/apache/hadoop/util/CpuTimeTracker;
      50: return

  java.lang.String getAllProcessInfoFromShell();
    Code:
       0: new           #3                  // class org/apache/hadoop/util/Shell$ShellCommandExecutor
       3: dup
       4: iconst_4
       5: anewarray     #4                  // class java/lang/String
       8: dup
       9: iconst_0
      10: invokestatic  #31                 // Method org/apache/hadoop/util/Shell.getWinUtilsFile:()Ljava/io/File;
      13: invokevirtual #32                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #33                 // String task
      21: aastore
      22: dup
      23: iconst_2
      24: ldc           #34                 // String processList
      26: aastore
      27: dup
      28: iconst_3
      29: aload_0
      30: getfield      #19                 // Field taskProcessId:Ljava/lang/String;
      33: aastore
      34: invokespecial #7                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor."<init>":([Ljava/lang/String;)V
      37: astore_1
      38: aload_1
      39: invokevirtual #8                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.execute:()V
      42: aload_1
      43: invokevirtual #9                  // Method org/apache/hadoop/util/Shell$ShellCommandExecutor.getOutput:()Ljava/lang/String;
      46: areturn
      47: astore_1
      48: getstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
      51: aload_1
      52: invokestatic  #14                 // Method org/apache/hadoop/util/StringUtils.stringifyException:(Ljava/lang/Throwable;)Ljava/lang/String;
      55: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      60: aconst_null
      61: areturn
    Exception table:
       from    to  target type
           0    46    47   Class java/io/IOException

  java.util.Map<java.lang.String, org.apache.hadoop.yarn.util.WindowsBasedProcessTree$ProcessInfo> createProcessInfo(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #35                 // String \r\n
       3: invokevirtual #36                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: new           #24                 // class java/util/HashMap
      10: dup
      11: invokespecial #25                 // Method java/util/HashMap."<init>":()V
      14: astore_3
      15: iconst_4
      16: istore        4
      18: aload_2
      19: astore        5
      21: aload         5
      23: arraylength
      24: istore        6
      26: iconst_0
      27: istore        7
      29: iload         7
      31: iload         6
      33: if_icmpge     203
      36: aload         5
      38: iload         7
      40: aaload
      41: astore        8
      43: aload         8
      45: ifnull        197
      48: aload         8
      50: ldc           #37                 // String ,
      52: invokevirtual #36                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      55: astore        9
      57: aload         9
      59: arraylength
      60: iconst_4
      61: if_icmpne     168
      64: new           #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      67: dup
      68: invokespecial #39                 // Method org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo."<init>":()V
      71: astore        10
      73: aload         10
      75: aload         9
      77: iconst_0
      78: aaload
      79: putfield      #40                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.pid:Ljava/lang/String;
      82: aload         10
      84: aload         9
      86: iconst_1
      87: aaload
      88: invokestatic  #41                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      91: putfield      #42                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.vmem:J
      94: aload         10
      96: aload         9
      98: iconst_2
      99: aaload
     100: invokestatic  #41                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     103: putfield      #43                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.workingSet:J
     106: aload         10
     108: aload         9
     110: iconst_3
     111: aaload
     112: invokestatic  #41                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     115: putfield      #44                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMs:J
     118: aload_3
     119: aload         10
     121: getfield      #40                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.pid:Ljava/lang/String;
     124: aload         10
     126: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: goto          197
     135: astore        10
     137: getstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
     140: new           #47                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #49                 // String Error parsing procInfo.
     149: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload         10
     154: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     157: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     165: goto          197
     168: getstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
     171: new           #47                 // class java/lang/StringBuilder
     174: dup
     175: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     178: ldc           #54                 // String Expected split length of proc info to be 4. Got
     180: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: aload         9
     185: arraylength
     186: invokevirtual #55                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     189: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     197: iinc          7, 1
     200: goto          29
     203: aload_3
     204: areturn
    Exception table:
       from    to  target type
          64   132   135   Class java/lang/NumberFormatException

  public void updateProcessTree();
    Code:
       0: aload_0
       1: getfield      #19                 // Field taskProcessId:Ljava/lang/String;
       4: ifnull        179
       7: aload_0
       8: invokevirtual #56                 // Method getAllProcessInfoFromShell:()Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: ifnull        170
      16: aload_1
      17: invokevirtual #57                 // Method java/lang/String.length:()I
      20: ifle          170
      23: aload_0
      24: aload_1
      25: invokevirtual #58                 // Method createProcessInfo:(Ljava/lang/String;)Ljava/util/Map;
      28: astore_2
      29: aload_2
      30: invokeinterface #59,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      35: invokeinterface #60,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          153
      50: aload_3
      51: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #63                 // class java/util/Map$Entry
      59: astore        4
      61: aload         4
      63: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      68: checkcast     #4                  // class java/lang/String
      71: astore        5
      73: aload         4
      75: invokeinterface #65,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      80: checkcast     #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      83: astore        6
      85: aload_0
      86: getfield      #26                 // Field processTree:Ljava/util/Map;
      89: aload         5
      91: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      96: checkcast     #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      99: astore        7
     101: aload         7
     103: ifnull        140
     106: aload         6
     108: dup
     109: getfield      #67                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.age:I
     112: aload         7
     114: getfield      #67                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.age:I
     117: iadd
     118: putfield      #67                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.age:I
     121: aload         6
     123: aload         6
     125: getfield      #44                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMs:J
     128: aload         7
     130: getfield      #44                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMs:J
     133: lsub
     134: putfield      #68                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMsDelta:J
     137: goto          150
     140: aload         6
     142: aload         6
     144: getfield      #44                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMs:J
     147: putfield      #68                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMsDelta:J
     150: goto          41
     153: aload_0
     154: getfield      #26                 // Field processTree:Ljava/util/Map;
     157: invokeinterface #69,  1           // InterfaceMethod java/util/Map.clear:()V
     162: aload_0
     163: aload_2
     164: putfield      #26                 // Field processTree:Ljava/util/Map;
     167: goto          179
     170: aload_0
     171: getfield      #26                 // Field processTree:Ljava/util/Map;
     174: invokeinterface #69,  1           // InterfaceMethod java/util/Map.clear:()V
     179: return

  public boolean checkPidPgrpidForMatch();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getProcessTreeDump();
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #70                 // String \t|- PID CPU_TIME(MILLIS) VMEM(BYTES) WORKING_SET(BYTES)%n
      11: iconst_0
      12: anewarray     #71                 // class java/lang/Object
      15: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      18: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: getfield      #26                 // Field processTree:Ljava/util/Map;
      26: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      31: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      36: astore_2
      37: aload_2
      38: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          114
      46: aload_2
      47: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      55: astore_3
      56: aload_3
      57: ifnull        111
      60: aload_1
      61: ldc           #75                 // String \t|- %s %d %d %d%n
      63: iconst_4
      64: anewarray     #71                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_3
      70: getfield      #40                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.pid:Ljava/lang/String;
      73: aastore
      74: dup
      75: iconst_1
      76: aload_3
      77: getfield      #44                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMs:J
      80: invokestatic  #76                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      83: aastore
      84: dup
      85: iconst_2
      86: aload_3
      87: getfield      #42                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.vmem:J
      90: invokestatic  #76                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      93: aastore
      94: dup
      95: iconst_3
      96: aload_3
      97: getfield      #43                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.workingSet:J
     100: invokestatic  #76                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     103: aastore
     104: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     107: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: pop
     111: goto          37
     114: aload_1
     115: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: areturn

  public long getVirtualMemorySize(int);
    Code:
       0: ldc2_w        #21                 // long -1l
       3: lstore_2
       4: aload_0
       5: getfield      #26                 // Field processTree:Ljava/util/Map;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          77
      30: aload         4
      32: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      40: astore        5
      42: aload         5
      44: ifnull        74
      47: lload_2
      48: ldc2_w        #21                 // long -1l
      51: lcmp
      52: ifne          57
      55: lconst_0
      56: lstore_2
      57: aload         5
      59: getfield      #67                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.age:I
      62: iload_1
      63: if_icmple     74
      66: lload_2
      67: aload         5
      69: getfield      #42                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.vmem:J
      72: ladd
      73: lstore_2
      74: goto          20
      77: lload_2
      78: lreturn

  public long getRssMemorySize(int);
    Code:
       0: ldc2_w        #21                 // long -1l
       3: lstore_2
       4: aload_0
       5: getfield      #26                 // Field processTree:Ljava/util/Map;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          77
      30: aload         4
      32: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      40: astore        5
      42: aload         5
      44: ifnull        74
      47: lload_2
      48: ldc2_w        #21                 // long -1l
      51: lcmp
      52: ifne          57
      55: lconst_0
      56: lstore_2
      57: aload         5
      59: getfield      #67                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.age:I
      62: iload_1
      63: if_icmple     74
      66: lload_2
      67: aload         5
      69: getfield      #43                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.workingSet:J
      72: ladd
      73: lstore_2
      74: goto          20
      77: lload_2
      78: lreturn

  public long getCumulativeCpuTime();
    Code:
       0: aload_0
       1: getfield      #26                 // Field processTree:Ljava/util/Map;
       4: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          66
      24: aload_1
      25: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      33: astore_2
      34: aload_0
      35: getfield      #23                 // Field cpuTimeMs:J
      38: ldc2_w        #21                 // long -1l
      41: lcmp
      42: ifne          50
      45: aload_0
      46: lconst_0
      47: putfield      #23                 // Field cpuTimeMs:J
      50: aload_0
      51: dup
      52: getfield      #23                 // Field cpuTimeMs:J
      55: aload_2
      56: getfield      #68                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMsDelta:J
      59: ladd
      60: putfield      #23                 // Field cpuTimeMs:J
      63: goto          15
      66: aload_0
      67: getfield      #23                 // Field cpuTimeMs:J
      70: lreturn

  private java.math.BigInteger getTotalProcessMs();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #26                 // Field processTree:Ljava/util/Map;
       6: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          53
      26: aload_3
      27: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #38                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo
      35: astore        4
      37: aload         4
      39: ifnull        50
      42: lload_1
      43: aload         4
      45: getfield      #44                 // Field org/apache/hadoop/yarn/util/WindowsBasedProcessTree$ProcessInfo.cpuTimeMs:J
      48: ladd
      49: lstore_1
      50: goto          17
      53: lload_1
      54: invokestatic  #77                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      57: areturn

  public float getCpuUsagePercent();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method getTotalProcessMs:()Ljava/math/BigInteger;
       4: astore_1
       5: aload_0
       6: getfield      #30                 // Field cpuTimeTracker:Lorg/apache/hadoop/util/CpuTimeTracker;
       9: aload_1
      10: aload_0
      11: getfield      #27                 // Field clock:Lorg/apache/hadoop/yarn/util/Clock;
      14: invokeinterface #79,  1           // InterfaceMethod org/apache/hadoop/yarn/util/Clock.getTime:()J
      19: invokevirtual #80                 // Method org/apache/hadoop/util/CpuTimeTracker.updateElapsedJiffies:(Ljava/math/BigInteger;J)V
      22: aload_0
      23: getfield      #30                 // Field cpuTimeTracker:Lorg/apache/hadoop/util/CpuTimeTracker;
      26: invokevirtual #81                 // Method org/apache/hadoop/util/CpuTimeTracker.getCpuTrackerUsagePercent:()F
      29: freturn

  static {};
    Code:
       0: ldc           #82                 // class org/apache/hadoop/yarn/util/WindowsBasedProcessTree
       2: invokestatic  #83                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #13                 // Field LOG:Lorg/apache/commons/logging/Log;
       8: return
}
