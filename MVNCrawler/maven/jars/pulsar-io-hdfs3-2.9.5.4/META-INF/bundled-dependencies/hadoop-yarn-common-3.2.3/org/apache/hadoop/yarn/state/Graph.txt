Compiled from "Graph.java"
public class org.apache.hadoop.yarn.state.Graph {
  private java.lang.String name;

  private org.apache.hadoop.yarn.state.Graph parent;

  private java.util.Set<org.apache.hadoop.yarn.state.Graph$Node> nodes;

  private java.util.Set<org.apache.hadoop.yarn.state.Graph> subgraphs;

  public org.apache.hadoop.yarn.state.Graph(java.lang.String, org.apache.hadoop.yarn.state.Graph);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashSet
       8: dup
       9: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      12: putfield      #5                  // Field nodes:Ljava/util/Set;
      15: aload_0
      16: new           #3                  // class java/util/HashSet
      19: dup
      20: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      23: putfield      #6                  // Field subgraphs:Ljava/util/Set;
      26: aload_0
      27: aload_1
      28: putfield      #1                  // Field name:Ljava/lang/String;
      31: aload_0
      32: aload_2
      33: putfield      #7                  // Field parent:Lorg/apache/hadoop/yarn/state/Graph;
      36: return

  public org.apache.hadoop.yarn.state.Graph(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/yarn/state/Graph;)V
       6: return

  public org.apache.hadoop.yarn.state.Graph();
    Code:
       0: aload_0
       1: ldc           #9                  // String graph
       3: aconst_null
       4: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/yarn/state/Graph;)V
       7: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.yarn.state.Graph getParent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field parent:Lorg/apache/hadoop/yarn/state/Graph;
       4: areturn

  private org.apache.hadoop.yarn.state.Graph$Node newNode(java.lang.String);
    Code:
       0: new           #10                 // class org/apache/hadoop/yarn/state/Graph$Node
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method org/apache/hadoop/yarn/state/Graph$Node."<init>":(Lorg/apache/hadoop/yarn/state/Graph;Ljava/lang/String;)V
       9: astore_2
      10: aload_0
      11: getfield      #5                  // Field nodes:Ljava/util/Set;
      14: aload_2
      15: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_2
      22: areturn

  public org.apache.hadoop.yarn.state.Graph$Node getNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nodes:Ljava/util/Set;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class org/apache/hadoop/yarn/state/Graph$Node
      28: astore_3
      29: aload_3
      30: getfield      #16                 // Field org/apache/hadoop/yarn/state/Graph$Node.id:Ljava/lang/String;
      33: aload_1
      34: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: aload_0
      46: aload_1
      47: invokespecial #18                 // Method newNode:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/state/Graph$Node;
      50: areturn

  public org.apache.hadoop.yarn.state.Graph newSubGraph(java.lang.String);
    Code:
       0: new           #19                 // class org/apache/hadoop/yarn/state/Graph
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/yarn/state/Graph;)V
       9: astore_2
      10: aload_0
      11: getfield      #6                  // Field subgraphs:Ljava/util/Set;
      14: aload_2
      15: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_2
      22: areturn

  public void addSubGraph(org.apache.hadoop.yarn.state.Graph);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subgraphs:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: putfield      #7                  // Field parent:Lorg/apache/hadoop/yarn/state/Graph;
      16: return

  private static java.lang.String wrapSafeString(java.lang.String);
    Code:
       0: aload_0
       1: bipush        44
       3: invokevirtual #20                 // Method java/lang/String.indexOf:(I)I
       6: iflt          27
       9: aload_0
      10: invokevirtual #21                 // Method java/lang/String.length:()I
      13: bipush        14
      15: if_icmple     27
      18: aload_0
      19: ldc           #22                 // String ,
      21: ldc           #23                 // String ,\n
      23: invokevirtual #24                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      26: astore_0
      27: new           #25                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #27                 // String \"
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokestatic  #29                 // Method org/apache/commons/text/StringEscapeUtils.escapeJava:(Ljava/lang/String;)Ljava/lang/String;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #27                 // String \"
      48: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: astore_0
      55: aload_0
      56: areturn

  public java.lang.String generateGraphViz(java.lang.String);
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #7                  // Field parent:Lorg/apache/hadoop/yarn/state/Graph;
      12: ifnonnull     88
      15: aload_2
      16: new           #25                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #31                 // String digraph
      25: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #1                  // Field name:Ljava/lang/String;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #32                 // String  {\n
      37: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_2
      48: ldc           #33                 // String graph [ label=%s, fontsize=24, fontname=Helvetica];%n
      50: iconst_1
      51: anewarray     #34                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_0
      57: getfield      #1                  // Field name:Ljava/lang/String;
      60: invokestatic  #35                 // Method wrapSafeString:(Ljava/lang/String;)Ljava/lang/String;
      63: aastore
      64: invokestatic  #36                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      67: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_2
      72: ldc           #37                 // String node [fontsize=12, fontname=Helvetica];\n
      74: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: aload_2
      79: ldc           #38                 // String edge [fontsize=9, fontcolor=blue, fontname=Arial];\n
      81: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: pop
      85: goto          132
      88: aload_2
      89: new           #25                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #39                 // String subgraph cluster_
      98: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: getfield      #1                  // Field name:Ljava/lang/String;
     105: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #40                 // String  {\nlabel=\"
     110: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: getfield      #1                  // Field name:Ljava/lang/String;
     117: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #41                 // String \"\n
     122: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: getfield      #6                  // Field subgraphs:Ljava/util/Set;
     136: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     141: astore_3
     142: aload_3
     143: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     148: ifeq          205
     151: aload_3
     152: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     157: checkcast     #19                 // class org/apache/hadoop/yarn/state/Graph
     160: astore        4
     162: aload         4
     164: new           #25                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     171: aload_1
     172: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: ldc           #42                 // String
     177: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     183: invokevirtual #43                 // Method generateGraphViz:(Ljava/lang/String;)Ljava/lang/String;
     186: astore        5
     188: aload_2
     189: aload         5
     191: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: pop
     195: aload_2
     196: ldc           #44                 // String \n
     198: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: pop
     202: goto          142
     205: aload_0
     206: getfield      #5                  // Field nodes:Ljava/util/Set;
     209: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     214: astore_3
     215: aload_3
     216: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     221: ifeq          376
     224: aload_3
     225: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #10                 // class org/apache/hadoop/yarn/state/Graph$Node
     233: astore        4
     235: aload_2
     236: ldc           #45                 // String %s%s [ label = %s ];%n
     238: iconst_3
     239: anewarray     #34                 // class java/lang/Object
     242: dup
     243: iconst_0
     244: aload_1
     245: aastore
     246: dup
     247: iconst_1
     248: aload         4
     250: invokevirtual #46                 // Method org/apache/hadoop/yarn/state/Graph$Node.getUniqueId:()Ljava/lang/String;
     253: invokestatic  #35                 // Method wrapSafeString:(Ljava/lang/String;)Ljava/lang/String;
     256: aastore
     257: dup
     258: iconst_2
     259: aload         4
     261: getfield      #16                 // Field org/apache/hadoop/yarn/state/Graph$Node.id:Ljava/lang/String;
     264: aastore
     265: invokestatic  #36                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     268: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: pop
     272: aload         4
     274: getfield      #47                 // Field org/apache/hadoop/yarn/state/Graph$Node.outs:Ljava/util/List;
     277: invokestatic  #48                 // Method combineEdges:(Ljava/util/List;)Ljava/util/List;
     280: astore        5
     282: aload         5
     284: invokeinterface #49,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     289: astore        6
     291: aload         6
     293: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     298: ifeq          373
     301: aload         6
     303: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     308: checkcast     #50                 // class org/apache/hadoop/yarn/state/Graph$Edge
     311: astore        7
     313: aload_2
     314: ldc           #51                 // String %s%s -> %s [ label = %s ];%n
     316: iconst_4
     317: anewarray     #34                 // class java/lang/Object
     320: dup
     321: iconst_0
     322: aload_1
     323: aastore
     324: dup
     325: iconst_1
     326: aload         7
     328: getfield      #52                 // Field org/apache/hadoop/yarn/state/Graph$Edge.from:Lorg/apache/hadoop/yarn/state/Graph$Node;
     331: invokevirtual #46                 // Method org/apache/hadoop/yarn/state/Graph$Node.getUniqueId:()Ljava/lang/String;
     334: invokestatic  #35                 // Method wrapSafeString:(Ljava/lang/String;)Ljava/lang/String;
     337: aastore
     338: dup
     339: iconst_2
     340: aload         7
     342: getfield      #53                 // Field org/apache/hadoop/yarn/state/Graph$Edge.to:Lorg/apache/hadoop/yarn/state/Graph$Node;
     345: invokevirtual #46                 // Method org/apache/hadoop/yarn/state/Graph$Node.getUniqueId:()Ljava/lang/String;
     348: invokestatic  #35                 // Method wrapSafeString:(Ljava/lang/String;)Ljava/lang/String;
     351: aastore
     352: dup
     353: iconst_3
     354: aload         7
     356: getfield      #54                 // Field org/apache/hadoop/yarn/state/Graph$Edge.label:Ljava/lang/String;
     359: invokestatic  #35                 // Method wrapSafeString:(Ljava/lang/String;)Ljava/lang/String;
     362: aastore
     363: invokestatic  #36                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     366: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     369: pop
     370: goto          291
     373: goto          215
     376: aload_2
     377: ldc           #55                 // String }\n
     379: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     382: pop
     383: aload_2
     384: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     387: areturn

  public java.lang.String generateGraphViz();
    Code:
       0: aload_0
       1: ldc           #56                 // String
       3: invokevirtual #43                 // Method generateGraphViz:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void save(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #57                 // class java/io/OutputStreamWriter
       3: dup
       4: new           #58                 // class java/io/FileOutputStream
       7: dup
       8: aload_1
       9: invokespecial #59                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;)V
      12: ldc           #60                 // String UTF-8
      14: invokestatic  #61                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      17: invokespecial #62                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      20: astore_2
      21: aconst_null
      22: astore_3
      23: aload_2
      24: aload_0
      25: invokevirtual #63                 // Method generateGraphViz:()Ljava/lang/String;
      28: invokevirtual #64                 // Method java/io/OutputStreamWriter.write:(Ljava/lang/String;)V
      31: aload_2
      32: ifnull        107
      35: aload_3
      36: ifnull        57
      39: aload_2
      40: invokevirtual #65                 // Method java/io/OutputStreamWriter.close:()V
      43: goto          107
      46: astore        4
      48: aload_3
      49: aload         4
      51: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      54: goto          107
      57: aload_2
      58: invokevirtual #65                 // Method java/io/OutputStreamWriter.close:()V
      61: goto          107
      64: astore        4
      66: aload         4
      68: astore_3
      69: aload         4
      71: athrow
      72: astore        5
      74: aload_2
      75: ifnull        104
      78: aload_3
      79: ifnull        100
      82: aload_2
      83: invokevirtual #65                 // Method java/io/OutputStreamWriter.close:()V
      86: goto          104
      89: astore        6
      91: aload_3
      92: aload         6
      94: invokevirtual #67                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      97: goto          104
     100: aload_2
     101: invokevirtual #65                 // Method java/io/OutputStreamWriter.close:()V
     104: aload         5
     106: athrow
     107: return
    Exception table:
       from    to  target type
          39    43    46   Class java/lang/Throwable
          23    31    64   Class java/lang/Throwable
          23    31    72   any
          82    86    89   Class java/lang/Throwable
          64    74    72   any

  public static java.util.List<org.apache.hadoop.yarn.state.Graph$Edge> combineEdges(java.util.List<org.apache.hadoop.yarn.state.Graph$Edge>);
    Code:
       0: new           #68                 // class java/util/ArrayList
       3: dup
       4: invokespecial #69                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #49,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          116
      24: aload_2
      25: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #50                 // class org/apache/hadoop/yarn/state/Graph$Edge
      33: astore_3
      34: iconst_0
      35: istore        4
      37: iconst_0
      38: istore        5
      40: iload         5
      42: aload_1
      43: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I
      48: if_icmpge     100
      51: aload_1
      52: iload         5
      54: invokeinterface #71,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      59: checkcast     #50                 // class org/apache/hadoop/yarn/state/Graph$Edge
      62: astore        6
      64: aload_3
      65: aload         6
      67: invokevirtual #72                 // Method org/apache/hadoop/yarn/state/Graph$Edge.sameAs:(Lorg/apache/hadoop/yarn/state/Graph$Edge;)Z
      70: ifeq          94
      73: aload_1
      74: iload         5
      76: aload         6
      78: aload_3
      79: invokevirtual #73                 // Method org/apache/hadoop/yarn/state/Graph$Edge.combine:(Lorg/apache/hadoop/yarn/state/Graph$Edge;)Lorg/apache/hadoop/yarn/state/Graph$Edge;
      82: invokeinterface #74,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: iconst_1
      89: istore        4
      91: goto          100
      94: iinc          5, 1
      97: goto          40
     100: iload         4
     102: ifne          113
     105: aload_1
     106: aload_3
     107: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          15
     116: aload_1
     117: areturn

  static java.lang.String access$000(org.apache.hadoop.yarn.state.Graph);
    Code:
       0: aload_0
       1: getfield      #1                  // Field name:Ljava/lang/String;
       4: areturn
}
