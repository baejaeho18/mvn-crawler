Compiled from "ContainerLogAppender.java"
public class org.apache.hadoop.yarn.ContainerLogAppender extends org.apache.log4j.FileAppender implements java.io.Flushable {
  private java.lang.String containerLogDir;

  private java.lang.String containerLogFile;

  private int maxEvents;

  private java.util.Deque<org.apache.log4j.spi.LoggingEvent> eventBuffer;

  private boolean closed;

  private static final long EVENT_SIZE;

  public org.apache.hadoop.yarn.ContainerLogAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/log4j/FileAppender."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field closed:Z
       9: return

  public synchronized void activateOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxEvents:I
       4: ifle          18
       7: aload_0
       8: new           #4                  // class java/util/ArrayDeque
      11: dup
      12: invokespecial #5                  // Method java/util/ArrayDeque."<init>":()V
      15: putfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      18: aload_0
      19: new           #7                  // class java/io/File
      22: dup
      23: aload_0
      24: getfield      #8                  // Field containerLogDir:Ljava/lang/String;
      27: aload_0
      28: getfield      #9                  // Field containerLogFile:Ljava/lang/String;
      31: invokespecial #10                 // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      34: invokevirtual #11                 // Method java/io/File.toString:()Ljava/lang/String;
      37: invokevirtual #12                 // Method setFile:(Ljava/lang/String;)V
      40: aload_0
      41: iconst_1
      42: invokevirtual #13                 // Method setAppend:(Z)V
      45: aload_0
      46: invokespecial #14                 // Method org/apache/log4j/FileAppender.activateOptions:()V
      49: return

  public synchronized void append(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      12: ifnull        54
      15: aload_0
      16: getfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      19: invokeinterface #15,  1           // InterfaceMethod java/util/Deque.size:()I
      24: aload_0
      25: getfield      #3                  // Field maxEvents:I
      28: if_icmpne     41
      31: aload_0
      32: getfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      35: invokeinterface #16,  1           // InterfaceMethod java/util/Deque.removeFirst:()Ljava/lang/Object;
      40: pop
      41: aload_0
      42: getfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      45: aload_1
      46: invokeinterface #17,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      51: goto          59
      54: aload_0
      55: aload_1
      56: invokespecial #18                 // Method org/apache/log4j/FileAppender.append:(Lorg/apache/log4j/spi/LoggingEvent;)V
      59: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #19                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
       4: ifnull        14
       7: aload_0
       8: getfield      #19                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      11: invokevirtual #20                 // Method org/apache/log4j/helpers/QuietWriter.flush:()V
      14: return

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifne          65
       7: aload_0
       8: iconst_1
       9: putfield      #2                  // Field closed:Z
      12: aload_0
      13: getfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      16: ifnull        61
      19: aload_0
      20: getfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      23: invokeinterface #21,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      28: astore_1
      29: aload_1
      30: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          56
      38: aload_1
      39: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #24                 // class org/apache/log4j/spi/LoggingEvent
      47: astore_2
      48: aload_0
      49: aload_2
      50: invokespecial #18                 // Method org/apache/log4j/FileAppender.append:(Lorg/apache/log4j/spi/LoggingEvent;)V
      53: goto          29
      56: aload_0
      57: aconst_null
      58: putfield      #6                  // Field eventBuffer:Ljava/util/Deque;
      61: aload_0
      62: invokespecial #25                 // Method org/apache/log4j/FileAppender.close:()V
      65: return

  public java.lang.String getContainerLogDir();
    Code:
       0: aload_0
       1: getfield      #8                  // Field containerLogDir:Ljava/lang/String;
       4: areturn

  public void setContainerLogDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field containerLogDir:Ljava/lang/String;
       5: return

  public java.lang.String getContainerLogFile();
    Code:
       0: aload_0
       1: getfield      #9                  // Field containerLogFile:Ljava/lang/String;
       4: areturn

  public void setContainerLogFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field containerLogFile:Ljava/lang/String;
       5: return

  public long getTotalLogFileSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxEvents:I
       4: i2l
       5: ldc2_w        #27                 // long 100l
       8: lmul
       9: lreturn

  public void setTotalLogFileSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #27                 // long 100l
       5: ldiv
       6: l2i
       7: putfield      #3                  // Field maxEvents:I
      10: return
}
