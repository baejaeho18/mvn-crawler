Compiled from "ApplicationSubmissionContextPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.ApplicationSubmissionContextPBImpl extends org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext {
  org.apache.hadoop.yarn.proto.YarnProtos$ApplicationSubmissionContextProto proto;

  org.apache.hadoop.yarn.proto.YarnProtos$ApplicationSubmissionContextProto$Builder builder;

  boolean viaProto;

  private org.apache.hadoop.yarn.api.records.ApplicationId applicationId;

  private org.apache.hadoop.yarn.api.records.Priority priority;

  private org.apache.hadoop.yarn.api.records.ContainerLaunchContext amContainer;

  private org.apache.hadoop.yarn.api.records.Resource resource;

  private java.util.Set<java.lang.String> applicationTags;

  private java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest> amResourceRequests;

  private org.apache.hadoop.yarn.api.records.LogAggregationContext logAggregationContext;

  private org.apache.hadoop.yarn.api.records.ReservationId reservationId;

  private java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationTimeoutType, java.lang.Long> applicationTimeouts;

  private java.util.Map<java.lang.String, java.lang.String> schedulingProperties;

  public org.apache.hadoop.yarn.api.records.impl.pb.ApplicationSubmissionContextPBImpl();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/yarn/api/records/ApplicationSubmissionContext."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
       8: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      26: aload_0
      27: aconst_null
      28: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      31: aload_0
      32: aconst_null
      33: putfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      36: aload_0
      37: aconst_null
      38: putfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      41: aload_0
      42: aconst_null
      43: putfield      #12                 // Field applicationTags:Ljava/util/Set;
      46: aload_0
      47: aconst_null
      48: putfield      #13                 // Field amResourceRequests:Ljava/util/List;
      51: aload_0
      52: aconst_null
      53: putfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
      56: aload_0
      57: aconst_null
      58: putfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
      61: aload_0
      62: aconst_null
      63: putfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
      66: aload_0
      67: aconst_null
      68: putfield      #1                  // Field schedulingProperties:Ljava/util/Map;
      71: aload_0
      72: invokestatic  #16                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      75: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      78: return

  public org.apache.hadoop.yarn.api.records.impl.pb.ApplicationSubmissionContextPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$ApplicationSubmissionContextProto);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/hadoop/yarn/api/records/ApplicationSubmissionContext."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
       8: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      26: aload_0
      27: aconst_null
      28: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      31: aload_0
      32: aconst_null
      33: putfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      36: aload_0
      37: aconst_null
      38: putfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      41: aload_0
      42: aconst_null
      43: putfield      #12                 // Field applicationTags:Ljava/util/Set;
      46: aload_0
      47: aconst_null
      48: putfield      #13                 // Field amResourceRequests:Ljava/util/List;
      51: aload_0
      52: aconst_null
      53: putfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
      56: aload_0
      57: aconst_null
      58: putfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
      61: aload_0
      62: aconst_null
      63: putfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
      66: aload_0
      67: aconst_null
      68: putfield      #1                  // Field schedulingProperties:Ljava/util/Map;
      71: aload_0
      72: aload_1
      73: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      76: aload_0
      77: iconst_1
      78: putfield      #7                  // Field viaProto:Z
      81: return

  public synchronized org.apache.hadoop.yarn.proto.YarnProtos$ApplicationSubmissionContextProto getProto();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #7                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      16: goto          26
      19: aload_0
      20: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      23: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      26: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field viaProto:Z
      34: aload_0
      35: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      38: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
       4: invokevirtual #20                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #22                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      24: aload_0
      25: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #23                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #24                 // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl
      35: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      38: invokevirtual #25                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
       4: invokestatic  #26                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
       4: ifnull        23
       7: aload_0
       8: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      11: aload_0
      12: aload_0
      13: getfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      16: invokespecial #27                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ApplicationId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;
      19: invokevirtual #28                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setApplicationId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      22: pop
      23: aload_0
      24: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      27: ifnull        46
      30: aload_0
      31: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      34: aload_0
      35: aload_0
      36: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      39: invokespecial #29                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Priority;)Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
      42: invokevirtual #30                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setPriority:(Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      45: pop
      46: aload_0
      47: getfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      50: ifnull        69
      53: aload_0
      54: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      57: aload_0
      58: aload_0
      59: getfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      62: invokespecial #31                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      65: invokevirtual #32                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setAmContainerSpec:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      68: pop
      69: aload_0
      70: getfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      73: ifnull        92
      76: aload_0
      77: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      80: aload_0
      81: aload_0
      82: getfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      85: invokespecial #33                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      88: invokevirtual #34                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setResource:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      91: pop
      92: aload_0
      93: getfield      #12                 // Field applicationTags:Ljava/util/Set;
      96: ifnull        131
      99: aload_0
     100: getfield      #12                 // Field applicationTags:Ljava/util/Set;
     103: invokeinterface #35,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     108: ifne          131
     111: aload_0
     112: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     115: invokevirtual #36                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearApplicationTags:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     118: pop
     119: aload_0
     120: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     123: aload_0
     124: getfield      #12                 // Field applicationTags:Ljava/util/Set;
     127: invokevirtual #37                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.addAllApplicationTags:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     130: pop
     131: aload_0
     132: getfield      #13                 // Field amResourceRequests:Ljava/util/List;
     135: ifnull        162
     138: aload_0
     139: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     142: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearAmContainerResourceRequest:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     145: pop
     146: aload_0
     147: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     150: aload_0
     151: aload_0
     152: getfield      #13                 // Field amResourceRequests:Ljava/util/List;
     155: invokespecial #39                 // Method convertToProtoFormat:(Ljava/util/List;)Ljava/util/List;
     158: invokevirtual #40                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.addAllAmContainerResourceRequest:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     161: pop
     162: aload_0
     163: getfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
     166: ifnull        185
     169: aload_0
     170: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     173: aload_0
     174: aload_0
     175: getfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
     178: invokespecial #41                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;)Lorg/apache/hadoop/yarn/proto/YarnProtos$LogAggregationContextProto;
     181: invokevirtual #42                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setLogAggregationContext:(Lorg/apache/hadoop/yarn/proto/YarnProtos$LogAggregationContextProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     184: pop
     185: aload_0
     186: getfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
     189: ifnull        208
     192: aload_0
     193: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     196: aload_0
     197: aload_0
     198: getfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
     201: invokespecial #43                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ReservationId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ReservationIdProto;
     204: invokevirtual #44                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setReservationId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ReservationIdProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
     207: pop
     208: aload_0
     209: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
     212: ifnull        219
     215: aload_0
     216: invokespecial #45                 // Method addApplicationTimeouts:()V
     219: aload_0
     220: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
     223: ifnull        230
     226: aload_0
     227: invokespecial #46                 // Method addApplicationSchedulingProperties:()V
     230: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #47                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #48                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      20: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      23: putfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      26: aload_0
      27: iconst_1
      28: putfield      #7                  // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      19: invokestatic  #49                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      22: putfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field viaProto:Z
      30: return

  public synchronized org.apache.hadoop.yarn.api.records.Priority getPriority();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      23: ifnull        31
      26: aload_0
      27: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      30: areturn
      31: aload_1
      32: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasPriority:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #51,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getPriority:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
      50: invokespecial #52                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl;
      53: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      56: aload_0
      57: getfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      60: areturn

  public synchronized void setPriority(org.apache.hadoop.yarn.api.records.Priority);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #53                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearPriority:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field priority:Lorg/apache/hadoop/yarn/api/records/Priority;
      21: return

  public synchronized org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      23: ifnull        31
      26: aload_0
      27: getfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      30: areturn
      31: aload_1
      32: invokeinterface #54,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasApplicationId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #55,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getApplicationId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;
      50: invokespecial #56                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl;
      53: putfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      56: aload_0
      57: getfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      60: areturn

  public synchronized void setApplicationId(org.apache.hadoop.yarn.api.records.ApplicationId);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #57                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearApplicationId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      21: return

  public synchronized java.lang.String getApplicationName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #58,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasApplicationName:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #59,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getApplicationName:()Ljava/lang/String;
      36: areturn

  public synchronized void setApplicationName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #60                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearApplicationName:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      21: aload_1
      22: invokevirtual #61                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setApplicationName:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      25: pop
      26: return

  public synchronized java.lang.String getQueue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #62,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasQueue:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #63,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getQueue:()Ljava/lang/String;
      36: areturn

  public synchronized java.lang.String getApplicationType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #64,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasApplicationType:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #65,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getApplicationType:()Ljava/lang/String;
      36: areturn

  private void initApplicationTags();
    Code:
       0: aload_0
       1: getfield      #12                 // Field applicationTags:Ljava/util/Set;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #7                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      26: astore_1
      27: aload_0
      28: new           #66                 // class java/util/HashSet
      31: dup
      32: invokespecial #67                 // Method java/util/HashSet."<init>":()V
      35: putfield      #12                 // Field applicationTags:Ljava/util/Set;
      38: aload_0
      39: getfield      #12                 // Field applicationTags:Ljava/util/Set;
      42: aload_1
      43: invokeinterface #68,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getApplicationTagsList:()Ljava/util/List;
      48: invokeinterface #69,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: return

  public synchronized java.util.Set<java.lang.String> getApplicationTags();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method initApplicationTags:()V
       4: aload_0
       5: getfield      #12                 // Field applicationTags:Ljava/util/Set;
       8: areturn

  public synchronized void setQueue(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #71                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearQueue:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      21: aload_1
      22: invokevirtual #72                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setQueue:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      25: pop
      26: return

  public synchronized void setApplicationType(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #73                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearApplicationType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      21: aload_1
      22: invokevirtual #74                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setApplicationType:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      25: pop
      26: return

  public synchronized void setApplicationTags(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnull        17
       8: aload_1
       9: invokeinterface #35,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      14: ifeq          31
      17: aload_0
      18: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      21: invokevirtual #36                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearApplicationTags:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      24: pop
      25: aload_0
      26: aconst_null
      27: putfield      #12                 // Field applicationTags:Ljava/util/Set;
      30: return
      31: aload_0
      32: new           #66                 // class java/util/HashSet
      35: dup
      36: invokespecial #67                 // Method java/util/HashSet."<init>":()V
      39: putfield      #12                 // Field applicationTags:Ljava/util/Set;
      42: aload_1
      43: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          85
      58: aload_2
      59: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #78                 // class java/lang/String
      67: astore_3
      68: aload_0
      69: getfield      #12                 // Field applicationTags:Ljava/util/Set;
      72: aload_3
      73: invokestatic  #79                 // Method org/apache/hadoop/util/StringUtils.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      76: invokeinterface #80,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          49
      85: return

  public synchronized org.apache.hadoop.yarn.api.records.ContainerLaunchContext getAMContainerSpec();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      23: ifnull        31
      26: aload_0
      27: getfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      30: areturn
      31: aload_1
      32: invokeinterface #81,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasAmContainerSpec:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #82,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getAmContainerSpec:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      50: invokespecial #83                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl;
      53: putfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      56: aload_0
      57: getfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      60: areturn

  public synchronized void setAMContainerSpec(org.apache.hadoop.yarn.api.records.ContainerLaunchContext);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #84                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearAmContainerSpec:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #10                 // Field amContainer:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      21: return

  public synchronized boolean getUnmanagedAM();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getUnmanagedAm:()Z
      25: ireturn

  public synchronized void setUnmanagedAM(boolean);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
       8: iload_1
       9: invokevirtual #86                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setUnmanagedAm:(Z)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: pop
      13: return

  public synchronized boolean getCancelTokensWhenComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getCancelTokensWhenComplete:()Z
      25: ireturn

  public synchronized void setCancelTokensWhenComplete(boolean);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
       8: iload_1
       9: invokevirtual #88                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setCancelTokensWhenComplete:(Z)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: pop
      13: return

  public synchronized int getMaxAppAttempts();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #89,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getMaxAppAttempts:()I
      25: ireturn

  public synchronized void setMaxAppAttempts(int);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
       8: iload_1
       9: invokevirtual #90                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setMaxAppAttempts:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: pop
      13: return

  public synchronized org.apache.hadoop.yarn.api.records.Resource getResource();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      23: ifnull        31
      26: aload_0
      27: getfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      30: areturn
      31: aload_1
      32: invokeinterface #91,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasResource:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #92,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getResource:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
      50: invokespecial #93                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl;
      53: putfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      56: aload_0
      57: getfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      60: areturn

  public synchronized void setResource(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #94                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearResource:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #11                 // Field resource:Lorg/apache/hadoop/yarn/api/records/Resource;
      21: return

  public synchronized org.apache.hadoop.yarn.api.records.ReservationId getReservationID();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
      23: ifnull        31
      26: aload_0
      27: getfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
      30: areturn
      31: aload_1
      32: invokeinterface #95,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasReservationId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #96,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getReservationId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ReservationIdProto;
      50: invokespecial #97                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ReservationIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ReservationIdPBImpl;
      53: putfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
      56: aload_0
      57: getfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
      60: areturn

  public synchronized void setReservationID(org.apache.hadoop.yarn.api.records.ReservationId);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #98                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearReservationId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: aload_1
      19: putfield      #15                 // Field reservationId:Lorg/apache/hadoop/yarn/api/records/ReservationId;
      22: return

  public synchronized void setKeepContainersAcrossApplicationAttempts(boolean);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
       8: iload_1
       9: invokevirtual #99                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setKeepContainersAcrossApplicationAttempts:(Z)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: pop
      13: return

  public synchronized boolean getKeepContainersAcrossApplicationAttempts();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #100,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getKeepContainersAcrossApplicationAttempts:()Z
      25: ireturn

  private org.apache.hadoop.yarn.api.records.impl.pb.PriorityPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$PriorityProto);
    Code:
       0: new           #101                // class org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl
       3: dup
       4: aload_1
       5: invokespecial #102                // Method org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$PriorityProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Priority);
    Code:
       0: aload_1
       1: checkcast     #101                // class org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl
       4: invokevirtual #103                // Method org/apache/hadoop/yarn/api/records/impl/pb/PriorityPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$PriorityProto;
       7: areturn

  private java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest> convertFromProtoFormat(java.util.List<org.apache.hadoop.yarn.proto.YarnProtos$ResourceRequestProto>);
    Code:
       0: new           #104                // class java/util/ArrayList
       3: dup
       4: invokespecial #105                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #106,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          54
      24: aload_3
      25: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #107                // class org/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto
      33: astore        4
      35: aload_2
      36: new           #108                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl
      39: dup
      40: aload         4
      42: invokespecial #109                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto;)V
      45: invokeinterface #110,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          15
      54: aload_2
      55: areturn

  private java.util.List<org.apache.hadoop.yarn.proto.YarnProtos$ResourceRequestProto> convertToProtoFormat(java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest>);
    Code:
       0: new           #104                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #111,  1          // InterfaceMethod java/util/List.size:()I
      10: invokespecial #112                // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #106,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          59
      30: aload_3
      31: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #113                // class org/apache/hadoop/yarn/api/records/ResourceRequest
      39: astore        4
      41: aload_2
      42: aload         4
      44: checkcast     #108                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl
      47: invokevirtual #114                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceRequestProto;
      50: invokeinterface #110,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: goto          21
      59: aload_2
      60: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ApplicationIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ApplicationIdProto);
    Code:
       0: new           #115                // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #116                // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ApplicationIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ApplicationId);
    Code:
       0: aload_1
       1: checkcast     #115                // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl
       4: invokevirtual #117                // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto);
    Code:
       0: new           #118                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl
       3: dup
       4: aload_1
       5: invokespecial #119                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerLaunchContext);
    Code:
       0: aload_1
       1: checkcast     #118                // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl
       4: invokevirtual #120                // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
       7: areturn

  private org.apache.hadoop.yarn.api.records.impl.pb.ResourcePBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto);
    Code:
       0: new           #121                // class org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl
       3: dup
       4: aload_1
       5: invokespecial #122                // Method org/apache/hadoop/yarn/api/records/impl/pb/ResourcePBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.Resource);
    Code:
       0: aload_1
       1: invokestatic  #123                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/Resource;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceProto;
       4: areturn

  public synchronized java.lang.String getNodeLabelExpression();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #124,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasNodeLabelExpression:()Z
      25: ifne          30
      28: aconst_null
      29: areturn
      30: aload_1
      31: invokeinterface #125,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getNodeLabelExpression:()Ljava/lang/String;
      36: areturn

  public synchronized void setNodeLabelExpression(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #126                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearNodeLabelExpression:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      21: aload_1
      22: invokevirtual #127                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setNodeLabelExpression:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      25: pop
      26: return

  public synchronized org.apache.hadoop.yarn.api.records.ResourceRequest getAMContainerResourceRequest();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method getAMContainerResourceRequests:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #129,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      15: ifeq          20
      18: aconst_null
      19: areturn
      20: aload_0
      21: invokevirtual #128                // Method getAMContainerResourceRequests:()Ljava/util/List;
      24: iconst_0
      25: invokeinterface #130,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: checkcast     #113                // class org/apache/hadoop/yarn/api/records/ResourceRequest
      33: areturn

  public synchronized java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest> getAMContainerResourceRequests();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #13                 // Field amResourceRequests:Ljava/util/List;
      23: ifnull        31
      26: aload_0
      27: getfield      #13                 // Field amResourceRequests:Ljava/util/List;
      30: areturn
      31: aload_1
      32: invokeinterface #131,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getAmContainerResourceRequestCount:()I
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #132,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getAmContainerResourceRequestList:()Ljava/util/List;
      50: invokespecial #133                // Method convertFromProtoFormat:(Ljava/util/List;)Ljava/util/List;
      53: putfield      #13                 // Field amResourceRequests:Ljava/util/List;
      56: aload_0
      57: getfield      #13                 // Field amResourceRequests:Ljava/util/List;
      60: areturn

  public synchronized void setAMContainerResourceRequest(org.apache.hadoop.yarn.api.records.ResourceRequest);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearAmContainerResourceRequest:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: invokestatic  #134                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      21: putfield      #13                 // Field amResourceRequests:Ljava/util/List;
      24: return

  public synchronized void setAMContainerResourceRequests(java.util.List<org.apache.hadoop.yarn.api.records.ResourceRequest>);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearAmContainerResourceRequest:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #13                 // Field amResourceRequests:Ljava/util/List;
      21: return

  public synchronized long getAttemptFailuresValidityInterval();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #135,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getAttemptFailuresValidityInterval:()J
      25: lreturn

  public synchronized void setAttemptFailuresValidityInterval(long);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
       8: lload_1
       9: invokevirtual #136                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.setAttemptFailuresValidityInterval:(J)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: pop
      13: return

  private org.apache.hadoop.yarn.api.records.impl.pb.LogAggregationContextPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$LogAggregationContextProto);
    Code:
       0: new           #137                // class org/apache/hadoop/yarn/api/records/impl/pb/LogAggregationContextPBImpl
       3: dup
       4: aload_1
       5: invokespecial #138                // Method org/apache/hadoop/yarn/api/records/impl/pb/LogAggregationContextPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$LogAggregationContextProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$LogAggregationContextProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.LogAggregationContext);
    Code:
       0: aload_1
       1: checkcast     #137                // class org/apache/hadoop/yarn/api/records/impl/pb/LogAggregationContextPBImpl
       4: invokevirtual #139                // Method org/apache/hadoop/yarn/api/records/impl/pb/LogAggregationContextPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$LogAggregationContextProto;
       7: areturn

  public synchronized org.apache.hadoop.yarn.api.records.LogAggregationContext getLogAggregationContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
      23: ifnull        31
      26: aload_0
      27: getfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
      30: areturn
      31: aload_1
      32: invokeinterface #140,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.hasLogAggregationContext:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #141,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getLogAggregationContext:()Lorg/apache/hadoop/yarn/proto/YarnProtos$LogAggregationContextProto;
      50: invokespecial #142                // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$LogAggregationContextProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/LogAggregationContextPBImpl;
      53: putfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
      56: aload_0
      57: getfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
      60: areturn

  public synchronized void setLogAggregationContext(org.apache.hadoop.yarn.api.records.LogAggregationContext);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      12: invokevirtual #143                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearLogAggregationContext:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #14                 // Field logAggregationContext:Lorg/apache/hadoop/yarn/api/records/LogAggregationContext;
      21: return

  private org.apache.hadoop.yarn.api.records.impl.pb.ReservationIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ReservationIdProto);
    Code:
       0: new           #144                // class org/apache/hadoop/yarn/api/records/impl/pb/ReservationIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #145                // Method org/apache/hadoop/yarn/api/records/impl/pb/ReservationIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ReservationIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ReservationIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ReservationId);
    Code:
       0: aload_1
       1: checkcast     #144                // class org/apache/hadoop/yarn/api/records/impl/pb/ReservationIdPBImpl
       4: invokevirtual #146                // Method org/apache/hadoop/yarn/api/records/impl/pb/ReservationIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ReservationIdProto;
       7: areturn

  public synchronized java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationTimeoutType, java.lang.Long> getApplicationTimeouts();
    Code:
       0: aload_0
       1: invokespecial #147                // Method initApplicationTimeout:()V
       4: aload_0
       5: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
       8: areturn

  private void initApplicationTimeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #7                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #148,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getApplicationTimeoutsList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #149                // class java/util/HashMap
      38: dup
      39: aload_2
      40: invokeinterface #111,  1          // InterfaceMethod java/util/List.size:()I
      45: invokespecial #150                // Method java/util/HashMap."<init>":(I)V
      48: putfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
      51: aload_2
      52: invokeinterface #106,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          107
      67: aload_3
      68: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #151                // class org/apache/hadoop/yarn/proto/YarnProtos$ApplicationTimeoutMapProto
      76: astore        4
      78: aload_0
      79: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
      82: aload         4
      84: invokevirtual #152                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationTimeoutMapProto.getApplicationTimeoutType:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationTimeoutTypeProto;
      87: invokestatic  #153                // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationTimeoutTypeProto;)Lorg/apache/hadoop/yarn/api/records/ApplicationTimeoutType;
      90: aload         4
      92: invokevirtual #154                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationTimeoutMapProto.getTimeout:()J
      95: invokestatic  #155                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      98: invokeinterface #156,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          58
     107: return

  public synchronized void setApplicationTimeouts(java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationTimeoutType, java.lang.Long>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #147                // Method initApplicationTimeout:()V
       9: aload_0
      10: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
      13: invokeinterface #157,  1          // InterfaceMethod java/util/Map.clear:()V
      18: aload_0
      19: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #158,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      28: return

  private void addApplicationTimeouts();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
       8: invokevirtual #159                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearApplicationTimeouts:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #160                // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl$1
      23: dup
      24: aload_0
      25: invokespecial #161                // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl$1."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      33: aload_1
      34: invokevirtual #162                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.addAllApplicationTimeouts:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      37: pop
      38: return

  private void addApplicationSchedulingProperties();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
       8: invokevirtual #163                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.clearApplicationSchedulingProperties:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      11: pop
      12: aload_0
      13: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
      16: ifnonnull     20
      19: return
      20: new           #164                // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl$2
      23: dup
      24: aload_0
      25: invokespecial #165                // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl$2."<init>":(Lorg/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl;)V
      28: astore_1
      29: aload_0
      30: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      33: aload_1
      34: invokevirtual #166                // Method org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder.addAllApplicationSchedulingProperties:(Ljava/lang/Iterable;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      37: pop
      38: return

  private void initApplicationSchedulingProperties();
    Code:
       0: aload_0
       1: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #7                  // Field viaProto:Z
      12: ifeq          22
      15: aload_0
      16: getfield      #5                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto;
      19: goto          26
      22: aload_0
      23: getfield      #6                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProto$Builder;
      26: astore_1
      27: aload_1
      28: invokeinterface #167,  1          // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ApplicationSubmissionContextProtoOrBuilder.getApplicationSchedulingPropertiesList:()Ljava/util/List;
      33: astore_2
      34: aload_0
      35: new           #149                // class java/util/HashMap
      38: dup
      39: aload_2
      40: invokeinterface #111,  1          // InterfaceMethod java/util/List.size:()I
      45: invokespecial #150                // Method java/util/HashMap."<init>":(I)V
      48: putfield      #1                  // Field schedulingProperties:Ljava/util/Map;
      51: aload_2
      52: invokeinterface #106,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          101
      67: aload_3
      68: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #168                // class org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto
      76: astore        4
      78: aload_0
      79: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
      82: aload         4
      84: invokevirtual #169                // Method org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto.getKey:()Ljava/lang/String;
      87: aload         4
      89: invokevirtual #170                // Method org/apache/hadoop/yarn/proto/YarnProtos$StringStringMapProto.getValue:()Ljava/lang/String;
      92: invokeinterface #156,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          58
     101: return

  public synchronized java.util.Map<java.lang.String, java.lang.String> getApplicationSchedulingPropertiesMap();
    Code:
       0: aload_0
       1: invokespecial #171                // Method initApplicationSchedulingProperties:()V
       4: aload_0
       5: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
       8: areturn

  public synchronized void setApplicationSchedulingPropertiesMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokespecial #171                // Method initApplicationSchedulingProperties:()V
       9: aload_0
      10: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
      13: invokeinterface #157,  1          // InterfaceMethod java/util/Map.clear:()V
      18: aload_0
      19: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #158,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      28: return

  static java.util.Map access$000(org.apache.hadoop.yarn.api.records.impl.pb.ApplicationSubmissionContextPBImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field applicationTimeouts:Ljava/util/Map;
       4: areturn

  static java.util.Map access$100(org.apache.hadoop.yarn.api.records.impl.pb.ApplicationSubmissionContextPBImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field schedulingProperties:Ljava/util/Map;
       4: areturn
}
