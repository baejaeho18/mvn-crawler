Compiled from "LogAggregationWebUtils.java"
public final class org.apache.hadoop.yarn.logaggregation.LogAggregationWebUtils {
  private org.apache.hadoop.yarn.logaggregation.LogAggregationWebUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static long getLogStartIndex(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block, java.lang.String) throws java.lang.NumberFormatException;
    Code:
       0: ldc2_w        #2                  // long -4096l
       3: lstore_2
       4: aload_1
       5: ifnull        20
       8: aload_1
       9: invokevirtual #4                  // Method java/lang/String.isEmpty:()Z
      12: ifne          20
      15: aload_1
      16: invokestatic  #5                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      19: lstore_2
      20: lload_2
      21: lreturn

  public static long getLogEndIndex(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block, java.lang.String) throws java.lang.NumberFormatException;
    Code:
       0: ldc2_w        #7                  // long 9223372036854775807l
       3: lstore_2
       4: aload_1
       5: ifnull        20
       8: aload_1
       9: invokevirtual #4                  // Method java/lang/String.isEmpty:()Z
      12: ifne          20
      15: aload_1
      16: invokestatic  #5                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      19: lstore_2
      20: lload_2
      21: lreturn

  public static org.apache.hadoop.yarn.api.records.ContainerId verifyAndGetContainerId(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #4                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          33
      11: aload_0
      12: invokevirtual #9                  // Method org/apache/hadoop/yarn/webapp/view/HtmlBlock$Block.h1:()Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      15: iconst_1
      16: anewarray     #10                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: ldc           #11                 // String Cannot get container logs without a ContainerId
      23: aastore
      24: invokevirtual #12                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:([Ljava/lang/Object;)Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      27: invokevirtual #13                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:()Lorg/apache/hadoop/yarn/webapp/hamlet2/HamletSpec$__;
      30: pop
      31: aconst_null
      32: areturn
      33: aconst_null
      34: astore_2
      35: aload_1
      36: invokestatic  #14                 // Method org/apache/hadoop/yarn/api/records/ContainerId.fromString:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/ContainerId;
      39: astore_2
      40: goto          83
      43: astore_3
      44: aload_0
      45: invokevirtual #9                  // Method org/apache/hadoop/yarn/webapp/view/HtmlBlock$Block.h1:()Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      48: iconst_1
      49: anewarray     #10                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: new           #16                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #18                 // String Cannot get container logs for invalid containerId:
      63: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_1
      67: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: aastore
      74: invokevirtual #12                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:([Ljava/lang/Object;)Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      77: invokevirtual #13                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:()Lorg/apache/hadoop/yarn/webapp/hamlet2/HamletSpec$__;
      80: pop
      81: aconst_null
      82: areturn
      83: aload_2
      84: areturn
    Exception table:
       from    to  target type
          35    40    43   Class java/lang/IllegalArgumentException

  public static org.apache.hadoop.yarn.api.records.NodeId verifyAndGetNodeId(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #4                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          33
      11: aload_0
      12: invokevirtual #9                  // Method org/apache/hadoop/yarn/webapp/view/HtmlBlock$Block.h1:()Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      15: iconst_1
      16: anewarray     #10                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: ldc           #21                 // String Cannot get container logs without a NodeId
      23: aastore
      24: invokevirtual #12                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:([Ljava/lang/Object;)Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      27: invokevirtual #13                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:()Lorg/apache/hadoop/yarn/webapp/hamlet2/HamletSpec$__;
      30: pop
      31: aconst_null
      32: areturn
      33: aconst_null
      34: astore_2
      35: aload_1
      36: invokestatic  #22                 // Method org/apache/hadoop/yarn/api/records/NodeId.fromString:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/api/records/NodeId;
      39: astore_2
      40: goto          83
      43: astore_3
      44: aload_0
      45: invokevirtual #9                  // Method org/apache/hadoop/yarn/webapp/view/HtmlBlock$Block.h1:()Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      48: iconst_1
      49: anewarray     #10                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: new           #16                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #23                 // String Cannot get container logs. Invalid nodeId:
      63: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_1
      67: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: aastore
      74: invokevirtual #12                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:([Ljava/lang/Object;)Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      77: invokevirtual #13                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:()Lorg/apache/hadoop/yarn/webapp/hamlet2/HamletSpec$__;
      80: pop
      81: aconst_null
      82: areturn
      83: aload_2
      84: areturn
    Exception table:
       from    to  target type
          35    40    43   Class java/lang/IllegalArgumentException

  public static java.lang.String verifyAndGetAppOwner(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #4                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          31
      11: aload_0
      12: invokevirtual #9                  // Method org/apache/hadoop/yarn/webapp/view/HtmlBlock$Block.h1:()Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      15: iconst_1
      16: anewarray     #10                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: ldc           #24                 // String Cannot get container logs without an app owner
      23: aastore
      24: invokevirtual #12                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:([Ljava/lang/Object;)Lorg/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1;
      27: invokevirtual #13                 // Method org/apache/hadoop/yarn/webapp/hamlet2/Hamlet$H1.__:()Lorg/apache/hadoop/yarn/webapp/hamlet2/HamletSpec$__;
      30: pop
      31: aload_1
      32: areturn

  public static long getLogStartTime(java.lang.String) throws java.lang.NumberFormatException;
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: ifnull        18
       6: aload_0
       7: invokevirtual #4                  // Method java/lang/String.isEmpty:()Z
      10: ifne          18
      13: aload_0
      14: invokestatic  #5                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      17: lstore_1
      18: lload_1
      19: lreturn

  public static long getLogEndTime(java.lang.String) throws java.lang.NumberFormatException;
    Code:
       0: ldc2_w        #7                  // long 9223372036854775807l
       3: lstore_1
       4: aload_0
       5: ifnull        20
       8: aload_0
       9: invokevirtual #4                  // Method java/lang/String.isEmpty:()Z
      12: ifne          20
      15: aload_0
      16: invokestatic  #5                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      19: lstore_1
      20: lload_1
      21: lreturn
}
