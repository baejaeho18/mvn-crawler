Compiled from "ApplicationACLsManager.java"
public class org.apache.hadoop.yarn.server.security.ApplicationACLsManager {
  private static final org.apache.commons.logging.Log LOG;

  private static org.apache.hadoop.security.authorize.AccessControlList DEFAULT_YARN_APP_ACL;

  private final org.apache.hadoop.conf.Configuration conf;

  private final org.apache.hadoop.yarn.security.AdminACLsManager adminAclsManager;

  private final java.util.concurrent.ConcurrentMap<org.apache.hadoop.yarn.api.records.ApplicationId, java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, org.apache.hadoop.security.authorize.AccessControlList>> applicationACLS;

  public org.apache.hadoop.yarn.server.security.ApplicationACLsManager();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/hadoop/conf/Configuration
       4: dup
       5: invokespecial #2                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      11: return

  public org.apache.hadoop.yarn.server.security.ApplicationACLsManager(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #7                  // Field applicationACLS:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      20: aload_0
      21: new           #9                  // class org/apache/hadoop/yarn/security/AdminACLsManager
      24: dup
      25: aload_0
      26: getfield      #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      29: invokespecial #10                 // Method org/apache/hadoop/yarn/security/AdminACLsManager."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      32: putfield      #11                 // Field adminAclsManager:Lorg/apache/hadoop/yarn/security/AdminACLsManager;
      35: return

  public boolean areACLsEnabled();
    Code:
       0: aload_0
       1: getfield      #11                 // Field adminAclsManager:Lorg/apache/hadoop/yarn/security/AdminACLsManager;
       4: invokevirtual #12                 // Method org/apache/hadoop/yarn/security/AdminACLsManager.areACLsEnabled:()Z
       7: ireturn

  public void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId, java.util.Map<org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String>);
    Code:
       0: new           #13                 // class java/util/HashMap
       3: dup
       4: aload_2
       5: invokeinterface #14,  1           // InterfaceMethod java/util/Map.size:()I
      10: invokespecial #15                 // Method java/util/HashMap."<init>":(I)V
      13: astore_3
      14: aload_2
      15: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          83
      37: aload         4
      39: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #20                 // class java/util/Map$Entry
      47: astore        5
      49: aload_3
      50: aload         5
      52: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: new           #22                 // class org/apache/hadoop/security/authorize/AccessControlList
      60: dup
      61: aload         5
      63: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #24                 // class java/lang/String
      71: invokespecial #25                 // Method org/apache/hadoop/security/authorize/AccessControlList."<init>":(Ljava/lang/String;)V
      74: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          27
      83: aload_0
      84: getfield      #7                  // Field applicationACLS:Ljava/util/concurrent/ConcurrentMap;
      87: aload_1
      88: aload_3
      89: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: return

  public void removeApplication(org.apache.hadoop.yarn.api.records.ApplicationId);
    Code:
       0: aload_0
       1: getfield      #7                  // Field applicationACLS:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public boolean checkAccess(org.apache.hadoop.security.UserGroupInformation, org.apache.hadoop.yarn.api.records.ApplicationAccessType, java.lang.String, org.apache.hadoop.yarn.api.records.ApplicationId);
    Code:
       0: getstatic     #29                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          66
      11: getstatic     #29                 // Field LOG:Lorg/apache/commons/logging/Log;
      14: new           #31                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #33                 // String Verifying access-type
      23: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_2
      27: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #36                 // String  for
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #37                 // String  on application
      41: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload         4
      46: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #38                 // String  owned by
      51: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_3
      55: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      66: aload_1
      67: invokevirtual #41                 // Method org/apache/hadoop/security/UserGroupInformation.getShortUserName:()Ljava/lang/String;
      70: astore        5
      72: aload_0
      73: invokevirtual #42                 // Method areACLsEnabled:()Z
      76: ifne          81
      79: iconst_1
      80: ireturn
      81: getstatic     #43                 // Field DEFAULT_YARN_APP_ACL:Lorg/apache/hadoop/security/authorize/AccessControlList;
      84: astore        6
      86: aload_0
      87: getfield      #7                  // Field applicationACLS:Ljava/util/concurrent/ConcurrentMap;
      90: aload         4
      92: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #45                 // class java/util/Map
     100: astore        7
     102: aload         7
     104: ifnonnull     173
     107: getstatic     #29                 // Field LOG:Lorg/apache/commons/logging/Log;
     110: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     115: ifeq          270
     118: getstatic     #29                 // Field LOG:Lorg/apache/commons/logging/Log;
     121: new           #31                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #46                 // String ACL not found for application
     130: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload         4
     135: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: ldc           #38                 // String  owned by
     140: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_3
     144: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: ldc           #47                 // String . Using default [
     149: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: ldc           #49                 // String
     154: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: ldc           #50                 // String ]
     159: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     170: goto          270
     173: aload         7
     175: aload_2
     176: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     181: checkcast     #22                 // class org/apache/hadoop/security/authorize/AccessControlList
     184: astore        8
     186: aload         8
     188: ifnull        198
     191: aload         8
     193: astore        6
     195: goto          270
     198: getstatic     #29                 // Field LOG:Lorg/apache/commons/logging/Log;
     201: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     206: ifeq          270
     209: getstatic     #29                 // Field LOG:Lorg/apache/commons/logging/Log;
     212: new           #31                 // class java/lang/StringBuilder
     215: dup
     216: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     219: ldc           #52                 // String ACL not found for access-type
     221: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: aload_2
     225: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     228: ldc           #53                 // String  for application
     230: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload         4
     235: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     238: ldc           #38                 // String  owned by
     240: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: aload_3
     244: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: ldc           #47                 // String . Using default [
     249: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: ldc           #49                 // String
     254: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     257: ldc           #50                 // String ]
     259: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     270: aload_0
     271: getfield      #11                 // Field adminAclsManager:Lorg/apache/hadoop/yarn/security/AdminACLsManager;
     274: aload_1
     275: invokevirtual #54                 // Method org/apache/hadoop/yarn/security/AdminACLsManager.isAdmin:(Lorg/apache/hadoop/security/UserGroupInformation;)Z
     278: ifne          299
     281: aload         5
     283: aload_3
     284: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     287: ifne          299
     290: aload         6
     292: aload_1
     293: invokevirtual #56                 // Method org/apache/hadoop/security/authorize/AccessControlList.isUserAllowed:(Lorg/apache/hadoop/security/UserGroupInformation;)Z
     296: ifeq          301
     299: iconst_1
     300: ireturn
     301: iconst_0
     302: ireturn

  public final boolean isAdmin(org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: getfield      #11                 // Field adminAclsManager:Lorg/apache/hadoop/yarn/security/AdminACLsManager;
       4: aload_1
       5: invokevirtual #54                 // Method org/apache/hadoop/yarn/security/AdminACLsManager.isAdmin:(Lorg/apache/hadoop/security/UserGroupInformation;)Z
       8: ireturn

  static {};
    Code:
       0: ldc           #57                 // class org/apache/hadoop/yarn/server/security/ApplicationACLsManager
       2: invokestatic  #58                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #29                 // Field LOG:Lorg/apache/commons/logging/Log;
       8: new           #22                 // class org/apache/hadoop/security/authorize/AccessControlList
      11: dup
      12: ldc           #49                 // String
      14: invokespecial #25                 // Method org/apache/hadoop/security/authorize/AccessControlList."<init>":(Ljava/lang/String;)V
      17: putstatic     #43                 // Field DEFAULT_YARN_APP_ACL:Lorg/apache/hadoop/security/authorize/AccessControlList;
      20: return
}
