Compiled from "ReInitializeContainerRequestPBImpl.java"
public class org.apache.hadoop.yarn.api.protocolrecords.impl.pb.ReInitializeContainerRequestPBImpl extends org.apache.hadoop.yarn.api.protocolrecords.ReInitializeContainerRequest {
  private org.apache.hadoop.yarn.proto.YarnServiceProtos$ReInitializeContainerRequestProto proto;

  private org.apache.hadoop.yarn.proto.YarnServiceProtos$ReInitializeContainerRequestProto$Builder builder;

  private boolean viaProto;

  private org.apache.hadoop.yarn.api.records.ContainerId containerId;

  private org.apache.hadoop.yarn.api.records.ContainerLaunchContext containerLaunchContext;

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.ReInitializeContainerRequestPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/protocolrecords/ReInitializeContainerRequest."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: invokestatic  #6                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      25: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      28: return

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.ReInitializeContainerRequestPBImpl(org.apache.hadoop.yarn.proto.YarnServiceProtos$ReInitializeContainerRequestProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/protocolrecords/ReInitializeContainerRequest."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aload_1
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  public org.apache.hadoop.yarn.proto.YarnServiceProtos$ReInitializeContainerRequestProto getProto();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      23: invokevirtual #8                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      29: aload_0
      30: iconst_1
      31: putfield      #5                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      38: areturn

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #9                  // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #10                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      20: invokevirtual #8                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #11                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
       4: ifnull        22
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      11: aload_0
      12: getfield      #11                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      15: invokestatic  #12                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      18: invokevirtual #13                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder.setContainerId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      21: pop
      22: aload_0
      23: getfield      #14                 // Field containerLaunchContext:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      26: ifnull        45
      29: aload_0
      30: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      33: aload_0
      34: aload_0
      35: getfield      #14                 // Field containerLaunchContext:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      38: invokespecial #15                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      41: invokevirtual #16                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder.setContainerLaunchContext:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      44: pop
      45: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      19: invokestatic  #17                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  public org.apache.hadoop.yarn.api.records.ContainerId getContainerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #11                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      23: ifnull        31
      26: aload_0
      27: getfield      #11                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      30: areturn
      31: aload_1
      32: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProtoOrBuilder.hasContainerId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_1
      44: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProtoOrBuilder.getContainerId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;
      49: invokestatic  #20                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ProtoUtils.convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerIdPBImpl;
      52: putfield      #11                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      55: aload_0
      56: getfield      #11                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      59: areturn

  public void setContainerId(org.apache.hadoop.yarn.api.records.ContainerId);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      12: invokevirtual #21                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder.clearContainerId:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #11                 // Field containerId:Lorg/apache/hadoop/yarn/api/records/ContainerId;
      21: return

  public org.apache.hadoop.yarn.api.records.ContainerLaunchContext getContainerLaunchContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #14                 // Field containerLaunchContext:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      23: ifnull        31
      26: aload_0
      27: getfield      #14                 // Field containerLaunchContext:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      30: areturn
      31: aload_1
      32: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProtoOrBuilder.hasContainerLaunchContext:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProtoOrBuilder.getContainerLaunchContext:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
      50: invokespecial #24                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl;
      53: putfield      #14                 // Field containerLaunchContext:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      56: aload_0
      57: getfield      #14                 // Field containerLaunchContext:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      60: areturn

  public void setContainerLaunchContext(org.apache.hadoop.yarn.api.records.ContainerLaunchContext);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      12: invokevirtual #25                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder.clearContainerLaunchContext:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #14                 // Field containerLaunchContext:Lorg/apache/hadoop/yarn/api/records/ContainerLaunchContext;
      21: return

  public boolean getAutoCommit();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProtoOrBuilder.hasAutoCommit:()Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProtoOrBuilder.getAutoCommit:()Z
      36: ireturn

  public void setAutoCommit(boolean);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
       8: iload_1
       9: invokevirtual #28                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder.setAutoCommit:(Z)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto$Builder;
      12: pop
      13: return

  private org.apache.hadoop.yarn.api.records.impl.pb.ContainerLaunchContextPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto);
    Code:
       0: new           #29                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl
       3: dup
       4: aload_1
       5: invokespecial #30                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ContainerLaunchContextProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ContainerLaunchContext);
    Code:
       0: aload_1
       1: checkcast     #29                 // class org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl
       4: invokevirtual #31                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ContainerLaunchContextPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ContainerLaunchContextProto;
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
       4: invokevirtual #33                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #35                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          42
      20: aload_0
      21: invokevirtual #32                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      24: aload_0
      25: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokevirtual #36                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #37                 // class org/apache/hadoop/yarn/api/protocolrecords/impl/pb/ReInitializeContainerRequestPBImpl
      35: invokevirtual #32                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
      38: invokevirtual #38                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto.equals:(Ljava/lang/Object;)Z
      41: ireturn
      42: iconst_0
      43: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getProto:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$ReInitializeContainerRequestProto;
       4: invokestatic  #39                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn
}
