Compiled from "UseSharedCacheResourceRequestPBImpl.java"
public class org.apache.hadoop.yarn.api.protocolrecords.impl.pb.UseSharedCacheResourceRequestPBImpl extends org.apache.hadoop.yarn.api.protocolrecords.UseSharedCacheResourceRequest {
  org.apache.hadoop.yarn.proto.YarnServiceProtos$UseSharedCacheResourceRequestProto proto;

  org.apache.hadoop.yarn.proto.YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder builder;

  boolean viaProto;

  private org.apache.hadoop.yarn.api.records.ApplicationId applicationId;

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.UseSharedCacheResourceRequestPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/protocolrecords/UseSharedCacheResourceRequest."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      26: aload_0
      27: invokestatic  #7                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      30: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      33: return

  public org.apache.hadoop.yarn.api.protocolrecords.impl.pb.UseSharedCacheResourceRequestPBImpl(org.apache.hadoop.yarn.proto.YarnServiceProtos$UseSharedCacheResourceRequestProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/protocolrecords/UseSharedCacheResourceRequest."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      26: aload_0
      27: aload_1
      28: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      31: aload_0
      32: iconst_1
      33: putfield      #5                  // Field viaProto:Z
      36: return

  public org.apache.hadoop.yarn.proto.YarnServiceProtos$UseSharedCacheResourceRequestProto getProto();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method mergeLocalToProto:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field viaProto:Z
       9: ifeq          19
      12: aload_0
      13: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      16: goto          26
      19: aload_0
      20: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      23: invokevirtual #9                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      26: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      29: aload_0
      30: iconst_1
      31: putfield      #5                  // Field viaProto:Z
      34: aload_0
      35: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      38: areturn

  public org.apache.hadoop.yarn.api.records.ApplicationId getAppId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      18: astore_1
      19: aload_0
      20: getfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      23: ifnull        31
      26: aload_0
      27: getfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      30: areturn
      31: aload_1
      32: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProtoOrBuilder.hasApplicationId:()Z
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: aload_0
      44: aload_1
      45: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProtoOrBuilder.getApplicationId:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;
      50: invokespecial #12                 // Method convertFromProtoFormat:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;)Lorg/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl;
      53: putfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      56: aload_0
      57: getfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      60: areturn

  public void setAppId(org.apache.hadoop.yarn.api.records.ApplicationId);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      12: invokevirtual #14                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder.clearApplicationId:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      21: return

  public java.lang.String getResourceKey();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProtoOrBuilder.hasResourceKey:()Z
      25: ifeq          37
      28: aload_1
      29: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProtoOrBuilder.getResourceKey:()Ljava/lang/String;
      34: goto          38
      37: aconst_null
      38: areturn

  public void setResourceKey(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method maybeInitBuilder:()V
       4: aload_1
       5: ifnonnull     17
       8: aload_0
       9: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      12: invokevirtual #17                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder.clearResourceKey:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      15: pop
      16: return
      17: aload_0
      18: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      21: aload_1
      22: invokevirtual #18                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder.setResourceKey:(Ljava/lang/String;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      25: pop
      26: return

  private void mergeLocalToBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      11: aload_0
      12: aload_0
      13: getfield      #6                  // Field applicationId:Lorg/apache/hadoop/yarn/api/records/ApplicationId;
      16: invokespecial #19                 // Method convertToProtoFormat:(Lorg/apache/hadoop/yarn/api/records/ApplicationId;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;
      19: invokevirtual #20                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder.setApplicationId:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      22: pop
      23: return

  private void mergeLocalToProto();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #13                 // Method maybeInitBuilder:()V
      11: aload_0
      12: invokespecial #21                 // Method mergeLocalToBuilder:()V
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      20: invokevirtual #9                  // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;
      19: invokestatic  #22                 // Method org/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto;)Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnServiceProtos$UseSharedCacheResourceRequestProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  private org.apache.hadoop.yarn.api.records.impl.pb.ApplicationIdPBImpl convertFromProtoFormat(org.apache.hadoop.yarn.proto.YarnProtos$ApplicationIdProto);
    Code:
       0: new           #23                 // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl
       3: dup
       4: aload_1
       5: invokespecial #24                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl."<init>":(Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;)V
       8: areturn

  private org.apache.hadoop.yarn.proto.YarnProtos$ApplicationIdProto convertToProtoFormat(org.apache.hadoop.yarn.api.records.ApplicationId);
    Code:
       0: aload_1
       1: checkcast     #23                 // class org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl
       4: invokevirtual #25                 // Method org/apache/hadoop/yarn/api/records/impl/pb/ApplicationIdPBImpl.getProto:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ApplicationIdProto;
       7: areturn
}
