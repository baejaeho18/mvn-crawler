Compiled from "ConfiguredYarnAuthorizer.java"
public class org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer extends org.apache.hadoop.yarn.security.YarnAuthorizationProvider {
  private final java.util.concurrent.ConcurrentMap<org.apache.hadoop.yarn.security.PrivilegedEntity, java.util.Map<org.apache.hadoop.yarn.security.AccessType, org.apache.hadoop.security.authorize.AccessControlList>> allAcls;

  private volatile org.apache.hadoop.security.authorize.AccessControlList adminAcl;

  private final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock;

  public org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/security/YarnAuthorizationProvider."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field allAcls:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field adminAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      24: dup
      25: invokespecial #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      28: putfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: aload_0
      32: aload_0
      33: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      36: invokevirtual #9                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      39: putfield      #10                 // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      42: aload_0
      43: aload_0
      44: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      47: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      50: putfield      #12                 // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      53: return

  public void init(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: new           #13                 // class org/apache/hadoop/security/authorize/AccessControlList
       4: dup
       5: aload_1
       6: ldc           #15                 // String yarn.admin.acl
       8: ldc           #16                 // String *
      10: invokevirtual #17                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: invokespecial #18                 // Method org/apache/hadoop/security/authorize/AccessControlList."<init>":(Ljava/lang/String;)V
      16: putfield      #5                  // Field adminAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
      19: return

  public void setPermission(java.util.List<org.apache.hadoop.yarn.security.Permission>, org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: getfield      #12                 // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       4: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
       7: aload_1
       8: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          57
      23: aload_3
      24: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #23                 // class org/apache/hadoop/yarn/security/Permission
      32: astore        4
      34: aload_0
      35: getfield      #4                  // Field allAcls:Ljava/util/concurrent/ConcurrentMap;
      38: aload         4
      40: invokevirtual #24                 // Method org/apache/hadoop/yarn/security/Permission.getTarget:()Lorg/apache/hadoop/yarn/security/PrivilegedEntity;
      43: aload         4
      45: invokevirtual #25                 // Method org/apache/hadoop/yarn/security/Permission.getAcls:()Ljava/util/Map;
      48: invokeinterface #26,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: goto          14
      57: aload_0
      58: getfield      #12                 // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      61: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      64: goto          79
      67: astore        5
      69: aload_0
      70: getfield      #12                 // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      73: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      76: aload         5
      78: athrow
      79: return
    Exception table:
       from    to  target type
           0    57    67   any
          67    69    67   any

  private boolean checkPermissionInternal(org.apache.hadoop.yarn.security.AccessType, org.apache.hadoop.yarn.security.PrivilegedEntity, org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #4                  // Field allAcls:Ljava/util/concurrent/ConcurrentMap;
       7: aload_2
       8: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #29                 // class java/util/Map
      16: astore        5
      18: aload         5
      20: ifnull        49
      23: aload         5
      25: aload_1
      26: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #13                 // class org/apache/hadoop/security/authorize/AccessControlList
      34: astore        6
      36: aload         6
      38: ifnull        49
      41: aload         6
      43: aload_3
      44: invokevirtual #31                 // Method org/apache/hadoop/security/authorize/AccessControlList.isUserAllowed:(Lorg/apache/hadoop/security/UserGroupInformation;)Z
      47: istore        4
      49: aload_2
      50: invokevirtual #32                 // Method org/apache/hadoop/yarn/security/PrivilegedEntity.getType:()Lorg/apache/hadoop/yarn/security/PrivilegedEntity$EntityType;
      53: getstatic     #33                 // Field org/apache/hadoop/yarn/security/PrivilegedEntity$EntityType.QUEUE:Lorg/apache/hadoop/yarn/security/PrivilegedEntity$EntityType;
      56: if_acmpne     118
      59: iload         4
      61: ifne          118
      64: aload_2
      65: invokevirtual #34                 // Method org/apache/hadoop/yarn/security/PrivilegedEntity.getName:()Ljava/lang/String;
      68: astore        6
      70: aload         6
      72: ldc           #35                 // String .
      74: invokevirtual #36                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      77: ifne          83
      80: iload         4
      82: ireturn
      83: aload         6
      85: iconst_0
      86: aload         6
      88: ldc           #35                 // String .
      90: invokevirtual #37                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      93: invokevirtual #38                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      96: astore        7
      98: aload_0
      99: aload_1
     100: new           #39                 // class org/apache/hadoop/yarn/security/PrivilegedEntity
     103: dup
     104: aload_2
     105: invokevirtual #32                 // Method org/apache/hadoop/yarn/security/PrivilegedEntity.getType:()Lorg/apache/hadoop/yarn/security/PrivilegedEntity$EntityType;
     108: aload         7
     110: invokespecial #40                 // Method org/apache/hadoop/yarn/security/PrivilegedEntity."<init>":(Lorg/apache/hadoop/yarn/security/PrivilegedEntity$EntityType;Ljava/lang/String;)V
     113: aload_3
     114: invokespecial #41                 // Method checkPermissionInternal:(Lorg/apache/hadoop/yarn/security/AccessType;Lorg/apache/hadoop/yarn/security/PrivilegedEntity;Lorg/apache/hadoop/security/UserGroupInformation;)Z
     117: ireturn
     118: iload         4
     120: ireturn

  public boolean checkPermission(org.apache.hadoop.yarn.security.AccessRequest);
    Code:
       0: aload_0
       1: getfield      #10                 // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: invokevirtual #42                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #43                 // Method org/apache/hadoop/yarn/security/AccessRequest.getAccessType:()Lorg/apache/hadoop/yarn/security/AccessType;
      12: aload_1
      13: invokevirtual #44                 // Method org/apache/hadoop/yarn/security/AccessRequest.getEntity:()Lorg/apache/hadoop/yarn/security/PrivilegedEntity;
      16: aload_1
      17: invokevirtual #45                 // Method org/apache/hadoop/yarn/security/AccessRequest.getUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      20: invokespecial #41                 // Method checkPermissionInternal:(Lorg/apache/hadoop/yarn/security/AccessType;Lorg/apache/hadoop/yarn/security/PrivilegedEntity;Lorg/apache/hadoop/security/UserGroupInformation;)Z
      23: istore_2
      24: aload_0
      25: getfield      #10                 // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      28: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      31: iload_2
      32: ireturn
      33: astore_3
      34: aload_0
      35: getfield      #10                 // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      38: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      41: aload_3
      42: athrow
    Exception table:
       from    to  target type
           0    24    33   any

  public void setAdmins(org.apache.hadoop.security.authorize.AccessControlList, org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field adminAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
       5: return

  public boolean isAdmin(org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: getfield      #5                  // Field adminAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
       4: aload_1
       5: invokevirtual #31                 // Method org/apache/hadoop/security/authorize/AccessControlList.isUserAllowed:(Lorg/apache/hadoop/security/UserGroupInformation;)Z
       8: ireturn

  public org.apache.hadoop.security.authorize.AccessControlList getAdminAcls();
    Code:
       0: aload_0
       1: getfield      #5                  // Field adminAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
       4: areturn
}
