Compiled from "BoundedAppender.java"
public class org.apache.hadoop.yarn.util.BoundedAppender {
  public static final java.lang.String TRUNCATED_MESSAGES_TEMPLATE;

  private final int limit;

  private final java.lang.StringBuilder messages;

  private int totalCharacterCount;

  public org.apache.hadoop.yarn.util.BoundedAppender(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field totalCharacterCount:I
      20: iload_1
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #6                  // String limit should be positive
      31: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      34: aload_0
      35: iload_1
      36: putfield      #8                  // Field limit:I
      39: return

  public org.apache.hadoop.yarn.util.BoundedAppender append(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method appendAndCount:(Ljava/lang/CharSequence;)V
       5: aload_0
       6: invokespecial #10                 // Method checkAndCut:()V
       9: aload_0
      10: areturn

  private void appendAndCount(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       7: istore_2
       8: aload_0
       9: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_0
      18: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      21: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
      24: istore_3
      25: aload_0
      26: dup
      27: getfield      #5                  // Field totalCharacterCount:I
      30: iload_3
      31: iload_2
      32: isub
      33: iadd
      34: putfield      #5                  // Field totalCharacterCount:I
      37: return

  private void checkAndCut();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       7: aload_0
       8: getfield      #8                  // Field limit:I
      11: if_icmple     37
      14: aload_0
      15: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      18: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
      21: aload_0
      22: getfield      #8                  // Field limit:I
      25: isub
      26: istore_1
      27: aload_0
      28: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      31: iconst_0
      32: iload_1
      33: invokevirtual #13                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      36: pop
      37: return

  public int length();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       7: ireturn

  public int getLimit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field limit:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       7: aload_0
       8: getfield      #5                  // Field totalCharacterCount:I
      11: if_icmpge     57
      14: ldc           #15                 // String Diagnostic messages truncated, showing last %d chars out of %d:%n...%s
      16: iconst_3
      17: anewarray     #16                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      26: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
      29: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #5                  // Field totalCharacterCount:I
      39: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: dup
      44: iconst_2
      45: aload_0
      46: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      49: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aastore
      53: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      56: areturn
      57: aload_0
      58: getfield      #4                  // Field messages:Ljava/lang/StringBuilder;
      61: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: areturn
}
