Compiled from "ResourceUtilizationPBImpl.java"
public class org.apache.hadoop.yarn.api.records.impl.pb.ResourceUtilizationPBImpl extends org.apache.hadoop.yarn.api.records.ResourceUtilization {
  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceUtilizationProto proto;

  private org.apache.hadoop.yarn.proto.YarnProtos$ResourceUtilizationProto$Builder builder;

  private boolean viaProto;

  public org.apache.hadoop.yarn.api.records.impl.pb.ResourceUtilizationPBImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/ResourceUtilization."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: invokestatic  #6                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto.newBuilder:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      25: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      28: return

  public org.apache.hadoop.yarn.api.records.impl.pb.ResourceUtilizationPBImpl(org.apache.hadoop.yarn.proto.YarnProtos$ResourceUtilizationProto);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/yarn/api/records/ResourceUtilization."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto.getDefaultInstance:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
       8: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field viaProto:Z
      21: aload_0
      22: aload_1
      23: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      26: aload_0
      27: iconst_1
      28: putfield      #5                  // Field viaProto:Z
      31: return

  public org.apache.hadoop.yarn.proto.YarnProtos$ResourceUtilizationProto getProto();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field viaProto:Z
       5: ifeq          15
       8: aload_0
       9: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      12: goto          22
      15: aload_0
      16: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      19: invokevirtual #7                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder.build:()Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      22: putfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      25: aload_0
      26: iconst_1
      27: putfield      #5                  // Field viaProto:Z
      30: aload_0
      31: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      34: areturn

  private void maybeInitBuilder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifne          14
       7: aload_0
       8: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      19: invokestatic  #8                  // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto.newBuilder:(Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      22: putfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      25: aload_0
      26: iconst_0
      27: putfield      #5                  // Field viaProto:Z
      30: return

  public int getPhysicalMemory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProtoOrBuilder.getPmem:()I
      25: ireturn

  public void setPhysicalMemory(int);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
       8: iload_1
       9: invokevirtual #11                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder.setPmem:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      12: pop
      13: return

  public int getVirtualMemory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProtoOrBuilder.getVmem:()I
      25: ireturn

  public void setVirtualMemory(int);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
       8: iload_1
       9: invokevirtual #13                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder.setVmem:(I)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      12: pop
      13: return

  public float getCPU();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viaProto:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field proto:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      18: astore_1
      19: aload_1
      20: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProtoOrBuilder.getCpu:()F
      25: freturn

  public void setCPU(float);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method maybeInitBuilder:()V
       4: aload_0
       5: getfield      #4                  // Field builder:Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
       8: fload_1
       9: invokevirtual #15                 // Method org/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder.setCpu:(F)Lorg/apache/hadoop/yarn/proto/YarnProtos$ResourceUtilizationProto$Builder;
      12: pop
      13: return

  public int compareTo(org.apache.hadoop.yarn.api.records.ResourceUtilization);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getPhysicalMemory:()I
       4: aload_1
       5: invokevirtual #17                 // Method org/apache/hadoop/yarn/api/records/ResourceUtilization.getPhysicalMemory:()I
       8: isub
       9: istore_2
      10: iload_2
      11: ifne          40
      14: aload_0
      15: invokevirtual #18                 // Method getVirtualMemory:()I
      18: aload_1
      19: invokevirtual #19                 // Method org/apache/hadoop/yarn/api/records/ResourceUtilization.getVirtualMemory:()I
      22: isub
      23: istore_2
      24: iload_2
      25: ifne          40
      28: aload_0
      29: invokevirtual #20                 // Method getCPU:()F
      32: aload_1
      33: invokevirtual #21                 // Method org/apache/hadoop/yarn/api/records/ResourceUtilization.getCPU:()F
      36: invokestatic  #22                 // Method java/lang/Float.compare:(FF)I
      39: istore_2
      40: iload_2
      41: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class org/apache/hadoop/yarn/api/records/ResourceUtilization
       5: invokevirtual #24                 // Method compareTo:(Lorg/apache/hadoop/yarn/api/records/ResourceUtilization;)I
       8: ireturn
}
