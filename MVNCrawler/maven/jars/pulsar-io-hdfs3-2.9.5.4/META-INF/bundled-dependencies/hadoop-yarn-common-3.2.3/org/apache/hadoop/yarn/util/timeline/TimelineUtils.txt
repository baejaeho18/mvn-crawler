Compiled from "TimelineUtils.java"
public class org.apache.hadoop.yarn.util.timeline.TimelineUtils {
  public static final java.lang.String FLOW_NAME_TAG_PREFIX;

  public static final java.lang.String FLOW_VERSION_TAG_PREFIX;

  public static final java.lang.String FLOW_RUN_ID_TAG_PREFIX;

  public static final java.lang.String DEFAULT_FLOW_VERSION;

  private static com.fasterxml.jackson.databind.ObjectMapper mapper;

  public org.apache.hadoop.yarn.util.timeline.TimelineUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String dumpTimelineRecordtoJSON(java.lang.Object) throws com.fasterxml.jackson.core.JsonGenerationException, com.fasterxml.jackson.databind.JsonMappingException, java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #2                  // Method dumpTimelineRecordtoJSON:(Ljava/lang/Object;Z)Ljava/lang/String;
       5: areturn

  public static java.lang.String dumpTimelineRecordtoJSON(java.lang.Object, boolean) throws com.fasterxml.jackson.core.JsonGenerationException, com.fasterxml.jackson.databind.JsonMappingException, java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          15
       4: getstatic     #3                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       7: invokevirtual #4                  // Method com/fasterxml/jackson/databind/ObjectMapper.writerWithDefaultPrettyPrinter:()Lcom/fasterxml/jackson/databind/ObjectWriter;
      10: aload_0
      11: invokevirtual #5                  // Method com/fasterxml/jackson/databind/ObjectWriter.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
      14: areturn
      15: getstatic     #3                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      18: aload_0
      19: invokevirtual #6                  // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
      22: areturn

  public static boolean timelineServiceEnabled(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #8                  // String yarn.timeline-service.enabled
       3: iconst_0
       4: invokevirtual #9                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public static float getTimelineServiceVersion(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #10                 // String yarn.timeline-service.version
       3: fconst_1
       4: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
       7: freturn

  public static boolean timelineServiceV1_5Enabled(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method org/apache/hadoop/yarn/conf/YarnConfiguration.timelineServiceV15Enabled:(Lorg/apache/hadoop/conf/Configuration;)Z
       4: ireturn

  public static org.apache.hadoop.yarn.api.records.timeline.TimelineAbout createTimelineAbout(java.lang.String);
    Code:
       0: new           #13                 // class org/apache/hadoop/yarn/api/records/timeline/TimelineAbout
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method org/apache/hadoop/yarn/api/records/timeline/TimelineAbout."<init>":(Ljava/lang/String;)V
       8: astore_1
       9: aload_1
      10: invokestatic  #15                 // Method org/apache/hadoop/util/VersionInfo.getBuildVersion:()Ljava/lang/String;
      13: invokevirtual #16                 // Method org/apache/hadoop/yarn/api/records/timeline/TimelineAbout.setHadoopBuildVersion:(Ljava/lang/String;)V
      16: aload_1
      17: invokestatic  #17                 // Method org/apache/hadoop/util/VersionInfo.getVersion:()Ljava/lang/String;
      20: invokevirtual #18                 // Method org/apache/hadoop/yarn/api/records/timeline/TimelineAbout.setHadoopVersion:(Ljava/lang/String;)V
      23: aload_1
      24: invokestatic  #19                 // Method org/apache/hadoop/util/VersionInfo.getDate:()Ljava/lang/String;
      27: invokevirtual #20                 // Method org/apache/hadoop/yarn/api/records/timeline/TimelineAbout.setHadoopVersionBuiltOn:(Ljava/lang/String;)V
      30: aload_1
      31: invokestatic  #21                 // Method org/apache/hadoop/yarn/util/YarnVersionInfo.getBuildVersion:()Ljava/lang/String;
      34: invokevirtual #22                 // Method org/apache/hadoop/yarn/api/records/timeline/TimelineAbout.setTimelineServiceBuildVersion:(Ljava/lang/String;)V
      37: aload_1
      38: invokestatic  #23                 // Method org/apache/hadoop/yarn/util/YarnVersionInfo.getVersion:()Ljava/lang/String;
      41: invokevirtual #24                 // Method org/apache/hadoop/yarn/api/records/timeline/TimelineAbout.setTimelineServiceVersion:(Ljava/lang/String;)V
      44: aload_1
      45: invokestatic  #25                 // Method org/apache/hadoop/yarn/util/YarnVersionInfo.getDate:()Ljava/lang/String;
      48: invokevirtual #26                 // Method org/apache/hadoop/yarn/api/records/timeline/TimelineAbout.setTimelineServiceVersionBuiltOn:(Ljava/lang/String;)V
      51: aload_1
      52: areturn

  public static java.net.InetSocketAddress getTimelineTokenServiceAddress(org.apache.hadoop.conf.Configuration);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokestatic  #27                 // Method org/apache/hadoop/yarn/conf/YarnConfiguration.useHttps:(Lorg/apache/hadoop/conf/Configuration;)Z
       6: ifeq          24
       9: aload_0
      10: ldc           #28                 // String yarn.timeline-service.webapp.https.address
      12: ldc           #29                 // String 0.0.0.0:8190
      14: sipush        8190
      17: invokevirtual #30                 // Method org/apache/hadoop/conf/Configuration.getSocketAddr:(Ljava/lang/String;Ljava/lang/String;I)Ljava/net/InetSocketAddress;
      20: astore_1
      21: goto          36
      24: aload_0
      25: ldc           #31                 // String yarn.timeline-service.webapp.address
      27: ldc           #32                 // String 0.0.0.0:8188
      29: sipush        8188
      32: invokevirtual #30                 // Method org/apache/hadoop/conf/Configuration.getSocketAddr:(Ljava/lang/String;Ljava/lang/String;I)Ljava/net/InetSocketAddress;
      35: astore_1
      36: aload_1
      37: areturn

  public static org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method getTimelineTokenServiceAddress:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/InetSocketAddress;
       4: astore_1
       5: aload_1
       6: invokestatic  #34                 // Method org/apache/hadoop/security/SecurityUtil.buildTokenService:(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/io/Text;
       9: areturn

  public static java.lang.String generateDefaultFlowName(java.lang.String, org.apache.hadoop.yarn.api.records.ApplicationId);
    Code:
       0: aload_0
       1: ifnull        17
       4: aload_0
       5: ldc           #35                 // String N/A
       7: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifne          17
      13: aload_0
      14: goto          51
      17: new           #37                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #39                 // String flow_
      26: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #41                 // Method org/apache/hadoop/yarn/api/records/ApplicationId.getClusterTimestamp:()J
      33: invokevirtual #42                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      36: ldc           #43                 // String _
      38: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #44                 // Method org/apache/hadoop/yarn/api/records/ApplicationId.getId:()I
      45: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public static java.lang.String generateFlowNameTag(java.lang.String);
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #48                 // String TIMELINE_FLOW_NAME_TAG:
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String shortenFlowName(java.lang.String, org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokestatic  #49                 // Method removeUUID:(Ljava/lang/String;)Ljava/lang/String;
      10: astore_0
      11: aload_1
      12: ldc           #50                 // String yarn.timeline-service.flowname.max-size
      14: iconst_0
      15: invokevirtual #51                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      18: istore_2
      19: iload_2
      20: ifgt          25
      23: aload_0
      24: areturn
      25: aload_0
      26: iconst_0
      27: iload_2
      28: invokestatic  #52                 // Method org/apache/commons/lang3/StringUtils.substring:(Ljava/lang/String;II)Ljava/lang/String;
      31: areturn

  static java.lang.String removeUUID(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #53                 // String -?([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}){1}
       3: ldc           #54                 // String
       5: invokestatic  #55                 // Method org/apache/commons/lang3/StringUtils.replaceAll:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: areturn

  public static java.lang.String generateFlowVersionTag(java.lang.String);
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #56                 // String TIMELINE_FLOW_VERSION_TAG:
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String generateFlowRunIdTag(long);
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #57                 // String TIMELINE_FLOW_RUN_ID_TAG:
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: lload_0
      13: invokevirtual #42                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      16: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  static {};
    Code:
       0: new           #58                 // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #59                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: putstatic     #3                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      10: getstatic     #3                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      13: invokestatic  #60                 // Method org/apache/hadoop/yarn/webapp/YarnJacksonJaxbJsonProvider.configObjectMapper:(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
      16: return
}
