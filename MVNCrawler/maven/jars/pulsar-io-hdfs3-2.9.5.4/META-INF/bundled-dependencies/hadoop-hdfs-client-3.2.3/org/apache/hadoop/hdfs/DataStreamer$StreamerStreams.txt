Compiled from "DataStreamer.java"
class org.apache.hadoop.hdfs.DataStreamer$StreamerStreams implements java.io.Closeable {
  private java.net.Socket sock;

  private java.io.DataOutputStream out;

  private java.io.DataInputStream in;

  final org.apache.hadoop.hdfs.DataStreamer this$0;

  org.apache.hadoop.hdfs.DataStreamer$StreamerStreams(org.apache.hadoop.hdfs.protocol.DatanodeInfo, long, long, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DataStreamer;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field sock:Ljava/net/Socket;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field out:Ljava/io/DataOutputStream;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field in:Ljava/io/DataInputStream;
      24: aload_0
      25: aload_2
      26: iconst_2
      27: aload_1
      28: getfield      #6                  // Field org/apache/hadoop/hdfs/DataStreamer.dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      31: invokestatic  #7                  // Method org/apache/hadoop/hdfs/DataStreamer.createSocketForPipeline:(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;ILorg/apache/hadoop/hdfs/DFSClient;)Ljava/net/Socket;
      34: putfield      #3                  // Field sock:Ljava/net/Socket;
      37: aload_0
      38: getfield      #3                  // Field sock:Ljava/net/Socket;
      41: lload_3
      42: invokestatic  #8                  // Method org/apache/hadoop/net/NetUtils.getOutputStream:(Ljava/net/Socket;J)Ljava/io/OutputStream;
      45: astore        8
      47: aload_0
      48: getfield      #3                  // Field sock:Ljava/net/Socket;
      51: lload         5
      53: invokestatic  #9                  // Method org/apache/hadoop/net/NetUtils.getInputStream:(Ljava/net/Socket;J)Lorg/apache/hadoop/net/SocketInputWrapper;
      56: astore        9
      58: aload_1
      59: getfield      #6                  // Field org/apache/hadoop/hdfs/DataStreamer.dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      62: getfield      #10                 // Field org/apache/hadoop/hdfs/DFSClient.saslClient:Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient;
      65: aload_0
      66: getfield      #3                  // Field sock:Ljava/net/Socket;
      69: aload         8
      71: aload         9
      73: aload_1
      74: getfield      #6                  // Field org/apache/hadoop/hdfs/DataStreamer.dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      77: aload         7
      79: aload_2
      80: invokevirtual #11                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.socketSend:(Ljava/net/Socket;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataEncryptionKeyFactory;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      83: astore        10
      85: aload         10
      87: getfield      #12                 // Field org/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair.out:Ljava/io/OutputStream;
      90: astore        8
      92: aload         10
      94: getfield      #13                 // Field org/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair.in:Ljava/io/InputStream;
      97: astore        9
      99: aload_0
     100: new           #14                 // class java/io/DataOutputStream
     103: dup
     104: new           #15                 // class java/io/BufferedOutputStream
     107: dup
     108: aload         8
     110: aload_1
     111: getfield      #6                  // Field org/apache/hadoop/hdfs/DataStreamer.dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
     114: invokevirtual #16                 // Method org/apache/hadoop/hdfs/DFSClient.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
     117: invokestatic  #17                 // Method org/apache/hadoop/hdfs/DFSUtilClient.getSmallBufferSize:(Lorg/apache/hadoop/conf/Configuration;)I
     120: invokespecial #18                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
     123: invokespecial #19                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
     126: putfield      #4                  // Field out:Ljava/io/DataOutputStream;
     129: aload_0
     130: new           #20                 // class java/io/DataInputStream
     133: dup
     134: aload         9
     136: invokespecial #21                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     139: putfield      #5                  // Field in:Ljava/io/DataInputStream;
     142: return

  void sendTransferBlock(org.apache.hadoop.hdfs.protocol.DatanodeInfo[], org.apache.hadoop.fs.StorageType[], java.lang.String[], org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>) throws java.io.IOException;
    Code:
       0: new           #22                 // class org/apache/hadoop/hdfs/protocol/datatransfer/Sender
       3: dup
       4: aload_0
       5: getfield      #4                  // Field out:Ljava/io/DataOutputStream;
       8: invokespecial #23                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/Sender."<init>":(Ljava/io/DataOutputStream;)V
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DataStreamer;
      15: getfield      #24                 // Field org/apache/hadoop/hdfs/DataStreamer.block:Lorg/apache/hadoop/hdfs/DataStreamer$BlockToWrite;
      18: invokevirtual #25                 // Method org/apache/hadoop/hdfs/DataStreamer$BlockToWrite.getCurrentBlock:()Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
      21: aload         4
      23: aload_0
      24: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DataStreamer;
      27: getfield      #6                  // Field org/apache/hadoop/hdfs/DataStreamer.dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      30: getfield      #26                 // Field org/apache/hadoop/hdfs/DFSClient.clientName:Ljava/lang/String;
      33: aload_1
      34: aload_2
      35: aload_3
      36: invokevirtual #27                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/Sender.transferBlock:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;[Lorg/apache/hadoop/fs/StorageType;[Ljava/lang/String;)V
      39: aload_0
      40: getfield      #4                  // Field out:Ljava/io/DataOutputStream;
      43: invokevirtual #28                 // Method java/io/DataOutputStream.flush:()V
      46: aload_0
      47: getfield      #5                  // Field in:Ljava/io/DataInputStream;
      50: invokestatic  #29                 // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.vintPrefixed:(Ljava/io/InputStream;)Ljava/io/InputStream;
      53: invokestatic  #30                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.parseFrom:(Ljava/io/InputStream;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto;
      56: astore        5
      58: getstatic     #31                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.SUCCESS:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      61: aload         5
      63: invokevirtual #32                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getStatus:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      66: if_acmpeq     100
      69: new           #33                 // class java/io/IOException
      72: dup
      73: new           #34                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #36                 // String Failed to add a datanode. Response status:
      82: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload         5
      87: invokevirtual #32                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getStatus:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      90: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field in:Ljava/io/DataInputStream;
       4: invokestatic  #41                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
       7: aload_0
       8: getfield      #4                  // Field out:Ljava/io/DataOutputStream;
      11: invokestatic  #41                 // Method org/apache/hadoop/io/IOUtils.closeStream:(Ljava/io/Closeable;)V
      14: aload_0
      15: getfield      #3                  // Field sock:Ljava/net/Socket;
      18: invokestatic  #42                 // Method org/apache/hadoop/io/IOUtils.closeSocket:(Ljava/net/Socket;)V
      21: return
}
