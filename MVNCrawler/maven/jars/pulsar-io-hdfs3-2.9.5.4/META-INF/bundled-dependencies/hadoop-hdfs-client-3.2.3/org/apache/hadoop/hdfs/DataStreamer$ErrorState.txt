Compiled from "DataStreamer.java"
class org.apache.hadoop.hdfs.DataStreamer$ErrorState {
  org.apache.hadoop.hdfs.DataStreamer$ErrorType error;

  private int badNodeIndex;

  private boolean waitForRestart;

  private int restartingNodeIndex;

  private long restartingNodeDeadline;

  private final long datanodeRestartTimeout;

  org.apache.hadoop.hdfs.DataStreamer$ErrorState(long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.NONE:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       8: putfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
      11: aload_0
      12: iconst_m1
      13: putfield      #5                  // Field badNodeIndex:I
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field waitForRestart:Z
      21: aload_0
      22: iconst_m1
      23: putfield      #7                  // Field restartingNodeIndex:I
      26: aload_0
      27: lconst_0
      28: putfield      #8                  // Field restartingNodeDeadline:J
      31: aload_0
      32: lload_1
      33: putfield      #1                  // Field datanodeRestartTimeout:J
      36: return

  synchronized void resetInternalError();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method hasInternalError:()Z
       4: ifeq          14
       7: aload_0
       8: getstatic     #3                  // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.NONE:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
      11: putfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
      14: aload_0
      15: iconst_m1
      16: putfield      #5                  // Field badNodeIndex:I
      19: aload_0
      20: iconst_m1
      21: putfield      #7                  // Field restartingNodeIndex:I
      24: aload_0
      25: lconst_0
      26: putfield      #8                  // Field restartingNodeDeadline:J
      29: aload_0
      30: iconst_1
      31: putfield      #6                  // Field waitForRestart:Z
      34: return

  synchronized void reset();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.NONE:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       4: putfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       7: aload_0
       8: iconst_m1
       9: putfield      #5                  // Field badNodeIndex:I
      12: aload_0
      13: iconst_m1
      14: putfield      #7                  // Field restartingNodeIndex:I
      17: aload_0
      18: lconst_0
      19: putfield      #8                  // Field restartingNodeDeadline:J
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field waitForRestart:Z
      27: return

  synchronized boolean hasInternalError();
    Code:
       0: aload_0
       1: getfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       4: getstatic     #10                 // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.INTERNAL:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  synchronized boolean hasExternalError();
    Code:
       0: aload_0
       1: getfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       4: getstatic     #11                 // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.EXTERNAL:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  synchronized boolean hasError();
    Code:
       0: aload_0
       1: getfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       4: getstatic     #3                  // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.NONE:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  synchronized boolean hasDatanodeError();
    Code:
       0: aload_0
       1: getfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       4: getstatic     #10                 // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.INTERNAL:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       7: if_acmpne     21
      10: aload_0
      11: invokevirtual #12                 // Method isNodeMarked:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  synchronized void setInternalError();
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.INTERNAL:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       4: putfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
       7: return

  synchronized void setExternalError();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method hasInternalError:()Z
       4: ifne          14
       7: aload_0
       8: getstatic     #11                 // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.EXTERNAL:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
      11: putfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
      14: return

  synchronized void setBadNodeIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field badNodeIndex:I
       5: return

  synchronized int getBadNodeIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field badNodeIndex:I
       4: ireturn

  synchronized int getRestartingNodeIndex();
    Code:
       0: aload_0
       1: getfield      #7                  // Field restartingNodeIndex:I
       4: ireturn

  synchronized void initRestartingNode(int, java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field restartingNodeIndex:I
       5: iload_3
       6: ifeq          29
       9: aload_0
      10: invokestatic  #13                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
      13: aload_0
      14: getfield      #1                  // Field datanodeRestartTimeout:J
      17: ladd
      18: putfield      #8                  // Field restartingNodeDeadline:J
      21: aload_0
      22: iconst_m1
      23: putfield      #5                  // Field badNodeIndex:I
      26: goto          34
      29: aload_0
      30: iconst_0
      31: putfield      #6                  // Field waitForRestart:Z
      34: getstatic     #14                 // Field org/apache/hadoop/hdfs/DataStreamer.LOG:Lorg/slf4j/Logger;
      37: aload_2
      38: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      43: return

  synchronized boolean isRestartingNode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field restartingNodeIndex:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  synchronized boolean isNodeMarked();
    Code:
       0: aload_0
       1: getfield      #5                  // Field badNodeIndex:I
       4: ifge          21
       7: aload_0
       8: invokevirtual #16                 // Method isRestartingNode:()Z
      11: ifeq          25
      14: aload_0
      15: invokevirtual #17                 // Method doWaitForRestart:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  synchronized void markFirstNodeIfNotMarked();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isNodeMarked:()Z
       4: ifne          12
       7: aload_0
       8: iconst_0
       9: putfield      #5                  // Field badNodeIndex:I
      12: return

  synchronized void adjustState4RestartingNode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field restartingNodeIndex:I
       4: iflt          99
       7: aload_0
       8: getfield      #5                  // Field badNodeIndex:I
      11: aload_0
      12: getfield      #7                  // Field restartingNodeIndex:I
      15: if_icmple     26
      18: aload_0
      19: iconst_m1
      20: putfield      #7                  // Field restartingNodeIndex:I
      23: goto          99
      26: aload_0
      27: getfield      #5                  // Field badNodeIndex:I
      30: aload_0
      31: getfield      #7                  // Field restartingNodeIndex:I
      34: if_icmpge     50
      37: aload_0
      38: dup
      39: getfield      #7                  // Field restartingNodeIndex:I
      42: iconst_1
      43: isub
      44: putfield      #7                  // Field restartingNodeIndex:I
      47: goto          99
      50: aload_0
      51: getfield      #6                  // Field waitForRestart:Z
      54: ifeq          99
      57: new           #18                 // class java/lang/IllegalStateException
      60: dup
      61: new           #19                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #21                 // String badNodeIndex =
      70: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: getfield      #5                  // Field badNodeIndex:I
      77: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #24                 // String  = restartingNodeIndex =
      82: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: getfield      #7                  // Field restartingNodeIndex:I
      89: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: invokevirtual #16                 // Method isRestartingNode:()Z
     103: ifne          113
     106: aload_0
     107: getstatic     #3                  // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.NONE:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
     110: putfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
     113: aload_0
     114: iconst_m1
     115: putfield      #5                  // Field badNodeIndex:I
     118: return

  synchronized void checkRestartingNodeDeadline(org.apache.hadoop.hdfs.protocol.DatanodeInfo[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field restartingNodeIndex:I
       4: iflt          132
       7: aload_0
       8: getfield      #4                  // Field error:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
      11: getstatic     #3                  // Field org/apache/hadoop/hdfs/DataStreamer$ErrorType.NONE:Lorg/apache/hadoop/hdfs/DataStreamer$ErrorType;
      14: if_acmpne     27
      17: new           #18                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #27                 // String error=false while checking restarting node deadline
      23: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #5                  // Field badNodeIndex:I
      31: aload_0
      32: getfield      #7                  // Field restartingNodeIndex:I
      35: if_icmpne     43
      38: aload_0
      39: iconst_m1
      40: putfield      #5                  // Field badNodeIndex:I
      43: invokestatic  #13                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
      46: aload_0
      47: getfield      #8                  // Field restartingNodeDeadline:J
      50: lcmp
      51: iflt          132
      54: aload_0
      55: lconst_0
      56: putfield      #8                  // Field restartingNodeDeadline:J
      59: aload_0
      60: getfield      #7                  // Field restartingNodeIndex:I
      63: istore_2
      64: aload_0
      65: iconst_m1
      66: putfield      #7                  // Field restartingNodeIndex:I
      69: getstatic     #14                 // Field org/apache/hadoop/hdfs/DataStreamer.LOG:Lorg/slf4j/Logger;
      72: new           #19                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #28                 // String Datanode
      81: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iload_2
      85: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: ldc           #29                 // String  did not restart within
      90: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #1                  // Field datanodeRestartTimeout:J
      97: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     100: ldc           #31                 // String ms:
     102: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_1
     106: iload_2
     107: aaload
     108: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     119: aload_0
     120: getfield      #5                  // Field badNodeIndex:I
     123: iconst_m1
     124: if_icmpne     132
     127: aload_0
     128: iload_2
     129: putfield      #5                  // Field badNodeIndex:I
     132: return

  boolean doWaitForRestart();
    Code:
       0: aload_0
       1: getfield      #6                  // Field waitForRestart:Z
       4: ireturn

  static long access$1200(org.apache.hadoop.hdfs.DataStreamer$ErrorState);
    Code:
       0: aload_0
       1: getfield      #1                  // Field datanodeRestartTimeout:J
       4: lreturn
}
