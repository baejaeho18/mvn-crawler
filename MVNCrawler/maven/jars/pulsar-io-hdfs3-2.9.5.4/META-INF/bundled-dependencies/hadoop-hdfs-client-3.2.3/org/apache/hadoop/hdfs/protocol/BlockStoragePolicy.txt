Compiled from "BlockStoragePolicy.java"
public class org.apache.hadoop.hdfs.protocol.BlockStoragePolicy implements org.apache.hadoop.fs.BlockStoragePolicySpi {
  public static final org.slf4j.Logger LOG;

  private final byte id;

  private final java.lang.String name;

  private final org.apache.hadoop.fs.StorageType[] storageTypes;

  private final org.apache.hadoop.fs.StorageType[] creationFallbacks;

  private final org.apache.hadoop.fs.StorageType[] replicationFallbacks;

  private boolean copyOnCreateFile;

  public org.apache.hadoop.hdfs.protocol.BlockStoragePolicy(byte, java.lang.String, org.apache.hadoop.fs.StorageType[], org.apache.hadoop.fs.StorageType[], org.apache.hadoop.fs.StorageType[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iconst_0
       9: invokespecial #1                  // Method "<init>":(BLjava/lang/String;[Lorg/apache/hadoop/fs/StorageType;[Lorg/apache/hadoop/fs/StorageType;[Lorg/apache/hadoop/fs/StorageType;Z)V
      12: return

  public org.apache.hadoop.hdfs.protocol.BlockStoragePolicy(byte, java.lang.String, org.apache.hadoop.fs.StorageType[], org.apache.hadoop.fs.StorageType[], org.apache.hadoop.fs.StorageType[], boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field id:B
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field creationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field replicationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
      31: aload_0
      32: iload         6
      34: putfield      #8                  // Field copyOnCreateFile:Z
      37: return

  public java.util.List<org.apache.hadoop.fs.StorageType> chooseStorageTypes(short);
    Code:
       0: new           #9                  // class java/util/LinkedList
       3: dup
       4: invokespecial #10                 // Method java/util/LinkedList."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload_3
      14: iload_1
      15: if_icmpge     64
      18: iload         4
      20: aload_0
      21: getfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      24: arraylength
      25: if_icmpge     64
      28: aload_0
      29: getfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      32: iload         4
      34: aaload
      35: invokevirtual #11                 // Method org/apache/hadoop/fs/StorageType.isTransient:()Z
      38: ifne          58
      41: aload_2
      42: aload_0
      43: getfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      46: iload         4
      48: aaload
      49: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: iinc          3, 1
      58: iinc          4, 1
      61: goto          13
      64: aload_0
      65: getfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      68: aload_0
      69: getfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      72: arraylength
      73: iconst_1
      74: isub
      75: aaload
      76: astore        5
      78: aload         5
      80: invokevirtual #11                 // Method org/apache/hadoop/fs/StorageType.isTransient:()Z
      83: ifne          106
      86: iload_3
      87: iload_1
      88: if_icmpge     106
      91: aload_2
      92: aload         5
      94: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      99: pop
     100: iinc          3, 1
     103: goto          86
     106: aload_2
     107: areturn

  public java.util.List<org.apache.hadoop.fs.StorageType> chooseStorageTypes(short, java.lang.Iterable<org.apache.hadoop.fs.StorageType>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #13                 // Method chooseStorageTypes:(SLjava/lang/Iterable;Ljava/util/List;)Ljava/util/List;
       7: areturn

  private java.util.List<org.apache.hadoop.fs.StorageType> chooseStorageTypes(short, java.lang.Iterable<org.apache.hadoop.fs.StorageType>, java.util.List<org.apache.hadoop.fs.StorageType>);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method chooseStorageTypes:(S)Ljava/util/List;
       5: astore        4
       7: aload         4
       9: aload_2
      10: aload_3
      11: invokestatic  #15                 // Method diff:(Ljava/util/List;Ljava/lang/Iterable;Ljava/util/List;)V
      14: aload         4
      16: areturn

  public java.util.List<org.apache.hadoop.fs.StorageType> chooseStorageTypes(short, java.lang.Iterable<org.apache.hadoop.fs.StorageType>, java.util.EnumSet<org.apache.hadoop.fs.StorageType>, boolean);
    Code:
       0: new           #9                  // class java/util/LinkedList
       3: dup
       4: invokespecial #10                 // Method java/util/LinkedList."<init>":()V
       7: astore        5
       9: aload_0
      10: iload_1
      11: aload_2
      12: aload         5
      14: invokespecial #13                 // Method chooseStorageTypes:(SLjava/lang/Iterable;Ljava/util/List;)Ljava/util/List;
      17: astore        6
      19: aload         6
      21: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      26: aload         5
      28: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      33: isub
      34: istore        7
      36: new           #9                  // class java/util/LinkedList
      39: dup
      40: invokespecial #10                 // Method java/util/LinkedList."<init>":()V
      43: astore        8
      45: aload         6
      47: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      52: iconst_1
      53: isub
      54: istore        9
      56: iload         9
      58: iflt          147
      61: aload         6
      63: iload         9
      65: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      70: checkcast     #18                 // class org/apache/hadoop/fs/StorageType
      73: astore        10
      75: aload_3
      76: aload         10
      78: invokevirtual #19                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      81: ifeq          141
      84: iload         4
      86: ifeq          97
      89: aload_0
      90: aload_3
      91: invokevirtual #20                 // Method getCreationFallback:(Ljava/util/EnumSet;)Lorg/apache/hadoop/fs/StorageType;
      94: goto          102
      97: aload_0
      98: aload_3
      99: invokevirtual #21                 // Method getReplicationFallback:(Ljava/util/EnumSet;)Lorg/apache/hadoop/fs/StorageType;
     102: astore        11
     104: aload         11
     106: ifnonnull     129
     109: aload         8
     111: aload         6
     113: iload         9
     115: invokeinterface #22,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     120: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     125: pop
     126: goto          141
     129: aload         6
     131: iload         9
     133: aload         11
     135: invokeinterface #23,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     140: pop
     141: iinc          9, -1
     144: goto          56
     147: aload         6
     149: aload         5
     151: aconst_null
     152: invokestatic  #15                 // Method diff:(Ljava/util/List;Ljava/lang/Iterable;Ljava/util/List;)V
     155: aload         6
     157: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
     162: iload         7
     164: if_icmpge     229
     167: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     170: ldc           #25                 // String Failed to place enough replicas: expected size is {} but only {} storage types can be selected (replication={}, selected={}, unavailable={}, removed={}, policy={})
     172: bipush        7
     174: anewarray     #26                 // class java/lang/Object
     177: dup
     178: iconst_0
     179: iload         7
     181: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     184: aastore
     185: dup
     186: iconst_1
     187: aload         6
     189: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
     194: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     197: aastore
     198: dup
     199: iconst_2
     200: iload_1
     201: invokestatic  #28                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
     204: aastore
     205: dup
     206: iconst_3
     207: aload         6
     209: aastore
     210: dup
     211: iconst_4
     212: aload_3
     213: aastore
     214: dup
     215: iconst_5
     216: aload         8
     218: aastore
     219: dup
     220: bipush        6
     222: aload_0
     223: aastore
     224: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     229: aload         6
     231: areturn

  private static void diff(java.util.List<org.apache.hadoop.fs.StorageType>, java.lang.Iterable<org.apache.hadoop.fs.StorageType>, java.util.List<org.apache.hadoop.fs.StorageType>);
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          70
      16: aload_3
      17: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #18                 // class org/apache/hadoop/fs/StorageType
      25: astore        4
      27: aload_0
      28: aload         4
      30: invokeinterface #33,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      35: istore        5
      37: iload         5
      39: iflt          54
      42: aload_0
      43: iload         5
      45: invokeinterface #22,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      50: pop
      51: goto          67
      54: aload_2
      55: ifnull        67
      58: aload_2
      59: aload         4
      61: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          7
      70: return

  public java.util.List<org.apache.hadoop.fs.StorageType> chooseExcess(short, java.lang.Iterable<org.apache.hadoop.fs.StorageType>);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method chooseStorageTypes:(S)Ljava/util/List;
       5: astore_3
       6: new           #9                  // class java/util/LinkedList
       9: dup
      10: invokespecial #10                 // Method java/util/LinkedList."<init>":()V
      13: astore        4
      15: aload_3
      16: aload_2
      17: aload         4
      19: invokestatic  #15                 // Method diff:(Ljava/util/List;Ljava/lang/Iterable;Ljava/util/List;)V
      22: aload         4
      24: areturn

  public org.apache.hadoop.fs.StorageType getCreationFallback(java.util.EnumSet<org.apache.hadoop.fs.StorageType>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field creationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
       5: invokestatic  #34                 // Method getFallback:(Ljava/util/EnumSet;[Lorg/apache/hadoop/fs/StorageType;)Lorg/apache/hadoop/fs/StorageType;
       8: areturn

  public org.apache.hadoop.fs.StorageType getReplicationFallback(java.util.EnumSet<org.apache.hadoop.fs.StorageType>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field replicationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
       5: invokestatic  #34                 // Method getFallback:(Ljava/util/EnumSet;[Lorg/apache/hadoop/fs/StorageType;)Lorg/apache/hadoop/fs/StorageType;
       8: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:B
       4: invokestatic  #35                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       7: invokevirtual #36                 // Method java/lang/Byte.hashCode:()I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: instanceof    #37                 // class org/apache/hadoop/hdfs/protocol/BlockStoragePolicy
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_1
      21: checkcast     #37                 // class org/apache/hadoop/hdfs/protocol/BlockStoragePolicy
      24: astore_2
      25: aload_0
      26: getfield      #3                  // Field id:B
      29: aload_2
      30: getfield      #3                  // Field id:B
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public java.lang.String toString();
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #41                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #43                 // String {
      19: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #4                  // Field name:Ljava/lang/String;
      26: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #44                 // String :
      31: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #3                  // Field id:B
      38: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #46                 // String , storageTypes=
      43: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      50: invokestatic  #47                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      53: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: ldc           #49                 // String , creationFallbacks=
      58: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #6                  // Field creationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
      65: invokestatic  #47                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      68: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: ldc           #50                 // String , replicationFallbacks=
      73: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: getfield      #7                  // Field replicationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
      80: invokestatic  #47                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      83: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #51                 // String }
      88: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  public byte getId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:B
       4: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.fs.StorageType[] getStorageTypes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
       4: areturn

  public org.apache.hadoop.fs.StorageType[] getCreationFallbacks();
    Code:
       0: aload_0
       1: getfield      #6                  // Field creationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
       4: areturn

  public org.apache.hadoop.fs.StorageType[] getReplicationFallbacks();
    Code:
       0: aload_0
       1: getfield      #7                  // Field replicationFallbacks:[Lorg/apache/hadoop/fs/StorageType;
       4: areturn

  private static org.apache.hadoop.fs.StorageType getFallback(java.util.EnumSet<org.apache.hadoop.fs.StorageType>, org.apache.hadoop.fs.StorageType[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     38
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokevirtual #19                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      26: ifne          32
      29: aload         5
      31: areturn
      32: iinc          4, 1
      35: goto          8
      38: aconst_null
      39: areturn

  public boolean isCopyOnCreateFile();
    Code:
       0: aload_0
       1: getfield      #8                  // Field copyOnCreateFile:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #37                 // class org/apache/hadoop/hdfs/protocol/BlockStoragePolicy
       2: invokestatic  #53                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
