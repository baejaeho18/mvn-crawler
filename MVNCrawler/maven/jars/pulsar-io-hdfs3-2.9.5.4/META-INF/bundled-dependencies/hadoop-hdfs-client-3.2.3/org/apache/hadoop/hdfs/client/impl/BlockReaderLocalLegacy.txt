Compiled from "BlockReaderLocalLegacy.java"
class org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy implements org.apache.hadoop.hdfs.BlockReader {
  private static final org.slf4j.Logger LOG;

  private static final java.util.Map<java.lang.Integer, org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo> localDatanodeInfoMap;

  private final java.io.FileInputStream dataIn;

  private final java.io.FileInputStream checksumIn;

  private int offsetFromChunkBoundary;

  private byte[] skipBuf;

  private java.nio.ByteBuffer slowReadBuff;

  private java.nio.ByteBuffer checksumBuff;

  private org.apache.hadoop.util.DataChecksum checksum;

  private final boolean verifyChecksum;

  private static final org.apache.hadoop.util.DirectBufferPool bufferPool;

  private final int bytesPerChecksum;

  private final int checksumSize;

  private long startOffset;

  private final java.lang.String filename;

  private long blockId;

  static final boolean $assertionsDisabled;

  static org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy newBlockReader(org.apache.hadoop.hdfs.client.impl.DfsClientConf, org.apache.hadoop.security.UserGroupInformation, org.apache.hadoop.conf.Configuration, java.lang.String, org.apache.hadoop.hdfs.protocol.ExtendedBlock, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeInfo, long, long, org.apache.hadoop.fs.StorageType) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf.getShortCircuitConf:()Lorg/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf;
       4: astore        12
       6: aload         6
       8: invokevirtual #3                  // Method org/apache/hadoop/hdfs/protocol/DatanodeInfo.getIpcPort:()I
      11: invokestatic  #4                  // Method getLocalDatanodeInfo:(I)Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;
      14: astore        13
      16: aload         13
      18: aload         4
      20: invokestatic  #5                  // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo.access$100:(Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;
      23: astore        14
      25: aload         14
      27: ifnonnull     61
      30: aload_1
      31: ifnonnull     38
      34: invokestatic  #6                  // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      37: astore_1
      38: aload_1
      39: aload         4
      41: aload         6
      43: aload_2
      44: aload_0
      45: invokevirtual #7                  // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf.getSocketTimeout:()I
      48: aload         5
      50: aload_0
      51: invokevirtual #8                  // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf.isConnectToDnViaHostname:()Z
      54: aload         11
      56: invokestatic  #9                  // Method getBlockPathInfo:(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/conf/Configuration;ILorg/apache/hadoop/security/token/Token;ZLorg/apache/hadoop/fs/StorageType;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;
      59: astore        14
      61: aconst_null
      62: astore        15
      64: aconst_null
      65: astore        16
      67: aconst_null
      68: astore        17
      70: aload         12
      72: invokevirtual #10                 // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf.isSkipShortCircuitChecksums:()Z
      75: ifne          86
      78: aload         11
      80: invokevirtual #11                 // Method org/apache/hadoop/fs/StorageType.isTransient:()Z
      83: ifeq          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: istore        18
      93: new           #12                 // class java/io/File
      96: dup
      97: aload         14
      99: invokevirtual #13                 // Method org/apache/hadoop/hdfs/protocol/BlockLocalPathInfo.getBlockPath:()Ljava/lang/String;
     102: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     105: astore        19
     107: new           #15                 // class java/io/FileInputStream
     110: dup
     111: aload         19
     113: invokespecial #16                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
     116: astore        15
     118: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     121: ldc           #17                 // String New BlockReaderLocalLegacy for file {} of size {} startOffset {} length {} short circuit checksum {}
     123: iconst_5
     124: anewarray     #18                 // class java/lang/Object
     127: dup
     128: iconst_0
     129: aload         19
     131: aastore
     132: dup
     133: iconst_1
     134: aload         19
     136: invokevirtual #19                 // Method java/io/File.length:()J
     139: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     142: aastore
     143: dup
     144: iconst_2
     145: lload         7
     147: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     150: aastore
     151: dup
     152: iconst_3
     153: lload         9
     155: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     158: aastore
     159: dup
     160: iconst_4
     161: iload         18
     163: ifne          170
     166: iconst_1
     167: goto          171
     170: iconst_0
     171: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     174: aastore
     175: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     180: iload         18
     182: ifne          268
     185: new           #12                 // class java/io/File
     188: dup
     189: aload         14
     191: invokevirtual #23                 // Method org/apache/hadoop/hdfs/protocol/BlockLocalPathInfo.getMetaPath:()Ljava/lang/String;
     194: invokespecial #14                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     197: astore        20
     199: new           #15                 // class java/io/FileInputStream
     202: dup
     203: aload         20
     205: invokespecial #16                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
     208: astore        16
     210: new           #24                 // class java/io/DataInputStream
     213: dup
     214: aload         16
     216: invokespecial #25                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     219: aload         4
     221: invokestatic  #26                 // Method org/apache/hadoop/hdfs/server/datanode/BlockMetadataHeader.readDataChecksum:(Ljava/io/DataInputStream;Ljava/lang/Object;)Lorg/apache/hadoop/util/DataChecksum;
     224: astore        21
     226: lload         7
     228: lload         7
     230: aload         21
     232: invokevirtual #27                 // Method org/apache/hadoop/util/DataChecksum.getBytesPerChecksum:()I
     235: i2l
     236: lrem
     237: lsub
     238: lstore        22
     240: new           #28                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy
     243: dup
     244: aload         12
     246: aload_3
     247: aload         4
     249: lload         7
     251: aload         21
     253: iconst_1
     254: aload         15
     256: lload         22
     258: aload         16
     260: invokespecial #29                 // Method "<init>":(Lorg/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf;Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;JLorg/apache/hadoop/util/DataChecksum;ZLjava/io/FileInputStream;JLjava/io/FileInputStream;)V
     263: astore        17
     265: goto          286
     268: new           #28                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy
     271: dup
     272: aload         12
     274: aload_3
     275: aload         4
     277: lload         7
     279: aload         15
     281: invokespecial #30                 // Method "<init>":(Lorg/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf;Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;JLjava/io/FileInputStream;)V
     284: astore        17
     286: aload         17
     288: ifnonnull     402
     291: aload         15
     293: ifnull        301
     296: aload         15
     298: invokevirtual #31                 // Method java/io/FileInputStream.close:()V
     301: aload         16
     303: ifnull        402
     306: aload         16
     308: invokevirtual #31                 // Method java/io/FileInputStream.close:()V
     311: goto          402
     314: astore        19
     316: aload         13
     318: aload         4
     320: invokestatic  #33                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo.access$200:(Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)V
     323: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     326: new           #34                 // class java/lang/StringBuilder
     329: dup
     330: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     333: ldc           #36                 // String BlockReaderLocalLegacy: Removing
     335: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     338: aload         4
     340: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     343: ldc           #39                 // String  from cache because local file
     345: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     348: aload         14
     350: invokevirtual #13                 // Method org/apache/hadoop/hdfs/protocol/BlockLocalPathInfo.getBlockPath:()Ljava/lang/String;
     353: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     356: ldc           #40                 // String  could not be opened.
     358: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     361: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     364: invokeinterface #42,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     369: aload         19
     371: athrow
     372: astore        24
     374: aload         17
     376: ifnonnull     399
     379: aload         15
     381: ifnull        389
     384: aload         15
     386: invokevirtual #31                 // Method java/io/FileInputStream.close:()V
     389: aload         16
     391: ifnull        399
     394: aload         16
     396: invokevirtual #31                 // Method java/io/FileInputStream.close:()V
     399: aload         24
     401: athrow
     402: aload         17
     404: areturn
    Exception table:
       from    to  target type
          93   286   314   Class java/io/IOException
          93   286   372   any
         314   374   372   any

  private static synchronized org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo getLocalDatanodeInfo(int);
    Code:
       0: getstatic     #43                 // Field localDatanodeInfoMap:Ljava/util/Map;
       3: iload_0
       4: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #46                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo
      15: astore_1
      16: aload_1
      17: ifnonnull     42
      20: new           #46                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo
      23: dup
      24: invokespecial #47                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo."<init>":()V
      27: astore_1
      28: getstatic     #43                 // Field localDatanodeInfoMap:Ljava/util/Map;
      31: iload_0
      32: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aload_1
      36: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_1
      43: areturn

  private static org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo getBlockPathInfo(org.apache.hadoop.security.UserGroupInformation, org.apache.hadoop.hdfs.protocol.ExtendedBlock, org.apache.hadoop.hdfs.protocol.DatanodeInfo, org.apache.hadoop.conf.Configuration, int, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, boolean, org.apache.hadoop.fs.StorageType) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #3                  // Method org/apache/hadoop/hdfs/protocol/DatanodeInfo.getIpcPort:()I
       4: invokestatic  #4                  // Method getLocalDatanodeInfo:(I)Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;
       7: astore        8
       9: aload         8
      11: aload_0
      12: aload_2
      13: aload_3
      14: iload         4
      16: iload         6
      18: invokestatic  #49                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo.access$300:(Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/conf/Configuration;IZ)Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
      21: astore        10
      23: aload         10
      25: aload_1
      26: aload         5
      28: invokeinterface #50,  3           // InterfaceMethod org/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol.getBlockLocalPathInfo:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/security/token/Token;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;
      33: astore        9
      35: aload         9
      37: ifnull        69
      40: aload         7
      42: invokevirtual #11                 // Method org/apache/hadoop/fs/StorageType.isTransient:()Z
      45: ifne          69
      48: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      51: ldc           #51                 // String Cached location of block {} as {}
      53: aload_1
      54: aload         9
      56: invokeinterface #52,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      61: aload         8
      63: aload_1
      64: aload         9
      66: invokestatic  #53                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo.access$400:(Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;)V
      69: goto          82
      72: astore        11
      74: aload         8
      76: invokestatic  #54                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo.access$500:(Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;)V
      79: aload         11
      81: athrow
      82: aload         9
      84: areturn
    Exception table:
       from    to  target type
          23    69    72   Class java/io/IOException

  private static int getSlowReadBufferNumChunks(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmpge     56
       5: new           #55                 // class java/lang/IllegalArgumentException
       8: dup
       9: new           #34                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #56                 // String Configured BlockReaderLocalLegacy buffer size (
      18: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_0
      22: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #58                 // String ) is not large enough to hold a single chunk (
      27: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #59                 // String ). Please configure
      36: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #61                 // String dfs.client.read.shortcircuit.buffer.size
      41: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #62                 // String  appropriately
      46: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iload_0
      57: iload_1
      58: idiv
      59: ireturn

  private org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy(org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf, java.lang.String, org.apache.hadoop.hdfs.protocol.ExtendedBlock, long, java.io.FileInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lload         4
       6: getstatic     #64                 // Field org/apache/hadoop/util/DataChecksum$Type.NULL:Lorg/apache/hadoop/util/DataChecksum$Type;
       9: iconst_4
      10: invokestatic  #65                 // Method org/apache/hadoop/util/DataChecksum.newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      13: iconst_0
      14: aload         6
      16: lload         4
      18: aconst_null
      19: invokespecial #29                 // Method "<init>":(Lorg/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf;Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;JLorg/apache/hadoop/util/DataChecksum;ZLjava/io/FileInputStream;JLjava/io/FileInputStream;)V
      22: return

  private org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy(org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf, java.lang.String, org.apache.hadoop.hdfs.protocol.ExtendedBlock, long, org.apache.hadoop.util.DataChecksum, boolean, java.io.FileInputStream, long, java.io.FileInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #66                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #67                 // Field skipBuf:[B
       9: aload_0
      10: aconst_null
      11: putfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      14: aload_0
      15: aconst_null
      16: putfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
      19: aload_0
      20: aload_2
      21: putfield      #70                 // Field filename:Ljava/lang/String;
      24: aload_0
      25: aload         6
      27: putfield      #71                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
      30: aload_0
      31: iload         7
      33: putfield      #72                 // Field verifyChecksum:Z
      36: aload_0
      37: lload         4
      39: lconst_0
      40: invokestatic  #73                 // Method java/lang/Math.max:(JJ)J
      43: putfield      #74                 // Field startOffset:J
      46: aload_0
      47: aload_3
      48: invokevirtual #75                 // Method org/apache/hadoop/hdfs/protocol/ExtendedBlock.getBlockId:()J
      51: putfield      #76                 // Field blockId:J
      54: aload_0
      55: aload_0
      56: getfield      #71                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
      59: invokevirtual #27                 // Method org/apache/hadoop/util/DataChecksum.getBytesPerChecksum:()I
      62: putfield      #77                 // Field bytesPerChecksum:I
      65: aload_0
      66: aload_0
      67: getfield      #71                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
      70: invokevirtual #78                 // Method org/apache/hadoop/util/DataChecksum.getChecksumSize:()I
      73: putfield      #79                 // Field checksumSize:I
      76: aload_0
      77: aload         8
      79: putfield      #80                 // Field dataIn:Ljava/io/FileInputStream;
      82: aload_0
      83: aload         11
      85: putfield      #81                 // Field checksumIn:Ljava/io/FileInputStream;
      88: aload_0
      89: lload         4
      91: lload         9
      93: lsub
      94: l2i
      95: putfield      #82                 // Field offsetFromChunkBoundary:I
      98: aload_1
      99: invokevirtual #83                 // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf.getShortCircuitBufferSize:()I
     102: aload_0
     103: getfield      #77                 // Field bytesPerChecksum:I
     106: invokestatic  #84                 // Method getSlowReadBufferNumChunks:(II)I
     109: istore        12
     111: aload_0
     112: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
     115: aload_0
     116: getfield      #77                 // Field bytesPerChecksum:I
     119: iload         12
     121: imul
     122: invokevirtual #86                 // Method org/apache/hadoop/util/DirectBufferPool.getBuffer:(I)Ljava/nio/ByteBuffer;
     125: putfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     128: aload_0
     129: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
     132: aload_0
     133: getfield      #79                 // Field checksumSize:I
     136: iload         12
     138: imul
     139: invokevirtual #86                 // Method org/apache/hadoop/util/DirectBufferPool.getBuffer:(I)Ljava/nio/ByteBuffer;
     142: putfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     145: aload_0
     146: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     149: invokevirtual #87                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     152: pop
     153: aload_0
     154: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     157: invokevirtual #87                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     160: pop
     161: iconst_0
     162: istore        13
     164: aload         8
     166: lload         9
     168: invokestatic  #88                 // Method org/apache/hadoop/io/IOUtils.skipFully:(Ljava/io/InputStream;J)V
     171: aload         11
     173: ifnull        199
     176: lload         9
     178: aload_0
     179: getfield      #77                 // Field bytesPerChecksum:I
     182: i2l
     183: ldiv
     184: aload_0
     185: getfield      #79                 // Field checksumSize:I
     188: i2l
     189: lmul
     190: lstore        14
     192: aload         11
     194: lload         14
     196: invokestatic  #88                 // Method org/apache/hadoop/io/IOUtils.skipFully:(Ljava/io/InputStream;J)V
     199: iconst_1
     200: istore        13
     202: iload         13
     204: ifne          260
     207: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
     210: aload_0
     211: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     214: invokevirtual #89                 // Method org/apache/hadoop/util/DirectBufferPool.returnBuffer:(Ljava/nio/ByteBuffer;)V
     217: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
     220: aload_0
     221: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     224: invokevirtual #89                 // Method org/apache/hadoop/util/DirectBufferPool.returnBuffer:(Ljava/nio/ByteBuffer;)V
     227: goto          260
     230: astore        16
     232: iload         13
     234: ifne          257
     237: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
     240: aload_0
     241: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     244: invokevirtual #89                 // Method org/apache/hadoop/util/DirectBufferPool.returnBuffer:(Ljava/nio/ByteBuffer;)V
     247: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
     250: aload_0
     251: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     254: invokevirtual #89                 // Method org/apache/hadoop/util/DirectBufferPool.returnBuffer:(Ljava/nio/ByteBuffer;)V
     257: aload         16
     259: athrow
     260: return
    Exception table:
       from    to  target type
         164   202   230   any
         230   232   230   any

  private int fillBuffer(java.io.FileInputStream, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #90                 // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
       4: aload_2
       5: invokevirtual #91                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
       8: istore_3
       9: iload_3
      10: ifge          15
      13: iload_3
      14: ireturn
      15: aload_2
      16: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      19: ifle          47
      22: aload_1
      23: invokevirtual #90                 // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      26: aload_2
      27: invokevirtual #91                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      30: istore        4
      32: iload         4
      34: ifge          39
      37: iload_3
      38: ireturn
      39: iload_3
      40: iload         4
      42: iadd
      43: istore_3
      44: goto          15
      47: iload_3
      48: ireturn

  private void writeSlice(java.nio.ByteBuffer, java.nio.ByteBuffer, int);
    Code:
       0: aload_1
       1: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
       4: istore        4
       6: aload_1
       7: aload_1
       8: invokevirtual #94                 // Method java/nio/ByteBuffer.position:()I
      11: iload_3
      12: iadd
      13: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      16: pop
      17: aload_2
      18: aload_1
      19: invokevirtual #96                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      22: pop
      23: aload_1
      24: iload         4
      26: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      29: pop
      30: goto          45
      33: astore        5
      35: aload_1
      36: iload         4
      38: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      41: pop
      42: aload         5
      44: athrow
      45: return
    Exception table:
       from    to  target type
          17    23    33   any
          33    35    33   any

  public synchronized int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #72                 // Field verifyChecksum:Z
       6: ifeq          254
       9: aload_0
      10: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      13: invokevirtual #97                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          48
      19: aload_1
      20: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      23: aload_0
      24: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      27: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      30: invokestatic  #98                 // Method java/lang/Math.min:(II)I
      33: istore_3
      34: aload_0
      35: aload_0
      36: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      39: aload_1
      40: iload_3
      41: invokespecial #99                 // Method writeSlice:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)V
      44: iload_2
      45: iload_3
      46: iadd
      47: istore_2
      48: aload_1
      49: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      52: aload_0
      53: getfield      #77                 // Field bytesPerChecksum:I
      56: if_icmplt     167
      59: aload_0
      60: getfield      #82                 // Field offsetFromChunkBoundary:I
      63: ifne          167
      66: aload_1
      67: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      70: aload_1
      71: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      74: aload_0
      75: getfield      #77                 // Field bytesPerChecksum:I
      78: irem
      79: isub
      80: istore_3
      81: iload_3
      82: aload_0
      83: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      86: invokevirtual #100                // Method java/nio/ByteBuffer.capacity:()I
      89: invokestatic  #98                 // Method java/lang/Math.min:(II)I
      92: istore_3
      93: aload_1
      94: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
      97: istore        4
      99: aload_1
     100: aload_1
     101: invokevirtual #94                 // Method java/nio/ByteBuffer.position:()I
     104: iload_3
     105: iadd
     106: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     109: pop
     110: iconst_0
     111: istore        5
     113: aload_0
     114: aload_1
     115: invokespecial #101                // Method doByteBufferRead:(Ljava/nio/ByteBuffer;)I
     118: istore        5
     120: aload_1
     121: iload         4
     123: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     126: pop
     127: goto          142
     130: astore        6
     132: aload_1
     133: iload         4
     135: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     138: pop
     139: aload         6
     141: athrow
     142: iload         5
     144: iconst_m1
     145: if_icmpne     150
     148: iload_2
     149: ireturn
     150: iload_2
     151: iload         5
     153: iadd
     154: istore_2
     155: aload_1
     156: aload_1
     157: invokevirtual #94                 // Method java/nio/ByteBuffer.position:()I
     160: iload         5
     162: iadd
     163: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     166: pop
     167: aload_1
     168: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
     171: ifle          185
     174: aload_1
     175: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
     178: aload_0
     179: getfield      #77                 // Field bytesPerChecksum:I
     182: if_icmplt     192
     185: aload_0
     186: getfield      #82                 // Field offsetFromChunkBoundary:I
     189: ifle          275
     192: aload_1
     193: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
     196: aload_0
     197: getfield      #77                 // Field bytesPerChecksum:I
     200: aload_0
     201: getfield      #82                 // Field offsetFromChunkBoundary:I
     204: isub
     205: invokestatic  #98                 // Method java/lang/Math.min:(II)I
     208: istore_3
     209: aload_0
     210: iload_3
     211: invokespecial #103                // Method fillSlowReadBuffer:(I)I
     214: istore        4
     216: iload         4
     218: iconst_m1
     219: if_icmpne     224
     222: iload_2
     223: ireturn
     224: iload         4
     226: aload_1
     227: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
     230: invokestatic  #98                 // Method java/lang/Math.min:(II)I
     233: istore        5
     235: aload_0
     236: aload_0
     237: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     240: aload_1
     241: iload         5
     243: invokespecial #99                 // Method writeSlice:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)V
     246: iload_2
     247: iload         5
     249: iadd
     250: istore_2
     251: goto          275
     254: aload_0
     255: aload_1
     256: invokespecial #101                // Method doByteBufferRead:(Ljava/nio/ByteBuffer;)I
     259: istore_2
     260: iload_2
     261: ifle          275
     264: aload_1
     265: aload_1
     266: invokevirtual #94                 // Method java/nio/ByteBuffer.position:()I
     269: iload_2
     270: iadd
     271: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     274: pop
     275: iload_2
     276: ireturn
    Exception table:
       from    to  target type
         113   120   130   any
         130   132   130   any

  private synchronized int doByteBufferRead(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #72                 // Field verifyChecksum:Z
       4: ifeq          33
       7: getstatic     #104                // Field $assertionsDisabled:Z
      10: ifne          33
      13: aload_1
      14: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      17: aload_0
      18: getfield      #77                 // Field bytesPerChecksum:I
      21: irem
      22: ifeq          33
      25: new           #105                // class java/lang/AssertionError
      28: dup
      29: invokespecial #106                // Method java/lang/AssertionError."<init>":()V
      32: athrow
      33: aload_1
      34: invokevirtual #94                 // Method java/nio/ByteBuffer.position:()I
      37: istore_3
      38: aload_0
      39: aload_0
      40: getfield      #80                 // Field dataIn:Ljava/io/FileInputStream;
      43: aload_1
      44: invokespecial #107                // Method fillBuffer:(Ljava/io/FileInputStream;Ljava/nio/ByteBuffer;)I
      47: istore_2
      48: iload_2
      49: iconst_m1
      50: if_icmpne     55
      53: iconst_m1
      54: ireturn
      55: aload_0
      56: getfield      #72                 // Field verifyChecksum:Z
      59: ifeq          168
      62: aload_1
      63: invokevirtual #108                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      66: astore        4
      68: aload         4
      70: iload_3
      71: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      74: pop
      75: aload         4
      77: iload_3
      78: iload_2
      79: iadd
      80: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      83: pop
      84: aload_0
      85: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
      88: invokevirtual #109                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      91: pop
      92: aload         4
      94: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      97: aload_0
      98: getfield      #77                 // Field bytesPerChecksum:I
     101: iadd
     102: iconst_1
     103: isub
     104: aload_0
     105: getfield      #77                 // Field bytesPerChecksum:I
     108: idiv
     109: istore        5
     111: aload_0
     112: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     115: aload_0
     116: getfield      #79                 // Field checksumSize:I
     119: iload         5
     121: imul
     122: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     125: pop
     126: aload_0
     127: aload_0
     128: getfield      #81                 // Field checksumIn:Ljava/io/FileInputStream;
     131: aload_0
     132: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     135: invokespecial #107                // Method fillBuffer:(Ljava/io/FileInputStream;Ljava/nio/ByteBuffer;)I
     138: pop
     139: aload_0
     140: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     143: invokevirtual #87                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     146: pop
     147: aload_0
     148: getfield      #71                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
     151: aload         4
     153: aload_0
     154: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     157: aload_0
     158: getfield      #70                 // Field filename:Ljava/lang/String;
     161: aload_0
     162: getfield      #74                 // Field startOffset:J
     165: invokevirtual #110                // Method org/apache/hadoop/util/DataChecksum.verifyChunkedSums:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/lang/String;J)V
     168: iload_2
     169: iflt          187
     172: aload_1
     173: iload_3
     174: aload_0
     175: getfield      #82                 // Field offsetFromChunkBoundary:I
     178: iload_2
     179: invokestatic  #98                 // Method java/lang/Math.min:(II)I
     182: iadd
     183: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     186: pop
     187: iload_2
     188: aload_0
     189: getfield      #82                 // Field offsetFromChunkBoundary:I
     192: if_icmpge     210
     195: aload_0
     196: dup
     197: getfield      #82                 // Field offsetFromChunkBoundary:I
     200: iload_2
     201: isub
     202: putfield      #82                 // Field offsetFromChunkBoundary:I
     205: iconst_0
     206: istore_2
     207: goto          222
     210: iload_2
     211: aload_0
     212: getfield      #82                 // Field offsetFromChunkBoundary:I
     215: isub
     216: istore_2
     217: aload_0
     218: iconst_0
     219: putfield      #82                 // Field offsetFromChunkBoundary:I
     222: iload_2
     223: ireturn

  private synchronized int fillSlowReadBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
       4: invokevirtual #97                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          25
      10: iload_1
      11: aload_0
      12: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      15: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      18: invokestatic  #98                 // Method java/lang/Math.min:(II)I
      21: istore_2
      22: goto          134
      25: iload_1
      26: aload_0
      27: getfield      #82                 // Field offsetFromChunkBoundary:I
      30: iadd
      31: aload_0
      32: getfield      #77                 // Field bytesPerChecksum:I
      35: iload_1
      36: aload_0
      37: getfield      #82                 // Field offsetFromChunkBoundary:I
      40: iadd
      41: aload_0
      42: getfield      #77                 // Field bytesPerChecksum:I
      45: irem
      46: isub
      47: iadd
      48: istore_3
      49: iload_3
      50: aload_0
      51: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      54: invokevirtual #100                // Method java/nio/ByteBuffer.capacity:()I
      57: invokestatic  #98                 // Method java/lang/Math.min:(II)I
      60: istore        4
      62: getstatic     #104                // Field $assertionsDisabled:Z
      65: ifne          86
      68: iload         4
      70: aload_0
      71: getfield      #77                 // Field bytesPerChecksum:I
      74: irem
      75: ifeq          86
      78: new           #105                // class java/lang/AssertionError
      81: dup
      82: invokespecial #106                // Method java/lang/AssertionError."<init>":()V
      85: athrow
      86: aload_0
      87: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      90: invokevirtual #109                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      93: pop
      94: aload_0
      95: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      98: iload         4
     100: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     103: pop
     104: aload_0
     105: aload_0
     106: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     109: invokespecial #101                // Method doByteBufferRead:(Ljava/nio/ByteBuffer;)I
     112: istore_2
     113: iload_2
     114: ifle          134
     117: aload_0
     118: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     121: iload_2
     122: aload_0
     123: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     126: invokevirtual #94                 // Method java/nio/ByteBuffer.position:()I
     129: iadd
     130: invokevirtual #95                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     133: pop
     134: iload_2
     135: ireturn

  public synchronized int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #111                // String read off {} len {}
       5: iload_2
       6: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: iload_3
      10: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokeinterface #112,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #72                 // Field verifyChecksum:Z
      22: ifne          36
      25: aload_0
      26: getfield      #80                 // Field dataIn:Ljava/io/FileInputStream;
      29: aload_1
      30: iload_2
      31: iload_3
      32: invokevirtual #113                // Method java/io/FileInputStream.read:([BII)I
      35: ireturn
      36: aload_0
      37: aload_0
      38: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      41: invokevirtual #100                // Method java/nio/ByteBuffer.capacity:()I
      44: invokespecial #103                // Method fillSlowReadBuffer:(I)I
      47: istore        4
      49: iload         4
      51: ifle          74
      54: iload_3
      55: iload         4
      57: invokestatic  #98                 // Method java/lang/Math.min:(II)I
      60: istore        4
      62: aload_0
      63: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      66: aload_1
      67: iload_2
      68: iload         4
      70: invokevirtual #114                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      73: pop
      74: iload         4
      76: ireturn

  public synchronized long skip(long) throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #115                // String skip {}
       5: lload_1
       6: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokeinterface #116,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      14: lload_1
      15: lconst_0
      16: lcmp
      17: ifgt          22
      20: lconst_0
      21: lreturn
      22: aload_0
      23: getfield      #72                 // Field verifyChecksum:Z
      26: ifne          38
      29: aload_0
      30: getfield      #80                 // Field dataIn:Ljava/io/FileInputStream;
      33: lload_1
      34: invokevirtual #117                // Method java/io/FileInputStream.skip:(J)J
      37: lreturn
      38: aload_0
      39: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      42: invokevirtual #92                 // Method java/nio/ByteBuffer.remaining:()I
      45: istore_3
      46: aload_0
      47: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      50: invokevirtual #94                 // Method java/nio/ByteBuffer.position:()I
      53: istore        4
      55: iload         4
      57: lload_1
      58: l2i
      59: iadd
      60: istore        5
      62: lload_1
      63: iload_3
      64: i2l
      65: lcmp
      66: ifgt          102
      69: getstatic     #104                // Field $assertionsDisabled:Z
      72: ifne          90
      75: aload_0
      76: getfield      #82                 // Field offsetFromChunkBoundary:I
      79: ifeq          90
      82: new           #105                // class java/lang/AssertionError
      85: dup
      86: invokespecial #106                // Method java/lang/AssertionError."<init>":()V
      89: athrow
      90: aload_0
      91: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      94: iload         5
      96: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      99: pop
     100: lload_1
     101: lreturn
     102: lload_1
     103: iload_3
     104: i2l
     105: lsub
     106: aload_0
     107: getfield      #77                 // Field bytesPerChecksum:I
     110: i2l
     111: lcmp
     112: ifgt          166
     115: aload_0
     116: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     119: iload         4
     121: iload_3
     122: iadd
     123: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     126: pop
     127: aload_0
     128: getfield      #67                 // Field skipBuf:[B
     131: ifnonnull     144
     134: aload_0
     135: aload_0
     136: getfield      #77                 // Field bytesPerChecksum:I
     139: newarray       byte
     141: putfield      #67                 // Field skipBuf:[B
     144: aload_0
     145: aload_0
     146: getfield      #67                 // Field skipBuf:[B
     149: iconst_0
     150: lload_1
     151: iload_3
     152: i2l
     153: lsub
     154: l2i
     155: invokevirtual #118                // Method read:([BII)I
     158: istore        6
     160: iload_3
     161: iload         6
     163: iadd
     164: i2l
     165: lreturn
     166: iload         5
     168: aload_0
     169: getfield      #77                 // Field bytesPerChecksum:I
     172: irem
     173: istore        6
     175: lload_1
     176: iload_3
     177: i2l
     178: lsub
     179: iload         6
     181: i2l
     182: lsub
     183: lstore        7
     185: aload_0
     186: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     189: aload_0
     190: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
     193: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
     196: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     199: pop
     200: aload_0
     201: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     204: aload_0
     205: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
     208: invokevirtual #93                 // Method java/nio/ByteBuffer.limit:()I
     211: invokevirtual #102                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     214: pop
     215: aload_0
     216: getfield      #80                 // Field dataIn:Ljava/io/FileInputStream;
     219: lload         7
     221: invokestatic  #88                 // Method org/apache/hadoop/io/IOUtils.skipFully:(Ljava/io/InputStream;J)V
     224: lload         7
     226: aload_0
     227: getfield      #77                 // Field bytesPerChecksum:I
     230: i2l
     231: ldiv
     232: aload_0
     233: getfield      #79                 // Field checksumSize:I
     236: i2l
     237: lmul
     238: lstore        9
     240: aload_0
     241: getfield      #81                 // Field checksumIn:Ljava/io/FileInputStream;
     244: lload         9
     246: invokestatic  #88                 // Method org/apache/hadoop/io/IOUtils.skipFully:(Ljava/io/InputStream;J)V
     249: aload_0
     250: getfield      #67                 // Field skipBuf:[B
     253: ifnonnull     266
     256: aload_0
     257: aload_0
     258: getfield      #77                 // Field bytesPerChecksum:I
     261: newarray       byte
     263: putfield      #67                 // Field skipBuf:[B
     266: getstatic     #104                // Field $assertionsDisabled:Z
     269: ifne          292
     272: aload_0
     273: getfield      #67                 // Field skipBuf:[B
     276: arraylength
     277: aload_0
     278: getfield      #77                 // Field bytesPerChecksum:I
     281: if_icmpeq     292
     284: new           #105                // class java/lang/AssertionError
     287: dup
     288: invokespecial #106                // Method java/lang/AssertionError."<init>":()V
     291: athrow
     292: getstatic     #104                // Field $assertionsDisabled:Z
     295: ifne          315
     298: iload         6
     300: aload_0
     301: getfield      #77                 // Field bytesPerChecksum:I
     304: if_icmplt     315
     307: new           #105                // class java/lang/AssertionError
     310: dup
     311: invokespecial #106                // Method java/lang/AssertionError."<init>":()V
     314: athrow
     315: aload_0
     316: aload_0
     317: getfield      #67                 // Field skipBuf:[B
     320: iconst_0
     321: iload         6
     323: invokevirtual #118                // Method read:([BII)I
     326: istore        11
     328: iload         11
     330: iconst_m1
     331: if_icmpne     340
     334: lload         7
     336: iload_3
     337: i2l
     338: ladd
     339: lreturn
     340: lload         7
     342: iload_3
     343: i2l
     344: ladd
     345: iload         11
     347: i2l
     348: ladd
     349: lreturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: iconst_2
       4: anewarray     #119                // class java/io/Closeable
       7: dup
       8: iconst_0
       9: aload_0
      10: getfield      #80                 // Field dataIn:Ljava/io/FileInputStream;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #81                 // Field checksumIn:Ljava/io/FileInputStream;
      20: aastore
      21: invokestatic  #120                // Method org/apache/hadoop/hdfs/util/IOUtilsClient.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      24: aload_0
      25: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      28: ifnull        46
      31: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
      34: aload_0
      35: getfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      38: invokevirtual #89                 // Method org/apache/hadoop/util/DirectBufferPool.returnBuffer:(Ljava/nio/ByteBuffer;)V
      41: aload_0
      42: aconst_null
      43: putfield      #68                 // Field slowReadBuff:Ljava/nio/ByteBuffer;
      46: aload_0
      47: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
      50: ifnull        68
      53: getstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
      56: aload_0
      57: getfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
      60: invokevirtual #89                 // Method org/apache/hadoop/util/DirectBufferPool.returnBuffer:(Ljava/nio/ByteBuffer;)V
      63: aload_0
      64: aconst_null
      65: putfield      #69                 // Field checksumBuff:Ljava/nio/ByteBuffer;
      68: aload_0
      69: ldc2_w        #121                // long -1l
      72: putfield      #74                 // Field startOffset:J
      75: aload_0
      76: aconst_null
      77: putfield      #71                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
      80: return

  public int readAll(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #123                // Method org/apache/hadoop/hdfs/client/impl/BlockReaderUtil.readAll:(Lorg/apache/hadoop/hdfs/BlockReader;[BII)I
       7: ireturn

  public void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #124                // Method org/apache/hadoop/hdfs/client/impl/BlockReaderUtil.readFully:(Lorg/apache/hadoop/hdfs/BlockReader;[BII)V
       7: return

  public int available();
    Code:
       0: ldc           #126                // int 2147483647
       2: ireturn

  public boolean isShortCircuit();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.hadoop.hdfs.shortcircuit.ClientMmap getClientMmap(java.util.EnumSet<org.apache.hadoop.fs.ReadOption>);
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.util.DataChecksum getDataChecksum();
    Code:
       0: aload_0
       1: getfield      #71                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
       4: areturn

  public int getNetworkDistance();
    Code:
       0: iconst_0
       1: ireturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #28                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy
       2: invokevirtual #127                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #104                // Field $assertionsDisabled:Z
      16: ldc           #28                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy
      18: invokestatic  #128                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      24: new           #129                // class java/util/HashMap
      27: dup
      28: invokespecial #130                // Method java/util/HashMap."<init>":()V
      31: putstatic     #43                 // Field localDatanodeInfoMap:Ljava/util/Map;
      34: new           #131                // class org/apache/hadoop/util/DirectBufferPool
      37: dup
      38: invokespecial #132                // Method org/apache/hadoop/util/DirectBufferPool."<init>":()V
      41: putstatic     #85                 // Field bufferPool:Lorg/apache/hadoop/util/DirectBufferPool;
      44: return
}
