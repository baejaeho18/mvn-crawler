Compiled from "HdfsNamedFileStatus.java"
public class org.apache.hadoop.hdfs.protocol.HdfsNamedFileStatus extends org.apache.hadoop.fs.FileStatus implements org.apache.hadoop.hdfs.protocol.HdfsFileStatus {
  private byte[] uPath;

  private byte[] uSymlink;

  private final long fileId;

  private final org.apache.hadoop.fs.FileEncryptionInfo feInfo;

  private final org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy ecPolicy;

  private final int childrenNum;

  private final byte storagePolicy;

  org.apache.hadoop.hdfs.protocol.HdfsNamedFileStatus(long, boolean, int, long, long, long, org.apache.hadoop.fs.permission.FsPermission, java.util.Set<org.apache.hadoop.hdfs.protocol.HdfsFileStatus$Flags>, java.lang.String, java.lang.String, byte[], byte[], long, int, org.apache.hadoop.fs.FileEncryptionInfo, byte, org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: lload         5
       7: lload         7
       9: lload         9
      11: iload_3
      12: aload         15
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: aload         11
      24: aload         12
      26: invokestatic  #1                  // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.convert:(ZZLorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/Set;)Lorg/apache/hadoop/fs/permission/FsPermission;
      29: aload         13
      31: aload         14
      33: aconst_null
      34: aconst_null
      35: aload         12
      37: invokestatic  #2                  // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.convert:(Ljava/util/Set;)Ljava/util/Set;
      40: invokespecial #3                  // Method org/apache/hadoop/fs/FileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/Set;)V
      43: aload_0
      44: aload         15
      46: putfield      #4                  // Field uSymlink:[B
      49: aload_0
      50: aload         16
      52: putfield      #5                  // Field uPath:[B
      55: aload_0
      56: lload         17
      58: putfield      #6                  // Field fileId:J
      61: aload_0
      62: iload         19
      64: putfield      #7                  // Field childrenNum:I
      67: aload_0
      68: aload         20
      70: putfield      #8                  // Field feInfo:Lorg/apache/hadoop/fs/FileEncryptionInfo;
      73: aload_0
      74: iload         21
      76: putfield      #9                  // Field storagePolicy:B
      79: aload_0
      80: aload         22
      82: putfield      #10                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      85: return

  public void setOwner(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method org/apache/hadoop/fs/FileStatus.setOwner:(Ljava/lang/String;)V
       5: return

  public void setGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method org/apache/hadoop/fs/FileStatus.setOwner:(Ljava/lang/String;)V
       5: return

  public boolean isSymlink();
    Code:
       0: aload_0
       1: getfield      #4                  // Field uSymlink:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.hadoop.fs.Path getSymlink() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isSymlink:()Z
       4: ifeq          22
       7: new           #13                 // class org/apache/hadoop/fs/Path
      10: dup
      11: aload_0
      12: invokevirtual #14                 // Method getSymlinkInBytes:()[B
      15: invokestatic  #15                 // Method org/apache/hadoop/hdfs/DFSUtilClient.bytes2String:([B)Ljava/lang/String;
      18: invokespecial #16                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      21: areturn
      22: new           #17                 // class java/io/IOException
      25: dup
      26: new           #18                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #20                 // String Path
      35: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #22                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      42: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #24                 // String  is not a symbolic link
      47: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      56: athrow

  public void setPermission(org.apache.hadoop.fs.permission.FsPermission);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method org/apache/hadoop/fs/FileStatus.setPermission:(Lorg/apache/hadoop/fs/permission/FsPermission;)V
       5: return

  public byte[] getLocalNameInBytes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uPath:[B
       4: areturn

  public void setSymlink(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       5: invokestatic  #29                 // Method org/apache/hadoop/hdfs/DFSUtilClient.string2Bytes:(Ljava/lang/String;)[B
       8: putfield      #4                  // Field uSymlink:[B
      11: return

  public byte[] getSymlinkInBytes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field uSymlink:[B
       4: areturn

  public long getFileId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field fileId:J
       4: lreturn

  public org.apache.hadoop.fs.FileEncryptionInfo getFileEncryptionInfo();
    Code:
       0: aload_0
       1: getfield      #8                  // Field feInfo:Lorg/apache/hadoop/fs/FileEncryptionInfo;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy getErasureCodingPolicy();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
       4: areturn

  public int getChildrenNum();
    Code:
       0: aload_0
       1: getfield      #7                  // Field childrenNum:I
       4: ireturn

  public byte getStoragePolicy();
    Code:
       0: aload_0
       1: getfield      #9                  // Field storagePolicy:B
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method org/apache/hadoop/fs/FileStatus.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/apache/hadoop/fs/FileStatus.hashCode:()I
       4: ireturn
}
