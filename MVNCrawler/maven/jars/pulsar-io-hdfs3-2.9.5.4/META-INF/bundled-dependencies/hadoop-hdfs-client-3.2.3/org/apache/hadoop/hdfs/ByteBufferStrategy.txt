Compiled from "ReaderStrategy.java"
class org.apache.hadoop.hdfs.ByteBufferStrategy implements org.apache.hadoop.hdfs.ReaderStrategy {
  private final org.apache.hadoop.hdfs.DFSClient dfsClient;

  private final org.apache.hadoop.hdfs.ReadStatistics readStatistics;

  private final java.nio.ByteBuffer readBuf;

  private final int targetLength;

  org.apache.hadoop.hdfs.ByteBufferStrategy(java.nio.ByteBuffer, org.apache.hadoop.hdfs.ReadStatistics, org.apache.hadoop.hdfs.DFSClient);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      14: putfield      #4                  // Field targetLength:I
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field readStatistics:Lorg/apache/hadoop/hdfs/ReadStatistics;
      22: aload_0
      23: aload_3
      24: putfield      #6                  // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      27: return

  public java.nio.ByteBuffer getReadBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
       4: areturn

  public int readFromBlock(org.apache.hadoop.hdfs.BlockReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
       6: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
       9: invokevirtual #7                  // Method readFromBlock:(Lorg/apache/hadoop/hdfs/BlockReader;I)I
      12: ireturn

  public int readFromBlock(org.apache.hadoop.hdfs.BlockReader, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore_3
       8: aload_3
       9: aload_3
      10: invokevirtual #9                  // Method java/nio/ByteBuffer.position:()I
      13: iload_2
      14: iadd
      15: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: pop
      19: aload_1
      20: aload_3
      21: invokeinterface #11,  2           // InterfaceMethod org/apache/hadoop/hdfs/BlockReader.read:(Ljava/nio/ByteBuffer;)I
      26: istore        4
      28: iload         4
      30: ifle          51
      33: aload_0
      34: getfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
      37: aload_0
      38: getfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
      41: invokevirtual #9                  // Method java/nio/ByteBuffer.position:()I
      44: iload         4
      46: iadd
      47: invokevirtual #12                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      50: pop
      51: iload         4
      53: ireturn

  public int getTargetLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field targetLength:I
       4: ireturn

  public int readFromBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
       6: invokevirtual #13                 // Method readFromBuffer:(Ljava/nio/ByteBuffer;I)I
       9: ireturn

  public int readFromBuffer(java.nio.ByteBuffer, int);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       4: astore_3
       5: aload_0
       6: getfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
       9: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      12: aload_3
      13: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      16: invokestatic  #14                 // Method java/lang/Math.min:(II)I
      19: istore        4
      21: iload         4
      23: iload_2
      24: invokestatic  #14                 // Method java/lang/Math.min:(II)I
      27: istore        4
      29: aload_3
      30: aload_3
      31: invokevirtual #9                  // Method java/nio/ByteBuffer.position:()I
      34: iload         4
      36: iadd
      37: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      40: pop
      41: aload_0
      42: getfield      #2                  // Field readBuf:Ljava/nio/ByteBuffer;
      45: aload_3
      46: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      49: pop
      50: iload         4
      52: ireturn
}
