Compiled from "WebHdfsFileSystem.java"
class org.apache.hadoop.hdfs.web.WebHdfsFileSystem$OffsetUrlOpener extends org.apache.hadoop.hdfs.web.ByteRangeInputStream$URLOpener {
  final org.apache.hadoop.hdfs.web.WebHdfsFileSystem this$0;

  org.apache.hadoop.hdfs.web.WebHdfsFileSystem$OffsetUrlOpener(org.apache.hadoop.hdfs.web.WebHdfsFileSystem, java.net.URL);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method org/apache/hadoop/hdfs/web/ByteRangeInputStream$URLOpener."<init>":(Ljava/net/URL;)V
      10: return

  protected java.net.HttpURLConnection connect(long, boolean) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          13
       6: aload_0
       7: getfield      #3                  // Field url:Ljava/net/URL;
      10: goto          56
      13: new           #4                  // class java/net/URL
      16: dup
      17: new           #5                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      24: aload_0
      25: getfield      #3                  // Field url:Ljava/net/URL;
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #8                  // String &
      33: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: new           #10                 // class org/apache/hadoop/hdfs/web/resources/OffsetParam
      39: dup
      40: lload_1
      41: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      44: invokespecial #12                 // Method org/apache/hadoop/hdfs/web/resources/OffsetParam."<init>":(Ljava/lang/Long;)V
      47: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #14                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
      56: astore        4
      58: new           #15                 // class org/apache/hadoop/hdfs/web/WebHdfsFileSystem$URLRunner
      61: dup
      62: aload_0
      63: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      66: getstatic     #16                 // Field org/apache/hadoop/hdfs/web/resources/GetOpParam$Op.OPEN:Lorg/apache/hadoop/hdfs/web/resources/GetOpParam$Op;
      69: aload         4
      71: iload_3
      72: iconst_1
      73: invokespecial #17                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem$URLRunner."<init>":(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;Ljava/net/URL;ZZ)V
      76: invokevirtual #18                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem$URLRunner.run:()Ljava/lang/Object;
      79: checkcast     #19                 // class java/net/HttpURLConnection
      82: areturn
}
