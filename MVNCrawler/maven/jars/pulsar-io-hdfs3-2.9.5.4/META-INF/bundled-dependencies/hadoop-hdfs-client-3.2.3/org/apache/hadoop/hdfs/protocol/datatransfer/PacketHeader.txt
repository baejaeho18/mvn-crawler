Compiled from "PacketHeader.java"
public class org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader {
  private static final int MAX_PROTO_SIZE;

  public static final int PKT_LENGTHS_LEN;

  public static final int PKT_MAX_HEADER_LEN;

  private int packetLen;

  private org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$PacketHeaderProto proto;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader(int, long, long, boolean, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field packetLen:I
       9: iload_1
      10: iconst_4
      11: if_icmplt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #5                  // String packet len %s should always be at least 4 bytes
      21: iload_1
      22: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      25: invokestatic  #7                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      28: lload_2
      29: invokevirtual #8                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setOffsetInBlock:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      32: lload         4
      34: invokevirtual #9                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setSeqno:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      37: iload         6
      39: invokevirtual #10                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setLastPacketInBlock:(Z)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      42: iload         7
      44: invokevirtual #11                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setDataLen:(I)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      47: astore        9
      49: iload         8
      51: ifeq          61
      54: aload         9
      56: iconst_1
      57: invokevirtual #12                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setSyncBlock:(Z)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      60: pop
      61: aload_0
      62: aload         9
      64: invokevirtual #13                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.build:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      67: putfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      70: return

  public int getDataLen();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       4: invokevirtual #15                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getDataLen:()I
       7: ireturn

  public boolean isLastPacketInBlock();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       4: invokevirtual #16                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getLastPacketInBlock:()Z
       7: ireturn

  public long getSeqno();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       4: invokevirtual #17                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSeqno:()J
       7: lreturn

  public long getOffsetInBlock();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       4: invokevirtual #18                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getOffsetInBlock:()J
       7: lreturn

  public int getPacketLen();
    Code:
       0: aload_0
       1: getfield      #4                  // Field packetLen:I
       4: ireturn

  public boolean getSyncBlock();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       4: invokevirtual #19                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSyncBlock:()Z
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #22                 // String PacketHeader with packetLen=
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field packetLen:I
      16: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #25                 // String  header data:
      21: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      28: invokevirtual #26                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.toString:()Ljava/lang/String;
      31: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public void setFieldsFromData(int, byte[]) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field packetLen:I
       5: aload_0
       6: aload_2
       7: invokestatic  #28                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.parseFrom:([B)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      10: putfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      13: return

  public void readFields(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method java/nio/ByteBuffer.getInt:()I
       5: putfield      #4                  // Field packetLen:I
       8: aload_1
       9: invokevirtual #30                 // Method java/nio/ByteBuffer.getShort:()S
      12: istore_2
      13: iload_2
      14: newarray       byte
      16: astore_3
      17: aload_1
      18: aload_3
      19: invokevirtual #31                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      22: pop
      23: aload_0
      24: aload_3
      25: invokestatic  #28                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.parseFrom:([B)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      28: putfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      31: return

  public void readFields(java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method java/io/DataInputStream.readInt:()I
       5: putfield      #4                  // Field packetLen:I
       8: aload_1
       9: invokevirtual #33                 // Method java/io/DataInputStream.readShort:()S
      12: istore_2
      13: iload_2
      14: newarray       byte
      16: astore_3
      17: aload_1
      18: aload_3
      19: invokevirtual #34                 // Method java/io/DataInputStream.readFully:([B)V
      22: aload_0
      23: aload_3
      24: invokestatic  #28                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.parseFrom:([B)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      27: putfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      30: return

  public int getSerializedSize();
    Code:
       0: bipush        6
       2: aload_0
       3: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       6: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
       9: iadd
      10: ireturn

  public void putInBuffer(java.nio.ByteBuffer);
    Code:
       0: getstatic     #37                 // Field $assertionsDisabled:Z
       3: ifne          63
       6: aload_0
       7: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      10: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
      13: getstatic     #38                 // Field MAX_PROTO_SIZE:I
      16: if_icmple     63
      19: new           #39                 // class java/lang/AssertionError
      22: dup
      23: new           #20                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #40                 // String Expected
      32: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: getstatic     #38                 // Field MAX_PROTO_SIZE:I
      38: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #41                 // String  got:
      43: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      50: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
      53: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #42                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      62: athrow
      63: aload_1
      64: aload_0
      65: getfield      #4                  // Field packetLen:I
      68: invokevirtual #43                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      71: pop
      72: aload_1
      73: aload_0
      74: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      77: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
      80: i2s
      81: invokevirtual #44                 // Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
      84: pop
      85: aload_0
      86: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      89: new           #45                 // class org/apache/hadoop/hdfs/util/ByteBufferOutputStream
      92: dup
      93: aload_1
      94: invokespecial #46                 // Method org/apache/hadoop/hdfs/util/ByteBufferOutputStream."<init>":(Ljava/nio/ByteBuffer;)V
      97: invokevirtual #47                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.writeTo:(Ljava/io/OutputStream;)V
     100: goto          113
     103: astore_2
     104: new           #49                 // class java/lang/RuntimeException
     107: dup
     108: aload_2
     109: invokespecial #50                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     112: athrow
     113: return
    Exception table:
       from    to  target type
          63   100   103   Class java/io/IOException

  public void write(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: getstatic     #37                 // Field $assertionsDisabled:Z
       3: ifne          63
       6: aload_0
       7: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      10: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
      13: getstatic     #38                 // Field MAX_PROTO_SIZE:I
      16: if_icmple     63
      19: new           #39                 // class java/lang/AssertionError
      22: dup
      23: new           #20                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #40                 // String Expected
      32: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: getstatic     #38                 // Field MAX_PROTO_SIZE:I
      38: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #41                 // String  got:
      43: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      50: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
      53: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #42                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      62: athrow
      63: aload_1
      64: aload_0
      65: getfield      #4                  // Field packetLen:I
      68: invokevirtual #51                 // Method java/io/DataOutputStream.writeInt:(I)V
      71: aload_1
      72: aload_0
      73: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      76: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
      79: invokevirtual #52                 // Method java/io/DataOutputStream.writeShort:(I)V
      82: aload_0
      83: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      86: aload_1
      87: invokevirtual #47                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.writeTo:(Ljava/io/OutputStream;)V
      90: return

  public byte[] getBytes();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getSerializedSize:()I
       4: invokestatic  #54                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #55                 // Method putInBuffer:(Ljava/nio/ByteBuffer;)V
      13: aload_1
      14: invokevirtual #56                 // Method java/nio/ByteBuffer.array:()[B
      17: areturn

  public boolean sanityCheck(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       4: invokevirtual #15                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getDataLen:()I
       7: ifgt          22
      10: aload_0
      11: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      14: invokevirtual #16                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getLastPacketInBlock:()Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      26: invokevirtual #16                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getLastPacketInBlock:()Z
      29: ifeq          44
      32: aload_0
      33: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      36: invokevirtual #15                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getDataLen:()I
      39: ifeq          44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      48: invokevirtual #17                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSeqno:()J
      51: lload_1
      52: lconst_1
      53: ladd
      54: lcmp
      55: ifne          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #35                 // class org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #35                 // class org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader
      13: astore_2
      14: aload_0
      15: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      18: aload_2
      19: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      22: invokevirtual #57                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
       4: invokevirtual #17                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSeqno:()J
       7: l2i
       8: ireturn

  static {};
    Code:
       0: ldc           #35                 // class org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader
       2: invokevirtual #58                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #37                 // Field $assertionsDisabled:Z
      16: invokestatic  #7                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      19: lconst_0
      20: invokevirtual #8                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setOffsetInBlock:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      23: lconst_0
      24: invokevirtual #9                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setSeqno:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      27: iconst_0
      28: invokevirtual #10                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setLastPacketInBlock:(Z)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      31: iconst_0
      32: invokevirtual #11                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setDataLen:(I)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      35: iconst_0
      36: invokevirtual #12                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.setSyncBlock:(Z)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder;
      39: invokevirtual #13                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto$Builder.build:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto;
      42: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PacketHeaderProto.getSerializedSize:()I
      45: putstatic     #38                 // Field MAX_PROTO_SIZE:I
      48: bipush        6
      50: getstatic     #38                 // Field MAX_PROTO_SIZE:I
      53: iadd
      54: putstatic     #59                 // Field PKT_MAX_HEADER_LEN:I
      57: return
}
