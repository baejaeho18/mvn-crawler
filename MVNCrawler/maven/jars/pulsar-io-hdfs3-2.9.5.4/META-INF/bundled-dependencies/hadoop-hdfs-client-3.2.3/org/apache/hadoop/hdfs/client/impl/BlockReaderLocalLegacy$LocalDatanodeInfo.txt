Compiled from "BlockReaderLocalLegacy.java"
class org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo {
  private org.apache.hadoop.hdfs.protocol.ClientDatanodeProtocol proxy;

  private final java.util.Map<org.apache.hadoop.hdfs.protocol.ExtendedBlock, org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo> cache;

  org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field proxy:Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
       9: sipush        10000
      12: istore_1
      13: ldc           #8                  // float 0.75f
      15: fstore_2
      16: ldc2_w        #9                  // double 13333.3330078125d
      19: invokestatic  #11                 // Method java/lang/Math.ceil:(D)D
      22: d2i
      23: iconst_1
      24: iadd
      25: istore_3
      26: aload_0
      27: new           #12                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo$1
      30: dup
      31: aload_0
      32: iload_3
      33: ldc           #8                  // float 0.75f
      35: iconst_1
      36: invokespecial #13                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo$1."<init>":(Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;IFZ)V
      39: invokestatic  #14                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      42: putfield      #15                 // Field cache:Ljava/util/Map;
      45: return

  private synchronized org.apache.hadoop.hdfs.protocol.ClientDatanodeProtocol getDatanodeProxy(org.apache.hadoop.security.UserGroupInformation, org.apache.hadoop.hdfs.protocol.DatanodeInfo, org.apache.hadoop.conf.Configuration, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field proxy:Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
       4: ifnonnull     49
       7: aload_0
       8: aload_1
       9: new           #16                 // class org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo$2
      12: dup
      13: aload_0
      14: aload_2
      15: aload_3
      16: iload         4
      18: iload         5
      20: invokespecial #17                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo$2."<init>":(Lorg/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy$LocalDatanodeInfo;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/conf/Configuration;IZ)V
      23: invokevirtual #18                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      26: checkcast     #19                 // class org/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol
      29: putfield      #7                  // Field proxy:Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
      32: goto          49
      35: astore        6
      37: invokestatic  #21                 // Method org/apache/hadoop/hdfs/client/impl/BlockReaderLocalLegacy.access$000:()Lorg/slf4j/Logger;
      40: ldc           #22                 // String encountered exception
      42: aload         6
      44: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: aload_0
      50: getfield      #7                  // Field proxy:Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
      53: areturn
    Exception table:
       from    to  target type
           7    32    35   Class java/lang/InterruptedException

  private synchronized void resetDatanodeProxy();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field proxy:Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
       5: if_acmpeq     20
       8: aload_0
       9: getfield      #7                  // Field proxy:Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
      12: invokestatic  #24                 // Method org/apache/hadoop/ipc/RPC.stopProxy:(Ljava/lang/Object;)V
      15: aload_0
      16: aconst_null
      17: putfield      #7                  // Field proxy:Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
      20: return

  private org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo getBlockLocalPathInfo(org.apache.hadoop.hdfs.protocol.ExtendedBlock);
    Code:
       0: aload_0
       1: getfield      #15                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #26                 // class org/apache/hadoop/hdfs/protocol/BlockLocalPathInfo
      13: areturn

  private void setBlockLocalPathInfo(org.apache.hadoop.hdfs.protocol.ExtendedBlock, org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo);
    Code:
       0: aload_0
       1: getfield      #15                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private void removeBlockLocalPathInfo(org.apache.hadoop.hdfs.protocol.ExtendedBlock);
    Code:
       0: aload_0
       1: getfield      #15                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  static org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo access$100(org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo, org.apache.hadoop.hdfs.protocol.ExtendedBlock);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method getBlockLocalPathInfo:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;
       5: areturn

  static void access$200(org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo, org.apache.hadoop.hdfs.protocol.ExtendedBlock);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method removeBlockLocalPathInfo:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)V
       5: return

  static org.apache.hadoop.hdfs.protocol.ClientDatanodeProtocol access$300(org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo, org.apache.hadoop.security.UserGroupInformation, org.apache.hadoop.hdfs.protocol.DatanodeInfo, org.apache.hadoop.conf.Configuration, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: invokespecial #3                  // Method getDatanodeProxy:(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/conf/Configuration;IZ)Lorg/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol;
      11: areturn

  static void access$400(org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo, org.apache.hadoop.hdfs.protocol.ExtendedBlock, org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method setBlockLocalPathInfo:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;)V
       6: return

  static void access$500(org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy$LocalDatanodeInfo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method resetDatanodeProxy:()V
       4: return
}
