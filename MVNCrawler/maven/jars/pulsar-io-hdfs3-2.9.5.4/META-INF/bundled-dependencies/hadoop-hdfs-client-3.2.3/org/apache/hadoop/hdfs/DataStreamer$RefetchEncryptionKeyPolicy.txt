Compiled from "DataStreamer.java"
class org.apache.hadoop.hdfs.DataStreamer$RefetchEncryptionKeyPolicy {
  private int fetchEncryptionKeyTimes;

  private org.apache.hadoop.hdfs.protocol.datatransfer.InvalidEncryptionKeyException lastException;

  private final org.apache.hadoop.hdfs.protocol.DatanodeInfo src;

  final org.apache.hadoop.hdfs.DataStreamer this$0;

  org.apache.hadoop.hdfs.DataStreamer$RefetchEncryptionKeyPolicy(org.apache.hadoop.hdfs.DataStreamer, org.apache.hadoop.hdfs.protocol.DatanodeInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DataStreamer;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field fetchEncryptionKeyTimes:I
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field src:Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
      19: return

  boolean continueRetryingOrThrow() throws org.apache.hadoop.hdfs.protocol.datatransfer.InvalidEncryptionKeyException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field fetchEncryptionKeyTimes:I
       4: iconst_2
       5: if_icmplt     13
       8: aload_0
       9: getfield      #5                  // Field lastException:Lorg/apache/hadoop/hdfs/protocol/datatransfer/InvalidEncryptionKeyException;
      12: athrow
      13: getstatic     #6                  // Field org/apache/hadoop/hdfs/DataStreamer.LOG:Lorg/slf4j/Logger;
      16: new           #7                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #9                  // String Will fetch a new encryption key and retry, encryption key was invalid when connecting to
      25: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #4                  // Field src:Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #12                 // String :
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: aload_0
      44: getfield      #5                  // Field lastException:Lorg/apache/hadoop/hdfs/protocol/datatransfer/InvalidEncryptionKeyException;
      47: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: aload_0
      53: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DataStreamer;
      56: getfield      #15                 // Field org/apache/hadoop/hdfs/DataStreamer.dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      59: invokevirtual #16                 // Method org/apache/hadoop/hdfs/DFSClient.clearDataEncryptionKey:()V
      62: iconst_1
      63: ireturn

  void recordFailure(org.apache.hadoop.hdfs.protocol.datatransfer.InvalidEncryptionKeyException) throws org.apache.hadoop.hdfs.protocol.datatransfer.InvalidEncryptionKeyException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field fetchEncryptionKeyTimes:I
       5: iconst_1
       6: iadd
       7: putfield      #3                  // Field fetchEncryptionKeyTimes:I
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field lastException:Lorg/apache/hadoop/hdfs/protocol/datatransfer/InvalidEncryptionKeyException;
      15: return
}
