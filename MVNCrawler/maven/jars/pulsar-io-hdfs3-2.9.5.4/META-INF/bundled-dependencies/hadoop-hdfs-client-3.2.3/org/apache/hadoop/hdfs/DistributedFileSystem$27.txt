Compiled from "DistributedFileSystem.java"
class org.apache.hadoop.hdfs.DistributedFileSystem$27 extends org.apache.hadoop.fs.FileSystemLinkResolver<java.lang.Boolean> {
  final org.apache.hadoop.fs.permission.FsPermission val$permission;

  final boolean val$createParent;

  final org.apache.hadoop.hdfs.DistributedFileSystem this$0;

  org.apache.hadoop.hdfs.DistributedFileSystem$27(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.permission.FsPermission, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$createParent:Z
      15: aload_0
      16: invokespecial #4                  // Method org/apache/hadoop/fs/FileSystemLinkResolver."<init>":()V
      19: return

  public java.lang.Boolean doCall(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       4: getfield      #5                  // Field org/apache/hadoop/hdfs/DistributedFileSystem.dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      11: aload_1
      12: invokevirtual #6                  // Method org/apache/hadoop/hdfs/DistributedFileSystem.getPathName:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      15: aload_0
      16: getfield      #2                  // Field val$permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      19: aload_0
      20: getfield      #3                  // Field val$createParent:Z
      23: invokevirtual #7                  // Method org/apache/hadoop/hdfs/DFSClient.mkdirs:(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Z)Z
      26: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn

  public java.lang.Boolean next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$createParent:Z
       4: ifne          17
       7: new           #9                  // class java/io/IOException
      10: dup
      11: ldc           #10                 // String FileSystem does not support non-recursivemkdir
      13: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: aload_2
      19: aload_0
      20: getfield      #2                  // Field val$permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      23: invokevirtual #12                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
      26: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn

  public java.lang.Object next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method next:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Boolean;
       6: areturn

  public java.lang.Object doCall(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method doCall:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/Boolean;
       5: areturn
}
