Compiled from "CachePoolInfo.java"
public class org.apache.hadoop.hdfs.protocol.CachePoolInfo {
  public static final long RELATIVE_EXPIRY_NEVER;

  public static final long DEFAULT_MAX_RELATIVE_EXPIRY;

  public static final long LIMIT_UNLIMITED;

  public static final long DEFAULT_LIMIT;

  public static final short DEFAULT_REPLICATION_NUM;

  final java.lang.String poolName;

  java.lang.String ownerName;

  java.lang.String groupName;

  org.apache.hadoop.fs.permission.FsPermission mode;

  java.lang.Long limit;

  private java.lang.Short defaultReplication;

  java.lang.Long maxRelativeExpiryMs;

  public org.apache.hadoop.hdfs.protocol.CachePoolInfo(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field poolName:Ljava/lang/String;
       9: return

  public java.lang.String getPoolName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field poolName:Ljava/lang/String;
       4: areturn

  public java.lang.String getOwnerName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field ownerName:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.CachePoolInfo setOwnerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field ownerName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getGroupName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field groupName:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.CachePoolInfo setGroupName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field groupName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.fs.permission.FsPermission getMode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mode:Lorg/apache/hadoop/fs/permission/FsPermission;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.CachePoolInfo setMode(org.apache.hadoop.fs.permission.FsPermission);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field mode:Lorg/apache/hadoop/fs/permission/FsPermission;
       5: aload_0
       6: areturn

  public java.lang.Long getLimit();
    Code:
       0: aload_0
       1: getfield      #9                  // Field limit:Ljava/lang/Long;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.CachePoolInfo setLimit(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field limit:Ljava/lang/Long;
       5: aload_0
       6: areturn

  public java.lang.Short getDefaultReplication();
    Code:
       0: aload_0
       1: getfield      #10                 // Field defaultReplication:Ljava/lang/Short;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.CachePoolInfo setDefaultReplication(java.lang.Short);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field defaultReplication:Ljava/lang/Short;
       5: aload_0
       6: areturn

  public java.lang.Long getMaxRelativeExpiryMs();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxRelativeExpiryMs:Ljava/lang/Long;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.CachePoolInfo setMaxRelativeExpiryMs(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field maxRelativeExpiryMs:Ljava/lang/Long;
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #14                 // String {poolName:
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field poolName:Ljava/lang/String;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #16                 // String , ownerName:
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field ownerName:Ljava/lang/String;
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #17                 // String , groupName:
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #7                  // Field groupName:Ljava/lang/String;
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #18                 // String , mode:
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #8                  // Field mode:Lorg/apache/hadoop/fs/permission/FsPermission;
      52: ifnonnull     60
      55: ldc           #19                 // String null
      57: goto          82
      60: ldc           #20                 // String 0%03o
      62: iconst_1
      63: anewarray     #21                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload_0
      69: getfield      #8                  // Field mode:Lorg/apache/hadoop/fs/permission/FsPermission;
      72: invokevirtual #22                 // Method org/apache/hadoop/fs/permission/FsPermission.toShort:()S
      75: invokestatic  #23                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      78: aastore
      79: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #25                 // String , limit:
      87: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #9                  // Field limit:Ljava/lang/Long;
      94: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: ldc           #27                 // String , defaultReplication:
      99: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: getfield      #10                 // Field defaultReplication:Ljava/lang/Short;
     106: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: ldc           #28                 // String , maxRelativeExpiryMs:
     111: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #11                 // Field maxRelativeExpiryMs:Ljava/lang/Long;
     118: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: ldc           #29                 // String }
     123: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_0
      18: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #2                  // class org/apache/hadoop/hdfs/protocol/CachePoolInfo
      30: astore_2
      31: new           #32                 // class org/apache/commons/lang3/builder/EqualsBuilder
      34: dup
      35: invokespecial #33                 // Method org/apache/commons/lang3/builder/EqualsBuilder."<init>":()V
      38: aload_0
      39: getfield      #5                  // Field poolName:Ljava/lang/String;
      42: aload_2
      43: getfield      #5                  // Field poolName:Ljava/lang/String;
      46: invokevirtual #34                 // Method org/apache/commons/lang3/builder/EqualsBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
      49: aload_0
      50: getfield      #6                  // Field ownerName:Ljava/lang/String;
      53: aload_2
      54: getfield      #6                  // Field ownerName:Ljava/lang/String;
      57: invokevirtual #34                 // Method org/apache/commons/lang3/builder/EqualsBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
      60: aload_0
      61: getfield      #7                  // Field groupName:Ljava/lang/String;
      64: aload_2
      65: getfield      #7                  // Field groupName:Ljava/lang/String;
      68: invokevirtual #34                 // Method org/apache/commons/lang3/builder/EqualsBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
      71: aload_0
      72: getfield      #8                  // Field mode:Lorg/apache/hadoop/fs/permission/FsPermission;
      75: aload_2
      76: getfield      #8                  // Field mode:Lorg/apache/hadoop/fs/permission/FsPermission;
      79: invokevirtual #34                 // Method org/apache/commons/lang3/builder/EqualsBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
      82: aload_0
      83: getfield      #9                  // Field limit:Ljava/lang/Long;
      86: aload_2
      87: getfield      #9                  // Field limit:Ljava/lang/Long;
      90: invokevirtual #34                 // Method org/apache/commons/lang3/builder/EqualsBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
      93: aload_0
      94: getfield      #10                 // Field defaultReplication:Ljava/lang/Short;
      97: aload_2
      98: getfield      #10                 // Field defaultReplication:Ljava/lang/Short;
     101: invokevirtual #34                 // Method org/apache/commons/lang3/builder/EqualsBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
     104: aload_0
     105: getfield      #11                 // Field maxRelativeExpiryMs:Ljava/lang/Long;
     108: aload_2
     109: getfield      #11                 // Field maxRelativeExpiryMs:Ljava/lang/Long;
     112: invokevirtual #34                 // Method org/apache/commons/lang3/builder/EqualsBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
     115: invokevirtual #35                 // Method org/apache/commons/lang3/builder/EqualsBuilder.isEquals:()Z
     118: ireturn

  public int hashCode();
    Code:
       0: new           #36                 // class org/apache/commons/lang3/builder/HashCodeBuilder
       3: dup
       4: invokespecial #37                 // Method org/apache/commons/lang3/builder/HashCodeBuilder."<init>":()V
       7: aload_0
       8: getfield      #5                  // Field poolName:Ljava/lang/String;
      11: invokevirtual #38                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
      14: aload_0
      15: getfield      #6                  // Field ownerName:Ljava/lang/String;
      18: invokevirtual #38                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
      21: aload_0
      22: getfield      #7                  // Field groupName:Ljava/lang/String;
      25: invokevirtual #38                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
      28: aload_0
      29: getfield      #8                  // Field mode:Lorg/apache/hadoop/fs/permission/FsPermission;
      32: invokevirtual #38                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
      35: aload_0
      36: getfield      #9                  // Field limit:Ljava/lang/Long;
      39: invokevirtual #38                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
      42: aload_0
      43: getfield      #10                 // Field defaultReplication:Ljava/lang/Short;
      46: invokevirtual #38                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
      49: aload_0
      50: getfield      #11                 // Field maxRelativeExpiryMs:Ljava/lang/Long;
      53: invokevirtual #38                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
      56: invokevirtual #39                 // Method org/apache/commons/lang3/builder/HashCodeBuilder.hashCode:()I
      59: ireturn

  public static void validate(org.apache.hadoop.hdfs.protocol.CachePoolInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #40                 // class org/apache/hadoop/fs/InvalidRequestException
       7: dup
       8: ldc           #41                 // String CachePoolInfo is null
      10: invokespecial #42                 // Method org/apache/hadoop/fs/InvalidRequestException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #43                 // Method getLimit:()Ljava/lang/Long;
      18: ifnull        43
      21: aload_0
      22: invokevirtual #43                 // Method getLimit:()Ljava/lang/Long;
      25: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      28: lconst_0
      29: lcmp
      30: ifge          43
      33: new           #40                 // class org/apache/hadoop/fs/InvalidRequestException
      36: dup
      37: ldc           #45                 // String Limit is negative.
      39: invokespecial #42                 // Method org/apache/hadoop/fs/InvalidRequestException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #46                 // Method getDefaultReplication:()Ljava/lang/Short;
      47: ifnull        70
      50: aload_0
      51: invokevirtual #46                 // Method getDefaultReplication:()Ljava/lang/Short;
      54: invokevirtual #47                 // Method java/lang/Short.shortValue:()S
      57: ifge          70
      60: new           #40                 // class org/apache/hadoop/fs/InvalidRequestException
      63: dup
      64: ldc           #48                 // String Default Replication is negative
      66: invokespecial #42                 // Method org/apache/hadoop/fs/InvalidRequestException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: invokevirtual #49                 // Method getMaxRelativeExpiryMs:()Ljava/lang/Long;
      74: ifnull        119
      77: aload_0
      78: invokevirtual #49                 // Method getMaxRelativeExpiryMs:()Ljava/lang/Long;
      81: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      84: lstore_1
      85: lload_1
      86: lconst_0
      87: lcmp
      88: ifge          101
      91: new           #40                 // class org/apache/hadoop/fs/InvalidRequestException
      94: dup
      95: ldc           #50                 // String Max relative expiry is negative.
      97: invokespecial #42                 // Method org/apache/hadoop/fs/InvalidRequestException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: lload_1
     102: ldc2_w        #51                 // long 2305843009213693951l
     105: lcmp
     106: ifle          119
     109: new           #40                 // class org/apache/hadoop/fs/InvalidRequestException
     112: dup
     113: ldc           #53                 // String Max relative expiry is too big.
     115: invokespecial #42                 // Method org/apache/hadoop/fs/InvalidRequestException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: aload_0
     120: getfield      #5                  // Field poolName:Ljava/lang/String;
     123: invokestatic  #54                 // Method validateName:(Ljava/lang/String;)V
     126: return

  public static void validateName(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #55                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          21
      11: new           #56                 // class java/io/IOException
      14: dup
      15: ldc           #57                 // String invalid empty cache pool name
      17: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: return
}
