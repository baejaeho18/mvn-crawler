Compiled from "ReplicatedBlockStats.java"
public final class org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats {
  private final long lowRedundancyBlocks;

  private final long corruptBlocks;

  private final long missingBlocks;

  private final long missingReplicationOneBlocks;

  private final long bytesInFutureBlocks;

  private final long pendingDeletionBlocks;

  private final java.lang.Long highestPriorityLowRedundancyBlocks;

  public org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats(long, long, long, long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: lload         7
       7: lload         9
       9: lload         11
      11: aconst_null
      12: invokespecial #1                  // Method "<init>":(JJJJJJLjava/lang/Long;)V
      15: return

  public org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats(long, long, long, long, long, long, java.lang.Long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #3                  // Field lowRedundancyBlocks:J
       9: aload_0
      10: lload_3
      11: putfield      #4                  // Field corruptBlocks:J
      14: aload_0
      15: lload         5
      17: putfield      #5                  // Field missingBlocks:J
      20: aload_0
      21: lload         7
      23: putfield      #6                  // Field missingReplicationOneBlocks:J
      26: aload_0
      27: lload         9
      29: putfield      #7                  // Field bytesInFutureBlocks:J
      32: aload_0
      33: lload         11
      35: putfield      #8                  // Field pendingDeletionBlocks:J
      38: aload_0
      39: aload         13
      41: putfield      #9                  // Field highestPriorityLowRedundancyBlocks:Ljava/lang/Long;
      44: return

  public long getLowRedundancyBlocks();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lowRedundancyBlocks:J
       4: lreturn

  public long getCorruptBlocks();
    Code:
       0: aload_0
       1: getfield      #4                  // Field corruptBlocks:J
       4: lreturn

  public long getMissingReplicaBlocks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field missingBlocks:J
       4: lreturn

  public long getMissingReplicationOneBlocks();
    Code:
       0: aload_0
       1: getfield      #6                  // Field missingReplicationOneBlocks:J
       4: lreturn

  public long getBytesInFutureBlocks();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesInFutureBlocks:J
       4: lreturn

  public long getPendingDeletionBlocks();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pendingDeletionBlocks:J
       4: lreturn

  public boolean hasHighestPriorityLowRedundancyBlocks();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getHighestPriorityLowRedundancyBlocks:()Ljava/lang/Long;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Long getHighestPriorityLowRedundancyBlocks();
    Code:
       0: aload_0
       1: getfield      #9                  // Field highestPriorityLowRedundancyBlocks:Ljava/lang/Long;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #13                 // String ReplicatedBlockStats=[
      11: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #15                 // String LowRedundancyBlocks=
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #16                 // Method getLowRedundancyBlocks:()J
      23: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #18                 // String , CorruptBlocks=
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #19                 // Method getCorruptBlocks:()J
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      38: ldc           #20                 // String , MissingReplicaBlocks=
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokevirtual #21                 // Method getMissingReplicaBlocks:()J
      47: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      50: ldc           #22                 // String , MissingReplicationOneBlocks=
      52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #23                 // Method getMissingReplicationOneBlocks:()J
      59: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      62: ldc           #24                 // String , BytesInFutureBlocks=
      64: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: invokevirtual #25                 // Method getBytesInFutureBlocks:()J
      71: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      74: ldc           #26                 // String , PendingDeletionBlocks=
      76: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #27                 // Method getPendingDeletionBlocks:()J
      83: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      86: pop
      87: aload_0
      88: invokevirtual #28                 // Method hasHighestPriorityLowRedundancyBlocks:()Z
      91: ifeq          108
      94: aload_1
      95: ldc           #29                 // String , HighestPriorityLowRedundancyBlocks=
      97: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_0
     101: invokevirtual #10                 // Method getHighestPriorityLowRedundancyBlocks:()Ljava/lang/Long;
     104: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: pop
     108: aload_1
     109: ldc           #31                 // String ]
     111: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: aload_1
     116: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: areturn
}
