Compiled from "DistributedFileSystem.java"
class org.apache.hadoop.hdfs.DistributedFileSystem$10 extends org.apache.hadoop.fs.FileSystemLinkResolver<org.apache.hadoop.hdfs.client.HdfsDataOutputStream> {
  final org.apache.hadoop.fs.Path val$f;

  final org.apache.hadoop.fs.permission.FsPermission val$permission;

  final java.util.EnumSet val$flag;

  final short val$replication;

  final long val$blockSize;

  final org.apache.hadoop.util.Progressable val$progress;

  final int val$bufferSize;

  final org.apache.hadoop.fs.Options$ChecksumOpt val$checksumOpt;

  final java.net.InetSocketAddress[] val$favoredNodes;

  final java.lang.String val$ecPolicyName;

  final org.apache.hadoop.hdfs.DistributedFileSystem this$0;

  org.apache.hadoop.hdfs.DistributedFileSystem$10(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet, short, long, org.apache.hadoop.util.Progressable, int, org.apache.hadoop.fs.Options$ChecksumOpt, java.net.InetSocketAddress[], java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$f:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$flag:Ljava/util/EnumSet;
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field val$replication:S
      27: aload_0
      28: lload         6
      30: putfield      #6                  // Field val$blockSize:J
      33: aload_0
      34: aload         8
      36: putfield      #7                  // Field val$progress:Lorg/apache/hadoop/util/Progressable;
      39: aload_0
      40: iload         9
      42: putfield      #8                  // Field val$bufferSize:I
      45: aload_0
      46: aload         10
      48: putfield      #9                  // Field val$checksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      51: aload_0
      52: aload         11
      54: putfield      #10                 // Field val$favoredNodes:[Ljava/net/InetSocketAddress;
      57: aload_0
      58: aload         12
      60: putfield      #11                 // Field val$ecPolicyName:Ljava/lang/String;
      63: aload_0
      64: invokespecial #12                 // Method org/apache/hadoop/fs/FileSystemLinkResolver."<init>":()V
      67: return

  public org.apache.hadoop.hdfs.client.HdfsDataOutputStream doCall(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       4: getfield      #13                 // Field org/apache/hadoop/hdfs/DistributedFileSystem.dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      11: aload_0
      12: getfield      #2                  // Field val$f:Lorg/apache/hadoop/fs/Path;
      15: invokevirtual #14                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.getPathName:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      18: aload_0
      19: getfield      #3                  // Field val$permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      22: aload_0
      23: getfield      #4                  // Field val$flag:Ljava/util/EnumSet;
      26: iconst_0
      27: aload_0
      28: getfield      #5                  // Field val$replication:S
      31: aload_0
      32: getfield      #6                  // Field val$blockSize:J
      35: aload_0
      36: getfield      #7                  // Field val$progress:Lorg/apache/hadoop/util/Progressable;
      39: aload_0
      40: getfield      #8                  // Field val$bufferSize:I
      43: aload_0
      44: getfield      #9                  // Field val$checksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      47: aload_0
      48: getfield      #10                 // Field val$favoredNodes:[Ljava/net/InetSocketAddress;
      51: aload_0
      52: getfield      #11                 // Field val$ecPolicyName:Ljava/lang/String;
      55: invokevirtual #15                 // Method org/apache/hadoop/hdfs/DFSClient.create:(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ZSJLorg/apache/hadoop/util/Progressable;ILorg/apache/hadoop/fs/Options$ChecksumOpt;[Ljava/net/InetSocketAddress;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/DFSOutputStream;
      58: astore_2
      59: aload_0
      60: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      63: getfield      #13                 // Field org/apache/hadoop/hdfs/DistributedFileSystem.dfs:Lorg/apache/hadoop/hdfs/DFSClient;
      66: aload_2
      67: aload_0
      68: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      71: invokestatic  #16                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$700:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;)Lorg/apache/hadoop/fs/FileSystem$Statistics;
      74: invokevirtual #17                 // Method org/apache/hadoop/hdfs/DFSClient.createWrappedOutputStream:(Lorg/apache/hadoop/hdfs/DFSOutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
      77: areturn

  public org.apache.hadoop.hdfs.client.HdfsDataOutputStream next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #18                 // class org/apache/hadoop/hdfs/DistributedFileSystem
       4: ifeq          54
       7: aload_1
       8: checkcast     #18                 // class org/apache/hadoop/hdfs/DistributedFileSystem
      11: astore_3
      12: aload_3
      13: aload_2
      14: aload_0
      15: getfield      #3                  // Field val$permission:Lorg/apache/hadoop/fs/permission/FsPermission;
      18: aload_0
      19: getfield      #4                  // Field val$flag:Ljava/util/EnumSet;
      22: aload_0
      23: getfield      #8                  // Field val$bufferSize:I
      26: aload_0
      27: getfield      #5                  // Field val$replication:S
      30: aload_0
      31: getfield      #6                  // Field val$blockSize:J
      34: aload_0
      35: getfield      #7                  // Field val$progress:Lorg/apache/hadoop/util/Progressable;
      38: aload_0
      39: getfield      #9                  // Field val$checksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      42: aload_0
      43: getfield      #10                 // Field val$favoredNodes:[Ljava/net/InetSocketAddress;
      46: aload_0
      47: getfield      #11                 // Field val$ecPolicyName:Ljava/lang/String;
      50: invokestatic  #19                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$800:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;[Ljava/net/InetSocketAddress;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
      53: areturn
      54: new           #20                 // class java/lang/UnsupportedOperationException
      57: dup
      58: new           #21                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #23                 // String Cannot create with favoredNodes through a symlink to a non-DistributedFileSystem:
      67: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #2                  // Field val$f:Lorg/apache/hadoop/fs/Path;
      74: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: ldc           #26                 // String  ->
      79: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      92: athrow

  public java.lang.Object next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #29                 // Method next:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
       6: areturn

  public java.lang.Object doCall(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method doCall:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
       5: areturn
}
