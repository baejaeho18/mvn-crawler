Compiled from "DistributedFileSystem.java"
class org.apache.hadoop.hdfs.DistributedFileSystem$30 extends org.apache.hadoop.fs.FileSystemLinkResolver<java.lang.Void> {
  final org.apache.hadoop.fs.Path val$target;

  final boolean val$createParent;

  final org.apache.hadoop.hdfs.DistributedFileSystem this$0;

  org.apache.hadoop.hdfs.DistributedFileSystem$30(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$target:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$createParent:Z
      15: aload_0
      16: invokespecial #4                  // Method org/apache/hadoop/fs/FileSystemLinkResolver."<init>":()V
      19: return

  public java.lang.Void doCall(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       4: getfield      #5                  // Field org/apache/hadoop/hdfs/DistributedFileSystem.dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       7: aload_0
       8: getfield      #2                  // Field val$target:Lorg/apache/hadoop/fs/Path;
      11: invokevirtual #6                  // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      18: aload_1
      19: invokevirtual #7                  // Method org/apache/hadoop/hdfs/DistributedFileSystem.getPathName:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      22: aload_0
      23: getfield      #3                  // Field val$createParent:Z
      26: invokevirtual #8                  // Method org/apache/hadoop/hdfs/DFSClient.createSymlink:(Ljava/lang/String;Ljava/lang/String;Z)V
      29: aconst_null
      30: areturn

  public java.lang.Void next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field val$target:Lorg/apache/hadoop/fs/Path;
       5: aload_2
       6: aload_0
       7: getfield      #3                  // Field val$createParent:Z
      10: invokevirtual #9                  // Method org/apache/hadoop/fs/FileSystem.createSymlink:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
      13: aconst_null
      14: areturn

  public java.lang.Object next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method next:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/lang/Void;
       6: areturn

  public java.lang.Object doCall(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method doCall:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/Void;
       5: areturn
}
