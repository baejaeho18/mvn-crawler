Compiled from "TokenAspect.java"
final class org.apache.hadoop.hdfs.web.TokenAspect<T extends org.apache.hadoop.fs.FileSystem & org.apache.hadoop.fs.DelegationTokenRenewer$Renewable> {
  private org.apache.hadoop.fs.DelegationTokenRenewer$RenewAction<?> action;

  private org.apache.hadoop.fs.DelegationTokenRenewer dtRenewer;

  private final org.apache.hadoop.hdfs.web.TokenAspect$DTSelecorByKind dtSelector;

  private final T fs;

  private boolean hasInitedToken;

  private final org.slf4j.Logger LOG;

  private final org.apache.hadoop.io.Text serviceName;

  org.apache.hadoop.hdfs.web.TokenAspect(T, org.apache.hadoop.io.Text, org.apache.hadoop.io.Text);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field dtRenewer:Lorg/apache/hadoop/fs/DelegationTokenRenewer;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokestatic  #4                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      17: putfield      #5                  // Field LOG:Lorg/slf4j/Logger;
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      25: aload_0
      26: new           #7                  // class org/apache/hadoop/hdfs/web/TokenAspect$DTSelecorByKind
      29: dup
      30: aload_3
      31: invokespecial #8                  // Method org/apache/hadoop/hdfs/web/TokenAspect$DTSelecorByKind."<init>":(Lorg/apache/hadoop/io/Text;)V
      34: putfield      #9                  // Field dtSelector:Lorg/apache/hadoop/hdfs/web/TokenAspect$DTSelecorByKind;
      37: aload_0
      38: aload_2
      39: putfield      #10                 // Field serviceName:Lorg/apache/hadoop/io/Text;
      42: return

  synchronized void ensureTokenInitialized() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field hasInitedToken:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #12                 // Field action:Lorg/apache/hadoop/fs/DelegationTokenRenewer$RenewAction;
      11: ifnull        78
      14: aload_0
      15: getfield      #12                 // Field action:Lorg/apache/hadoop/fs/DelegationTokenRenewer$RenewAction;
      18: invokevirtual #13                 // Method org/apache/hadoop/fs/DelegationTokenRenewer$RenewAction.isValid:()Z
      21: ifne          78
      24: aload_0
      25: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      28: aconst_null
      29: invokevirtual #14                 // Method org/apache/hadoop/fs/FileSystem.getDelegationToken:(Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
      32: astore_1
      33: aload_1
      34: ifnull        73
      37: aload_0
      38: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      41: checkcast     #15                 // class org/apache/hadoop/fs/DelegationTokenRenewer$Renewable
      44: aload_1
      45: invokeinterface #16,  2           // InterfaceMethod org/apache/hadoop/fs/DelegationTokenRenewer$Renewable.setDelegationToken:(Lorg/apache/hadoop/security/token/Token;)V
      50: aload_0
      51: aload_0
      52: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      55: invokespecial #17                 // Method addRenewAction:(Lorg/apache/hadoop/fs/FileSystem;)V
      58: aload_0
      59: getfield      #5                  // Field LOG:Lorg/slf4j/Logger;
      62: ldc           #18                 // String Created new DT for {}
      64: aload_1
      65: invokevirtual #19                 // Method org/apache/hadoop/security/token/Token.getService:()Lorg/apache/hadoop/io/Text;
      68: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      73: aload_0
      74: iconst_1
      75: putfield      #11                 // Field hasInitedToken:Z
      78: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #11                 // Field hasInitedToken:Z
       5: return

  synchronized void initDelegationToken(org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method selectDelegationToken:(Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/security/token/Token;
       5: astore_2
       6: aload_2
       7: ifnull        43
      10: aload_0
      11: getfield      #5                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #22                 // String Found existing DT for {}
      16: aload_2
      17: invokevirtual #19                 // Method org/apache/hadoop/security/token/Token.getService:()Lorg/apache/hadoop/io/Text;
      20: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      29: checkcast     #15                 // class org/apache/hadoop/fs/DelegationTokenRenewer$Renewable
      32: aload_2
      33: invokeinterface #16,  2           // InterfaceMethod org/apache/hadoop/fs/DelegationTokenRenewer$Renewable.setDelegationToken:(Lorg/apache/hadoop/security/token/Token;)V
      38: aload_0
      39: iconst_1
      40: putfield      #11                 // Field hasInitedToken:Z
      43: return

  synchronized void removeRenewAction() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field dtRenewer:Lorg/apache/hadoop/fs/DelegationTokenRenewer;
       4: ifnull        18
       7: aload_0
       8: getfield      #2                  // Field dtRenewer:Lorg/apache/hadoop/fs/DelegationTokenRenewer;
      11: aload_0
      12: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      15: invokevirtual #23                 // Method org/apache/hadoop/fs/DelegationTokenRenewer.removeRenewAction:(Lorg/apache/hadoop/fs/FileSystem;)V
      18: return

  org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier> selectDelegationToken(org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: getfield      #9                  // Field dtSelector:Lorg/apache/hadoop/hdfs/web/TokenAspect$DTSelecorByKind;
       4: aload_0
       5: getfield      #10                 // Field serviceName:Lorg/apache/hadoop/io/Text;
       8: aload_1
       9: invokevirtual #24                 // Method org/apache/hadoop/security/UserGroupInformation.getTokens:()Ljava/util/Collection;
      12: invokevirtual #25                 // Method org/apache/hadoop/hdfs/web/TokenAspect$DTSelecorByKind.selectToken:(Lorg/apache/hadoop/io/Text;Ljava/util/Collection;)Lorg/apache/hadoop/security/token/Token;
      15: areturn

  private synchronized void addRenewAction(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field dtRenewer:Lorg/apache/hadoop/fs/DelegationTokenRenewer;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #26                 // Method org/apache/hadoop/fs/DelegationTokenRenewer.getInstance:()Lorg/apache/hadoop/fs/DelegationTokenRenewer;
      11: putfield      #2                  // Field dtRenewer:Lorg/apache/hadoop/fs/DelegationTokenRenewer;
      14: aload_0
      15: aload_0
      16: getfield      #2                  // Field dtRenewer:Lorg/apache/hadoop/fs/DelegationTokenRenewer;
      19: aload_1
      20: invokevirtual #27                 // Method org/apache/hadoop/fs/DelegationTokenRenewer.addRenewAction:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/DelegationTokenRenewer$RenewAction;
      23: putfield      #12                 // Field action:Lorg/apache/hadoop/fs/DelegationTokenRenewer$RenewAction;
      26: return
}
