Compiled from "BlockReaderRemote.java"
public class org.apache.hadoop.hdfs.client.impl.BlockReaderRemote implements org.apache.hadoop.hdfs.BlockReader {
  static final org.slf4j.Logger LOG;

  static final int TCP_WINDOW_SIZE;

  private final org.apache.hadoop.hdfs.net.Peer peer;

  private final org.apache.hadoop.hdfs.protocol.DatanodeID datanodeID;

  private final org.apache.hadoop.hdfs.PeerCache peerCache;

  private final long blockId;

  private final java.nio.channels.ReadableByteChannel in;

  private org.apache.hadoop.util.DataChecksum checksum;

  private final org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver packetReceiver;

  private java.nio.ByteBuffer curDataSlice;

  private long lastSeqNo;

  private long startOffset;

  private final java.lang.String filename;

  private final int bytesPerChecksum;

  private final int checksumSize;

  private long bytesNeededToFinish;

  private final boolean verifyChecksum;

  private boolean sentStatusCode;

  private final int networkDistance;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hdfs.net.Peer getPeer();
    Code:
       0: aload_0
       1: getfield      #1                  // Field peer:Lorg/apache/hadoop/hdfs/net/Peer;
       4: areturn

  public synchronized int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #3,  1            // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: istore        4
      10: aconst_null
      11: astore        5
      13: iload         4
      15: ifeq          59
      18: invokestatic  #4                  // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      21: astore        5
      23: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #5                  // String Starting read #{} file {} from datanode {}
      28: iconst_3
      29: anewarray     #6                  // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload         5
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: getfield      #7                  // Field filename:Ljava/lang/String;
      43: aastore
      44: dup
      45: iconst_2
      46: aload_0
      47: getfield      #8                  // Field datanodeID:Lorg/apache/hadoop/hdfs/protocol/DatanodeID;
      50: invokevirtual #9                  // Method org/apache/hadoop/hdfs/protocol/DatanodeID.getHostName:()Ljava/lang/String;
      53: aastore
      54: invokeinterface #10,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      59: aload_0
      60: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      63: ifnull        85
      66: aload_0
      67: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      70: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      73: ifne          89
      76: aload_0
      77: getfield      #13                 // Field bytesNeededToFinish:J
      80: lconst_0
      81: lcmp
      82: ifle          89
      85: aload_0
      86: invokespecial #14                 // Method readNextPacket:()V
      89: iload         4
      91: ifeq          106
      94: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      97: ldc           #15                 // String Finishing read #{}
      99: aload         5
     101: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     106: aload_0
     107: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
     110: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
     113: ifne          118
     116: iconst_m1
     117: ireturn
     118: aload_0
     119: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
     122: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
     125: iload_3
     126: invokestatic  #17                 // Method java/lang/Math.min:(II)I
     129: istore        6
     131: aload_0
     132: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
     135: aload_1
     136: iload_2
     137: iload         6
     139: invokevirtual #18                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     142: pop
     143: iload         6
     145: ireturn

  public synchronized int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
       4: ifnull        26
       7: aload_0
       8: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      11: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      14: ifne          30
      17: aload_0
      18: getfield      #13                 // Field bytesNeededToFinish:J
      21: lconst_0
      22: lcmp
      23: ifle          30
      26: aload_0
      27: invokespecial #14                 // Method readNextPacket:()V
      30: aload_0
      31: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      34: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      37: ifne          42
      40: iconst_m1
      41: ireturn
      42: aload_0
      43: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      46: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      49: aload_1
      50: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      53: invokestatic  #17                 // Method java/lang/Math.min:(II)I
      56: istore_2
      57: aload_0
      58: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      61: invokevirtual #19                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      64: astore_3
      65: aload_3
      66: aload_3
      67: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I
      70: iload_2
      71: iadd
      72: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      75: pop
      76: aload_1
      77: aload_3
      78: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      81: pop
      82: aload_0
      83: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      86: aload_3
      87: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I
      90: invokevirtual #23                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      93: pop
      94: iload_2
      95: ireturn

  private void readNextPacket() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
       4: aload_0
       5: getfield      #25                 // Field in:Ljava/nio/channels/ReadableByteChannel;
       8: invokevirtual #26                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.receiveNextPacket:(Ljava/nio/channels/ReadableByteChannel;)V
      11: aload_0
      12: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
      15: invokevirtual #27                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.getHeader:()Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader;
      18: astore_1
      19: aload_0
      20: aload_0
      21: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
      24: invokevirtual #28                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.getDataSlice:()Ljava/nio/ByteBuffer;
      27: putfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      30: getstatic     #29                 // Field $assertionsDisabled:Z
      33: ifne          58
      36: aload_0
      37: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      40: invokevirtual #30                 // Method java/nio/ByteBuffer.capacity:()I
      43: aload_1
      44: invokevirtual #31                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getDataLen:()I
      47: if_icmpeq     58
      50: new           #32                 // class java/lang/AssertionError
      53: dup
      54: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
      57: athrow
      58: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      61: ldc           #34                 // String DFSClient readNextPacket got header {}
      63: aload_1
      64: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      69: aload_1
      70: aload_0
      71: getfield      #35                 // Field lastSeqNo:J
      74: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.sanityCheck:(J)Z
      77: ifne          107
      80: new           #37                 // class java/io/IOException
      83: dup
      84: new           #38                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #40                 // String BlockReader: error in packet header
      93: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_1
      97: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #44                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: aload_1
     108: invokevirtual #31                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getDataLen:()I
     111: ifle          265
     114: iconst_1
     115: aload_1
     116: invokevirtual #31                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getDataLen:()I
     119: iconst_1
     120: isub
     121: aload_0
     122: getfield      #45                 // Field bytesPerChecksum:I
     125: idiv
     126: iadd
     127: istore_2
     128: iload_2
     129: aload_0
     130: getfield      #46                 // Field checksumSize:I
     133: imul
     134: istore_3
     135: getstatic     #29                 // Field $assertionsDisabled:Z
     138: ifne          200
     141: aload_0
     142: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
     145: invokevirtual #47                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.getChecksumSlice:()Ljava/nio/ByteBuffer;
     148: invokevirtual #30                 // Method java/nio/ByteBuffer.capacity:()I
     151: iload_3
     152: if_icmpeq     200
     155: new           #32                 // class java/lang/AssertionError
     158: dup
     159: new           #38                 // class java/lang/StringBuilder
     162: dup
     163: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     166: ldc           #48                 // String checksum slice capacity=
     168: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload_0
     172: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
     175: invokevirtual #47                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.getChecksumSlice:()Ljava/nio/ByteBuffer;
     178: invokevirtual #30                 // Method java/nio/ByteBuffer.capacity:()I
     181: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     184: ldc           #50                 // String  checksumsLen=
     186: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: iload_3
     190: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     193: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: invokespecial #51                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     199: athrow
     200: aload_0
     201: aload_1
     202: invokevirtual #52                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSeqno:()J
     205: putfield      #35                 // Field lastSeqNo:J
     208: aload_0
     209: getfield      #53                 // Field verifyChecksum:Z
     212: ifeq          251
     215: aload_0
     216: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
     219: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
     222: ifle          251
     225: aload_0
     226: getfield      #54                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
     229: aload_0
     230: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
     233: aload_0
     234: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
     237: invokevirtual #47                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.getChecksumSlice:()Ljava/nio/ByteBuffer;
     240: aload_0
     241: getfield      #7                  // Field filename:Ljava/lang/String;
     244: aload_1
     245: invokevirtual #55                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getOffsetInBlock:()J
     248: invokevirtual #56                 // Method org/apache/hadoop/util/DataChecksum.verifyChunkedSums:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/lang/String;J)V
     251: aload_0
     252: dup
     253: getfield      #13                 // Field bytesNeededToFinish:J
     256: aload_1
     257: invokevirtual #31                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getDataLen:()I
     260: i2l
     261: lsub
     262: putfield      #13                 // Field bytesNeededToFinish:J
     265: aload_1
     266: invokevirtual #55                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getOffsetInBlock:()J
     269: aload_0
     270: getfield      #57                 // Field startOffset:J
     273: lcmp
     274: ifge          297
     277: aload_0
     278: getfield      #57                 // Field startOffset:J
     281: aload_1
     282: invokevirtual #55                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getOffsetInBlock:()J
     285: lsub
     286: l2i
     287: istore_2
     288: aload_0
     289: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
     292: iload_2
     293: invokevirtual #23                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     296: pop
     297: aload_0
     298: getfield      #13                 // Field bytesNeededToFinish:J
     301: lconst_0
     302: lcmp
     303: ifgt          334
     306: aload_0
     307: invokespecial #58                 // Method readTrailingEmptyPacket:()V
     310: aload_0
     311: getfield      #53                 // Field verifyChecksum:Z
     314: ifeq          327
     317: aload_0
     318: getstatic     #59                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.CHECKSUM_OK:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
     321: invokevirtual #60                 // Method sendReadResult:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;)V
     324: goto          334
     327: aload_0
     328: getstatic     #61                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.SUCCESS:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
     331: invokevirtual #60                 // Method sendReadResult:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;)V
     334: return

  public synchronized long skip(long) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_3
       2: lload_3
       3: lload_1
       4: lcmp
       5: ifge          99
       8: lload_1
       9: lload_3
      10: lsub
      11: lstore        5
      13: aload_0
      14: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      17: ifnull        39
      20: aload_0
      21: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      24: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      27: ifne          43
      30: aload_0
      31: getfield      #13                 // Field bytesNeededToFinish:J
      34: lconst_0
      35: lcmp
      36: ifle          43
      39: aload_0
      40: invokespecial #14                 // Method readNextPacket:()V
      43: aload_0
      44: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      47: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      50: ifne          56
      53: goto          99
      56: aload_0
      57: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      60: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      63: i2l
      64: lload         5
      66: invokestatic  #62                 // Method java/lang/Math.min:(JJ)J
      69: l2i
      70: istore        7
      72: aload_0
      73: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      76: aload_0
      77: getfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      80: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I
      83: iload         7
      85: iadd
      86: invokevirtual #23                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      89: pop
      90: lload_3
      91: iload         7
      93: i2l
      94: ladd
      95: lstore_3
      96: goto          2
      99: lload_3
     100: lreturn

  private void readTrailingEmptyPacket() throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #63                 // String Reading empty packet at end of read
       5: invokeinterface #64,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
      14: aload_0
      15: getfield      #25                 // Field in:Ljava/nio/channels/ReadableByteChannel;
      18: invokevirtual #26                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.receiveNextPacket:(Ljava/nio/channels/ReadableByteChannel;)V
      21: aload_0
      22: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
      25: invokevirtual #27                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.getHeader:()Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader;
      28: astore_1
      29: aload_1
      30: invokevirtual #65                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.isLastPacketInBlock:()Z
      33: ifeq          43
      36: aload_1
      37: invokevirtual #31                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getDataLen:()I
      40: ifeq          70
      43: new           #37                 // class java/io/IOException
      46: dup
      47: new           #38                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #66                 // String Expected empty end-of-read packet! Header:
      56: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #44                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  protected org.apache.hadoop.hdfs.client.impl.BlockReaderRemote(java.lang.String, long, org.apache.hadoop.util.DataChecksum, boolean, long, long, long, org.apache.hadoop.hdfs.net.Peer, org.apache.hadoop.hdfs.protocol.DatanodeID, org.apache.hadoop.hdfs.PeerCache, int);
    Code:
       0: aload_0
       1: invokespecial #67                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #68                 // class org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver
       8: dup
       9: iconst_1
      10: invokespecial #69                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver."<init>":(Z)V
      13: putfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
      16: aload_0
      17: aconst_null
      18: putfield      #11                 // Field curDataSlice:Ljava/nio/ByteBuffer;
      21: aload_0
      22: ldc2_w        #70                 // long -1l
      25: putfield      #35                 // Field lastSeqNo:J
      28: aload_0
      29: iconst_0
      30: putfield      #72                 // Field sentStatusCode:Z
      33: aload_0
      34: aload         12
      36: putfield      #1                  // Field peer:Lorg/apache/hadoop/hdfs/net/Peer;
      39: aload_0
      40: aload         13
      42: putfield      #8                  // Field datanodeID:Lorg/apache/hadoop/hdfs/protocol/DatanodeID;
      45: aload_0
      46: aload         12
      48: invokeinterface #73,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getInputStreamChannel:()Ljava/nio/channels/ReadableByteChannel;
      53: putfield      #25                 // Field in:Ljava/nio/channels/ReadableByteChannel;
      56: aload_0
      57: aload         4
      59: putfield      #54                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
      62: aload_0
      63: iload         5
      65: putfield      #53                 // Field verifyChecksum:Z
      68: aload_0
      69: lload         6
      71: lconst_0
      72: invokestatic  #74                 // Method java/lang/Math.max:(JJ)J
      75: putfield      #57                 // Field startOffset:J
      78: aload_0
      79: aload_1
      80: putfield      #7                  // Field filename:Ljava/lang/String;
      83: aload_0
      84: aload         14
      86: putfield      #75                 // Field peerCache:Lorg/apache/hadoop/hdfs/PeerCache;
      89: aload_0
      90: lload_2
      91: putfield      #76                 // Field blockId:J
      94: aload_0
      95: lload         10
      97: lload         6
      99: lload         8
     101: lsub
     102: ladd
     103: putfield      #13                 // Field bytesNeededToFinish:J
     106: aload_0
     107: aload_0
     108: getfield      #54                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
     111: invokevirtual #77                 // Method org/apache/hadoop/util/DataChecksum.getBytesPerChecksum:()I
     114: putfield      #45                 // Field bytesPerChecksum:I
     117: aload_0
     118: aload_0
     119: getfield      #54                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
     122: invokevirtual #78                 // Method org/apache/hadoop/util/DataChecksum.getChecksumSize:()I
     125: putfield      #46                 // Field checksumSize:I
     128: aload_0
     129: iload         15
     131: putfield      #79                 // Field networkDistance:I
     134: return

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field packetReceiver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver;
       4: invokevirtual #80                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.close:()V
       7: aload_0
       8: ldc2_w        #70                 // long -1l
      11: putfield      #57                 // Field startOffset:J
      14: aload_0
      15: aconst_null
      16: putfield      #54                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
      19: aload_0
      20: getfield      #75                 // Field peerCache:Lorg/apache/hadoop/hdfs/PeerCache;
      23: ifnull        51
      26: aload_0
      27: getfield      #72                 // Field sentStatusCode:Z
      30: ifeq          51
      33: aload_0
      34: getfield      #75                 // Field peerCache:Lorg/apache/hadoop/hdfs/PeerCache;
      37: aload_0
      38: getfield      #8                  // Field datanodeID:Lorg/apache/hadoop/hdfs/protocol/DatanodeID;
      41: aload_0
      42: getfield      #1                  // Field peer:Lorg/apache/hadoop/hdfs/net/Peer;
      45: invokevirtual #81                 // Method org/apache/hadoop/hdfs/PeerCache.put:(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/hdfs/net/Peer;)V
      48: goto          60
      51: aload_0
      52: getfield      #1                  // Field peer:Lorg/apache/hadoop/hdfs/net/Peer;
      55: invokeinterface #82,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.close:()V
      60: return

  void sendReadResult(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          43
       6: aload_0
       7: getfield      #72                 // Field sentStatusCode:Z
      10: ifeq          43
      13: new           #32                 // class java/lang/AssertionError
      16: dup
      17: new           #38                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #83                 // String already sent status code to
      26: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #1                  // Field peer:Lorg/apache/hadoop/hdfs/net/Peer;
      33: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #51                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      42: athrow
      43: aload_0
      44: getfield      #1                  // Field peer:Lorg/apache/hadoop/hdfs/net/Peer;
      47: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getOutputStream:()Ljava/io/OutputStream;
      52: aload_1
      53: invokestatic  #85                 // Method writeReadResult:(Ljava/io/OutputStream;Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;)V
      56: aload_0
      57: iconst_1
      58: putfield      #72                 // Field sentStatusCode:Z
      61: goto          121
      64: astore_2
      65: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      68: new           #38                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #86                 // String Could not send read status (
      77: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: ldc           #87                 // String ) to datanode
      86: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: getfield      #1                  // Field peer:Lorg/apache/hadoop/hdfs/net/Peer;
      93: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getRemoteAddressString:()Ljava/lang/String;
      98: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #89                 // String :
     103: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_2
     107: invokevirtual #90                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     110: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokeinterface #91,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     121: return
    Exception table:
       from    to  target type
          43    61    64   Class java/io/IOException

  static void writeReadResult(java.io.OutputStream, org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status) throws java.io.IOException;
    Code:
       0: invokestatic  #92                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientReadStatusProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientReadStatusProto$Builder;
       3: aload_1
       4: invokevirtual #93                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientReadStatusProto$Builder.setStatus:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientReadStatusProto$Builder;
       7: invokevirtual #94                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientReadStatusProto$Builder.build:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientReadStatusProto;
      10: aload_0
      11: invokevirtual #95                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientReadStatusProto.writeDelimitedTo:(Ljava/io/OutputStream;)V
      14: aload_0
      15: invokevirtual #96                 // Method java/io/OutputStream.flush:()V
      18: return

  public static java.lang.String getFileName(java.net.InetSocketAddress, java.lang.String, long);
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #97                 // Method java/net/InetSocketAddress.toString:()Ljava/lang/String;
      11: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #98                 // String :
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #98                 // String :
      25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: lload_2
      29: invokevirtual #99                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      32: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public int readAll(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #100                // Method org/apache/hadoop/hdfs/client/impl/BlockReaderUtil.readAll:(Lorg/apache/hadoop/hdfs/BlockReader;[BII)I
       7: ireturn

  public void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #101                // Method org/apache/hadoop/hdfs/client/impl/BlockReaderUtil.readFully:(Lorg/apache/hadoop/hdfs/BlockReader;[BII)V
       7: return

  public static org.apache.hadoop.hdfs.BlockReader newBlockReader(java.lang.String, org.apache.hadoop.hdfs.protocol.ExtendedBlock, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, long, long, boolean, java.lang.String, org.apache.hadoop.hdfs.net.Peer, org.apache.hadoop.hdfs.protocol.DatanodeID, org.apache.hadoop.hdfs.PeerCache, org.apache.hadoop.hdfs.server.datanode.CachingStrategy, int) throws java.io.IOException;
    Code:
       0: new           #102                // class java/io/DataOutputStream
       3: dup
       4: new           #103                // class java/io/BufferedOutputStream
       7: dup
       8: aload         9
      10: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getOutputStream:()Ljava/io/OutputStream;
      15: invokespecial #104                // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      18: invokespecial #105                // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      21: astore        14
      23: new           #106                // class org/apache/hadoop/hdfs/protocol/datatransfer/Sender
      26: dup
      27: aload         14
      29: invokespecial #107                // Method org/apache/hadoop/hdfs/protocol/datatransfer/Sender."<init>":(Ljava/io/DataOutputStream;)V
      32: aload_1
      33: aload_2
      34: aload         8
      36: lload_3
      37: lload         5
      39: iload         7
      41: aload         12
      43: invokevirtual #108                // Method org/apache/hadoop/hdfs/protocol/datatransfer/Sender.readBlock:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;JJZLorg/apache/hadoop/hdfs/server/datanode/CachingStrategy;)V
      46: new           #109                // class java/io/DataInputStream
      49: dup
      50: aload         9
      52: invokeinterface #110,  1          // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getInputStream:()Ljava/io/InputStream;
      57: invokespecial #111                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      60: astore        15
      62: aload         15
      64: invokestatic  #112                // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.vintPrefixed:(Ljava/io/InputStream;)Ljava/io/InputStream;
      67: invokestatic  #113                // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.parseFrom:(Ljava/io/InputStream;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto;
      70: astore        16
      72: aload         16
      74: aload         9
      76: aload_1
      77: aload_0
      78: invokestatic  #114                // Method checkSuccess:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto;Lorg/apache/hadoop/hdfs/net/Peer;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Ljava/lang/String;)V
      81: aload         16
      83: invokevirtual #115                // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getReadOpChecksumInfo:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ReadOpChecksumInfoProto;
      86: astore        17
      88: aload         17
      90: invokevirtual #116                // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ReadOpChecksumInfoProto.getChecksum:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto;
      93: invokestatic  #117                // Method org/apache/hadoop/hdfs/protocol/datatransfer/DataTransferProtoUtil.fromProto:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto;)Lorg/apache/hadoop/util/DataChecksum;
      96: astore        18
      98: aload         17
     100: invokevirtual #118                // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ReadOpChecksumInfoProto.getChunkOffset:()J
     103: lstore        19
     105: lload         19
     107: lconst_0
     108: lcmp
     109: iflt          133
     112: lload         19
     114: lload_3
     115: lcmp
     116: ifgt          133
     119: lload         19
     121: lload_3
     122: aload         18
     124: invokevirtual #77                 // Method org/apache/hadoop/util/DataChecksum.getBytesPerChecksum:()I
     127: i2l
     128: lsub
     129: lcmp
     130: ifgt          179
     133: new           #37                 // class java/io/IOException
     136: dup
     137: new           #38                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #119                // String BlockReader: error in first chunk offset (
     146: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: lload         19
     151: invokevirtual #99                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     154: ldc           #120                // String ) startOffset is
     156: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: lload_3
     160: invokevirtual #99                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     163: ldc           #121                // String  for file
     165: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokespecial #44                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: new           #122                // class org/apache/hadoop/hdfs/client/impl/BlockReaderRemote
     182: dup
     183: aload_0
     184: aload_1
     185: invokevirtual #123                // Method org/apache/hadoop/hdfs/protocol/ExtendedBlock.getBlockId:()J
     188: aload         18
     190: iload         7
     192: lload_3
     193: lload         19
     195: lload         5
     197: aload         9
     199: aload         10
     201: aload         11
     203: iload         13
     205: invokespecial #124                // Method "<init>":(Ljava/lang/String;JLorg/apache/hadoop/util/DataChecksum;ZJJJLorg/apache/hadoop/hdfs/net/Peer;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/hdfs/PeerCache;I)V
     208: areturn

  static void checkSuccess(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$BlockOpResponseProto, org.apache.hadoop.hdfs.net.Peer, org.apache.hadoop.hdfs.protocol.ExtendedBlock, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #125                // String for OP_READ_BLOCK, self=
       9: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokeinterface #126,  1          // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getLocalAddressString:()Ljava/lang/String;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #127                // String , remote=
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getRemoteAddressString:()Ljava/lang/String;
      32: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #128                // String , for file
      37: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_3
      41: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #129                // String , for pool
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_2
      50: invokevirtual #130                // Method org/apache/hadoop/hdfs/protocol/ExtendedBlock.getBlockPoolId:()Ljava/lang/String;
      53: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #131                // String  block
      58: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #123                // Method org/apache/hadoop/hdfs/protocol/ExtendedBlock.getBlockId:()J
      65: invokevirtual #99                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      68: ldc           #132                // String _
      70: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_2
      74: invokevirtual #133                // Method org/apache/hadoop/hdfs/protocol/ExtendedBlock.getGenerationStamp:()J
      77: invokevirtual #99                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      80: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: astore        4
      85: aload_0
      86: aload         4
      88: invokestatic  #134                // Method org/apache/hadoop/hdfs/protocol/datatransfer/DataTransferProtoUtil.checkBlockOpStatus:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto;Ljava/lang/String;)V
      91: return

  public int available();
    Code:
       0: ldc           #135                // int 131072
       2: ireturn

  public boolean isShortCircuit();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.hdfs.shortcircuit.ClientMmap getClientMmap(java.util.EnumSet<org.apache.hadoop.fs.ReadOption>);
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.util.DataChecksum getDataChecksum();
    Code:
       0: aload_0
       1: getfield      #54                 // Field checksum:Lorg/apache/hadoop/util/DataChecksum;
       4: areturn

  public int getNetworkDistance();
    Code:
       0: aload_0
       1: getfield      #79                 // Field networkDistance:I
       4: ireturn

  static {};
    Code:
       0: ldc           #122                // class org/apache/hadoop/hdfs/client/impl/BlockReaderRemote
       2: invokevirtual #136                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #29                 // Field $assertionsDisabled:Z
      16: ldc           #122                // class org/apache/hadoop/hdfs/client/impl/BlockReaderRemote
      18: invokestatic  #137                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      24: return
}
