Compiled from "DatanodeStorage.java"
public class org.apache.hadoop.hdfs.server.protocol.DatanodeStorage {
  private final java.lang.String storageID;

  private final org.apache.hadoop.hdfs.server.protocol.DatanodeStorage$State state;

  private final org.apache.hadoop.fs.StorageType storageType;

  private static final java.lang.String STORAGE_ID_PREFIX;

  public org.apache.hadoop.hdfs.server.protocol.DatanodeStorage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/apache/hadoop/hdfs/server/protocol/DatanodeStorage$State.NORMAL:Lorg/apache/hadoop/hdfs/server/protocol/DatanodeStorage$State;
       5: getstatic     #2                  // Field org/apache/hadoop/fs/StorageType.DEFAULT:Lorg/apache/hadoop/fs/StorageType;
       8: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/hdfs/server/protocol/DatanodeStorage$State;Lorg/apache/hadoop/fs/StorageType;)V
      11: return

  public org.apache.hadoop.hdfs.server.protocol.DatanodeStorage(java.lang.String, org.apache.hadoop.hdfs.server.protocol.DatanodeStorage$State, org.apache.hadoop.fs.StorageType);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field storageID:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field state:Lorg/apache/hadoop/hdfs/server/protocol/DatanodeStorage$State;
      14: aload_0
      15: aload_3
      16: putfield      #7                  // Field storageType:Lorg/apache/hadoop/fs/StorageType;
      19: return

  public java.lang.String getStorageID();
    Code:
       0: aload_0
       1: getfield      #5                  // Field storageID:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.hdfs.server.protocol.DatanodeStorage$State getState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Lorg/apache/hadoop/hdfs/server/protocol/DatanodeStorage$State;
       4: areturn

  public org.apache.hadoop.fs.StorageType getStorageType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field storageType:Lorg/apache/hadoop/fs/StorageType;
       4: areturn

  public static java.lang.String generateUuid();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #11                 // String DS-
       9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: invokestatic  #13                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      15: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  public static boolean isValidStorageId(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        28
       4: aload_0
       5: ldc           #11                 // String DS-
       7: invokevirtual #16                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      10: ifne          28
      13: aload_0
      14: ldc           #11                 // String DS-
      16: invokevirtual #17                 // Method java/lang/String.length:()I
      19: invokevirtual #18                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      22: invokestatic  #19                 // Method java/util/UUID.fromString:(Ljava/lang/String;)Ljava/util/UUID;
      25: pop
      26: iconst_1
      27: ireturn
      28: goto          32
      31: astore_1
      32: iconst_0
      33: ireturn
    Exception table:
       from    to  target type
           0    27    31   Class java/lang/IllegalArgumentException

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String DatanodeStorage[
       9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field storageID:Ljava/lang/String;
      16: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String ,
      21: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field storageType:Lorg/apache/hadoop/fs/StorageType;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #22                 // String ,
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field state:Lorg/apache/hadoop/hdfs/server/protocol/DatanodeStorage$State;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #23                 // String ]
      45: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: instanceof    #10                 // class org/apache/hadoop/hdfs/server/protocol/DatanodeStorage
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_1
      21: checkcast     #10                 // class org/apache/hadoop/hdfs/server/protocol/DatanodeStorage
      24: astore_2
      25: aload_2
      26: invokevirtual #24                 // Method getStorageID:()Ljava/lang/String;
      29: aload_0
      30: invokevirtual #24                 // Method getStorageID:()Ljava/lang/String;
      33: invokevirtual #25                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getStorageID:()Ljava/lang/String;
       4: invokevirtual #26                 // Method java/lang/String.hashCode:()I
       7: ireturn
}
