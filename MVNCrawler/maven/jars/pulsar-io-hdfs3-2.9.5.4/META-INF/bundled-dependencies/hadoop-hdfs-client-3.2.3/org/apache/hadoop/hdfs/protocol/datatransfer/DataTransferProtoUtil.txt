Compiled from "DataTransferProtoUtil.java"
public abstract class org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferProtoUtil {
  public org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferProtoUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage fromProto(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$OpWriteBlockProto$BlockConstructionStage);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$OpWriteBlockProto$BlockConstructionStage.name:()Ljava/lang/String;
       4: invokestatic  #3                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/BlockConstructionStage.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/BlockConstructionStage;
       7: areturn

  static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$OpWriteBlockProto$BlockConstructionStage toProto(org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/BlockConstructionStage.name:()Ljava/lang/String;
       4: invokestatic  #5                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$OpWriteBlockProto$BlockConstructionStage.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$OpWriteBlockProto$BlockConstructionStage;
       7: areturn

  public static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$ChecksumProto toProto(org.apache.hadoop.util.DataChecksum);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method org/apache/hadoop/util/DataChecksum.getChecksumType:()Lorg/apache/hadoop/util/DataChecksum$Type;
       4: invokestatic  #7                  // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.convert:(Lorg/apache/hadoop/util/DataChecksum$Type;)Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$ChecksumTypeProto;
       7: astore_1
       8: invokestatic  #8                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto$Builder;
      11: aload_0
      12: invokevirtual #9                  // Method org/apache/hadoop/util/DataChecksum.getBytesPerChecksum:()I
      15: invokevirtual #10                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto$Builder.setBytesPerChecksum:(I)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto$Builder;
      18: aload_1
      19: invokevirtual #11                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto$Builder.setType:(Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$ChecksumTypeProto;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto$Builder;
      22: invokevirtual #12                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto$Builder.build:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto;
      25: areturn

  public static org.apache.hadoop.util.DataChecksum fromProto(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$ChecksumProto);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #13                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto.getBytesPerChecksum:()I
      10: istore_1
      11: aload_0
      12: invokevirtual #14                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ChecksumProto.getType:()Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$ChecksumTypeProto;
      15: invokestatic  #15                 // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.convert:(Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$ChecksumTypeProto;)Lorg/apache/hadoop/util/DataChecksum$Type;
      18: astore_2
      19: aload_2
      20: iload_1
      21: invokestatic  #16                 // Method org/apache/hadoop/util/DataChecksum.newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      24: areturn

  static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$ClientOperationHeaderProto buildClientHeader(org.apache.hadoop.hdfs.protocol.ExtendedBlock, java.lang.String, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>);
    Code:
       0: invokestatic  #17                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto$Builder;
       3: aload_0
       4: aload_2
       5: invokestatic  #18                 // Method buildBaseHeader:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/security/token/Token;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto;
       8: invokevirtual #19                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto$Builder.setBaseHeader:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto$Builder;
      11: aload_1
      12: invokevirtual #20                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto$Builder.setClientName:(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto$Builder;
      15: invokevirtual #21                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto$Builder.build:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$ClientOperationHeaderProto;
      18: areturn

  static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$BaseHeaderProto buildBaseHeader(org.apache.hadoop.hdfs.protocol.ExtendedBlock, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>);
    Code:
       0: invokestatic  #22                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder;
       3: aload_0
       4: invokestatic  #23                 // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.convert:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$ExtendedBlockProto;
       7: invokevirtual #24                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder.setBlock:(Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$ExtendedBlockProto;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder;
      10: aload_1
      11: invokestatic  #25                 // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.convert:(Lorg/apache/hadoop/security/token/Token;)Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;
      14: invokevirtual #26                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder.setToken:(Lorg/apache/hadoop/security/proto/SecurityProtos$TokenProto;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder;
      17: astore_2
      18: invokestatic  #27                 // Method org/apache/htrace/core/Tracer.getCurrentSpanId:()Lorg/apache/htrace/core/SpanId;
      21: astore_3
      22: aload_3
      23: invokevirtual #28                 // Method org/apache/htrace/core/SpanId.isValid:()Z
      26: ifeq          51
      29: aload_2
      30: invokestatic  #29                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto$Builder;
      33: aload_3
      34: invokevirtual #30                 // Method org/apache/htrace/core/SpanId.getHigh:()J
      37: invokevirtual #31                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto$Builder.setTraceId:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto$Builder;
      40: aload_3
      41: invokevirtual #32                 // Method org/apache/htrace/core/SpanId.getLow:()J
      44: invokevirtual #33                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto$Builder.setParentId:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto$Builder;
      47: invokevirtual #34                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder.setTraceInfo:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto$Builder;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder;
      50: pop
      51: aload_2
      52: invokevirtual #35                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto$Builder.build:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BaseHeaderProto;
      55: areturn

  public static org.apache.htrace.core.SpanId fromProto(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$DataTransferTraceInfoProto);
    Code:
       0: aload_0
       1: ifnull        34
       4: aload_0
       5: invokevirtual #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto.hasTraceId:()Z
       8: ifeq          34
      11: aload_0
      12: invokevirtual #37                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto.hasParentId:()Z
      15: ifeq          34
      18: new           #38                 // class org/apache/htrace/core/SpanId
      21: dup
      22: aload_0
      23: invokevirtual #39                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto.getTraceId:()J
      26: aload_0
      27: invokevirtual #40                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$DataTransferTraceInfoProto.getParentId:()J
      30: invokespecial #41                 // Method org/apache/htrace/core/SpanId."<init>":(JJ)V
      33: areturn
      34: aconst_null
      35: areturn

  public static void checkBlockOpStatus(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$BlockOpResponseProto, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #42                 // Method checkBlockOpStatus:(Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto;Ljava/lang/String;Z)V
       6: return

  public static void checkBlockOpStatus(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$BlockOpResponseProto, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getStatus:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
       4: getstatic     #44                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.SUCCESS:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
       7: if_acmpeq     181
      10: aload_0
      11: invokevirtual #43                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getStatus:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      14: getstatic     #45                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.ERROR_ACCESS_TOKEN:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      17: if_acmpne     59
      20: new           #46                 // class org/apache/hadoop/hdfs/security/token/block/InvalidBlockTokenException
      23: dup
      24: new           #47                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #49                 // String Got access token error, status message
      33: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #51                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getMessage:()Ljava/lang/String;
      40: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #52                 // String ,
      45: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #54                 // Method org/apache/hadoop/hdfs/security/token/block/InvalidBlockTokenException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: iload_2
      60: ifeq          127
      63: aload_0
      64: invokevirtual #43                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getStatus:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      67: getstatic     #55                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.ERROR_BLOCK_PINNED:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      70: if_acmpne     127
      73: new           #56                 // class org/apache/hadoop/hdfs/protocol/datatransfer/BlockPinningException
      76: dup
      77: new           #47                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #57                 // String Got error, status=
      86: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: invokevirtual #43                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getStatus:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      93: invokevirtual #58                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.name:()Ljava/lang/String;
      96: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #59                 // String , status message
     101: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: invokevirtual #51                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getMessage:()Ljava/lang/String;
     108: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: ldc           #52                 // String ,
     113: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_1
     117: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #60                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/BlockPinningException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: new           #61                 // class java/io/IOException
     130: dup
     131: new           #47                 // class java/lang/StringBuilder
     134: dup
     135: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #57                 // String Got error, status=
     140: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_0
     144: invokevirtual #43                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getStatus:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
     147: invokevirtual #58                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.name:()Ljava/lang/String;
     150: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: ldc           #59                 // String , status message
     155: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_0
     159: invokevirtual #51                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$BlockOpResponseProto.getMessage:()Ljava/lang/String;
     162: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: ldc           #52                 // String ,
     167: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_1
     171: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     180: athrow
     181: return
}
