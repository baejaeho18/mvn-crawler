Compiled from "NameNodeProxiesClient.java"
public class org.apache.hadoop.hdfs.NameNodeProxiesClient {
  private static final org.slf4j.Logger LOG;

  private static final int MAX_RETRIES;

  private static final int DELAY_MILLISECONDS;

  public org.apache.hadoop.hdfs.NameNodeProxiesClient();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.hdfs.NameNodeProxiesClient$ProxyAndInfo<org.apache.hadoop.hdfs.protocol.ClientProtocol> createProxyWithClientProtocol(org.apache.hadoop.conf.Configuration, java.net.URI, java.util.concurrent.atomic.AtomicBoolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/apache/hadoop/hdfs/protocol/ClientProtocol
       4: iconst_1
       5: aload_2
       6: invokestatic  #3                  // Method createFailoverProxyProvider:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;ZLjava/util/concurrent/atomic/AtomicBoolean;)Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
       9: astore_3
      10: aload_3
      11: ifnonnull     54
      14: aload_1
      15: invokestatic  #4                  // Method org/apache/hadoop/hdfs/DFSUtilClient.getNNAddress:(Ljava/net/URI;)Ljava/net/InetSocketAddress;
      18: astore        4
      20: aload         4
      22: invokestatic  #5                  // Method org/apache/hadoop/security/SecurityUtil.buildTokenService:(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/io/Text;
      25: astore        5
      27: aload         4
      29: aload_0
      30: invokestatic  #6                  // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      33: iconst_1
      34: aload_2
      35: invokestatic  #7                  // Method createNonHAProxyWithClientProtocol:(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation;ZLjava/util/concurrent/atomic/AtomicBoolean;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
      38: astore        6
      40: new           #8                  // class org/apache/hadoop/hdfs/NameNodeProxiesClient$ProxyAndInfo
      43: dup
      44: aload         6
      46: aload         5
      48: aload         4
      50: invokespecial #9                  // Method org/apache/hadoop/hdfs/NameNodeProxiesClient$ProxyAndInfo."<init>":(Ljava/lang/Object;Lorg/apache/hadoop/io/Text;Ljava/net/InetSocketAddress;)V
      53: areturn
      54: aload_0
      55: aload_1
      56: ldc           #2                  // class org/apache/hadoop/hdfs/protocol/ClientProtocol
      58: aload_3
      59: invokestatic  #10                 // Method createHAProxy:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;)Lorg/apache/hadoop/hdfs/NameNodeProxiesClient$ProxyAndInfo;
      62: areturn

  public static <T> org.apache.hadoop.hdfs.NameNodeProxiesClient$ProxyAndInfo<T> createProxyWithLossyRetryHandler(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, int, java.util.concurrent.atomic.AtomicBoolean) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: iconst_1
      16: aload         4
      18: invokestatic  #3                  // Method createFailoverProxyProvider:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;ZLjava/util/concurrent/atomic/AtomicBoolean;)Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
      21: astore        5
      23: aload         5
      25: ifnull        171
      28: aload_0
      29: ldc           #13                 // String dfs.client.failover.sleep.base.millis
      31: sipush        500
      34: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      37: istore        6
      39: aload_0
      40: ldc           #15                 // String dfs.client.failover.sleep.max.millis
      42: sipush        15000
      45: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      48: istore        7
      50: aload_0
      51: ldc           #16                 // String dfs.client.failover.max.attempts
      53: bipush        15
      55: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      58: istore        8
      60: aload_0
      61: ldc           #18                 // String dfs.client.retry.max.attempts
      63: bipush        10
      65: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      68: istore        9
      70: new           #19                 // class org/apache/hadoop/io/retry/LossyRetryInvocationHandler
      73: dup
      74: iload_3
      75: aload         5
      77: getstatic     #20                 // Field org/apache/hadoop/io/retry/RetryPolicies.TRY_ONCE_THEN_FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy;
      80: iload         8
      82: iload_3
      83: iconst_1
      84: iadd
      85: iload         9
      87: invokestatic  #21                 // Method java/lang/Math.max:(II)I
      90: iload         6
      92: i2l
      93: iload         7
      95: i2l
      96: invokestatic  #22                 // Method org/apache/hadoop/io/retry/RetryPolicies.failoverOnNetworkException:(Lorg/apache/hadoop/io/retry/RetryPolicy;IIJJ)Lorg/apache/hadoop/io/retry/RetryPolicy;
      99: invokespecial #23                 // Method org/apache/hadoop/io/retry/LossyRetryInvocationHandler."<init>":(ILorg/apache/hadoop/io/retry/FailoverProxyProvider;Lorg/apache/hadoop/io/retry/RetryPolicy;)V
     102: astore        10
     104: aload         5
     106: invokevirtual #24                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.getInterface:()Ljava/lang/Class;
     109: invokevirtual #25                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     112: iconst_1
     113: anewarray     #26                 // class java/lang/Class
     116: dup
     117: iconst_0
     118: aload_2
     119: aastore
     120: aload         10
     122: invokestatic  #27                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
     125: astore        11
     127: aload         5
     129: invokevirtual #28                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.useLogicalURI:()Z
     132: ifeq          146
     135: aload_1
     136: ldc           #30                 // String hdfs
     138: invokestatic  #31                 // Method org/apache/hadoop/hdfs/HAUtilClient.buildTokenServiceForLogicalUri:(Ljava/net/URI;Ljava/lang/String;)Lorg/apache/hadoop/io/Text;
     141: astore        12
     143: goto          155
     146: aload_1
     147: invokestatic  #4                  // Method org/apache/hadoop/hdfs/DFSUtilClient.getNNAddress:(Ljava/net/URI;)Ljava/net/InetSocketAddress;
     150: invokestatic  #5                  // Method org/apache/hadoop/security/SecurityUtil.buildTokenService:(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/io/Text;
     153: astore        12
     155: new           #8                  // class org/apache/hadoop/hdfs/NameNodeProxiesClient$ProxyAndInfo
     158: dup
     159: aload         11
     161: aload         12
     163: aload_1
     164: invokestatic  #4                  // Method org/apache/hadoop/hdfs/DFSUtilClient.getNNAddress:(Ljava/net/URI;)Ljava/net/InetSocketAddress;
     167: invokespecial #9                  // Method org/apache/hadoop/hdfs/NameNodeProxiesClient$ProxyAndInfo."<init>":(Ljava/lang/Object;Lorg/apache/hadoop/io/Text;Ljava/net/InetSocketAddress;)V
     170: areturn
     171: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     174: ldc           #33                 // String Currently creating proxy using LossyRetryInvocationHandler requires NN HA setup
     176: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     181: aconst_null
     182: areturn

  public static <T> org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider<T> createFailoverProxyProvider(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, boolean, java.util.concurrent.atomic.AtomicBoolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: new           #35                 // class org/apache/hadoop/hdfs/server/namenode/ha/ClientHAProxyFactory
       9: dup
      10: invokespecial #36                 // Method org/apache/hadoop/hdfs/server/namenode/ha/ClientHAProxyFactory."<init>":()V
      13: invokestatic  #37                 // Method createFailoverProxyProvider:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;ZLjava/util/concurrent/atomic/AtomicBoolean;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;)Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
      16: areturn

  protected static <T> org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider<T> createFailoverProxyProvider(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, boolean, java.util.concurrent.atomic.AtomicBoolean, org.apache.hadoop.hdfs.server.namenode.ha.HAProxyFactory<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: aload_1
       5: invokestatic  #38                 // Method getFailoverProxyProviderClass:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Ljava/lang/Class;
       8: astore        6
      10: aload         6
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload         6
      19: iconst_4
      20: anewarray     #26                 // class java/lang/Class
      23: dup
      24: iconst_0
      25: ldc           #39                 // class org/apache/hadoop/conf/Configuration
      27: aastore
      28: dup
      29: iconst_1
      30: ldc           #40                 // class java/net/URI
      32: aastore
      33: dup
      34: iconst_2
      35: ldc           #26                 // class java/lang/Class
      37: aastore
      38: dup
      39: iconst_3
      40: ldc           #41                 // class org/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory
      42: aastore
      43: invokevirtual #42                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      46: astore        8
      48: aload         8
      50: iconst_4
      51: anewarray     #43                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_0
      57: aastore
      58: dup
      59: iconst_1
      60: aload_1
      61: aastore
      62: dup
      63: iconst_2
      64: aload_2
      65: aastore
      66: dup
      67: iconst_3
      68: aload         5
      70: aastore
      71: invokevirtual #44                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #45                 // class org/apache/hadoop/io/retry/FailoverProxyProvider
      77: astore        9
      79: aload         9
      81: instanceof    #46                 // class org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider
      84: ifne          101
      87: new           #47                 // class org/apache/hadoop/hdfs/server/namenode/ha/WrappedFailoverProxyProvider
      90: dup
      91: aload         9
      93: invokespecial #48                 // Method org/apache/hadoop/hdfs/server/namenode/ha/WrappedFailoverProxyProvider."<init>":(Lorg/apache/hadoop/io/retry/FailoverProxyProvider;)V
      96: astore        7
      98: goto          108
     101: aload         9
     103: checkcast     #46                 // class org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider
     106: astore        7
     108: goto          179
     111: astore        8
     113: new           #50                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #52                 // String Couldn\'t create proxy provider
     122: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload         6
     127: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: astore        9
     135: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     138: aload         9
     140: aload         8
     142: invokeinterface #56,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     147: aload         8
     149: invokevirtual #57                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     152: instanceof    #58                 // class java/io/IOException
     155: ifeq          167
     158: aload         8
     160: invokevirtual #57                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     163: checkcast     #58                 // class java/io/IOException
     166: athrow
     167: new           #58                 // class java/io/IOException
     170: dup
     171: aload         9
     173: aload         8
     175: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     178: athrow
     179: iload_3
     180: ifeq          264
     183: aload         7
     185: invokevirtual #28                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.useLogicalURI:()Z
     188: ifeq          264
     191: aload_1
     192: invokevirtual #60                 // Method java/net/URI.getPort:()I
     195: istore        8
     197: iload         8
     199: ifle          264
     202: iload         8
     204: sipush        8020
     207: if_icmpeq     264
     210: new           #58                 // class java/io/IOException
     213: dup
     214: new           #50                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #62                 // String Port
     223: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: iload         8
     228: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     231: ldc           #64                 // String  specified in URI
     233: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload_1
     237: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     240: ldc           #65                 // String  but host \'
     242: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: aload_1
     246: invokevirtual #66                 // Method java/net/URI.getHost:()Ljava/lang/String;
     249: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: ldc           #67                 // String \' is a logical (HA) namenode and does not use port information.
     254: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     257: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     260: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     263: athrow
     264: aload         7
     266: aload         4
     268: invokevirtual #69                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.setFallbackToSimpleAuth:(Ljava/util/concurrent/atomic/AtomicBoolean;)V
     271: aload         7
     273: areturn
    Exception table:
       from    to  target type
           3    16   111   Class java/lang/Exception
          17   108   111   Class java/lang/Exception

  public static <T> java.lang.Class<org.apache.hadoop.io.retry.FailoverProxyProvider<T>> getFailoverProxyProviderClass(org.apache.hadoop.conf.Configuration, java.net.URI) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokevirtual #66                 // Method java/net/URI.getHost:()Ljava/lang/String;
      10: astore_2
      11: new           #50                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #70                 // String dfs.client.failover.proxy.provider.
      20: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: astore_3
      31: aload_0
      32: aload_3
      33: aconst_null
      34: ldc           #45                 // class org/apache/hadoop/io/retry/FailoverProxyProvider
      36: invokevirtual #71                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      39: astore        4
      41: aload         4
      43: areturn
      44: astore        4
      46: aload         4
      48: invokevirtual #73                 // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      51: instanceof    #74                 // class java/lang/ClassNotFoundException
      54: ifeq          99
      57: new           #58                 // class java/io/IOException
      60: dup
      61: new           #50                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #75                 // String Could not load failover proxy provider class
      70: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: aload_3
      75: invokevirtual #76                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      78: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #77                 // String  which is configured for authority
      83: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: aload         4
      95: invokespecial #59                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: athrow
      99: aload         4
     101: athrow
    Exception table:
       from    to  target type
          31    43    44   Class java/lang/RuntimeException

  public static <T> org.apache.hadoop.hdfs.NameNodeProxiesClient$ProxyAndInfo<T> createHAProxy(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider<T>);
    Code:
       0: aload_3
       1: invokestatic  #78                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #79                 // class org/apache/hadoop/hdfs/client/impl/DfsClientConf
       8: dup
       9: aload_0
      10: invokespecial #80                 // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      13: astore        4
      15: aload_2
      16: aload_3
      17: getstatic     #20                 // Field org/apache/hadoop/io/retry/RetryPolicies.TRY_ONCE_THEN_FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy;
      20: aload         4
      22: invokevirtual #81                 // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf.getMaxFailoverAttempts:()I
      25: aload         4
      27: invokevirtual #82                 // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf.getMaxRetryAttempts:()I
      30: aload         4
      32: invokevirtual #83                 // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf.getFailoverSleepBaseMillis:()I
      35: i2l
      36: aload         4
      38: invokevirtual #84                 // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf.getFailoverSleepMaxMillis:()I
      41: i2l
      42: invokestatic  #22                 // Method org/apache/hadoop/io/retry/RetryPolicies.failoverOnNetworkException:(Lorg/apache/hadoop/io/retry/RetryPolicy;IIJJ)Lorg/apache/hadoop/io/retry/RetryPolicy;
      45: invokestatic  #85                 // Method org/apache/hadoop/io/retry/RetryProxy.create:(Ljava/lang/Class;Lorg/apache/hadoop/io/retry/FailoverProxyProvider;Lorg/apache/hadoop/io/retry/RetryPolicy;)Ljava/lang/Object;
      48: astore        5
      50: aload_3
      51: invokevirtual #28                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.useLogicalURI:()Z
      54: ifeq          68
      57: aload_1
      58: ldc           #30                 // String hdfs
      60: invokestatic  #31                 // Method org/apache/hadoop/hdfs/HAUtilClient.buildTokenServiceForLogicalUri:(Ljava/net/URI;Ljava/lang/String;)Lorg/apache/hadoop/io/Text;
      63: astore        6
      65: goto          77
      68: aload_1
      69: invokestatic  #4                  // Method org/apache/hadoop/hdfs/DFSUtilClient.getNNAddress:(Ljava/net/URI;)Ljava/net/InetSocketAddress;
      72: invokestatic  #5                  // Method org/apache/hadoop/security/SecurityUtil.buildTokenService:(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/io/Text;
      75: astore        6
      77: new           #8                  // class org/apache/hadoop/hdfs/NameNodeProxiesClient$ProxyAndInfo
      80: dup
      81: aload         5
      83: aload         6
      85: aload_0
      86: aload_1
      87: invokestatic  #86                 // Method org/apache/hadoop/hdfs/DFSUtilClient.getNNAddressCheckLogical:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Ljava/net/InetSocketAddress;
      90: invokespecial #9                  // Method org/apache/hadoop/hdfs/NameNodeProxiesClient$ProxyAndInfo."<init>":(Ljava/lang/Object;Lorg/apache/hadoop/io/Text;Ljava/net/InetSocketAddress;)V
      93: areturn

  public static org.apache.hadoop.hdfs.protocol.ClientProtocol createNonHAProxyWithClientProtocol(java.net.InetSocketAddress, org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.UserGroupInformation, boolean, java.util.concurrent.atomic.AtomicBoolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: aconst_null
       7: invokestatic  #87                 // Method createProxyWithAlignmentContext:(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation;ZLjava/util/concurrent/atomic/AtomicBoolean;Lorg/apache/hadoop/ipc/AlignmentContext;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
      10: areturn

  public static org.apache.hadoop.hdfs.protocol.ClientProtocol createProxyWithAlignmentContext(java.net.InetSocketAddress, org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.UserGroupInformation, boolean, java.util.concurrent.atomic.AtomicBoolean, org.apache.hadoop.ipc.AlignmentContext) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #88                 // class org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolPB
       3: ldc           #89                 // class org/apache/hadoop/ipc/ProtobufRpcEngine
       5: invokestatic  #90                 // Method org/apache/hadoop/ipc/RPC.setProtocolEngine:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;Ljava/lang/Class;)V
       8: aload_1
       9: ldc           #91                 // String dfs.client.retry.policy.enabled
      11: iconst_0
      12: ldc           #92                 // String dfs.client.retry.policy.spec
      14: ldc           #93                 // String 10000,6,60000,10
      16: ldc           #94                 // class org/apache/hadoop/hdfs/server/namenode/SafeModeException
      18: invokevirtual #95                 // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokestatic  #96                 // Method org/apache/hadoop/io/retry/RetryUtils.getDefaultRetryPolicy:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/retry/RetryPolicy;
      24: astore        6
      26: ldc           #88                 // class org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolPB
      28: invokestatic  #97                 // Method org/apache/hadoop/ipc/RPC.getProtocolVersion:(Ljava/lang/Class;)J
      31: lstore        7
      33: ldc           #88                 // class org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolPB
      35: lload         7
      37: aload_0
      38: aload_2
      39: aload_1
      40: aload_1
      41: invokestatic  #98                 // Method org/apache/hadoop/net/NetUtils.getDefaultSocketFactory:(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/SocketFactory;
      44: aload_1
      45: invokestatic  #99                 // Method org/apache/hadoop/ipc/Client.getTimeout:(Lorg/apache/hadoop/conf/Configuration;)I
      48: aload         6
      50: aload         4
      52: aload         5
      54: invokestatic  #100                // Method org/apache/hadoop/ipc/RPC.getProtocolProxy:(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;ILorg/apache/hadoop/io/retry/RetryPolicy;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/apache/hadoop/ipc/AlignmentContext;)Lorg/apache/hadoop/ipc/ProtocolProxy;
      57: invokevirtual #101                // Method org/apache/hadoop/ipc/ProtocolProxy.getProxy:()Ljava/lang/Object;
      60: checkcast     #88                 // class org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolPB
      63: astore        9
      65: iload_3
      66: ifeq          113
      69: new           #102                // class java/util/HashMap
      72: dup
      73: invokespecial #103                // Method java/util/HashMap."<init>":()V
      76: astore        10
      78: new           #104                // class org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB
      81: dup
      82: aload         9
      84: invokespecial #105                // Method org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB."<init>":(Lorg/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolPB;)V
      87: astore        11
      89: ldc           #2                  // class org/apache/hadoop/hdfs/protocol/ClientProtocol
      91: new           #106                // class org/apache/hadoop/io/retry/DefaultFailoverProxyProvider
      94: dup
      95: ldc           #2                  // class org/apache/hadoop/hdfs/protocol/ClientProtocol
      97: aload         11
      99: invokespecial #107                // Method org/apache/hadoop/io/retry/DefaultFailoverProxyProvider."<init>":(Ljava/lang/Class;Ljava/lang/Object;)V
     102: aload         10
     104: aload         6
     106: invokestatic  #108                // Method org/apache/hadoop/io/retry/RetryProxy.create:(Ljava/lang/Class;Lorg/apache/hadoop/io/retry/FailoverProxyProvider;Ljava/util/Map;Lorg/apache/hadoop/io/retry/RetryPolicy;)Ljava/lang/Object;
     109: checkcast     #2                  // class org/apache/hadoop/hdfs/protocol/ClientProtocol
     112: areturn
     113: new           #104                // class org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB
     116: dup
     117: aload         9
     119: invokespecial #105                // Method org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB."<init>":(Lorg/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolPB;)V
     122: areturn

  static {};
    Code:
       0: ldc           #109                // class org/apache/hadoop/hdfs/NameNodeProxiesClient
       2: invokestatic  #110                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
