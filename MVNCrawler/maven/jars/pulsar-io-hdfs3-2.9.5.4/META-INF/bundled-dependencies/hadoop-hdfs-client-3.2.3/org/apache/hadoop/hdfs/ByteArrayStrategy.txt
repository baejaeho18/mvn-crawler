Compiled from "ReaderStrategy.java"
class org.apache.hadoop.hdfs.ByteArrayStrategy implements org.apache.hadoop.hdfs.ReaderStrategy {
  private final org.apache.hadoop.hdfs.DFSClient dfsClient;

  private final org.apache.hadoop.hdfs.ReadStatistics readStatistics;

  private final byte[] readBuf;

  private int offset;

  private final int targetLength;

  public org.apache.hadoop.hdfs.ByteArrayStrategy(byte[], int, int, org.apache.hadoop.hdfs.ReadStatistics, org.apache.hadoop.hdfs.DFSClient);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field readBuf:[B
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field offset:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field targetLength:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field readStatistics:Lorg/apache/hadoop/hdfs/ReadStatistics;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      31: return

  public java.nio.ByteBuffer getReadBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field readBuf:[B
       4: aload_0
       5: getfield      #3                  // Field offset:I
       8: aload_0
       9: getfield      #4                  // Field targetLength:I
      12: invokestatic  #7                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      15: areturn

  public int getTargetLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field targetLength:I
       4: ireturn

  public int readFromBlock(org.apache.hadoop.hdfs.BlockReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field targetLength:I
       6: invokevirtual #8                  // Method readFromBlock:(Lorg/apache/hadoop/hdfs/BlockReader;I)I
       9: ireturn

  public int readFromBlock(org.apache.hadoop.hdfs.BlockReader, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field readBuf:[B
       5: aload_0
       6: getfield      #3                  // Field offset:I
       9: iload_2
      10: invokeinterface #9,  4            // InterfaceMethod org/apache/hadoop/hdfs/BlockReader.read:([BII)I
      15: istore_3
      16: iload_3
      17: ifle          30
      20: aload_0
      21: dup
      22: getfield      #3                  // Field offset:I
      25: iload_3
      26: iadd
      27: putfield      #3                  // Field offset:I
      30: iload_3
      31: ireturn

  public int readFromBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
       6: invokevirtual #11                 // Method readFromBuffer:(Ljava/nio/ByteBuffer;I)I
       9: ireturn

  public int readFromBuffer(java.nio.ByteBuffer, int);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       4: astore_3
       5: aload_3
       6: aload_0
       7: getfield      #2                  // Field readBuf:[B
      10: aload_0
      11: getfield      #3                  // Field offset:I
      14: iload_2
      15: invokevirtual #13                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      18: pop
      19: aload_0
      20: dup
      21: getfield      #3                  // Field offset:I
      24: iload_2
      25: iadd
      26: putfield      #3                  // Field offset:I
      29: iload_2
      30: ireturn
}
