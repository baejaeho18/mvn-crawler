Compiled from "ReplaceDatanodeOnFailure.java"
public final class org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy extends java.lang.Enum<org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy> {
  public static final org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy DISABLE;

  public static final org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy NEVER;

  public static final org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy DEFAULT;

  public static final org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy ALWAYS;

  private final org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Condition condition;

  private static final org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy[] $VALUES;

  public static org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
       3: invokevirtual #2                  // Method "[Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;"
       9: areturn

  public static org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy
       9: areturn

  private org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Policy(org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Condition);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field condition:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;
      11: return

  org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure$Condition getCondition();
    Code:
       0: aload_0
       1: getfield      #7                  // Field condition:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy
       3: dup
       4: ldc           #8                  // String DISABLE
       6: iconst_0
       7: invokestatic  #9                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure.access$000:()Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;
      10: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;)V
      13: putstatic     #11                 // Field DISABLE:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      16: new           #4                  // class org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy
      19: dup
      20: ldc           #12                 // String NEVER
      22: iconst_1
      23: invokestatic  #9                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure.access$000:()Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;
      26: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;)V
      29: putstatic     #13                 // Field NEVER:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      32: new           #4                  // class org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy
      35: dup
      36: ldc           #14                 // String DEFAULT
      38: iconst_2
      39: invokestatic  #15                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure.access$100:()Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;
      42: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;)V
      45: putstatic     #16                 // Field DEFAULT:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      48: new           #4                  // class org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy
      51: dup
      52: ldc           #17                 // String ALWAYS
      54: iconst_3
      55: invokestatic  #18                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure.access$200:()Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;
      58: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Condition;)V
      61: putstatic     #19                 // Field ALWAYS:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      64: iconst_4
      65: anewarray     #4                  // class org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy
      68: dup
      69: iconst_0
      70: getstatic     #11                 // Field DISABLE:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      73: aastore
      74: dup
      75: iconst_1
      76: getstatic     #13                 // Field NEVER:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      79: aastore
      80: dup
      81: iconst_2
      82: getstatic     #16                 // Field DEFAULT:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      85: aastore
      86: dup
      87: iconst_3
      88: getstatic     #19                 // Field ALWAYS:Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      91: aastore
      92: putstatic     #1                  // Field $VALUES:[Lorg/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure$Policy;
      95: return
}
