Compiled from "DFSClient.java"
final class org.apache.hadoop.hdfs.DFSClient$1 extends org.apache.hadoop.util.Daemon$DaemonFactory {
  private final java.util.concurrent.atomic.AtomicInteger threadIndex;

  org.apache.hadoop.hdfs.DFSClient$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/util/Daemon$DaemonFactory."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field threadIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      16: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/hadoop/util/Daemon$DaemonFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       5: astore_2
       6: aload_2
       7: new           #6                  // class java/lang/StringBuilder
      10: dup
      11: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #8                  // String hedgedRead-
      16: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #4                  // Field threadIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokevirtual #13                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      35: aload_2
      36: areturn
}
