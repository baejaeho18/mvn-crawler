Compiled from "DFSPacket.java"
public class org.apache.hadoop.hdfs.DFSPacket {
  public static final long HEART_BEAT_SEQNO;

  private static org.apache.htrace.core.SpanId[] EMPTY;

  private final long seqno;

  private final long offsetInBlock;

  private boolean syncBlock;

  private int numChunks;

  private final int maxChunks;

  private byte[] buf;

  private final boolean lastPacketInBlock;

  private int checksumStart;

  private int checksumPos;

  private final int dataStart;

  private int dataPos;

  private org.apache.htrace.core.SpanId[] traceParents;

  private int traceParentsUsed;

  private org.apache.htrace.core.TraceScope scope;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hdfs.DFSPacket(byte[], int, long, long, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field EMPTY:[Lorg/apache/htrace/core/SpanId;
       8: putfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      11: aload_0
      12: iload         8
      14: putfield      #4                  // Field lastPacketInBlock:Z
      17: aload_0
      18: iconst_0
      19: putfield      #5                  // Field numChunks:I
      22: aload_0
      23: lload_3
      24: putfield      #6                  // Field offsetInBlock:J
      27: aload_0
      28: lload         5
      30: putfield      #7                  // Field seqno:J
      33: aload_0
      34: aload_1
      35: putfield      #8                  // Field buf:[B
      38: aload_0
      39: getstatic     #9                  // Field org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.PKT_MAX_HEADER_LEN:I
      42: putfield      #10                 // Field checksumStart:I
      45: aload_0
      46: aload_0
      47: getfield      #10                 // Field checksumStart:I
      50: putfield      #11                 // Field checksumPos:I
      53: aload_0
      54: aload_0
      55: getfield      #10                 // Field checksumStart:I
      58: iload_2
      59: iload         7
      61: imul
      62: iadd
      63: putfield      #12                 // Field dataStart:I
      66: aload_0
      67: aload_0
      68: getfield      #12                 // Field dataStart:I
      71: putfield      #13                 // Field dataPos:I
      74: aload_0
      75: iload_2
      76: putfield      #14                 // Field maxChunks:I
      79: return

  synchronized void writeData(byte[], int, int) throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkBuffer:()V
       4: aload_0
       5: getfield      #13                 // Field dataPos:I
       8: iload_3
       9: iadd
      10: aload_0
      11: getfield      #8                  // Field buf:[B
      14: arraylength
      15: if_icmple     26
      18: new           #16                 // class java/nio/BufferOverflowException
      21: dup
      22: invokespecial #17                 // Method java/nio/BufferOverflowException."<init>":()V
      25: athrow
      26: aload_1
      27: iload_2
      28: aload_0
      29: getfield      #8                  // Field buf:[B
      32: aload_0
      33: getfield      #13                 // Field dataPos:I
      36: iload_3
      37: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload_0
      41: dup
      42: getfield      #13                 // Field dataPos:I
      45: iload_3
      46: iadd
      47: putfield      #13                 // Field dataPos:I
      50: return

  public synchronized void writeData(java.nio.ByteBuffer, int) throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkBuffer:()V
       4: iload_2
       5: aload_1
       6: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
       9: if_icmple     19
      12: aload_1
      13: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      16: goto          20
      19: iload_2
      20: istore_2
      21: aload_0
      22: getfield      #13                 // Field dataPos:I
      25: iload_2
      26: iadd
      27: aload_0
      28: getfield      #8                  // Field buf:[B
      31: arraylength
      32: if_icmple     43
      35: new           #16                 // class java/nio/BufferOverflowException
      38: dup
      39: invokespecial #17                 // Method java/nio/BufferOverflowException."<init>":()V
      42: athrow
      43: iconst_0
      44: istore_3
      45: iload_3
      46: iload_2
      47: if_icmpge     71
      50: aload_0
      51: getfield      #8                  // Field buf:[B
      54: aload_0
      55: getfield      #13                 // Field dataPos:I
      58: iload_3
      59: iadd
      60: aload_1
      61: invokevirtual #20                 // Method java/nio/ByteBuffer.get:()B
      64: bastore
      65: iinc          3, 1
      68: goto          45
      71: aload_0
      72: dup
      73: getfield      #13                 // Field dataPos:I
      76: iload_2
      77: iadd
      78: putfield      #13                 // Field dataPos:I
      81: return

  public synchronized void writeChecksum(byte[], int, int) throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkBuffer:()V
       4: iload_3
       5: ifne          9
       8: return
       9: aload_0
      10: getfield      #11                 // Field checksumPos:I
      13: iload_3
      14: iadd
      15: aload_0
      16: getfield      #12                 // Field dataStart:I
      19: if_icmple     30
      22: new           #16                 // class java/nio/BufferOverflowException
      25: dup
      26: invokespecial #17                 // Method java/nio/BufferOverflowException."<init>":()V
      29: athrow
      30: aload_1
      31: iload_2
      32: aload_0
      33: getfield      #8                  // Field buf:[B
      36: aload_0
      37: getfield      #11                 // Field checksumPos:I
      40: iload_3
      41: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: aload_0
      45: dup
      46: getfield      #11                 // Field checksumPos:I
      49: iload_3
      50: iadd
      51: putfield      #11                 // Field checksumPos:I
      54: return

  public synchronized void writeTo(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkBuffer:()V
       4: aload_0
       5: getfield      #13                 // Field dataPos:I
       8: aload_0
       9: getfield      #12                 // Field dataStart:I
      12: isub
      13: istore_2
      14: aload_0
      15: getfield      #11                 // Field checksumPos:I
      18: aload_0
      19: getfield      #10                 // Field checksumStart:I
      22: isub
      23: istore_3
      24: iconst_4
      25: iload_2
      26: iadd
      27: iload_3
      28: iadd
      29: istore        4
      31: new           #22                 // class org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader
      34: dup
      35: iload         4
      37: aload_0
      38: getfield      #6                  // Field offsetInBlock:J
      41: aload_0
      42: getfield      #7                  // Field seqno:J
      45: aload_0
      46: getfield      #4                  // Field lastPacketInBlock:Z
      49: iload_2
      50: aload_0
      51: getfield      #23                 // Field syncBlock:Z
      54: invokespecial #24                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader."<init>":(IJJZIZ)V
      57: astore        5
      59: aload_0
      60: getfield      #11                 // Field checksumPos:I
      63: aload_0
      64: getfield      #12                 // Field dataStart:I
      67: if_icmpeq     110
      70: aload_0
      71: getfield      #8                  // Field buf:[B
      74: aload_0
      75: getfield      #10                 // Field checksumStart:I
      78: aload_0
      79: getfield      #8                  // Field buf:[B
      82: aload_0
      83: getfield      #12                 // Field dataStart:I
      86: iload_3
      87: isub
      88: iload_3
      89: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      92: aload_0
      93: aload_0
      94: getfield      #12                 // Field dataStart:I
      97: putfield      #11                 // Field checksumPos:I
     100: aload_0
     101: aload_0
     102: getfield      #11                 // Field checksumPos:I
     105: iload_3
     106: isub
     107: putfield      #10                 // Field checksumStart:I
     110: aload_0
     111: getfield      #10                 // Field checksumStart:I
     114: aload         5
     116: invokevirtual #25                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSerializedSize:()I
     119: isub
     120: istore        6
     122: getstatic     #26                 // Field $assertionsDisabled:Z
     125: ifne          150
     128: aload_0
     129: getfield      #10                 // Field checksumStart:I
     132: iconst_1
     133: iadd
     134: aload         5
     136: invokevirtual #25                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSerializedSize:()I
     139: if_icmpge     150
     142: new           #27                 // class java/lang/AssertionError
     145: dup
     146: invokespecial #28                 // Method java/lang/AssertionError."<init>":()V
     149: athrow
     150: getstatic     #26                 // Field $assertionsDisabled:Z
     153: ifne          169
     156: iload         6
     158: ifge          169
     161: new           #27                 // class java/lang/AssertionError
     164: dup
     165: invokespecial #28                 // Method java/lang/AssertionError."<init>":()V
     168: athrow
     169: getstatic     #26                 // Field $assertionsDisabled:Z
     172: ifne          198
     175: iload         6
     177: aload         5
     179: invokevirtual #25                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSerializedSize:()I
     182: iadd
     183: aload_0
     184: getfield      #10                 // Field checksumStart:I
     187: if_icmpeq     198
     190: new           #27                 // class java/lang/AssertionError
     193: dup
     194: invokespecial #28                 // Method java/lang/AssertionError."<init>":()V
     197: athrow
     198: aload         5
     200: invokevirtual #29                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getBytes:()[B
     203: iconst_0
     204: aload_0
     205: getfield      #8                  // Field buf:[B
     208: iload         6
     210: aload         5
     212: invokevirtual #25                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSerializedSize:()I
     215: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     218: invokestatic  #30                 // Method org/apache/hadoop/hdfs/DFSClientFaultInjector.get:()Lorg/apache/hadoop/hdfs/DFSClientFaultInjector;
     221: invokevirtual #31                 // Method org/apache/hadoop/hdfs/DFSClientFaultInjector.corruptPacket:()Z
     224: ifeq          253
     227: aload_0
     228: getfield      #8                  // Field buf:[B
     231: iload         6
     233: aload         5
     235: invokevirtual #25                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSerializedSize:()I
     238: iadd
     239: iload_3
     240: iadd
     241: iload_2
     242: iadd
     243: iconst_1
     244: isub
     245: dup2
     246: baload
     247: sipush        255
     250: ixor
     251: i2b
     252: bastore
     253: aload_1
     254: aload_0
     255: getfield      #8                  // Field buf:[B
     258: iload         6
     260: aload         5
     262: invokevirtual #25                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSerializedSize:()I
     265: iload_3
     266: iadd
     267: iload_2
     268: iadd
     269: invokevirtual #32                 // Method java/io/DataOutputStream.write:([BII)V
     272: invokestatic  #30                 // Method org/apache/hadoop/hdfs/DFSClientFaultInjector.get:()Lorg/apache/hadoop/hdfs/DFSClientFaultInjector;
     275: invokevirtual #33                 // Method org/apache/hadoop/hdfs/DFSClientFaultInjector.uncorruptPacket:()Z
     278: ifeq          307
     281: aload_0
     282: getfield      #8                  // Field buf:[B
     285: iload         6
     287: aload         5
     289: invokevirtual #25                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PacketHeader.getSerializedSize:()I
     292: iadd
     293: iload_3
     294: iadd
     295: iload_2
     296: iadd
     297: iconst_1
     298: isub
     299: dup2
     300: baload
     301: sipush        255
     304: ixor
     305: i2b
     306: bastore
     307: return

  private synchronized void checkBuffer() throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field buf:[B
       4: ifnonnull     15
       7: new           #34                 // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #35                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: return

  synchronized void releaseBuffer(org.apache.hadoop.hdfs.util.ByteArrayManager);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field buf:[B
       5: invokevirtual #36                 // Method org/apache/hadoop/hdfs/util/ByteArrayManager.release:([B)I
       8: pop
       9: aload_0
      10: aconst_null
      11: putfield      #8                  // Field buf:[B
      14: return

  synchronized long getLastByteOffsetBlock();
    Code:
       0: aload_0
       1: getfield      #6                  // Field offsetInBlock:J
       4: aload_0
       5: getfield      #13                 // Field dataPos:I
       8: i2l
       9: ladd
      10: aload_0
      11: getfield      #12                 // Field dataStart:I
      14: i2l
      15: lsub
      16: lreturn

  boolean isHeartbeatPacket();
    Code:
       0: aload_0
       1: getfield      #7                  // Field seqno:J
       4: ldc2_w        #38                 // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  boolean isLastPacketInBlock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lastPacketInBlock:Z
       4: ireturn

  long getSeqno();
    Code:
       0: aload_0
       1: getfield      #7                  // Field seqno:J
       4: lreturn

  synchronized int getNumChunks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numChunks:I
       4: ireturn

  synchronized void incNumChunks();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field numChunks:I
       5: iconst_1
       6: iadd
       7: putfield      #5                  // Field numChunks:I
      10: return

  int getMaxChunks();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxChunks:I
       4: ireturn

  synchronized void setSyncBlock(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field syncBlock:Z
       5: return

  public java.lang.String toString();
    Code:
       0: new           #40                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #42                 // String packet seqno:
       9: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field seqno:J
      16: invokevirtual #44                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #45                 // String  offsetInBlock:
      21: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field offsetInBlock:J
      28: invokevirtual #44                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #46                 // String  lastPacketInBlock:
      33: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #4                  // Field lastPacketInBlock:Z
      40: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #48                 // String  lastByteOffsetInBlock:
      45: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #49                 // Method getLastByteOffsetBlock:()J
      52: invokevirtual #44                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: areturn

  public void addTraceParent(org.apache.htrace.core.Span);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokeinterface #51,  1           // InterfaceMethod org/apache/htrace/core/Span.getSpanId:()Lorg/apache/htrace/core/SpanId;
      12: invokevirtual #52                 // Method addTraceParent:(Lorg/apache/htrace/core/SpanId;)V
      15: return

  public void addTraceParent(org.apache.htrace.core.SpanId);
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method org/apache/htrace/core/SpanId.isValid:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #54                 // Field traceParentsUsed:I
      12: aload_0
      13: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      16: arraylength
      17: if_icmpne     56
      20: aload_0
      21: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      24: arraylength
      25: ifne          33
      28: bipush        8
      30: goto          40
      33: aload_0
      34: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      37: arraylength
      38: iconst_2
      39: imul
      40: istore_2
      41: aload_0
      42: aload_0
      43: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      46: iload_2
      47: invokestatic  #55                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      50: checkcast     #56                 // class "[Lorg/apache/htrace/core/SpanId;"
      53: putfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      56: aload_0
      57: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      60: aload_0
      61: getfield      #54                 // Field traceParentsUsed:I
      64: aload_1
      65: aastore
      66: aload_0
      67: dup
      68: getfield      #54                 // Field traceParentsUsed:I
      71: iconst_1
      72: iadd
      73: putfield      #54                 // Field traceParentsUsed:I
      76: return

  public org.apache.htrace.core.SpanId[] getTraceParents();
    Code:
       0: aload_0
       1: getfield      #54                 // Field traceParentsUsed:I
       4: istore_1
       5: aload_0
       6: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
       9: iconst_0
      10: iload_1
      11: invokestatic  #57                 // Method java/util/Arrays.sort:([Ljava/lang/Object;II)V
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: getstatic     #58                 // Field org/apache/htrace/core/SpanId.INVALID:Lorg/apache/htrace/core/SpanId;
      21: astore        4
      23: iload_2
      24: iload_1
      25: if_icmpne     31
      28: goto          70
      31: aload_0
      32: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      35: iload_2
      36: aaload
      37: astore        5
      39: aload         5
      41: aload         4
      43: invokevirtual #59                 // Method org/apache/htrace/core/SpanId.equals:(Ljava/lang/Object;)Z
      46: ifne          64
      49: aload_0
      50: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      53: iload_3
      54: aload         5
      56: aastore
      57: iinc          3, 1
      60: aload         5
      62: astore        4
      64: iinc          2, 1
      67: goto          23
      70: iload_3
      71: aload_0
      72: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      75: arraylength
      76: if_icmpge     103
      79: aload_0
      80: aload_0
      81: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      84: iload_3
      85: invokestatic  #55                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      88: checkcast     #56                 // class "[Lorg/apache/htrace/core/SpanId;"
      91: putfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      94: aload_0
      95: aload_0
      96: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
      99: arraylength
     100: putfield      #54                 // Field traceParentsUsed:I
     103: aload_0
     104: getfield      #3                  // Field traceParents:[Lorg/apache/htrace/core/SpanId;
     107: areturn

  public void setTraceScope(org.apache.htrace.core.TraceScope);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field scope:Lorg/apache/htrace/core/TraceScope;
       5: return

  public org.apache.htrace.core.TraceScope getTraceScope();
    Code:
       0: aload_0
       1: getfield      #60                 // Field scope:Lorg/apache/htrace/core/TraceScope;
       4: areturn

  static {};
    Code:
       0: ldc           #37                 // class org/apache/hadoop/hdfs/DFSPacket
       2: invokevirtual #61                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #26                 // Field $assertionsDisabled:Z
      16: iconst_0
      17: anewarray     #62                 // class org/apache/htrace/core/SpanId
      20: putstatic     #2                  // Field EMPTY:[Lorg/apache/htrace/core/SpanId;
      23: return
}
