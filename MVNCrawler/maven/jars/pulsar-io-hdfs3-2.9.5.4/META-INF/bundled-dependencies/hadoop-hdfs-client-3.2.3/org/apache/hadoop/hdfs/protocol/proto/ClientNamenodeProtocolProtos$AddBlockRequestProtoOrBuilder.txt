Compiled from "ClientNamenodeProtocolProtos.java"
public interface org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$AddBlockRequestProtoOrBuilder extends com.google.protobuf.MessageOrBuilder {
  public abstract boolean hasSrc();

  public abstract java.lang.String getSrc();

  public abstract com.google.protobuf.ByteString getSrcBytes();

  public abstract boolean hasClientName();

  public abstract java.lang.String getClientName();

  public abstract com.google.protobuf.ByteString getClientNameBytes();

  public abstract boolean hasPrevious();

  public abstract org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$ExtendedBlockProto getPrevious();

  public abstract org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$ExtendedBlockProtoOrBuilder getPreviousOrBuilder();

  public abstract java.util.List<org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$DatanodeInfoProto> getExcludeNodesList();

  public abstract org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$DatanodeInfoProto getExcludeNodes(int);

  public abstract int getExcludeNodesCount();

  public abstract java.util.List<? extends org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$DatanodeInfoProtoOrBuilder> getExcludeNodesOrBuilderList();

  public abstract org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$DatanodeInfoProtoOrBuilder getExcludeNodesOrBuilder(int);

  public abstract boolean hasFileId();

  public abstract long getFileId();

  public abstract java.util.List<java.lang.String> getFavoredNodesList();

  public abstract int getFavoredNodesCount();

  public abstract java.lang.String getFavoredNodes(int);

  public abstract com.google.protobuf.ByteString getFavoredNodesBytes(int);

  public abstract java.util.List<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$AddBlockFlagProto> getFlagsList();

  public abstract int getFlagsCount();

  public abstract org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$AddBlockFlagProto getFlags(int);
}
