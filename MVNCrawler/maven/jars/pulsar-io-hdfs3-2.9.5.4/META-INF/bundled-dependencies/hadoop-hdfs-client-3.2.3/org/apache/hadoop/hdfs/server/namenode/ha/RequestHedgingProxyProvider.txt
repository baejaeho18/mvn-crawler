Compiled from "RequestHedgingProxyProvider.java"
public class org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider<T> extends org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<T> {
  public static final org.slf4j.Logger LOG;

  private volatile org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo<T> currentUsedProxy;

  private volatile java.lang.String toIgnore;

  public org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, org.apache.hadoop.hdfs.server.namenode.ha.HAProxyFactory<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #6                  // Method org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider."<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;)V
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field currentUsedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      14: aload_0
      15: aconst_null
      16: putfield      #2                  // Field toIgnore:Ljava/lang/String;
      19: return

  public synchronized org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo<T> getProxy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentUsedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
       4: ifnull        12
       7: aload_0
       8: getfield      #5                  // Field currentUsedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      11: areturn
      12: new           #7                  // class java/util/HashMap
      15: dup
      16: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      19: astore_1
      20: new           #9                  // class java/lang/StringBuilder
      23: dup
      24: ldc           #10                 // String [
      26: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      29: astore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #12                 // Field proxies:Ljava/util/List;
      37: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      42: if_icmpge     90
      45: aload_0
      46: invokespecial #14                 // Method org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.getProxy:()Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      49: astore        4
      51: aload_0
      52: invokevirtual #15                 // Method incrementProxyIndex:()V
      55: aload_1
      56: aload         4
      58: getfield      #16                 // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxyInfo:Ljava/lang/String;
      61: aload         4
      63: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload_2
      70: aload         4
      72: getfield      #16                 // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxyInfo:Ljava/lang/String;
      75: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: bipush        44
      80: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      83: pop
      84: iinc          3, 1
      87: goto          32
      90: aload_2
      91: bipush        93
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      96: pop
      97: ldc           #20                 // class org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider$RequestHedgingInvocationHandler
      99: invokevirtual #21                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     102: iconst_1
     103: anewarray     #22                 // class java/lang/Class
     106: dup
     107: iconst_0
     108: aload_0
     109: getfield      #23                 // Field xface:Ljava/lang/Class;
     112: aastore
     113: new           #20                 // class org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider$RequestHedgingInvocationHandler
     116: dup
     117: aload_0
     118: aload_1
     119: invokespecial #24                 // Method org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider$RequestHedgingInvocationHandler."<init>":(Lorg/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider;Ljava/util/Map;)V
     122: invokestatic  #25                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
     125: astore_3
     126: new           #26                 // class org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo
     129: dup
     130: aload_3
     131: aload_2
     132: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #28                 // Method org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     138: areturn

  public synchronized void performFailover(T);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field currentUsedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
       5: getfield      #16                 // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxyInfo:Ljava/lang/String;
       8: putfield      #2                  // Field toIgnore:Ljava/lang/String;
      11: aload_0
      12: aconst_null
      13: putfield      #5                  // Field currentUsedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      16: return

  private void logProxyException(java.lang.Exception, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method isStandbyException:(Ljava/lang/Exception;)Z
       5: ifeq          23
       8: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
      11: ldc           #31                 // String Invocation returned standby exception on [{}]
      13: aload_2
      14: aload_1
      15: invokeinterface #32,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: goto          35
      23: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #33                 // String Invocation returned exception on [{}]
      28: aload_2
      29: aload_1
      30: invokeinterface #34,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: return

  private boolean isStandbyException(java.lang.Exception);
    Code:
       0: aload_1
       1: instanceof    #35                 // class org/apache/hadoop/ipc/RemoteException
       4: ifeq          18
       7: aload_1
       8: checkcast     #35                 // class org/apache/hadoop/ipc/RemoteException
      11: invokevirtual #36                 // Method org/apache/hadoop/ipc/RemoteException.unwrapRemoteException:()Ljava/io/IOException;
      14: instanceof    #37                 // class org/apache/hadoop/ipc/StandbyException
      17: ireturn
      18: iconst_0
      19: ireturn

  private java.lang.Exception unwrapExecutionException(java.util.concurrent.ExecutionException);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: invokevirtual #38                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
       8: astore_2
       9: aload_2
      10: instanceof    #39                 // class java/lang/reflect/InvocationTargetException
      13: ifeq          25
      16: aload_0
      17: aload_2
      18: checkcast     #39                 // class java/lang/reflect/InvocationTargetException
      21: invokespecial #4                  // Method unwrapInvocationTargetException:(Ljava/lang/reflect/InvocationTargetException;)Ljava/lang/Exception;
      24: areturn
      25: aload_1
      26: areturn

  private java.lang.Exception unwrapInvocationTargetException(java.lang.reflect.InvocationTargetException);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_1
       5: invokevirtual #40                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
       8: astore_2
       9: aload_2
      10: instanceof    #41                 // class java/lang/Exception
      13: ifeq          21
      16: aload_2
      17: checkcast     #41                 // class java/lang/Exception
      20: areturn
      21: aload_1
      22: areturn

  static org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo access$000(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentUsedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
       4: areturn

  static java.lang.Exception access$100(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider, java.lang.reflect.InvocationTargetException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method unwrapInvocationTargetException:(Ljava/lang/reflect/InvocationTargetException;)Ljava/lang/Exception;
       5: areturn

  static void access$200(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider, java.lang.Exception, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method logProxyException:(Ljava/lang/Exception;Ljava/lang/String;)V
       6: return

  static java.lang.String access$300(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider);
    Code:
       0: aload_0
       1: getfield      #2                  // Field toIgnore:Ljava/lang/String;
       4: areturn

  static org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo access$002(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider, org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field currentUsedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
       6: areturn

  static java.lang.Exception access$400(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider, java.util.concurrent.ExecutionException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method unwrapExecutionException:(Ljava/util/concurrent/ExecutionException;)Ljava/lang/Exception;
       5: areturn

  static {};
    Code:
       0: ldc           #42                 // class org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider
       2: invokestatic  #43                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
