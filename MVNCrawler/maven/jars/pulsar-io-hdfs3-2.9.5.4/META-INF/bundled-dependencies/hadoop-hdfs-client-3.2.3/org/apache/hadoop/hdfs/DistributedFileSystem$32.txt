Compiled from "DistributedFileSystem.java"
class org.apache.hadoop.hdfs.DistributedFileSystem$32 extends org.apache.hadoop.fs.FileSystemLinkResolver<org.apache.hadoop.fs.Path> {
  final org.apache.hadoop.hdfs.DistributedFileSystem this$0;

  org.apache.hadoop.hdfs.DistributedFileSystem$32(org.apache.hadoop.hdfs.DistributedFileSystem);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/hadoop/fs/FileSystemLinkResolver."<init>":()V
       9: return

  public org.apache.hadoop.fs.Path doCall(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       4: getfield      #3                  // Field org/apache/hadoop/hdfs/DistributedFileSystem.dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      11: aload_1
      12: invokevirtual #4                  // Method org/apache/hadoop/hdfs/DistributedFileSystem.getPathName:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      15: invokevirtual #5                  // Method org/apache/hadoop/hdfs/DFSClient.getFileLinkInfo:(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
      18: astore_2
      19: aload_2
      20: ifnull        41
      23: aload_2
      24: aload_0
      25: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      28: invokevirtual #6                  // Method org/apache/hadoop/hdfs/DistributedFileSystem.getUri:()Ljava/net/URI;
      31: aload_1
      32: invokeinterface #7,  3            // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      37: invokevirtual #8                  // Method org/apache/hadoop/fs/FileStatus.getSymlink:()Lorg/apache/hadoop/fs/Path;
      40: areturn
      41: new           #9                  // class java/io/FileNotFoundException
      44: dup
      45: new           #10                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #12                 // String File does not exist:
      54: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #16                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      67: athrow

  public org.apache.hadoop.fs.Path next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.getLinkTarget:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: areturn

  public java.lang.Object next(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #18                 // Method next:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       6: areturn

  public java.lang.Object doCall(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method doCall:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
       5: areturn
}
