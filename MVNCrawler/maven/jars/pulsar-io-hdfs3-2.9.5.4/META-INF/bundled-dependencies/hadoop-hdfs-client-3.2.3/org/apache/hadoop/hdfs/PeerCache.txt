Compiled from "PeerCache.java"
public class org.apache.hadoop.hdfs.PeerCache {
  private static final org.slf4j.Logger LOG;

  private org.apache.hadoop.util.Daemon daemon;

  private final com.google.common.collect.LinkedListMultimap<org.apache.hadoop.hdfs.PeerCache$Key, org.apache.hadoop.hdfs.PeerCache$Value> multimap;

  private final int capacity;

  private final long expiryPeriod;

  public org.apache.hadoop.hdfs.PeerCache(int, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method com/google/common/collect/LinkedListMultimap.create:()Lcom/google/common/collect/LinkedListMultimap;
       8: putfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
      11: aload_0
      12: iload_1
      13: putfield      #5                  // Field capacity:I
      16: aload_0
      17: lload_2
      18: putfield      #6                  // Field expiryPeriod:J
      21: aload_0
      22: getfield      #5                  // Field capacity:I
      25: ifne          41
      28: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      31: ldc           #8                  // String SocketCache disabled.
      33: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: goto          85
      41: aload_0
      42: getfield      #6                  // Field expiryPeriod:J
      45: lconst_0
      46: lcmp
      47: ifne          85
      50: new           #10                 // class java/lang/IllegalStateException
      53: dup
      54: new           #11                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #13                 // String Cannot initialize expiryPeriod to
      63: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #6                  // Field expiryPeriod:J
      70: invokevirtual #15                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      73: ldc           #16                 // String  when cache is enabled.
      75: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: return

  private boolean isDaemonStarted();
    Code:
       0: aload_0
       1: getfield      #19                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private synchronized void startExpiryDaemon();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method isDaemonStarted:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: new           #21                 // class org/apache/hadoop/util/Daemon
      12: dup
      13: new           #22                 // class org/apache/hadoop/hdfs/PeerCache$1
      16: dup
      17: aload_0
      18: invokespecial #23                 // Method org/apache/hadoop/hdfs/PeerCache$1."<init>":(Lorg/apache/hadoop/hdfs/PeerCache;)V
      21: invokespecial #24                 // Method org/apache/hadoop/util/Daemon."<init>":(Ljava/lang/Runnable;)V
      24: putfield      #19                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
      27: aload_0
      28: getfield      #19                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
      31: invokevirtual #25                 // Method org/apache/hadoop/util/Daemon.start:()V
      34: return

  public org.apache.hadoop.hdfs.net.Peer get(org.apache.hadoop.hdfs.protocol.DatanodeID, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field capacity:I
       4: ifgt          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: aload_1
      11: iload_2
      12: invokespecial #26                 // Method getInternal:(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Z)Lorg/apache/hadoop/hdfs/net/Peer;
      15: areturn

  private synchronized org.apache.hadoop.hdfs.net.Peer getInternal(org.apache.hadoop.hdfs.protocol.DatanodeID, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
       4: new           #27                 // class org/apache/hadoop/hdfs/PeerCache$Key
       7: dup
       8: aload_1
       9: iload_2
      10: invokespecial #28                 // Method org/apache/hadoop/hdfs/PeerCache$Key."<init>":(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Z)V
      13: invokevirtual #29                 // Method com/google/common/collect/LinkedListMultimap.get:(Ljava/lang/Object;)Ljava/util/List;
      16: astore_3
      17: aload_3
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload_3
      24: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          162
      41: aload         4
      43: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #33                 // class org/apache/hadoop/hdfs/PeerCache$Value
      51: astore        5
      53: aload         4
      55: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.remove:()V
      60: invokestatic  #35                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
      63: aload         5
      65: invokevirtual #36                 // Method org/apache/hadoop/hdfs/PeerCache$Value.getTime:()J
      68: lsub
      69: lstore        6
      71: aload         5
      73: invokevirtual #37                 // Method org/apache/hadoop/hdfs/PeerCache$Value.getPeer:()Lorg/apache/hadoop/hdfs/net/Peer;
      76: astore        8
      78: lload         6
      80: aload_0
      81: getfield      #6                  // Field expiryPeriod:J
      84: lcmp
      85: iflt          146
      88: aload         8
      90: invokeinterface #38,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.close:()V
      95: goto          159
      98: astore        9
     100: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
     103: new           #11                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #40                 // String got IOException closing stale peer
     112: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload         8
     117: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #42                 // String , which is
     122: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: lload         6
     127: invokevirtual #15                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     130: ldc           #43                 // String  ms old
     132: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     143: goto          159
     146: aload         8
     148: invokeinterface #45,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.isClosed:()Z
     153: ifne          159
     156: aload         8
     158: areturn
     159: goto          31
     162: aconst_null
     163: areturn
    Exception table:
       from    to  target type
          88    95    98   Class java/io/IOException

  public void put(org.apache.hadoop.hdfs.protocol.DatanodeID, org.apache.hadoop.hdfs.net.Peer);
    Code:
       0: aload_1
       1: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokeinterface #45,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.isClosed:()Z
      16: ifeq          20
      19: return
      20: aload_0
      21: getfield      #5                  // Field capacity:I
      24: ifgt          42
      27: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      30: iconst_1
      31: anewarray     #47                 // class java/io/Closeable
      34: dup
      35: iconst_0
      36: aload_2
      37: aastore
      38: invokestatic  #48                 // Method org/apache/hadoop/hdfs/util/IOUtilsClient.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      41: return
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokespecial #49                 // Method putInternal:(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/hdfs/net/Peer;)V
      48: return

  private synchronized void putInternal(org.apache.hadoop.hdfs.protocol.DatanodeID, org.apache.hadoop.hdfs.net.Peer);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method startExpiryDaemon:()V
       4: aload_0
       5: getfield      #5                  // Field capacity:I
       8: aload_0
       9: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
      12: invokevirtual #51                 // Method com/google/common/collect/LinkedListMultimap.size:()I
      15: if_icmpne     22
      18: aload_0
      19: invokespecial #52                 // Method evictOldest:()V
      22: aload_0
      23: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
      26: new           #27                 // class org/apache/hadoop/hdfs/PeerCache$Key
      29: dup
      30: aload_1
      31: aload_2
      32: invokeinterface #53,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getDomainSocket:()Lorg/apache/hadoop/net/unix/DomainSocket;
      37: ifnull        44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: invokespecial #28                 // Method org/apache/hadoop/hdfs/PeerCache$Key."<init>":(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Z)V
      48: new           #33                 // class org/apache/hadoop/hdfs/PeerCache$Value
      51: dup
      52: aload_2
      53: invokestatic  #35                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
      56: invokespecial #54                 // Method org/apache/hadoop/hdfs/PeerCache$Value."<init>":(Lorg/apache/hadoop/hdfs/net/Peer;J)V
      59: invokevirtual #55                 // Method com/google/common/collect/LinkedListMultimap.put:(Ljava/lang/Object;Ljava/lang/Object;)Z
      62: pop
      63: return

  public synchronized int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
       4: invokevirtual #51                 // Method com/google/common/collect/LinkedListMultimap.size:()I
       7: ireturn

  private synchronized void evictExpired(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
       4: invokevirtual #51                 // Method com/google/common/collect/LinkedListMultimap.size:()I
       7: ifeq          99
      10: aload_0
      11: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
      14: invokevirtual #56                 // Method com/google/common/collect/LinkedListMultimap.entries:()Ljava/util/List;
      17: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #57                 // class java/util/Map$Entry
      32: astore        4
      34: aload         4
      36: ifnull        99
      39: invokestatic  #35                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
      42: aload         4
      44: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: checkcast     #33                 // class org/apache/hadoop/hdfs/PeerCache$Value
      52: invokevirtual #36                 // Method org/apache/hadoop/hdfs/PeerCache$Value.getTime:()J
      55: lsub
      56: lload_1
      57: lcmp
      58: ifge          64
      61: goto          99
      64: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      67: iconst_1
      68: anewarray     #47                 // class java/io/Closeable
      71: dup
      72: iconst_0
      73: aload         4
      75: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      80: checkcast     #33                 // class org/apache/hadoop/hdfs/PeerCache$Value
      83: invokevirtual #37                 // Method org/apache/hadoop/hdfs/PeerCache$Value.getPeer:()Lorg/apache/hadoop/hdfs/net/Peer;
      86: aastore
      87: invokestatic  #48                 // Method org/apache/hadoop/hdfs/util/IOUtilsClient.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      90: aload_3
      91: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.remove:()V
      96: goto          0
      99: return

  private synchronized void evictOldest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
       4: invokevirtual #56                 // Method com/google/common/collect/LinkedListMultimap.entries:()Ljava/util/List;
       7: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifne          52
      22: new           #10                 // class java/lang/IllegalStateException
      25: dup
      26: new           #11                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #59                 // String Cannot evict from empty cache! capacity:
      35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #5                  // Field capacity:I
      42: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_1
      53: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #57                 // class java/util/Map$Entry
      61: astore_2
      62: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      65: iconst_1
      66: anewarray     #47                 // class java/io/Closeable
      69: dup
      70: iconst_0
      71: aload_2
      72: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      77: checkcast     #33                 // class org/apache/hadoop/hdfs/PeerCache$Value
      80: invokevirtual #37                 // Method org/apache/hadoop/hdfs/PeerCache$Value.getPeer:()Lorg/apache/hadoop/hdfs/net/Peer;
      83: aastore
      84: invokestatic  #48                 // Method org/apache/hadoop/hdfs/util/IOUtilsClient.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      87: aload_1
      88: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.remove:()V
      93: return

  private void run() throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #35                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
       3: lstore_1
       4: invokestatic  #61                 // Method java/lang/Thread.interrupted:()Z
       7: ifne          47
      10: invokestatic  #35                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
      13: lload_1
      14: lsub
      15: lstore_3
      16: lload_3
      17: aload_0
      18: getfield      #6                  // Field expiryPeriod:J
      21: lcmp
      22: iflt          37
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field expiryPeriod:J
      30: invokespecial #62                 // Method evictExpired:(J)V
      33: invokestatic  #35                 // Method org/apache/hadoop/util/Time.monotonicNow:()J
      36: lstore_1
      37: aload_0
      38: getfield      #6                  // Field expiryPeriod:J
      41: invokestatic  #63                 // Method java/lang/Thread.sleep:(J)V
      44: goto          4
      47: aload_0
      48: invokevirtual #64                 // Method clear:()V
      51: new           #65                 // class java/lang/InterruptedException
      54: dup
      55: ldc           #66                 // String Daemon Interrupted
      57: invokespecial #67                 // Method java/lang/InterruptedException."<init>":(Ljava/lang/String;)V
      60: athrow

  synchronized void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
       4: invokevirtual #68                 // Method com/google/common/collect/LinkedListMultimap.values:()Ljava/util/List;
       7: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          52
      22: aload_1
      23: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #33                 // class org/apache/hadoop/hdfs/PeerCache$Value
      31: astore_2
      32: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      35: iconst_1
      36: anewarray     #47                 // class java/io/Closeable
      39: dup
      40: iconst_0
      41: aload_2
      42: invokevirtual #37                 // Method org/apache/hadoop/hdfs/PeerCache$Value.getPeer:()Lorg/apache/hadoop/hdfs/net/Peer;
      45: aastore
      46: invokestatic  #48                 // Method org/apache/hadoop/hdfs/util/IOUtilsClient.cleanupWithLogger:(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
      49: goto          13
      52: aload_0
      53: getfield      #4                  // Field multimap:Lcom/google/common/collect/LinkedListMultimap;
      56: invokevirtual #69                 // Method com/google/common/collect/LinkedListMultimap.clear:()V
      59: return

  void close();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method clear:()V
       4: aload_0
       5: getfield      #19                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
       8: ifnull        39
      11: aload_0
      12: getfield      #19                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
      15: invokevirtual #70                 // Method org/apache/hadoop/util/Daemon.interrupt:()V
      18: aload_0
      19: getfield      #19                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
      22: invokevirtual #71                 // Method org/apache/hadoop/util/Daemon.join:()V
      25: goto          39
      28: astore_1
      29: new           #72                 // class java/lang/RuntimeException
      32: dup
      33: ldc           #73                 // String failed to join thread
      35: invokespecial #74                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: aconst_null
      41: putfield      #19                 // Field daemon:Lorg/apache/hadoop/util/Daemon;
      44: return
    Exception table:
       from    to  target type
          18    25    28   Class java/lang/InterruptedException

  static void access$000(org.apache.hadoop.hdfs.PeerCache) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method run:()V
       4: return

  static {};
    Code:
       0: ldc           #75                 // class org/apache/hadoop/hdfs/PeerCache
       2: invokestatic  #76                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
