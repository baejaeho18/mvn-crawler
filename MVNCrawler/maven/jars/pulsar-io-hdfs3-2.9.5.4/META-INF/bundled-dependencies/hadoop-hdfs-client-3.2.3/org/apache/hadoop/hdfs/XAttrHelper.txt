Compiled from "XAttrHelper.java"
public class org.apache.hadoop.hdfs.XAttrHelper {
  public org.apache.hadoop.hdfs.XAttrHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.hadoop.fs.XAttr buildXAttr(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #2                  // Method buildXAttr:(Ljava/lang/String;[B)Lorg/apache/hadoop/fs/XAttr;
       5: areturn

  public static org.apache.hadoop.fs.XAttr buildXAttr(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: ldc           #3                  // String XAttr name cannot be null.
       3: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #5                  // String .
      10: invokevirtual #6                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      13: istore_2
      14: iload_2
      15: iconst_3
      16: if_icmpge     29
      19: new           #7                  // class org/apache/hadoop/HadoopIllegalArgumentException
      22: dup
      23: ldc           #8                  // String An XAttr name must be prefixed with user/trusted/security/system/raw, followed by a \'.\'
      25: invokespecial #9                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: iload_2
      30: aload_0
      31: invokevirtual #10                 // Method java/lang/String.length:()I
      34: iconst_1
      35: isub
      36: if_icmpne     49
      39: new           #7                  // class org/apache/hadoop/HadoopIllegalArgumentException
      42: dup
      43: ldc           #11                 // String XAttr name cannot be empty.
      45: invokespecial #9                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: iconst_0
      51: iload_2
      52: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      55: astore        4
      57: aload         4
      59: getstatic     #13                 // Field org/apache/hadoop/fs/XAttr$NameSpace.USER:Lorg/apache/hadoop/fs/XAttr$NameSpace;
      62: invokevirtual #14                 // Method org/apache/hadoop/fs/XAttr$NameSpace.toString:()Ljava/lang/String;
      65: invokestatic  #15                 // Method org/apache/hadoop/util/StringUtils.equalsIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      68: ifeq          78
      71: getstatic     #13                 // Field org/apache/hadoop/fs/XAttr$NameSpace.USER:Lorg/apache/hadoop/fs/XAttr$NameSpace;
      74: astore_3
      75: goto          172
      78: aload         4
      80: getstatic     #16                 // Field org/apache/hadoop/fs/XAttr$NameSpace.TRUSTED:Lorg/apache/hadoop/fs/XAttr$NameSpace;
      83: invokevirtual #14                 // Method org/apache/hadoop/fs/XAttr$NameSpace.toString:()Ljava/lang/String;
      86: invokestatic  #15                 // Method org/apache/hadoop/util/StringUtils.equalsIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      89: ifeq          99
      92: getstatic     #16                 // Field org/apache/hadoop/fs/XAttr$NameSpace.TRUSTED:Lorg/apache/hadoop/fs/XAttr$NameSpace;
      95: astore_3
      96: goto          172
      99: aload         4
     101: getstatic     #17                 // Field org/apache/hadoop/fs/XAttr$NameSpace.SYSTEM:Lorg/apache/hadoop/fs/XAttr$NameSpace;
     104: invokevirtual #14                 // Method org/apache/hadoop/fs/XAttr$NameSpace.toString:()Ljava/lang/String;
     107: invokestatic  #15                 // Method org/apache/hadoop/util/StringUtils.equalsIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
     110: ifeq          120
     113: getstatic     #17                 // Field org/apache/hadoop/fs/XAttr$NameSpace.SYSTEM:Lorg/apache/hadoop/fs/XAttr$NameSpace;
     116: astore_3
     117: goto          172
     120: aload         4
     122: getstatic     #18                 // Field org/apache/hadoop/fs/XAttr$NameSpace.SECURITY:Lorg/apache/hadoop/fs/XAttr$NameSpace;
     125: invokevirtual #14                 // Method org/apache/hadoop/fs/XAttr$NameSpace.toString:()Ljava/lang/String;
     128: invokestatic  #15                 // Method org/apache/hadoop/util/StringUtils.equalsIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
     131: ifeq          141
     134: getstatic     #18                 // Field org/apache/hadoop/fs/XAttr$NameSpace.SECURITY:Lorg/apache/hadoop/fs/XAttr$NameSpace;
     137: astore_3
     138: goto          172
     141: aload         4
     143: getstatic     #19                 // Field org/apache/hadoop/fs/XAttr$NameSpace.RAW:Lorg/apache/hadoop/fs/XAttr$NameSpace;
     146: invokevirtual #14                 // Method org/apache/hadoop/fs/XAttr$NameSpace.toString:()Ljava/lang/String;
     149: invokestatic  #15                 // Method org/apache/hadoop/util/StringUtils.equalsIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
     152: ifeq          162
     155: getstatic     #19                 // Field org/apache/hadoop/fs/XAttr$NameSpace.RAW:Lorg/apache/hadoop/fs/XAttr$NameSpace;
     158: astore_3
     159: goto          172
     162: new           #7                  // class org/apache/hadoop/HadoopIllegalArgumentException
     165: dup
     166: ldc           #8                  // String An XAttr name must be prefixed with user/trusted/security/system/raw, followed by a \'.\'
     168: invokespecial #9                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     171: athrow
     172: new           #20                 // class org/apache/hadoop/fs/XAttr$Builder
     175: dup
     176: invokespecial #21                 // Method org/apache/hadoop/fs/XAttr$Builder."<init>":()V
     179: aload_3
     180: invokevirtual #22                 // Method org/apache/hadoop/fs/XAttr$Builder.setNameSpace:(Lorg/apache/hadoop/fs/XAttr$NameSpace;)Lorg/apache/hadoop/fs/XAttr$Builder;
     183: aload_0
     184: iload_2
     185: iconst_1
     186: iadd
     187: invokevirtual #23                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     190: invokevirtual #24                 // Method org/apache/hadoop/fs/XAttr$Builder.setName:(Ljava/lang/String;)Lorg/apache/hadoop/fs/XAttr$Builder;
     193: aload_1
     194: invokevirtual #25                 // Method org/apache/hadoop/fs/XAttr$Builder.setValue:([B)Lorg/apache/hadoop/fs/XAttr$Builder;
     197: invokevirtual #26                 // Method org/apache/hadoop/fs/XAttr$Builder.build:()Lorg/apache/hadoop/fs/XAttr;
     200: areturn

  public static java.util.List<org.apache.hadoop.fs.XAttr> buildXAttrAsList(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method buildXAttr:(Ljava/lang/String;)Lorg/apache/hadoop/fs/XAttr;
       4: astore_1
       5: iconst_1
       6: invokestatic  #28                 // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
       9: astore_2
      10: aload_2
      11: aload_1
      12: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: areturn

  public static byte[] getFirstXAttrValue(java.util.List<org.apache.hadoop.fs.XAttr>);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokestatic  #30                 // Method getFirstXAttr:(Ljava/util/List;)Lorg/apache/hadoop/fs/XAttr;
       6: astore_2
       7: aload_2
       8: ifnull        24
      11: aload_2
      12: invokevirtual #31                 // Method org/apache/hadoop/fs/XAttr.getValue:()[B
      15: astore_1
      16: aload_1
      17: ifnonnull     24
      20: iconst_0
      21: newarray       byte
      23: astore_1
      24: aload_1
      25: areturn

  public static org.apache.hadoop.fs.XAttr getFirstXAttr(java.util.List<org.apache.hadoop.fs.XAttr>);
    Code:
       0: aload_0
       1: ifnull        24
       4: aload_0
       5: invokeinterface #32,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifne          24
      13: aload_0
      14: iconst_0
      15: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #34                 // class org/apache/hadoop/fs/XAttr
      23: areturn
      24: aconst_null
      25: areturn

  public static java.util.Map<java.lang.String, byte[]> buildXAttrMap(java.util.List<org.apache.hadoop.fs.XAttr>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: invokestatic  #35                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       9: astore_1
      10: aload_0
      11: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          72
      26: aload_2
      27: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #34                 // class org/apache/hadoop/fs/XAttr
      35: astore_3
      36: aload_3
      37: invokestatic  #39                 // Method getPrefixedName:(Lorg/apache/hadoop/fs/XAttr;)Ljava/lang/String;
      40: astore        4
      42: aload_3
      43: invokevirtual #31                 // Method org/apache/hadoop/fs/XAttr.getValue:()[B
      46: astore        5
      48: aload         5
      50: ifnonnull     58
      53: iconst_0
      54: newarray       byte
      56: astore        5
      58: aload_1
      59: aload         4
      61: aload         5
      63: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          17
      72: aload_1
      73: areturn

  public static java.lang.String getPrefixedName(org.apache.hadoop.fs.XAttr);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #41                 // Method org/apache/hadoop/fs/XAttr.getNameSpace:()Lorg/apache/hadoop/fs/XAttr$NameSpace;
      10: aload_0
      11: invokevirtual #42                 // Method org/apache/hadoop/fs/XAttr.getName:()Ljava/lang/String;
      14: invokestatic  #43                 // Method getPrefixedName:(Lorg/apache/hadoop/fs/XAttr$NameSpace;Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  public static java.lang.String getPrefixedName(org.apache.hadoop.fs.XAttr$NameSpace, java.lang.String);
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #14                 // Method org/apache/hadoop/fs/XAttr$NameSpace.toString:()Ljava/lang/String;
      11: invokestatic  #46                 // Method org/apache/hadoop/util/StringUtils.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      14: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #5                  // String .
      19: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public static java.util.List<org.apache.hadoop.fs.XAttr> buildXAttrs(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #32,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifeq          23
      13: new           #7                  // class org/apache/hadoop/HadoopIllegalArgumentException
      16: dup
      17: ldc           #49                 // String XAttr names can not be null or empty.
      19: invokespecial #9                  // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: invokeinterface #50,  1           // InterfaceMethod java/util/List.size:()I
      29: invokestatic  #28                 // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
      32: astore_1
      33: aload_0
      34: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          74
      49: aload_2
      50: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #51                 // class java/lang/String
      58: astore_3
      59: aload_1
      60: aload_3
      61: aconst_null
      62: invokestatic  #2                  // Method buildXAttr:(Ljava/lang/String;[B)Lorg/apache/hadoop/fs/XAttr;
      65: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          40
      74: aload_1
      75: areturn
}
