Compiled from "WebHdfsFileSystem.java"
abstract class org.apache.hadoop.hdfs.web.WebHdfsFileSystem$AbstractRunner<T> {
  protected final org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op op;

  private final boolean redirected;

  protected org.apache.hadoop.hdfs.web.resources.ExcludeDatanodesParam excludeDatanodes;

  private boolean checkRetry;

  private java.lang.String redirectHost;

  private boolean followRedirect;

  final org.apache.hadoop.hdfs.web.WebHdfsFileSystem this$0;

  protected abstract java.net.URL getUrl() throws java.io.IOException;

  protected org.apache.hadoop.hdfs.web.WebHdfsFileSystem$AbstractRunner(org.apache.hadoop.hdfs.web.WebHdfsFileSystem, org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #5                  // class org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam
      13: dup
      14: ldc           #6                  // String
      16: invokespecial #7                  // Method org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam."<init>":(Ljava/lang/String;)V
      19: putfield      #8                  // Field excludeDatanodes:Lorg/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam;
      22: aload_0
      23: iconst_1
      24: putfield      #9                  // Field followRedirect:Z
      27: aload_0
      28: aload_2
      29: putfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
      32: aload_0
      33: iload_3
      34: putfield      #11                 // Field redirected:Z
      37: return

  protected org.apache.hadoop.hdfs.web.WebHdfsFileSystem$AbstractRunner(org.apache.hadoop.hdfs.web.WebHdfsFileSystem, org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #12                 // Method "<init>":(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;Z)V
       7: aload_0
       8: iload         4
      10: putfield      #9                  // Field followRedirect:Z
      13: return

  T run() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
       4: invokestatic  #13                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$000:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Lorg/apache/hadoop/security/UserGroupInformation;
       7: invokevirtual #14                 // Method org/apache/hadoop/security/UserGroupInformation.getRealUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      10: astore_1
      11: aload_1
      12: ifnonnull     23
      15: aload_0
      16: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      19: invokestatic  #13                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$000:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Lorg/apache/hadoop/security/UserGroupInformation;
      22: astore_1
      23: aload_0
      24: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
      27: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getRequireAuth:()Z
      32: ifeq          39
      35: aload_1
      36: invokevirtual #16                 // Method org/apache/hadoop/security/UserGroupInformation.checkTGTAndReloginFromKeytab:()V
      39: aload_1
      40: new           #17                 // class org/apache/hadoop/hdfs/web/WebHdfsFileSystem$AbstractRunner$1
      43: dup
      44: aload_0
      45: invokespecial #18                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem$AbstractRunner$1."<init>":(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem$AbstractRunner;)V
      48: invokevirtual #19                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      51: areturn
      52: astore_2
      53: new           #21                 // class java/io/IOException
      56: dup
      57: aload_2
      58: invokespecial #22                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      61: athrow
    Exception table:
       from    to  target type
          39    51    52   Class java/lang/InterruptedException

  protected java.net.HttpURLConnection connect(java.net.URL) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #23                 // Field redirectHost:Ljava/lang/String;
       5: aload_1
       6: invokevirtual #24                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       9: ldc           #25                 // String http
      11: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          43
      17: invokestatic  #27                 // Method org/apache/hadoop/security/UserGroupInformation.isSecurityEnabled:()Z
      20: ifeq          43
      23: aload_0
      24: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      27: invokestatic  #28                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$200:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Z
      30: ifeq          43
      33: new           #21                 // class java/io/IOException
      36: dup
      37: ldc           #29                 // String Access denied: dfs.http.policy is HTTPS_ONLY.
      39: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
      47: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getRedirect:()Z
      52: ifeq          174
      55: aload_0
      56: getfield      #11                 // Field redirected:Z
      59: ifne          174
      62: aload_0
      63: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
      66: invokestatic  #32                 // Method org/apache/hadoop/hdfs/web/resources/HttpOpParam$TemporaryRedirectOp.valueOf:(Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;)Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$TemporaryRedirectOp;
      69: astore_2
      70: aload_0
      71: aload_2
      72: aload_1
      73: invokespecial #33                 // Method connect:(Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;Ljava/net/URL;)Ljava/net/HttpURLConnection;
      76: astore_3
      77: aload_3
      78: invokevirtual #34                 // Method java/net/HttpURLConnection.getResponseCode:()I
      81: aload_0
      82: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
      85: invokeinterface #35,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getExpectedHttpResponseCode:()I
      90: if_icmpne     95
      93: aload_3
      94: areturn
      95: aload_2
      96: aload_3
      97: iconst_0
      98: invokestatic  #36                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$300:(Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;Ljava/net/HttpURLConnection;Z)Ljava/util/Map;
     101: pop
     102: new           #37                 // class java/net/URL
     105: dup
     106: aload_3
     107: ldc           #38                 // String Location
     109: invokevirtual #39                 // Method java/net/HttpURLConnection.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;
     112: invokespecial #40                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
     115: astore_1
     116: aload_0
     117: new           #41                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     124: aload_1
     125: invokevirtual #43                 // Method java/net/URL.getHost:()Ljava/lang/String;
     128: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #45                 // String :
     133: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_1
     137: invokevirtual #46                 // Method java/net/URL.getPort:()I
     140: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     143: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: putfield      #23                 // Field redirectHost:Ljava/lang/String;
     149: aload_3
     150: invokevirtual #49                 // Method java/net/HttpURLConnection.disconnect:()V
     153: goto          165
     156: astore        4
     158: aload_3
     159: invokevirtual #49                 // Method java/net/HttpURLConnection.disconnect:()V
     162: aload         4
     164: athrow
     165: aload_0
     166: getfield      #9                  // Field followRedirect:Z
     169: ifne          174
     172: aload_3
     173: areturn
     174: aload_0
     175: aload_0
     176: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
     179: aload_1
     180: invokespecial #33                 // Method connect:(Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;Ljava/net/URL;)Ljava/net/HttpURLConnection;
     183: astore_2
     184: aload_0
     185: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
     188: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getDoOutput:()Z
     193: ifne          206
     196: aload_0
     197: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
     200: aload_2
     201: iconst_0
     202: invokestatic  #36                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$300:(Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;Ljava/net/HttpURLConnection;Z)Ljava/util/Map;
     205: pop
     206: aload_2
     207: areturn
     208: astore_2
     209: aload_0
     210: getfield      #23                 // Field redirectHost:Ljava/lang/String;
     213: ifnull        290
     216: aload_0
     217: getfield      #8                  // Field excludeDatanodes:Lorg/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam;
     220: invokevirtual #51                 // Method org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam.getValue:()Ljava/lang/Object;
     223: ifnull        275
     226: aload_0
     227: new           #5                  // class org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam
     230: dup
     231: new           #41                 // class java/lang/StringBuilder
     234: dup
     235: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     238: aload_0
     239: getfield      #23                 // Field redirectHost:Ljava/lang/String;
     242: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: ldc           #52                 // String ,
     247: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: aload_0
     251: getfield      #8                  // Field excludeDatanodes:Lorg/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam;
     254: invokevirtual #51                 // Method org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam.getValue:()Ljava/lang/Object;
     257: checkcast     #53                 // class java/lang/String
     260: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     266: invokespecial #7                  // Method org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam."<init>":(Ljava/lang/String;)V
     269: putfield      #8                  // Field excludeDatanodes:Lorg/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam;
     272: goto          290
     275: aload_0
     276: new           #5                  // class org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam
     279: dup
     280: aload_0
     281: getfield      #23                 // Field redirectHost:Ljava/lang/String;
     284: invokespecial #7                  // Method org/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam."<init>":(Ljava/lang/String;)V
     287: putfield      #8                  // Field excludeDatanodes:Lorg/apache/hadoop/hdfs/web/resources/ExcludeDatanodesParam;
     290: aload_2
     291: athrow
    Exception table:
       from    to  target type
          95   149   156   any
         156   158   156   any
         174   207   208   Class java/io/IOException

  private java.net.HttpURLConnection connect(org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op, java.net.URL) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
       4: getfield      #54                 // Field org/apache/hadoop/hdfs/web/WebHdfsFileSystem.connectionFactory:Lorg/apache/hadoop/hdfs/web/URLConnectionFactory;
       7: aload_2
       8: invokevirtual #55                 // Method org/apache/hadoop/hdfs/web/URLConnectionFactory.openConnection:(Ljava/net/URL;)Ljava/net/URLConnection;
      11: checkcast     #56                 // class java/net/HttpURLConnection
      14: astore_3
      15: aload_1
      16: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getDoOutput:()Z
      21: istore        4
      23: aload_3
      24: aload_1
      25: invokeinterface #57,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getType:()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
      30: invokevirtual #58                 // Method org/apache/hadoop/hdfs/web/resources/HttpOpParam$Type.toString:()Ljava/lang/String;
      33: invokevirtual #59                 // Method java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
      36: aload_3
      37: iconst_0
      38: invokevirtual #60                 // Method java/net/HttpURLConnection.setInstanceFollowRedirects:(Z)V
      41: aload_0
      42: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      45: invokestatic  #61                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$400:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Ljava/lang/String;
      48: ifnull        88
      51: aload_0
      52: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      55: invokestatic  #62                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$500:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Ljava/util/Set;
      58: aload_1
      59: invokeinterface #57,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getType:()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
      64: invokevirtual #63                 // Method org/apache/hadoop/hdfs/web/resources/HttpOpParam$Type.name:()Ljava/lang/String;
      67: invokeinterface #64,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      72: ifne          88
      75: aload_3
      76: aload_0
      77: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      80: invokestatic  #61                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$400:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Ljava/lang/String;
      83: ldc           #65                 // String \"\"
      85: invokevirtual #66                 // Method java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
      88: aload_3
      89: ldc           #67                 // String X-Hadoop-Accept-EZ
      91: ldc           #68                 // String true
      93: invokevirtual #66                 // Method java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
      96: getstatic     #69                 // Field org/apache/hadoop/hdfs/web/WebHdfsFileSystem$26.$SwitchMap$org$apache$hadoop$hdfs$web$resources$HttpOpParam$Type:[I
      99: aload_1
     100: invokeinterface #57,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getType:()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
     105: invokevirtual #70                 // Method org/apache/hadoop/hdfs/web/resources/HttpOpParam$Type.ordinal:()I
     108: iaload
     109: lookupswitch  { // 2
                     1: 136
                     2: 136
               default: 173
          }
     136: aload_3
     137: iconst_1
     138: invokevirtual #71                 // Method java/net/HttpURLConnection.setDoOutput:(Z)V
     141: iload         4
     143: ifne          156
     146: aload_3
     147: invokevirtual #72                 // Method java/net/HttpURLConnection.getOutputStream:()Ljava/io/OutputStream;
     150: invokevirtual #73                 // Method java/io/OutputStream.close:()V
     153: goto          179
     156: aload_3
     157: ldc           #74                 // String Content-Type
     159: ldc           #76                 // String application/octet-stream
     161: invokevirtual #66                 // Method java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
     164: aload_3
     165: ldc           #77                 // int 32768
     167: invokevirtual #78                 // Method java/net/HttpURLConnection.setChunkedStreamingMode:(I)V
     170: goto          179
     173: aload_3
     174: iload         4
     176: invokevirtual #71                 // Method java/net/HttpURLConnection.setDoOutput:(Z)V
     179: aload_3
     180: invokevirtual #79                 // Method java/net/HttpURLConnection.connect:()V
     183: aload_3
     184: areturn

  private T runWithRetry() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: aload_0
       4: getfield      #11                 // Field redirected:Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: putfield      #80                 // Field checkRetry:Z
      18: aload_0
      19: invokevirtual #81                 // Method getUrl:()Ljava/net/URL;
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokevirtual #82                 // Method connect:(Ljava/net/URL;)Ljava/net/HttpURLConnection;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokevirtual #83                 // Method getResponse:(Ljava/net/HttpURLConnection;)Ljava/lang/Object;
      34: areturn
      35: astore_3
      36: aload_3
      37: athrow
      38: astore_3
      39: aload_0
      40: getfield      #10                 // Field op:Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;
      43: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op.getRequireAuth:()Z
      48: ifne          61
      51: aload_0
      52: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      55: invokevirtual #86                 // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.replaceExpiredDelegationToken:()Z
      58: ifne          63
      61: aload_3
      62: athrow
      63: goto          175
      66: astore_3
      67: aload_0
      68: getfield      #23                 // Field redirectHost:Ljava/lang/String;
      71: astore        4
      73: aload         4
      75: ifnonnull     84
      78: aload_2
      79: invokevirtual #87                 // Method java/net/URL.getAuthority:()Ljava/lang/String;
      82: astore        4
      84: aload_3
      85: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      88: iconst_1
      89: anewarray     #89                 // class java/lang/Class
      92: dup
      93: iconst_0
      94: ldc           #53                 // class java/lang/String
      96: aastore
      97: invokevirtual #90                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     100: iconst_1
     101: anewarray     #91                 // class java/lang/Object
     104: dup
     105: iconst_0
     106: new           #41                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     113: aload         4
     115: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #92                 // String :
     120: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_3
     124: invokevirtual #93                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     127: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: aastore
     134: invokevirtual #94                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     137: checkcast     #21                 // class java/io/IOException
     140: astore        5
     142: aload         5
     144: aload_3
     145: invokevirtual #95                 // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
     148: invokevirtual #96                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     151: pop
     152: aload         5
     154: aload_3
     155: invokevirtual #97                 // Method java/io/IOException.getStackTrace:()[Ljava/lang/StackTraceElement;
     158: invokevirtual #98                 // Method java/io/IOException.setStackTrace:([Ljava/lang/StackTraceElement;)V
     161: aload         5
     163: astore_3
     164: goto          169
     167: astore        5
     169: aload_0
     170: aload_3
     171: iload_1
     172: invokespecial #105                // Method shouldRetry:(Ljava/io/IOException;I)V
     175: iinc          1, 1
     178: goto          2
    Exception table:
       from    to  target type
          23    34    35   Class org/apache/hadoop/security/AccessControlException
          23    34    38   Class org/apache/hadoop/security/token/SecretManager$InvalidToken
          23    34    66   Class java/io/IOException
          84   164   167   Class java/lang/NoSuchMethodException
          84   164   167   Class java/lang/SecurityException
          84   164   167   Class java/lang/InstantiationException
          84   164   167   Class java/lang/IllegalAccessException
          84   164   167   Class java/lang/IllegalArgumentException
          84   164   167   Class java/lang/reflect/InvocationTargetException

  private void shouldRetry(java.io.IOException, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
       4: invokestatic  #106                // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$600:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Ljava/net/InetSocketAddress;
       7: astore_3
       8: aload_0
       9: getfield      #80                 // Field checkRetry:Z
      12: ifeq          168
      15: aload_0
      16: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
      19: invokestatic  #107                // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$700:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Lorg/apache/hadoop/io/retry/RetryPolicy;
      22: aload_1
      23: iload_2
      24: iconst_0
      25: iconst_1
      26: invokeinterface #108,  5          // InterfaceMethod org/apache/hadoop/io/retry/RetryPolicy.shouldRetry:(Ljava/lang/Exception;IIZ)Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction;
      31: astore        4
      33: aload         4
      35: getfield      #109                // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction.action:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      38: getstatic     #110                // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.RETRY:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      41: if_acmpne     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: istore        5
      51: aload         4
      53: getfield      #109                // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction.action:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      56: getstatic     #111                // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision.FAILOVER_AND_RETRY:Lorg/apache/hadoop/io/retry/RetryPolicy$RetryAction$RetryDecision;
      59: if_acmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: istore        6
      69: iload         5
      71: ifne          79
      74: iload         6
      76: ifeq          146
      79: getstatic     #112                // Field org/apache/hadoop/hdfs/web/WebHdfsFileSystem.LOG:Lorg/slf4j/Logger;
      82: ldc           #113                // String Retrying connect to namenode: {}. Already retried {} time(s); retry policy is {}, delay {}ms.
      84: iconst_4
      85: anewarray     #91                 // class java/lang/Object
      88: dup
      89: iconst_0
      90: aload_3
      91: aastore
      92: dup
      93: iconst_1
      94: iload_2
      95: invokestatic  #114                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      98: aastore
      99: dup
     100: iconst_2
     101: aload_0
     102: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
     105: invokestatic  #107                // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$700:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)Lorg/apache/hadoop/io/retry/RetryPolicy;
     108: aastore
     109: dup
     110: iconst_3
     111: aload         4
     113: getfield      #115                // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction.delayMillis:J
     116: invokestatic  #116                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: aastore
     120: invokeinterface #117,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     125: iload         6
     127: ifeq          137
     130: aload_0
     131: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;
     134: invokestatic  #118                // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$800:(Lorg/apache/hadoop/hdfs/web/WebHdfsFileSystem;)V
     137: aload         4
     139: getfield      #115                // Field org/apache/hadoop/io/retry/RetryPolicy$RetryAction.delayMillis:J
     142: invokestatic  #119                // Method java/lang/Thread.sleep:(J)V
     145: return
     146: goto          168
     149: astore        4
     151: getstatic     #112                // Field org/apache/hadoop/hdfs/web/WebHdfsFileSystem.LOG:Lorg/slf4j/Logger;
     154: ldc           #121                // String Original exception is
     156: aload_1
     157: invokeinterface #122,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     162: aload         4
     164: invokestatic  #123                // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$900:(Ljava/lang/Exception;)Ljava/io/IOException;
     167: athrow
     168: aload_1
     169: invokestatic  #123                // Method org/apache/hadoop/hdfs/web/WebHdfsFileSystem.access$900:(Ljava/lang/Exception;)Ljava/io/IOException;
     172: athrow
    Exception table:
       from    to  target type
          15   145   149   Class java/lang/Exception

  abstract T getResponse(java.net.HttpURLConnection) throws java.io.IOException;

  static java.lang.Object access$100(org.apache.hadoop.hdfs.web.WebHdfsFileSystem$AbstractRunner) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method runWithRetry:()Ljava/lang/Object;
       4: areturn
}
