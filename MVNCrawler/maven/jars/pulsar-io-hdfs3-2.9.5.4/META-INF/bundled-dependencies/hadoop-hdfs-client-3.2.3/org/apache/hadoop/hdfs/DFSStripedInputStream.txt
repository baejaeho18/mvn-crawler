Compiled from "DFSStripedInputStream.java"
public class org.apache.hadoop.hdfs.DFSStripedInputStream extends org.apache.hadoop.hdfs.DFSInputStream {
  private static final org.apache.hadoop.io.ByteBufferPool BUFFER_POOL;

  private final org.apache.hadoop.hdfs.StripeReader$BlockReaderInfo[] blockReaders;

  private final int cellSize;

  private final short dataBlkNum;

  private final short parityBlkNum;

  private final int groupSize;

  private java.nio.ByteBuffer curStripeBuf;

  protected java.nio.ByteBuffer parityBuf;

  private final org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy ecPolicy;

  private org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder decoder;

  private org.apache.hadoop.hdfs.util.StripedBlockUtil$StripeRange curStripeRange;

  private final java.util.Set<java.lang.String> warnedNodes;

  static final boolean $assertionsDisabled;

  org.apache.hadoop.hdfs.DFSStripedInputStream(org.apache.hadoop.hdfs.DFSClient, java.lang.String, boolean, org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, org.apache.hadoop.hdfs.protocol.LocatedBlocks) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         5
       6: invokespecial #1                  // Method org/apache/hadoop/hdfs/DFSInputStream."<init>":(Lorg/apache/hadoop/hdfs/DFSClient;Ljava/lang/String;ZLorg/apache/hadoop/hdfs/protocol/LocatedBlocks;)V
       9: aload_0
      10: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: invokestatic  #4                  // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      20: putfield      #5                  // Field warnedNodes:Ljava/util/Set;
      23: aload_0
      24: getfield      #6                  // Field readStatistics:Lorg/apache/hadoop/hdfs/ReadStatistics;
      27: getstatic     #7                  // Field org/apache/hadoop/hdfs/protocol/BlockType.STRIPED:Lorg/apache/hadoop/hdfs/protocol/BlockType;
      30: invokevirtual #8                  // Method org/apache/hadoop/hdfs/ReadStatistics.setBlockType:(Lorg/apache/hadoop/hdfs/protocol/BlockType;)V
      33: getstatic     #9                  // Field $assertionsDisabled:Z
      36: ifne          52
      39: aload         4
      41: ifnonnull     52
      44: new           #10                 // class java/lang/AssertionError
      47: dup
      48: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      51: athrow
      52: aload_0
      53: aload         4
      55: putfield      #12                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      58: aload_0
      59: aload         4
      61: invokevirtual #13                 // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getCellSize:()I
      64: putfield      #14                 // Field cellSize:I
      67: aload_0
      68: aload         4
      70: invokevirtual #15                 // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getNumDataUnits:()I
      73: i2s
      74: putfield      #16                 // Field dataBlkNum:S
      77: aload_0
      78: aload         4
      80: invokevirtual #17                 // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getNumParityUnits:()I
      83: i2s
      84: putfield      #18                 // Field parityBlkNum:S
      87: aload_0
      88: aload_0
      89: getfield      #16                 // Field dataBlkNum:S
      92: aload_0
      93: getfield      #18                 // Field parityBlkNum:S
      96: iadd
      97: putfield      #19                 // Field groupSize:I
     100: aload_0
     101: aload_0
     102: getfield      #19                 // Field groupSize:I
     105: anewarray     #20                 // class org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo
     108: putfield      #21                 // Field blockReaders:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
     111: aload_0
     112: new           #22                 // class org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange
     115: dup
     116: lconst_0
     117: lconst_0
     118: invokespecial #23                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange."<init>":(JJ)V
     121: putfield      #24                 // Field curStripeRange:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange;
     124: new           #25                 // class org/apache/hadoop/io/erasurecode/ErasureCoderOptions
     127: dup
     128: aload_0
     129: getfield      #16                 // Field dataBlkNum:S
     132: aload_0
     133: getfield      #18                 // Field parityBlkNum:S
     136: invokespecial #26                 // Method org/apache/hadoop/io/erasurecode/ErasureCoderOptions."<init>":(II)V
     139: astore        6
     141: aload_0
     142: aload_1
     143: invokevirtual #27                 // Method org/apache/hadoop/hdfs/DFSClient.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
     146: aload         4
     148: invokevirtual #28                 // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getCodecName:()Ljava/lang/String;
     151: aload         6
     153: invokestatic  #29                 // Method org/apache/hadoop/io/erasurecode/CodecUtil.createRawDecoder:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/io/erasurecode/ErasureCoderOptions;)Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     156: putfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     159: getstatic     #31                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     162: invokeinterface #32,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     167: ifeq          197
     170: getstatic     #31                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     173: new           #33                 // class java/lang/StringBuilder
     176: dup
     177: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     180: ldc           #35                 // String Creating an striped input stream for file
     182: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_2
     186: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     197: return

  private boolean useDirectBuffer();
    Code:
       0: aload_0
       1: getfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
       4: invokevirtual #39                 // Method org/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder.preferDirectBuffer:()Z
       7: ireturn

  private void resetCurStripeBuffer(boolean);
    Code:
       0: iload_1
       1: ifeq          36
       4: aload_0
       5: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
       8: ifnonnull     36
      11: aload_0
      12: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      15: aload_0
      16: invokespecial #42                 // Method useDirectBuffer:()Z
      19: aload_0
      20: getfield      #14                 // Field cellSize:I
      23: aload_0
      24: getfield      #16                 // Field dataBlkNum:S
      27: imul
      28: invokeinterface #43,  3           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.getBuffer:(ZI)Ljava/nio/ByteBuffer;
      33: putfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      36: aload_0
      37: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      40: ifnull        51
      43: aload_0
      44: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      47: invokevirtual #44                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      50: pop
      51: aload_0
      52: new           #22                 // class org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange
      55: dup
      56: lconst_0
      57: lconst_0
      58: invokespecial #23                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange."<init>":(JJ)V
      61: putfield      #24                 // Field curStripeRange:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange;
      64: return

  protected synchronized java.nio.ByteBuffer getParityBuffer();
    Code:
       0: aload_0
       1: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
       4: ifnonnull     32
       7: aload_0
       8: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      11: aload_0
      12: invokespecial #42                 // Method useDirectBuffer:()Z
      15: aload_0
      16: getfield      #14                 // Field cellSize:I
      19: aload_0
      20: getfield      #18                 // Field parityBlkNum:S
      23: imul
      24: invokeinterface #43,  3           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.getBuffer:(ZI)Ljava/nio/ByteBuffer;
      29: putfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      32: aload_0
      33: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      36: invokevirtual #44                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      44: areturn

  protected java.nio.ByteBuffer getCurStripeBuf();
    Code:
       0: aload_0
       1: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
       4: areturn

  protected java.lang.String getSrc();
    Code:
       0: aload_0
       1: getfield      #46                 // Field src:Ljava/lang/String;
       4: areturn

  protected org.apache.hadoop.hdfs.DFSClient getDFSClient();
    Code:
       0: aload_0
       1: getfield      #47                 // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
       4: areturn

  protected org.apache.hadoop.hdfs.protocol.LocatedBlocks getLocatedBlocks();
    Code:
       0: aload_0
       1: getfield      #48                 // Field locatedBlocks:Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
       4: areturn

  protected org.apache.hadoop.io.ByteBufferPool getBufferPool();
    Code:
       0: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
       3: areturn

  protected java.util.concurrent.ThreadPoolExecutor getStripedReadsThreadPool();
    Code:
       0: aload_0
       1: getfield      #47                 // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #49                 // Method org/apache/hadoop/hdfs/DFSClient.getStripedReadsThreadPool:()Ljava/util/concurrent/ThreadPoolExecutor;
       7: areturn

  synchronized void blockSeekTo(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #50                 // Method getFileLength:()J
       5: lcmp
       6: iflt          19
       9: new           #51                 // class java/io/IOException
      12: dup
      13: ldc           #52                 // String Attempted to read past end of file
      15: invokespecial #53                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #54                 // Method closeCurrentBlockReaders:()V
      23: aload_0
      24: lload_1
      25: invokespecial #55                 // Method getBlockGroupAt:(J)Lorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;
      28: astore_3
      29: aload_0
      30: lload_1
      31: putfield      #56                 // Field pos:J
      34: aload_0
      35: aload_3
      36: invokevirtual #57                 // Method org/apache/hadoop/hdfs/protocol/LocatedStripedBlock.getStartOffset:()J
      39: aload_3
      40: invokevirtual #58                 // Method org/apache/hadoop/hdfs/protocol/LocatedStripedBlock.getBlockSize:()J
      43: ladd
      44: lconst_1
      45: lsub
      46: putfield      #59                 // Field blockEnd:J
      49: aload_0
      50: aload_3
      51: putfield      #60                 // Field currentLocatedBlock:Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      54: return

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #61                 // Method org/apache/hadoop/hdfs/DFSInputStream.close:()V
       4: aload_0
       5: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
       8: ifnull        28
      11: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      14: aload_0
      15: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      18: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
      23: aload_0
      24: aconst_null
      25: putfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      28: aload_0
      29: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      32: ifnull        52
      35: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      38: aload_0
      39: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      42: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
      47: aload_0
      48: aconst_null
      49: putfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      52: aload_0
      53: getfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
      56: ifnull        144
      59: aload_0
      60: getfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
      63: invokevirtual #63                 // Method org/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder.release:()V
      66: aload_0
      67: aconst_null
      68: putfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
      71: goto          144
      74: astore_1
      75: aload_0
      76: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      79: ifnull        99
      82: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      85: aload_0
      86: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      89: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
      94: aload_0
      95: aconst_null
      96: putfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      99: aload_0
     100: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
     103: ifnull        123
     106: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
     109: aload_0
     110: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
     113: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
     118: aload_0
     119: aconst_null
     120: putfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
     123: aload_0
     124: getfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     127: ifnull        142
     130: aload_0
     131: getfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     134: invokevirtual #63                 // Method org/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder.release:()V
     137: aload_0
     138: aconst_null
     139: putfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     142: aload_1
     143: athrow
     144: return
    Exception table:
       from    to  target type
           0     4    74   any

  protected void closeCurrentBlockReaders();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #64                 // Method resetCurStripeBuffer:(Z)V
       5: aload_0
       6: getfield      #21                 // Field blockReaders:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
       9: ifnull        20
      12: aload_0
      13: getfield      #21                 // Field blockReaders:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      16: arraylength
      17: ifne          21
      20: return
      21: iconst_0
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #19                 // Field groupSize:I
      28: if_icmpge     54
      31: aload_0
      32: aload_0
      33: getfield      #21                 // Field blockReaders:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      36: iload_1
      37: aaload
      38: invokevirtual #65                 // Method closeReader:(Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;)V
      41: aload_0
      42: getfield      #21                 // Field blockReaders:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      45: iload_1
      46: aconst_null
      47: aastore
      48: iinc          1, 1
      51: goto          23
      54: aload_0
      55: ldc2_w        #66                 // long -1l
      58: putfield      #59                 // Field blockEnd:J
      61: return

  protected void closeReader(org.apache.hadoop.hdfs.StripeReader$BlockReaderInfo);
    Code:
       0: aload_1
       1: ifnull        28
       4: aload_1
       5: getfield      #68                 // Field org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.reader:Lorg/apache/hadoop/hdfs/BlockReader;
       8: ifnull        24
      11: aload_1
      12: getfield      #68                 // Field org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.reader:Lorg/apache/hadoop/hdfs/BlockReader;
      15: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hdfs/BlockReader.close:()V
      20: goto          24
      23: astore_2
      24: aload_1
      25: invokevirtual #71                 // Method org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.skip:()V
      28: return
    Exception table:
       from    to  target type
          11    20    23   Class java/lang/Throwable

  private long getOffsetInBlockGroup();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #56                 // Field pos:J
       5: invokespecial #72                 // Method getOffsetInBlockGroup:(J)J
       8: lreturn

  private long getOffsetInBlockGroup(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #60                 // Field currentLocatedBlock:Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
       5: invokevirtual #73                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getStartOffset:()J
       8: lsub
       9: lreturn

  boolean createBlockReader(org.apache.hadoop.hdfs.protocol.LocatedBlock, long, org.apache.hadoop.hdfs.protocol.LocatedBlock[], org.apache.hadoop.hdfs.StripeReader$BlockReaderInfo[], int) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        7
       3: new           #74                 // class org/apache/hadoop/hdfs/StripeReader$ReaderRetryPolicy
       6: dup
       7: invokespecial #75                 // Method org/apache/hadoop/hdfs/StripeReader$ReaderRetryPolicy."<init>":()V
      10: astore        8
      12: new           #76                 // class org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair
      15: dup
      16: aconst_null
      17: aconst_null
      18: aconst_null
      19: aconst_null
      20: invokespecial #77                 // Method org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair."<init>":(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/fs/StorageType;Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;)V
      23: astore        9
      25: aload_0
      26: aload_1
      27: invokevirtual #78                 // Method refreshLocatedBlock:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      30: astore_1
      31: aload         4
      33: iload         6
      35: aload_1
      36: aastore
      37: aload_0
      38: aload_1
      39: aconst_null
      40: invokevirtual #79                 // Method getBestNodeDNAddrPair:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;Ljava/util/Collection;)Lorg/apache/hadoop/hdfs/DFSInputStream$DNAddrPair;
      43: astore        9
      45: aload         9
      47: ifnonnull     53
      50: goto          287
      53: aload_0
      54: aload_1
      55: lload_2
      56: aload_1
      57: invokevirtual #80                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getBlockSize:()J
      60: lload_2
      61: lsub
      62: aload         9
      64: getfield      #81                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.addr:Ljava/net/InetSocketAddress;
      67: aload         9
      69: getfield      #82                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.storageType:Lorg/apache/hadoop/fs/StorageType;
      72: aload         9
      74: getfield      #83                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.info:Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
      77: invokevirtual #84                 // Method getBlockReader:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;JJLjava/net/InetSocketAddress;Lorg/apache/hadoop/fs/StorageType;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)Lorg/apache/hadoop/hdfs/BlockReader;
      80: astore        7
      82: goto          260
      85: astore        10
      87: aload         10
      89: instanceof    #85                 // class org/apache/hadoop/hdfs/protocol/datatransfer/InvalidEncryptionKeyException
      92: ifeq          159
      95: aload         8
      97: invokevirtual #86                 // Method org/apache/hadoop/hdfs/StripeReader$ReaderRetryPolicy.shouldRefetchEncryptionKey:()Z
     100: ifeq          159
     103: getstatic     #31                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     106: new           #33                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #87                 // String Will fetch a new encryption key and retry, encryption key was invalid when connecting to
     115: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload         9
     120: getfield      #81                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.addr:Ljava/net/InetSocketAddress;
     123: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     126: ldc           #89                 // String  :
     128: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload         10
     133: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     136: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokeinterface #90,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     144: aload_0
     145: getfield      #47                 // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
     148: invokevirtual #91                 // Method org/apache/hadoop/hdfs/DFSClient.clearDataEncryptionKey:()V
     151: aload         8
     153: invokevirtual #92                 // Method org/apache/hadoop/hdfs/StripeReader$ReaderRetryPolicy.refetchEncryptionKey:()V
     156: goto          260
     159: aload         8
     161: invokevirtual #93                 // Method org/apache/hadoop/hdfs/StripeReader$ReaderRetryPolicy.shouldRefetchToken:()Z
     164: ifeq          197
     167: aload         10
     169: aload         9
     171: getfield      #81                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.addr:Ljava/net/InetSocketAddress;
     174: invokestatic  #94                 // Method tokenRefetchNeeded:(Ljava/io/IOException;Ljava/net/InetSocketAddress;)Z
     177: ifeq          197
     180: aload_0
     181: aload_1
     182: invokevirtual #73                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getStartOffset:()J
     185: invokevirtual #95                 // Method fetchBlockAt:(J)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
     188: pop
     189: aload         8
     191: invokevirtual #96                 // Method org/apache/hadoop/hdfs/StripeReader$ReaderRetryPolicy.refetchToken:()V
     194: goto          260
     197: getstatic     #31                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     200: new           #33                 // class java/lang/StringBuilder
     203: dup
     204: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     207: ldc           #97                 // String Failed to connect to
     209: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: aload         9
     214: getfield      #81                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.addr:Ljava/net/InetSocketAddress;
     217: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     220: ldc           #98                 // String  for block
     222: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: aload_1
     226: invokevirtual #99                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getBlock:()Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
     229: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     232: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     235: aload         10
     237: invokeinterface #100,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     242: aload_0
     243: aload_1
     244: invokevirtual #73                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getStartOffset:()J
     247: invokevirtual #95                 // Method fetchBlockAt:(J)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
     250: pop
     251: aload_0
     252: aload         9
     254: getfield      #83                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.info:Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
     257: invokevirtual #101                // Method addToDeadNodes:(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
     260: aload         7
     262: ifnull        25
     265: aload         5
     267: iload         6
     269: new           #20                 // class org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo
     272: dup
     273: aload         7
     275: aload         9
     277: getfield      #83                 // Field org/apache/hadoop/hdfs/DFSInputStream$DNAddrPair.info:Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
     280: lload_2
     281: invokespecial #102                // Method org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo."<init>":(Lorg/apache/hadoop/hdfs/BlockReader;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;J)V
     284: aastore
     285: iconst_1
     286: ireturn
     287: iconst_0
     288: ireturn
    Exception table:
       from    to  target type
          25    50    85   Class java/io/IOException
          53    82    85   Class java/io/IOException

  private void readOneStripe(org.apache.hadoop.hdfs.DFSUtilClient$CorruptedBlocks) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #64                 // Method resetCurStripeBuffer:(Z)V
       5: aload_0
       6: invokespecial #103                // Method getOffsetInBlockGroup:()J
       9: lstore_2
      10: aload_0
      11: getfield      #14                 // Field cellSize:I
      14: aload_0
      15: getfield      #16                 // Field dataBlkNum:S
      18: imul
      19: i2l
      20: lstore        4
      22: lload_2
      23: lload         4
      25: ldiv
      26: l2i
      27: istore        6
      29: lload_2
      30: lload         4
      32: lrem
      33: l2i
      34: istore        7
      36: aload_0
      37: getfield      #60                 // Field currentLocatedBlock:Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      40: invokevirtual #80                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getBlockSize:()J
      43: iload         6
      45: i2l
      46: lload         4
      48: lmul
      49: lsub
      50: lload         4
      52: invokestatic  #104                // Method java/lang/Math.min:(JJ)J
      55: l2i
      56: istore        8
      58: new           #22                 // class org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange
      61: dup
      62: lload_2
      63: iload         8
      65: iload         7
      67: isub
      68: i2l
      69: invokespecial #23                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange."<init>":(JJ)V
      72: astore        9
      74: aload_0
      75: getfield      #60                 // Field currentLocatedBlock:Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      78: checkcast     #105                // class org/apache/hadoop/hdfs/protocol/LocatedStripedBlock
      81: astore        10
      83: aload_0
      84: getfield      #12                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      87: aload_0
      88: getfield      #14                 // Field cellSize:I
      91: aload         10
      93: lload_2
      94: lload_2
      95: aload         9
      97: invokevirtual #106                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange.getLength:()J
     100: ladd
     101: lconst_1
     102: lsub
     103: aload_0
     104: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
     107: invokestatic  #107                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil.divideOneStripe:(Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;ILorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;JJLjava/nio/ByteBuffer;)[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     110: astore        11
     112: aload         10
     114: aload_0
     115: getfield      #14                 // Field cellSize:I
     118: aload_0
     119: getfield      #16                 // Field dataBlkNum:S
     122: aload_0
     123: getfield      #18                 // Field parityBlkNum:S
     126: invokestatic  #108                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil.parseStripedBlockGroup:(Lorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;III)[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
     129: astore        12
     131: aload         11
     133: astore        13
     135: aload         13
     137: arraylength
     138: istore        14
     140: iconst_0
     141: istore        15
     143: iload         15
     145: iload         14
     147: if_icmpge     195
     150: aload         13
     152: iload         15
     154: aaload
     155: astore        16
     157: new           #109                // class org/apache/hadoop/hdfs/StatefulStripeReader
     160: dup
     161: aload         16
     163: aload_0
     164: getfield      #12                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
     167: aload         12
     169: aload_0
     170: getfield      #21                 // Field blockReaders:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
     173: aload_1
     174: aload_0
     175: getfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     178: aload_0
     179: invokespecial #110                // Method org/apache/hadoop/hdfs/StatefulStripeReader."<init>":(Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;Lorg/apache/hadoop/hdfs/DFSStripedInputStream;)V
     182: astore        17
     184: aload         17
     186: invokevirtual #111                // Method org/apache/hadoop/hdfs/StripeReader.readStripe:()V
     189: iinc          15, 1
     192: goto          143
     195: aload_0
     196: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
     199: iload         7
     201: invokevirtual #112                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     204: pop
     205: aload_0
     206: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
     209: iload         8
     211: invokevirtual #113                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     214: pop
     215: aload_0
     216: aload         9
     218: putfield      #24                 // Field curStripeRange:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange;
     221: return

  void updateReadStats(org.apache.hadoop.hdfs.util.StripedBlockUtil$BlockReadStats);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #6                  // Field readStatistics:Lorg/apache/hadoop/hdfs/ReadStatistics;
       9: aload_1
      10: invokevirtual #114                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats.getBytesRead:()I
      13: aload_1
      14: invokevirtual #115                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats.isShortCircuit:()Z
      17: aload_1
      18: invokevirtual #116                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats.getNetworkDistance:()I
      21: invokestatic  #117                // Method org/apache/hadoop/hdfs/util/IOUtilsClient.updateReadStatistics:(Lorg/apache/hadoop/hdfs/ReadStatistics;IZI)V
      24: aload_0
      25: getfield      #47                 // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      28: aload_1
      29: invokevirtual #116                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats.getNetworkDistance:()I
      32: aload_1
      33: invokevirtual #114                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats.getBytesRead:()I
      36: invokevirtual #118                // Method org/apache/hadoop/hdfs/DFSClient.updateFileSystemReadStats:(II)V
      39: getstatic     #9                  // Field $assertionsDisabled:Z
      42: ifne          66
      45: aload_0
      46: getfield      #6                  // Field readStatistics:Lorg/apache/hadoop/hdfs/ReadStatistics;
      49: invokevirtual #119                // Method org/apache/hadoop/hdfs/ReadStatistics.getBlockType:()Lorg/apache/hadoop/hdfs/protocol/BlockType;
      52: getstatic     #7                  // Field org/apache/hadoop/hdfs/protocol/BlockType.STRIPED:Lorg/apache/hadoop/hdfs/protocol/BlockType;
      55: if_acmpeq     66
      58: new           #10                 // class java/lang/AssertionError
      61: dup
      62: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      65: athrow
      66: aload_0
      67: getfield      #47                 // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
      70: aload_1
      71: invokevirtual #114                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats.getBytesRead:()I
      74: invokevirtual #120                // Method org/apache/hadoop/hdfs/DFSClient.updateFileSystemECReadStats:(I)V
      77: return

  public synchronized void seek(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #50                 // Method getFileLength:()J
       5: lcmp
       6: ifle          19
       9: new           #121                // class java/io/EOFException
      12: dup
      13: ldc           #122                // String Cannot seek after EOF
      15: invokespecial #123                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: lload_1
      20: lconst_0
      21: lcmp
      22: ifge          35
      25: new           #121                // class java/io/EOFException
      28: dup
      29: ldc           #124                // String Cannot seek to negative offset
      31: invokespecial #123                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: getfield      #125                // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: invokevirtual #126                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      42: ifeq          55
      45: new           #51                 // class java/io/IOException
      48: dup
      49: ldc           #127                // String Stream is closed!
      51: invokespecial #53                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: lload_1
      56: aload_0
      57: getfield      #59                 // Field blockEnd:J
      60: lcmp
      61: ifgt          104
      64: aload_0
      65: lload_1
      66: invokespecial #72                 // Method getOffsetInBlockGroup:(J)J
      69: lstore_3
      70: aload_0
      71: getfield      #24                 // Field curStripeRange:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange;
      74: lload_3
      75: invokevirtual #128                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange.include:(J)Z
      78: ifeq          104
      81: aload_0
      82: lload_3
      83: invokespecial #129                // Method getStripedBufOffset:(J)I
      86: istore        5
      88: aload_0
      89: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      92: iload         5
      94: invokevirtual #112                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      97: pop
      98: aload_0
      99: lload_1
     100: putfield      #56                 // Field pos:J
     103: return
     104: aload_0
     105: lload_1
     106: putfield      #56                 // Field pos:J
     109: aload_0
     110: ldc2_w        #66                 // long -1l
     113: putfield      #59                 // Field blockEnd:J
     116: return

  private int getStripedBufOffset(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cellSize:I
       4: aload_0
       5: getfield      #16                 // Field dataBlkNum:S
       8: imul
       9: i2l
      10: lstore_3
      11: lload_1
      12: lload_3
      13: lrem
      14: l2i
      15: ireturn

  public synchronized boolean seekToNewSource(long) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  protected synchronized int readWithStrategy(org.apache.hadoop.hdfs.ReaderStrategy) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field dfsClient:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #130                // Method org/apache/hadoop/hdfs/DFSClient.checkOpen:()V
       7: aload_0
       8: getfield      #125                // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #126                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifeq          27
      17: new           #51                 // class java/io/IOException
      20: dup
      21: ldc           #131                // String Stream closed
      23: invokespecial #53                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_1
      28: invokeinterface #132,  1          // InterfaceMethod org/apache/hadoop/hdfs/ReaderStrategy.getTargetLength:()I
      33: istore_2
      34: new           #133                // class org/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks
      37: dup
      38: invokespecial #134                // Method org/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks."<init>":()V
      41: astore_3
      42: aload_0
      43: getfield      #56                 // Field pos:J
      46: aload_0
      47: invokevirtual #50                 // Method getFileLength:()J
      50: lcmp
      51: ifge          241
      54: aload_0
      55: getfield      #56                 // Field pos:J
      58: aload_0
      59: getfield      #59                 // Field blockEnd:J
      62: lcmp
      63: ifle          74
      66: aload_0
      67: aload_0
      68: getfield      #56                 // Field pos:J
      71: invokevirtual #135                // Method blockSeekTo:(J)V
      74: iload_2
      75: i2l
      76: aload_0
      77: getfield      #59                 // Field blockEnd:J
      80: aload_0
      81: getfield      #56                 // Field pos:J
      84: lsub
      85: lconst_1
      86: ladd
      87: invokestatic  #104                // Method java/lang/Math.min:(JJ)J
      90: l2i
      91: istore        4
      93: aload_0
      94: getfield      #136                // Field infoLock:Ljava/lang/Object;
      97: dup
      98: astore        5
     100: monitorenter
     101: aload_0
     102: getfield      #48                 // Field locatedBlocks:Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
     105: invokevirtual #137                // Method org/apache/hadoop/hdfs/protocol/LocatedBlocks.isLastBlockComplete:()Z
     108: ifeq          132
     111: iload         4
     113: i2l
     114: aload_0
     115: getfield      #48                 // Field locatedBlocks:Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
     118: invokevirtual #138                // Method org/apache/hadoop/hdfs/protocol/LocatedBlocks.getFileLength:()J
     121: aload_0
     122: getfield      #56                 // Field pos:J
     125: lsub
     126: invokestatic  #104                // Method java/lang/Math.min:(JJ)J
     129: l2i
     130: istore        4
     132: aload         5
     134: monitorexit
     135: goto          146
     138: astore        6
     140: aload         5
     142: monitorexit
     143: aload         6
     145: athrow
     146: iconst_0
     147: istore        5
     149: iload         5
     151: iload         4
     153: if_icmpge     209
     156: aload_0
     157: getfield      #24                 // Field curStripeRange:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange;
     160: aload_0
     161: invokespecial #103                // Method getOffsetInBlockGroup:()J
     164: invokevirtual #128                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripeRange.include:(J)Z
     167: ifne          175
     170: aload_0
     171: aload_3
     172: invokespecial #139                // Method readOneStripe:(Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;)V
     175: aload_0
     176: aload_1
     177: iload         4
     179: iload         5
     181: isub
     182: invokespecial #140                // Method copyToTargetBuf:(Lorg/apache/hadoop/hdfs/ReaderStrategy;I)I
     185: istore        6
     187: iload         5
     189: iload         6
     191: iadd
     192: istore        5
     194: aload_0
     195: dup
     196: getfield      #56                 // Field pos:J
     199: iload         6
     201: i2l
     202: ladd
     203: putfield      #56                 // Field pos:J
     206: goto          149
     209: iload         5
     211: istore        6
     213: aload_0
     214: aload_3
     215: aload_0
     216: invokevirtual #141                // Method getCurrentBlockLocationsLength:()I
     219: iconst_1
     220: invokevirtual #142                // Method reportCheckSumFailure:(Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;IZ)V
     223: iload         6
     225: ireturn
     226: astore        7
     228: aload_0
     229: aload_3
     230: aload_0
     231: invokevirtual #141                // Method getCurrentBlockLocationsLength:()I
     234: iconst_1
     235: invokevirtual #142                // Method reportCheckSumFailure:(Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;IZ)V
     238: aload         7
     240: athrow
     241: iconst_m1
     242: ireturn
    Exception table:
       from    to  target type
         101   135   138   any
         138   143   138   any
          54   213   226   any
         226   228   226   any

  private int copyToTargetBuf(org.apache.hadoop.hdfs.ReaderStrategy, int);
    Code:
       0: aload_0
       1: invokespecial #103                // Method getOffsetInBlockGroup:()J
       4: lstore_3
       5: aload_0
       6: lload_3
       7: invokespecial #129                // Method getStripedBufOffset:(J)I
      10: istore        5
      12: aload_0
      13: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      16: iload         5
      18: invokevirtual #112                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      27: iload_2
      28: aload_0
      29: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      32: invokevirtual #143                // Method java/nio/ByteBuffer.remaining:()I
      35: invokestatic  #144                // Method java/lang/Math.min:(II)I
      38: invokeinterface #145,  3          // InterfaceMethod org/apache/hadoop/hdfs/ReaderStrategy.readFromBuffer:(Ljava/nio/ByteBuffer;I)I
      43: ireturn

  protected org.apache.hadoop.hdfs.protocol.LocatedBlock refreshLocatedBlock(org.apache.hadoop.hdfs.protocol.LocatedBlock) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #99                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getBlock:()Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
       4: invokevirtual #146                // Method org/apache/hadoop/hdfs/protocol/ExtendedBlock.getLocalBlock:()Lorg/apache/hadoop/hdfs/protocol/Block;
       7: invokestatic  #147                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil.getBlockIndex:(Lorg/apache/hadoop/hdfs/protocol/Block;)I
      10: istore_2
      11: aload_0
      12: aload_1
      13: invokevirtual #73                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getStartOffset:()J
      16: invokespecial #55                 // Method getBlockGroupAt:(J)Lorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;
      19: astore_3
      20: aload_3
      21: checkcast     #105                // class org/apache/hadoop/hdfs/protocol/LocatedStripedBlock
      24: astore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: aload         4
      33: invokevirtual #148                // Method org/apache/hadoop/hdfs/protocol/LocatedStripedBlock.getBlockIndices:()[B
      36: arraylength
      37: if_icmpge     61
      40: aload         4
      42: invokevirtual #148                // Method org/apache/hadoop/hdfs/protocol/LocatedStripedBlock.getBlockIndices:()[B
      45: iload         5
      47: baload
      48: iload_2
      49: if_icmpne     55
      52: goto          61
      55: iinc          5, 1
      58: goto          29
      61: getstatic     #31                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
      64: invokeinterface #32,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      69: ifeq          120
      72: getstatic     #31                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
      75: new           #33                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #149                // String refreshLocatedBlock for striped blocks, offset=
      84: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #73                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getStartOffset:()J
      91: invokevirtual #150                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      94: ldc           #151                // String . Obtained block
      96: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_3
     100: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #152                // String , idx=
     105: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: iload_2
     109: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     112: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     120: aload         4
     122: iload         5
     124: aload_0
     125: getfield      #14                 // Field cellSize:I
     128: aload_0
     129: getfield      #16                 // Field dataBlkNum:S
     132: iload_2
     133: invokestatic  #154                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil.constructInternalBlock:(Lorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;IIII)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
     136: areturn

  private org.apache.hadoop.hdfs.protocol.LocatedStripedBlock getBlockGroupAt(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #155                // Method org/apache/hadoop/hdfs/DFSInputStream.getBlockAt:(J)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
       5: astore_3
       6: getstatic     #9                  // Field $assertionsDisabled:Z
       9: ifne          29
      12: aload_3
      13: instanceof    #105                // class org/apache/hadoop/hdfs/protocol/LocatedStripedBlock
      16: ifne          29
      19: new           #10                 // class java/lang/AssertionError
      22: dup
      23: ldc           #156                // String NameNode should return a LocatedStripedBlock for a striped file
      25: invokespecial #157                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      28: athrow
      29: aload_3
      30: checkcast     #105                // class org/apache/hadoop/hdfs/protocol/LocatedStripedBlock
      33: areturn

  protected void fetchBlockByteRange(org.apache.hadoop.hdfs.protocol.LocatedBlock, long, long, java.nio.ByteBuffer, org.apache.hadoop.hdfs.DFSUtilClient$CorruptedBlocks) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getStartOffset:()J
       5: invokespecial #55                 // Method getBlockGroupAt:(J)Lorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;
       8: astore        8
      10: aload_0
      11: getfield      #12                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      14: aload_0
      15: getfield      #14                 // Field cellSize:I
      18: aload         8
      20: lload_2
      21: lload         4
      23: aload         6
      25: invokestatic  #158                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil.divideByteRangeIntoStripes:(Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;ILorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;JJLjava/nio/ByteBuffer;)[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      28: astore        9
      30: aload         8
      32: aload_0
      33: getfield      #14                 // Field cellSize:I
      36: aload_0
      37: getfield      #16                 // Field dataBlkNum:S
      40: aload_0
      41: getfield      #18                 // Field parityBlkNum:S
      44: invokestatic  #108                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil.parseStripedBlockGroup:(Lorg/apache/hadoop/hdfs/protocol/LocatedStripedBlock;III)[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      47: astore        10
      49: aload_0
      50: getfield      #19                 // Field groupSize:I
      53: anewarray     #20                 // class org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo
      56: astore        11
      58: aload         9
      60: astore        12
      62: aload         12
      64: arraylength
      65: istore        13
      67: iconst_0
      68: istore        14
      70: iload         14
      72: iload         13
      74: if_icmpge     139
      77: aload         12
      79: iload         14
      81: aaload
      82: astore        15
      84: new           #159                // class org/apache/hadoop/hdfs/PositionStripeReader
      87: dup
      88: aload         15
      90: aload_0
      91: getfield      #12                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      94: aload         10
      96: aload         11
      98: aload         7
     100: aload_0
     101: getfield      #30                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
     104: aload_0
     105: invokespecial #160                // Method org/apache/hadoop/hdfs/PositionStripeReader."<init>":(Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;Lorg/apache/hadoop/hdfs/DFSStripedInputStream;)V
     108: astore        16
     110: aload         16
     112: invokevirtual #111                // Method org/apache/hadoop/hdfs/StripeReader.readStripe:()V
     115: aload         16
     117: invokevirtual #161                // Method org/apache/hadoop/hdfs/StripeReader.close:()V
     120: goto          133
     123: astore        17
     125: aload         16
     127: invokevirtual #161                // Method org/apache/hadoop/hdfs/StripeReader.close:()V
     130: aload         17
     132: athrow
     133: iinc          14, 1
     136: goto          70
     139: aload         6
     141: aload         6
     143: invokevirtual #162                // Method java/nio/ByteBuffer.position:()I
     146: lload         4
     148: lload_2
     149: lsub
     150: lconst_1
     151: ladd
     152: l2i
     153: iadd
     154: invokevirtual #112                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     157: pop
     158: aload         11
     160: astore        12
     162: aload         12
     164: arraylength
     165: istore        13
     167: iconst_0
     168: istore        14
     170: iload         14
     172: iload         13
     174: if_icmpge     196
     177: aload         12
     179: iload         14
     181: aaload
     182: astore        15
     184: aload_0
     185: aload         15
     187: invokevirtual #65                 // Method closeReader:(Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;)V
     190: iinc          14, 1
     193: goto          170
     196: goto          242
     199: astore        18
     201: aload         11
     203: astore        19
     205: aload         19
     207: arraylength
     208: istore        20
     210: iconst_0
     211: istore        21
     213: iload         21
     215: iload         20
     217: if_icmpge     239
     220: aload         19
     222: iload         21
     224: aaload
     225: astore        22
     227: aload_0
     228: aload         22
     230: invokevirtual #65                 // Method closeReader:(Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;)V
     233: iinc          21, 1
     236: goto          213
     239: aload         18
     241: athrow
     242: return
    Exception table:
       from    to  target type
         110   115   123   any
         123   125   123   any
          58   158   199   any
         199   201   199   any

  protected void reportLostBlock(org.apache.hadoop.hdfs.protocol.LocatedBlock, java.util.Collection<org.apache.hadoop.hdfs.protocol.DatanodeInfo>);
    Code:
       0: aload_1
       1: invokevirtual #163                // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getLocations:()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
       4: astore_3
       5: aload_3
       6: ifnull        130
       9: aload_3
      10: arraylength
      11: ifle          130
      14: new           #164                // class java/util/ArrayList
      17: dup
      18: invokespecial #165                // Method java/util/ArrayList."<init>":()V
      21: astore        4
      23: aload_3
      24: astore        5
      26: aload         5
      28: arraylength
      29: istore        6
      31: iconst_0
      32: istore        7
      34: iload         7
      36: iload         6
      38: if_icmpge     67
      41: aload         5
      43: iload         7
      45: aaload
      46: astore        8
      48: aload         4
      50: aload         8
      52: invokevirtual #166                // Method org/apache/hadoop/hdfs/protocol/DatanodeInfo.getDatanodeUuid:()Ljava/lang/String;
      55: invokeinterface #167,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: iinc          7, 1
      64: goto          34
      67: aload_0
      68: getfield      #5                  // Field warnedNodes:Ljava/util/Set;
      71: aload         4
      73: invokeinterface #168,  2          // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      78: ifne          127
      81: getstatic     #31                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
      84: new           #33                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      91: aload_3
      92: invokestatic  #169                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      95: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #170                // String  are unavailable and all striping blocks on them are lost. IgnoredNodes =
     100: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_2
     104: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #171,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     115: aload_0
     116: getfield      #5                  // Field warnedNodes:Ljava/util/Set;
     119: aload         4
     121: invokeinterface #172,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     126: pop
     127: goto          136
     130: aload_0
     131: aload_1
     132: aload_2
     133: invokespecial #173                // Method org/apache/hadoop/hdfs/DFSInputStream.reportLostBlock:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;Ljava/util/Collection;)V
     136: return

  public synchronized java.nio.ByteBuffer read(org.apache.hadoop.io.ByteBufferPool, int, java.util.EnumSet<org.apache.hadoop.fs.ReadOption>) throws java.io.IOException, java.lang.UnsupportedOperationException;
    Code:
       0: new           #174                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #175                // String Not support enhanced byte buffer access.
       6: invokespecial #176                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized void releaseBuffer(java.nio.ByteBuffer);
    Code:
       0: new           #174                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #175                // String Not support enhanced byte buffer access.
       6: invokespecial #176                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized void unbuffer();
    Code:
       0: aload_0
       1: invokespecial #177                // Method org/apache/hadoop/hdfs/DFSInputStream.unbuffer:()V
       4: aload_0
       5: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
       8: ifnull        28
      11: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      14: aload_0
      15: getfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      18: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
      23: aload_0
      24: aconst_null
      25: putfield      #40                 // Field curStripeBuf:Ljava/nio/ByteBuffer;
      28: aload_0
      29: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      32: ifnull        52
      35: getstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      38: aload_0
      39: getfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      42: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
      47: aload_0
      48: aconst_null
      49: putfield      #45                 // Field parityBuf:Ljava/nio/ByteBuffer;
      52: return

  static {};
    Code:
       0: ldc           #178                // class org/apache/hadoop/hdfs/DFSStripedInputStream
       2: invokevirtual #179                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: new           #180                // class org/apache/hadoop/io/ElasticByteBufferPool
      19: dup
      20: invokespecial #181                // Method org/apache/hadoop/io/ElasticByteBufferPool."<init>":()V
      23: putstatic     #41                 // Field BUFFER_POOL:Lorg/apache/hadoop/io/ByteBufferPool;
      26: return
}
