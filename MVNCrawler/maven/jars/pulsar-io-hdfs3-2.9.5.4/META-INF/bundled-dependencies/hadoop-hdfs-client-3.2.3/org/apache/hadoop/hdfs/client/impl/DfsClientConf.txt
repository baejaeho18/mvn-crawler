Compiled from "DfsClientConf.java"
public class org.apache.hadoop.hdfs.client.impl.DfsClientConf {
  private static final org.slf4j.Logger LOG;

  private final int hdfsTimeout;

  private final int maxFailoverAttempts;

  private final int maxRetryAttempts;

  private final int failoverSleepBaseMillis;

  private final int failoverSleepMaxMillis;

  private final int maxBlockAcquireFailures;

  private final int datanodeSocketWriteTimeout;

  private final int ioBufferSize;

  private final org.apache.hadoop.fs.Options$ChecksumOpt defaultChecksumOpt;

  private final org.apache.hadoop.fs.Options$ChecksumCombineMode checksumCombineMode;

  private final int checksumEcSocketTimeout;

  private final int writePacketSize;

  private final int writeMaxPackets;

  private final org.apache.hadoop.hdfs.util.ByteArrayManager$Conf writeByteArrayManagerConf;

  private final int socketTimeout;

  private final int socketSendBufferSize;

  private final long excludedNodesCacheExpiry;

  private final int timeWindow;

  private final int numCachedConnRetry;

  private final int numBlockWriteRetry;

  private final int numBlockWriteLocateFollowingRetry;

  private final int blockWriteLocateFollowingInitialDelayMs;

  private final long defaultBlockSize;

  private final long prefetchSize;

  private final short defaultReplication;

  private final java.lang.String taskId;

  private final org.apache.hadoop.fs.permission.FsPermission uMask;

  private final boolean connectToDnViaHostname;

  private final int retryTimesForGetLastBlockLength;

  private final int retryIntervalForGetLastBlockLength;

  private final long datanodeRestartTimeout;

  private final long slowIoWarningThresholdMs;

  private final long refreshReadBlockLocationsMS;

  private final org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf shortCircuitConf;

  private final long hedgedReadThresholdMillis;

  private final int hedgedReadThreadpoolSize;

  private final java.util.List<java.lang.Class<? extends org.apache.hadoop.hdfs.ReplicaAccessorBuilder>> replicaAccessorBuilderClasses;

  private final int stripedReadThreadpoolSize;

  private final boolean dataTransferTcpNoDelay;

  private final long leaseHardLimitPeriod;

  public org.apache.hadoop.hdfs.client.impl.DfsClientConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method org/apache/hadoop/ipc/Client.getRpcTimeout:(Lorg/apache/hadoop/conf/Configuration;)I
       9: putfield      #5                  // Field hdfsTimeout:I
      12: aload_0
      13: aload_1
      14: ldc           #7                  // String dfs.client.retry.max.attempts
      16: bipush        10
      18: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      21: putfield      #9                  // Field maxRetryAttempts:I
      24: aload_0
      25: aload_1
      26: ldc           #10                 // String dfs.client.retry.window.base
      28: sipush        3000
      31: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      34: putfield      #11                 // Field timeWindow:I
      37: aload_0
      38: aload_1
      39: ldc           #12                 // String dfs.client.retry.times.get-last-block-length
      41: iconst_3
      42: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      45: putfield      #13                 // Field retryTimesForGetLastBlockLength:I
      48: aload_0
      49: aload_1
      50: ldc           #14                 // String dfs.client.retry.interval-ms.get-last-block-length
      52: sipush        4000
      55: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      58: putfield      #15                 // Field retryIntervalForGetLastBlockLength:I
      61: aload_0
      62: aload_1
      63: ldc           #17                 // String dfs.client.failover.max.attempts
      65: bipush        15
      67: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      70: putfield      #18                 // Field maxFailoverAttempts:I
      73: aload_0
      74: aload_1
      75: ldc           #19                 // String dfs.client.failover.sleep.base.millis
      77: sipush        500
      80: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      83: putfield      #20                 // Field failoverSleepBaseMillis:I
      86: aload_0
      87: aload_1
      88: ldc           #21                 // String dfs.client.failover.sleep.max.millis
      90: sipush        15000
      93: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      96: putfield      #22                 // Field failoverSleepMaxMillis:I
      99: aload_0
     100: aload_1
     101: ldc           #23                 // String dfs.client.max.block.acquire.failures
     103: iconst_3
     104: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     107: putfield      #24                 // Field maxBlockAcquireFailures:I
     110: aload_0
     111: aload_1
     112: ldc           #25                 // String dfs.datanode.socket.write.timeout
     114: ldc           #27                 // int 480000
     116: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     119: putfield      #28                 // Field datanodeSocketWriteTimeout:I
     122: aload_0
     123: aload_1
     124: ldc           #30                 // String io.file.buffer.size
     126: sipush        4096
     129: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     132: putfield      #31                 // Field ioBufferSize:I
     135: aload_0
     136: aload_1
     137: invokestatic  #32                 // Method getChecksumOptFromConf:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Options$ChecksumOpt;
     140: putfield      #33                 // Field defaultChecksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
     143: aload_0
     144: aload_1
     145: invokestatic  #34                 // Method getChecksumCombineModeFromConf:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Options$ChecksumCombineMode;
     148: putfield      #35                 // Field checksumCombineMode:Lorg/apache/hadoop/fs/Options$ChecksumCombineMode;
     151: aload_0
     152: aload_1
     153: ldc           #36                 // String dfs.checksum.ec.socket-timeout
     155: sipush        3000
     158: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     161: putfield      #37                 // Field checksumEcSocketTimeout:I
     164: aload_0
     165: aload_1
     166: ldc           #38                 // String dfs.data.transfer.client.tcpnodelay
     168: iconst_1
     169: invokevirtual #39                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     172: putfield      #40                 // Field dataTransferTcpNoDelay:Z
     175: aload_0
     176: aload_1
     177: ldc           #41                 // String dfs.client.socket-timeout
     179: ldc           #42                 // int 60000
     181: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     184: putfield      #43                 // Field socketTimeout:I
     187: aload_0
     188: aload_1
     189: ldc           #44                 // String dfs.client.socket.send.buffer.size
     191: iconst_0
     192: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     195: putfield      #45                 // Field socketSendBufferSize:I
     198: aload_0
     199: aload_1
     200: ldc           #46                 // String dfs.client-write-packet-size
     202: ldc           #47                 // int 65536
     204: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     207: putfield      #48                 // Field writePacketSize:I
     210: aload_0
     211: aload_1
     212: ldc           #50                 // String dfs.client.write.max-packets-in-flight
     214: bipush        80
     216: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     219: putfield      #51                 // Field writeMaxPackets:I
     222: aload_1
     223: ldc           #53                 // String dfs.client.write.byte-array-manager.enabled
     225: iconst_0
     226: invokevirtual #39                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     229: istore_2
     230: iload_2
     231: ifne          242
     234: aload_0
     235: aconst_null
     236: putfield      #54                 // Field writeByteArrayManagerConf:Lorg/apache/hadoop/hdfs/util/ByteArrayManager$Conf;
     239: goto          290
     242: aload_1
     243: ldc           #55                 // String dfs.client.write.byte-array-manager.count-threshold
     245: sipush        128
     248: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     251: istore_3
     252: aload_1
     253: ldc           #56                 // String dfs.client.write.byte-array-manager.count-limit
     255: sipush        2048
     258: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     261: istore        4
     263: aload_1
     264: ldc           #57                 // String dfs.client.write.byte-array-manager.count-reset-time-period-ms
     266: ldc2_w        #58                 // long 10000l
     269: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     272: lstore        5
     274: aload_0
     275: new           #61                 // class org/apache/hadoop/hdfs/util/ByteArrayManager$Conf
     278: dup
     279: iload_3
     280: iload         4
     282: lload         5
     284: invokespecial #62                 // Method org/apache/hadoop/hdfs/util/ByteArrayManager$Conf."<init>":(IIJ)V
     287: putfield      #54                 // Field writeByteArrayManagerConf:Lorg/apache/hadoop/hdfs/util/ByteArrayManager$Conf;
     290: aload_0
     291: aload_1
     292: ldc           #63                 // String dfs.blocksize
     294: ldc2_w        #64                 // long 134217728l
     297: invokevirtual #66                 // Method org/apache/hadoop/conf/Configuration.getLongBytes:(Ljava/lang/String;J)J
     300: putfield      #67                 // Field defaultBlockSize:J
     303: aload_0
     304: aload_1
     305: ldc           #68                 // String dfs.replication
     307: iconst_3
     308: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     311: i2s
     312: putfield      #69                 // Field defaultReplication:S
     315: aload_0
     316: aload_1
     317: ldc           #70                 // String mapreduce.task.attempt.id
     319: ldc           #71                 // String NONMAPREDUCE
     321: invokevirtual #72                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     324: putfield      #73                 // Field taskId:Ljava/lang/String;
     327: aload_0
     328: aload_1
     329: ldc           #74                 // String dfs.client.write.exclude.nodes.cache.expiry.interval.millis
     331: ldc2_w        #75                 // long 600000l
     334: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     337: putfield      #77                 // Field excludedNodesCacheExpiry:J
     340: aload_0
     341: aload_1
     342: ldc           #79                 // String dfs.client.read.prefetch.size
     344: ldc2_w        #80                 // long 10l
     347: aload_0
     348: getfield      #67                 // Field defaultBlockSize:J
     351: lmul
     352: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     355: putfield      #82                 // Field prefetchSize:J
     358: aload_0
     359: aload_1
     360: ldc           #83                 // String dfs.client.cached.conn.retry
     362: iconst_3
     363: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     366: putfield      #84                 // Field numCachedConnRetry:I
     369: aload_0
     370: aload_1
     371: ldc           #86                 // String dfs.client.block.write.retries
     373: iconst_3
     374: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     377: putfield      #87                 // Field numBlockWriteRetry:I
     380: aload_0
     381: aload_1
     382: ldc           #88                 // String dfs.client.block.write.locateFollowingBlock.retries
     384: iconst_5
     385: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     388: putfield      #89                 // Field numBlockWriteLocateFollowingRetry:I
     391: aload_0
     392: aload_1
     393: ldc           #90                 // String dfs.client.block.write.locateFollowingBlock.initial.delay.ms
     395: sipush        400
     398: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     401: putfield      #91                 // Field blockWriteLocateFollowingInitialDelayMs:I
     404: aload_0
     405: aload_1
     406: invokestatic  #92                 // Method org/apache/hadoop/fs/permission/FsPermission.getUMask:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/permission/FsPermission;
     409: putfield      #93                 // Field uMask:Lorg/apache/hadoop/fs/permission/FsPermission;
     412: aload_0
     413: aload_1
     414: ldc           #94                 // String dfs.client.use.datanode.hostname
     416: iconst_0
     417: invokevirtual #39                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     420: putfield      #95                 // Field connectToDnViaHostname:Z
     423: aload_0
     424: aload_1
     425: ldc           #96                 // String dfs.client.datanode-restart.timeout
     427: ldc2_w        #97                 // long 30l
     430: getstatic     #99                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     433: getstatic     #100                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     436: invokevirtual #101                // Method org/apache/hadoop/conf/Configuration.getTimeDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J
     439: putfield      #102                // Field datanodeRestartTimeout:J
     442: aload_0
     443: aload_1
     444: ldc           #103                // String dfs.client.slow.io.warning.threshold.ms
     446: ldc2_w        #104                // long 30000l
     449: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     452: putfield      #106                // Field slowIoWarningThresholdMs:J
     455: aload_0
     456: aload_1
     457: ldc           #107                // String dfs.client.refresh.read-block-locations.ms
     459: lconst_0
     460: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     463: putfield      #108                // Field refreshReadBlockLocationsMS:J
     466: aload_0
     467: new           #109                // class org/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf
     470: dup
     471: aload_1
     472: invokespecial #110                // Method org/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
     475: putfield      #111                // Field shortCircuitConf:Lorg/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf;
     478: aload_0
     479: aload_1
     480: ldc           #113                // String dfs.client.hedged.read.threshold.millis
     482: ldc2_w        #114                // long 500l
     485: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     488: putfield      #116                // Field hedgedReadThresholdMillis:J
     491: aload_0
     492: aload_1
     493: ldc           #117                // String dfs.client.hedged.read.threadpool.size
     495: iconst_0
     496: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     499: putfield      #118                // Field hedgedReadThreadpoolSize:I
     502: aload_0
     503: aload_1
     504: ldc           #120                // String dfs.client.read.striped.threadpool.size
     506: bipush        18
     508: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     511: putfield      #121                // Field stripedReadThreadpoolSize:I
     514: aload_0
     515: getfield      #121                // Field stripedReadThreadpoolSize:I
     518: ifle          525
     521: iconst_1
     522: goto          526
     525: iconst_0
     526: ldc           #122                // String The value of dfs.client.read.striped.threadpool.size must be greater than 0.
     528: invokestatic  #123                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     531: aload_0
     532: aload_0
     533: aload_1
     534: invokespecial #124                // Method loadReplicaAccessorBuilderClasses:(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
     537: putfield      #125                // Field replicaAccessorBuilderClasses:Ljava/util/List;
     540: aload_0
     541: aload_1
     542: ldc           #126                // String dfs.namenode.lease-hard-limit-sec
     544: ldc2_w        #127                // long 1200l
     547: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
     550: ldc2_w        #129                // long 1000l
     553: lmul
     554: putfield      #131                // Field leaseHardLimitPeriod:J
     557: return

  private java.util.List<java.lang.Class<? extends org.apache.hadoop.hdfs.ReplicaAccessorBuilder>> loadReplicaAccessorBuilderClasses(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_1
       1: ldc           #132                // String dfs.client.replica.accessor.builder.classes
       3: invokevirtual #133                // Method org/apache/hadoop/conf/Configuration.getTrimmedStrings:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: arraylength
       9: ifne          16
      12: invokestatic  #134                // Method java/util/Collections.emptyList:()Ljava/util/List;
      15: areturn
      16: new           #135                // class java/util/ArrayList
      19: dup
      20: invokespecial #136                // Method java/util/ArrayList."<init>":()V
      23: astore_3
      24: invokestatic  #137                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      27: invokevirtual #138                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      30: astore        4
      32: aload_2
      33: astore        5
      35: aload         5
      37: arraylength
      38: istore        6
      40: iconst_0
      41: istore        7
      43: iload         7
      45: iload         6
      47: if_icmpge     114
      50: aload         5
      52: iload         7
      54: aaload
      55: astore        8
      57: aload         4
      59: aload         8
      61: invokevirtual #139                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      64: astore        9
      66: aload_3
      67: aload         9
      69: invokevirtual #140                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      72: pop
      73: goto          108
      76: astore        9
      78: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      81: new           #142                // class java/lang/StringBuilder
      84: dup
      85: invokespecial #143                // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #144                // String Unable to load
      90: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload         8
      95: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: aload         9
     103: invokeinterface #147,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     108: iinc          7, 1
     111: goto          43
     114: aload_3
     115: areturn
    Exception table:
       from    to  target type
          57    73    76   Class java/lang/Throwable

  private static org.apache.hadoop.util.DataChecksum$Type getChecksumType(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #148                // String dfs.checksum.type
       3: ldc           #149                // String CRC32C
       5: invokevirtual #72                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: aload_1
      10: invokestatic  #150                // Method org/apache/hadoop/util/DataChecksum$Type.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/util/DataChecksum$Type;
      13: areturn
      14: astore_2
      15: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      18: ldc           #152                // String Bad checksum type: {}. Using default {}
      20: aload_1
      21: ldc           #149                // String CRC32C
      23: invokeinterface #153,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      28: ldc           #149                // String CRC32C
      30: invokestatic  #150                // Method org/apache/hadoop/util/DataChecksum$Type.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/util/DataChecksum$Type;
      33: areturn
    Exception table:
       from    to  target type
           9    13    14   Class java/lang/IllegalArgumentException

  private static org.apache.hadoop.fs.Options$ChecksumCombineMode getChecksumCombineModeFromConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #154                // String dfs.checksum.combine.mode
       3: ldc           #155                // String MD5MD5CRC
       5: invokevirtual #72                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: aload_1
      10: invokestatic  #156                // Method org/apache/hadoop/fs/Options$ChecksumCombineMode.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Options$ChecksumCombineMode;
      13: areturn
      14: astore_2
      15: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      18: ldc           #157                // String Bad checksum combine mode: {}. Using default {}
      20: aload_1
      21: ldc           #155                // String MD5MD5CRC
      23: invokeinterface #153,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      28: ldc           #155                // String MD5MD5CRC
      30: invokestatic  #156                // Method org/apache/hadoop/fs/Options$ChecksumCombineMode.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Options$ChecksumCombineMode;
      33: areturn
    Exception table:
       from    to  target type
           9    13    14   Class java/lang/IllegalArgumentException

  public static org.apache.hadoop.fs.Options$ChecksumOpt getChecksumOptFromConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokestatic  #158                // Method getChecksumType:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/util/DataChecksum$Type;
       4: astore_1
       5: aload_0
       6: ldc           #159                // String dfs.bytes-per-checksum
       8: sipush        512
      11: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      14: istore_2
      15: new           #160                // class org/apache/hadoop/fs/Options$ChecksumOpt
      18: dup
      19: aload_1
      20: iload_2
      21: invokespecial #161                // Method org/apache/hadoop/fs/Options$ChecksumOpt."<init>":(Lorg/apache/hadoop/util/DataChecksum$Type;I)V
      24: areturn

  public org.apache.hadoop.util.DataChecksum createChecksum(org.apache.hadoop.fs.Options$ChecksumOpt);
    Code:
       0: aload_0
       1: getfield      #33                 // Field defaultChecksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
       4: aload_1
       5: invokestatic  #162                // Method org/apache/hadoop/fs/Options$ChecksumOpt.processChecksumOpt:(Lorg/apache/hadoop/fs/Options$ChecksumOpt;Lorg/apache/hadoop/fs/Options$ChecksumOpt;)Lorg/apache/hadoop/fs/Options$ChecksumOpt;
       8: astore_2
       9: aload_2
      10: invokevirtual #163                // Method org/apache/hadoop/fs/Options$ChecksumOpt.getChecksumType:()Lorg/apache/hadoop/util/DataChecksum$Type;
      13: aload_2
      14: invokevirtual #164                // Method org/apache/hadoop/fs/Options$ChecksumOpt.getBytesPerChecksum:()I
      17: invokestatic  #165                // Method org/apache/hadoop/util/DataChecksum.newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      20: astore_3
      21: aload_3
      22: ifnonnull     69
      25: new           #166                // class org/apache/hadoop/HadoopIllegalArgumentException
      28: dup
      29: new           #142                // class java/lang/StringBuilder
      32: dup
      33: invokespecial #143                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #167                // String Invalid checksum type: userOpt=
      38: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #169                // String , default=
      47: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #33                 // Field defaultChecksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      54: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #170                // String , effective=null
      59: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #171                // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_3
      70: areturn

  public int getBlockWriteLocateFollowingInitialDelayMs();
    Code:
       0: aload_0
       1: getfield      #91                 // Field blockWriteLocateFollowingInitialDelayMs:I
       4: ireturn

  public int getHdfsTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field hdfsTimeout:I
       4: ireturn

  public int getMaxFailoverAttempts();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxFailoverAttempts:I
       4: ireturn

  public int getMaxRetryAttempts();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxRetryAttempts:I
       4: ireturn

  public int getFailoverSleepBaseMillis();
    Code:
       0: aload_0
       1: getfield      #20                 // Field failoverSleepBaseMillis:I
       4: ireturn

  public int getFailoverSleepMaxMillis();
    Code:
       0: aload_0
       1: getfield      #22                 // Field failoverSleepMaxMillis:I
       4: ireturn

  public int getMaxBlockAcquireFailures();
    Code:
       0: aload_0
       1: getfield      #24                 // Field maxBlockAcquireFailures:I
       4: ireturn

  public int getDatanodeSocketWriteTimeout();
    Code:
       0: aload_0
       1: getfield      #28                 // Field datanodeSocketWriteTimeout:I
       4: ireturn

  public int getIoBufferSize();
    Code:
       0: aload_0
       1: getfield      #31                 // Field ioBufferSize:I
       4: ireturn

  public org.apache.hadoop.fs.Options$ChecksumOpt getDefaultChecksumOpt();
    Code:
       0: aload_0
       1: getfield      #33                 // Field defaultChecksumOpt:Lorg/apache/hadoop/fs/Options$ChecksumOpt;
       4: areturn

  public org.apache.hadoop.fs.Options$ChecksumCombineMode getChecksumCombineMode();
    Code:
       0: aload_0
       1: getfield      #35                 // Field checksumCombineMode:Lorg/apache/hadoop/fs/Options$ChecksumCombineMode;
       4: areturn

  public int getChecksumEcSocketTimeout();
    Code:
       0: aload_0
       1: getfield      #37                 // Field checksumEcSocketTimeout:I
       4: ireturn

  public int getWritePacketSize();
    Code:
       0: aload_0
       1: getfield      #48                 // Field writePacketSize:I
       4: ireturn

  public int getWriteMaxPackets();
    Code:
       0: aload_0
       1: getfield      #51                 // Field writeMaxPackets:I
       4: ireturn

  public org.apache.hadoop.hdfs.util.ByteArrayManager$Conf getWriteByteArrayManagerConf();
    Code:
       0: aload_0
       1: getfield      #54                 // Field writeByteArrayManagerConf:Lorg/apache/hadoop/hdfs/util/ByteArrayManager$Conf;
       4: areturn

  public boolean getDataTransferTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #40                 // Field dataTransferTcpNoDelay:Z
       4: ireturn

  public int getSocketTimeout();
    Code:
       0: aload_0
       1: getfield      #43                 // Field socketTimeout:I
       4: ireturn

  public int getSocketSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #45                 // Field socketSendBufferSize:I
       4: ireturn

  public long getExcludedNodesCacheExpiry();
    Code:
       0: aload_0
       1: getfield      #77                 // Field excludedNodesCacheExpiry:J
       4: lreturn

  public int getTimeWindow();
    Code:
       0: aload_0
       1: getfield      #11                 // Field timeWindow:I
       4: ireturn

  public int getNumCachedConnRetry();
    Code:
       0: aload_0
       1: getfield      #84                 // Field numCachedConnRetry:I
       4: ireturn

  public int getNumBlockWriteRetry();
    Code:
       0: aload_0
       1: getfield      #87                 // Field numBlockWriteRetry:I
       4: ireturn

  public int getNumBlockWriteLocateFollowingRetry();
    Code:
       0: aload_0
       1: getfield      #89                 // Field numBlockWriteLocateFollowingRetry:I
       4: ireturn

  public long getDefaultBlockSize();
    Code:
       0: aload_0
       1: getfield      #67                 // Field defaultBlockSize:J
       4: lreturn

  public long getPrefetchSize();
    Code:
       0: aload_0
       1: getfield      #82                 // Field prefetchSize:J
       4: lreturn

  public short getDefaultReplication();
    Code:
       0: aload_0
       1: getfield      #69                 // Field defaultReplication:S
       4: ireturn

  public java.lang.String getTaskId();
    Code:
       0: aload_0
       1: getfield      #73                 // Field taskId:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.fs.permission.FsPermission getUMask();
    Code:
       0: aload_0
       1: getfield      #93                 // Field uMask:Lorg/apache/hadoop/fs/permission/FsPermission;
       4: areturn

  public boolean isConnectToDnViaHostname();
    Code:
       0: aload_0
       1: getfield      #95                 // Field connectToDnViaHostname:Z
       4: ireturn

  public int getRetryTimesForGetLastBlockLength();
    Code:
       0: aload_0
       1: getfield      #13                 // Field retryTimesForGetLastBlockLength:I
       4: ireturn

  public int getRetryIntervalForGetLastBlockLength();
    Code:
       0: aload_0
       1: getfield      #15                 // Field retryIntervalForGetLastBlockLength:I
       4: ireturn

  public long getDatanodeRestartTimeout();
    Code:
       0: aload_0
       1: getfield      #102                // Field datanodeRestartTimeout:J
       4: lreturn

  public long getSlowIoWarningThresholdMs();
    Code:
       0: aload_0
       1: getfield      #106                // Field slowIoWarningThresholdMs:J
       4: lreturn

  public long getHedgedReadThresholdMillis();
    Code:
       0: aload_0
       1: getfield      #116                // Field hedgedReadThresholdMillis:J
       4: lreturn

  public int getHedgedReadThreadpoolSize();
    Code:
       0: aload_0
       1: getfield      #118                // Field hedgedReadThreadpoolSize:I
       4: ireturn

  public int getStripedReadThreadpoolSize();
    Code:
       0: aload_0
       1: getfield      #121                // Field stripedReadThreadpoolSize:I
       4: ireturn

  public long getleaseHardLimitPeriod();
    Code:
       0: aload_0
       1: getfield      #131                // Field leaseHardLimitPeriod:J
       4: lreturn

  public java.util.List<java.lang.Class<? extends org.apache.hadoop.hdfs.ReplicaAccessorBuilder>> getReplicaAccessorBuilderClasses();
    Code:
       0: aload_0
       1: getfield      #125                // Field replicaAccessorBuilderClasses:Ljava/util/List;
       4: areturn

  public long getRefreshReadBlockLocationsMS();
    Code:
       0: aload_0
       1: getfield      #108                // Field refreshReadBlockLocationsMS:J
       4: lreturn

  public org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf getShortCircuitConf();
    Code:
       0: aload_0
       1: getfield      #111                // Field shortCircuitConf:Lorg/apache/hadoop/hdfs/client/impl/DfsClientConf$ShortCircuitConf;
       4: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #172                // class org/apache/hadoop/hdfs/client/impl/DfsClientConf
       2: invokestatic  #173                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
