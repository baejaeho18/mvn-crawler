Compiled from "PositionStripeReader.java"
class org.apache.hadoop.hdfs.PositionStripeReader extends org.apache.hadoop.hdfs.StripeReader {
  private java.nio.ByteBuffer codingBuffer;

  org.apache.hadoop.hdfs.PositionStripeReader(org.apache.hadoop.hdfs.util.StripedBlockUtil$AlignedStripe, org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, org.apache.hadoop.hdfs.protocol.LocatedBlock[], org.apache.hadoop.hdfs.StripeReader$BlockReaderInfo[], org.apache.hadoop.hdfs.DFSUtilClient$CorruptedBlocks, org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder, org.apache.hadoop.hdfs.DFSStripedInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #1                  // Method org/apache/hadoop/hdfs/StripeReader."<init>":(Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;Lorg/apache/hadoop/hdfs/DFSStripedInputStream;)V
      15: return

  void prepareDecodeInputs();
    Code:
       0: aload_0
       1: getfield      #2                  // Field codingBuffer:Ljava/nio/ByteBuffer;
       4: ifnonnull     31
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field dataBlkNum:S
      12: aload_0
      13: getfield      #4                  // Field parityBlkNum:S
      16: iadd
      17: anewarray     #5                  // class org/apache/hadoop/io/erasurecode/ECChunk
      20: putfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      23: aload_0
      24: aload_0
      25: getfield      #7                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      28: invokevirtual #8                  // Method initDecodeInputs:(Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;)V
      31: return

  boolean prepareParityChunk(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field dataBlkNum:S
       5: if_icmplt     24
       8: aload_0
       9: getfield      #7                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      12: getfield      #9                  // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      15: iload_1
      16: aaload
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      28: aload_0
      29: getfield      #7                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      32: invokevirtual #11                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.getSpanInBlock:()J
      35: l2i
      36: istore_2
      37: aload_0
      38: getfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      41: iload_1
      42: new           #5                  // class org/apache/hadoop/io/erasurecode/ECChunk
      45: dup
      46: aload_0
      47: getfield      #2                  // Field codingBuffer:Ljava/nio/ByteBuffer;
      50: invokevirtual #12                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      53: iload_1
      54: iload_2
      55: imul
      56: iload_2
      57: invokespecial #13                 // Method org/apache/hadoop/io/erasurecode/ECChunk."<init>":(Ljava/nio/ByteBuffer;II)V
      60: aastore
      61: aload_0
      62: getfield      #7                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      65: getfield      #9                  // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      68: iload_1
      69: new           #14                 // class org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk
      72: dup
      73: aload_0
      74: getfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      77: iload_1
      78: aaload
      79: invokevirtual #15                 // Method org/apache/hadoop/io/erasurecode/ECChunk.getBuffer:()Ljava/nio/ByteBuffer;
      82: invokespecial #16                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk."<init>":(Ljava/nio/ByteBuffer;)V
      85: aastore
      86: iconst_1
      87: ireturn

  void decode() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method finalizeDecodeInputs:()V
       4: aload_0
       5: iconst_1
       6: invokevirtual #18                 // Method decodeAndFillBuffer:(Z)V
       9: return

  void initDecodeInputs(org.apache.hadoop.hdfs.util.StripedBlockUtil$AlignedStripe);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.getSpanInBlock:()J
       4: l2i
       5: istore_2
       6: aload_0
       7: getfield      #3                  // Field dataBlkNum:S
      10: aload_0
      11: getfield      #4                  // Field parityBlkNum:S
      14: iadd
      15: istore_3
      16: aload_0
      17: aload_0
      18: getfield      #19                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      21: invokevirtual #20                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getBufferPool:()Lorg/apache/hadoop/io/ByteBufferPool;
      24: aload_0
      25: invokevirtual #21                 // Method useDirectBuffer:()Z
      28: iload_2
      29: iload_3
      30: imul
      31: invokeinterface #22,  3           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.getBuffer:(ZI)Ljava/nio/ByteBuffer;
      36: putfield      #2                  // Field codingBuffer:Ljava/nio/ByteBuffer;
      39: iconst_0
      40: istore        5
      42: iload         5
      44: aload_0
      45: getfield      #3                  // Field dataBlkNum:S
      48: if_icmpge     87
      51: aload_0
      52: getfield      #2                  // Field codingBuffer:Ljava/nio/ByteBuffer;
      55: invokevirtual #12                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      58: astore        4
      60: aload_0
      61: getfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      64: iload         5
      66: new           #5                  // class org/apache/hadoop/io/erasurecode/ECChunk
      69: dup
      70: aload         4
      72: iload         5
      74: iload_2
      75: imul
      76: iload_2
      77: invokespecial #13                 // Method org/apache/hadoop/io/erasurecode/ECChunk."<init>":(Ljava/nio/ByteBuffer;II)V
      80: aastore
      81: iinc          5, 1
      84: goto          42
      87: iconst_0
      88: istore        5
      90: iload         5
      92: aload_0
      93: getfield      #3                  // Field dataBlkNum:S
      96: if_icmpge     139
      99: aload_1
     100: getfield      #9                  // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
     103: iload         5
     105: aaload
     106: ifnonnull     133
     109: aload_1
     110: getfield      #9                  // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
     113: iload         5
     115: new           #14                 // class org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk
     118: dup
     119: aload_0
     120: getfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
     123: iload         5
     125: aaload
     126: invokevirtual #15                 // Method org/apache/hadoop/io/erasurecode/ECChunk.getBuffer:()Ljava/nio/ByteBuffer;
     129: invokespecial #16                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk."<init>":(Ljava/nio/ByteBuffer;)V
     132: aastore
     133: iinc          5, 1
     136: goto          90
     139: return

  void close();
    Code:
       0: aload_0
       1: getfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
       4: ifnull        31
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      14: arraylength
      15: if_icmpge     31
      18: aload_0
      19: getfield      #6                  // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      22: iload_1
      23: aconst_null
      24: aastore
      25: iinc          1, 1
      28: goto          9
      31: aload_0
      32: getfield      #2                  // Field codingBuffer:Ljava/nio/ByteBuffer;
      35: ifnull        59
      38: aload_0
      39: getfield      #19                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      42: invokevirtual #20                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getBufferPool:()Lorg/apache/hadoop/io/ByteBufferPool;
      45: aload_0
      46: getfield      #2                  // Field codingBuffer:Ljava/nio/ByteBuffer;
      49: invokeinterface #23,  2           // InterfaceMethod org/apache/hadoop/io/ByteBufferPool.putBuffer:(Ljava/nio/ByteBuffer;)V
      54: aload_0
      55: aconst_null
      56: putfield      #2                  // Field codingBuffer:Ljava/nio/ByteBuffer;
      59: return
}
