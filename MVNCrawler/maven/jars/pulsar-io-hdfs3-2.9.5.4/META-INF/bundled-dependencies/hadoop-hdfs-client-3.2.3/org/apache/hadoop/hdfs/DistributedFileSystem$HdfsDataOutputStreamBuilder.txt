Compiled from "DistributedFileSystem.java"
public final class org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder extends org.apache.hadoop.fs.FSDataOutputStreamBuilder<org.apache.hadoop.fs.FSDataOutputStream, org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder> {
  private final org.apache.hadoop.hdfs.DistributedFileSystem dfs;

  private java.net.InetSocketAddress[] favoredNodes;

  private java.lang.String ecPolicyName;

  private org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/hadoop/fs/FSDataOutputStreamBuilder."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
       6: aload_0
       7: aconst_null
       8: putfield      #3                  // Field favoredNodes:[Ljava/net/InetSocketAddress;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field ecPolicyName:Ljava/lang/String;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field dfs:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      21: return

  protected org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder getThisBuilder();
    Code:
       0: aload_0
       1: areturn

  private java.net.InetSocketAddress[] getFavoredNodes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field favoredNodes:[Ljava/net/InetSocketAddress;
       4: areturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder favoredNodes(java.net.InetSocketAddress[]);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #7                  // Method "[Ljava/net/InetSocketAddress;".clone:()Ljava/lang/Object;
      10: checkcast     #8                  // class "[Ljava/net/InetSocketAddress;"
      13: putfield      #3                  // Field favoredNodes:[Ljava/net/InetSocketAddress;
      16: aload_0
      17: areturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder syncBlock();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #10                 // Field org/apache/hadoop/fs/CreateFlag.SYNC_BLOCK:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #11                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder lazyPersist();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #12                 // Field org/apache/hadoop/fs/CreateFlag.LAZY_PERSIST:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #11                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder newBlock();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #13                 // Field org/apache/hadoop/fs/CreateFlag.NEW_BLOCK:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #11                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder noLocalWrite();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #14                 // Field org/apache/hadoop/fs/CreateFlag.NO_LOCAL_WRITE:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #11                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  java.lang.String getEcPolicyName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ecPolicyName:Ljava/lang/String;
       4: areturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder ecPolicyName(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #4                  // Field ecPolicyName:Ljava/lang/String;
      10: aload_0
      11: areturn

  boolean shouldReplicate();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #15                 // Field org/apache/hadoop/fs/CreateFlag.SHOULD_REPLICATE:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #16                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder replicate();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #15                 // Field org/apache/hadoop/fs/CreateFlag.SHOULD_REPLICATE:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #11                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder ignoreClientLocality();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #17                 // Field org/apache/hadoop/fs/CreateFlag.IGNORE_CLIENT_LOCALITY:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #11                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  protected java.util.EnumSet<org.apache.hadoop.fs.CreateFlag> getFlags();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/apache/hadoop/fs/FSDataOutputStreamBuilder.getFlags:()Ljava/util/EnumSet;
       4: areturn

  public org.apache.hadoop.fs.FSDataOutputStream build() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
       4: getstatic     #19                 // Field org/apache/hadoop/fs/CreateFlag.CREATE:Lorg/apache/hadoop/fs/CreateFlag;
       7: invokevirtual #16                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      10: ifne          26
      13: aload_0
      14: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
      17: getstatic     #20                 // Field org/apache/hadoop/fs/CreateFlag.OVERWRITE:Lorg/apache/hadoop/fs/CreateFlag;
      20: invokevirtual #16                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      23: ifeq          129
      26: aload_0
      27: invokevirtual #21                 // Method isRecursive:()Z
      30: ifeq          81
      33: aload_0
      34: getfield      #5                  // Field dfs:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      37: aload_0
      38: invokevirtual #22                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      41: aload_0
      42: invokevirtual #23                 // Method getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
      45: aload_0
      46: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
      49: aload_0
      50: invokevirtual #24                 // Method getBufferSize:()I
      53: aload_0
      54: invokevirtual #25                 // Method getReplication:()S
      57: aload_0
      58: invokevirtual #26                 // Method getBlockSize:()J
      61: aload_0
      62: invokevirtual #27                 // Method getProgress:()Lorg/apache/hadoop/util/Progressable;
      65: aload_0
      66: invokevirtual #28                 // Method getChecksumOpt:()Lorg/apache/hadoop/fs/Options$ChecksumOpt;
      69: aload_0
      70: invokespecial #29                 // Method getFavoredNodes:()[Ljava/net/InetSocketAddress;
      73: aload_0
      74: invokevirtual #30                 // Method getEcPolicyName:()Ljava/lang/String;
      77: invokestatic  #31                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$600:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;[Ljava/net/InetSocketAddress;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
      80: areturn
      81: aload_0
      82: getfield      #5                  // Field dfs:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      85: aload_0
      86: invokevirtual #22                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      89: aload_0
      90: invokevirtual #23                 // Method getPermission:()Lorg/apache/hadoop/fs/permission/FsPermission;
      93: aload_0
      94: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
      97: aload_0
      98: invokevirtual #24                 // Method getBufferSize:()I
     101: aload_0
     102: invokevirtual #25                 // Method getReplication:()S
     105: aload_0
     106: invokevirtual #26                 // Method getBlockSize:()J
     109: aload_0
     110: invokevirtual #27                 // Method getProgress:()Lorg/apache/hadoop/util/Progressable;
     113: aload_0
     114: invokevirtual #28                 // Method getChecksumOpt:()Lorg/apache/hadoop/fs/Options$ChecksumOpt;
     117: aload_0
     118: invokespecial #29                 // Method getFavoredNodes:()[Ljava/net/InetSocketAddress;
     121: aload_0
     122: invokevirtual #30                 // Method getEcPolicyName:()Ljava/lang/String;
     125: invokestatic  #32                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$800:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;[Ljava/net/InetSocketAddress;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
     128: areturn
     129: aload_0
     130: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
     133: getstatic     #33                 // Field org/apache/hadoop/fs/CreateFlag.APPEND:Lorg/apache/hadoop/fs/CreateFlag;
     136: invokevirtual #16                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
     139: ifeq          170
     142: aload_0
     143: getfield      #5                  // Field dfs:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
     146: aload_0
     147: invokevirtual #22                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
     150: aload_0
     151: invokevirtual #9                  // Method getFlags:()Ljava/util/EnumSet;
     154: aload_0
     155: invokevirtual #24                 // Method getBufferSize:()I
     158: aload_0
     159: invokevirtual #27                 // Method getProgress:()Lorg/apache/hadoop/util/Progressable;
     162: aload_0
     163: invokespecial #29                 // Method getFavoredNodes:()[Ljava/net/InetSocketAddress;
     166: invokevirtual #34                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.append:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;ILorg/apache/hadoop/util/Progressable;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
     169: areturn
     170: new           #35                 // class org/apache/hadoop/HadoopIllegalArgumentException
     173: dup
     174: ldc           #36                 // String Must specify either create or append
     176: invokespecial #37                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     179: athrow

  protected org.apache.hadoop.fs.FSDataOutputStreamBuilder getThisBuilder();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getThisBuilder:()Lorg/apache/hadoop/hdfs/DistributedFileSystem$HdfsDataOutputStreamBuilder;
       4: areturn

  org.apache.hadoop.hdfs.DistributedFileSystem$HdfsDataOutputStreamBuilder(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.hdfs.DistributedFileSystem$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;)V
       6: return
}
