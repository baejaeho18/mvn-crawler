Compiled from "DistributedFileSystem.java"
class org.apache.hadoop.hdfs.DistributedFileSystem$DirListingIterator<T extends org.apache.hadoop.fs.FileStatus> implements org.apache.hadoop.fs.RemoteIterator<T> {
  private org.apache.hadoop.hdfs.protocol.DirectoryListing thisListing;

  private int i;

  private org.apache.hadoop.fs.Path p;

  private java.lang.String src;

  private T curStat;

  private org.apache.hadoop.fs.PathFilter filter;

  private boolean needLocation;

  final org.apache.hadoop.hdfs.DistributedFileSystem this$0;

  private org.apache.hadoop.hdfs.DistributedFileSystem$DirListingIterator(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field curStat:Lorg/apache/hadoop/fs/FileStatus;
      14: aload_0
      15: aload_2
      16: putfield      #6                  // Field p:Lorg/apache/hadoop/fs/Path;
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #7                  // Method org/apache/hadoop/hdfs/DistributedFileSystem.getPathName:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      25: putfield      #8                  // Field src:Ljava/lang/String;
      28: aload_0
      29: aload_3
      30: putfield      #9                  // Field filter:Lorg/apache/hadoop/fs/PathFilter;
      33: aload_0
      34: iload         4
      36: putfield      #10                 // Field needLocation:Z
      39: aload_0
      40: aload_1
      41: getfield      #11                 // Field org/apache/hadoop/hdfs/DistributedFileSystem.dfs:Lorg/apache/hadoop/hdfs/DFSClient;
      44: aload_0
      45: getfield      #8                  // Field src:Ljava/lang/String;
      48: getstatic     #12                 // Field org/apache/hadoop/hdfs/protocol/HdfsFileStatus.EMPTY_NAME:[B
      51: iload         4
      53: invokevirtual #13                 // Method org/apache/hadoop/hdfs/DFSClient.listPaths:(Ljava/lang/String;[BZ)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      56: putfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      59: aload_1
      60: invokestatic  #15                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$1300:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;)Lorg/apache/hadoop/fs/FileSystem$Statistics;
      63: iconst_1
      64: invokevirtual #16                 // Method org/apache/hadoop/fs/FileSystem$Statistics.incrementReadOps:(I)V
      67: iload         4
      69: ifeq          85
      72: aload_1
      73: invokestatic  #17                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$1400:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;)Lorg/apache/hadoop/hdfs/DFSOpsCountStatistics;
      76: getstatic     #18                 // Field org/apache/hadoop/hdfs/DFSOpsCountStatistics$OpType.LIST_LOCATED_STATUS:Lorg/apache/hadoop/hdfs/DFSOpsCountStatistics$OpType;
      79: invokevirtual #19                 // Method org/apache/hadoop/hdfs/DFSOpsCountStatistics.incrementOpCounter:(Lorg/apache/hadoop/hdfs/DFSOpsCountStatistics$OpType;)V
      82: goto          95
      85: aload_1
      86: invokestatic  #17                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$1400:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;)Lorg/apache/hadoop/hdfs/DFSOpsCountStatistics;
      89: getstatic     #20                 // Field org/apache/hadoop/hdfs/DFSOpsCountStatistics$OpType.LIST_STATUS:Lorg/apache/hadoop/hdfs/DFSOpsCountStatistics$OpType;
      92: invokevirtual #19                 // Method org/apache/hadoop/hdfs/DFSOpsCountStatistics.incrementOpCounter:(Lorg/apache/hadoop/hdfs/DFSOpsCountStatistics$OpType;)V
      95: aload_0
      96: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      99: ifnonnull     134
     102: new           #21                 // class java/io/FileNotFoundException
     105: dup
     106: new           #22                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #24                 // String File
     115: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_2
     119: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     122: ldc           #27                 // String  does not exist.
     124: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #29                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: aload_0
     135: iconst_0
     136: putfield      #30                 // Field i:I
     139: return

  private org.apache.hadoop.hdfs.DistributedFileSystem$DirListingIterator(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iload_3
       5: invokespecial #2                  // Method "<init>":(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Z)V
       8: return

  public boolean hasNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field curStat:Lorg/apache/hadoop/fs/FileStatus;
       4: ifnonnull     112
       7: aload_0
       8: invokespecial #31                 // Method hasNextNoFilter:()Z
      11: ifeq          112
      14: aload_0
      15: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      18: invokevirtual #32                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getPartialListing:()[Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
      21: aload_0
      22: dup
      23: getfield      #30                 // Field i:I
      26: dup_x1
      27: iconst_1
      28: iadd
      29: putfield      #30                 // Field i:I
      32: aaload
      33: astore_2
      34: aload_0
      35: getfield      #10                 // Field needLocation:Z
      38: ifeq          63
      41: aload_2
      42: checkcast     #33                 // class org/apache/hadoop/hdfs/protocol/HdfsLocatedFileStatus
      45: aload_0
      46: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      49: invokevirtual #34                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.getUri:()Ljava/net/URI;
      52: aload_0
      53: getfield      #6                  // Field p:Lorg/apache/hadoop/fs/Path;
      56: invokevirtual #35                 // Method org/apache/hadoop/hdfs/protocol/HdfsLocatedFileStatus.makeQualifiedLocated:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/LocatedFileStatus;
      59: astore_1
      60: goto          81
      63: aload_2
      64: aload_0
      65: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      68: invokevirtual #34                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.getUri:()Ljava/net/URI;
      71: aload_0
      72: getfield      #6                  // Field p:Lorg/apache/hadoop/fs/Path;
      75: invokeinterface #36,  3           // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      80: astore_1
      81: aload_0
      82: getfield      #9                  // Field filter:Lorg/apache/hadoop/fs/PathFilter;
      85: ifnull        104
      88: aload_0
      89: getfield      #9                  // Field filter:Lorg/apache/hadoop/fs/PathFilter;
      92: aload_1
      93: invokevirtual #37                 // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      96: invokeinterface #38,  2           // InterfaceMethod org/apache/hadoop/fs/PathFilter.accept:(Lorg/apache/hadoop/fs/Path;)Z
     101: ifeq          109
     104: aload_0
     105: aload_1
     106: putfield      #5                  // Field curStat:Lorg/apache/hadoop/fs/FileStatus;
     109: goto          0
     112: aload_0
     113: getfield      #5                  // Field curStat:Lorg/apache/hadoop/fs/FileStatus;
     116: ifnull        123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: ireturn

  private boolean hasNextNoFilter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #30                 // Field i:I
      13: aload_0
      14: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      17: invokevirtual #32                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getPartialListing:()[Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
      20: arraylength
      21: if_icmplt     121
      24: aload_0
      25: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      28: invokevirtual #39                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.hasMore:()Z
      31: ifeq          121
      34: aload_0
      35: aload_0
      36: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      39: getfield      #11                 // Field org/apache/hadoop/hdfs/DistributedFileSystem.dfs:Lorg/apache/hadoop/hdfs/DFSClient;
      42: aload_0
      43: getfield      #8                  // Field src:Ljava/lang/String;
      46: aload_0
      47: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      50: invokevirtual #40                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getLastName:()[B
      53: aload_0
      54: getfield      #10                 // Field needLocation:Z
      57: invokevirtual #13                 // Method org/apache/hadoop/hdfs/DFSClient.listPaths:(Ljava/lang/String;[BZ)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      60: putfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      63: aload_0
      64: getfield      #3                  // Field this$0:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      67: invokestatic  #41                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.access$1500:(Lorg/apache/hadoop/hdfs/DistributedFileSystem;)Lorg/apache/hadoop/fs/FileSystem$Statistics;
      70: iconst_1
      71: invokevirtual #16                 // Method org/apache/hadoop/fs/FileSystem$Statistics.incrementReadOps:(I)V
      74: aload_0
      75: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      78: ifnonnull     116
      81: new           #21                 // class java/io/FileNotFoundException
      84: dup
      85: new           #22                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #24                 // String File
      94: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: getfield      #6                  // Field p:Lorg/apache/hadoop/fs/Path;
     101: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     104: ldc           #27                 // String  does not exist.
     106: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #29                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload_0
     117: iconst_0
     118: putfield      #30                 // Field i:I
     121: aload_0
     122: getfield      #30                 // Field i:I
     125: aload_0
     126: getfield      #14                 // Field thisListing:Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
     129: invokevirtual #32                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getPartialListing:()[Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
     132: arraylength
     133: if_icmpge     140
     136: iconst_1
     137: goto          141
     140: iconst_0
     141: ireturn

  public T next() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method hasNext:()Z
       4: ifeq          19
       7: aload_0
       8: getfield      #5                  // Field curStat:Lorg/apache/hadoop/fs/FileStatus;
      11: astore_1
      12: aload_0
      13: aconst_null
      14: putfield      #5                  // Field curStat:Lorg/apache/hadoop/fs/FileStatus;
      17: aload_1
      18: areturn
      19: new           #43                 // class java/util/NoSuchElementException
      22: dup
      23: new           #22                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #44                 // String No more entry in
      32: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #6                  // Field p:Lorg/apache/hadoop/fs/Path;
      39: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #45                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      48: athrow

  public java.lang.Object next() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method next:()Lorg/apache/hadoop/fs/FileStatus;
       4: areturn

  org.apache.hadoop.hdfs.DistributedFileSystem$DirListingIterator(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter, boolean, org.apache.hadoop.hdfs.DistributedFileSystem$1) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokespecial #2                  // Method "<init>":(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Z)V
       9: return

  org.apache.hadoop.hdfs.DistributedFileSystem$DirListingIterator(org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.fs.Path, boolean, org.apache.hadoop.hdfs.DistributedFileSystem$1) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;Z)V
       7: return
}
