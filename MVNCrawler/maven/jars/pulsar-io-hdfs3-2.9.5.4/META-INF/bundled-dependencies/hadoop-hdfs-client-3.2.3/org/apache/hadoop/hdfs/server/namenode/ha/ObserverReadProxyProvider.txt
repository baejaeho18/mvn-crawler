Compiled from "ObserverReadProxyProvider.java"
public class org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider<T> extends org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider<T> {
  static final org.slf4j.Logger LOG;

  static final java.lang.String AUTO_MSYNC_PERIOD_KEY_PREFIX;

  static final long AUTO_MSYNC_PERIOD_DEFAULT;

  private final org.apache.hadoop.ipc.AlignmentContext alignmentContext;

  static final java.lang.String OBSERVER_PROBE_RETRY_PERIOD_KEY;

  static final long OBSERVER_PROBE_RETRY_PERIOD_DEFAULT;

  private final org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider<T> failoverProxy;

  private final java.util.List<org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo<T>> nameNodeProxies;

  private final org.apache.hadoop.io.retry.RetryPolicy observerRetryPolicy;

  private final org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo<T> combinedProxy;

  private boolean observerReadEnabled;

  private final long autoMsyncPeriodMs;

  private volatile long lastMsyncTimeMs;

  private volatile boolean msynced;

  private int currentIndex;

  private org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo<T> currentProxy;

  private volatile org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo<T> lastProxy;

  private long observerProbeRetryPeriodMs;

  private long lastObserverProbeTime;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, org.apache.hadoop.hdfs.server.namenode.ha.HAProxyFactory<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: new           #16                 // class org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider
       9: dup
      10: aload_1
      11: aload_2
      12: aload_3
      13: aload         4
      15: invokespecial #17                 // Method org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider."<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;)V
      18: invokespecial #18                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;)V
      21: return

  public org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, org.apache.hadoop.hdfs.server.namenode.ha.HAProxyFactory<T>, org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #19                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider."<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;)V
       9: aload_0
      10: ldc2_w        #20                 // long -1l
      13: putfield      #2                  // Field lastMsyncTimeMs:J
      16: aload_0
      17: iconst_0
      18: putfield      #11                 // Field msynced:Z
      21: aload_0
      22: iconst_m1
      23: putfield      #22                 // Field currentIndex:I
      26: aload_0
      27: aconst_null
      28: putfield      #15                 // Field lastProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      31: aload_0
      32: aload         5
      34: putfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
      37: aload_0
      38: new           #23                 // class org/apache/hadoop/hdfs/ClientGSIContext
      41: dup
      42: invokespecial #24                 // Method org/apache/hadoop/hdfs/ClientGSIContext."<init>":()V
      45: putfield      #25                 // Field alignmentContext:Lorg/apache/hadoop/ipc/AlignmentContext;
      48: aload         4
      50: aload_0
      51: getfield      #25                 // Field alignmentContext:Lorg/apache/hadoop/ipc/AlignmentContext;
      54: invokeinterface #26,  2           // InterfaceMethod org/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory.setAlignmentContext:(Lorg/apache/hadoop/ipc/AlignmentContext;)V
      59: aload_0
      60: lconst_0
      61: putfield      #4                  // Field lastObserverProbeTime:J
      64: aload_0
      65: getstatic     #27                 // Field org/apache/hadoop/io/retry/RetryPolicies.TRY_ONCE_THEN_FAIL:Lorg/apache/hadoop/io/retry/RetryPolicy;
      68: iconst_1
      69: invokestatic  #28                 // Method org/apache/hadoop/io/retry/RetryPolicies.failoverOnNetworkException:(Lorg/apache/hadoop/io/retry/RetryPolicy;I)Lorg/apache/hadoop/io/retry/RetryPolicy;
      72: putfield      #5                  // Field observerRetryPolicy:Lorg/apache/hadoop/io/retry/RetryPolicy;
      75: aload_0
      76: aload_0
      77: aload_2
      78: ldc           #30                 // String dfs.namenode.rpc-address
      80: invokevirtual #31                 // Method getProxyAddresses:(Ljava/net/URI;Ljava/lang/String;)Ljava/util/List;
      83: putfield      #8                  // Field nameNodeProxies:Ljava/util/List;
      86: new           #32                 // class java/lang/StringBuilder
      89: dup
      90: ldc           #33                 // String [
      92: invokespecial #34                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      95: astore        6
      97: iconst_0
      98: istore        7
     100: iload         7
     102: aload_0
     103: getfield      #8                  // Field nameNodeProxies:Ljava/util/List;
     106: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
     111: if_icmpge     156
     114: iload         7
     116: ifle          127
     119: aload         6
     121: ldc           #36                 // String ,
     123: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: aload         6
     129: aload_0
     130: getfield      #8                  // Field nameNodeProxies:Ljava/util/List;
     133: iload         7
     135: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     140: checkcast     #39                 // class org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo
     143: getfield      #40                 // Field org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo.proxyInfo:Ljava/lang/String;
     146: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: pop
     150: iinc          7, 1
     153: goto          100
     156: aload         6
     158: bipush        93
     160: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     163: pop
     164: ldc           #42                 // class org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider$ObserverReadInvocationHandler
     166: invokevirtual #43                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     169: iconst_1
     170: anewarray     #44                 // class java/lang/Class
     173: dup
     174: iconst_0
     175: aload_3
     176: aastore
     177: new           #42                 // class org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider$ObserverReadInvocationHandler
     180: dup
     181: aload_0
     182: aconst_null
     183: invokespecial #45                 // Method org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider$ObserverReadInvocationHandler."<init>":(Lorg/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider;Lorg/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider$1;)V
     186: invokestatic  #46                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
     189: astore        7
     191: aload_0
     192: new           #47                 // class org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo
     195: dup
     196: aload         7
     198: aload         6
     200: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: invokespecial #49                 // Method org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     206: putfield      #50                 // Field combinedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
     209: aload_0
     210: aload_1
     211: new           #32                 // class java/lang/StringBuilder
     214: dup
     215: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     218: ldc           #53                 // String dfs.client.failover.observer.auto-msync-period.
     220: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: aload_2
     224: invokevirtual #54                 // Method java/net/URI.getHost:()Ljava/lang/String;
     227: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: ldc2_w        #20                 // long -1l
     236: getstatic     #55                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     239: invokevirtual #56                 // Method org/apache/hadoop/conf/Configuration.getTimeDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)J
     242: putfield      #57                 // Field autoMsyncPeriodMs:J
     245: aload_0
     246: aload_1
     247: ldc           #58                 // String dfs.client.failover.observer.probe.retry.period
     249: ldc2_w        #59                 // long 600000l
     252: getstatic     #55                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     255: invokevirtual #56                 // Method org/apache/hadoop/conf/Configuration.getTimeDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)J
     258: putfield      #61                 // Field observerProbeRetryPeriodMs:J
     261: aload         7
     263: instanceof    #62                 // class org/apache/hadoop/hdfs/protocol/ClientProtocol
     266: ifeq          277
     269: aload_0
     270: iconst_1
     271: putfield      #14                 // Field observerReadEnabled:Z
     274: goto          298
     277: getstatic     #63                 // Field LOG:Lorg/slf4j/Logger;
     280: ldc           #64                 // String Disabling observer reads for {} because the requested proxy class does not implement {}
     282: aload_2
     283: ldc           #62                 // class org/apache/hadoop/hdfs/protocol/ClientProtocol
     285: invokevirtual #65                 // Method java/lang/Class.getName:()Ljava/lang/String;
     288: invokeinterface #66,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     293: aload_0
     294: iconst_0
     295: putfield      #14                 // Field observerReadEnabled:Z
     298: return

  public org.apache.hadoop.ipc.AlignmentContext getAlignmentContext();
    Code:
       0: aload_0
       1: getfield      #25                 // Field alignmentContext:Lorg/apache/hadoop/ipc/AlignmentContext;
       4: areturn

  public org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo<T> getProxy();
    Code:
       0: aload_0
       1: getfield      #50                 // Field combinedProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
       4: areturn

  public void performFailover(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
       4: aload_1
       5: invokevirtual #67                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.performFailover:(Ljava/lang/Object;)V
       8: return

  private static boolean isRead(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: ldc           #68                 // class org/apache/hadoop/hdfs/server/namenode/ha/ReadOnly
       3: invokevirtual #69                 // Method java/lang/reflect/Method.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: ldc           #68                 // class org/apache/hadoop/hdfs/server/namenode/ha/ReadOnly
      14: invokevirtual #70                 // Method java/lang/reflect/Method.getAnnotationsByType:(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
      17: checkcast     #71                 // class "[Lorg/apache/hadoop/hdfs/server/namenode/ha/ReadOnly;"
      20: iconst_0
      21: aaload
      22: invokeinterface #72,  1           // InterfaceMethod org/apache/hadoop/hdfs/server/namenode/ha/ReadOnly.activeOnly:()Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  void setObserverReadEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field observerReadEnabled:Z
       5: return

  org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo<T> getLastProxy();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lastProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
       4: areturn

  private org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo<T> getCurrentProxy();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #6                  // Method changeProxy:(Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;)Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
       5: areturn

  private synchronized org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo<T> changeProxy(org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo<T>);
    Code:
       0: aload_0
       1: getfield      #73                 // Field currentProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
       4: aload_1
       5: if_acmpeq     13
       8: aload_0
       9: getfield      #73                 // Field currentProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
      12: areturn
      13: aload_0
      14: aload_0
      15: getfield      #22                 // Field currentIndex:I
      18: iconst_1
      19: iadd
      20: aload_0
      21: getfield      #8                  // Field nameNodeProxies:Ljava/util/List;
      24: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      29: irem
      30: putfield      #22                 // Field currentIndex:I
      33: aload_0
      34: aload_0
      35: aload_0
      36: getfield      #8                  // Field nameNodeProxies:Ljava/util/List;
      39: aload_0
      40: getfield      #22                 // Field currentIndex:I
      43: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      48: checkcast     #39                 // class org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo
      51: invokevirtual #74                 // Method createProxyIfNeeded:(Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;)Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
      54: putfield      #73                 // Field currentProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
      57: aload_0
      58: getfield      #73                 // Field currentProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
      61: aload_0
      62: aload_0
      63: getfield      #73                 // Field currentProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
      66: invokespecial #75                 // Method getHAServiceState:(Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;)Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      69: invokevirtual #76                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo.setCachedState:(Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;)V
      72: getstatic     #63                 // Field LOG:Lorg/slf4j/Logger;
      75: ldc           #77                 // String Changed current proxy from {} to {}
      77: aload_1
      78: ifnonnull     86
      81: ldc           #78                 // String none
      83: goto          90
      86: aload_1
      87: getfield      #40                 // Field org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo.proxyInfo:Ljava/lang/String;
      90: aload_0
      91: getfield      #73                 // Field currentProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
      94: getfield      #40                 // Field org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo.proxyInfo:Ljava/lang/String;
      97: invokeinterface #79,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     102: aload_0
     103: getfield      #73                 // Field currentProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
     106: areturn

  private org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAServiceState(org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo<T>);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #80                 // Field org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo.proxy:Ljava/lang/Object;
       5: invokespecial #81                 // Method getProxyAsClientProtocol:(Ljava/lang/Object;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
       8: invokeinterface #82,  1           // InterfaceMethod org/apache/hadoop/hdfs/protocol/ClientProtocol.getHAServiceState:()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      13: areturn
      14: astore_3
      15: aload_3
      16: invokevirtual #84                 // Method org/apache/hadoop/ipc/RemoteException.unwrapRemoteException:()Ljava/io/IOException;
      19: instanceof    #85                 // class org/apache/hadoop/ipc/StandbyException
      22: ifeq          43
      25: getstatic     #63                 // Field LOG:Lorg/slf4j/Logger;
      28: ldc           #86                 // String NameNode {} threw StandbyException when fetching HAState
      30: aload_1
      31: invokevirtual #87                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo.getAddress:()Ljava/net/InetSocketAddress;
      34: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      39: getstatic     #89                 // Field org/apache/hadoop/ha/HAServiceProtocol$HAServiceState.STANDBY:Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;
      42: areturn
      43: aload_3
      44: astore_2
      45: goto          51
      48: astore_3
      49: aload_3
      50: astore_2
      51: getstatic     #63                 // Field LOG:Lorg/slf4j/Logger;
      54: invokeinterface #91,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      59: ifeq          77
      62: getstatic     #63                 // Field LOG:Lorg/slf4j/Logger;
      65: ldc           #92                 // String Failed to connect to {} while fetching HAServiceState
      67: aload_1
      68: invokevirtual #87                 // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo.getAddress:()Ljava/net/InetSocketAddress;
      71: aload_2
      72: invokeinterface #79,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      77: aconst_null
      78: areturn
    Exception table:
       from    to  target type
           0    13    14   Class org/apache/hadoop/ipc/RemoteException
           0    13    48   Class java/io/IOException

  private org.apache.hadoop.hdfs.protocol.ClientProtocol getProxyAsClientProtocol(T);
    Code:
       0: getstatic     #93                 // Field $assertionsDisabled:Z
       3: ifne          48
       6: aload_1
       7: instanceof    #62                 // class org/apache/hadoop/hdfs/protocol/ClientProtocol
      10: ifne          48
      13: new           #94                 // class java/lang/AssertionError
      16: dup
      17: new           #32                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #95                 // String BUG: Attempted to use proxy of class
      26: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #98                 // String  as if it was a ClientProtocol.
      38: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #99                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      47: athrow
      48: aload_1
      49: checkcast     #62                 // class org/apache/hadoop/hdfs/protocol/ClientProtocol
      52: areturn

  private synchronized void initializeMsync() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field msynced:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
      13: invokevirtual #100                // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.getProxy:()Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      16: getfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      19: invokespecial #81                 // Method getProxyAsClientProtocol:(Ljava/lang/Object;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
      22: invokeinterface #102,  1          // InterfaceMethod org/apache/hadoop/hdfs/protocol/ClientProtocol.msync:()V
      27: aload_0
      28: iconst_1
      29: putfield      #11                 // Field msynced:Z
      32: aload_0
      33: invokestatic  #103                // Method org/apache/hadoop/util/Time.monotonicNow:()J
      36: putfield      #2                  // Field lastMsyncTimeMs:J
      39: return

  private boolean shouldFindObserver();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lastObserverProbeTime:J
       4: lconst_0
       5: lcmp
       6: ifle          31
       9: invokestatic  #103                // Method org/apache/hadoop/util/Time.monotonicNow:()J
      12: aload_0
      13: getfield      #4                  // Field lastObserverProbeTime:J
      16: lsub
      17: aload_0
      18: getfield      #61                 // Field observerProbeRetryPeriodMs:J
      21: lcmp
      22: iflt          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  private void autoMsyncIfNecessary() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field autoMsyncPeriodMs:J
       4: lconst_0
       5: lcmp
       6: ifne          31
       9: aload_0
      10: aload_0
      11: getfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
      14: invokevirtual #100                // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.getProxy:()Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      17: getfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      20: invokespecial #81                 // Method getProxyAsClientProtocol:(Ljava/lang/Object;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
      23: invokeinterface #102,  1          // InterfaceMethod org/apache/hadoop/hdfs/protocol/ClientProtocol.msync:()V
      28: goto          112
      31: aload_0
      32: getfield      #57                 // Field autoMsyncPeriodMs:J
      35: lconst_0
      36: lcmp
      37: ifle          112
      40: invokestatic  #103                // Method org/apache/hadoop/util/Time.monotonicNow:()J
      43: aload_0
      44: getfield      #2                  // Field lastMsyncTimeMs:J
      47: lsub
      48: aload_0
      49: getfield      #57                 // Field autoMsyncPeriodMs:J
      52: lcmp
      53: ifle          112
      56: aload_0
      57: dup
      58: astore_1
      59: monitorenter
      60: invokestatic  #103                // Method org/apache/hadoop/util/Time.monotonicNow:()J
      63: aload_0
      64: getfield      #2                  // Field lastMsyncTimeMs:J
      67: lsub
      68: aload_0
      69: getfield      #57                 // Field autoMsyncPeriodMs:J
      72: lcmp
      73: ifle          102
      76: aload_0
      77: aload_0
      78: getfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
      81: invokevirtual #100                // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.getProxy:()Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
      84: getfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      87: invokespecial #81                 // Method getProxyAsClientProtocol:(Ljava/lang/Object;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
      90: invokeinterface #102,  1          // InterfaceMethod org/apache/hadoop/hdfs/protocol/ClientProtocol.msync:()V
      95: aload_0
      96: invokestatic  #103                // Method org/apache/hadoop/util/Time.monotonicNow:()J
      99: putfield      #2                  // Field lastMsyncTimeMs:J
     102: aload_1
     103: monitorexit
     104: goto          112
     107: astore_2
     108: aload_1
     109: monitorexit
     110: aload_2
     111: athrow
     112: return
    Exception table:
       from    to  target type
          60   104   107   any
         107   110   107   any

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field nameNodeProxies:Ljava/util/List;
       4: invokeinterface #104,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          76
      19: aload_1
      20: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #47                 // class org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo
      28: astore_2
      29: aload_2
      30: getfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      33: ifnull        73
      36: aload_2
      37: getfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      40: instanceof    #107                // class java/io/Closeable
      43: ifeq          61
      46: aload_2
      47: getfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      50: checkcast     #107                // class java/io/Closeable
      53: invokeinterface #108,  1          // InterfaceMethod java/io/Closeable.close:()V
      58: goto          68
      61: aload_2
      62: getfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      65: invokestatic  #109                // Method org/apache/hadoop/ipc/RPC.stopProxy:(Ljava/lang/Object;)V
      68: aload_2
      69: aconst_null
      70: putfield      #101                // Field org/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo.proxy:Ljava/lang/Object;
      73: goto          10
      76: aload_0
      77: getfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
      80: invokevirtual #110                // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.close:()V
      83: return

  public boolean useLogicalURI();
    Code:
       0: aload_0
       1: getfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
       4: invokevirtual #111                // Method org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.useLogicalURI:()Z
       7: ireturn

  static org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo access$102(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider, org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #15                 // Field lastProxy:Lorg/apache/hadoop/io/retry/FailoverProxyProvider$ProxyInfo;
       6: areturn

  static boolean access$200(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider);
    Code:
       0: aload_0
       1: getfield      #14                 // Field observerReadEnabled:Z
       4: ireturn

  static boolean access$300(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method shouldFindObserver:()Z
       4: ireturn

  static boolean access$400(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method isRead:(Ljava/lang/reflect/Method;)Z
       4: ireturn

  static boolean access$500(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider);
    Code:
       0: aload_0
       1: getfield      #11                 // Field msynced:Z
       4: ireturn

  static void access$600(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method initializeMsync:()V
       4: return

  static void access$700(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method autoMsyncIfNecessary:()V
       4: return

  static java.util.List access$800(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider);
    Code:
       0: aload_0
       1: getfield      #8                  // Field nameNodeProxies:Ljava/util/List;
       4: areturn

  static org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo access$900(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method getCurrentProxy:()Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
       4: areturn

  static org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo access$1000(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider, org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider$NNProxyInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method changeProxy:(Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;)Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider$NNProxyInfo;
       5: areturn

  static org.apache.hadoop.io.retry.RetryPolicy access$1100(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider);
    Code:
       0: aload_0
       1: getfield      #5                  // Field observerRetryPolicy:Lorg/apache/hadoop/io/retry/RetryPolicy;
       4: areturn

  static long access$1202(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #4                  // Field lastObserverProbeTime:J
       6: lreturn

  static org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider access$1300(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider);
    Code:
       0: aload_0
       1: getfield      #3                  // Field failoverProxy:Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;
       4: areturn

  static boolean access$502(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #11                 // Field msynced:Z
       6: ireturn

  static long access$1402(org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #2                  // Field lastMsyncTimeMs:J
       6: lreturn

  static {};
    Code:
       0: ldc           #52                 // class org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider
       2: invokevirtual #112                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #93                 // Field $assertionsDisabled:Z
      16: ldc           #52                 // class org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider
      18: invokestatic  #113                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #63                 // Field LOG:Lorg/slf4j/Logger;
      24: return
}
