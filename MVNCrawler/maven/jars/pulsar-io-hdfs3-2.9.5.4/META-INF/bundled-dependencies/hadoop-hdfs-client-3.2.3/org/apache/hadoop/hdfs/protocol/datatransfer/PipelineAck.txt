Compiled from "PipelineAck.java"
public class org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck {
  org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$PipelineAckProto proto;

  public static final long UNKOWN_SEQNO;

  static final int OOB_START;

  static final int OOB_END;

  public org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck(long, int[]);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lconst_0
       4: invokespecial #3                  // Method "<init>":(J[IJ)V
       7: return

  public org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck(long, int[], long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #4                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       7: astore        6
       9: invokestatic  #4                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      12: astore        7
      14: aload_3
      15: astore        8
      17: aload         8
      19: arraylength
      20: istore        9
      22: iconst_0
      23: istore        10
      25: iload         10
      27: iload         9
      29: if_icmpge     67
      32: aload         8
      34: iload         10
      36: iaload
      37: istore        11
      39: aload         6
      41: iload         11
      43: invokestatic  #5                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$StatusFormat.getStatus:(I)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      46: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      49: pop
      50: aload         7
      52: iload         11
      54: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      60: pop
      61: iinc          10, 1
      64: goto          25
      67: aload_0
      68: invokestatic  #8                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.newBuilder:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder;
      71: lload_1
      72: invokevirtual #9                  // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder.setSeqno:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder;
      75: aload         6
      77: invokevirtual #10                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder.addAllReply:(Ljava/lang/Iterable;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder;
      80: aload         7
      82: invokevirtual #11                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder.addAllFlag:(Ljava/lang/Iterable;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder;
      85: lload         4
      87: invokevirtual #12                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder.setDownstreamAckTimeNanos:(J)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder;
      90: invokevirtual #13                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto$Builder.build:()Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
      93: putfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
      96: return

  public long getSeqno();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: invokevirtual #15                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getSeqno:()J
       7: lreturn

  public short getNumOfReplies();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: invokevirtual #16                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getReplyCount:()I
       7: i2s
       8: ireturn

  public int getHeaderFlag(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: invokevirtual #17                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getFlagCount:()I
       7: ifle          19
      10: aload_0
      11: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
      14: iload_1
      15: invokevirtual #18                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getFlag:(I)I
      18: ireturn
      19: getstatic     #19                 // Field org/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$ECN.DISABLED:Lorg/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$ECN;
      22: aload_0
      23: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
      26: iload_1
      27: invokevirtual #20                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getReply:(I)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      30: invokestatic  #21                 // Method combineHeader:(Lorg/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$ECN;Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;)I
      33: ireturn

  public int getFlag(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: iload_1
       5: invokevirtual #18                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getFlag:(I)I
       8: ireturn

  public long getDownstreamAckTimeNanos();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: invokevirtual #22                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getDownstreamAckTimeNanos:()J
       7: lreturn

  public boolean isSuccess();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: invokevirtual #23                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getReplyList:()Ljava/util/List;
       7: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          44
      22: aload_1
      23: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #1                  // class org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status
      31: astore_2
      32: aload_2
      33: getstatic     #27                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.SUCCESS:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
      36: if_acmpeq     41
      39: iconst_0
      40: ireturn
      41: goto          13
      44: iconst_1
      45: ireturn

  public org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status getOOBStatus();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getSeqno:()J
       4: ldc2_w        #30                 // long -2l
       7: lcmp
       8: ifeq          13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
      17: invokevirtual #23                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.getReplyList:()Ljava/util/List;
      20: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          68
      35: aload_1
      36: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #1                  // class org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status
      44: astore_2
      45: aload_2
      46: invokevirtual #32                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.getNumber:()I
      49: bipush        8
      51: if_icmplt     65
      54: aload_2
      55: invokevirtual #32                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.getNumber:()I
      58: bipush        11
      60: if_icmpgt     65
      63: aload_2
      64: areturn
      65: goto          26
      68: aconst_null
      69: areturn

  public static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status getRestartOOBStatus();
    Code:
       0: getstatic     #33                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.OOB_RESTART:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
       3: areturn

  public static boolean isRestartOOBStatus(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status);
    Code:
       0: aload_0
       1: getstatic     #33                 // Field org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.OOB_RESTART:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
       4: invokevirtual #34                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status.equals:(Ljava/lang/Object;)Z
       7: ireturn

  public void readFields(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.vintPrefixed:(Ljava/io/InputStream;)Ljava/io/InputStream;
       5: invokestatic  #36                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.parseFrom:(Ljava/io/InputStream;)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       8: putfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
      11: return

  public void write(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: aload_1
       5: invokevirtual #37                 // Method org/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto.writeDelimitedTo:(Ljava/io/OutputStream;)V
       8: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proto:Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$PipelineAckProto;
       4: invokestatic  #38                 // Method com/google/protobuf/TextFormat.shortDebugString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
       7: areturn

  public static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status getStatusFromHeader(int);
    Code:
       0: iload_0
       1: invokestatic  #5                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$StatusFormat.getStatus:(I)Lorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;
       4: areturn

  public static org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck$ECN getECNFromHeader(int);
    Code:
       0: iload_0
       1: invokestatic  #39                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$StatusFormat.getECN:(I)Lorg/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$ECN;
       4: areturn

  public static int setStatusForHeader(int, org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status);
    Code:
       0: iload_0
       1: aload_1
       2: invokestatic  #40                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$StatusFormat.setStatus:(ILorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;)I
       5: ireturn

  public static int combineHeader(org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck$ECN, org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: invokestatic  #40                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$StatusFormat.setStatus:(ILorg/apache/hadoop/hdfs/protocol/proto/DataTransferProtos$Status;)I
       7: istore_2
       8: iload_2
       9: aload_0
      10: invokestatic  #41                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$StatusFormat.setECN:(ILorg/apache/hadoop/hdfs/protocol/datatransfer/PipelineAck$ECN;)I
      13: istore_2
      14: iload_2
      15: ireturn
}
