Compiled from "Hdfs.java"
public class org.apache.hadoop.fs.Hdfs extends org.apache.hadoop.fs.AbstractFileSystem {
  org.apache.hadoop.hdfs.DFSClient dfs;

  private boolean verifyChecksum;

  org.apache.hadoop.fs.Hdfs(java.net.URI, org.apache.hadoop.conf.Configuration) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String hdfs
       4: iconst_1
       5: sipush        8020
       8: invokespecial #4                  // Method org/apache/hadoop/fs/AbstractFileSystem."<init>":(Ljava/net/URI;Ljava/lang/String;ZI)V
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field verifyChecksum:Z
      16: aload_1
      17: invokevirtual #6                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      20: ldc           #2                  // String hdfs
      22: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      25: ifne          38
      28: new           #8                  // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #9                  // String Passed URI\'s scheme is not for Hdfs
      34: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: invokevirtual #11                 // Method java/net/URI.getHost:()Ljava/lang/String;
      42: astore_3
      43: aload_3
      44: ifnonnull     74
      47: new           #12                 // class java/io/IOException
      50: dup
      51: new           #13                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #15                 // String Incomplete HDFS URI, no host:
      60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_1
      64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: new           #20                 // class org/apache/hadoop/hdfs/DFSClient
      78: dup
      79: aload_1
      80: aload_2
      81: aload_0
      82: invokevirtual #21                 // Method getStatistics:()Lorg/apache/hadoop/fs/FileSystem$Statistics;
      85: invokespecial #22                 // Method org/apache/hadoop/hdfs/DFSClient."<init>":(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
      88: putfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
      91: return

  public int getUriDefaultPort();
    Code:
       0: sipush        8020
       3: ireturn

  public org.apache.hadoop.hdfs.client.HdfsDataOutputStream createInternal(org.apache.hadoop.fs.Path, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>, org.apache.hadoop.fs.permission.FsPermission, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_3
      10: aload_2
      11: iload         10
      13: iload         5
      15: lload         6
      17: aload         8
      19: iload         4
      21: aload         9
      23: invokevirtual #25                 // Method org/apache/hadoop/hdfs/DFSClient.primitiveCreate:(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/EnumSet;ZSJLorg/apache/hadoop/util/Progressable;ILorg/apache/hadoop/fs/Options$ChecksumOpt;)Lorg/apache/hadoop/hdfs/DFSOutputStream;
      26: astore        11
      28: aload_0
      29: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
      32: aload         11
      34: aload_0
      35: getfield      #26                 // Field statistics:Lorg/apache/hadoop/fs/FileSystem$Statistics;
      38: aload         11
      40: invokevirtual #27                 // Method org/apache/hadoop/hdfs/DFSOutputStream.getInitialLen:()J
      43: invokevirtual #28                 // Method org/apache/hadoop/hdfs/DFSClient.createWrappedOutputStream:(Lorg/apache/hadoop/hdfs/DFSOutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;J)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
      46: areturn

  public boolean delete(org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iload_2
      10: invokevirtual #29                 // Method org/apache/hadoop/hdfs/DFSClient.delete:(Ljava/lang/String;Z)Z
      13: ireturn

  public org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: lload_2
      10: lload         4
      12: invokevirtual #30                 // Method org/apache/hadoop/hdfs/DFSClient.getBlockLocations:(Ljava/lang/String;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
      15: areturn

  public org.apache.hadoop.fs.FileChecksum getFileChecksum(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: ldc2_w        #32                 // long 9223372036854775807l
      12: invokevirtual #34                 // Method org/apache/hadoop/hdfs/DFSClient.getFileChecksumWithCombineMode:(Ljava/lang/String;J)Lorg/apache/hadoop/fs/FileChecksum;
      15: areturn

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #35                 // Method org/apache/hadoop/hdfs/DFSClient.getFileInfo:(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
      12: astore_2
      13: aload_2
      14: ifnull        29
      17: aload_2
      18: aload_0
      19: invokevirtual #36                 // Method getUri:()Ljava/net/URI;
      22: aload_1
      23: invokeinterface #37,  3           // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      28: areturn
      29: new           #38                 // class java/io/FileNotFoundException
      32: dup
      33: new           #13                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #39                 // String File does not exist:
      42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #40                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #41                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      58: athrow

  public void msync() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #42                 // Method org/apache/hadoop/hdfs/DFSClient.msync:()V
       7: return

  public org.apache.hadoop.fs.FileStatus getFileLinkStatus(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #43                 // Method org/apache/hadoop/hdfs/DFSClient.getFileLinkInfo:(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
      12: astore_2
      13: aload_2
      14: ifnull        29
      17: aload_2
      18: aload_0
      19: invokevirtual #36                 // Method getUri:()Ljava/net/URI;
      22: aload_1
      23: invokeinterface #37,  3           // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      28: areturn
      29: new           #38                 // class java/io/FileNotFoundException
      32: dup
      33: new           #13                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #39                 // String File does not exist:
      42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #41                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      55: athrow

  public org.apache.hadoop.fs.FsStatus getFsStatus() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #44                 // Method org/apache/hadoop/hdfs/DFSClient.getDiskStatus:()Lorg/apache/hadoop/fs/FsStatus;
       7: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #45                 // Method org/apache/hadoop/hdfs/DFSClient.getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
       7: areturn

  public org.apache.hadoop.fs.FsServerDefaults getServerDefaults(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #45                 // Method org/apache/hadoop/hdfs/DFSClient.getServerDefaults:()Lorg/apache/hadoop/fs/FsServerDefaults;
       7: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.Path) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: new           #46                 // class org/apache/hadoop/fs/Hdfs$1
       3: dup
       4: aload_0
       5: aload_1
       6: iconst_1
       7: aload_1
       8: invokespecial #47                 // Method org/apache/hadoop/fs/Hdfs$1."<init>":(Lorg/apache/hadoop/fs/Hdfs;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/Path;)V
      11: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatusIterator(org.apache.hadoop.fs.Path) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: new           #48                 // class org/apache/hadoop/fs/Hdfs$2
       3: dup
       4: aload_0
       5: aload_1
       6: iconst_0
       7: aload_1
       8: invokespecial #49                 // Method org/apache/hadoop/fs/Hdfs$2."<init>":(Lorg/apache/hadoop/fs/Hdfs;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/Path;)V
      11: areturn

  public org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
      10: aload_2
      11: getstatic     #50                 // Field org/apache/hadoop/hdfs/protocol/HdfsFileStatus.EMPTY_NAME:[B
      14: invokevirtual #51                 // Method org/apache/hadoop/hdfs/DFSClient.listPaths:(Ljava/lang/String;[B)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
      17: astore_3
      18: aload_3
      19: ifnonnull     54
      22: new           #38                 // class java/io/FileNotFoundException
      25: dup
      26: new           #13                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #52                 // String File
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #53                 // String  does not exist.
      44: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #41                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_3
      55: invokevirtual #54                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getPartialListing:()[Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
      58: astore        4
      60: aload_3
      61: invokevirtual #55                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.hasMore:()Z
      64: ifne          115
      67: aload         4
      69: arraylength
      70: anewarray     #56                 // class org/apache/hadoop/fs/FileStatus
      73: astore        5
      75: iconst_0
      76: istore        6
      78: iload         6
      80: aload         4
      82: arraylength
      83: if_icmpge     112
      86: aload         5
      88: iload         6
      90: aload         4
      92: iload         6
      94: aaload
      95: aload_0
      96: invokevirtual #36                 // Method getUri:()Ljava/net/URI;
      99: aload_1
     100: invokeinterface #37,  3           // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     105: aastore
     106: iinc          6, 1
     109: goto          78
     112: aload         5
     114: areturn
     115: aload         4
     117: arraylength
     118: aload_3
     119: invokevirtual #57                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getRemainingEntries:()I
     122: iadd
     123: istore        5
     125: new           #58                 // class java/util/ArrayList
     128: dup
     129: iload         5
     131: invokespecial #59                 // Method java/util/ArrayList."<init>":(I)V
     134: astore        6
     136: aload         4
     138: astore        7
     140: aload         7
     142: arraylength
     143: istore        8
     145: iconst_0
     146: istore        9
     148: iload         9
     150: iload         8
     152: if_icmpge     186
     155: aload         7
     157: iload         9
     159: aaload
     160: astore        10
     162: aload         6
     164: aload         10
     166: aload_0
     167: invokevirtual #36                 // Method getUri:()Ljava/net/URI;
     170: aload_1
     171: invokeinterface #37,  3           // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     176: invokevirtual #60                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     179: pop
     180: iinc          9, 1
     183: goto          148
     186: aload_0
     187: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
     190: aload_2
     191: aload_3
     192: invokevirtual #61                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getLastName:()[B
     195: invokevirtual #51                 // Method org/apache/hadoop/hdfs/DFSClient.listPaths:(Ljava/lang/String;[B)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
     198: astore_3
     199: aload_3
     200: ifnonnull     235
     203: new           #38                 // class java/io/FileNotFoundException
     206: dup
     207: new           #13                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #52                 // String File
     216: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload_1
     220: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     223: ldc           #53                 // String  does not exist.
     225: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     231: invokespecial #41                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     234: athrow
     235: aload_3
     236: invokevirtual #54                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.getPartialListing:()[Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
     239: astore        4
     241: aload         4
     243: astore        7
     245: aload         7
     247: arraylength
     248: istore        8
     250: iconst_0
     251: istore        9
     253: iload         9
     255: iload         8
     257: if_icmpge     291
     260: aload         7
     262: iload         9
     264: aaload
     265: astore        10
     267: aload         6
     269: aload         10
     271: aload_0
     272: invokevirtual #36                 // Method getUri:()Ljava/net/URI;
     275: aload_1
     276: invokeinterface #37,  3           // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     281: invokevirtual #60                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     284: pop
     285: iinc          9, 1
     288: goto          253
     291: aload_3
     292: invokevirtual #55                 // Method org/apache/hadoop/hdfs/protocol/DirectoryListing.hasMore:()Z
     295: ifne          186
     298: aload         6
     300: aload         6
     302: invokevirtual #62                 // Method java/util/ArrayList.size:()I
     305: anewarray     #56                 // class org/apache/hadoop/fs/FileStatus
     308: invokevirtual #63                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     311: checkcast     #64                 // class "[Lorg/apache/hadoop/fs/FileStatus;"
     314: areturn

  public org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.Path> listCorruptFileBlocks(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #65                 // class org/apache/hadoop/hdfs/client/impl/CorruptFileBlockIterator
       3: dup
       4: aload_0
       5: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       8: aload_1
       9: invokespecial #66                 // Method org/apache/hadoop/hdfs/client/impl/CorruptFileBlockIterator."<init>":(Lorg/apache/hadoop/hdfs/DFSClient;Lorg/apache/hadoop/fs/Path;)V
      12: areturn

  public void mkdir(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: iload_3
      11: invokevirtual #67                 // Method org/apache/hadoop/hdfs/DFSClient.primitiveMkdir:(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Z)Z
      14: pop
      15: return

  public org.apache.hadoop.hdfs.client.HdfsDataInputStream open(org.apache.hadoop.fs.Path, int) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iload_2
      10: aload_0
      11: getfield      #5                  // Field verifyChecksum:Z
      14: invokevirtual #68                 // Method org/apache/hadoop/hdfs/DFSClient.open:(Ljava/lang/String;IZ)Lorg/apache/hadoop/hdfs/DFSInputStream;
      17: astore_3
      18: aload_0
      19: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
      22: aload_3
      23: invokevirtual #69                 // Method org/apache/hadoop/hdfs/DFSClient.createWrappedInputStream:(Lorg/apache/hadoop/hdfs/DFSInputStream;)Lorg/apache/hadoop/hdfs/client/HdfsDataInputStream;
      26: areturn

  public boolean truncate(org.apache.hadoop.fs.Path, long) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: lload_2
      10: invokevirtual #70                 // Method org/apache/hadoop/hdfs/DFSClient.truncate:(Ljava/lang/String;J)Z
      13: ireturn

  public void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      14: iconst_1
      15: anewarray     #71                 // class org/apache/hadoop/fs/Options$Rename
      18: dup
      19: iconst_0
      20: getstatic     #72                 // Field org/apache/hadoop/fs/Options$Rename.NONE:Lorg/apache/hadoop/fs/Options$Rename;
      23: aastore
      24: invokevirtual #73                 // Method org/apache/hadoop/hdfs/DFSClient.rename:(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/fs/Options$Rename;)V
      27: return

  public void renameInternal(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      14: iconst_1
      15: anewarray     #71                 // class org/apache/hadoop/fs/Options$Rename
      18: dup
      19: iconst_0
      20: iload_3
      21: ifeq          30
      24: getstatic     #74                 // Field org/apache/hadoop/fs/Options$Rename.OVERWRITE:Lorg/apache/hadoop/fs/Options$Rename;
      27: goto          33
      30: getstatic     #72                 // Field org/apache/hadoop/fs/Options$Rename.NONE:Lorg/apache/hadoop/fs/Options$Rename;
      33: aastore
      34: invokevirtual #73                 // Method org/apache/hadoop/hdfs/DFSClient.rename:(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/fs/Options$Rename;)V
      37: return

  public void setOwner(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: aload_3
      11: invokevirtual #75                 // Method org/apache/hadoop/hdfs/DFSClient.setOwner:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public void setPermission(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #76                 // Method org/apache/hadoop/hdfs/DFSClient.setPermission:(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)V
      13: return

  public boolean setReplication(org.apache.hadoop.fs.Path, short) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: iload_2
      10: invokevirtual #77                 // Method org/apache/hadoop/hdfs/DFSClient.setReplication:(Ljava/lang/String;S)Z
      13: ireturn

  public void setTimes(org.apache.hadoop.fs.Path, long, long) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: lload_2
      10: lload         4
      12: invokevirtual #78                 // Method org/apache/hadoop/hdfs/DFSClient.setTimes:(Ljava/lang/String;JJ)V
      15: return

  public void setVerifyChecksum(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field verifyChecksum:Z
       5: return

  public boolean supportsSymlinks();
    Code:
       0: iconst_1
       1: ireturn

  public void createSymlink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException, org.apache.hadoop.fs.UnresolvedLinkException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_1
       5: invokevirtual #40                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       8: aload_0
       9: aload_2
      10: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      13: iload_3
      14: invokevirtual #79                 // Method org/apache/hadoop/hdfs/DFSClient.createSymlink:(Ljava/lang/String;Ljava/lang/String;Z)V
      17: return

  public org.apache.hadoop.fs.Path getLinkTarget(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #80                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       8: aload_0
       9: aload_1
      10: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      13: invokevirtual #81                 // Method org/apache/hadoop/hdfs/DFSClient.getLinkTarget:(Ljava/lang/String;)Ljava/lang/String;
      16: invokespecial #82                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      19: areturn

  public java.lang.String getCanonicalServiceName();
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #83                 // Method org/apache/hadoop/hdfs/DFSClient.getCanonicalServiceName:()Ljava/lang/String;
       7: areturn

  public java.util.List<org.apache.hadoop.security.token.Token<?>> getDelegationTokens(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_1
       5: ifnonnull     12
       8: aconst_null
       9: goto          20
      12: new           #84                 // class org/apache/hadoop/io/Text
      15: dup
      16: aload_1
      17: invokespecial #85                 // Method org/apache/hadoop/io/Text."<init>":(Ljava/lang/String;)V
      20: invokevirtual #86                 // Method org/apache/hadoop/hdfs/DFSClient.getDelegationToken:(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
      23: astore_2
      24: new           #58                 // class java/util/ArrayList
      27: dup
      28: invokespecial #87                 // Method java/util/ArrayList."<init>":()V
      31: astore_3
      32: aload_3
      33: aload_2
      34: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_3
      41: areturn

  public void modifyAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #89                 // Method org/apache/hadoop/hdfs/DFSClient.modifyAclEntries:(Ljava/lang/String;Ljava/util/List;)V
      13: return

  public void removeAclEntries(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #90                 // Method org/apache/hadoop/hdfs/DFSClient.removeAclEntries:(Ljava/lang/String;Ljava/util/List;)V
      13: return

  public void removeDefaultAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #91                 // Method org/apache/hadoop/hdfs/DFSClient.removeDefaultAcl:(Ljava/lang/String;)V
      12: return

  public void removeAcl(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #92                 // Method org/apache/hadoop/hdfs/DFSClient.removeAcl:(Ljava/lang/String;)V
      12: return

  public void setAcl(org.apache.hadoop.fs.Path, java.util.List<org.apache.hadoop.fs.permission.AclEntry>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #93                 // Method org/apache/hadoop/hdfs/DFSClient.setAcl:(Ljava/lang/String;Ljava/util/List;)V
      13: return

  public org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #94                 // Method org/apache/hadoop/hdfs/DFSClient.getAclStatus:(Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/AclStatus;
      12: areturn

  public void setXAttr(org.apache.hadoop.fs.Path, java.lang.String, byte[], java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokevirtual #95                 // Method org/apache/hadoop/hdfs/DFSClient.setXAttr:(Ljava/lang/String;Ljava/lang/String;[BLjava/util/EnumSet;)V
      16: return

  public byte[] getXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #96                 // Method org/apache/hadoop/hdfs/DFSClient.getXAttr:(Ljava/lang/String;Ljava/lang/String;)[B
      13: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #97                 // Method org/apache/hadoop/hdfs/DFSClient.getXAttrs:(Ljava/lang/String;)Ljava/util/Map;
      12: areturn

  public java.util.Map<java.lang.String, byte[]> getXAttrs(org.apache.hadoop.fs.Path, java.util.List<java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #98                 // Method org/apache/hadoop/hdfs/DFSClient.getXAttrs:(Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;
      13: areturn

  public java.util.List<java.lang.String> listXAttrs(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #99                 // Method org/apache/hadoop/hdfs/DFSClient.listXAttrs:(Ljava/lang/String;)Ljava/util/List;
      12: areturn

  public void removeXAttr(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #100                // Method org/apache/hadoop/hdfs/DFSClient.removeXAttr:(Ljava/lang/String;Ljava/lang/String;)V
      13: return

  public void access(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsAction) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #101                // Method org/apache/hadoop/hdfs/DFSClient.checkAccess:(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsAction;)V
      13: return

  public void satisfyStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #102                // Method org/apache/hadoop/hdfs/DFSClient.satisfyStoragePolicy:(Ljava/lang/String;)V
      12: return

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #103                // Method org/apache/hadoop/hdfs/DFSClient.setStoragePolicy:(Ljava/lang/String;Ljava/lang/String;)V
      13: return

  public void unsetStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #104                // Method org/apache/hadoop/hdfs/DFSClient.unsetStoragePolicy:(Ljava/lang/String;)V
      12: return

  public org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: invokevirtual #105                // Method org/apache/hadoop/hdfs/DFSClient.getStoragePolicy:(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/BlockStoragePolicy;
      12: areturn

  public java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: invokevirtual #106                // Method org/apache/hadoop/hdfs/DFSClient.getStoragePolicies:()[Lorg/apache/hadoop/hdfs/protocol/BlockStoragePolicy;
       7: invokestatic  #107                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: areturn

  public long renewDelegationToken(org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier>) throws org.apache.hadoop.security.token.SecretManager$InvalidToken, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_1
       5: invokevirtual #108                // Method org/apache/hadoop/hdfs/DFSClient.renewDelegationToken:(Lorg/apache/hadoop/security/token/Token;)J
       8: lreturn

  public void cancelDelegationToken(org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier>) throws org.apache.hadoop.security.token.SecretManager$InvalidToken, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_1
       5: invokevirtual #109                // Method org/apache/hadoop/hdfs/DFSClient.cancelDelegationToken:(Lorg/apache/hadoop/security/token/Token;)V
       8: return

  public org.apache.hadoop.fs.Path createSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #80                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       8: aload_0
       9: aload_1
      10: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      13: aload_2
      14: invokevirtual #110                // Method org/apache/hadoop/hdfs/DFSClient.createSnapshot:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      17: invokespecial #82                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      20: areturn

  public void renameSnapshot(org.apache.hadoop.fs.Path, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: aload_3
      11: invokevirtual #111                // Method org/apache/hadoop/hdfs/DFSClient.renameSnapshot:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public void deleteSnapshot(org.apache.hadoop.fs.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field dfs:Lorg/apache/hadoop/hdfs/DFSClient;
       4: aload_0
       5: aload_1
       6: invokevirtual #24                 // Method getUriPath:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
       9: aload_2
      10: invokevirtual #112                // Method org/apache/hadoop/hdfs/DFSClient.deleteSnapshot:(Ljava/lang/String;Ljava/lang/String;)V
      13: return

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path, int) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #113                // Method open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/hdfs/client/HdfsDataInputStream;
       6: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createInternal(org.apache.hadoop.fs.Path, java.util.EnumSet, org.apache.hadoop.fs.permission.FsPermission, int, short, long, org.apache.hadoop.util.Progressable, org.apache.hadoop.fs.Options$ChecksumOpt, boolean) throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.fs.FileAlreadyExistsException, java.io.FileNotFoundException, org.apache.hadoop.fs.ParentNotDirectoryException, org.apache.hadoop.fs.UnsupportedFileSystemException, org.apache.hadoop.fs.UnresolvedLinkException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: lload         6
      10: aload         8
      12: aload         9
      14: iload         10
      16: invokevirtual #114                // Method createInternal:(Lorg/apache/hadoop/fs/Path;Ljava/util/EnumSet;Lorg/apache/hadoop/fs/permission/FsPermission;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/Options$ChecksumOpt;Z)Lorg/apache/hadoop/hdfs/client/HdfsDataOutputStream;
      19: areturn

  static {};
    Code:
       0: invokestatic  #115                // Method org/apache/hadoop/hdfs/HdfsConfiguration.init:()V
       3: return
}
