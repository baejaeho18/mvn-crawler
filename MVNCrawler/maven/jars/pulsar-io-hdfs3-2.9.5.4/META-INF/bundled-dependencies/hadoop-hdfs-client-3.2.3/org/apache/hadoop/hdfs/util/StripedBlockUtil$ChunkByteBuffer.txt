Compiled from "StripedBlockUtil.java"
public class org.apache.hadoop.hdfs.util.StripedBlockUtil$ChunkByteBuffer {
  private final java.util.List<java.nio.ByteBuffer> slices;

  org.apache.hadoop.hdfs.util.StripedBlockUtil$ChunkByteBuffer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field slices:Ljava/util/List;
      15: return

  public void addSlice(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      12: iload_2
      13: iadd
      14: invokevirtual #7                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      17: pop
      18: aload         4
      20: aload_1
      21: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      24: iload_2
      25: iadd
      26: iload_3
      27: iadd
      28: invokevirtual #8                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      31: pop
      32: aload_0
      33: getfield      #4                  // Field slices:Ljava/util/List;
      36: aload         4
      38: invokevirtual #9                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      41: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: return

  public java.nio.ByteBuffer getSlice(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field slices:Ljava/util/List;
       4: iload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #12                 // class java/nio/ByteBuffer
      13: areturn

  public java.util.List<java.nio.ByteBuffer> getSlices();
    Code:
       0: aload_0
       1: getfield      #4                  // Field slices:Ljava/util/List;
       4: areturn

  public void copyTo(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field slices:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class java/nio/ByteBuffer
      28: astore_3
      29: aload_3
      30: invokevirtual #16                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      33: pop
      34: aload_1
      35: aload_3
      36: invokevirtual #17                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      39: pop
      40: goto          10
      43: aload_1
      44: invokevirtual #16                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      47: pop
      48: return

  public void copyFrom(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field slices:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          76
      21: aload         4
      23: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #12                 // class java/nio/ByteBuffer
      31: astore        5
      33: aload         5
      35: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      38: istore_3
      39: aload_1
      40: invokevirtual #5                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      43: astore_2
      44: aload_2
      45: aload_2
      46: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      49: iload_3
      50: iadd
      51: invokevirtual #8                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      54: pop
      55: aload         5
      57: aload_2
      58: invokevirtual #17                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      61: pop
      62: aload_1
      63: aload_1
      64: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      67: iload_3
      68: iadd
      69: invokevirtual #7                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      72: pop
      73: goto          11
      76: return
}
