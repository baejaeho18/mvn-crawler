Compiled from "StripeReader.java"
abstract class org.apache.hadoop.hdfs.StripeReader {
  private final java.util.Map<java.util.concurrent.Future<org.apache.hadoop.hdfs.util.StripedBlockUtil$BlockReadStats>, java.lang.Integer> futures;

  protected final org.apache.hadoop.hdfs.util.StripedBlockUtil$AlignedStripe alignedStripe;

  private final java.util.concurrent.CompletionService<org.apache.hadoop.hdfs.util.StripedBlockUtil$BlockReadStats> service;

  protected final org.apache.hadoop.hdfs.protocol.LocatedBlock[] targetBlocks;

  protected final org.apache.hadoop.hdfs.DFSUtilClient$CorruptedBlocks corruptedBlocks;

  protected final org.apache.hadoop.hdfs.StripeReader$BlockReaderInfo[] readerInfos;

  protected final org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy ecPolicy;

  protected final short dataBlkNum;

  protected final short parityBlkNum;

  protected final int cellSize;

  protected final org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder decoder;

  protected final org.apache.hadoop.hdfs.DFSStripedInputStream dfsStripedInputStream;

  protected org.apache.hadoop.io.erasurecode.ECChunk[] decodeInputs;

  org.apache.hadoop.hdfs.StripeReader(org.apache.hadoop.hdfs.util.StripedBlockUtil$AlignedStripe, org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, org.apache.hadoop.hdfs.protocol.LocatedBlock[], org.apache.hadoop.hdfs.StripeReader$BlockReaderInfo[], org.apache.hadoop.hdfs.DFSUtilClient$CorruptedBlocks, org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder, org.apache.hadoop.hdfs.DFSStripedInputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field futures:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      25: aload_0
      26: aload_2
      27: invokevirtual #7                  // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getNumDataUnits:()I
      30: i2s
      31: putfield      #8                  // Field dataBlkNum:S
      34: aload_0
      35: aload_2
      36: invokevirtual #9                  // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getNumParityUnits:()I
      39: i2s
      40: putfield      #10                 // Field parityBlkNum:S
      43: aload_0
      44: aload_2
      45: invokevirtual #11                 // Method org/apache/hadoop/hdfs/protocol/ErasureCodingPolicy.getCellSize:()I
      48: putfield      #12                 // Field cellSize:I
      51: aload_0
      52: aload_3
      53: putfield      #13                 // Field targetBlocks:[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      56: aload_0
      57: aload         4
      59: putfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      62: aload_0
      63: aload         5
      65: putfield      #15                 // Field corruptedBlocks:Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;
      68: aload_0
      69: aload         6
      71: putfield      #16                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
      74: aload_0
      75: aload         7
      77: putfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      80: aload_0
      81: new           #18                 // class java/util/concurrent/ExecutorCompletionService
      84: dup
      85: aload         7
      87: invokevirtual #19                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getStripedReadsThreadPool:()Ljava/util/concurrent/ThreadPoolExecutor;
      90: invokespecial #20                 // Method java/util/concurrent/ExecutorCompletionService."<init>":(Ljava/util/concurrent/Executor;)V
      93: putfield      #21                 // Field service:Ljava/util/concurrent/CompletionService;
      96: return

  abstract void prepareDecodeInputs();

  abstract boolean prepareParityChunk(int);

  abstract void decode() throws java.io.IOException;

  void close();
    Code:
       0: return

  void updateState4SuccessRead(org.apache.hadoop.hdfs.util.StripedBlockUtil$StripingChunkReadResult);
    Code:
       0: aload_1
       1: getfield      #22                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult.state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      16: aload_0
      17: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      20: aload_1
      21: getfield      #25                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult.index:I
      24: aaload
      25: aload_0
      26: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      29: invokevirtual #26                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.getOffsetInBlock:()J
      32: aload_0
      33: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      36: invokevirtual #27                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.getSpanInBlock:()J
      39: ladd
      40: invokevirtual #28                 // Method org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.setOffset:(J)V
      43: return

  private void checkMissingBlocks() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
       4: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
       7: aload_0
       8: getfield      #10                 // Field parityBlkNum:S
      11: if_icmple     73
      14: aload_0
      15: invokevirtual #30                 // Method clearFutures:()V
      18: new           #31                 // class java/io/IOException
      21: dup
      22: new           #32                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_0
      30: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      33: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      36: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #35                 // String  missing blocks, the stripe is:
      41: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      48: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: ldc           #38                 // String ; locatedBlocks is:
      53: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      60: invokevirtual #39                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getLocatedBlocks:()Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
      63: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #41                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: return

  private void readDataForDecoding() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method prepareDecodeInputs:()V
       4: iconst_0
       5: istore_1
       6: iload_1
       7: aload_0
       8: getfield      #8                  // Field dataBlkNum:S
      11: if_icmpge     77
      14: aload_0
      15: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      18: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      21: iload_1
      22: aaload
      23: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      31: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      34: iload_1
      35: aaload
      36: getfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      39: bipush        8
      41: if_icmpne     71
      44: aload_0
      45: aload_0
      46: getfield      #13                 // Field targetBlocks:[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      49: iload_1
      50: aaload
      51: iload_1
      52: invokevirtual #47                 // Method readChunk:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;I)Z
      55: ifne          71
      58: aload_0
      59: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      62: dup
      63: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      66: iconst_1
      67: iadd
      68: putfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      71: iinc          1, 1
      74: goto          6
      77: aload_0
      78: invokespecial #48                 // Method checkMissingBlocks:()V
      81: return

  void readParityChunks(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field dataBlkNum:S
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_2
       8: aload_0
       9: getfield      #8                  // Field dataBlkNum:S
      12: aload_0
      13: getfield      #10                 // Field parityBlkNum:S
      16: iadd
      17: if_icmpge     84
      20: iload_3
      21: iload_1
      22: if_icmpge     84
      25: aload_0
      26: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      29: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      32: iload_2
      33: aaload
      34: ifnonnull     78
      37: aload_0
      38: iload_2
      39: invokevirtual #49                 // Method prepareParityChunk:(I)Z
      42: ifeq          65
      45: aload_0
      46: aload_0
      47: getfield      #13                 // Field targetBlocks:[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      50: iload_2
      51: aaload
      52: iload_2
      53: invokevirtual #47                 // Method readChunk:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;I)Z
      56: ifeq          65
      59: iinc          3, 1
      62: goto          78
      65: aload_0
      66: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      69: dup
      70: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      73: iconst_1
      74: iadd
      75: putfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      78: iinc          2, 1
      81: goto          7
      84: aload_0
      85: invokespecial #48                 // Method checkMissingBlocks:()V
      88: return

  private org.apache.hadoop.hdfs.ByteBufferStrategy[] getReadStrategies(org.apache.hadoop.hdfs.util.StripedBlockUtil$StripingChunk);
    Code:
       0: aload_1
       1: invokevirtual #50                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.useByteBuffer:()Z
       4: ifeq          42
       7: new           #51                 // class org/apache/hadoop/hdfs/ByteBufferStrategy
      10: dup
      11: aload_1
      12: invokevirtual #52                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.getByteBuffer:()Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      19: invokevirtual #53                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getReadStatistics:()Lorg/apache/hadoop/hdfs/ReadStatistics;
      22: aload_0
      23: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      26: invokevirtual #54                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getDFSClient:()Lorg/apache/hadoop/hdfs/DFSClient;
      29: invokespecial #55                 // Method org/apache/hadoop/hdfs/ByteBufferStrategy."<init>":(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hdfs/ReadStatistics;Lorg/apache/hadoop/hdfs/DFSClient;)V
      32: astore_2
      33: iconst_1
      34: anewarray     #51                 // class org/apache/hadoop/hdfs/ByteBufferStrategy
      37: dup
      38: iconst_0
      39: aload_2
      40: aastore
      41: areturn
      42: aload_1
      43: invokevirtual #56                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.getChunkBuffer:()Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer;
      46: invokevirtual #57                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer.getSlices:()Ljava/util/List;
      49: invokeinterface #58,  1           // InterfaceMethod java/util/List.size:()I
      54: anewarray     #51                 // class org/apache/hadoop/hdfs/ByteBufferStrategy
      57: astore_2
      58: iconst_0
      59: istore_3
      60: iload_3
      61: aload_2
      62: arraylength
      63: if_icmpge     108
      66: aload_1
      67: invokevirtual #56                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.getChunkBuffer:()Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer;
      70: iload_3
      71: invokevirtual #59                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer.getSlice:(I)Ljava/nio/ByteBuffer;
      74: astore        4
      76: aload_2
      77: iload_3
      78: new           #51                 // class org/apache/hadoop/hdfs/ByteBufferStrategy
      81: dup
      82: aload         4
      84: aload_0
      85: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      88: invokevirtual #53                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getReadStatistics:()Lorg/apache/hadoop/hdfs/ReadStatistics;
      91: aload_0
      92: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      95: invokevirtual #54                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getDFSClient:()Lorg/apache/hadoop/hdfs/DFSClient;
      98: invokespecial #55                 // Method org/apache/hadoop/hdfs/ByteBufferStrategy."<init>":(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hdfs/ReadStatistics;Lorg/apache/hadoop/hdfs/DFSClient;)V
     101: aastore
     102: iinc          3, 1
     105: goto          60
     108: aload_2
     109: areturn

  private int readToBuffer(org.apache.hadoop.hdfs.BlockReader, org.apache.hadoop.hdfs.protocol.DatanodeInfo, org.apache.hadoop.hdfs.ByteBufferStrategy, org.apache.hadoop.hdfs.protocol.ExtendedBlock) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #60                 // Method org/apache/hadoop/hdfs/ByteBufferStrategy.getTargetLength:()I
       4: istore        5
       6: iconst_0
       7: istore        6
       9: iload         6
      11: iload         5
      13: if_icmpge     48
      16: aload_3
      17: aload_1
      18: invokevirtual #61                 // Method org/apache/hadoop/hdfs/ByteBufferStrategy.readFromBlock:(Lorg/apache/hadoop/hdfs/BlockReader;)I
      21: istore        7
      23: iload         7
      25: ifge          38
      28: new           #31                 // class java/io/IOException
      31: dup
      32: ldc           #62                 // String Unexpected EOS from the reader
      34: invokespecial #41                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload         6
      40: iload         7
      42: iadd
      43: istore        6
      45: goto          9
      48: iload         6
      50: ireturn
      51: astore        7
      53: getstatic     #64                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
      56: new           #32                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #65                 // String Found Checksum error for
      65: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload         4
      70: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: ldc           #66                 // String  from
      75: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_2
      79: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #67                 // String  at
      84: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload         7
      89: invokevirtual #68                 // Method org/apache/hadoop/fs/ChecksumException.getPos:()J
      92: invokevirtual #69                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      95: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #70,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     103: aload_3
     104: invokevirtual #71                 // Method org/apache/hadoop/hdfs/ByteBufferStrategy.getReadBuffer:()Ljava/nio/ByteBuffer;
     107: invokevirtual #72                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     110: pop
     111: aload_0
     112: getfield      #15                 // Field corruptedBlocks:Lorg/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks;
     115: aload         4
     117: aload_2
     118: invokevirtual #73                 // Method org/apache/hadoop/hdfs/DFSUtilClient$CorruptedBlocks.addCorruptedBlock:(Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
     121: aload         7
     123: athrow
     124: astore        7
     126: getstatic     #64                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     129: new           #32                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     136: ldc           #74                 // String Exception while reading from
     138: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload         4
     143: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: ldc           #75                 // String  of
     148: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_0
     152: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
     155: invokevirtual #76                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.getSrc:()Ljava/lang/String;
     158: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: ldc           #66                 // String  from
     163: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_2
     167: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     170: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: aload         7
     175: invokeinterface #77,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     180: aload_3
     181: invokevirtual #71                 // Method org/apache/hadoop/hdfs/ByteBufferStrategy.getReadBuffer:()Ljava/nio/ByteBuffer;
     184: invokevirtual #72                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     187: pop
     188: aload         7
     190: athrow
    Exception table:
       from    to  target type
           9    50    51   Class org/apache/hadoop/fs/ChecksumException
           9    50   124   Class java/io/IOException

  private java.util.concurrent.Callable<org.apache.hadoop.hdfs.util.StripedBlockUtil$BlockReadStats> readCells(org.apache.hadoop.hdfs.BlockReader, org.apache.hadoop.hdfs.protocol.DatanodeInfo, long, long, org.apache.hadoop.hdfs.ByteBufferStrategy[], org.apache.hadoop.hdfs.protocol.ExtendedBlock);
    Code:
       0: aload_0
       1: aload_1
       2: lload_3
       3: lload         5
       5: aload         7
       7: aload_2
       8: aload         8
      10: invokedynamic #78,  0             // InvokeDynamic #0:call:(Lorg/apache/hadoop/hdfs/StripeReader;Lorg/apache/hadoop/hdfs/BlockReader;JJ[Lorg/apache/hadoop/hdfs/ByteBufferStrategy;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)Ljava/util/concurrent/Callable;
      15: areturn

  boolean readChunk(org.apache.hadoop.hdfs.protocol.LocatedBlock, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
       4: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
       7: iload_2
       8: aaload
       9: astore_3
      10: aload_1
      11: ifnonnull     21
      14: aload_3
      15: iconst_2
      16: putfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      25: iload_2
      26: aaload
      27: ifnonnull     64
      30: aload_0
      31: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
      34: aload_1
      35: aload_0
      36: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      39: invokevirtual #26                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.getOffsetInBlock:()J
      42: aload_0
      43: getfield      #13                 // Field targetBlocks:[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      46: aload_0
      47: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      50: iload_2
      51: invokevirtual #79                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.createBlockReader:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;J[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;I)Z
      54: ifne          83
      57: aload_3
      58: iconst_2
      59: putfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      68: iload_2
      69: aaload
      70: getfield      #80                 // Field org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.shouldSkip:Z
      73: ifeq          83
      76: aload_3
      77: iconst_2
      78: putfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      81: iconst_0
      82: ireturn
      83: aload_3
      84: iconst_4
      85: putfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      88: aload_0
      89: aload_0
      90: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
      93: iload_2
      94: aaload
      95: getfield      #81                 // Field org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.reader:Lorg/apache/hadoop/hdfs/BlockReader;
      98: aload_0
      99: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
     102: iload_2
     103: aaload
     104: getfield      #82                 // Field org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.datanode:Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
     107: aload_0
     108: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
     111: iload_2
     112: aaload
     113: getfield      #83                 // Field org/apache/hadoop/hdfs/StripeReader$BlockReaderInfo.blockReaderOffset:J
     116: aload_0
     117: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     120: invokevirtual #26                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.getOffsetInBlock:()J
     123: aload_0
     124: aload_3
     125: invokespecial #84                 // Method getReadStrategies:(Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;)[Lorg/apache/hadoop/hdfs/ByteBufferStrategy;
     128: aload_1
     129: invokevirtual #85                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getBlock:()Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
     132: invokespecial #86                 // Method readCells:(Lorg/apache/hadoop/hdfs/BlockReader;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;JJ[Lorg/apache/hadoop/hdfs/ByteBufferStrategy;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)Ljava/util/concurrent/Callable;
     135: astore        4
     137: aload_0
     138: getfield      #21                 // Field service:Ljava/util/concurrent/CompletionService;
     141: aload         4
     143: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/CompletionService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
     148: astore        5
     150: aload_0
     151: getfield      #4                  // Field futures:Ljava/util/Map;
     154: aload         5
     156: iload_2
     157: invokestatic  #88                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     160: invokeinterface #89,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     165: pop
     166: iconst_1
     167: ireturn

  void readStripe() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #8                  // Field dataBlkNum:S
       7: if_icmpge     72
      10: aload_0
      11: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      14: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      17: iload_1
      18: aaload
      19: ifnull        66
      22: aload_0
      23: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      26: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      29: iload_1
      30: aaload
      31: getfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      34: bipush        15
      36: if_icmpeq     66
      39: aload_0
      40: aload_0
      41: getfield      #13                 // Field targetBlocks:[Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
      44: iload_1
      45: aaload
      46: iload_1
      47: invokevirtual #47                 // Method readChunk:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;I)Z
      50: ifne          66
      53: aload_0
      54: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      57: dup
      58: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      61: iconst_1
      62: iadd
      63: putfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      66: iinc          1, 1
      69: goto          2
      72: aload_0
      73: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      76: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      79: ifle          101
      82: aload_0
      83: invokespecial #48                 // Method checkMissingBlocks:()V
      86: aload_0
      87: invokespecial #90                 // Method readDataForDecoding:()V
      90: aload_0
      91: aload_0
      92: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      95: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
      98: invokevirtual #91                 // Method readParityChunks:(I)V
     101: aload_0
     102: getfield      #4                  // Field futures:Ljava/util/Map;
     105: invokeinterface #92,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     110: ifne          365
     113: aload_0
     114: getfield      #21                 // Field service:Ljava/util/concurrent/CompletionService;
     117: aload_0
     118: getfield      #4                  // Field futures:Ljava/util/Map;
     121: lconst_0
     122: invokestatic  #93                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil.getNextCompletedStripedRead:(Ljava/util/concurrent/CompletionService;Ljava/util/Map;J)Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult;
     125: astore_1
     126: aload_0
     127: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
     130: aload_1
     131: invokevirtual #94                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult.getReadStats:()Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats;
     134: invokevirtual #95                 // Method org/apache/hadoop/hdfs/DFSStripedInputStream.updateReadStats:(Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats;)V
     137: getstatic     #64                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     140: invokeinterface #96,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     145: ifeq          187
     148: getstatic     #64                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     151: new           #32                 // class java/lang/StringBuilder
     154: dup
     155: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     158: ldc           #97                 // String Read task returned:
     160: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: aload_1
     164: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     167: ldc           #98                 // String , for stripe
     169: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_0
     173: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     176: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     179: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokeinterface #99,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     187: aload_0
     188: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     191: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
     194: aload_1
     195: getfield      #25                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult.index:I
     198: aaload
     199: astore_2
     200: aload_2
     201: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
     204: pop
     205: aload_2
     206: getfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
     209: iconst_4
     210: if_icmpne     217
     213: iconst_1
     214: goto          218
     217: iconst_0
     218: invokestatic  #100                // Method com/google/common/base/Preconditions.checkState:(Z)V
     221: aload_1
     222: getfield      #22                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult.state:I
     225: iconst_1
     226: if_icmpne     273
     229: aload_2
     230: iconst_1
     231: putfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
     234: aload_0
     235: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     238: dup
     239: getfield      #101                // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.fetchedChunksNum:I
     242: iconst_1
     243: iadd
     244: putfield      #101                // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.fetchedChunksNum:I
     247: aload_0
     248: aload_1
     249: invokevirtual #102                // Method updateState4SuccessRead:(Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult;)V
     252: aload_0
     253: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     256: getfield      #101                // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.fetchedChunksNum:I
     259: aload_0
     260: getfield      #8                  // Field dataBlkNum:S
     263: if_icmpne     336
     266: aload_0
     267: invokevirtual #30                 // Method clearFutures:()V
     270: goto          365
     273: aload_2
     274: iconst_2
     275: putfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
     278: aload_0
     279: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
     282: aload_0
     283: getfield      #14                 // Field readerInfos:[Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;
     286: aload_1
     287: getfield      #25                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunkReadResult.index:I
     290: aaload
     291: invokevirtual #103                // Method org/apache/hadoop/hdfs/DFSStripedInputStream.closeReader:(Lorg/apache/hadoop/hdfs/StripeReader$BlockReaderInfo;)V
     294: aload_0
     295: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     298: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
     301: istore_3
     302: aload_0
     303: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     306: dup
     307: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
     310: iconst_1
     311: iadd
     312: putfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
     315: aload_0
     316: invokespecial #48                 // Method checkMissingBlocks:()V
     319: aload_0
     320: invokespecial #90                 // Method readDataForDecoding:()V
     323: aload_0
     324: aload_0
     325: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     328: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
     331: iload_3
     332: isub
     333: invokevirtual #91                 // Method readParityChunks:(I)V
     336: goto          101
     339: astore_1
     340: ldc           #105                // String Read request interrupted
     342: astore_2
     343: getstatic     #64                 // Field org/apache/hadoop/hdfs/DFSClient.LOG:Lorg/slf4j/Logger;
     346: aload_2
     347: invokeinterface #106,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     352: aload_0
     353: invokevirtual #30                 // Method clearFutures:()V
     356: new           #107                // class java/io/InterruptedIOException
     359: dup
     360: aload_2
     361: invokespecial #108                // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
     364: athrow
     365: aload_0
     366: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
     369: getfield      #29                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.missingChunksNum:I
     372: ifle          379
     375: aload_0
     376: invokevirtual #109                // Method decode:()V
     379: return
    Exception table:
       from    to  target type
         113   270   339   Class java/lang/InterruptedException
         273   336   339   Class java/lang/InterruptedException

  void finalizeDecodeInputs();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
       7: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      10: arraylength
      11: if_icmpge     102
      14: aload_0
      15: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      18: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      21: iload_1
      22: aaload
      23: astore_2
      24: aload_2
      25: ifnull        73
      28: aload_2
      29: getfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      32: iconst_1
      33: if_icmpne     73
      36: aload_2
      37: invokevirtual #110                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.useChunkBuffer:()Z
      40: ifeq          62
      43: aload_2
      44: invokevirtual #56                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.getChunkBuffer:()Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer;
      47: aload_0
      48: getfield      #111                // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      51: iload_1
      52: aaload
      53: invokevirtual #112                // Method org/apache/hadoop/io/erasurecode/ECChunk.getBuffer:()Ljava/nio/ByteBuffer;
      56: invokevirtual #113                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer.copyTo:(Ljava/nio/ByteBuffer;)V
      59: goto          96
      62: aload_2
      63: invokevirtual #52                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.getByteBuffer:()Ljava/nio/ByteBuffer;
      66: invokevirtual #114                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      69: pop
      70: goto          96
      73: aload_2
      74: ifnull        96
      77: aload_2
      78: getfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      81: bipush        15
      83: if_icmpne     96
      86: aload_0
      87: getfield      #111                // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      90: iload_1
      91: aaload
      92: iconst_1
      93: invokevirtual #115                // Method org/apache/hadoop/io/erasurecode/ECChunk.setAllZero:(Z)V
      96: iinc          1, 1
      99: goto          2
     102: return

  void decodeAndFillBuffer(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #116                // Method prepareErasedIndices:()[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iload_3
       9: anewarray     #117                // class org/apache/hadoop/io/erasurecode/ECChunk
      12: astore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload_3
      20: if_icmpge     53
      23: aload         4
      25: iload         5
      27: aload_0
      28: getfield      #111                // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      31: aload_2
      32: iload         5
      34: iaload
      35: aaload
      36: aastore
      37: aload_0
      38: getfield      #111                // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      41: aload_2
      42: iload         5
      44: iaload
      45: aconst_null
      46: aastore
      47: iinc          5, 1
      50: goto          17
      53: invokestatic  #118                // Method org/apache/hadoop/util/Time.monotonicNow:()J
      56: lstore        5
      58: aload_0
      59: getfield      #16                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
      62: aload_0
      63: getfield      #111                // Field decodeInputs:[Lorg/apache/hadoop/io/erasurecode/ECChunk;
      66: aload_2
      67: aload         4
      69: invokevirtual #119                // Method org/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder.decode:([Lorg/apache/hadoop/io/erasurecode/ECChunk;[I[Lorg/apache/hadoop/io/erasurecode/ECChunk;)V
      72: iload_1
      73: ifeq          143
      76: iconst_0
      77: istore        7
      79: iload         7
      81: aload_2
      82: arraylength
      83: if_icmpge     143
      86: aload_2
      87: iload         7
      89: iaload
      90: istore        8
      92: aload_0
      93: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      96: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      99: iload         8
     101: aaload
     102: astore        9
     104: aload         9
     106: getfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
     109: iconst_2
     110: if_icmpne     137
     113: aload         9
     115: invokevirtual #110                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.useChunkBuffer:()Z
     118: ifeq          137
     121: aload         9
     123: invokevirtual #56                 // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.getChunkBuffer:()Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer;
     126: aload         4
     128: iload         7
     130: aaload
     131: invokevirtual #112                // Method org/apache/hadoop/io/erasurecode/ECChunk.getBuffer:()Ljava/nio/ByteBuffer;
     134: invokevirtual #120                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$ChunkByteBuffer.copyFrom:(Ljava/nio/ByteBuffer;)V
     137: iinc          7, 1
     140: goto          79
     143: invokestatic  #118                // Method org/apache/hadoop/util/Time.monotonicNow:()J
     146: lstore        7
     148: aload_0
     149: getfield      #17                 // Field dfsStripedInputStream:Lorg/apache/hadoop/hdfs/DFSStripedInputStream;
     152: getfield      #121                // Field org/apache/hadoop/hdfs/DFSStripedInputStream.readStatistics:Lorg/apache/hadoop/hdfs/ReadStatistics;
     155: lload         7
     157: lload         5
     159: lsub
     160: invokevirtual #122                // Method org/apache/hadoop/hdfs/ReadStatistics.addErasureCodingDecodingTime:(J)V
     163: return

  int[] prepareErasedIndices();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parityBlkNum:S
       4: newarray       int
       6: astore_1
       7: iconst_0
       8: istore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: aload_0
      13: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      16: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      19: arraylength
      20: if_icmpge     64
      23: aload_0
      24: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      27: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      30: iload_3
      31: aaload
      32: ifnull        58
      35: aload_0
      36: getfield      #5                  // Field alignedStripe:Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe;
      39: getfield      #43                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$AlignedStripe.chunks:[Lorg/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk;
      42: iload_3
      43: aaload
      44: getfield      #45                 // Field org/apache/hadoop/hdfs/util/StripedBlockUtil$StripingChunk.state:I
      47: iconst_2
      48: if_icmpne     58
      51: aload_1
      52: iload_2
      53: iinc          2, 1
      56: iload_3
      57: iastore
      58: iinc          3, 1
      61: goto          11
      64: aload_1
      65: iload_2
      66: invokestatic  #123                // Method java/util/Arrays.copyOf:([II)[I
      69: astore_3
      70: aload_3
      71: areturn

  void clearFutures();
    Code:
       0: aload_0
       1: getfield      #4                  // Field futures:Ljava/util/Map;
       4: invokeinterface #124,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #125,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #126,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_1
      25: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #128                // class java/util/concurrent/Future
      33: astore_2
      34: aload_2
      35: iconst_0
      36: invokeinterface #129,  2          // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      41: pop
      42: goto          15
      45: aload_0
      46: getfield      #4                  // Field futures:Ljava/util/Map;
      49: invokeinterface #130,  1          // InterfaceMethod java/util/Map.clear:()V
      54: return

  boolean useDirectBuffer();
    Code:
       0: aload_0
       1: getfield      #16                 // Field decoder:Lorg/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder;
       4: invokevirtual #131                // Method org/apache/hadoop/io/erasurecode/rawcoder/RawErasureDecoder.preferDirectBuffer:()Z
       7: ireturn

  private org.apache.hadoop.hdfs.util.StripedBlockUtil$BlockReadStats lambda$readCells$0(org.apache.hadoop.hdfs.BlockReader, long, long, org.apache.hadoop.hdfs.ByteBufferStrategy[], org.apache.hadoop.hdfs.protocol.DatanodeInfo, org.apache.hadoop.hdfs.protocol.ExtendedBlock) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/io/IOException
       7: dup
       8: ldc           #132                // String The BlockReader is null. The BlockReader creation failed or the reader hit exception.
      10: invokespecial #41                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: lload_2
      15: lload         4
      17: lcmp
      18: ifgt          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokestatic  #100                // Method com/google/common/base/Preconditions.checkState:(Z)V
      29: lload_2
      30: lload         4
      32: lcmp
      33: ifge          66
      36: aload_1
      37: lload         4
      39: lload_2
      40: lsub
      41: invokeinterface #133,  3          // InterfaceMethod org/apache/hadoop/hdfs/BlockReader.skip:(J)J
      46: lstore        9
      48: lload         9
      50: lload         4
      52: lload_2
      53: lsub
      54: lcmp
      55: ifne          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokestatic  #100                // Method com/google/common/base/Preconditions.checkState:(Z)V
      66: iconst_0
      67: istore        9
      69: aload         6
      71: astore        10
      73: aload         10
      75: arraylength
      76: istore        11
      78: iconst_0
      79: istore        12
      81: iload         12
      83: iload         11
      85: if_icmpge     121
      88: aload         10
      90: iload         12
      92: aaload
      93: astore        13
      95: aload_0
      96: aload_1
      97: aload         7
      99: aload         13
     101: aload         8
     103: invokespecial #134                // Method readToBuffer:(Lorg/apache/hadoop/hdfs/BlockReader;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/hdfs/ByteBufferStrategy;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;)I
     106: istore        14
     108: iload         9
     110: iload         14
     112: iadd
     113: istore        9
     115: iinc          12, 1
     118: goto          81
     121: new           #135                // class org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats
     124: dup
     125: iload         9
     127: aload_1
     128: invokeinterface #136,  1          // InterfaceMethod org/apache/hadoop/hdfs/BlockReader.isShortCircuit:()Z
     133: aload_1
     134: invokeinterface #137,  1          // InterfaceMethod org/apache/hadoop/hdfs/BlockReader.getNetworkDistance:()I
     139: invokespecial #138                // Method org/apache/hadoop/hdfs/util/StripedBlockUtil$BlockReadStats."<init>":(IZI)V
     142: areturn
}
