Compiled from "BlockTokenIdentifier.java"
public class org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier extends org.apache.hadoop.security.token.TokenIdentifier {
  static final org.apache.hadoop.io.Text KIND_NAME;

  private long expiryDate;

  private int keyId;

  private java.lang.String userId;

  private java.lang.String blockPoolId;

  private long blockId;

  private final java.util.EnumSet<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode> modes;

  private org.apache.hadoop.fs.StorageType[] storageTypes;

  private java.lang.String[] storageIds;

  private boolean useProto;

  private byte[] handshakeMsg;

  private byte[] cache;

  public org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: lconst_0
       4: ldc           #1                  // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$AccessMode
       6: invokestatic  #2                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       9: aconst_null
      10: aconst_null
      11: iconst_0
      12: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;JLjava/util/EnumSet;[Lorg/apache/hadoop/fs/StorageType;[Ljava/lang/String;Z)V
      15: return

  public org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier(java.lang.String, java.lang.String, long, java.util.EnumSet<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode>, org.apache.hadoop.fs.StorageType[], java.lang.String[], boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/hadoop/security/token/TokenIdentifier."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #5                  // Field cache:[B
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field userId:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #7                  // Field blockPoolId:Ljava/lang/String;
      19: aload_0
      20: lload_3
      21: putfield      #8                  // Field blockId:J
      24: aload_0
      25: aload         5
      27: ifnonnull     38
      30: ldc           #1                  // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$AccessMode
      32: invokestatic  #2                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      35: goto          40
      38: aload         5
      40: putfield      #9                  // Field modes:Ljava/util/EnumSet;
      43: aload_0
      44: aload         6
      46: invokestatic  #10                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      49: getstatic     #11                 // Field org/apache/hadoop/fs/StorageType.EMPTY_ARRAY:[Lorg/apache/hadoop/fs/StorageType;
      52: invokevirtual #12                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #13                 // class "[Lorg/apache/hadoop/fs/StorageType;"
      58: putfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      61: aload_0
      62: aload         7
      64: invokestatic  #10                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      67: iconst_0
      68: anewarray     #15                 // class java/lang/String
      71: invokevirtual #12                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #16                 // class "[Ljava/lang/String;"
      77: putfield      #17                 // Field storageIds:[Ljava/lang/String;
      80: aload_0
      81: iload         8
      83: putfield      #18                 // Field useProto:Z
      86: aload_0
      87: iconst_0
      88: newarray       byte
      90: putfield      #19                 // Field handshakeMsg:[B
      93: return

  public org.apache.hadoop.io.Text getKind();
    Code:
       0: getstatic     #20                 // Field KIND_NAME:Lorg/apache/hadoop/io/Text;
       3: areturn

  public org.apache.hadoop.security.UserGroupInformation getUser();
    Code:
       0: aload_0
       1: getfield      #6                  // Field userId:Ljava/lang/String;
       4: ifnull        19
       7: ldc           #21                 // String
       9: aload_0
      10: getfield      #6                  // Field userId:Ljava/lang/String;
      13: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          57
      19: new           #23                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_0
      27: getfield      #7                  // Field blockPoolId:Ljava/lang/String;
      30: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #26                 // String :
      35: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #8                  // Field blockId:J
      42: invokestatic  #27                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      45: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: astore_1
      52: aload_1
      53: invokestatic  #29                 // Method org/apache/hadoop/security/UserGroupInformation.createRemoteUser:(Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
      56: areturn
      57: aload_0
      58: getfield      #6                  // Field userId:Ljava/lang/String;
      61: invokestatic  #29                 // Method org/apache/hadoop/security/UserGroupInformation.createRemoteUser:(Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
      64: areturn

  public long getExpiryDate();
    Code:
       0: aload_0
       1: getfield      #30                 // Field expiryDate:J
       4: lreturn

  public void setExpiryDate(long);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field cache:[B
       5: aload_0
       6: lload_1
       7: putfield      #30                 // Field expiryDate:J
      10: return

  public int getKeyId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field keyId:I
       4: ireturn

  public void setKeyId(int);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field cache:[B
       5: aload_0
       6: iload_1
       7: putfield      #31                 // Field keyId:I
      10: return

  public java.lang.String getUserId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field userId:Ljava/lang/String;
       4: areturn

  public java.lang.String getBlockPoolId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field blockPoolId:Ljava/lang/String;
       4: areturn

  public long getBlockId();
    Code:
       0: aload_0
       1: getfield      #8                  // Field blockId:J
       4: lreturn

  public java.util.EnumSet<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode> getAccessModes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field modes:Ljava/util/EnumSet;
       4: areturn

  public org.apache.hadoop.fs.StorageType[] getStorageTypes();
    Code:
       0: aload_0
       1: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
       4: areturn

  public java.lang.String[] getStorageIds();
    Code:
       0: aload_0
       1: getfield      #17                 // Field storageIds:[Ljava/lang/String;
       4: areturn

  public byte[] getHandshakeMsg();
    Code:
       0: aload_0
       1: getfield      #19                 // Field handshakeMsg:[B
       4: areturn

  public void setHandshakeMsg(byte[]);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field cache:[B
       5: aload_0
       6: aload_1
       7: putfield      #19                 // Field handshakeMsg:[B
      10: return

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // String block_token_identifier (expiryDate=
       9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #33                 // Method getExpiryDate:()J
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #35                 // String , keyId=
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #36                 // Method getKeyId:()I
      28: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #38                 // String , userId=
      33: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #39                 // Method getUserId:()Ljava/lang/String;
      40: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #40                 // String , blockPoolId=
      45: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #41                 // Method getBlockPoolId:()Ljava/lang/String;
      52: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #42                 // String , blockId=
      57: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #43                 // Method getBlockId:()J
      64: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      67: ldc           #44                 // String , access modes=
      69: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #45                 // Method getAccessModes:()Ljava/util/EnumSet;
      76: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #47                 // String , storageTypes=
      81: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #48                 // Method getStorageTypes:()[Lorg/apache/hadoop/fs/StorageType;
      88: invokestatic  #49                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      91: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #50                 // String , storageIds=
      96: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: invokevirtual #51                 // Method getStorageIds:()[Ljava/lang/String;
     103: invokestatic  #49                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     106: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #52                 // String )
     111: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: areturn

  static boolean isEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: aload_1
       5: ifnonnull     12
       8: iconst_1
       9: goto          21
      12: iconst_0
      13: goto          21
      16: aload_0
      17: aload_1
      18: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #54                 // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier
      11: ifeq          130
      14: aload_1
      15: checkcast     #54                 // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier
      18: astore_2
      19: aload_0
      20: getfield      #30                 // Field expiryDate:J
      23: aload_2
      24: getfield      #30                 // Field expiryDate:J
      27: lcmp
      28: ifne          128
      31: aload_0
      32: getfield      #31                 // Field keyId:I
      35: aload_2
      36: getfield      #31                 // Field keyId:I
      39: if_icmpne     128
      42: aload_0
      43: getfield      #6                  // Field userId:Ljava/lang/String;
      46: aload_2
      47: getfield      #6                  // Field userId:Ljava/lang/String;
      50: invokestatic  #55                 // Method isEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      53: ifeq          128
      56: aload_0
      57: getfield      #7                  // Field blockPoolId:Ljava/lang/String;
      60: aload_2
      61: getfield      #7                  // Field blockPoolId:Ljava/lang/String;
      64: invokestatic  #55                 // Method isEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      67: ifeq          128
      70: aload_0
      71: getfield      #8                  // Field blockId:J
      74: aload_2
      75: getfield      #8                  // Field blockId:J
      78: lcmp
      79: ifne          128
      82: aload_0
      83: getfield      #9                  // Field modes:Ljava/util/EnumSet;
      86: aload_2
      87: getfield      #9                  // Field modes:Ljava/util/EnumSet;
      90: invokestatic  #55                 // Method isEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifeq          128
      96: aload_0
      97: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
     100: aload_2
     101: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
     104: invokestatic  #56                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
     107: ifeq          128
     110: aload_0
     111: getfield      #17                 // Field storageIds:[Ljava/lang/String;
     114: aload_2
     115: getfield      #17                 // Field storageIds:[Ljava/lang/String;
     118: invokestatic  #56                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
     121: ifeq          128
     124: iconst_1
     125: goto          129
     128: iconst_0
     129: ireturn
     130: iconst_0
     131: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #30                 // Field expiryDate:J
       4: l2i
       5: aload_0
       6: getfield      #31                 // Field keyId:I
       9: ixor
      10: aload_0
      11: getfield      #8                  // Field blockId:J
      14: l2i
      15: ixor
      16: aload_0
      17: getfield      #9                  // Field modes:Ljava/util/EnumSet;
      20: invokevirtual #57                 // Method java/util/EnumSet.hashCode:()I
      23: ixor
      24: aload_0
      25: getfield      #6                  // Field userId:Ljava/lang/String;
      28: ifnonnull     35
      31: iconst_0
      32: goto          42
      35: aload_0
      36: getfield      #6                  // Field userId:Ljava/lang/String;
      39: invokevirtual #58                 // Method java/lang/String.hashCode:()I
      42: ixor
      43: aload_0
      44: getfield      #7                  // Field blockPoolId:Ljava/lang/String;
      47: ifnonnull     54
      50: iconst_0
      51: goto          61
      54: aload_0
      55: getfield      #7                  // Field blockPoolId:Ljava/lang/String;
      58: invokevirtual #58                 // Method java/lang/String.hashCode:()I
      61: ixor
      62: aload_0
      63: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      66: ifnonnull     73
      69: iconst_0
      70: goto          80
      73: aload_0
      74: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      77: invokestatic  #59                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      80: ixor
      81: aload_0
      82: getfield      #17                 // Field storageIds:[Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: getfield      #17                 // Field storageIds:[Ljava/lang/String;
      96: invokestatic  #59                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      99: ixor
     100: ireturn

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field cache:[B
       5: aload_1
       6: checkcast     #60                 // class java/io/DataInputStream
       9: astore_2
      10: aload_2
      11: invokevirtual #61                 // Method java/io/DataInputStream.markSupported:()Z
      14: ifne          27
      17: new           #62                 // class java/io/IOException
      20: dup
      21: ldc           #63                 // String Could not peek first byte.
      23: invokespecial #64                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: aload_2
      29: invokestatic  #65                 // Method org/apache/hadoop/io/IOUtils.readFullyToByteArray:(Ljava/io/DataInput;)[B
      32: putfield      #5                  // Field cache:[B
      35: aload_2
      36: invokevirtual #66                 // Method java/io/DataInputStream.reset:()V
      39: aload_2
      40: iconst_1
      41: invokevirtual #67                 // Method java/io/DataInputStream.mark:(I)V
      44: aload_2
      45: invokevirtual #68                 // Method java/io/DataInputStream.readByte:()B
      48: istore_3
      49: aload_2
      50: invokevirtual #66                 // Method java/io/DataInputStream.reset:()V
      53: iload_3
      54: ifgt          65
      57: aload_0
      58: aload_2
      59: invokevirtual #69                 // Method readFieldsLegacy:(Ljava/io/DataInput;)V
      62: goto          70
      65: aload_0
      66: aload_2
      67: invokevirtual #70                 // Method readFieldsProtobuf:(Ljava/io/DataInput;)V
      70: return

  void readFieldsLegacy(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method org/apache/hadoop/io/WritableUtils.readVLong:(Ljava/io/DataInput;)J
       5: putfield      #30                 // Field expiryDate:J
       8: aload_0
       9: aload_1
      10: invokestatic  #72                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      13: putfield      #31                 // Field keyId:I
      16: aload_0
      17: aload_1
      18: invokestatic  #73                 // Method org/apache/hadoop/io/WritableUtils.readString:(Ljava/io/DataInput;)Ljava/lang/String;
      21: putfield      #6                  // Field userId:Ljava/lang/String;
      24: aload_0
      25: aload_1
      26: invokestatic  #73                 // Method org/apache/hadoop/io/WritableUtils.readString:(Ljava/io/DataInput;)Ljava/lang/String;
      29: putfield      #7                  // Field blockPoolId:Ljava/lang/String;
      32: aload_0
      33: aload_1
      34: invokestatic  #71                 // Method org/apache/hadoop/io/WritableUtils.readVLong:(Ljava/io/DataInput;)J
      37: putfield      #8                  // Field blockId:J
      40: aload_1
      41: iconst_0
      42: ldc           #1                  // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$AccessMode
      44: invokevirtual #74                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
      47: checkcast     #75                 // class "[Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$AccessMode;"
      50: arraylength
      51: invokestatic  #76                 // Method org/apache/hadoop/io/WritableUtils.readVIntInRange:(Ljava/io/DataInput;II)I
      54: istore_2
      55: iconst_0
      56: istore_3
      57: iload_3
      58: iload_2
      59: if_icmpge     82
      62: aload_0
      63: getfield      #9                  // Field modes:Ljava/util/EnumSet;
      66: aload_1
      67: ldc           #1                  // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$AccessMode
      69: invokestatic  #77                 // Method org/apache/hadoop/io/WritableUtils.readEnum:(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
      72: invokevirtual #78                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      75: pop
      76: iinc          3, 1
      79: goto          57
      82: aload_1
      83: invokestatic  #72                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
      86: istore_2
      87: iload_2
      88: anewarray     #79                 // class org/apache/hadoop/fs/StorageType
      91: astore_3
      92: iconst_0
      93: istore        4
      95: iload         4
      97: iload_2
      98: if_icmpge     120
     101: aload_3
     102: iload         4
     104: aload_1
     105: ldc           #79                 // class org/apache/hadoop/fs/StorageType
     107: invokestatic  #77                 // Method org/apache/hadoop/io/WritableUtils.readEnum:(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
     110: checkcast     #79                 // class org/apache/hadoop/fs/StorageType
     113: aastore
     114: iinc          4, 1
     117: goto          95
     120: aload_0
     121: aload_3
     122: putfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
     125: aload_1
     126: invokestatic  #72                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     129: istore_2
     130: iload_2
     131: anewarray     #15                 // class java/lang/String
     134: astore        4
     136: iconst_0
     137: istore        5
     139: iload         5
     141: iload_2
     142: if_icmpge     160
     145: aload         4
     147: iload         5
     149: aload_1
     150: invokestatic  #73                 // Method org/apache/hadoop/io/WritableUtils.readString:(Ljava/io/DataInput;)Ljava/lang/String;
     153: aastore
     154: iinc          5, 1
     157: goto          139
     160: aload_0
     161: aload         4
     163: putfield      #17                 // Field storageIds:[Ljava/lang/String;
     166: aload_1
     167: invokestatic  #72                 // Method org/apache/hadoop/io/WritableUtils.readVInt:(Ljava/io/DataInput;)I
     170: istore        5
     172: iload         5
     174: ifeq          195
     177: aload_0
     178: iload         5
     180: newarray       byte
     182: putfield      #19                 // Field handshakeMsg:[B
     185: aload_1
     186: aload_0
     187: getfield      #19                 // Field handshakeMsg:[B
     190: invokeinterface #80,  2           // InterfaceMethod java/io/DataInput.readFully:([B)V
     195: goto          199
     198: astore_3
     199: aload_0
     200: iconst_0
     201: putfield      #18                 // Field useProto:Z
     204: return
    Exception table:
       from    to  target type
          82   195   198   Class java/io/EOFException

  void readFieldsProtobuf(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #60                 // class java/io/DataInputStream
       4: invokestatic  #82                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.parseFrom:(Ljava/io/InputStream;)Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto;
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #83                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getExpiryDate:()J
      13: putfield      #30                 // Field expiryDate:J
      16: aload_0
      17: aload_2
      18: invokevirtual #84                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getKeyId:()I
      21: putfield      #31                 // Field keyId:I
      24: aload_2
      25: invokevirtual #85                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.hasUserId:()Z
      28: ifeq          42
      31: aload_0
      32: aload_2
      33: invokevirtual #86                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getUserId:()Ljava/lang/String;
      36: putfield      #6                  // Field userId:Ljava/lang/String;
      39: goto          47
      42: aload_0
      43: aconst_null
      44: putfield      #6                  // Field userId:Ljava/lang/String;
      47: aload_2
      48: invokevirtual #87                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.hasBlockPoolId:()Z
      51: ifeq          65
      54: aload_0
      55: aload_2
      56: invokevirtual #88                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getBlockPoolId:()Ljava/lang/String;
      59: putfield      #7                  // Field blockPoolId:Ljava/lang/String;
      62: goto          70
      65: aload_0
      66: aconst_null
      67: putfield      #7                  // Field blockPoolId:Ljava/lang/String;
      70: aload_0
      71: aload_2
      72: invokevirtual #89                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getBlockId:()J
      75: putfield      #8                  // Field blockId:J
      78: iconst_0
      79: istore_3
      80: iload_3
      81: aload_2
      82: invokevirtual #90                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getModesCount:()I
      85: if_icmpge     114
      88: aload_2
      89: iload_3
      90: invokevirtual #91                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getModes:(I)Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$AccessModeProto;
      93: astore        4
      95: aload_0
      96: getfield      #9                  // Field modes:Ljava/util/EnumSet;
      99: aload         4
     101: invokestatic  #92                 // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.convert:(Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$AccessModeProto;)Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$AccessMode;
     104: invokevirtual #78                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
     107: pop
     108: iinc          3, 1
     111: goto          80
     114: aload_0
     115: aload_2
     116: invokevirtual #93                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getStorageTypesList:()Ljava/util/List;
     119: invokeinterface #94,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     124: invokedynamic #95,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     129: invokeinterface #96,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     134: invokedynamic #97,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
     139: invokeinterface #98,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     144: checkcast     #13                 // class "[Lorg/apache/hadoop/fs/StorageType;"
     147: putfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
     150: aload_0
     151: aload_2
     152: invokevirtual #99                 // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getStorageIdsList:()Ljava/util/List;
     155: invokeinterface #94,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     160: invokedynamic #100,  0            // InvokeDynamic #2:apply:()Ljava/util/function/IntFunction;
     165: invokeinterface #98,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     170: checkcast     #16                 // class "[Ljava/lang/String;"
     173: putfield      #17                 // Field storageIds:[Ljava/lang/String;
     176: aload_0
     177: iconst_1
     178: putfield      #18                 // Field useProto:Z
     181: aload_2
     182: invokevirtual #101                // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.hasHandshakeSecret:()Z
     185: ifeq          202
     188: aload_0
     189: aload_2
     190: invokevirtual #102                // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.getHandshakeSecret:()Lcom/google/protobuf/ByteString;
     193: invokevirtual #103                // Method com/google/protobuf/ByteString.toByteArray:()[B
     196: putfield      #19                 // Field handshakeMsg:[B
     199: goto          209
     202: aload_0
     203: iconst_0
     204: newarray       byte
     206: putfield      #19                 // Field handshakeMsg:[B
     209: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field useProto:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokevirtual #104                // Method writeProtobuf:(Ljava/io/DataOutput;)V
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokevirtual #105                // Method writeLegacy:(Ljava/io/DataOutput;)V
      20: return

  void writeLegacy(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #30                 // Field expiryDate:J
       5: invokestatic  #106                // Method org/apache/hadoop/io/WritableUtils.writeVLong:(Ljava/io/DataOutput;J)V
       8: aload_1
       9: aload_0
      10: getfield      #31                 // Field keyId:I
      13: invokestatic  #107                // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      16: aload_1
      17: aload_0
      18: getfield      #6                  // Field userId:Ljava/lang/String;
      21: invokestatic  #108                // Method org/apache/hadoop/io/WritableUtils.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)V
      24: aload_1
      25: aload_0
      26: getfield      #7                  // Field blockPoolId:Ljava/lang/String;
      29: invokestatic  #108                // Method org/apache/hadoop/io/WritableUtils.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)V
      32: aload_1
      33: aload_0
      34: getfield      #8                  // Field blockId:J
      37: invokestatic  #106                // Method org/apache/hadoop/io/WritableUtils.writeVLong:(Ljava/io/DataOutput;J)V
      40: aload_1
      41: aload_0
      42: getfield      #9                  // Field modes:Ljava/util/EnumSet;
      45: invokevirtual #109                // Method java/util/EnumSet.size:()I
      48: invokestatic  #107                // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
      51: aload_0
      52: getfield      #9                  // Field modes:Ljava/util/EnumSet;
      55: invokevirtual #110                // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
      58: astore_2
      59: aload_2
      60: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          86
      68: aload_2
      69: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #1                  // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$AccessMode
      77: astore_3
      78: aload_1
      79: aload_3
      80: invokestatic  #113                // Method org/apache/hadoop/io/WritableUtils.writeEnum:(Ljava/io/DataOutput;Ljava/lang/Enum;)V
      83: goto          59
      86: aload_0
      87: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      90: ifnull        137
      93: aload_1
      94: aload_0
      95: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
      98: arraylength
      99: invokestatic  #107                // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     102: aload_0
     103: getfield      #14                 // Field storageTypes:[Lorg/apache/hadoop/fs/StorageType;
     106: astore_2
     107: aload_2
     108: arraylength
     109: istore_3
     110: iconst_0
     111: istore        4
     113: iload         4
     115: iload_3
     116: if_icmpge     137
     119: aload_2
     120: iload         4
     122: aaload
     123: astore        5
     125: aload_1
     126: aload         5
     128: invokestatic  #113                // Method org/apache/hadoop/io/WritableUtils.writeEnum:(Ljava/io/DataOutput;Ljava/lang/Enum;)V
     131: iinc          4, 1
     134: goto          113
     137: aload_0
     138: getfield      #17                 // Field storageIds:[Ljava/lang/String;
     141: ifnull        188
     144: aload_1
     145: aload_0
     146: getfield      #17                 // Field storageIds:[Ljava/lang/String;
     149: arraylength
     150: invokestatic  #107                // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     153: aload_0
     154: getfield      #17                 // Field storageIds:[Ljava/lang/String;
     157: astore_2
     158: aload_2
     159: arraylength
     160: istore_3
     161: iconst_0
     162: istore        4
     164: iload         4
     166: iload_3
     167: if_icmpge     188
     170: aload_2
     171: iload         4
     173: aaload
     174: astore        5
     176: aload_1
     177: aload         5
     179: invokestatic  #108                // Method org/apache/hadoop/io/WritableUtils.writeString:(Ljava/io/DataOutput;Ljava/lang/String;)V
     182: iinc          4, 1
     185: goto          164
     188: aload_0
     189: getfield      #19                 // Field handshakeMsg:[B
     192: ifnull        222
     195: aload_0
     196: getfield      #19                 // Field handshakeMsg:[B
     199: arraylength
     200: ifle          222
     203: aload_1
     204: aload_0
     205: getfield      #19                 // Field handshakeMsg:[B
     208: arraylength
     209: invokestatic  #107                // Method org/apache/hadoop/io/WritableUtils.writeVInt:(Ljava/io/DataOutput;I)V
     212: aload_1
     213: aload_0
     214: getfield      #19                 // Field handshakeMsg:[B
     217: invokeinterface #114,  2          // InterfaceMethod java/io/DataOutput.write:([B)V
     222: return

  void writeProtobuf(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #115                // Method org/apache/hadoop/hdfs/protocolPB/PBHelperClient.convert:(Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier;)Lorg/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #116                // Method org/apache/hadoop/hdfs/protocol/proto/HdfsProtos$BlockTokenSecretProto.toByteArray:()[B
      10: invokeinterface #114,  2          // InterfaceMethod java/io/DataOutput.write:([B)V
      15: return

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:[B
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #117                // Method org/apache/hadoop/security/token/TokenIdentifier.getBytes:()[B
      12: putfield      #5                  // Field cache:[B
      15: aload_0
      16: getfield      #5                  // Field cache:[B
      19: areturn

  private static java.lang.String[] lambda$readFieldsProtobuf$1(int);
    Code:
       0: iload_0
       1: anewarray     #15                 // class java/lang/String
       4: areturn

  private static org.apache.hadoop.fs.StorageType[] lambda$readFieldsProtobuf$0(int);
    Code:
       0: iload_0
       1: anewarray     #79                 // class org/apache/hadoop/fs/StorageType
       4: areturn

  static {};
    Code:
       0: new           #118                // class org/apache/hadoop/io/Text
       3: dup
       4: ldc           #119                // String HDFS_BLOCK_TOKEN
       6: invokespecial #120                // Method org/apache/hadoop/io/Text."<init>":(Ljava/lang/String;)V
       9: putstatic     #20                 // Field KIND_NAME:Lorg/apache/hadoop/io/Text;
      12: return
}
