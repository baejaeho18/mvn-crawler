Compiled from "HdfsLocatedFileStatus.java"
public class org.apache.hadoop.hdfs.protocol.HdfsLocatedFileStatus extends org.apache.hadoop.fs.LocatedFileStatus implements org.apache.hadoop.hdfs.protocol.HdfsFileStatus {
  private static final long serialVersionUID;

  private byte[] uPath;

  private byte[] uSymlink;

  private final long fileId;

  private final org.apache.hadoop.fs.FileEncryptionInfo feInfo;

  private final org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy ecPolicy;

  private final int childrenNum;

  private final byte storagePolicy;

  private transient org.apache.hadoop.hdfs.protocol.LocatedBlocks hdfsloc;

  org.apache.hadoop.hdfs.protocol.HdfsLocatedFileStatus(long, boolean, int, long, long, long, org.apache.hadoop.fs.permission.FsPermission, java.util.EnumSet<org.apache.hadoop.hdfs.protocol.HdfsFileStatus$Flags>, java.lang.String, java.lang.String, byte[], byte[], long, int, org.apache.hadoop.fs.FileEncryptionInfo, byte, org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, org.apache.hadoop.hdfs.protocol.LocatedBlocks);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: lload         5
       7: lload         7
       9: lload         9
      11: iload_3
      12: aload         15
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: aload         11
      24: aload         12
      26: invokestatic  #1                  // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.convert:(ZZLorg/apache/hadoop/fs/permission/FsPermission;Ljava/util/Set;)Lorg/apache/hadoop/fs/permission/FsPermission;
      29: aload         13
      31: aload         14
      33: aconst_null
      34: aconst_null
      35: aload         12
      37: invokestatic  #2                  // InterfaceMethod org/apache/hadoop/hdfs/protocol/HdfsFileStatus.convert:(Ljava/util/Set;)Ljava/util/Set;
      40: aconst_null
      41: invokespecial #3                  // Method org/apache/hadoop/fs/LocatedFileStatus."<init>":(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/Set;[Lorg/apache/hadoop/fs/BlockLocation;)V
      44: aload_0
      45: aload         15
      47: putfield      #4                  // Field uSymlink:[B
      50: aload_0
      51: aload         16
      53: putfield      #5                  // Field uPath:[B
      56: aload_0
      57: lload         17
      59: putfield      #6                  // Field fileId:J
      62: aload_0
      63: iload         19
      65: putfield      #7                  // Field childrenNum:I
      68: aload_0
      69: aload         20
      71: putfield      #8                  // Field feInfo:Lorg/apache/hadoop/fs/FileEncryptionInfo;
      74: aload_0
      75: iload         21
      77: putfield      #9                  // Field storagePolicy:B
      80: aload_0
      81: aload         22
      83: putfield      #10                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
      86: aload_0
      87: aload         23
      89: putfield      #11                 // Field hdfsloc:Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
      92: return

  public void setOwner(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/apache/hadoop/fs/LocatedFileStatus.setOwner:(Ljava/lang/String;)V
       5: return

  public void setGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/apache/hadoop/fs/LocatedFileStatus.setOwner:(Ljava/lang/String;)V
       5: return

  public boolean isSymlink();
    Code:
       0: aload_0
       1: getfield      #4                  // Field uSymlink:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.hadoop.fs.Path getSymlink() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isSymlink:()Z
       4: ifeq          22
       7: new           #14                 // class org/apache/hadoop/fs/Path
      10: dup
      11: aload_0
      12: invokevirtual #15                 // Method getSymlinkInBytes:()[B
      15: invokestatic  #16                 // Method org/apache/hadoop/hdfs/DFSUtilClient.bytes2String:([B)Ljava/lang/String;
      18: invokespecial #17                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      21: areturn
      22: new           #18                 // class java/io/IOException
      25: dup
      26: new           #19                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #21                 // String Path
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #23                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      42: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #25                 // String  is not a symbolic link
      47: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      56: athrow

  public void setPermission(org.apache.hadoop.fs.permission.FsPermission);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method org/apache/hadoop/fs/LocatedFileStatus.setPermission:(Lorg/apache/hadoop/fs/permission/FsPermission;)V
       5: return

  public byte[] getLocalNameInBytes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uPath:[B
       4: areturn

  public void setSymlink(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       5: invokestatic  #30                 // Method org/apache/hadoop/hdfs/DFSUtilClient.string2Bytes:(Ljava/lang/String;)[B
       8: putfield      #4                  // Field uSymlink:[B
      11: return

  public byte[] getSymlinkInBytes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field uSymlink:[B
       4: areturn

  public long getFileId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field fileId:J
       4: lreturn

  public org.apache.hadoop.fs.FileEncryptionInfo getFileEncryptionInfo();
    Code:
       0: aload_0
       1: getfield      #8                  // Field feInfo:Lorg/apache/hadoop/fs/FileEncryptionInfo;
       4: areturn

  public org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy getErasureCodingPolicy();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ecPolicy:Lorg/apache/hadoop/hdfs/protocol/ErasureCodingPolicy;
       4: areturn

  public int getChildrenNum();
    Code:
       0: aload_0
       1: getfield      #7                  // Field childrenNum:I
       4: ireturn

  public byte getStoragePolicy();
    Code:
       0: aload_0
       1: getfield      #9                  // Field storagePolicy:B
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method org/apache/hadoop/fs/LocatedFileStatus.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method org/apache/hadoop/fs/LocatedFileStatus.hashCode:()I
       4: ireturn

  public org.apache.hadoop.hdfs.protocol.LocatedBlocks getLocatedBlocks();
    Code:
       0: aload_0
       1: getfield      #11                 // Field hdfsloc:Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
       4: areturn

  public org.apache.hadoop.fs.LocatedFileStatus makeQualifiedLocated(java.net.URI, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #33                 // Method makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
       6: pop
       7: aload_0
       8: aload_0
       9: invokevirtual #34                 // Method getLocatedBlocks:()Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
      12: invokestatic  #35                 // Method org/apache/hadoop/hdfs/DFSUtilClient.locatedBlocks2Locations:(Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;)[Lorg/apache/hadoop/fs/BlockLocation;
      15: invokevirtual #36                 // Method setBlockLocations:([Lorg/apache/hadoop/fs/BlockLocation;)V
      18: aload_0
      19: areturn
}
