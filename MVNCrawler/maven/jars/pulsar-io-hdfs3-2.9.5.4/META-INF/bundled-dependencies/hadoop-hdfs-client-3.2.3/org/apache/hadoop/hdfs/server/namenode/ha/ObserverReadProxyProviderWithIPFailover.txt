Compiled from "ObserverReadProxyProviderWithIPFailover.java"
public class org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProviderWithIPFailover<T extends org.apache.hadoop.hdfs.protocol.ClientProtocol> extends org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProvider<T> {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String IPFAILOVER_CONFIG_PREFIX;

  public org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProviderWithIPFailover(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, org.apache.hadoop.hdfs.server.namenode.ha.HAProxyFactory<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: new           #2                  // class org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider
       9: dup
      10: aload_1
      11: aload_1
      12: aload_2
      13: invokevirtual #3                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: invokestatic  #4                  // Method getFailoverVirtualIP:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/net/URI;
      19: aload_3
      20: aload         4
      22: invokespecial #5                  // Method org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider."<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;)V
      25: invokespecial #6                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;)V
      28: return

  public boolean useLogicalURI();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.hadoop.hdfs.server.namenode.ha.ObserverReadProxyProviderWithIPFailover(org.apache.hadoop.conf.Configuration, java.net.URI, java.lang.Class<T>, org.apache.hadoop.hdfs.server.namenode.ha.HAProxyFactory<T>, org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #7                  // Method org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider."<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Ljava/lang/Class;Lorg/apache/hadoop/hdfs/server/namenode/ha/HAProxyFactory;Lorg/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider;)V
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokespecial #8                  // Method cloneDelegationTokenForVirtualIP:(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)V
      17: return

  private void cloneDelegationTokenForVirtualIP(org.apache.hadoop.conf.Configuration, java.net.URI);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #3                  // Method java/net/URI.getHost:()Ljava/lang/String;
       5: invokestatic  #4                  // Method getFailoverVirtualIP:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/net/URI;
       8: astore_3
       9: new           #9                  // class java/net/InetSocketAddress
      12: dup
      13: aload_3
      14: invokevirtual #3                  // Method java/net/URI.getHost:()Ljava/lang/String;
      17: aload_3
      18: invokevirtual #10                 // Method java/net/URI.getPort:()I
      21: invokespecial #11                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      24: astore        4
      26: aload_0
      27: getfield      #12                 // Field ugi:Lorg/apache/hadoop/security/UserGroupInformation;
      30: aload_2
      31: aload         4
      33: invokestatic  #13                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      36: invokestatic  #14                 // Method org/apache/hadoop/hdfs/HAUtilClient.cloneDelegationTokenForLogicalUri:(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/net/URI;Ljava/util/Collection;)V
      39: return

  private static java.net.URI getFailoverVirtualIP(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String dfs.client.failover.ipfailover.virtual-address.
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: astore_2
      20: aload_0
      21: aload_2
      22: invokevirtual #21                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      25: astore_3
      26: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #23                 // String Name service ID {} will use virtual IP {} for failover
      31: aload_1
      32: aload_3
      33: invokeinterface #24,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload_3
      39: ifnonnull     74
      42: new           #25                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #15                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #26                 // String Virtual IP for failover not found,misconfigured
      55: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_2
      59: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #27                 // String ?
      64: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_3
      75: invokestatic  #29                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      78: areturn

  static {};
    Code:
       0: ldc           #17                 // class org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProviderWithIPFailover
       2: invokestatic  #30                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
