Compiled from "SaslDataTransferClient.java"
public class org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient {
  private static final org.slf4j.Logger LOG;

  private final org.apache.hadoop.conf.Configuration conf;

  private final java.util.concurrent.atomic.AtomicBoolean fallbackToSimpleAuth;

  private final org.apache.hadoop.security.SaslPropertiesResolver saslPropsResolver;

  private final org.apache.hadoop.hdfs.protocol.datatransfer.TrustedChannelResolver trustedChannelResolver;

  private java.lang.String targetQOP;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient(org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.SaslPropertiesResolver, org.apache.hadoop.hdfs.protocol.datatransfer.TrustedChannelResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/SaslPropertiesResolver;Lorg/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver;Ljava/util/concurrent/atomic/AtomicBoolean;)V
       8: return

  public org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient(org.apache.hadoop.conf.Configuration, org.apache.hadoop.security.SaslPropertiesResolver, org.apache.hadoop.hdfs.protocol.datatransfer.TrustedChannelResolver, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       9: aload_0
      10: aload         4
      12: putfield      #6                  // Field fallbackToSimpleAuth:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: aload_2
      17: putfield      #7                  // Field saslPropsResolver:Lorg/apache/hadoop/security/SaslPropertiesResolver;
      20: aload_0
      21: aload_3
      22: putfield      #8                  // Field trustedChannelResolver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver;
      25: return

  public org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair newSocketSend(java.net.Socket, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeID) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field trustedChannelResolver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver;
       4: invokevirtual #9                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver.isTrusted:()Z
       7: ifne          20
      10: aload         4
      12: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataEncryptionKeyFactory.newDataEncryptionKey:()Lorg/apache/hadoop/hdfs/security/token/block/DataEncryptionKey;
      17: goto          21
      20: aconst_null
      21: astore        7
      23: aload_0
      24: aload_1
      25: invokevirtual #11                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
      28: aload_2
      29: aload_3
      30: aload         7
      32: aload         5
      34: aload         6
      36: aconst_null
      37: invokespecial #12                 // Method send:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/security/token/block/DataEncryptionKey;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljavax/crypto/SecretKey;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      40: astore        8
      42: aload         8
      44: ifnull        52
      47: aload         8
      49: goto          61
      52: new           #13                 // class org/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair
      55: dup
      56: aload_3
      57: aload_2
      58: invokespecial #14                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair."<init>":(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      61: areturn

  public org.apache.hadoop.hdfs.net.Peer peerSend(org.apache.hadoop.hdfs.net.Peer, org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeID) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.getPeerAddress:(Lorg/apache/hadoop/hdfs/net/Peer;)Ljava/net/InetAddress;
       5: aload_1
       6: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getOutputStream:()Ljava/io/OutputStream;
      11: aload_1
      12: invokeinterface #17,  1           // InterfaceMethod org/apache/hadoop/hdfs/net/Peer.getInputStream:()Ljava/io/InputStream;
      17: aload_2
      18: aload_3
      19: aload         4
      21: invokespecial #18                 // Method checkTrustAndSend:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataEncryptionKeyFactory;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      24: astore        5
      26: aload         5
      28: ifnull        44
      31: new           #19                 // class org/apache/hadoop/hdfs/net/EncryptedPeer
      34: dup
      35: aload_1
      36: aload         5
      38: invokespecial #20                 // Method org/apache/hadoop/hdfs/net/EncryptedPeer."<init>":(Lorg/apache/hadoop/hdfs/net/Peer;Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;)V
      41: goto          45
      44: aload_1
      45: areturn

  public org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair socketSend(java.net.Socket, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeID) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aconst_null
      11: invokevirtual #21                 // Method socketSend:(Ljava/net/Socket;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataEncryptionKeyFactory;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljavax/crypto/SecretKey;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      14: areturn

  public org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair socketSend(java.net.Socket, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeID, javax.crypto.SecretKey) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokespecial #22                 // Method checkTrustAndSend:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataEncryptionKeyFactory;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljavax/crypto/SecretKey;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      18: astore        8
      20: aload         8
      22: ifnull        30
      25: aload         8
      27: goto          39
      30: new           #13                 // class org/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair
      33: dup
      34: aload_3
      35: aload_2
      36: invokespecial #14                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair."<init>":(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      39: areturn

  private org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair checkTrustAndSend(java.net.InetAddress, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeID) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aconst_null
      11: invokespecial #22                 // Method checkTrustAndSend:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataEncryptionKeyFactory;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljavax/crypto/SecretKey;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      14: areturn

  private org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair checkTrustAndSend(java.net.InetAddress, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeID, javax.crypto.SecretKey) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field trustedChannelResolver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver;
       4: invokevirtual #9                  // Method org/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver.isTrusted:()Z
       7: istore        8
       9: aload_0
      10: getfield      #8                  // Field trustedChannelResolver:Lorg/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver;
      13: aload_1
      14: invokevirtual #23                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver.isTrusted:(Ljava/net/InetAddress;)Z
      17: istore        9
      19: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #25                 // String SASL encryption trust check: localHostTrusted = {}, remoteHostTrusted = {}
      24: iload         8
      26: invokestatic  #26                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: iload         9
      31: invokestatic  #26                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      39: iload         8
      41: ifeq          49
      44: iload         9
      46: ifne          74
      49: aload         4
      51: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataEncryptionKeyFactory.newDataEncryptionKey:()Lorg/apache/hadoop/hdfs/security/token/block/DataEncryptionKey;
      56: astore        10
      58: aload_0
      59: aload_1
      60: aload_2
      61: aload_3
      62: aload         10
      64: aload         5
      66: aload         6
      68: aload         7
      70: invokespecial #12                 // Method send:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/security/token/block/DataEncryptionKey;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljavax/crypto/SecretKey;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      73: areturn
      74: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      77: ldc           #28                 // String SASL client skipping handshake on trusted connection for addr = {}, datanodeId = {}
      79: aload_1
      80: aload         6
      82: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      87: aconst_null
      88: areturn

  private org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair send(java.net.InetAddress, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, org.apache.hadoop.hdfs.protocol.DatanodeID, javax.crypto.SecretKey) throws java.io.IOException;
    Code:
       0: aload         4
       2: ifnull        32
       5: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #29                 // String SASL client doing encrypted handshake for addr = {}, datanodeId = {}
      10: aload_1
      11: aload         6
      13: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: aload         4
      24: aload         5
      26: aload         7
      28: invokespecial #30                 // Method getEncryptedStreams:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hdfs/security/token/block/DataEncryptionKey;Lorg/apache/hadoop/security/token/Token;Ljavax/crypto/SecretKey;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
      31: areturn
      32: invokestatic  #31                 // Method org/apache/hadoop/security/UserGroupInformation.isSecurityEnabled:()Z
      35: ifne          53
      38: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      41: ldc           #32                 // String SASL client skipping handshake in unsecured configuration for addr = {}, datanodeId = {}
      43: aload_1
      44: aload         6
      46: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      51: aconst_null
      52: areturn
      53: aload         6
      55: invokevirtual #33                 // Method org/apache/hadoop/hdfs/protocol/DatanodeID.getXferPort:()I
      58: invokestatic  #34                 // Method org/apache/hadoop/security/SecurityUtil.isPrivilegedPort:(I)Z
      61: ifeq          79
      64: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      67: ldc           #35                 // String SASL client skipping handshake in secured configuration with privileged port for addr = {}, datanodeId = {}
      69: aload_1
      70: aload         6
      72: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      77: aconst_null
      78: areturn
      79: aload_0
      80: getfield      #6                  // Field fallbackToSimpleAuth:Ljava/util/concurrent/atomic/AtomicBoolean;
      83: ifnull        111
      86: aload_0
      87: getfield      #6                  // Field fallbackToSimpleAuth:Ljava/util/concurrent/atomic/AtomicBoolean;
      90: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      93: ifeq          111
      96: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      99: ldc           #37                 // String SASL client skipping handshake in secured configuration with unsecured cluster for addr = {}, datanodeId = {}
     101: aload_1
     102: aload         6
     104: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     109: aconst_null
     110: areturn
     111: aload_0
     112: getfield      #7                  // Field saslPropsResolver:Lorg/apache/hadoop/security/SaslPropertiesResolver;
     115: ifnull        143
     118: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     121: ldc           #38                 // String SASL client doing general handshake for addr = {}, datanodeId = {}
     123: aload_1
     124: aload         6
     126: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     131: aload_0
     132: aload_1
     133: aload_2
     134: aload_3
     135: aload         5
     137: aload         7
     139: invokespecial #39                 // Method getSaslStreams:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/security/token/Token;Ljavax/crypto/SecretKey;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
     142: areturn
     143: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     146: ldc           #40                 // String SASL client skipping handshake in secured configuration with no SASL protection configured for addr = {}, datanodeId = {}
     148: aload_1
     149: aload         6
     151: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     156: aconst_null
     157: areturn

  private org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair getEncryptedStreams(java.net.InetAddress, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, javax.crypto.SecretKey) throws java.io.IOException;
    Code:
       0: aload         4
       2: getfield      #41                 // Field org/apache/hadoop/hdfs/security/token/block/DataEncryptionKey.encryptionAlgorithm:Ljava/lang/String;
       5: invokestatic  #42                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.createSaslPropertiesForEncryption:(Ljava/lang/String;)Ljava/util/Map;
       8: astore        7
      10: aload         6
      12: ifnull        63
      15: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      18: new           #43                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #45                 // String DataNode overwriting downstream QOP
      27: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload         7
      32: ldc           #48                 // String javax.security.sasl.qop
      34: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #50                 // class java/lang/String
      42: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      53: aload_0
      54: aload         5
      56: aload         6
      58: aload         7
      60: invokespecial #53                 // Method updateToken:(Lorg/apache/hadoop/security/token/Token;Ljavax/crypto/SecretKey;Ljava/util/Map;)V
      63: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      66: ldc           #54                 // String Client using encryption algorithm {}
      68: aload         4
      70: getfield      #41                 // Field org/apache/hadoop/hdfs/security/token/block/DataEncryptionKey.encryptionAlgorithm:Ljava/lang/String;
      73: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      78: aload         4
      80: invokestatic  #56                 // Method getUserNameFromEncryptionKey:(Lorg/apache/hadoop/hdfs/security/token/block/DataEncryptionKey;)Ljava/lang/String;
      83: astore        8
      85: aload         4
      87: getfield      #57                 // Field org/apache/hadoop/hdfs/security/token/block/DataEncryptionKey.encryptionKey:[B
      90: invokestatic  #58                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.encryptionKeyToPassword:([B)[C
      93: astore        9
      95: new           #59                 // class org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient$SaslClientCallbackHandler
      98: dup
      99: aload         8
     101: aload         9
     103: invokespecial #60                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient$SaslClientCallbackHandler."<init>":(Ljava/lang/String;[C)V
     106: astore        10
     108: aload_0
     109: aload_1
     110: aload_2
     111: aload_3
     112: aload         8
     114: aload         7
     116: aload         10
     118: aload         5
     120: invokespecial #61                 // Method doSaslHandshake:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;Lorg/apache/hadoop/security/token/Token;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
     123: areturn

  private static java.lang.String getUserNameFromEncryptionKey(org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey);
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #62                 // Field org/apache/hadoop/hdfs/security/token/block/DataEncryptionKey.keyId:I
      11: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      14: ldc           #64                 // String
      16: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #65                 // Field org/apache/hadoop/hdfs/security/token/block/DataEncryptionKey.blockPoolId:Ljava/lang/String;
      23: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #64                 // String
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: new           #50                 // class java/lang/String
      34: dup
      35: aload_0
      36: getfield      #66                 // Field org/apache/hadoop/hdfs/security/token/block/DataEncryptionKey.nonce:[B
      39: iconst_0
      40: invokestatic  #67                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([BZ)[B
      43: getstatic     #68                 // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      46: invokespecial #69                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      49: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn

  public java.lang.String getTargetQOP();
    Code:
       0: aload_0
       1: getfield      #70                 // Field targetQOP:Ljava/lang/String;
       4: areturn

  private org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair getSaslStreams(java.net.InetAddress, java.io.OutputStream, java.io.InputStream, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, javax.crypto.SecretKey) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field saslPropsResolver:Lorg/apache/hadoop/security/SaslPropertiesResolver;
       4: aload_1
       5: invokevirtual #71                 // Method org/apache/hadoop/security/SaslPropertiesResolver.getClientProperties:(Ljava/net/InetAddress;)Ljava/util/Map;
       8: astore        6
      10: aload         5
      12: ifnull        91
      15: aload_0
      16: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      19: ldc           #72                 // String dfs.encrypt.data.overwrite.downstream.new.qop
      21: invokevirtual #73                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      24: astore        7
      26: aload         7
      28: ifnull        43
      31: aload         6
      33: ldc           #48                 // String javax.security.sasl.qop
      35: aload         7
      37: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      46: new           #43                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #75                 // String DataNode overwriting downstream QOP
      55: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload         6
      60: ldc           #48                 // String javax.security.sasl.qop
      62: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #50                 // class java/lang/String
      70: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      81: aload_0
      82: aload         4
      84: aload         5
      86: aload         6
      88: invokespecial #53                 // Method updateToken:(Lorg/apache/hadoop/security/token/Token;Ljavax/crypto/SecretKey;Ljava/util/Map;)V
      91: aload_0
      92: aload         6
      94: ldc           #48                 // String javax.security.sasl.qop
      96: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: checkcast     #50                 // class java/lang/String
     104: putfield      #70                 // Field targetQOP:Ljava/lang/String;
     107: aload         4
     109: invokestatic  #76                 // Method buildUserName:(Lorg/apache/hadoop/security/token/Token;)Ljava/lang/String;
     112: astore        7
     114: aload_0
     115: aload         4
     117: invokespecial #77                 // Method buildClientPassword:(Lorg/apache/hadoop/security/token/Token;)[C
     120: astore        8
     122: new           #59                 // class org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient$SaslClientCallbackHandler
     125: dup
     126: aload         7
     128: aload         8
     130: invokespecial #60                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient$SaslClientCallbackHandler."<init>":(Ljava/lang/String;[C)V
     133: astore        9
     135: aload_0
     136: aload_1
     137: aload_2
     138: aload_3
     139: aload         7
     141: aload         6
     143: aload         9
     145: aload         4
     147: invokespecial #61                 // Method doSaslHandshake:(Ljava/net/InetAddress;Ljava/io/OutputStream;Ljava/io/InputStream;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;Lorg/apache/hadoop/security/token/Token;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
     150: areturn

  private void updateToken(org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>, javax.crypto.SecretKey, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_3
       1: ldc           #48                 // String javax.security.sasl.qop
       3: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #50                 // class java/lang/String
      11: getstatic     #68                 // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      14: invokevirtual #78                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      17: astore        4
      19: aload_1
      20: invokevirtual #79                 // Method org/apache/hadoop/security/token/Token.decodeIdentifier:()Lorg/apache/hadoop/security/token/TokenIdentifier;
      23: checkcast     #80                 // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier
      26: astore        5
      28: aload         5
      30: aload         4
      32: invokevirtual #81                 // Method org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.setHandshakeMsg:([B)V
      35: aload         5
      37: invokevirtual #82                 // Method org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.getBytes:()[B
      40: astore        6
      42: aload_1
      43: aload         6
      45: aload_2
      46: invokestatic  #83                 // Method org/apache/hadoop/security/token/SecretManager.createPassword:([BLjavax/crypto/SecretKey;)[B
      49: invokevirtual #84                 // Method org/apache/hadoop/security/token/Token.setPassword:([B)V
      52: aload_1
      53: aload         6
      55: invokevirtual #85                 // Method org/apache/hadoop/security/token/Token.setID:([B)V
      58: return

  private static java.lang.String buildUserName(org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>);
    Code:
       0: new           #50                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokevirtual #86                 // Method org/apache/hadoop/security/token/Token.getIdentifier:()[B
       8: iconst_0
       9: invokestatic  #67                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([BZ)[B
      12: getstatic     #68                 // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      15: invokespecial #69                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      18: areturn

  private char[] buildClientPassword(org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>);
    Code:
       0: new           #50                 // class java/lang/String
       3: dup
       4: aload_1
       5: invokevirtual #87                 // Method org/apache/hadoop/security/token/Token.getPassword:()[B
       8: iconst_0
       9: invokestatic  #67                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([BZ)[B
      12: getstatic     #68                 // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      15: invokespecial #69                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      18: invokevirtual #88                 // Method java/lang/String.toCharArray:()[C
      21: areturn

  private org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair doSaslHandshake(java.net.InetAddress, java.io.OutputStream, java.io.InputStream, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.callback.CallbackHandler, org.apache.hadoop.security.token.Token<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier>) throws java.io.IOException;
    Code:
       0: new           #89                 // class java/io/DataOutputStream
       3: dup
       4: aload_2
       5: invokespecial #90                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
       8: astore        8
      10: new           #91                 // class java/io/DataInputStream
      13: dup
      14: aload_3
      15: invokespecial #92                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      18: astore        9
      20: aload         4
      22: aload         5
      24: aload         6
      26: invokestatic  #93                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant.createClientSaslParticipant:(Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant;
      29: astore        10
      31: aload         8
      33: ldc           #94                 // int -559038737
      35: invokevirtual #95                 // Method java/io/DataOutputStream.writeInt:(I)V
      38: aload         8
      40: invokevirtual #96                 // Method java/io/DataOutputStream.flush:()V
      43: aload         7
      45: invokevirtual #79                 // Method org/apache/hadoop/security/token/Token.decodeIdentifier:()Lorg/apache/hadoop/security/token/TokenIdentifier;
      48: checkcast     #80                 // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier
      51: astore        11
      53: aload         11
      55: ifnull        168
      58: aload         7
      60: invokevirtual #79                 // Method org/apache/hadoop/security/token/Token.decodeIdentifier:()Lorg/apache/hadoop/security/token/TokenIdentifier;
      63: checkcast     #80                 // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier
      66: invokevirtual #97                 // Method org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.getHandshakeMsg:()[B
      69: astore        12
      71: aload         12
      73: ifnull        82
      76: aload         12
      78: arraylength
      79: ifne          103
      82: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      85: ldc           #98                 // String Handshake secret is null, sending without handshake secret.
      87: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      92: aload         8
      94: iconst_0
      95: newarray       byte
      97: invokestatic  #99                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.sendSaslMessage:(Ljava/io/OutputStream;[B)V
     100: goto          165
     103: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     106: ldc           #100                // String Sending handshake secret.
     108: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     113: new           #80                 // class org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier
     116: dup
     117: invokespecial #101                // Method org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier."<init>":()V
     120: astore        13
     122: aload         13
     124: new           #91                 // class java/io/DataInputStream
     127: dup
     128: new           #102                // class java/io/ByteArrayInputStream
     131: dup
     132: aload         7
     134: invokevirtual #86                 // Method org/apache/hadoop/security/token/Token.getIdentifier:()[B
     137: invokespecial #103                // Method java/io/ByteArrayInputStream."<init>":([B)V
     140: invokespecial #92                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     143: invokevirtual #104                // Method org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.readFields:(Ljava/io/DataInput;)V
     146: aload         13
     148: invokevirtual #105                // Method org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.getBlockPoolId:()Ljava/lang/String;
     151: astore        14
     153: aload         8
     155: iconst_0
     156: newarray       byte
     158: aload         12
     160: aload         14
     162: invokestatic  #106                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.sendSaslMessageHandshakeSecret:(Ljava/io/OutputStream;[B[BLjava/lang/String;)V
     165: goto          186
     168: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     171: ldc           #107                // String Block token id is null, sending without handshake secret.
     173: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     178: aload         8
     180: iconst_0
     181: newarray       byte
     183: invokestatic  #99                 // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.sendSaslMessage:(Ljava/io/OutputStream;[B)V
     186: aload         9
     188: invokestatic  #108                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.readSaslMessage:(Ljava/io/InputStream;)[B
     191: astore        12
     193: aload         10
     195: aload         12
     197: invokevirtual #109                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant.evaluateChallengeOrResponse:([B)[B
     200: astore        13
     202: aconst_null
     203: astore        14
     205: aload_0
     206: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     209: ldc           #110                // String dfs.encrypt.data.transfer.cipher.suites
     211: invokevirtual #73                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
     214: astore        15
     216: aload         5
     218: invokestatic  #111                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.requestedQopContainsPrivacy:(Ljava/util/Map;)Z
     221: ifeq          306
     224: aload         15
     226: ifnull        306
     229: aload         15
     231: invokevirtual #112                // Method java/lang/String.isEmpty:()Z
     234: ifne          306
     237: aload         15
     239: getstatic     #113                // Field org/apache/hadoop/crypto/CipherSuite.AES_CTR_NOPADDING:Lorg/apache/hadoop/crypto/CipherSuite;
     242: invokevirtual #114                // Method org/apache/hadoop/crypto/CipherSuite.getName:()Ljava/lang/String;
     245: invokevirtual #115                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     248: ifne          278
     251: new           #116                // class java/io/IOException
     254: dup
     255: ldc           #117                // String Invalid cipher suite, %s=%s
     257: iconst_2
     258: anewarray     #118                // class java/lang/Object
     261: dup
     262: iconst_0
     263: ldc           #110                // String dfs.encrypt.data.transfer.cipher.suites
     265: aastore
     266: dup
     267: iconst_1
     268: aload         15
     270: aastore
     271: invokestatic  #119                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     274: invokespecial #120                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     277: athrow
     278: new           #121                // class org/apache/hadoop/crypto/CipherOption
     281: dup
     282: getstatic     #113                // Field org/apache/hadoop/crypto/CipherSuite.AES_CTR_NOPADDING:Lorg/apache/hadoop/crypto/CipherSuite;
     285: invokespecial #122                // Method org/apache/hadoop/crypto/CipherOption."<init>":(Lorg/apache/hadoop/crypto/CipherSuite;)V
     288: astore        16
     290: iconst_1
     291: invokestatic  #123                // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
     294: astore        14
     296: aload         14
     298: aload         16
     300: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     305: pop
     306: aload         8
     308: aload         13
     310: aload         14
     312: invokestatic  #125                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.sendSaslMessageAndNegotiationCipherOptions:(Ljava/io/OutputStream;[BLjava/util/List;)V
     315: aload         9
     317: invokestatic  #126                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.readSaslMessageAndNegotiatedCipherOption:(Ljava/io/InputStream;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslResponseWithNegotiatedCipherOption;
     320: astore        16
     322: aload         10
     324: aload         16
     326: getfield      #127                // Field org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslResponseWithNegotiatedCipherOption.payload:[B
     329: invokevirtual #109                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant.evaluateChallengeOrResponse:([B)[B
     332: astore        13
     334: getstatic     #128                // Field $assertionsDisabled:Z
     337: ifne          353
     340: aload         13
     342: ifnull        353
     345: new           #129                // class java/lang/AssertionError
     348: dup
     349: invokespecial #130                // Method java/lang/AssertionError."<init>":()V
     352: athrow
     353: aload         10
     355: aload         5
     357: invokestatic  #131                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.checkSaslComplete:(Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant;Ljava/util/Map;)V
     360: aconst_null
     361: astore        17
     363: aload         10
     365: invokevirtual #132                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant.isNegotiatedQopPrivacy:()Z
     368: ifeq          453
     371: aload         16
     373: getfield      #133                // Field org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslResponseWithNegotiatedCipherOption.cipherOption:Lorg/apache/hadoop/crypto/CipherOption;
     376: aload         10
     378: invokestatic  #134                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.unwrap:(Lorg/apache/hadoop/crypto/CipherOption;Lorg/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant;)Lorg/apache/hadoop/crypto/CipherOption;
     381: astore        17
     383: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     386: invokeinterface #135,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     391: ifeq          453
     394: aload         17
     396: ifnonnull     431
     399: aload         15
     401: ifnull        453
     404: aload         15
     406: invokevirtual #112                // Method java/lang/String.isEmpty:()Z
     409: ifne          453
     412: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     415: ldc           #136                // String Client accepts cipher suites {}, but server {} does not accept any of them
     417: aload         15
     419: aload_1
     420: invokevirtual #137                // Method java/net/InetAddress.toString:()Ljava/lang/String;
     423: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     428: goto          453
     431: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
     434: ldc           #138                // String Client using cipher suite {} with server {}
     436: aload         17
     438: invokevirtual #139                // Method org/apache/hadoop/crypto/CipherOption.getCipherSuite:()Lorg/apache/hadoop/crypto/CipherSuite;
     441: invokevirtual #114                // Method org/apache/hadoop/crypto/CipherSuite.getName:()Ljava/lang/String;
     444: aload_1
     445: invokevirtual #137                // Method java/net/InetAddress.toString:()Ljava/lang/String;
     448: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     453: aload         17
     455: ifnull        473
     458: aload_0
     459: getfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     462: aload         17
     464: aload_2
     465: aload_3
     466: iconst_0
     467: invokestatic  #140                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.createStreamPair:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/crypto/CipherOption;Ljava/io/OutputStream;Ljava/io/InputStream;Z)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
     470: goto          482
     473: aload         10
     475: aload         8
     477: aload         9
     479: invokevirtual #141                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslParticipant.createStreamPair:(Ljava/io/DataOutputStream;Ljava/io/DataInputStream;)Lorg/apache/hadoop/hdfs/protocol/datatransfer/IOStreamPair;
     482: areturn
     483: astore        11
     485: aload         8
     487: aload         11
     489: invokevirtual #142                // Method java/io/IOException.getMessage:()Ljava/lang/String;
     492: invokestatic  #143                // Method org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.sendGenericSaslErrorMessage:(Ljava/io/OutputStream;Ljava/lang/String;)V
     495: aload         11
     497: athrow
    Exception table:
       from    to  target type
          43   482   483   Class java/io/IOException

  static {};
    Code:
       0: ldc           #144                // class org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient
       2: invokevirtual #145                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #128                // Field $assertionsDisabled:Z
      16: ldc           #144                // class org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient
      18: invokestatic  #146                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      24: return
}
