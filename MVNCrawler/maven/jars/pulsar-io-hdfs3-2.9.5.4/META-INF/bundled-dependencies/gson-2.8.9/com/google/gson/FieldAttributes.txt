Compiled from "FieldAttributes.java"
public final class com.google.gson.FieldAttributes {
  private final java.lang.reflect.Field field;

  public com.google.gson.FieldAttributes(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method com/google/gson/internal/$Gson$Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field field:Ljava/lang/reflect/Field;
      14: return

  public java.lang.Class<?> getDeclaringClass();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #4                  // Method java/lang/reflect/Field.getDeclaringClass:()Ljava/lang/Class;
       7: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #5                  // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.reflect.Type getDeclaredType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #6                  // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
       7: areturn

  public java.lang.Class<?> getDeclaredClass();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #7                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
       7: areturn

  public <T extends java.lang.annotation.Annotation> T getAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #8                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: areturn

  public java.util.Collection<java.lang.annotation.Annotation> getAnnotations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #9                  // Method java/lang/reflect/Field.getAnnotations:()[Ljava/lang/annotation/Annotation;
       7: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: areturn

  public boolean hasModifier(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #11                 // Method java/lang/reflect/Field.getModifiers:()I
       7: iload_1
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  java.lang.Object get(java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #12                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  boolean isSynthetic();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #13                 // Method java/lang/reflect/Field.isSynthetic:()Z
       7: ireturn
}
