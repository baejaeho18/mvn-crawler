Compiled from "AbstractProtobufList.java"
abstract class com.google.protobuf.AbstractProtobufList<E> extends java.util.AbstractList<E> implements com.google.protobuf.Internal$ProtobufList<E> {
  protected static final int DEFAULT_CAPACITY;

  private boolean isMutable;

  com.google.protobuf.AbstractProtobufList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractList."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field isMutable:Z
       9: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #3                  // class java/util/List
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: instanceof    #4                  // class java/util/RandomAccess
      20: ifne          29
      23: aload_0
      24: aload_1
      25: invokespecial #5                  // Method java/util/AbstractList.equals:(Ljava/lang/Object;)Z
      28: ireturn
      29: aload_1
      30: checkcast     #3                  // class java/util/List
      33: astore_2
      34: aload_0
      35: invokevirtual #6                  // Method size:()I
      38: istore_3
      39: iload_3
      40: aload_2
      41: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      46: if_icmpeq     51
      49: iconst_0
      50: ireturn
      51: iconst_0
      52: istore        4
      54: iload         4
      56: iload_3
      57: if_icmpge     88
      60: aload_0
      61: iload         4
      63: invokevirtual #8                  // Method get:(I)Ljava/lang/Object;
      66: aload_2
      67: iload         4
      69: invokeinterface #9,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: invokevirtual #10                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: iinc          4, 1
      85: goto          54
      88: iconst_1
      89: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method size:()I
       4: istore_1
       5: iconst_1
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_1
      11: if_icmpge     34
      14: bipush        31
      16: iload_2
      17: imul
      18: aload_0
      19: iload_3
      20: invokevirtual #8                  // Method get:(I)Ljava/lang/Object;
      23: invokevirtual #11                 // Method java/lang/Object.hashCode:()I
      26: iadd
      27: istore_2
      28: iinc          3, 1
      31: goto          9
      34: iload_2
      35: ireturn

  public boolean add(E);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #13                 // Method java/util/AbstractList.add:(Ljava/lang/Object;)Z
       9: ireturn

  public void add(int, E);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #14                 // Method java/util/AbstractList.add:(ILjava/lang/Object;)V
      10: return

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #15                 // Method java/util/AbstractList.addAll:(Ljava/util/Collection;)Z
       9: ireturn

  public boolean addAll(int, java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #16                 // Method java/util/AbstractList.addAll:(ILjava/util/Collection;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: invokespecial #17                 // Method java/util/AbstractList.clear:()V
       8: return

  public boolean isModifiable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isMutable:Z
       4: ireturn

  public final void makeImmutable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field isMutable:Z
       5: return

  public E remove(int);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: invokespecial #18                 // Method java/util/AbstractList.remove:(I)Ljava/lang/Object;
       9: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #19                 // Method indexOf:(Ljava/lang/Object;)I
       9: istore_2
      10: iload_2
      11: iconst_m1
      12: if_icmpne     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: iload_2
      19: invokevirtual #20                 // Method remove:(I)Ljava/lang/Object;
      22: pop
      23: iconst_1
      24: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #21                 // Method java/util/AbstractList.removeAll:(Ljava/util/Collection;)Z
       9: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #22                 // Method java/util/AbstractList.retainAll:(Ljava/util/Collection;)Z
       9: ireturn

  public E set(int, E);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #23                 // Method java/util/AbstractList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      10: areturn

  protected void ensureIsMutable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isMutable:Z
       4: ifne          15
       7: new           #24                 // class java/lang/UnsupportedOperationException
      10: dup
      11: invokespecial #25                 // Method java/lang/UnsupportedOperationException."<init>":()V
      14: athrow
      15: return
}
