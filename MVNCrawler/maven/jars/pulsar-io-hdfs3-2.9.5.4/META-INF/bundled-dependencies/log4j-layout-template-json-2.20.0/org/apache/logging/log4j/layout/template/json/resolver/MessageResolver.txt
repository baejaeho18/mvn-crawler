Compiled from "MessageResolver.java"
public final class org.apache.logging.log4j.layout.template.json.resolver.MessageResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private static final java.lang.String[] FORMATS;

  private final org.apache.logging.log4j.layout.template.json.resolver.EventResolver internalResolver;

  org.apache.logging.log4j.layout.template.json.resolver.MessageResolver(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method createInternalResolver:(Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       9: putfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      12: return

  static java.lang.String getName();
    Code:
       0: ldc           #4                  // String message
       2: areturn

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createInternalResolver(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: ldc           #5                  // String stringified
       3: iconst_0
       4: invokevirtual #6                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getBoolean:(Ljava/lang/String;Z)Z
       7: istore_1
       8: aload_0
       9: ldc           #7                  // String fallbackKey
      11: invokevirtual #8                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: iload_1
      16: ifeq          50
      19: aload_2
      20: ifnull        50
      23: new           #9                  // class java/lang/IllegalArgumentException
      26: dup
      27: new           #10                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #12                 // String fallbackKey is not allowed when stringified is enable:
      36: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: iload_1
      51: ifeq          61
      54: aload_2
      55: invokestatic  #17                 // Method createStringResolver:(Ljava/lang/String;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      58: goto          65
      61: aload_2
      62: invokestatic  #18                 // Method createObjectResolver:(Ljava/lang/String;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      65: areturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.resolve:(Ljava/lang/Object;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      11: return

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createStringResolver(java.lang.String);
    Code:
       0: aload_0
       1: invokedynamic #20,  0             // InvokeDynamic #0:resolve:(Ljava/lang/String;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       6: areturn

  private static void resolveString(java.lang.String, org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_1
       1: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMessage:()Lorg/apache/logging/log4j/message/Message;
       6: astore_3
       7: aload_0
       8: aload_3
       9: aload_2
      10: invokestatic  #22                 // Method resolveString:(Ljava/lang/String;Lorg/apache/logging/log4j/message/Message;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      13: return

  private static void resolveString(java.lang.String, org.apache.logging.log4j.message.Message, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_2
       5: invokevirtual #23                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeObjectStart:()V
       8: aload_2
       9: aload_0
      10: invokevirtual #24                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeObjectKey:(Ljava/lang/CharSequence;)V
      13: aload_1
      14: instanceof    #25                 // class java/lang/CharSequence
      17: ifeq          31
      20: aload_2
      21: aload_1
      22: checkcast     #25                 // class java/lang/CharSequence
      25: invokevirtual #26                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      28: goto          61
      31: aload_1
      32: instanceof    #27                 // class org/apache/logging/log4j/util/StringBuilderFormattable
      35: ifeq          49
      38: aload_2
      39: aload_1
      40: checkcast     #27                 // class org/apache/logging/log4j/util/StringBuilderFormattable
      43: invokevirtual #28                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Lorg/apache/logging/log4j/util/StringBuilderFormattable;)V
      46: goto          61
      49: aload_1
      50: invokeinterface #29,  1           // InterfaceMethod org/apache/logging/log4j/message/Message.getFormattedMessage:()Ljava/lang/String;
      55: astore_3
      56: aload_2
      57: aload_3
      58: invokevirtual #26                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      61: aload_0
      62: ifnull        69
      65: aload_2
      66: invokevirtual #30                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeObjectEnd:()V
      69: return

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createObjectResolver(java.lang.String);
    Code:
       0: aload_0
       1: invokedynamic #31,  0             // InvokeDynamic #1:resolve:(Ljava/lang/String;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       6: areturn

  private static boolean writeMultiformatMessage(org.apache.logging.log4j.layout.template.json.util.JsonWriter, org.apache.logging.log4j.message.Message);
    Code:
       0: aload_1
       1: instanceof    #32                 // class org/apache/logging/log4j/message/MultiformatMessage
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #32                 // class org/apache/logging/log4j/message/MultiformatMessage
      13: astore_2
      14: iconst_0
      15: istore_3
      16: aload_2
      17: invokeinterface #33,  1           // InterfaceMethod org/apache/logging/log4j/message/MultiformatMessage.getFormats:()[Ljava/lang/String;
      22: astore        4
      24: aload         4
      26: astore        5
      28: aload         5
      30: arraylength
      31: istore        6
      33: iconst_0
      34: istore        7
      36: iload         7
      38: iload         6
      40: if_icmpge     74
      43: aload         5
      45: iload         7
      47: aaload
      48: astore        8
      50: getstatic     #34                 // Field FORMATS:[Ljava/lang/String;
      53: iconst_0
      54: aaload
      55: aload         8
      57: invokevirtual #35                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      60: ifeq          68
      63: iconst_1
      64: istore_3
      65: goto          74
      68: iinc          7, 1
      71: goto          36
      74: iload_3
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: getstatic     #34                 // Field FORMATS:[Ljava/lang/String;
      84: invokeinterface #36,  2           // InterfaceMethod org/apache/logging/log4j/message/MultiformatMessage.getFormattedMessage:([Ljava/lang/String;)Ljava/lang/String;
      89: astore        5
      91: aload_0
      92: aload         5
      94: invokevirtual #37                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeRawString:(Ljava/lang/CharSequence;)V
      97: iconst_1
      98: ireturn

  private static boolean writeObjectMessage(org.apache.logging.log4j.layout.template.json.util.JsonWriter, org.apache.logging.log4j.message.Message);
    Code:
       0: aload_1
       1: instanceof    #38                 // class org/apache/logging/log4j/message/ObjectMessage
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #38                 // class org/apache/logging/log4j/message/ObjectMessage
      13: astore_2
      14: aload_2
      15: invokevirtual #39                 // Method org/apache/logging/log4j/message/ObjectMessage.getParameter:()Ljava/lang/Object;
      18: astore_3
      19: aload_0
      20: aload_3
      21: invokevirtual #40                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeValue:(Ljava/lang/Object;)V
      24: iconst_1
      25: ireturn

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #41                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #42                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  private static void lambda$createObjectResolver$1(java.lang.String, org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_1
       1: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMessage:()Lorg/apache/logging/log4j/message/Message;
       6: astore_3
       7: aload_3
       8: instanceof    #43                 // class org/apache/logging/log4j/message/SimpleMessage
      11: istore        4
      13: iload         4
      15: ifne          36
      18: aload_2
      19: aload_3
      20: invokestatic  #44                 // Method writeMultiformatMessage:(Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;Lorg/apache/logging/log4j/message/Message;)Z
      23: ifeq          27
      26: return
      27: aload_2
      28: aload_3
      29: invokestatic  #45                 // Method writeObjectMessage:(Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;Lorg/apache/logging/log4j/message/Message;)Z
      32: ifeq          36
      35: return
      36: aload_0
      37: aload_1
      38: aload_2
      39: invokestatic  #46                 // Method resolveString:(Ljava/lang/String;Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      42: return

  private static void lambda$createStringResolver$0(java.lang.String, org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #46                 // Method resolveString:(Ljava/lang/String;Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       6: return

  static {};
    Code:
       0: iconst_1
       1: anewarray     #47                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #48                 // String JSON
       8: aastore
       9: putstatic     #34                 // Field FORMATS:[Ljava/lang/String;
      12: return
}
