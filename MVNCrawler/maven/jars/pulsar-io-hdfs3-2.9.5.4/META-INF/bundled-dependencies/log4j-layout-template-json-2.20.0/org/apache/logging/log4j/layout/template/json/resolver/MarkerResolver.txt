Compiled from "MarkerResolver.java"
public final class org.apache.logging.log4j.layout.template.json.resolver.MarkerResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private static final org.apache.logging.log4j.layout.template.json.resolver.TemplateResolver<org.apache.logging.log4j.core.LogEvent> NAME_RESOLVER;

  private final org.apache.logging.log4j.layout.template.json.resolver.TemplateResolver<org.apache.logging.log4j.core.LogEvent> internalResolver;

  org.apache.logging.log4j.layout.template.json.resolver.MarkerResolver(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method createInternalResolver:(Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;)Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolver;
      10: putfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolver;
      13: return

  private org.apache.logging.log4j.layout.template.json.resolver.TemplateResolver<org.apache.logging.log4j.core.LogEvent> createInternalResolver(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_1
       1: ldc           #4                  // String field
       3: invokevirtual #5                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: ldc           #6                  // String name
       9: aload_2
      10: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: getstatic     #8                  // Field NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolver;
      19: areturn
      20: new           #9                  // class java/lang/IllegalArgumentException
      23: dup
      24: new           #10                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #12                 // String unknown field:
      33: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow

  static java.lang.String getName();
    Code:
       0: ldc           #17                 // String marker
       2: areturn

  public boolean isResolvable(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMarker:()Lorg/apache/logging/log4j/Marker;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/TemplateResolver.resolve:(Ljava/lang/Object;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      11: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #21                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  public boolean isResolvable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/logging/log4j/core/LogEvent
       5: invokevirtual #22                 // Method isResolvable:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       8: ireturn

  private static void lambda$static$0(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #18,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMarker:()Lorg/apache/logging/log4j/Marker;
       6: astore_2
       7: aload_2
       8: ifnonnull     18
      11: aload_1
      12: invokevirtual #23                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
      15: goto          28
      18: aload_1
      19: aload_2
      20: invokeinterface #24,  1           // InterfaceMethod org/apache/logging/log4j/Marker.getName:()Ljava/lang/String;
      25: invokevirtual #25                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      28: return

  static {};
    Code:
       0: invokedynamic #26,  0             // InvokeDynamic #0:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolver;
       5: putstatic     #8                  // Field NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolver;
       8: return
}
