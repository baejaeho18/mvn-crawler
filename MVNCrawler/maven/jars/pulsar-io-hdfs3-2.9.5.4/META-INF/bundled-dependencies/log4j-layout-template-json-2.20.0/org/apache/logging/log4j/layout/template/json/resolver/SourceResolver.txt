Compiled from "SourceResolver.java"
public final class org.apache.logging.log4j.layout.template.json.resolver.SourceResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver NULL_RESOLVER;

  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver CLASS_NAME_RESOLVER;

  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver FILE_NAME_RESOLVER;

  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver LINE_NUMBER_RESOLVER;

  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver METHOD_NAME_RESOLVER;

  private final boolean locationInfoEnabled;

  private final org.apache.logging.log4j.layout.template.json.resolver.EventResolver internalResolver;

  org.apache.logging.log4j.layout.template.json.resolver.SourceResolver(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/logging/log4j/layout/template/json/resolver/EventResolverContext.isLocationInfoEnabled:()Z
       9: putfield      #3                  // Field locationInfoEnabled:Z
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokestatic  #4                  // Method createInternalResolver:(Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolverContext;Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      18: putfield      #5                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      21: return

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createInternalResolver(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/apache/logging/log4j/layout/template/json/resolver/EventResolverContext.isLocationInfoEnabled:()Z
       4: ifne          11
       7: getstatic     #6                  // Field NULL_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      10: areturn
      11: aload_1
      12: ldc           #7                  // String field
      14: invokevirtual #8                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_2
      18: ldc           #9                  // String className
      20: aload_2
      21: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          31
      27: getstatic     #11                 // Field CLASS_NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      30: areturn
      31: ldc           #12                 // String fileName
      33: aload_2
      34: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          44
      40: getstatic     #13                 // Field FILE_NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      43: areturn
      44: ldc           #14                 // String lineNumber
      46: aload_2
      47: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          57
      53: getstatic     #15                 // Field LINE_NUMBER_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      56: areturn
      57: ldc           #16                 // String methodName
      59: aload_2
      60: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          70
      66: getstatic     #17                 // Field METHOD_NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      69: areturn
      70: new           #18                 // class java/lang/IllegalArgumentException
      73: dup
      74: new           #19                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #21                 // String unknown field:
      83: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow

  static java.lang.String getName();
    Code:
       0: ldc           #26                 // String source
       2: areturn

  public boolean isResolvable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field locationInfoEnabled:Z
       4: ireturn

  public boolean isResolvable(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field locationInfoEnabled:Z
       4: ifeq          20
       7: aload_1
       8: invokeinterface #27,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #5                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #28,  3           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.resolve:(Ljava/lang/Object;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      11: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #30                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  public boolean isResolvable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class org/apache/logging/log4j/core/LogEvent
       5: invokevirtual #31                 // Method isResolvable:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       8: ireturn

  private static void lambda$static$4(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
       6: astore_2
       7: aload_2
       8: ifnonnull     18
      11: aload_1
      12: invokevirtual #32                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
      15: goto          28
      18: aload_2
      19: invokevirtual #33                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      22: astore_3
      23: aload_1
      24: aload_3
      25: invokevirtual #34                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      28: return

  private static void lambda$static$3(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
       6: astore_2
       7: aload_2
       8: ifnonnull     18
      11: aload_1
      12: invokevirtual #32                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
      15: goto          28
      18: aload_2
      19: invokevirtual #35                 // Method java/lang/StackTraceElement.getLineNumber:()I
      22: istore_3
      23: aload_1
      24: iload_3
      25: invokevirtual #36                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNumber:(I)V
      28: return

  private static void lambda$static$2(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
       6: astore_2
       7: aload_2
       8: ifnonnull     18
      11: aload_1
      12: invokevirtual #32                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
      15: goto          28
      18: aload_2
      19: invokevirtual #37                 // Method java/lang/StackTraceElement.getFileName:()Ljava/lang/String;
      22: astore_3
      23: aload_1
      24: aload_3
      25: invokevirtual #34                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      28: return

  private static void lambda$static$1(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
       6: astore_2
       7: aload_2
       8: ifnonnull     18
      11: aload_1
      12: invokevirtual #32                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
      15: goto          28
      18: aload_2
      19: invokevirtual #38                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      22: astore_3
      23: aload_1
      24: aload_3
      25: invokevirtual #34                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      28: return

  private static void lambda$static$0(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
       4: return

  static {};
    Code:
       0: invokedynamic #39,  0             // InvokeDynamic #0:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       5: putstatic     #6                  // Field NULL_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       8: invokedynamic #40,  0             // InvokeDynamic #1:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      13: putstatic     #11                 // Field CLASS_NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      16: invokedynamic #41,  0             // InvokeDynamic #2:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      21: putstatic     #13                 // Field FILE_NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      24: invokedynamic #42,  0             // InvokeDynamic #3:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      29: putstatic     #15                 // Field LINE_NUMBER_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      32: invokedynamic #43,  0             // InvokeDynamic #4:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      37: putstatic     #17                 // Field METHOD_NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      40: return
}
