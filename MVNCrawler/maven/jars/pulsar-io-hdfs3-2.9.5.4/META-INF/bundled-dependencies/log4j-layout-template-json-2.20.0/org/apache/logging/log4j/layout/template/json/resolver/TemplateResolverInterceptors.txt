Compiled from "TemplateResolverInterceptors.java"
public class org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptors {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptors();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <V, C extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverContext<V, C>, I extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor<V, C>> java.util.List<I> populateInterceptors(java.util.List<java.lang.String>, java.lang.Class<V>, java.lang.Class<C>);
    Code:
       0: ldc           #3                  // String JsonTemplateResolverInterceptor
       2: aload_0
       3: invokestatic  #4                  // Method org/apache/logging/log4j/core/config/plugins/util/PluginUtil.collectPluginsByCategoryAndPackage:(Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;
       6: astore_3
       7: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/Logger.isDebugEnabled:()Z
      15: ifeq          45
      18: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      21: ldc           #7                  // String found {} plugins of category \"{}\": {}
      23: aload_3
      24: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      29: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: ldc           #11                 // String JsonTemplateResolverFactory
      34: aload_3
      35: invokeinterface #12,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      40: invokeinterface #13,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload_3
      46: aload_1
      47: aload_2
      48: invokestatic  #14                 // Method populateInterceptors:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
      51: astore        4
      53: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      56: ldc           #15                 // String {} interceptors matched out of {} for value class {} and context class {}
      58: aload         4
      60: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      65: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: aload_3
      69: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      74: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: aload_1
      78: aload_2
      79: invokeinterface #17,  6           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      84: aload         4
      86: areturn

  private static <V, C extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverContext<V, C>, I extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor<V, C>> java.util.List<I> populateInterceptors(java.util.Map<java.lang.String, org.apache.logging.log4j.core.config.plugins.util.PluginType<?>>, java.lang.Class<V>, java.lang.Class<C>);
    Code:
       0: new           #18                 // class java/util/LinkedList
       3: dup
       4: invokespecial #19                 // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aload_0
       9: invokeinterface #12,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: astore        4
      16: aload         4
      18: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        5
      25: aload         5
      27: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          116
      35: aload         5
      37: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #23                 // class java/lang/String
      45: astore        6
      47: aload_0
      48: aload         6
      50: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #25                 // class org/apache/logging/log4j/core/config/plugins/util/PluginType
      58: astore        7
      60: aload         7
      62: invokevirtual #26                 // Method org/apache/logging/log4j/core/config/plugins/util/PluginType.getPluginClass:()Ljava/lang/Class;
      65: astore        8
      67: ldc           #2                  // class org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverInterceptor
      69: aload         8
      71: invokevirtual #27                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      74: istore        9
      76: iload         9
      78: ifeq          113
      81: aload         6
      83: aload         8
      85: invokestatic  #28                 // Method instantiateInterceptor:(Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverInterceptor;
      88: astore        10
      90: aload_1
      91: aload_2
      92: aload         10
      94: invokestatic  #29                 // Method castInterceptor:(Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverInterceptor;)Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverInterceptor;
      97: astore        11
      99: aload         11
     101: ifnull        113
     104: aload_3
     105: aload         11
     107: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          25
     116: aload_3
     117: areturn

  private static org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor<?, ?> instantiateInterceptor(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method org/apache/logging/log4j/core/config/plugins/util/PluginUtil.instantiatePlugin:(Ljava/lang/Class;)Ljava/lang/Object;
       4: checkcast     #2                  // class org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverInterceptor
       7: areturn
       8: astore_2
       9: ldc           #33                 // String failed instantiating resolver interceptor plugin %s of name %s
      11: iconst_2
      12: anewarray     #34                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_1
      18: aastore
      19: dup
      20: iconst_1
      21: aload_0
      22: aastore
      23: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: astore_3
      27: new           #36                 // class java/lang/RuntimeException
      30: dup
      31: aload_3
      32: aload_2
      33: invokespecial #37                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  private static <V, C extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverContext<V, C>, I extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor<V, C>> I castInterceptor(java.lang.Class<V>, java.lang.Class<C>, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor<?, ?>);
    Code:
       0: aload_2
       1: invokeinterface #38,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverInterceptor.getValueClass:()Ljava/lang/Class;
       6: astore_3
       7: aload_2
       8: invokeinterface #39,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverInterceptor.getContextClass:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload_3
      17: invokevirtual #27                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: istore        5
      22: aload_1
      23: aload         4
      25: invokevirtual #27                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      28: istore        6
      30: iload         5
      32: ifeq          46
      35: iload         6
      37: ifeq          46
      40: aload_2
      41: astore        7
      43: aload         7
      45: areturn
      46: aconst_null
      47: areturn

  static {};
    Code:
       0: invokestatic  #40                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
