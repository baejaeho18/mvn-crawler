Compiled from "TruncatingBufferedWriter.java"
final class org.apache.logging.log4j.layout.template.json.util.TruncatingBufferedWriter extends java.io.Writer implements java.lang.CharSequence {
  private final char[] buffer;

  private int position;

  private boolean truncated;

  org.apache.logging.log4j.layout.template.json.util.TruncatingBufferedWriter(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Writer."<init>":()V
       4: aload_0
       5: iload_1
       6: newarray       char
       8: putfield      #2                  // Field buffer:[C
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field position:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field truncated:Z
      21: return

  char[] buffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:[C
       4: areturn

  int position();
    Code:
       0: aload_0
       1: getfield      #3                  // Field position:I
       4: ireturn

  void position(int);
    Code:
       0: iload_1
       1: iflt          13
       4: iload_1
       5: aload_0
       6: getfield      #2                  // Field buffer:[C
       9: arraylength
      10: if_icmplt     40
      13: new           #5                  // class java/lang/IllegalArgumentException
      16: dup
      17: new           #6                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #8                  // String invalid index:
      26: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: iload_1
      30: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #3                  // Field position:I
      45: return

  int capacity();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:[C
       4: arraylength
       5: ireturn

  boolean truncated();
    Code:
       0: aload_0
       1: getfield      #4                  // Field truncated:Z
       4: ireturn

  public void write(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field position:I
       4: aload_0
       5: getfield      #2                  // Field buffer:[C
       8: arraylength
       9: if_icmpge     33
      12: aload_0
      13: getfield      #2                  // Field buffer:[C
      16: aload_0
      17: dup
      18: getfield      #3                  // Field position:I
      21: dup_x1
      22: iconst_1
      23: iadd
      24: putfield      #3                  // Field position:I
      27: iload_1
      28: i2c
      29: castore
      30: goto          38
      33: aload_0
      34: iconst_1
      35: putfield      #4                  // Field truncated:Z
      38: return

  public void write(char[]);
    Code:
       0: aload_1
       1: ldc           #13                 // String source
       3: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: iconst_0
      10: aload_1
      11: arraylength
      12: invokevirtual #15                 // Method write:([CII)V
      15: return

  public void write(char[], int, int);
    Code:
       0: aload_1
       1: ldc           #13                 // String source
       3: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_2
       8: iflt          17
      11: iload_2
      12: aload_1
      13: arraylength
      14: if_icmplt     44
      17: new           #16                 // class java/lang/IndexOutOfBoundsException
      20: dup
      21: new           #6                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #17                 // String invalid offset:
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_2
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: iload_3
      45: iflt          58
      48: iload_2
      49: iload_3
      50: invokestatic  #19                 // Method java/lang/Math.addExact:(II)I
      53: aload_1
      54: arraylength
      55: if_icmple     85
      58: new           #16                 // class java/lang/IndexOutOfBoundsException
      61: dup
      62: new           #6                  // class java/lang/StringBuilder
      65: dup
      66: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #20                 // String invalid length:
      71: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload_3
      75: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: getfield      #2                  // Field buffer:[C
      89: arraylength
      90: aload_0
      91: getfield      #3                  // Field position:I
      94: isub
      95: istore        4
      97: iload_3
      98: iload         4
     100: if_icmpge     130
     103: aload_1
     104: iload_2
     105: aload_0
     106: getfield      #2                  // Field buffer:[C
     109: aload_0
     110: getfield      #3                  // Field position:I
     113: iload_3
     114: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     117: aload_0
     118: dup
     119: getfield      #3                  // Field position:I
     122: iload_3
     123: iadd
     124: putfield      #3                  // Field position:I
     127: goto          166
     130: iload         4
     132: ifle          166
     135: aload_1
     136: iload_2
     137: aload_0
     138: getfield      #2                  // Field buffer:[C
     141: aload_0
     142: getfield      #3                  // Field position:I
     145: iload         4
     147: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     150: aload_0
     151: dup
     152: getfield      #3                  // Field position:I
     155: iload         4
     157: iadd
     158: putfield      #3                  // Field position:I
     161: aload_0
     162: iconst_1
     163: putfield      #4                  // Field truncated:Z
     166: return

  public void write(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #22                 // String string
       3: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokevirtual #23                 // Method java/lang/String.length:()I
      11: istore_2
      12: aload_0
      13: getfield      #2                  // Field buffer:[C
      16: arraylength
      17: aload_0
      18: getfield      #3                  // Field position:I
      21: isub
      22: istore_3
      23: iload_2
      24: iload_3
      25: if_icmpge     55
      28: aload_1
      29: iconst_0
      30: iload_2
      31: aload_0
      32: getfield      #2                  // Field buffer:[C
      35: aload_0
      36: getfield      #3                  // Field position:I
      39: invokevirtual #24                 // Method java/lang/String.getChars:(II[CI)V
      42: aload_0
      43: dup
      44: getfield      #3                  // Field position:I
      47: iload_2
      48: iadd
      49: putfield      #3                  // Field position:I
      52: goto          88
      55: iload_3
      56: ifle          88
      59: aload_1
      60: iconst_0
      61: iload_3
      62: aload_0
      63: getfield      #2                  // Field buffer:[C
      66: aload_0
      67: getfield      #3                  // Field position:I
      70: invokevirtual #24                 // Method java/lang/String.getChars:(II[CI)V
      73: aload_0
      74: dup
      75: getfield      #3                  // Field position:I
      78: iload_3
      79: iadd
      80: putfield      #3                  // Field position:I
      83: aload_0
      84: iconst_1
      85: putfield      #4                  // Field truncated:Z
      88: return

  public void write(java.lang.String, int, int);
    Code:
       0: aload_1
       1: ldc           #22                 // String string
       3: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_2
       8: iflt          19
      11: iload_2
      12: aload_1
      13: invokevirtual #23                 // Method java/lang/String.length:()I
      16: if_icmplt     46
      19: new           #16                 // class java/lang/IndexOutOfBoundsException
      22: dup
      23: new           #6                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #17                 // String invalid offset:
      32: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: iload_3
      47: iflt          62
      50: iload_2
      51: iload_3
      52: invokestatic  #19                 // Method java/lang/Math.addExact:(II)I
      55: aload_1
      56: invokevirtual #23                 // Method java/lang/String.length:()I
      59: if_icmple     89
      62: new           #16                 // class java/lang/IndexOutOfBoundsException
      65: dup
      66: new           #6                  // class java/lang/StringBuilder
      69: dup
      70: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #20                 // String invalid length:
      75: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: iload_3
      79: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_0
      90: getfield      #2                  // Field buffer:[C
      93: arraylength
      94: aload_0
      95: getfield      #3                  // Field position:I
      98: isub
      99: istore        4
     101: iload_3
     102: iload         4
     104: if_icmpge     136
     107: aload_1
     108: iload_2
     109: iload_2
     110: iload_3
     111: iadd
     112: aload_0
     113: getfield      #2                  // Field buffer:[C
     116: aload_0
     117: getfield      #3                  // Field position:I
     120: invokevirtual #24                 // Method java/lang/String.getChars:(II[CI)V
     123: aload_0
     124: dup
     125: getfield      #3                  // Field position:I
     128: iload_3
     129: iadd
     130: putfield      #3                  // Field position:I
     133: goto          174
     136: iload         4
     138: ifle          174
     141: aload_1
     142: iload_2
     143: iload_2
     144: iload         4
     146: iadd
     147: aload_0
     148: getfield      #2                  // Field buffer:[C
     151: aload_0
     152: getfield      #3                  // Field position:I
     155: invokevirtual #24                 // Method java/lang/String.getChars:(II[CI)V
     158: aload_0
     159: dup
     160: getfield      #3                  // Field position:I
     163: iload         4
     165: iadd
     166: putfield      #3                  // Field position:I
     169: aload_0
     170: iconst_1
     171: putfield      #4                  // Field truncated:Z
     174: return

  public java.io.Writer append(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #25                 // Method write:(I)V
       5: aload_0
       6: areturn

  public java.io.Writer append(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: ldc           #26                 // String null
       7: iconst_0
       8: iconst_4
       9: invokevirtual #27                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
      12: goto          27
      15: aload_0
      16: aload_1
      17: iconst_0
      18: aload_1
      19: invokeinterface #28,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      24: invokevirtual #27                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
      27: areturn

  public java.io.Writer append(java.lang.CharSequence, int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: ldc           #26                 // String null
       7: invokevirtual #29                 // Method write:(Ljava/lang/String;)V
      10: aload_0
      11: areturn
      12: iload_2
      13: iflt          26
      16: iload_2
      17: aload_1
      18: invokeinterface #28,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      23: if_icmplt     53
      26: new           #16                 // class java/lang/IndexOutOfBoundsException
      29: dup
      30: new           #6                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #30                 // String invalid start:
      39: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: iload_3
      54: iload_2
      55: if_icmplt     68
      58: iload_3
      59: aload_1
      60: invokeinterface #28,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      65: if_icmple     95
      68: new           #16                 // class java/lang/IndexOutOfBoundsException
      71: dup
      72: new           #6                  // class java/lang/StringBuilder
      75: dup
      76: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #31                 // String invalid end:
      81: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iload_3
      85: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: iload_3
      96: iload_2
      97: isub
      98: istore        4
     100: aload_0
     101: getfield      #2                  // Field buffer:[C
     104: arraylength
     105: aload_0
     106: getfield      #3                  // Field position:I
     109: isub
     110: istore        5
     112: iload         4
     114: iload         5
     116: if_icmpge     165
     119: iload_2
     120: istore        6
     122: iload         6
     124: iload_3
     125: if_icmpge     162
     128: aload_1
     129: iload         6
     131: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     136: istore        7
     138: aload_0
     139: getfield      #2                  // Field buffer:[C
     142: aload_0
     143: dup
     144: getfield      #3                  // Field position:I
     147: dup_x1
     148: iconst_1
     149: iadd
     150: putfield      #3                  // Field position:I
     153: iload         7
     155: castore
     156: iinc          6, 1
     159: goto          122
     162: goto          225
     165: iload         5
     167: ifle          225
     170: iload_2
     171: iload         5
     173: iadd
     174: istore        6
     176: iload_2
     177: istore        7
     179: iload         7
     181: iload         6
     183: if_icmpge     220
     186: aload_1
     187: iload         7
     189: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     194: istore        8
     196: aload_0
     197: getfield      #2                  // Field buffer:[C
     200: aload_0
     201: dup
     202: getfield      #3                  // Field position:I
     205: dup_x1
     206: iconst_1
     207: iadd
     208: putfield      #3                  // Field position:I
     211: iload         8
     213: castore
     214: iinc          7, 1
     217: goto          179
     220: aload_0
     221: iconst_1
     222: putfield      #4                  // Field truncated:Z
     225: aload_0
     226: areturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #3                  // Field position:I
       4: ireturn

  public char charAt(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:[C
       4: iload_1
       5: caload
       6: ireturn

  public java.lang.String subSequence(int, int);
    Code:
       0: new           #33                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #34                 // String operation requires allocation, contradicting with the purpose of the class
       6: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.IntStream chars();
    Code:
       0: new           #33                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #34                 // String operation requires allocation, contradicting with the purpose of the class
       6: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.IntStream codePoints();
    Code:
       0: new           #33                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #34                 // String operation requires allocation, contradicting with the purpose of the class
       6: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void flush();
    Code:
       0: return

  public void close();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field position:I
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field truncated:Z
      10: return

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #2                  // Field buffer:[C
       8: iconst_0
       9: aload_0
      10: getfield      #3                  // Field position:I
      13: invokespecial #37                 // Method java/lang/String."<init>":([CII)V
      16: areturn

  public java.lang.Appendable append(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #38                 // Method append:(C)Ljava/io/Writer;
       5: areturn

  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #27                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
       7: areturn

  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       5: areturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #40                 // Method subSequence:(II)Ljava/lang/String;
       6: areturn
}
