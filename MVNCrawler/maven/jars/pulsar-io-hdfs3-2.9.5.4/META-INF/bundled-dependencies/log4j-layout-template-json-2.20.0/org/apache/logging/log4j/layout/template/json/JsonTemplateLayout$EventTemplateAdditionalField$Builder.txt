Compiled from "JsonTemplateLayout.java"
public class org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField> {
  private java.lang.String key;

  private java.lang.String value;

  private org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Format format;

  public org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #5                  // Field org/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField$Format.STRING:Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField$Format;
       8: putfield      #1                  // Field format:Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField$Format;
      11: return

  public org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder setKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field key:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field value:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder setFormat(org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Format);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field format:Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField$Format;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField build();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method validate:()V
       4: new           #7                  // class org/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField
       7: dup
       8: aload_0
       9: aconst_null
      10: invokespecial #8                  // Method org/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField."<init>":(Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField$Builder;Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$1;)V
      13: areturn

  private void validate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field key:Ljava/lang/String;
       4: invokestatic  #9                  // Method org/apache/logging/log4j/util/Strings.isBlank:(Ljava/lang/String;)Z
       7: ifeq          20
      10: new           #10                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #11                 // String blank key
      16: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #2                  // Field value:Ljava/lang/String;
      24: invokestatic  #9                  // Method org/apache/logging/log4j/util/Strings.isBlank:(Ljava/lang/String;)Z
      27: ifeq          40
      30: new           #10                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #13                 // String blank value
      36: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: getfield      #1                  // Field format:Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField$Format;
      44: ldc           #14                 // String format
      46: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      49: pop
      50: return

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method build:()Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField;
       4: areturn

  static java.lang.String access$1600(org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field key:Ljava/lang/String;
       4: areturn

  static java.lang.String access$1700(org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/String;
       4: areturn

  static org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Format access$1800(org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field format:Lorg/apache/logging/log4j/layout/template/json/JsonTemplateLayout$EventTemplateAdditionalField$Format;
       4: areturn
}
