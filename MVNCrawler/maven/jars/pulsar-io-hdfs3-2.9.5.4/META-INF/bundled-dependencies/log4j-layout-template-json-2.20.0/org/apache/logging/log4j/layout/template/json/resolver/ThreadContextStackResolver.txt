Compiled from "ThreadContextStackResolver.java"
public final class org.apache.logging.log4j.layout.template.json.resolver.ThreadContextStackResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private final java.util.regex.Pattern itemPattern;

  org.apache.logging.log4j.layout.template.json.resolver.ThreadContextStackResolver(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String pattern
       8: invokevirtual #3                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
      11: invokestatic  #4                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      14: invokedynamic #5,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      19: invokevirtual #6                  // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      22: aconst_null
      23: invokevirtual #7                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #8                  // class java/util/regex/Pattern
      29: putfield      #9                  // Field itemPattern:Ljava/util/regex/Pattern;
      32: return

  static java.lang.String getName();
    Code:
       0: ldc           #10                 // String ndc
       2: areturn

  public boolean isResolvable(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getContextStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
       6: astore_2
       7: aload_2
       8: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/ThreadContext$ContextStack.getDepth:()I
      13: ifle          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getContextStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
       6: astore_3
       7: aload_3
       8: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/ThreadContext$ContextStack.getDepth:()I
      13: ifne          21
      16: aload_2
      17: invokevirtual #13                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
      20: return
      21: iconst_0
      22: istore        4
      24: aload_3
      25: invokeinterface #14,  1           // InterfaceMethod org/apache/logging/log4j/ThreadContext$ContextStack.asList:()Ljava/util/List;
      30: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore        5
      37: aload         5
      39: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          121
      47: aload         5
      49: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #18                 // class java/lang/String
      57: astore        6
      59: aload_0
      60: getfield      #9                  // Field itemPattern:Ljava/util/regex/Pattern;
      63: ifnull        81
      66: aload_0
      67: getfield      #9                  // Field itemPattern:Ljava/util/regex/Pattern;
      70: aload         6
      72: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      75: invokevirtual #20                 // Method java/util/regex/Matcher.matches:()Z
      78: ifeq          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: istore        7
      88: iload         7
      90: ifeq          118
      93: iload         4
      95: ifeq          105
      98: aload_2
      99: invokevirtual #21                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeSeparator:()V
     102: goto          112
     105: aload_2
     106: invokevirtual #22                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeArrayStart:()V
     109: iconst_1
     110: istore        4
     112: aload_2
     113: aload         6
     115: invokevirtual #23                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
     118: goto          37
     121: iload         4
     123: ifeq          133
     126: aload_2
     127: invokevirtual #24                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeArrayEnd:()V
     130: goto          137
     133: aload_2
     134: invokevirtual #13                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNull:()V
     137: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #26                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  public boolean isResolvable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/logging/log4j/core/LogEvent
       5: invokevirtual #27                 // Method isResolvable:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       8: ireturn
}
