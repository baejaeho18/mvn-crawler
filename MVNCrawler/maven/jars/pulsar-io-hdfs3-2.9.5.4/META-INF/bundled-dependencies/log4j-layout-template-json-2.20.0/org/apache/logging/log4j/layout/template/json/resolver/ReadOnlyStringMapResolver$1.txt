Compiled from "ReadOnlyStringMapResolver.java"
final class org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$1 implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  final java.util.function.Function val$mapAccessor;

  final java.lang.String val$key;

  final boolean val$stringified;

  org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$1(java.util.function.Function, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$mapAccessor:Ljava/util/function/Function;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$key:Ljava/lang/String;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$stringified:Z
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public boolean isResolvable(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$mapAccessor:Ljava/util/function/Function;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class org/apache/logging/log4j/util/ReadOnlyStringMap
      13: astore_2
      14: aload_2
      15: ifnull        35
      18: aload_2
      19: aload_0
      20: getfield      #2                  // Field val$key:Ljava/lang/String;
      23: invokeinterface #7,  2            // InterfaceMethod org/apache/logging/log4j/util/ReadOnlyStringMap.containsKey:(Ljava/lang/String;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$mapAccessor:Ljava/util/function/Function;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class org/apache/logging/log4j/util/ReadOnlyStringMap
      13: astore_3
      14: aload_3
      15: ifnonnull     22
      18: aconst_null
      19: goto          32
      22: aload_3
      23: aload_0
      24: getfield      #2                  // Field val$key:Ljava/lang/String;
      27: invokeinterface #8,  2            // InterfaceMethod org/apache/logging/log4j/util/ReadOnlyStringMap.getValue:(Ljava/lang/String;)Ljava/lang/Object;
      32: astore        4
      34: aload_0
      35: getfield      #3                  // Field val$stringified:Z
      38: ifeq          57
      41: aload         4
      43: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      46: astore        5
      48: aload_2
      49: aload         5
      51: invokevirtual #10                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      54: goto          63
      57: aload_2
      58: aload         4
      60: invokevirtual #11                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeValue:(Ljava/lang/Object;)V
      63: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #13                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  public boolean isResolvable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class org/apache/logging/log4j/core/LogEvent
       5: invokevirtual #14                 // Method isResolvable:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       8: ireturn
}
