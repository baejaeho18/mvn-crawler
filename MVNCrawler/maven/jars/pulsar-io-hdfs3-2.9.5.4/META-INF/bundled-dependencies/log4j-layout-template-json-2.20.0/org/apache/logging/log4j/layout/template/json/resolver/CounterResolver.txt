Compiled from "CounterResolver.java"
public class org.apache.logging.log4j.layout.template.json.resolver.CounterResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private final java.util.function.Consumer<org.apache.logging.log4j.layout.template.json.util.JsonWriter> delegate;

  public org.apache.logging.log4j.layout.template.json.resolver.CounterResolver(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #2                  // Method createDelegate:(Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolverContext;Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;)Ljava/util/function/Consumer;
      10: putfield      #3                  // Field delegate:Ljava/util/function/Consumer;
      13: return

  private static java.util.function.Consumer<org.apache.logging.log4j.layout.template.json.util.JsonWriter> createDelegate(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method readStart:(Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;)Ljava/math/BigInteger;
       4: astore_2
       5: aload_1
       6: ldc           #5                  // String overflowing
       8: iconst_1
       9: invokevirtual #6                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getBoolean:(Ljava/lang/String;Z)Z
      12: istore_3
      13: aload_1
      14: ldc           #7                  // String stringified
      16: iconst_0
      17: invokevirtual #6                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getBoolean:(Ljava/lang/String;Z)Z
      20: istore        4
      22: iload         4
      24: ifeq          53
      27: aload_0
      28: invokestatic  #8                  // Method createStringBuilderRecycler:(Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolverContext;)Lorg/apache/logging/log4j/layout/template/json/util/Recycler;
      31: astore        5
      33: iload_3
      34: ifeq          46
      37: aload_2
      38: aload         5
      40: invokestatic  #9                  // Method createStringifiedLongResolver:(Ljava/math/BigInteger;Lorg/apache/logging/log4j/layout/template/json/util/Recycler;)Ljava/util/function/Consumer;
      43: goto          52
      46: aload_2
      47: aload         5
      49: invokestatic  #10                 // Method createStringifiedBigIntegerResolver:(Ljava/math/BigInteger;Lorg/apache/logging/log4j/layout/template/json/util/Recycler;)Ljava/util/function/Consumer;
      52: areturn
      53: iload_3
      54: ifeq          64
      57: aload_2
      58: invokestatic  #11                 // Method createLongResolver:(Ljava/math/BigInteger;)Ljava/util/function/Consumer;
      61: goto          68
      64: aload_2
      65: invokestatic  #12                 // Method createBigIntegerResolver:(Ljava/math/BigInteger;)Ljava/util/function/Consumer;
      68: areturn

  private static java.math.BigInteger readStart(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: ldc           #13                 // String start
       3: ldc           #14                 // class java/lang/Object
       5: invokevirtual #15                 // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getObject:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: astore_1
       9: aload_1
      10: ifnonnull     17
      13: getstatic     #16                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      16: areturn
      17: aload_1
      18: instanceof    #17                 // class java/lang/Short
      21: ifne          38
      24: aload_1
      25: instanceof    #18                 // class java/lang/Integer
      28: ifne          38
      31: aload_1
      32: instanceof    #19                 // class java/lang/Long
      35: ifeq          49
      38: aload_1
      39: checkcast     #20                 // class java/lang/Number
      42: invokevirtual #21                 // Method java/lang/Number.longValue:()J
      45: invokestatic  #22                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      48: areturn
      49: aload_1
      50: instanceof    #23                 // class java/math/BigInteger
      53: ifeq          61
      56: aload_1
      57: checkcast     #23                 // class java/math/BigInteger
      60: areturn
      61: aload_1
      62: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: astore_2
      66: ldc           #25                 // String could not read start of type %s: %s
      68: iconst_2
      69: anewarray     #14                 // class java/lang/Object
      72: dup
      73: iconst_0
      74: aload_2
      75: aastore
      76: dup
      77: iconst_1
      78: aload_0
      79: aastore
      80: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      83: astore_3
      84: new           #27                 // class java/lang/IllegalArgumentException
      87: dup
      88: aload_3
      89: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      92: athrow

  private static java.util.function.Consumer<org.apache.logging.log4j.layout.template.json.util.JsonWriter> createLongResolver(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method java/math/BigInteger.longValue:()J
       4: lstore_1
       5: new           #30                 // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lload_1
      10: invokespecial #31                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: astore_3
      14: aload_3
      15: invokedynamic #32,  0             // InvokeDynamic #0:accept:(Ljava/util/concurrent/atomic/AtomicLong;)Ljava/util/function/Consumer;
      20: areturn

  private static java.util.function.Consumer<org.apache.logging.log4j.layout.template.json.util.JsonWriter> createBigIntegerResolver(java.math.BigInteger);
    Code:
       0: new           #33                 // class org/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #34                 // Method org/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger."<init>":(Ljava/math/BigInteger;Lorg/apache/logging/log4j/layout/template/json/resolver/CounterResolver$1;)V
       9: astore_1
      10: aload_1
      11: invokedynamic #35,  0             // InvokeDynamic #1:accept:(Lorg/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger;)Ljava/util/function/Consumer;
      16: areturn

  private static org.apache.logging.log4j.layout.template.json.util.Recycler<java.lang.StringBuilder> createStringBuilderRecycler(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method org/apache/logging/log4j/layout/template/json/resolver/EventResolverContext.getRecyclerFactory:()Lorg/apache/logging/log4j/layout/template/json/util/RecyclerFactory;
       4: invokedynamic #37,  0             // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
       9: aload_0
      10: invokedynamic #38,  0             // InvokeDynamic #3:accept:(Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolverContext;)Ljava/util/function/Consumer;
      15: invokeinterface #39,  3           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/RecyclerFactory.create:(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lorg/apache/logging/log4j/layout/template/json/util/Recycler;
      20: areturn

  private static void trimStringBuilder(java.lang.StringBuilder, int);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
       4: iload_1
       5: if_icmple     17
       8: aload_0
       9: iload_1
      10: invokevirtual #41                 // Method java/lang/StringBuilder.setLength:(I)V
      13: aload_0
      14: invokevirtual #42                 // Method java/lang/StringBuilder.trimToSize:()V
      17: aload_0
      18: iconst_0
      19: invokevirtual #41                 // Method java/lang/StringBuilder.setLength:(I)V
      22: return

  private static java.util.function.Consumer<org.apache.logging.log4j.layout.template.json.util.JsonWriter> createStringifiedLongResolver(java.math.BigInteger, org.apache.logging.log4j.layout.template.json.util.Recycler<java.lang.StringBuilder>);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method java/math/BigInteger.longValue:()J
       4: lstore_2
       5: new           #30                 // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lload_2
      10: invokespecial #31                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: astore        4
      15: aload         4
      17: aload_1
      18: invokedynamic #43,  0             // InvokeDynamic #4:accept:(Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/logging/log4j/layout/template/json/util/Recycler;)Ljava/util/function/Consumer;
      23: areturn

  private static java.util.function.Consumer<org.apache.logging.log4j.layout.template.json.util.JsonWriter> createStringifiedBigIntegerResolver(java.math.BigInteger, org.apache.logging.log4j.layout.template.json.util.Recycler<java.lang.StringBuilder>);
    Code:
       0: new           #33                 // class org/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #34                 // Method org/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger."<init>":(Ljava/math/BigInteger;Lorg/apache/logging/log4j/layout/template/json/resolver/CounterResolver$1;)V
       9: astore_2
      10: aload_2
      11: aload_1
      12: invokedynamic #44,  0             // InvokeDynamic #5:accept:(Lorg/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger;Lorg/apache/logging/log4j/layout/template/json/util/Recycler;)Ljava/util/function/Consumer;
      17: areturn

  static java.lang.String getName();
    Code:
       0: ldc           #45                 // String counter
       2: areturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/function/Consumer;
       4: aload_2
       5: invokeinterface #46,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      10: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #47                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #48                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  private static void lambda$createStringifiedBigIntegerResolver$4(org.apache.logging.log4j.layout.template.json.resolver.CounterResolver$AtomicBigInteger, org.apache.logging.log4j.layout.template.json.util.Recycler, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method org/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger.access$100:(Lorg/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger;)Ljava/math/BigInteger;
       4: astore_3
       5: aload_1
       6: invokeinterface #50,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/Recycler.acquire:()Ljava/lang/Object;
      11: checkcast     #51                 // class java/lang/StringBuilder
      14: astore        4
      16: aload         4
      18: aload_3
      19: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: pop
      23: aload_2
      24: aload         4
      26: invokevirtual #53                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      29: aload_1
      30: aload         4
      32: invokeinterface #54,  2           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/Recycler.release:(Ljava/lang/Object;)V
      37: goto          53
      40: astore        5
      42: aload_1
      43: aload         4
      45: invokeinterface #54,  2           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/Recycler.release:(Ljava/lang/Object;)V
      50: aload         5
      52: athrow
      53: return
    Exception table:
       from    to  target type
          16    29    40   any
          40    42    40   any

  private static void lambda$createStringifiedLongResolver$3(java.util.concurrent.atomic.AtomicLong, org.apache.logging.log4j.layout.template.json.util.Recycler, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       4: lstore_3
       5: aload_1
       6: invokeinterface #50,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/Recycler.acquire:()Ljava/lang/Object;
      11: checkcast     #51                 // class java/lang/StringBuilder
      14: astore        5
      16: aload         5
      18: lload_3
      19: invokevirtual #56                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      22: pop
      23: aload_2
      24: aload         5
      26: invokevirtual #53                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      29: aload_1
      30: aload         5
      32: invokeinterface #54,  2           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/Recycler.release:(Ljava/lang/Object;)V
      37: goto          53
      40: astore        6
      42: aload_1
      43: aload         5
      45: invokeinterface #54,  2           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/Recycler.release:(Ljava/lang/Object;)V
      50: aload         6
      52: athrow
      53: return
    Exception table:
       from    to  target type
          16    29    40   any
          40    42    40   any

  private static void lambda$createStringBuilderRecycler$2(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method org/apache/logging/log4j/layout/template/json/resolver/EventResolverContext.getJsonWriter:()Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;
       4: invokevirtual #58                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.getMaxStringLength:()I
       7: istore_2
       8: aload_1
       9: iload_2
      10: invokestatic  #59                 // Method trimStringBuilder:(Ljava/lang/StringBuilder;I)V
      13: return

  private static void lambda$createBigIntegerResolver$1(org.apache.logging.log4j.layout.template.json.resolver.CounterResolver$AtomicBigInteger, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method org/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger.access$100:(Lorg/apache/logging/log4j/layout/template/json/resolver/CounterResolver$AtomicBigInteger;)Ljava/math/BigInteger;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #60                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNumber:(Ljava/math/BigInteger;)V
      10: return

  private static void lambda$createLongResolver$0(java.util.concurrent.atomic.AtomicLong, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       4: lstore_2
       5: aload_1
       6: lload_2
       7: invokevirtual #61                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeNumber:(J)V
      10: return
}
