Compiled from "LoggerResolver.java"
public final class org.apache.logging.log4j.layout.template.json.resolver.LoggerResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver NAME_RESOLVER;

  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver FQCN_RESOLVER;

  private final org.apache.logging.log4j.layout.template.json.resolver.EventResolver internalResolver;

  org.apache.logging.log4j.layout.template.json.resolver.LoggerResolver(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method createInternalResolver:(Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       9: putfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      12: return

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createInternalResolver(org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: ldc           #4                  // String field
       3: invokevirtual #5                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: ldc           #6                  // String name
       9: aload_1
      10: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: getstatic     #8                  // Field NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      19: areturn
      20: ldc           #9                  // String fqcn
      22: aload_1
      23: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: getstatic     #10                 // Field FQCN_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      32: areturn
      33: new           #11                 // class java/lang/IllegalArgumentException
      36: dup
      37: new           #12                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #14                 // String unknown field:
      46: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow

  static java.lang.String getName();
    Code:
       0: ldc           #19                 // String logger
       2: areturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #20,  3           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.resolve:(Ljava/lang/Object;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      11: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #22                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  private static void lambda$static$1(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #23,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerFqcn:()Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokevirtual #24                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      12: return

  private static void lambda$static$0(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokevirtual #24                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      12: return

  static {};
    Code:
       0: invokedynamic #26,  0             // InvokeDynamic #0:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       5: putstatic     #8                  // Field NAME_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       8: invokedynamic #27,  0             // InvokeDynamic #1:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      13: putstatic     #10                 // Field FQCN_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      16: return
}
