Compiled from "TemplateResolverFactories.java"
public final class org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactories {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactories();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <V, C extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverContext<V, C>, F extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory<V, C>> java.util.Map<java.lang.String, F> populateFactoryByName(java.util.List<java.lang.String>, java.lang.Class<V>, java.lang.Class<C>);
    Code:
       0: ldc           #3                  // String JsonTemplateResolverFactory
       2: aload_0
       3: invokestatic  #4                  // Method org/apache/logging/log4j/core/config/plugins/util/PluginUtil.collectPluginsByCategoryAndPackage:(Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;
       6: astore_3
       7: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/Logger.isDebugEnabled:()Z
      15: ifeq          45
      18: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      21: ldc           #7                  // String found {} plugins of category \"{}\": {}
      23: aload_3
      24: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      29: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: ldc           #3                  // String JsonTemplateResolverFactory
      34: aload_3
      35: invokeinterface #10,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      40: invokeinterface #11,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload_3
      46: aload_1
      47: aload_2
      48: invokestatic  #12                 // Method populateFactoryByName:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;
      51: astore        4
      53: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      56: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/Logger.isDebugEnabled:()Z
      61: ifeq          102
      64: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      67: ldc           #13                 // String matched {} resolver factories out of {} for value class {} and context class {}: {}
      69: aload         4
      71: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      76: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      79: aload_3
      80: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      85: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      88: aload_1
      89: aload_2
      90: aload         4
      92: invokeinterface #10,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      97: invokeinterface #14,  7           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     102: aload         4
     104: areturn

  private static <V, C extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverContext<V, C>, F extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory<V, C>> java.util.Map<java.lang.String, F> populateFactoryByName(java.util.Map<java.lang.String, org.apache.logging.log4j.core.config.plugins.util.PluginType<?>>, java.lang.Class<V>, java.lang.Class<C>);
    Code:
       0: new           #15                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #16                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: invokeinterface #10,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: astore        4
      16: aload         4
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        5
      25: aload         5
      27: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          113
      35: aload         5
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #20                 // class java/lang/String
      45: astore        6
      47: aload_0
      48: aload         6
      50: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #22                 // class org/apache/logging/log4j/core/config/plugins/util/PluginType
      58: astore        7
      60: aload         7
      62: invokevirtual #23                 // Method org/apache/logging/log4j/core/config/plugins/util/PluginType.getPluginClass:()Ljava/lang/Class;
      65: astore        8
      67: ldc           #2                  // class org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory
      69: aload         8
      71: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      74: istore        9
      76: iload         9
      78: ifeq          110
      81: aload         6
      83: aload         8
      85: invokestatic  #25                 // Method instantiateFactory:(Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory;
      88: astore        10
      90: aload_1
      91: aload_2
      92: aload         10
      94: invokestatic  #26                 // Method castFactory:(Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory;)Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory;
      97: astore        11
      99: aload         11
     101: ifnull        110
     104: aload_3
     105: aload         11
     107: invokestatic  #27                 // Method addFactory:(Ljava/util/Map;Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory;)V
     110: goto          25
     113: aload_3
     114: areturn

  private static org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory<?, ?> instantiateFactory(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method org/apache/logging/log4j/core/config/plugins/util/PluginUtil.instantiatePlugin:(Ljava/lang/Class;)Ljava/lang/Object;
       4: checkcast     #2                  // class org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory
       7: areturn
       8: astore_2
       9: ldc           #30                 // String failed instantiating resolver factory plugin %s of name %s
      11: iconst_2
      12: anewarray     #31                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_1
      18: aastore
      19: dup
      20: iconst_1
      21: aload_0
      22: aastore
      23: invokestatic  #32                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: astore_3
      27: new           #33                 // class java/lang/RuntimeException
      30: dup
      31: aload_3
      32: aload_2
      33: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  private static <V, C extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverContext<V, C>, F extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory<V, C>> F castFactory(java.lang.Class<V>, java.lang.Class<C>, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory<?, ?>);
    Code:
       0: aload_2
       1: invokeinterface #35,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory.getValueClass:()Ljava/lang/Class;
       6: astore_3
       7: aload_2
       8: invokeinterface #36,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory.getContextClass:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload_3
      17: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: istore        5
      22: aload_1
      23: aload         4
      25: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      28: istore        6
      30: iload         5
      32: ifeq          46
      35: iload         6
      37: ifeq          46
      40: aload_2
      41: astore        7
      43: aload         7
      45: areturn
      46: aconst_null
      47: areturn

  private static <V, C extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverContext<V, C>, F extends org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory<V, C>> void addFactory(java.util.Map<java.lang.String, F>, F);
    Code:
       0: aload_1
       1: invokeinterface #37,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory.getName:()Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: aload_2
       9: aload_1
      10: invokeinterface #38,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #2                  // class org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverFactory
      18: astore_3
      19: aload_3
      20: ifnull        56
      23: ldc           #39                 // String found resolver factories with overlapping names: %s (%s and %s)
      25: iconst_3
      26: anewarray     #31                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_2
      32: aastore
      33: dup
      34: iconst_1
      35: aload_3
      36: aastore
      37: dup
      38: iconst_2
      39: aload_1
      40: aastore
      41: invokestatic  #32                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: astore        4
      46: new           #40                 // class java/lang/IllegalArgumentException
      49: dup
      50: aload         4
      52: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: return

  static {};
    Code:
       0: invokestatic  #42                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
