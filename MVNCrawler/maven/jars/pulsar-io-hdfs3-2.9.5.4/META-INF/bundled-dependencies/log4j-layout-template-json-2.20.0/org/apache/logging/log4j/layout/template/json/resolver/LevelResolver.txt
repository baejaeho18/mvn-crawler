Compiled from "LevelResolver.java"
public final class org.apache.logging.log4j.layout.template.json.resolver.LevelResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private static final java.lang.String[] SEVERITY_CODE_RESOLUTION_BY_STANDARD_LEVEL_ORDINAL;

  private static final org.apache.logging.log4j.layout.template.json.resolver.EventResolver SEVERITY_CODE_RESOLVER;

  private final org.apache.logging.log4j.layout.template.json.resolver.EventResolver internalResolver;

  org.apache.logging.log4j.layout.template.json.resolver.LevelResolver(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #2                  // Method createResolver:(Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolverContext;Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      10: putfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      13: return

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createResolver(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method org/apache/logging/log4j/layout/template/json/resolver/EventResolverContext.getJsonWriter:()Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;
       4: astore_2
       5: aload_1
       6: ldc           #5                  // String field
       8: invokevirtual #6                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_3
      12: ldc           #7                  // String name
      14: aload_3
      15: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          26
      21: aload_2
      22: invokestatic  #9                  // Method createNameResolver:(Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      25: areturn
      26: ldc           #10                 // String severity
      28: aload_3
      29: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          111
      35: aload_1
      36: iconst_2
      37: anewarray     #11                 // class java/lang/String
      40: dup
      41: iconst_0
      42: ldc           #10                 // String severity
      44: aastore
      45: dup
      46: iconst_1
      47: ldc           #5                  // String field
      49: aastore
      50: invokevirtual #12                 // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:([Ljava/lang/String;)Ljava/lang/String;
      53: astore        4
      55: ldc           #13                 // String keyword
      57: aload         4
      59: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          70
      65: aload_2
      66: invokestatic  #14                 // Method createSeverityKeywordResolver:(Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      69: areturn
      70: ldc           #15                 // String code
      72: aload         4
      74: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          84
      80: getstatic     #16                 // Field SEVERITY_CODE_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      83: areturn
      84: new           #17                 // class java/lang/IllegalArgumentException
      87: dup
      88: new           #18                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #20                 // String unknown severity field:
      97: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_1
     101: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     104: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: new           #17                 // class java/lang/IllegalArgumentException
     114: dup
     115: new           #18                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #25                 // String unknown field:
     124: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_1
     128: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     137: athrow

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createNameResolver(org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: invokestatic  #26                 // Method org/apache/logging/log4j/Level.values:()[Lorg/apache/logging/log4j/Level;
       3: invokestatic  #27                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       6: invokestatic  #28                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       9: aload_0
      10: invokedynamic #29,  0             // InvokeDynamic #0:apply:(Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)Ljava/util/function/Function;
      15: invokestatic  #30                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      18: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      23: checkcast     #32                 // class java/util/Map
      26: astore_1
      27: aload_1
      28: invokedynamic #33,  0             // InvokeDynamic #1:resolve:(Ljava/util/Map;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      33: areturn

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createSeverityKeywordResolver(org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: invokestatic  #26                 // Method org/apache/logging/log4j/Level.values:()[Lorg/apache/logging/log4j/Level;
       3: invokestatic  #27                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       6: invokestatic  #28                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       9: aload_0
      10: invokedynamic #34,  0             // InvokeDynamic #2:apply:(Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)Ljava/util/function/Function;
      15: invokestatic  #30                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      18: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      23: checkcast     #32                 // class java/util/Map
      26: astore_1
      27: aload_1
      28: invokedynamic #35,  0             // InvokeDynamic #3:resolve:(Ljava/util/Map;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      33: areturn

  static java.lang.String getName();
    Code:
       0: ldc           #36                 // String level
       2: areturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #37,  3           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.resolve:(Ljava/lang/Object;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      11: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #38                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #39                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  private static void lambda$createSeverityKeywordResolver$6(java.util.Map, org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #40,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
       7: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #11                 // class java/lang/String
      15: astore_3
      16: aload_2
      17: aload_3
      18: invokevirtual #42                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeRawString:(Ljava/lang/CharSequence;)V
      21: return

  private static java.lang.String lambda$createSeverityKeywordResolver$5(org.apache.logging.log4j.layout.template.json.util.JsonWriter, org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokedynamic #43,  0             // InvokeDynamic #4:run:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)Ljava/lang/Runnable;
       8: invokevirtual #44                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.use:(Ljava/lang/Runnable;)Ljava/lang/String;
      11: areturn

  private static void lambda$null$4(org.apache.logging.log4j.Level, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method org/apache/logging/log4j/core/net/Severity.getSeverity:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/net/Severity;
       4: invokevirtual #46                 // Method org/apache/logging/log4j/core/net/Severity.name:()Ljava/lang/String;
       7: astore_2
       8: aload_1
       9: aload_2
      10: invokevirtual #47                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      13: return

  private static void lambda$createNameResolver$3(java.util.Map, org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #40,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
       7: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #11                 // class java/lang/String
      15: astore_3
      16: aload_2
      17: aload_3
      18: invokevirtual #42                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeRawString:(Ljava/lang/CharSequence;)V
      21: return

  private static java.lang.String lambda$createNameResolver$2(org.apache.logging.log4j.layout.template.json.util.JsonWriter, org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokedynamic #48,  0             // InvokeDynamic #5:run:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)Ljava/lang/Runnable;
       8: invokevirtual #44                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.use:(Ljava/lang/Runnable;)Ljava/lang/String;
      11: areturn

  private static void lambda$null$1(org.apache.logging.log4j.Level, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method org/apache/logging/log4j/Level.name:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #47                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeString:(Ljava/lang/CharSequence;)V
      10: return

  private static void lambda$static$0(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
       6: invokevirtual #50                 // Method org/apache/logging/log4j/Level.getStandardLevel:()Lorg/apache/logging/log4j/spi/StandardLevel;
       9: invokevirtual #51                 // Method org/apache/logging/log4j/spi/StandardLevel.ordinal:()I
      12: istore_2
      13: getstatic     #52                 // Field SEVERITY_CODE_RESOLUTION_BY_STANDARD_LEVEL_ORDINAL:[Ljava/lang/String;
      16: iload_2
      17: aaload
      18: astore_3
      19: aload_1
      20: aload_3
      21: invokevirtual #42                 // Method org/apache/logging/log4j/layout/template/json/util/JsonWriter.writeRawString:(Ljava/lang/CharSequence;)V
      24: return

  static {};
    Code:
       0: invokestatic  #26                 // Method org/apache/logging/log4j/Level.values:()[Lorg/apache/logging/log4j/Level;
       3: arraylength
       4: istore_0
       5: iload_0
       6: iconst_1
       7: iadd
       8: anewarray     #11                 // class java/lang/String
      11: astore_1
      12: invokestatic  #26                 // Method org/apache/logging/log4j/Level.values:()[Lorg/apache/logging/log4j/Level;
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     69
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: aload         5
      36: invokevirtual #50                 // Method org/apache/logging/log4j/Level.getStandardLevel:()Lorg/apache/logging/log4j/spi/StandardLevel;
      39: invokevirtual #51                 // Method org/apache/logging/log4j/spi/StandardLevel.ordinal:()I
      42: istore        6
      44: aload         5
      46: invokestatic  #45                 // Method org/apache/logging/log4j/core/net/Severity.getSeverity:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/net/Severity;
      49: invokevirtual #53                 // Method org/apache/logging/log4j/core/net/Severity.getCode:()I
      52: istore        7
      54: aload_1
      55: iload         6
      57: iload         7
      59: invokestatic  #54                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      62: aastore
      63: iinc          4, 1
      66: goto          22
      69: aload_1
      70: putstatic     #52                 // Field SEVERITY_CODE_RESOLUTION_BY_STANDARD_LEVEL_ORDINAL:[Ljava/lang/String;
      73: invokedynamic #55,  0             // InvokeDynamic #6:resolve:()Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      78: putstatic     #16                 // Field SEVERITY_CODE_RESOLVER:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      81: return
}
