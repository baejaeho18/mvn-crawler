Compiled from "ReadOnlyStringMapResolver.java"
class org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver implements org.apache.logging.log4j.layout.template.json.resolver.EventResolver {
  private final org.apache.logging.log4j.layout.template.json.resolver.EventResolver internalResolver;

  org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig, java.util.function.Function<org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.util.ReadOnlyStringMap>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokestatic  #2                  // Method createResolver:(Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolverContext;Lorg/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig;Ljava/util/function/Function;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      11: putfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      14: return

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createResolver(org.apache.logging.log4j.layout.template.json.resolver.EventResolverContext, org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverConfig, java.util.function.Function<org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.util.ReadOnlyStringMap>);
    Code:
       0: aload_1
       1: ldc           #4                  // String flatten
       3: invokevirtual #5                  // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getObject:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_3
       7: aload_3
       8: ifnonnull     17
      11: iconst_0
      12: istore        4
      14: goto          76
      17: aload_3
      18: instanceof    #6                  // class java/lang/Boolean
      21: ifeq          36
      24: aload_3
      25: checkcast     #6                  // class java/lang/Boolean
      28: invokevirtual #7                  // Method java/lang/Boolean.booleanValue:()Z
      31: istore        4
      33: goto          76
      36: aload_3
      37: instanceof    #8                  // class java/util/Map
      40: ifeq          49
      43: iconst_1
      44: istore        4
      46: goto          76
      49: new           #9                  // class java/lang/IllegalArgumentException
      52: dup
      53: new           #10                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #12                 // String invalid flatten option:
      62: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_1
      66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_1
      77: iconst_2
      78: anewarray     #17                 // class java/lang/String
      81: dup
      82: iconst_0
      83: ldc           #4                  // String flatten
      85: aastore
      86: dup
      87: iconst_1
      88: ldc           #18                 // String prefix
      90: aastore
      91: invokevirtual #19                 // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:([Ljava/lang/String;)Ljava/lang/String;
      94: astore        5
      96: aload_1
      97: ldc           #20                 // String key
      99: invokevirtual #21                 // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
     102: astore        6
     104: aload         6
     106: ifnull        141
     109: iload         4
     111: ifeq          141
     114: new           #9                  // class java/lang/IllegalArgumentException
     117: dup
     118: new           #10                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #22                 // String key and flatten options cannot be combined:
     127: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_1
     131: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     134: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload_1
     142: ldc           #23                 // String pattern
     144: invokevirtual #21                 // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
     147: astore        7
     149: aload         7
     151: ifnull        186
     154: aload         6
     156: ifnull        186
     159: new           #9                  // class java/lang/IllegalArgumentException
     162: dup
     163: new           #10                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     170: ldc           #24                 // String pattern and key options cannot be combined:
     172: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload_1
     176: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     179: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     185: athrow
     186: aload_1
     187: ldc           #25                 // String replacement
     189: invokevirtual #21                 // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
     192: astore        8
     194: aload         7
     196: ifnonnull     231
     199: aload         8
     201: ifnull        231
     204: new           #9                  // class java/lang/IllegalArgumentException
     207: dup
     208: new           #10                 // class java/lang/StringBuilder
     211: dup
     212: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     215: ldc           #26                 // String replacement cannot be provided without a pattern:
     217: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: aload_1
     221: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     224: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     227: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     230: athrow
     231: aload_1
     232: ldc           #27                 // String stringified
     234: iconst_0
     235: invokevirtual #28                 // Method org/apache/logging/log4j/layout/template/json/resolver/TemplateResolverConfig.getBoolean:(Ljava/lang/String;Z)Z
     238: istore        9
     240: aload         6
     242: ifnull        254
     245: aload         6
     247: iload         9
     249: aload_2
     250: invokestatic  #29                 // Method createKeyResolver:(Ljava/lang/String;ZLjava/util/function/Function;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
     253: areturn
     254: aload_0
     255: invokevirtual #30                 // Method org/apache/logging/log4j/layout/template/json/resolver/EventResolverContext.getRecyclerFactory:()Lorg/apache/logging/log4j/layout/template/json/util/RecyclerFactory;
     258: astore        10
     260: aload         10
     262: iload         4
     264: aload         5
     266: aload         7
     268: aload         8
     270: iload         9
     272: aload_2
     273: invokestatic  #31                 // Method createResolver:(Lorg/apache/logging/log4j/layout/template/json/util/RecyclerFactory;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/function/Function;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
     276: areturn

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createKeyResolver(java.lang.String, boolean, java.util.function.Function<org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.util.ReadOnlyStringMap>);
    Code:
       0: new           #32                 // class org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$1
       3: dup
       4: aload_2
       5: aload_0
       6: iload_1
       7: invokespecial #33                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$1."<init>":(Ljava/util/function/Function;Ljava/lang/String;Z)V
      10: areturn

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createResolver(org.apache.logging.log4j.layout.template.json.util.RecyclerFactory, boolean, java.lang.String, java.lang.String, java.lang.String, boolean, java.util.function.Function<org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.util.ReadOnlyStringMap>);
    Code:
       0: aload_3
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_3
       9: invokestatic  #34                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      12: astore        7
      14: aload_0
      15: aload_2
      16: aload         7
      18: aload         4
      20: iload         5
      22: invokedynamic #35,  0             // InvokeDynamic #0:get:(Ljava/lang/String;Ljava/util/regex/Pattern;Ljava/lang/String;Z)Ljava/util/function/Supplier;
      27: invokeinterface #36,  2           // InterfaceMethod org/apache/logging/log4j/layout/template/json/util/RecyclerFactory.create:(Ljava/util/function/Supplier;)Lorg/apache/logging/log4j/layout/template/json/util/Recycler;
      32: astore        8
      34: iload_1
      35: aload         8
      37: aload         6
      39: invokestatic  #37                 // Method createResolver:(ZLorg/apache/logging/log4j/layout/template/json/util/Recycler;Ljava/util/function/Function;)Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
      42: areturn

  private static org.apache.logging.log4j.layout.template.json.resolver.EventResolver createResolver(boolean, org.apache.logging.log4j.layout.template.json.util.Recycler<org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext>, java.util.function.Function<org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.util.ReadOnlyStringMap>);
    Code:
       0: new           #38                 // class org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$2
       3: dup
       4: iload_0
       5: aload_2
       6: aload_1
       7: invokespecial #39                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$2."<init>":(ZLjava/util/function/Function;Lorg/apache/logging/log4j/layout/template/json/util/Recycler;)V
      10: areturn

  public boolean isFlattening();
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: invokeinterface #40,  1           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.isFlattening:()Z
       9: ireturn

  public boolean isResolvable(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.isResolvable:(Ljava/lang/Object;)Z
      10: ireturn

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: aload_1
       5: aload_2
       6: invokeinterface #42,  3           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.resolve:(Ljava/lang/Object;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
      11: return

  public void resolve(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.layout.template.json.util.JsonWriter, boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field internalResolver:Lorg/apache/logging/log4j/layout/template/json/resolver/EventResolver;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #43,  4           // InterfaceMethod org/apache/logging/log4j/layout/template/json/resolver/EventResolver.resolve:(Ljava/lang/Object;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;Z)V
      12: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: iload_3
       7: invokevirtual #45                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;Z)V
      10: return

  public void resolve(java.lang.Object, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #46                 // Method resolve:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;)V
       9: return

  public boolean isResolvable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class org/apache/logging/log4j/core/LogEvent
       5: invokevirtual #47                 // Method isResolvable:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       8: ireturn

  private static org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext lambda$createResolver$0(java.lang.String, java.util.regex.Pattern, java.lang.String, boolean);
    Code:
       0: new           #48                 // class org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext
       3: dup
       4: aconst_null
       5: invokespecial #49                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext."<init>":(Lorg/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$1;)V
       8: astore        4
      10: aload_0
      11: ifnull        35
      14: aload         4
      16: aload_0
      17: invokestatic  #50                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext.access$502:(Lorg/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext;Ljava/lang/String;)Ljava/lang/String;
      20: pop
      21: aload         4
      23: new           #10                 // class java/lang/StringBuilder
      26: dup
      27: aload_0
      28: invokespecial #51                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      31: invokestatic  #52                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext.access$602:(Lorg/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
      34: pop
      35: aload         4
      37: aload_1
      38: invokestatic  #53                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext.access$302:(Lorg/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext;Ljava/util/regex/Pattern;)Ljava/util/regex/Pattern;
      41: pop
      42: aload         4
      44: aload_2
      45: invokestatic  #54                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext.access$402:(Lorg/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext;Ljava/lang/String;)Ljava/lang/String;
      48: pop
      49: aload         4
      51: iload_3
      52: invokestatic  #55                 // Method org/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext.access$702:(Lorg/apache/logging/log4j/layout/template/json/resolver/ReadOnlyStringMapResolver$LoopContext;Z)Z
      55: pop
      56: aload         4
      58: areturn
}
