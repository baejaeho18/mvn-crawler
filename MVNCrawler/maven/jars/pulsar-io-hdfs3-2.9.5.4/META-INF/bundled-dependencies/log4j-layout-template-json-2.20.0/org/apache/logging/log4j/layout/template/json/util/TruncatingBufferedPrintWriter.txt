Compiled from "TruncatingBufferedPrintWriter.java"
public final class org.apache.logging.log4j.layout.template.json.util.TruncatingBufferedPrintWriter extends java.io.PrintWriter implements java.lang.CharSequence {
  private final org.apache.logging.log4j.layout.template.json.util.TruncatingBufferedWriter writer;

  private org.apache.logging.log4j.layout.template.json.util.TruncatingBufferedPrintWriter(org.apache.logging.log4j.layout.template.json.util.TruncatingBufferedWriter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;Z)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
      11: return

  public static org.apache.logging.log4j.layout.template.json.util.TruncatingBufferedPrintWriter ofCapacity(int);
    Code:
       0: iload_0
       1: ifge          31
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: new           #4                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #6                  // String was expecting a non-negative capacity:
      17: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: new           #11                 // class org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter
      34: dup
      35: iload_0
      36: invokespecial #12                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter."<init>":(I)V
      39: astore_1
      40: new           #13                 // class org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedPrintWriter
      43: dup
      44: aload_1
      45: invokespecial #14                 // Method "<init>":(Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;)V
      48: areturn

  public char[] buffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: invokevirtual #15                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.buffer:()[C
       7: areturn

  public int position();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: invokevirtual #16                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.position:()I
       7: ireturn

  public void position(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: iload_1
       5: invokevirtual #17                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.position:(I)V
       8: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: invokevirtual #18                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.capacity:()I
       7: ireturn

  public boolean truncated();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: invokevirtual #19                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.truncated:()Z
       7: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: invokevirtual #20                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.length:()I
       7: ireturn

  public char charAt(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: iload_1
       5: invokevirtual #21                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.charAt:(I)C
       8: ireturn

  public java.io.PrintWriter append(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: aload_1
       5: invokevirtual #22                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       8: pop
       9: aload_0
      10: areturn

  public java.io.PrintWriter append(java.lang.CharSequence, int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #23                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
      10: pop
      11: aload_0
      12: areturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: iload_1
       5: iload_2
       6: invokevirtual #24                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.subSequence:(II)Ljava/lang/String;
       9: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: invokevirtual #25                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.close:()V
       7: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter;
       4: invokevirtual #26                 // Method org/apache/logging/log4j/layout/template/json/util/TruncatingBufferedWriter.toString:()Ljava/lang/String;
       7: areturn

  public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #27                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;
       7: areturn

  public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;
       5: areturn

  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #27                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;
       7: areturn

  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;
       5: areturn
}
