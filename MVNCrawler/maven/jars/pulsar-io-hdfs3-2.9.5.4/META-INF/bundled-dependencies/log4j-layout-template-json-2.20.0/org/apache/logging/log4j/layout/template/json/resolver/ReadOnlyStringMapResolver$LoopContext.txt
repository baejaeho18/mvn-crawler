Compiled from "ReadOnlyStringMapResolver.java"
final class org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext {
  private java.lang.String prefix;

  private java.lang.StringBuilder prefixedKey;

  private java.util.regex.Pattern pattern;

  private java.lang.String replacement;

  private boolean stringified;

  private org.apache.logging.log4j.layout.template.json.util.JsonWriter jsonWriter;

  private int initJsonWriterStringBuilderLength;

  private boolean succeedingEntry;

  private org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: return

  static org.apache.logging.log4j.layout.template.json.util.JsonWriter access$002(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, org.apache.logging.log4j.layout.template.json.util.JsonWriter);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #9                  // Field jsonWriter:Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;
       6: areturn

  static int access$102(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #8                  // Field initJsonWriterStringBuilderLength:I
       6: ireturn

  static boolean access$202(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #7                  // Field succeedingEntry:Z
       6: ireturn

  static java.util.regex.Pattern access$300(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pattern:Ljava/util/regex/Pattern;
       4: areturn

  static java.lang.String access$400(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #5                  // Field replacement:Ljava/lang/String;
       4: areturn

  static boolean access$200(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field succeedingEntry:Z
       4: ireturn

  static int access$100(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #8                  // Field initJsonWriterStringBuilderLength:I
       4: ireturn

  static org.apache.logging.log4j.layout.template.json.util.JsonWriter access$000(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #9                  // Field jsonWriter:Lorg/apache/logging/log4j/layout/template/json/util/JsonWriter;
       4: areturn

  static java.lang.String access$500(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prefix:Ljava/lang/String;
       4: areturn

  static java.lang.StringBuilder access$600(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefixedKey:Ljava/lang/StringBuilder;
       4: areturn

  static boolean access$700(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stringified:Z
       4: ireturn

  org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static java.lang.String access$502(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field prefix:Ljava/lang/String;
       6: areturn

  static java.lang.StringBuilder access$602(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field prefixedKey:Ljava/lang/StringBuilder;
       6: areturn

  static java.util.regex.Pattern access$302(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, java.util.regex.Pattern);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field pattern:Ljava/util/regex/Pattern;
       6: areturn

  static java.lang.String access$402(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field replacement:Ljava/lang/String;
       6: areturn

  static boolean access$702(org.apache.logging.log4j.layout.template.json.resolver.ReadOnlyStringMapResolver$LoopContext, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field stringified:Z
       6: ireturn
}
