Compiled from "Line.java"
class org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform implements org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> {
  private double cXX;

  private double cXY;

  private double cX1;

  private double cYX;

  private double cYY;

  private double cY1;

  private double c1Y;

  private double c1X;

  private double c11;

  public org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform(java.awt.geom.AffineTransform) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: bipush        6
       6: newarray       double
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokevirtual #2                  // Method java/awt/geom/AffineTransform.getMatrix:([D)V
      14: aload_0
      15: aload_2
      16: iconst_0
      17: daload
      18: putfield      #3                  // Field cXX:D
      21: aload_0
      22: aload_2
      23: iconst_2
      24: daload
      25: putfield      #4                  // Field cXY:D
      28: aload_0
      29: aload_2
      30: iconst_4
      31: daload
      32: putfield      #5                  // Field cX1:D
      35: aload_0
      36: aload_2
      37: iconst_1
      38: daload
      39: putfield      #6                  // Field cYX:D
      42: aload_0
      43: aload_2
      44: iconst_3
      45: daload
      46: putfield      #7                  // Field cYY:D
      49: aload_0
      50: aload_2
      51: iconst_5
      52: daload
      53: putfield      #8                  // Field cY1:D
      56: aload_0
      57: aload_0
      58: getfield      #4                  // Field cXY:D
      61: aload_0
      62: getfield      #8                  // Field cY1:D
      65: dmul
      66: aload_0
      67: getfield      #7                  // Field cYY:D
      70: aload_0
      71: getfield      #5                  // Field cX1:D
      74: dmul
      75: dsub
      76: putfield      #9                  // Field c1Y:D
      79: aload_0
      80: aload_0
      81: getfield      #3                  // Field cXX:D
      84: aload_0
      85: getfield      #8                  // Field cY1:D
      88: dmul
      89: aload_0
      90: getfield      #6                  // Field cYX:D
      93: aload_0
      94: getfield      #5                  // Field cX1:D
      97: dmul
      98: dsub
      99: putfield      #10                 // Field c1X:D
     102: aload_0
     103: aload_0
     104: getfield      #3                  // Field cXX:D
     107: aload_0
     108: getfield      #7                  // Field cYY:D
     111: dmul
     112: aload_0
     113: getfield      #6                  // Field cYX:D
     116: aload_0
     117: getfield      #4                  // Field cXY:D
     120: dmul
     121: dsub
     122: putfield      #11                 // Field c11:D
     125: aload_0
     126: getfield      #11                 // Field c11:D
     129: invokestatic  #12                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     132: ldc2_w        #13                 // double 1.0E-20d
     135: dcmpg
     136: ifge          154
     139: new           #15                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
     142: dup
     143: getstatic     #16                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NON_INVERTIBLE_TRANSFORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
     146: iconst_0
     147: anewarray     #17                 // class java/lang/Object
     150: invokespecial #18                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     153: athrow
     154: return

  public org.apache.commons.math3.geometry.euclidean.twod.Vector2D apply(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: checkcast     #19                 // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
       4: astore_2
       5: aload_2
       6: invokevirtual #20                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
       9: dstore_3
      10: aload_2
      11: invokevirtual #21                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      14: dstore        5
      16: new           #19                 // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
      19: dup
      20: aload_0
      21: getfield      #3                  // Field cXX:D
      24: dload_3
      25: dmul
      26: aload_0
      27: getfield      #4                  // Field cXY:D
      30: dload         5
      32: dmul
      33: dadd
      34: aload_0
      35: getfield      #5                  // Field cX1:D
      38: dadd
      39: aload_0
      40: getfield      #6                  // Field cYX:D
      43: dload_3
      44: dmul
      45: aload_0
      46: getfield      #7                  // Field cYY:D
      49: dload         5
      51: dmul
      52: dadd
      53: aload_0
      54: getfield      #8                  // Field cY1:D
      57: dadd
      58: invokespecial #22                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D."<init>":(DD)V
      61: areturn

  public org.apache.commons.math3.geometry.euclidean.twod.Line apply(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: checkcast     #23                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
       4: astore_2
       5: aload_0
       6: getfield      #10                 // Field c1X:D
       9: aload_2
      10: invokestatic  #24                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$000:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      13: dmul
      14: aload_0
      15: getfield      #9                  // Field c1Y:D
      18: aload_2
      19: invokestatic  #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$100:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      22: dmul
      23: dadd
      24: aload_0
      25: getfield      #11                 // Field c11:D
      28: aload_2
      29: invokestatic  #26                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$200:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      32: dmul
      33: dadd
      34: dstore_3
      35: aload_0
      36: getfield      #3                  // Field cXX:D
      39: aload_2
      40: invokestatic  #24                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$000:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      43: dmul
      44: aload_0
      45: getfield      #4                  // Field cXY:D
      48: aload_2
      49: invokestatic  #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$100:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      52: dmul
      53: dadd
      54: dstore        5
      56: aload_0
      57: getfield      #6                  // Field cYX:D
      60: aload_2
      61: invokestatic  #24                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$000:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      64: dmul
      65: aload_0
      66: getfield      #7                  // Field cYY:D
      69: aload_2
      70: invokestatic  #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.access$100:(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
      73: dmul
      74: dadd
      75: dstore        7
      77: dconst_1
      78: dload         7
      80: dload         7
      82: dmul
      83: dload         5
      85: dload         5
      87: dmul
      88: dadd
      89: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      92: ddiv
      93: dstore        9
      95: new           #23                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      98: dup
      99: ldc2_w        #28                 // double 3.141592653589793d
     102: dload         7
     104: dneg
     105: dload         5
     107: dneg
     108: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.atan2:(DD)D
     111: dadd
     112: dload         9
     114: dload         5
     116: dmul
     117: dload         9
     119: dload         7
     121: dmul
     122: dload         9
     124: dload_3
     125: dmul
     126: aconst_null
     127: invokespecial #31                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line."<init>":(DDDDLorg/apache/commons/math3/geometry/euclidean/twod/Line$1;)V
     130: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       6: checkcast     #33                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
       9: astore        4
      11: aload_2
      12: checkcast     #23                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      15: astore        5
      17: aload_3
      18: checkcast     #23                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      21: astore        6
      23: aload         6
      25: aload_0
      26: aload         5
      28: aload         4
      30: invokevirtual #34                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.getLocation:()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      33: invokevirtual #35                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      36: invokevirtual #36                 // Method apply:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      39: invokevirtual #37                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSubSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
      42: astore        7
      44: new           #33                 // class org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
      47: dup
      48: aload         7
      50: aload         4
      52: invokevirtual #38                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.isDirect:()Z
      55: invokespecial #39                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint."<init>":(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Z)V
      58: invokevirtual #40                 // Method org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.wholeHyperplane:()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
      61: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method apply:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
       5: areturn

  public org.apache.commons.math3.geometry.Vector apply(org.apache.commons.math3.geometry.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method apply:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       5: areturn
}
