Compiled from "ArrayFieldVector.java"
public class org.apache.commons.math3.linear.ArrayFieldVector<T extends org.apache.commons.math3.FieldElement<T>> implements org.apache.commons.math3.linear.FieldVector<T>, java.io.Serializable {
  private static final long serialVersionUID;

  private T[] data;

  private final org.apache.commons.math3.Field<T> field;

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/Field;I)V
       6: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       9: aload_0
      10: aload_0
      11: iload_2
      12: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      15: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      18: aload_0
      19: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      22: aload_1
      23: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      28: invokestatic  #7                  // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      31: return

  public org.apache.commons.math3.linear.ArrayFieldVector(int, T);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
       7: iload_1
       8: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/Field;I)V
      11: aload_0
      12: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: aload_2
      16: invokestatic  #7                  // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      19: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: iconst_0
      19: aaload
      20: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      25: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      28: aload_0
      29: aload_1
      30: invokevirtual #11                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      33: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      36: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      39: goto          58
      42: astore_2
      43: new           #14                 // class org/apache/commons/math3/exception/ZeroException
      46: dup
      47: getstatic     #15                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      50: iconst_0
      51: anewarray     #16                 // class java/lang/Object
      54: invokespecial #17                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      57: athrow
      58: return
    Exception table:
       from    to  target type
          16    39    42   Class java/lang/ArrayIndexOutOfBoundsException

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[]) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      21: aload_0
      22: aload_2
      23: invokevirtual #18                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      26: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      29: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], boolean) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: arraylength
      18: ifne          36
      21: new           #14                 // class org/apache/commons/math3/exception/ZeroException
      24: dup
      25: getstatic     #15                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      28: iconst_0
      29: anewarray     #16                 // class java/lang/Object
      32: invokespecial #17                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: iconst_0
      39: aaload
      40: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      45: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      48: aload_0
      49: iload_2
      50: ifeq          63
      53: aload_1
      54: invokevirtual #19                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      57: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      60: goto          64
      63: aload_1
      64: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      67: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[], boolean) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      21: aload_0
      22: iload_3
      23: ifeq          36
      26: aload_2
      27: invokevirtual #20                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      30: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      33: goto          37
      36: aload_2
      37: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      40: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], int, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: arraylength
      18: iload_2
      19: iload_3
      20: iadd
      21: if_icmpge     44
      24: new           #21                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      27: dup
      28: iload_2
      29: iload_3
      30: iadd
      31: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aload_1
      35: arraylength
      36: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: iconst_1
      40: invokespecial #23                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      43: athrow
      44: aload_0
      45: aload_1
      46: iconst_0
      47: aaload
      48: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      53: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      56: aload_0
      57: aload_0
      58: iload_3
      59: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      62: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      65: aload_1
      66: iload_2
      67: aload_0
      68: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      71: iconst_0
      72: iload_3
      73: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      76: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[], int, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_2
      17: arraylength
      18: iload_3
      19: iload         4
      21: iadd
      22: if_icmpge     46
      25: new           #21                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      28: dup
      29: iload_3
      30: iload         4
      32: iadd
      33: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aload_2
      37: arraylength
      38: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: iconst_1
      42: invokespecial #23                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      51: aload_0
      52: aload_0
      53: iload         4
      55: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      58: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      61: aload_2
      62: iload_3
      63: aload_0
      64: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      67: iconst_0
      68: iload         4
      70: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getField:()Lorg/apache/commons/math3/Field;
      23: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      26: aload_0
      27: aload_0
      28: aload_1
      29: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      34: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      37: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      40: iconst_0
      41: istore_2
      42: iload_2
      43: aload_0
      44: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      47: arraylength
      48: if_icmpge     70
      51: aload_0
      52: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      55: iload_2
      56: aload_1
      57: iload_2
      58: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      63: aastore
      64: iinc          2, 1
      67: goto          42
      70: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #28                 // Method getField:()Lorg/apache/commons/math3/Field;
      21: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      24: aload_0
      25: aload_1
      26: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      29: invokevirtual #29                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      32: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      35: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      38: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>, boolean) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #28                 // Method getField:()Lorg/apache/commons/math3/Field;
      21: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      24: aload_0
      25: iload_2
      26: ifeq          42
      29: aload_1
      30: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: invokevirtual #30                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      36: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      39: goto          46
      42: aload_1
      43: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      46: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      49: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>, org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     20
      12: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      15: dup
      16: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: invokevirtual #28                 // Method getField:()Lorg/apache/commons/math3/Field;
      25: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      28: aload_0
      29: aload_0
      30: aload_1
      31: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: arraylength
      35: aload_2
      36: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      39: arraylength
      40: iadd
      41: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      44: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      47: aload_1
      48: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      51: iconst_0
      52: aload_0
      53: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      56: iconst_0
      57: aload_1
      58: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      61: arraylength
      62: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      65: aload_2
      66: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      69: iconst_0
      70: aload_0
      71: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      74: aload_1
      75: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      78: arraylength
      79: aload_2
      80: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      83: arraylength
      84: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      87: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>, T[]) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     20
      12: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      15: dup
      16: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: invokevirtual #28                 // Method getField:()Lorg/apache/commons/math3/Field;
      25: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      28: aload_0
      29: aload_0
      30: aload_1
      31: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: arraylength
      35: aload_2
      36: arraylength
      37: iadd
      38: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      41: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      44: aload_1
      45: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      48: iconst_0
      49: aload_0
      50: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      53: iconst_0
      54: aload_1
      55: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      58: arraylength
      59: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload_2
      63: iconst_0
      64: aload_0
      65: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      68: aload_1
      69: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      72: arraylength
      73: aload_2
      74: arraylength
      75: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     20
      12: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      15: dup
      16: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_2
      22: invokevirtual #28                 // Method getField:()Lorg/apache/commons/math3/Field;
      25: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      28: aload_0
      29: aload_0
      30: aload_1
      31: arraylength
      32: aload_2
      33: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: arraylength
      37: iadd
      38: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      41: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      44: aload_1
      45: iconst_0
      46: aload_0
      47: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      50: iconst_0
      51: aload_1
      52: arraylength
      53: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_2
      57: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      60: iconst_0
      61: aload_0
      62: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      65: aload_1
      66: arraylength
      67: aload_2
      68: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      71: arraylength
      72: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      75: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], T[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     20
      12: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      15: dup
      16: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      19: athrow
      20: aload_1
      21: arraylength
      22: aload_2
      23: arraylength
      24: iadd
      25: ifne          43
      28: new           #14                 // class org/apache/commons/math3/exception/ZeroException
      31: dup
      32: getstatic     #15                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      35: iconst_0
      36: anewarray     #16                 // class java/lang/Object
      39: invokespecial #17                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      42: athrow
      43: aload_0
      44: aload_0
      45: aload_1
      46: arraylength
      47: aload_2
      48: arraylength
      49: iadd
      50: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      53: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      56: aload_1
      57: iconst_0
      58: aload_0
      59: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      62: iconst_0
      63: aload_1
      64: arraylength
      65: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: aload_2
      69: iconst_0
      70: aload_0
      71: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      74: aload_1
      75: arraylength
      76: aload_2
      77: arraylength
      78: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      81: aload_0
      82: aload_0
      83: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      86: iconst_0
      87: aaload
      88: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      93: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      96: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[], T[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ifnull        12
       8: aload_3
       9: ifnonnull     20
      12: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
      15: dup
      16: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      19: athrow
      20: aload_2
      21: arraylength
      22: aload_3
      23: arraylength
      24: iadd
      25: ifne          43
      28: new           #14                 // class org/apache/commons/math3/exception/ZeroException
      31: dup
      32: getstatic     #15                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      35: iconst_0
      36: anewarray     #16                 // class java/lang/Object
      39: invokespecial #17                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      42: athrow
      43: aload_0
      44: aload_0
      45: aload_2
      46: arraylength
      47: aload_3
      48: arraylength
      49: iadd
      50: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      53: putfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      56: aload_2
      57: iconst_0
      58: aload_0
      59: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      62: iconst_0
      63: aload_2
      64: arraylength
      65: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: aload_3
      69: iconst_0
      70: aload_0
      71: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      74: aload_2
      75: arraylength
      76: aload_3
      77: arraylength
      78: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      81: aload_0
      82: aload_1
      83: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      86: return

  private T[] buildArray(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/Field.getRuntimeClass:()Ljava/lang/Class;
       9: iload_1
      10: invokestatic  #32                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      13: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      16: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      19: areturn

  public org.apache.commons.math3.Field<T> getField();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: areturn

  public org.apache.commons.math3.linear.FieldVector<T> copy();
    Code:
       0: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #34                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayFieldVector;Z)V
       9: areturn

  public org.apache.commons.math3.linear.FieldVector<T> add(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #35                 // Method add:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: arraylength
      21: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      24: astore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: arraylength
      35: if_icmpge     71
      38: aload_3
      39: iload         4
      41: aload_0
      42: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      45: iload         4
      47: aaload
      48: aload_1
      49: iload         4
      51: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      56: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      64: aastore
      65: iinc          4, 1
      68: goto          28
      71: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      74: dup
      75: aload_0
      76: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      79: aload_3
      80: iconst_0
      81: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      84: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> add(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: aload_0
      11: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      18: astore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: aload_0
      23: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      26: arraylength
      27: if_icmpge     59
      30: aload_2
      31: iload_3
      32: aload_0
      33: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: iload_3
      37: aaload
      38: aload_1
      39: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      52: aastore
      53: iinc          3, 1
      56: goto          21
      59: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      62: dup
      63: aload_0
      64: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      67: aload_2
      68: iconst_0
      69: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      72: areturn

  public org.apache.commons.math3.linear.FieldVector<T> subtract(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #42                 // Method subtract:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: arraylength
      21: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      24: astore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: arraylength
      35: if_icmpge     71
      38: aload_3
      39: iload         4
      41: aload_0
      42: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      45: iload         4
      47: aaload
      48: aload_1
      49: iload         4
      51: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      56: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      64: aastore
      65: iinc          4, 1
      68: goto          28
      71: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      74: dup
      75: aload_0
      76: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      79: aload_3
      80: iconst_0
      81: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      84: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> subtract(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: aload_0
      11: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      18: astore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: aload_0
      23: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      26: arraylength
      27: if_icmpge     59
      30: aload_2
      31: iload_3
      32: aload_0
      33: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: iload_3
      37: aaload
      38: aload_1
      39: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      52: aastore
      53: iinc          3, 1
      56: goto          21
      59: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      62: dup
      63: aload_0
      64: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      67: aload_2
      68: iconst_0
      69: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      72: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapAdd(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
       9: astore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: aload_0
      14: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: if_icmpge     45
      21: aload_2
      22: iload_3
      23: aload_0
      24: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      27: iload_3
      28: aaload
      29: aload_1
      30: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      38: aastore
      39: iinc          3, 1
      42: goto          12
      45: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      48: dup
      49: aload_0
      50: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      53: aload_2
      54: iconst_0
      55: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      58: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapAddToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       7: arraylength
       8: if_icmpge     38
      11: aload_0
      12: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: iload_2
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: iload_2
      21: aaload
      22: aload_1
      23: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      31: aastore
      32: iinc          2, 1
      35: goto          2
      38: aload_0
      39: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapSubtract(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
       9: astore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: aload_0
      14: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: if_icmpge     45
      21: aload_2
      22: iload_3
      23: aload_0
      24: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      27: iload_3
      28: aaload
      29: aload_1
      30: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      38: aastore
      39: iinc          3, 1
      42: goto          12
      45: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      48: dup
      49: aload_0
      50: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      53: aload_2
      54: iconst_0
      55: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      58: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapSubtractToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       7: arraylength
       8: if_icmpge     38
      11: aload_0
      12: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: iload_2
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: iload_2
      21: aaload
      22: aload_1
      23: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      31: aastore
      32: iinc          2, 1
      35: goto          2
      38: aload_0
      39: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapMultiply(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
       9: astore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: aload_0
      14: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: if_icmpge     45
      21: aload_2
      22: iload_3
      23: aload_0
      24: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      27: iload_3
      28: aaload
      29: aload_1
      30: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      38: aastore
      39: iinc          3, 1
      42: goto          12
      45: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      48: dup
      49: aload_0
      50: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      53: aload_2
      54: iconst_0
      55: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      58: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapMultiplyToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       7: arraylength
       8: if_icmpge     38
      11: aload_0
      12: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: iload_2
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: iload_2
      21: aaload
      22: aload_1
      23: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      31: aastore
      32: iinc          2, 1
      35: goto          2
      38: aload_0
      39: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapDivide(T) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_0
      14: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: aload_0
      26: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      29: arraylength
      30: if_icmpge     57
      33: aload_2
      34: iload_3
      35: aload_0
      36: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      39: iload_3
      40: aaload
      41: aload_1
      42: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      50: aastore
      51: iinc          3, 1
      54: goto          24
      57: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      60: dup
      61: aload_0
      62: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      65: aload_2
      66: iconst_0
      67: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      70: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapDivideToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #9                  // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: invokespecial #10                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      11: athrow
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      19: arraylength
      20: if_icmpge     50
      23: aload_0
      24: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      27: iload_2
      28: aload_0
      29: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: iload_2
      33: aaload
      34: aload_1
      35: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      43: aastore
      44: iinc          2, 1
      47: goto          14
      50: aload_0
      51: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapInv() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
       9: astore_1
      10: aload_0
      11: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      14: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/math3/Field.getOne:()Ljava/lang/Object;
      19: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      22: astore_2
      23: iconst_0
      24: istore_3
      25: iload_3
      26: aload_0
      27: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      30: arraylength
      31: if_icmpge     85
      34: aload_1
      35: iload_3
      36: aload_2
      37: aload_0
      38: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      41: iload_3
      42: aaload
      43: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      51: aastore
      52: goto          79
      55: astore        4
      57: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      60: dup
      61: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      64: iconst_1
      65: anewarray     #16                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: iload_3
      71: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      74: aastore
      75: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      78: athrow
      79: iinc          3, 1
      82: goto          25
      85: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      88: dup
      89: aload_0
      90: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      93: aload_1
      94: iconst_0
      95: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      98: areturn
    Exception table:
       from    to  target type
          34    52    55   Class org/apache/commons/math3/exception/MathArithmeticException

  public org.apache.commons.math3.linear.FieldVector<T> mapInvToSelf() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/math3/Field.getOne:()Ljava/lang/Object;
       9: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      12: astore_1
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: arraylength
      21: if_icmpge     77
      24: aload_0
      25: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      28: iload_2
      29: aload_1
      30: aload_0
      31: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: iload_2
      35: aaload
      36: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      44: aastore
      45: goto          71
      48: astore_3
      49: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      52: dup
      53: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      56: iconst_1
      57: anewarray     #16                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: iload_2
      63: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: aastore
      67: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      70: athrow
      71: iinc          2, 1
      74: goto          15
      77: aload_0
      78: areturn
    Exception table:
       from    to  target type
          24    45    48   Class org/apache/commons/math3/exception/MathArithmeticException

  public org.apache.commons.math3.linear.FieldVector<T> ebeMultiply(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #50                 // Method ebeMultiply:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: arraylength
      21: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      24: astore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: arraylength
      35: if_icmpge     71
      38: aload_3
      39: iload         4
      41: aload_0
      42: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      45: iload         4
      47: aaload
      48: aload_1
      49: iload         4
      51: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      56: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      64: aastore
      65: iinc          4, 1
      68: goto          28
      71: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      74: dup
      75: aload_0
      76: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      79: aload_3
      80: iconst_0
      81: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      84: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> ebeMultiply(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: aload_0
      11: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      18: astore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: aload_0
      23: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      26: arraylength
      27: if_icmpge     59
      30: aload_2
      31: iload_3
      32: aload_0
      33: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: iload_3
      37: aaload
      38: aload_1
      39: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      52: aastore
      53: iinc          3, 1
      56: goto          21
      59: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      62: dup
      63: aload_0
      64: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      67: aload_2
      68: iconst_0
      69: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      72: areturn

  public org.apache.commons.math3.linear.FieldVector<T> ebeDivide(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #51                 // Method ebeDivide:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: aload_0
      17: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: arraylength
      21: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      24: astore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: arraylength
      35: if_icmpge     99
      38: aload_3
      39: iload         4
      41: aload_0
      42: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      45: iload         4
      47: aaload
      48: aload_1
      49: iload         4
      51: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      56: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      64: aastore
      65: goto          93
      68: astore        5
      70: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      73: dup
      74: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      77: iconst_1
      78: anewarray     #16                 // class java/lang/Object
      81: dup
      82: iconst_0
      83: iload         4
      85: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      88: aastore
      89: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      92: athrow
      93: iinc          4, 1
      96: goto          28
      99: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
     102: dup
     103: aload_0
     104: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
     107: aload_3
     108: iconst_0
     109: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
     112: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException
          38    65    68   Class org/apache/commons/math3/exception/MathArithmeticException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> ebeDivide(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: aload_0
      11: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      18: astore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: aload_0
      23: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      26: arraylength
      27: if_icmpge     86
      30: aload_2
      31: iload_3
      32: aload_0
      33: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: iload_3
      37: aaload
      38: aload_1
      39: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      52: aastore
      53: goto          80
      56: astore        4
      58: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      61: dup
      62: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      65: iconst_1
      66: anewarray     #16                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: iload_3
      72: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: aastore
      76: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      79: athrow
      80: iinc          3, 1
      83: goto          21
      86: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      89: dup
      90: aload_0
      91: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      94: aload_2
      95: iconst_0
      96: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      99: areturn
    Exception table:
       from    to  target type
          30    53    56   Class org/apache/commons/math3/exception/MathArithmeticException

  public T[] getData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: invokevirtual #52                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
       7: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      10: areturn

  public T[] getDataRef();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: areturn

  public T dotProduct(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #53                 // Method dotProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      19: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      24: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      27: astore_3
      28: iconst_0
      29: istore        4
      31: iload         4
      33: aload_0
      34: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      37: arraylength
      38: if_icmpge     77
      41: aload_3
      42: aload_0
      43: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      46: iload         4
      48: aaload
      49: aload_1
      50: iload         4
      52: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      57: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      70: astore_3
      71: iinc          4, 1
      74: goto          31
      77: aload_3
      78: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public T dotProduct(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      18: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: aload_0
      26: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      29: arraylength
      30: if_icmpge     66
      33: aload_2
      34: aload_0
      35: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      38: iload_3
      39: aaload
      40: aload_1
      41: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      44: iload_3
      45: aaload
      46: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      59: astore_2
      60: iinc          3, 1
      63: goto          24
      66: aload_2
      67: areturn

  public org.apache.commons.math3.linear.FieldVector<T> projection(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokevirtual #54                 // Method dotProduct:(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
       6: aload_1
       7: aload_1
       8: invokeinterface #55,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.dotProduct:(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
      13: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      21: invokeinterface #56,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.mapMultiply:(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
      26: areturn

  public org.apache.commons.math3.linear.ArrayFieldVector<T> projection(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokevirtual #53                 // Method dotProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
       6: aload_1
       7: aload_1
       8: invokevirtual #53                 // Method dotProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
      11: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      19: invokevirtual #57                 // Method mapMultiply:(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
      22: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      25: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> outerProduct(org.apache.commons.math3.linear.FieldVector<T>);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #58                 // Method outerProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: istore_3
      16: aload_1
      17: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      22: istore        4
      24: new           #59                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
      27: dup
      28: aload_0
      29: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      32: iload_3
      33: iload         4
      35: invokespecial #60                 // Method org/apache/commons/math3/linear/Array2DRowFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
      38: astore        5
      40: iconst_0
      41: istore        6
      43: iload         6
      45: iload_3
      46: if_icmpge     105
      49: iconst_0
      50: istore        7
      52: iload         7
      54: iload         4
      56: if_icmpge     99
      59: aload         5
      61: iload         6
      63: iload         7
      65: aload_0
      66: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      69: iload         6
      71: aaload
      72: aload_1
      73: iload         7
      75: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      80: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      88: invokeinterface #61,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.setEntry:(IILorg/apache/commons/math3/FieldElement;)V
      93: iinc          7, 1
      96: goto          52
      99: iinc          6, 1
     102: goto          43
     105: aload         5
     107: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.FieldMatrix<T> outerProduct(org.apache.commons.math3.linear.ArrayFieldVector<T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: arraylength
       5: istore_2
       6: aload_1
       7: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      10: arraylength
      11: istore_3
      12: new           #59                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
      15: dup
      16: aload_0
      17: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      20: iload_2
      21: iload_3
      22: invokespecial #60                 // Method org/apache/commons/math3/linear/Array2DRowFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
      25: astore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: iload_2
      33: if_icmpge     90
      36: iconst_0
      37: istore        6
      39: iload         6
      41: iload_3
      42: if_icmpge     84
      45: aload         4
      47: iload         5
      49: iload         6
      51: aload_0
      52: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      55: iload         5
      57: aaload
      58: aload_1
      59: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      62: iload         6
      64: aaload
      65: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      73: invokeinterface #61,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.setEntry:(IILorg/apache/commons/math3/FieldElement;)V
      78: iinc          6, 1
      81: goto          39
      84: iinc          5, 1
      87: goto          30
      90: aload         4
      92: areturn

  public T getEntry(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: iload_1
       5: aaload
       6: areturn

  public int getDimension();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: arraylength
       5: ireturn

  public org.apache.commons.math3.linear.FieldVector<T> append(org.apache.commons.math3.linear.FieldVector<T>);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #62                 // Method append:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      13: dup
      14: aload_0
      15: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      18: dup
      19: aload_1
      20: invokespecial #63                 // Method "<init>":(Lorg/apache/commons/math3/linear/FieldVector;)V
      23: invokespecial #64                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
      26: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> append(org.apache.commons.math3.linear.ArrayFieldVector<T>);
    Code:
       0: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #64                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
       9: areturn

  public org.apache.commons.math3.linear.FieldVector<T> append(T);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: iconst_1
       7: iadd
       8: invokespecial #4                  // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      11: astore_2
      12: aload_0
      13: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      16: iconst_0
      17: aload_2
      18: iconst_0
      19: aload_0
      20: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_2
      28: aload_0
      29: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: arraylength
      33: aload_1
      34: aastore
      35: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      38: dup
      39: aload_0
      40: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      43: aload_2
      44: iconst_0
      45: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      48: areturn

  public org.apache.commons.math3.linear.FieldVector<T> getSubVector(int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NotPositiveException;
    Code:
       0: iload_2
       1: ifge          19
       4: new           #65                 // class org/apache/commons/math3/exception/NotPositiveException
       7: dup
       8: getstatic     #66                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_2
      12: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #67                 // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: new           #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
      22: dup
      23: aload_0
      24: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      27: iload_2
      28: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/Field;I)V
      31: astore_3
      32: aload_0
      33: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: iload_1
      37: aload_3
      38: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      41: iconst_0
      42: iload_2
      43: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: goto          65
      49: astore        4
      51: aload_0
      52: iload_1
      53: invokespecial #69                 // Method checkIndex:(I)V
      56: aload_0
      57: iload_1
      58: iload_2
      59: iadd
      60: iconst_1
      61: isub
      62: invokespecial #69                 // Method checkIndex:(I)V
      65: aload_3
      66: areturn
    Exception table:
       from    to  target type
          32    46    49   Class java/lang/IndexOutOfBoundsException

  public void setEntry(int, T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: iload_1
       5: aload_2
       6: aastore
       7: goto          16
      10: astore_3
      11: aload_0
      12: iload_1
      13: invokespecial #69                 // Method checkIndex:(I)V
      16: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/IndexOutOfBoundsException

  public void setSubVector(int, org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #33                 // class org/apache/commons/math3/linear/ArrayFieldVector
       6: invokevirtual #70                 // Method set:(ILorg/apache/commons/math3/linear/ArrayFieldVector;)V
       9: goto          52
      12: astore_3
      13: iload_1
      14: istore        4
      16: iload         4
      18: iload_1
      19: aload_2
      20: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      25: iadd
      26: if_icmpge     52
      29: aload_0
      30: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: iload         4
      35: aload_2
      36: iload         4
      38: iload_1
      39: isub
      40: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      45: aastore
      46: iinc          4, 1
      49: goto          16
      52: goto          75
      55: astore_3
      56: aload_0
      57: iload_1
      58: invokespecial #69                 // Method checkIndex:(I)V
      61: aload_0
      62: iload_1
      63: aload_2
      64: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      69: iadd
      70: iconst_1
      71: isub
      72: invokespecial #69                 // Method checkIndex:(I)V
      75: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/ClassCastException
           0    52    55   Class java/lang/IndexOutOfBoundsException

  public void set(int, org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_2
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: iconst_0
       5: aload_0
       6: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       9: iload_1
      10: aload_2
      11: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: goto          40
      21: astore_3
      22: aload_0
      23: iload_1
      24: invokespecial #69                 // Method checkIndex:(I)V
      27: aload_0
      28: iload_1
      29: aload_2
      30: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: arraylength
      34: iadd
      35: iconst_1
      36: isub
      37: invokespecial #69                 // Method checkIndex:(I)V
      40: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/IndexOutOfBoundsException

  public void set(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: aload_1
       5: invokestatic  #7                  // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  public T[] toArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: invokevirtual #71                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
       7: checkcast     #12                 // class "[Lorg/apache/commons/math3/FieldElement;"
      10: areturn

  protected void checkVectorDimensions(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
       7: invokevirtual #41                 // Method checkVectorDimensions:(I)V
      10: return

  protected void checkVectorDimensions(int) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: arraylength
       5: iload_1
       6: if_icmpeq     23
       9: new           #72                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_0
      14: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: iload_1
      19: invokespecial #73                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #74                 // class org/apache/commons/math3/linear/FieldVector
      17: astore_2
      18: aload_0
      19: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      22: arraylength
      23: aload_2
      24: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: iconst_0
      35: istore_3
      36: iload_3
      37: aload_0
      38: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      41: arraylength
      42: if_icmpge     72
      45: aload_0
      46: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      49: iload_3
      50: aaload
      51: aload_2
      52: iload_3
      53: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      58: invokevirtual #75                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifne          66
      64: iconst_0
      65: ireturn
      66: iinc          3, 1
      69: goto          36
      72: iconst_1
      73: ireturn
      74: astore_2
      75: iconst_0
      76: ireturn
    Exception table:
       from    to  target type
          13    33    74   Class java/lang/ClassCastException
          34    65    74   Class java/lang/ClassCastException
          66    73    74   Class java/lang/ClassCastException

  public int hashCode();
    Code:
       0: sipush        3542
       3: istore_1
       4: aload_0
       5: getfield      #5                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     41
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: iload_1
      28: aload         5
      30: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
      33: ixor
      34: istore_1
      35: iinc          4, 1
      38: goto          15
      41: iload_1
      42: ireturn

  private void checkIndex(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #77                 // Method getDimension:()I
       9: if_icmplt     40
      12: new           #78                 // class org/apache/commons/math3/exception/OutOfRangeException
      15: dup
      16: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      19: iload_1
      20: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: iconst_0
      24: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aload_0
      28: invokevirtual #77                 // Method getDimension:()I
      31: iconst_1
      32: isub
      33: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: invokespecial #79                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      39: athrow
      40: return
}
