Compiled from "PascalDistribution.java"
public class org.apache.commons.math3.distribution.PascalDistribution extends org.apache.commons.math3.distribution.AbstractIntegerDistribution {
  private static final long serialVersionUID;

  private final int numberOfSuccesses;

  private final double probabilityOfSuccess;

  public org.apache.commons.math3.distribution.PascalDistribution(int, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/math3/random/Well19937c
       4: dup
       5: invokespecial #2                  // Method org/apache/commons/math3/random/Well19937c."<init>":()V
       8: iload_1
       9: dload_2
      10: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
      13: return

  public org.apache.commons.math3.distribution.PascalDistribution(org.apache.commons.math3.random.RandomGenerator, int, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/commons/math3/distribution/AbstractIntegerDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;)V
       5: iload_2
       6: ifgt          24
       9: new           #5                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      12: dup
      13: getstatic     #6                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_SUCCESSES:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      16: iload_2
      17: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: invokespecial #8                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      23: athrow
      24: dload_3
      25: dconst_0
      26: dcmpg
      27: iflt          36
      30: dload_3
      31: dconst_1
      32: dcmpl
      33: ifle          56
      36: new           #9                  // class org/apache/commons/math3/exception/OutOfRangeException
      39: dup
      40: dload_3
      41: invokestatic  #10                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      44: iconst_0
      45: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: iconst_1
      49: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokespecial #11                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      55: athrow
      56: aload_0
      57: iload_2
      58: putfield      #12                 // Field numberOfSuccesses:I
      61: aload_0
      62: dload_3
      63: putfield      #13                 // Field probabilityOfSuccess:D
      66: return

  public int getNumberOfSuccesses();
    Code:
       0: aload_0
       1: getfield      #12                 // Field numberOfSuccesses:I
       4: ireturn

  public double getProbabilityOfSuccess();
    Code:
       0: aload_0
       1: getfield      #13                 // Field probabilityOfSuccess:D
       4: dreturn

  public double probability(int);
    Code:
       0: iload_1
       1: ifge          9
       4: dconst_0
       5: dstore_2
       6: goto          50
       9: iload_1
      10: aload_0
      11: getfield      #12                 // Field numberOfSuccesses:I
      14: iadd
      15: iconst_1
      16: isub
      17: aload_0
      18: getfield      #12                 // Field numberOfSuccesses:I
      21: iconst_1
      22: isub
      23: invokestatic  #14                 // Method org/apache/commons/math3/util/ArithmeticUtils.binomialCoefficientDouble:(II)D
      26: aload_0
      27: getfield      #13                 // Field probabilityOfSuccess:D
      30: aload_0
      31: getfield      #12                 // Field numberOfSuccesses:I
      34: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.pow:(DI)D
      37: dmul
      38: dconst_1
      39: aload_0
      40: getfield      #13                 // Field probabilityOfSuccess:D
      43: dsub
      44: iload_1
      45: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.pow:(DI)D
      48: dmul
      49: dstore_2
      50: dload_2
      51: dreturn

  public double cumulativeProbability(int);
    Code:
       0: iload_1
       1: ifge          9
       4: dconst_0
       5: dstore_2
       6: goto          26
       9: aload_0
      10: getfield      #13                 // Field probabilityOfSuccess:D
      13: aload_0
      14: getfield      #12                 // Field numberOfSuccesses:I
      17: i2d
      18: iload_1
      19: i2d
      20: dconst_1
      21: dadd
      22: invokestatic  #16                 // Method org/apache/commons/math3/special/Beta.regularizedBeta:(DDD)D
      25: dstore_2
      26: dload_2
      27: dreturn

  public double getNumericalMean();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getProbabilityOfSuccess:()D
       4: dstore_1
       5: aload_0
       6: invokevirtual #18                 // Method getNumberOfSuccesses:()I
       9: i2d
      10: dstore_3
      11: dload_3
      12: dconst_1
      13: dload_1
      14: dsub
      15: dmul
      16: dload_1
      17: ddiv
      18: dreturn

  public double getNumericalVariance();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getProbabilityOfSuccess:()D
       4: dstore_1
       5: aload_0
       6: invokevirtual #18                 // Method getNumberOfSuccesses:()I
       9: i2d
      10: dstore_3
      11: dload_3
      12: dconst_1
      13: dload_1
      14: dsub
      15: dmul
      16: dload_1
      17: dload_1
      18: dmul
      19: ddiv
      20: dreturn

  public int getSupportLowerBound();
    Code:
       0: iconst_0
       1: ireturn

  public int getSupportUpperBound();
    Code:
       0: ldc           #19                 // int 2147483647
       2: ireturn

  public boolean isSupportConnected();
    Code:
       0: iconst_1
       1: ireturn
}
