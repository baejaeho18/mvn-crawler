Compiled from "AbstractRegion.java"
public abstract class org.apache.commons.math3.geometry.partitioning.AbstractRegion<S extends org.apache.commons.math3.geometry.Space, T extends org.apache.commons.math3.geometry.Space> implements org.apache.commons.math3.geometry.partitioning.Region<S> {
  private org.apache.commons.math3.geometry.partitioning.BSPTree<S> tree;

  private double size;

  private org.apache.commons.math3.geometry.Vector<S> barycenter;

  protected org.apache.commons.math3.geometry.partitioning.AbstractRegion();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
       8: dup
       9: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      12: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      15: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      18: return

  protected org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       9: return

  protected org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.size:()I
      10: ifne          30
      13: aload_0
      14: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      17: dup
      18: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      21: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      24: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      27: goto          87
      30: new           #7                  // class java/util/TreeSet
      33: dup
      34: new           #8                  // class org/apache/commons/math3/geometry/partitioning/AbstractRegion$1
      37: dup
      38: aload_0
      39: invokespecial #9                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$1."<init>":(Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;)V
      42: invokespecial #10                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      45: astore_2
      46: aload_2
      47: aload_1
      48: invokevirtual #11                 // Method java/util/TreeSet.addAll:(Ljava/util/Collection;)Z
      51: pop
      52: aload_0
      53: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      56: dup
      57: invokespecial #12                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":()V
      60: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      63: aload_0
      64: aload_0
      65: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      68: aload_2
      69: invokespecial #13                 // Method insertCuts:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V
      72: aload_0
      73: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      76: new           #14                 // class org/apache/commons/math3/geometry/partitioning/AbstractRegion$2
      79: dup
      80: aload_0
      81: invokespecial #15                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$2."<init>":(Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;)V
      84: invokevirtual #16                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      87: return

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        13
       8: aload_1
       9: arraylength
      10: ifne          30
      13: aload_0
      14: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      17: dup
      18: getstatic     #17                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      21: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      24: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      27: goto          124
      30: aload_0
      31: aload_1
      32: iconst_0
      33: aaload
      34: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.wholeSpace:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      39: iconst_0
      40: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      45: putfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      48: aload_0
      49: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      52: astore_2
      53: aload_2
      54: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      57: invokevirtual #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
      60: aload_1
      61: astore_3
      62: aload_3
      63: arraylength
      64: istore        4
      66: iconst_0
      67: istore        5
      69: iload         5
      71: iload         4
      73: if_icmpge     124
      76: aload_3
      77: iload         5
      79: aaload
      80: astore        6
      82: aload_2
      83: aload         6
      85: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.insertCut:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
      88: ifeq          118
      91: aload_2
      92: aconst_null
      93: invokevirtual #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
      96: aload_2
      97: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     100: getstatic     #17                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     103: invokevirtual #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
     106: aload_2
     107: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     110: astore_2
     111: aload_2
     112: getstatic     #3                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     115: invokevirtual #20                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.setAttribute:(Ljava/lang/Object;)V
     118: iinc          5, 1
     121: goto          69
     124: return

  public abstract org.apache.commons.math3.geometry.partitioning.AbstractRegion<S, T> buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);

  private void insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>>);
    Code:
       0: aload_2
       1: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aconst_null
       8: astore        4
      10: aload         4
      12: ifnonnull     60
      15: aload_3
      16: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_3
      25: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #27                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane
      33: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      38: astore        4
      40: aload_1
      41: aload         4
      43: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.copySelf:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      48: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.insertCut:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
      51: ifne          10
      54: aconst_null
      55: astore        4
      57: goto          10
      60: aload_3
      61: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifne          70
      69: return
      70: new           #30                 // class java/util/ArrayList
      73: dup
      74: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      77: astore        5
      79: new           #30                 // class java/util/ArrayList
      82: dup
      83: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      86: astore        6
      88: aload_3
      89: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          213
      97: aload_3
      98: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #27                 // class org/apache/commons/math3/geometry/partitioning/SubHyperplane
     106: astore        7
     108: getstatic     #32                 // Field org/apache/commons/math3/geometry/partitioning/AbstractRegion$3.$SwitchMap$org$apache$commons$math3$geometry$partitioning$Side:[I
     111: aload         7
     113: aload         4
     115: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.side:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
     120: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/Side.ordinal:()I
     123: iaload
     124: tableswitch   { // 1 to 3
                     1: 152
                     2: 163
                     3: 174
               default: 210
          }
     152: aload         5
     154: aload         7
     156: invokevirtual #35                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     159: pop
     160: goto          210
     163: aload         6
     165: aload         7
     167: invokevirtual #35                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     170: pop
     171: goto          210
     174: aload         7
     176: aload         4
     178: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
     183: astore        8
     185: aload         5
     187: aload         8
     189: invokevirtual #37                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     192: invokevirtual #35                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     195: pop
     196: aload         6
     198: aload         8
     200: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     203: invokevirtual #35                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     206: pop
     207: goto          210
     210: goto          88
     213: aload_0
     214: aload_1
     215: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     218: aload         5
     220: invokespecial #13                 // Method insertCuts:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V
     223: aload_0
     224: aload_1
     225: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     228: aload         6
     230: invokespecial #13                 // Method insertCuts:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V
     233: return

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion<S, T> copySelf();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.copySelf:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       8: invokevirtual #40                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
      11: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: invokevirtual #41                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
       8: ireturn

  public boolean isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree<S>);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     26
       7: aload_1
       8: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      11: checkcast     #44                 // class java/lang/Boolean
      14: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
      26: aload_0
      27: aload_1
      28: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      31: invokevirtual #41                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      34: ifeq          52
      37: aload_0
      38: aload_1
      39: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      42: invokevirtual #41                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  public boolean contains(org.apache.commons.math3.geometry.partitioning.Region<S>);
    Code:
       0: new           #46                 // class org/apache/commons/math3/geometry/partitioning/RegionFactory
       3: dup
       4: invokespecial #47                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory."<init>":()V
       7: aload_1
       8: aload_0
       9: invokevirtual #48                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory.difference:(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
      12: invokeinterface #49,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:()Z
      17: ireturn

  public org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.Vector<S>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: aload_1
       6: invokevirtual #50                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
       9: areturn

  protected org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.Vector<S>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #51                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCell:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: astore_3
       6: aload_3
       7: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      10: ifnonnull     36
      13: aload_3
      14: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      17: checkcast     #44                 // class java/lang/Boolean
      20: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      23: ifeq          32
      26: getstatic     #52                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.INSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      29: goto          35
      32: getstatic     #53                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.OUTSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      35: areturn
      36: aload_0
      37: aload_3
      38: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      41: aload_2
      42: invokevirtual #50                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      45: astore        4
      47: aload_0
      48: aload_3
      49: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      52: aload_2
      53: invokevirtual #50                 // Method checkPoint:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      56: astore        5
      58: aload         4
      60: aload         5
      62: if_acmpne     70
      65: aload         4
      67: goto          73
      70: getstatic     #54                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.BOUNDARY:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      73: areturn

  public org.apache.commons.math3.geometry.partitioning.BSPTree<S> getTree(boolean);
    Code:
       0: iload_1
       1: ifeq          39
       4: aload_0
       5: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       8: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      11: ifnull        39
      14: aload_0
      15: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      18: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      21: ifnonnull     39
      24: aload_0
      25: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      28: new           #55                 // class org/apache/commons/math3/geometry/partitioning/AbstractRegion$BoundaryBuilder
      31: dup
      32: aconst_null
      33: invokespecial #56                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$BoundaryBuilder."<init>":(Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion$1;)V
      36: invokevirtual #16                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      39: aload_0
      40: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      43: areturn

  public double getBoundarySize();
    Code:
       0: new           #57                 // class org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor
       3: dup
       4: invokespecial #58                 // Method org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor."<init>":()V
       7: astore_1
       8: aload_0
       9: iconst_1
      10: invokevirtual #59                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      13: aload_1
      14: invokevirtual #16                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      17: aload_1
      18: invokevirtual #60                 // Method org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor.getSize:()D
      21: dreturn

  public double getSize();
    Code:
       0: aload_0
       1: getfield      #61                 // Field barycenter:Lorg/apache/commons/math3/geometry/Vector;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #62                 // Method computeGeometricalProperties:()V
      11: aload_0
      12: getfield      #63                 // Field size:D
      15: dreturn

  protected void setSize(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #63                 // Field size:D
       5: return

  public org.apache.commons.math3.geometry.Vector<S> getBarycenter();
    Code:
       0: aload_0
       1: getfield      #61                 // Field barycenter:Lorg/apache/commons/math3/geometry/Vector;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #62                 // Method computeGeometricalProperties:()V
      11: aload_0
      12: getfield      #61                 // Field barycenter:Lorg/apache/commons/math3/geometry/Vector;
      15: areturn

  protected void setBarycenter(org.apache.commons.math3.geometry.Vector<S>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field barycenter:Lorg/apache/commons/math3/geometry/Vector;
       5: return

  protected abstract void computeGeometricalProperties();

  public org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>);
    Code:
       0: new           #64                 // class org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides
       3: dup
       4: invokespecial #65                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_0
      10: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      13: aload_1
      14: invokeinterface #66,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.wholeHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      19: aload_2
      20: invokespecial #67                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides;)V
      23: aload_2
      24: invokevirtual #68                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.plusFound:()Z
      27: ifeq          49
      30: aload_2
      31: invokevirtual #69                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.minusFound:()Z
      34: ifeq          43
      37: getstatic     #70                 // Field org/apache/commons/math3/geometry/partitioning/Side.BOTH:Lorg/apache/commons/math3/geometry/partitioning/Side;
      40: goto          65
      43: getstatic     #71                 // Field org/apache/commons/math3/geometry/partitioning/Side.PLUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
      46: goto          65
      49: aload_2
      50: invokevirtual #69                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.minusFound:()Z
      53: ifeq          62
      56: getstatic     #72                 // Field org/apache/commons/math3/geometry/partitioning/Side.MINUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
      59: goto          65
      62: getstatic     #73                 // Field org/apache/commons/math3/geometry/partitioning/Side.HYPER:Lorg/apache/commons/math3/geometry/partitioning/Side;
      65: areturn

  private void recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>, org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     29
       7: aload_1
       8: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      11: checkcast     #44                 // class java/lang/Boolean
      14: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      17: ifeq          28
      20: aload_3
      21: invokevirtual #74                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberPlusFound:()V
      24: aload_3
      25: invokevirtual #75                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberMinusFound:()V
      28: return
      29: aload_1
      30: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      33: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      38: astore        4
      40: getstatic     #32                 // Field org/apache/commons/math3/geometry/partitioning/AbstractRegion$3.$SwitchMap$org$apache$commons$math3$geometry$partitioning$Side:[I
      43: aload_2
      44: aload         4
      46: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.side:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
      51: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/Side.ordinal:()I
      54: iaload
      55: tableswitch   { // 1 to 3
                     1: 80
                     2: 161
                     3: 242
               default: 297
          }
      80: aload_1
      81: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      84: aload_2
      85: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      90: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.side:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
      95: getstatic     #71                 // Field org/apache/commons/math3/geometry/partitioning/Side.PLUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
      98: if_acmpne     119
     101: aload_0
     102: aload_1
     103: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     106: invokevirtual #41                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     109: ifne          134
     112: aload_3
     113: invokevirtual #74                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberPlusFound:()V
     116: goto          134
     119: aload_0
     120: aload_1
     121: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     124: invokevirtual #41                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     127: ifne          134
     130: aload_3
     131: invokevirtual #75                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberMinusFound:()V
     134: aload_3
     135: invokevirtual #68                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.plusFound:()Z
     138: ifeq          148
     141: aload_3
     142: invokevirtual #69                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.minusFound:()Z
     145: ifne          443
     148: aload_0
     149: aload_1
     150: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     153: aload_2
     154: aload_3
     155: invokespecial #67                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides;)V
     158: goto          443
     161: aload_1
     162: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     165: aload_2
     166: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     171: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.side:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
     176: getstatic     #71                 // Field org/apache/commons/math3/geometry/partitioning/Side.PLUS:Lorg/apache/commons/math3/geometry/partitioning/Side;
     179: if_acmpne     200
     182: aload_0
     183: aload_1
     184: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     187: invokevirtual #41                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     190: ifne          215
     193: aload_3
     194: invokevirtual #74                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberPlusFound:()V
     197: goto          215
     200: aload_0
     201: aload_1
     202: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     205: invokevirtual #41                 // Method isEmpty:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
     208: ifne          215
     211: aload_3
     212: invokevirtual #75                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberMinusFound:()V
     215: aload_3
     216: invokevirtual #68                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.plusFound:()Z
     219: ifeq          229
     222: aload_3
     223: invokevirtual #69                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.minusFound:()Z
     226: ifne          443
     229: aload_0
     230: aload_1
     231: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     234: aload_2
     235: aload_3
     236: invokespecial #67                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides;)V
     239: goto          443
     242: aload_2
     243: aload         4
     245: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
     250: astore        5
     252: aload_0
     253: aload_1
     254: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     257: aload         5
     259: invokevirtual #37                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     262: aload_3
     263: invokespecial #67                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides;)V
     266: aload_3
     267: invokevirtual #68                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.plusFound:()Z
     270: ifeq          280
     273: aload_3
     274: invokevirtual #69                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.minusFound:()Z
     277: ifne          443
     280: aload_0
     281: aload_1
     282: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     285: aload         5
     287: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     290: aload_3
     291: invokespecial #67                 // Method recurseSides:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides;)V
     294: goto          443
     297: aload_1
     298: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     301: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     306: aload_2
     307: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     312: invokeinterface #76,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Hyperplane.sameOrientationAs:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
     317: ifeq          383
     320: aload_1
     321: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     324: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     327: ifnonnull     346
     330: aload_1
     331: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     334: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     337: checkcast     #44                 // class java/lang/Boolean
     340: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
     343: ifeq          350
     346: aload_3
     347: invokevirtual #74                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberPlusFound:()V
     350: aload_1
     351: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     354: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     357: ifnonnull     376
     360: aload_1
     361: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     364: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     367: checkcast     #44                 // class java/lang/Boolean
     370: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
     373: ifeq          443
     376: aload_3
     377: invokevirtual #75                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberMinusFound:()V
     380: goto          443
     383: aload_1
     384: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     387: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     390: ifnonnull     409
     393: aload_1
     394: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     397: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     400: checkcast     #44                 // class java/lang/Boolean
     403: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
     406: ifeq          413
     409: aload_3
     410: invokevirtual #75                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberMinusFound:()V
     413: aload_1
     414: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     417: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     420: ifnonnull     439
     423: aload_1
     424: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     427: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
     430: checkcast     #44                 // class java/lang/Boolean
     433: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
     436: ifeq          443
     439: aload_3
     440: invokevirtual #74                 // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion$Sides.rememberPlusFound:()V
     443: return

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<S> intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field tree:Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: aload_1
       6: invokespecial #77                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       9: areturn

  private org.apache.commons.math3.geometry.partitioning.SubHyperplane<S> recurseIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     31
       7: aload_1
       8: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      11: checkcast     #44                 // class java/lang/Boolean
      14: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      17: ifeq          29
      20: aload_2
      21: invokeinterface #78,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.copySelf:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      26: goto          30
      29: aconst_null
      30: areturn
      31: aload_1
      32: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      35: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      40: astore_3
      41: getstatic     #32                 // Field org/apache/commons/math3/geometry/partitioning/AbstractRegion$3.$SwitchMap$org$apache$commons$math3$geometry$partitioning$Side:[I
      44: aload_2
      45: aload_3
      46: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.side:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
      51: invokevirtual #34                 // Method org/apache/commons/math3/geometry/partitioning/Side.ordinal:()I
      54: iaload
      55: tableswitch   { // 1 to 3
                     1: 80
                     2: 90
                     3: 100
               default: 165
          }
      80: aload_0
      81: aload_1
      82: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      85: aload_2
      86: invokespecial #77                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      89: areturn
      90: aload_0
      91: aload_1
      92: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      95: aload_2
      96: invokespecial #77                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      99: areturn
     100: aload_2
     101: aload_3
     102: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.split:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
     107: astore        4
     109: aload_0
     110: aload_1
     111: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     114: aload         4
     116: invokevirtual #37                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     119: invokespecial #77                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     122: astore        5
     124: aload_0
     125: aload_1
     126: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     129: aload         4
     131: invokevirtual #38                 // Method org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     134: invokespecial #77                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     137: astore        6
     139: aload         5
     141: ifnonnull     147
     144: aload         6
     146: areturn
     147: aload         6
     149: ifnonnull     155
     152: aload         5
     154: areturn
     155: aload         5
     157: aload         6
     159: invokeinterface #79,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.reunite:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     164: areturn
     165: aload_0
     166: aload_1
     167: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     170: aload_0
     171: aload_1
     172: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     175: aload_2
     176: invokespecial #77                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     179: invokespecial #77                 // Method recurseIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     182: areturn

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion<S, T> applyTransform(org.apache.commons.math3.geometry.partitioning.Transform<S, T>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: iconst_0
       4: invokevirtual #59                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       7: aload_1
       8: invokespecial #80                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      11: invokevirtual #40                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
      14: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<S> recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree<S>, org.apache.commons.math3.geometry.partitioning.Transform<S, T>);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     19
       7: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
      10: dup
      11: aload_1
      12: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      15: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      18: areturn
      19: aload_1
      20: invokevirtual #42                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      23: astore_3
      24: aload_3
      25: checkcast     #81                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
      28: aload_2
      29: invokevirtual #82                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      32: astore        4
      34: aload_1
      35: invokevirtual #43                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      38: checkcast     #83                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      41: astore        5
      43: aload         5
      45: ifnull        113
      48: aload         5
      50: invokevirtual #84                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      53: ifnonnull     60
      56: aconst_null
      57: goto          72
      60: aload         5
      62: invokevirtual #84                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      65: checkcast     #81                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
      68: aload_2
      69: invokevirtual #82                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      72: astore        6
      74: aload         5
      76: invokevirtual #85                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      79: ifnonnull     86
      82: aconst_null
      83: goto          98
      86: aload         5
      88: invokevirtual #85                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      91: checkcast     #81                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
      94: aload_2
      95: invokevirtual #82                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      98: astore        7
     100: new           #83                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
     103: dup
     104: aload         6
     106: aload         7
     108: invokespecial #86                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
     111: astore        5
     113: new           #2                  // class org/apache/commons/math3/geometry/partitioning/BSPTree
     116: dup
     117: aload         4
     119: aload_0
     120: aload_1
     121: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     124: aload_2
     125: invokespecial #80                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     128: aload_0
     129: aload_1
     130: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     133: aload_2
     134: invokespecial #80                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     137: aload         5
     139: invokespecial #87                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     142: areturn

  public org.apache.commons.math3.geometry.partitioning.Region copySelf();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method copySelf:()Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
       4: areturn

  public org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
       5: areturn
}
