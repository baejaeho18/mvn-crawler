Compiled from "RegressionResults.java"
public class org.apache.commons.math3.stat.regression.RegressionResults implements java.io.Serializable {
  private static final int SSE_IDX;

  private static final int SST_IDX;

  private static final int RSQ_IDX;

  private static final int MSE_IDX;

  private static final int ADJRSQ_IDX;

  private static final long serialVersionUID;

  private final double[] parameters;

  private final double[][] varCovData;

  private final boolean isSymmetricVCD;

  private final int rank;

  private final long nobs;

  private final boolean containsConstant;

  private final double[] globalFitInfo;

  private org.apache.commons.math3.stat.regression.RegressionResults();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field parameters:[D
       9: aload_0
      10: aconst_null
      11: checkcast     #3                  // class "[[D"
      14: putfield      #4                  // Field varCovData:[[D
      17: aload_0
      18: iconst_m1
      19: putfield      #5                  // Field rank:I
      22: aload_0
      23: ldc2_w        #6                  // long -1l
      26: putfield      #8                  // Field nobs:J
      29: aload_0
      30: iconst_0
      31: putfield      #9                  // Field containsConstant:Z
      34: aload_0
      35: iconst_0
      36: putfield      #10                 // Field isSymmetricVCD:Z
      39: aload_0
      40: aconst_null
      41: putfield      #11                 // Field globalFitInfo:[D
      44: return

  public org.apache.commons.math3.stat.regression.RegressionResults(double[], double[][], boolean, long, int, double, double, double, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload         14
       6: ifeq          59
       9: aload_0
      10: aload_1
      11: invokestatic  #12                 // Method org/apache/commons/math3/util/MathArrays.copyOf:([D)[D
      14: putfield      #2                  // Field parameters:[D
      17: aload_0
      18: aload_2
      19: arraylength
      20: anewarray     #13                 // class "[D"
      23: putfield      #4                  // Field varCovData:[[D
      26: iconst_0
      27: istore        15
      29: iload         15
      31: aload_2
      32: arraylength
      33: if_icmpge     56
      36: aload_0
      37: getfield      #4                  // Field varCovData:[[D
      40: iload         15
      42: aload_2
      43: iload         15
      45: aaload
      46: invokestatic  #12                 // Method org/apache/commons/math3/util/MathArrays.copyOf:([D)[D
      49: aastore
      50: iinc          15, 1
      53: goto          29
      56: goto          69
      59: aload_0
      60: aload_1
      61: putfield      #2                  // Field parameters:[D
      64: aload_0
      65: aload_2
      66: putfield      #4                  // Field varCovData:[[D
      69: aload_0
      70: iload_3
      71: putfield      #10                 // Field isSymmetricVCD:Z
      74: aload_0
      75: lload         4
      77: putfield      #8                  // Field nobs:J
      80: aload_0
      81: iload         6
      83: putfield      #5                  // Field rank:I
      86: aload_0
      87: iload         13
      89: putfield      #9                  // Field containsConstant:Z
      92: aload_0
      93: iconst_5
      94: newarray       double
      96: putfield      #11                 // Field globalFitInfo:[D
      99: aload_0
     100: getfield      #11                 // Field globalFitInfo:[D
     103: ldc2_w        #14                 // double NaNd
     106: invokestatic  #16                 // Method java/util/Arrays.fill:([DD)V
     109: iload         6
     111: ifle          142
     114: aload_0
     115: getfield      #11                 // Field globalFitInfo:[D
     118: iconst_1
     119: iload         13
     121: ifeq          139
     124: dload         9
     126: dload         7
     128: dload         7
     130: dmul
     131: lload         4
     133: l2d
     134: ddiv
     135: dsub
     136: goto          141
     139: dload         9
     141: dastore
     142: aload_0
     143: getfield      #11                 // Field globalFitInfo:[D
     146: iconst_0
     147: dload         11
     149: dastore
     150: aload_0
     151: getfield      #11                 // Field globalFitInfo:[D
     154: iconst_3
     155: aload_0
     156: getfield      #11                 // Field globalFitInfo:[D
     159: iconst_0
     160: daload
     161: lload         4
     163: iload         6
     165: i2l
     166: lsub
     167: l2d
     168: ddiv
     169: dastore
     170: aload_0
     171: getfield      #11                 // Field globalFitInfo:[D
     174: iconst_2
     175: dconst_1
     176: aload_0
     177: getfield      #11                 // Field globalFitInfo:[D
     180: iconst_0
     181: daload
     182: aload_0
     183: getfield      #11                 // Field globalFitInfo:[D
     186: iconst_1
     187: daload
     188: ddiv
     189: dsub
     190: dastore
     191: iload         13
     193: ifne          227
     196: aload_0
     197: getfield      #11                 // Field globalFitInfo:[D
     200: iconst_4
     201: dconst_1
     202: dconst_1
     203: aload_0
     204: getfield      #11                 // Field globalFitInfo:[D
     207: iconst_2
     208: daload
     209: dsub
     210: lload         4
     212: l2d
     213: lload         4
     215: iload         6
     217: i2l
     218: lsub
     219: l2d
     220: ddiv
     221: dmul
     222: dsub
     223: dastore
     224: goto          258
     227: aload_0
     228: getfield      #11                 // Field globalFitInfo:[D
     231: iconst_4
     232: dconst_1
     233: dload         11
     235: lload         4
     237: l2d
     238: dconst_1
     239: dsub
     240: dmul
     241: aload_0
     242: getfield      #11                 // Field globalFitInfo:[D
     245: iconst_1
     246: daload
     247: lload         4
     249: iload         6
     251: i2l
     252: lsub
     253: l2d
     254: dmul
     255: ddiv
     256: dsub
     257: dastore
     258: return

  public double getParameterEstimate(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameters:[D
       4: ifnonnull     11
       7: ldc2_w        #14                 // double NaNd
      10: dreturn
      11: iload_1
      12: iflt          24
      15: iload_1
      16: aload_0
      17: getfield      #2                  // Field parameters:[D
      20: arraylength
      21: if_icmplt     50
      24: new           #17                 // class org/apache/commons/math3/exception/OutOfRangeException
      27: dup
      28: iload_1
      29: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: iconst_0
      33: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aload_0
      37: getfield      #2                  // Field parameters:[D
      40: arraylength
      41: iconst_1
      42: isub
      43: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokespecial #19                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      49: athrow
      50: aload_0
      51: getfield      #2                  // Field parameters:[D
      54: iload_1
      55: daload
      56: dreturn

  public double[] getParameterEstimates();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameters:[D
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field parameters:[D
      13: invokestatic  #12                 // Method org/apache/commons/math3/util/MathArrays.copyOf:([D)[D
      16: areturn

  public double getStdErrorOfEstimate(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameters:[D
       4: ifnonnull     11
       7: ldc2_w        #14                 // double NaNd
      10: dreturn
      11: iload_1
      12: iflt          24
      15: iload_1
      16: aload_0
      17: getfield      #2                  // Field parameters:[D
      20: arraylength
      21: if_icmplt     50
      24: new           #17                 // class org/apache/commons/math3/exception/OutOfRangeException
      27: dup
      28: iload_1
      29: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: iconst_0
      33: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aload_0
      37: getfield      #2                  // Field parameters:[D
      40: arraylength
      41: iconst_1
      42: isub
      43: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokespecial #19                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      49: athrow
      50: aload_0
      51: iload_1
      52: iload_1
      53: invokespecial #20                 // Method getVcvElement:(II)D
      56: dstore_2
      57: dload_2
      58: invokestatic  #21                 // Method java/lang/Double.isNaN:(D)Z
      61: ifne          77
      64: dload_2
      65: ldc2_w        #22                 // double 4.9E-324d
      68: dcmpl
      69: ifle          77
      72: dload_2
      73: invokestatic  #24                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      76: dreturn
      77: ldc2_w        #14                 // double NaNd
      80: dreturn

  public double[] getStdErrorOfEstimates();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameters:[D
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field parameters:[D
      13: arraylength
      14: newarray       double
      16: astore_1
      17: iconst_0
      18: istore_2
      19: iload_2
      20: aload_0
      21: getfield      #2                  // Field parameters:[D
      24: arraylength
      25: if_icmpge     72
      28: aload_0
      29: iload_2
      30: iload_2
      31: invokespecial #20                 // Method getVcvElement:(II)D
      34: dstore_3
      35: dload_3
      36: invokestatic  #21                 // Method java/lang/Double.isNaN:(D)Z
      39: ifne          60
      42: dload_3
      43: ldc2_w        #22                 // double 4.9E-324d
      46: dcmpl
      47: ifle          60
      50: aload_1
      51: iload_2
      52: dload_3
      53: invokestatic  #24                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      56: dastore
      57: goto          66
      60: aload_1
      61: iload_2
      62: ldc2_w        #14                 // double NaNd
      65: dastore
      66: iinc          2, 1
      69: goto          19
      72: aload_1
      73: areturn

  public double getCovarianceOfParameters(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameters:[D
       4: ifnonnull     11
       7: ldc2_w        #14                 // double NaNd
      10: dreturn
      11: iload_1
      12: iflt          24
      15: iload_1
      16: aload_0
      17: getfield      #2                  // Field parameters:[D
      20: arraylength
      21: if_icmplt     50
      24: new           #17                 // class org/apache/commons/math3/exception/OutOfRangeException
      27: dup
      28: iload_1
      29: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: iconst_0
      33: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aload_0
      37: getfield      #2                  // Field parameters:[D
      40: arraylength
      41: iconst_1
      42: isub
      43: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokespecial #19                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      49: athrow
      50: iload_2
      51: iflt          63
      54: iload_2
      55: aload_0
      56: getfield      #2                  // Field parameters:[D
      59: arraylength
      60: if_icmplt     89
      63: new           #17                 // class org/apache/commons/math3/exception/OutOfRangeException
      66: dup
      67: iload_2
      68: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: iconst_0
      72: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: aload_0
      76: getfield      #2                  // Field parameters:[D
      79: arraylength
      80: iconst_1
      81: isub
      82: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      85: invokespecial #19                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      88: athrow
      89: aload_0
      90: iload_1
      91: iload_2
      92: invokespecial #20                 // Method getVcvElement:(II)D
      95: dreturn

  public int getNumberOfParameters();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameters:[D
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field parameters:[D
      13: arraylength
      14: ireturn

  public long getN();
    Code:
       0: aload_0
       1: getfield      #8                  // Field nobs:J
       4: lreturn

  public double getTotalSumSquares();
    Code:
       0: aload_0
       1: getfield      #11                 // Field globalFitInfo:[D
       4: iconst_1
       5: daload
       6: dreturn

  public double getRegressionSumSquares();
    Code:
       0: aload_0
       1: getfield      #11                 // Field globalFitInfo:[D
       4: iconst_1
       5: daload
       6: aload_0
       7: getfield      #11                 // Field globalFitInfo:[D
      10: iconst_0
      11: daload
      12: dsub
      13: dreturn

  public double getErrorSumSquares();
    Code:
       0: aload_0
       1: getfield      #11                 // Field globalFitInfo:[D
       4: iconst_0
       5: daload
       6: dreturn

  public double getMeanSquareError();
    Code:
       0: aload_0
       1: getfield      #11                 // Field globalFitInfo:[D
       4: iconst_3
       5: daload
       6: dreturn

  public double getRSquared();
    Code:
       0: aload_0
       1: getfield      #11                 // Field globalFitInfo:[D
       4: iconst_2
       5: daload
       6: dreturn

  public double getAdjustedRSquared();
    Code:
       0: aload_0
       1: getfield      #11                 // Field globalFitInfo:[D
       4: iconst_4
       5: daload
       6: dreturn

  public boolean hasIntercept();
    Code:
       0: aload_0
       1: getfield      #9                  // Field containsConstant:Z
       4: ireturn

  private double getVcvElement(int, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field isSymmetricVCD:Z
       4: ifeq          98
       7: aload_0
       8: getfield      #4                  // Field varCovData:[[D
      11: arraylength
      12: iconst_1
      13: if_icmple     59
      16: iload_1
      17: iload_2
      18: if_icmpne     30
      21: aload_0
      22: getfield      #4                  // Field varCovData:[[D
      25: iload_1
      26: aaload
      27: iload_1
      28: daload
      29: dreturn
      30: iload_1
      31: aload_0
      32: getfield      #4                  // Field varCovData:[[D
      35: iload_2
      36: aaload
      37: arraylength
      38: if_icmplt     50
      41: aload_0
      42: getfield      #4                  // Field varCovData:[[D
      45: iload_1
      46: aaload
      47: iload_2
      48: daload
      49: dreturn
      50: aload_0
      51: getfield      #4                  // Field varCovData:[[D
      54: iload_2
      55: aaload
      56: iload_1
      57: daload
      58: dreturn
      59: iload_1
      60: iload_2
      61: if_icmple     81
      64: aload_0
      65: getfield      #4                  // Field varCovData:[[D
      68: iconst_0
      69: aaload
      70: iload_1
      71: iconst_1
      72: iadd
      73: iload_1
      74: imul
      75: iconst_2
      76: idiv
      77: iload_2
      78: iadd
      79: daload
      80: dreturn
      81: aload_0
      82: getfield      #4                  // Field varCovData:[[D
      85: iconst_0
      86: aaload
      87: iload_2
      88: iconst_1
      89: iadd
      90: iload_2
      91: imul
      92: iconst_2
      93: idiv
      94: iload_1
      95: iadd
      96: daload
      97: dreturn
      98: aload_0
      99: getfield      #4                  // Field varCovData:[[D
     102: iload_1
     103: aaload
     104: iload_2
     105: daload
     106: dreturn
}
