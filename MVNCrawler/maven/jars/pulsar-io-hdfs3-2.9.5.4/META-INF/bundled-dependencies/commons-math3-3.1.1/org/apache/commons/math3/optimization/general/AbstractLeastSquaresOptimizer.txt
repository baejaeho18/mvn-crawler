Compiled from "AbstractLeastSquaresOptimizer.java"
public abstract class org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer extends org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer<org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction> implements org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer {
  private static final double DEFAULT_SINGULARITY_THRESHOLD;

  protected double[][] weightedResidualJacobian;

  protected int cols;

  protected int rows;

  protected double[] point;

  protected double[] objective;

  protected double[] weightedResiduals;

  protected double cost;

  private org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction jF;

  private int jacobianEvaluations;

  private org.apache.commons.math3.linear.RealMatrix weightMatrixSqrt;

  protected org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer."<init>":()V
       4: return

  protected org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointVectorValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer."<init>":(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
       5: return

  public int getJacobianEvaluations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jacobianEvaluations:I
       4: ireturn

  protected void updateJacobian();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field point:[D
       5: invokevirtual #5                  // Method computeWeightedJacobian:([D)Lorg/apache/commons/math3/linear/RealMatrix;
       8: astore_1
       9: aload_0
      10: aload_1
      11: ldc2_w        #6                  // double -1.0d
      14: invokeinterface #8,  3            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.scalarMultiply:(D)Lorg/apache/commons/math3/linear/RealMatrix;
      19: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getData:()[[D
      24: putfield      #10                 // Field weightedResidualJacobian:[[D
      27: return

  protected org.apache.commons.math3.linear.RealMatrix computeWeightedJacobian(double[]);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field jacobianEvaluations:I
       5: iconst_1
       6: iadd
       7: putfield      #3                  // Field jacobianEvaluations:I
      10: aload_1
      11: arraylength
      12: anewarray     #11                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      15: astore_2
      16: aload_1
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     53
      28: aload_2
      29: iload         4
      31: new           #11                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      34: dup
      35: iload_3
      36: iconst_1
      37: iload         4
      39: aload_1
      40: iload         4
      42: daload
      43: invokespecial #12                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure."<init>":(IIID)V
      46: aastore
      47: iinc          4, 1
      50: goto          22
      53: aload_0
      54: getfield      #13                 // Field jF:Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;
      57: aload_2
      58: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction.value:([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      63: astore        4
      65: aload_0
      66: invokevirtual #15                 // Method getTarget:()[D
      69: arraylength
      70: istore        5
      72: aload         4
      74: arraylength
      75: iload         5
      77: if_icmpeq     93
      80: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      83: dup
      84: aload         4
      86: arraylength
      87: iload         5
      89: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      92: athrow
      93: iload         5
      95: iload_3
      96: multianewarray #18,  2            // class "[[D"
     100: astore        6
     102: iconst_0
     103: istore        7
     105: iload         7
     107: iload         5
     109: if_icmpge     168
     112: iload_3
     113: newarray       int
     115: astore        8
     117: iconst_0
     118: istore        9
     120: iload         9
     122: iload_3
     123: if_icmpge     162
     126: aload         8
     128: iload         9
     130: iconst_1
     131: iastore
     132: aload         6
     134: iload         7
     136: aaload
     137: iload         9
     139: aload         4
     141: iload         7
     143: aaload
     144: aload         8
     146: invokevirtual #19                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getPartialDerivative:([I)D
     149: dastore
     150: aload         8
     152: iload         9
     154: iconst_0
     155: iastore
     156: iinc          9, 1
     159: goto          120
     162: iinc          7, 1
     165: goto          105
     168: aload_0
     169: getfield      #20                 // Field weightMatrixSqrt:Lorg/apache/commons/math3/linear/RealMatrix;
     172: aload         6
     174: invokestatic  #21                 // Method org/apache/commons/math3/linear/MatrixUtils.createRealMatrix:([[D)Lorg/apache/commons/math3/linear/RealMatrix;
     177: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
     182: areturn

  protected void updateResidualsAndCost();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #4                  // Field point:[D
       6: invokevirtual #23                 // Method computeObjectiveValue:([D)[D
       9: putfield      #24                 // Field objective:[D
      12: aload_0
      13: aload_0
      14: getfield      #24                 // Field objective:[D
      17: invokevirtual #25                 // Method computeResiduals:([D)[D
      20: astore_1
      21: aload_0
      22: aload_0
      23: aload_1
      24: invokevirtual #26                 // Method computeCost:([D)D
      27: putfield      #27                 // Field cost:D
      30: new           #28                 // class org/apache/commons/math3/linear/ArrayRealVector
      33: dup
      34: aload_1
      35: invokespecial #29                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([D)V
      38: astore_2
      39: aload_0
      40: aload_0
      41: getfield      #20                 // Field weightMatrixSqrt:Lorg/apache/commons/math3/linear/RealMatrix;
      44: aload_2
      45: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.operate:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      50: invokevirtual #31                 // Method org/apache/commons/math3/linear/RealVector.toArray:()[D
      53: putfield      #32                 // Field weightedResiduals:[D
      56: return

  protected double computeCost(double[]);
    Code:
       0: new           #28                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_1
       5: invokespecial #29                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([D)V
       8: astore_2
       9: aload_2
      10: aload_0
      11: invokevirtual #33                 // Method getWeight:()Lorg/apache/commons/math3/linear/RealMatrix;
      14: aload_2
      15: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.operate:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      20: invokevirtual #34                 // Method org/apache/commons/math3/linear/ArrayRealVector.dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      23: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      26: dreturn

  public double getRMS();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getChiSquare:()D
       4: aload_0
       5: getfield      #37                 // Field rows:I
       8: i2d
       9: ddiv
      10: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      13: dreturn

  public double getChiSquare();
    Code:
       0: aload_0
       1: getfield      #27                 // Field cost:D
       4: aload_0
       5: getfield      #27                 // Field cost:D
       8: dmul
       9: dreturn

  public org.apache.commons.math3.linear.RealMatrix getWeightSquareRoot();
    Code:
       0: aload_0
       1: getfield      #20                 // Field weightMatrixSqrt:Lorg/apache/commons/math3/linear/RealMatrix;
       4: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.copy:()Lorg/apache/commons/math3/linear/RealMatrix;
       9: areturn

  protected void setCost(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #27                 // Field cost:D
       5: return

  public double[][] getCovariances();
    Code:
       0: aload_0
       1: ldc2_w        #39                 // double 1.0E-14d
       4: invokevirtual #41                 // Method getCovariances:(D)[[D
       7: areturn

  public double[][] getCovariances(double);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field point:[D
       5: dload_1
       6: invokevirtual #42                 // Method computeCovariances:([DD)[[D
       9: areturn

  public double[][] computeCovariances(double[], double);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method computeWeightedJacobian:([D)Lorg/apache/commons/math3/linear/RealMatrix;
       5: astore        4
       7: aload         4
       9: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.transpose:()Lorg/apache/commons/math3/linear/RealMatrix;
      14: aload         4
      16: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      21: astore        5
      23: new           #44                 // class org/apache/commons/math3/linear/QRDecomposition
      26: dup
      27: aload         5
      29: dload_2
      30: invokespecial #45                 // Method org/apache/commons/math3/linear/QRDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;D)V
      33: invokevirtual #46                 // Method org/apache/commons/math3/linear/QRDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
      36: astore        6
      38: aload         6
      40: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/math3/linear/DecompositionSolver.getInverse:()Lorg/apache/commons/math3/linear/RealMatrix;
      45: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getData:()[[D
      50: areturn

  public double[] guessParametersErrors();
    Code:
       0: aload_0
       1: getfield      #37                 // Field rows:I
       4: aload_0
       5: getfield      #48                 // Field cols:I
       8: if_icmpgt     37
      11: new           #49                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      14: dup
      15: getstatic     #50                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NO_DEGREES_OF_FREEDOM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: aload_0
      19: getfield      #37                 // Field rows:I
      22: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aload_0
      26: getfield      #48                 // Field cols:I
      29: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: iconst_0
      33: invokespecial #52                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      36: athrow
      37: aload_0
      38: getfield      #48                 // Field cols:I
      41: newarray       double
      43: astore_1
      44: aload_0
      45: invokevirtual #36                 // Method getChiSquare:()D
      48: aload_0
      49: getfield      #37                 // Field rows:I
      52: aload_0
      53: getfield      #48                 // Field cols:I
      56: isub
      57: i2d
      58: ddiv
      59: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      62: dstore_2
      63: aload_0
      64: aload_0
      65: getfield      #4                  // Field point:[D
      68: ldc2_w        #39                 // double 1.0E-14d
      71: invokevirtual #42                 // Method computeCovariances:([DD)[[D
      74: astore        4
      76: iconst_0
      77: istore        5
      79: iload         5
      81: aload_1
      82: arraylength
      83: if_icmpge     109
      86: aload_1
      87: iload         5
      89: aload         4
      91: iload         5
      93: aaload
      94: iload         5
      96: daload
      97: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     100: dload_2
     101: dmul
     102: dastore
     103: iinc          5, 1
     106: goto          79
     109: aload_1
     110: areturn

  public double[] computeSigma(double[], double);
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: iload         4
       6: newarray       double
       8: astore        5
      10: aload_0
      11: aload_1
      12: dload_2
      13: invokevirtual #42                 // Method computeCovariances:([DD)[[D
      16: astore        6
      18: iconst_0
      19: istore        7
      21: iload         7
      23: iload         4
      25: if_icmpge     50
      28: aload         5
      30: iload         7
      32: aload         6
      34: iload         7
      36: aaload
      37: iload         7
      39: daload
      40: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      43: dastore
      44: iinc          7, 1
      47: goto          21
      50: aload         5
      52: areturn

  public org.apache.commons.math3.optimization.PointVectorValuePair optimize(int, org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction, double[], double[], double[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #53                 // Method org/apache/commons/math3/analysis/FunctionUtils.toMultivariateDifferentiableVectorFunction:(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;
       6: iconst_3
       7: anewarray     #54                 // class org/apache/commons/math3/optimization/OptimizationData
      10: dup
      11: iconst_0
      12: new           #55                 // class org/apache/commons/math3/optimization/Target
      15: dup
      16: aload_3
      17: invokespecial #56                 // Method org/apache/commons/math3/optimization/Target."<init>":([D)V
      20: aastore
      21: dup
      22: iconst_1
      23: new           #57                 // class org/apache/commons/math3/optimization/Weight
      26: dup
      27: aload         4
      29: invokespecial #58                 // Method org/apache/commons/math3/optimization/Weight."<init>":([D)V
      32: aastore
      33: dup
      34: iconst_2
      35: new           #59                 // class org/apache/commons/math3/optimization/InitialGuess
      38: dup
      39: aload         5
      41: invokespecial #60                 // Method org/apache/commons/math3/optimization/InitialGuess."<init>":([D)V
      44: aastore
      45: invokevirtual #61                 // Method optimizeInternal:(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
      48: areturn

  public org.apache.commons.math3.optimization.PointVectorValuePair optimize(int, org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction, double[], double[], double[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_3
       4: anewarray     #54                 // class org/apache/commons/math3/optimization/OptimizationData
       7: dup
       8: iconst_0
       9: new           #55                 // class org/apache/commons/math3/optimization/Target
      12: dup
      13: aload_3
      14: invokespecial #56                 // Method org/apache/commons/math3/optimization/Target."<init>":([D)V
      17: aastore
      18: dup
      19: iconst_1
      20: new           #57                 // class org/apache/commons/math3/optimization/Weight
      23: dup
      24: aload         4
      26: invokespecial #58                 // Method org/apache/commons/math3/optimization/Weight."<init>":([D)V
      29: aastore
      30: dup
      31: iconst_2
      32: new           #59                 // class org/apache/commons/math3/optimization/InitialGuess
      35: dup
      36: aload         5
      38: invokespecial #60                 // Method org/apache/commons/math3/optimization/InitialGuess."<init>":([D)V
      41: aastore
      42: invokevirtual #61                 // Method optimizeInternal:(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
      45: areturn

  protected org.apache.commons.math3.optimization.PointVectorValuePair optimizeInternal(int, org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction, org.apache.commons.math3.optimization.OptimizationData...);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #62                 // Method org/apache/commons/math3/analysis/FunctionUtils.toDifferentiableMultivariateVectorFunction:(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;
       6: aload_3
       7: invokespecial #63                 // Method org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.optimizeInternal:(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
      10: areturn

  protected void setUp();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.setUp:()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field jacobianEvaluations:I
       9: aload_0
      10: aload_0
      11: aload_0
      12: invokevirtual #33                 // Method getWeight:()Lorg/apache/commons/math3/linear/RealMatrix;
      15: invokespecial #65                 // Method squareRoot:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
      18: putfield      #20                 // Field weightMatrixSqrt:Lorg/apache/commons/math3/linear/RealMatrix;
      21: aload_0
      22: aload_0
      23: invokevirtual #66                 // Method getObjectiveFunction:()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
      26: checkcast     #67                 // class org/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction
      29: invokestatic  #53                 // Method org/apache/commons/math3/analysis/FunctionUtils.toMultivariateDifferentiableVectorFunction:(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;
      32: putfield      #13                 // Field jF:Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;
      35: aload_0
      36: aload_0
      37: invokevirtual #68                 // Method getStartPoint:()[D
      40: putfield      #4                  // Field point:[D
      43: aload_0
      44: aload_0
      45: invokevirtual #15                 // Method getTarget:()[D
      48: arraylength
      49: putfield      #37                 // Field rows:I
      52: aload_0
      53: aload_0
      54: getfield      #4                  // Field point:[D
      57: arraylength
      58: putfield      #48                 // Field cols:I
      61: return

  protected double[] computeResiduals(double[]);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getTarget:()[D
       4: astore_2
       5: aload_1
       6: arraylength
       7: aload_2
       8: arraylength
       9: if_icmpeq     24
      12: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      15: dup
      16: aload_2
      17: arraylength
      18: aload_1
      19: arraylength
      20: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      23: athrow
      24: aload_2
      25: arraylength
      26: newarray       double
      28: astore_3
      29: iconst_0
      30: istore        4
      32: iload         4
      34: aload_2
      35: arraylength
      36: if_icmpge     58
      39: aload_3
      40: iload         4
      42: aload_2
      43: iload         4
      45: daload
      46: aload_1
      47: iload         4
      49: daload
      50: dsub
      51: dastore
      52: iinc          4, 1
      55: goto          32
      58: aload_3
      59: areturn

  private org.apache.commons.math3.linear.RealMatrix squareRoot(org.apache.commons.math3.linear.RealMatrix);
    Code:
       0: aload_1
       1: instanceof    #69                 // class org/apache/commons/math3/linear/DiagonalMatrix
       4: ifeq          63
       7: aload_1
       8: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      13: istore_2
      14: new           #69                 // class org/apache/commons/math3/linear/DiagonalMatrix
      17: dup
      18: iload_2
      19: invokespecial #71                 // Method org/apache/commons/math3/linear/DiagonalMatrix."<init>":(I)V
      22: astore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_2
      29: if_icmpge     61
      32: aload_3
      33: iload         4
      35: iload         4
      37: aload_1
      38: iload         4
      40: iload         4
      42: invokeinterface #72,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      47: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      50: invokeinterface #73,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      55: iinc          4, 1
      58: goto          26
      61: aload_3
      62: areturn
      63: new           #74                 // class org/apache/commons/math3/linear/EigenDecomposition
      66: dup
      67: aload_1
      68: invokespecial #75                 // Method org/apache/commons/math3/linear/EigenDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;)V
      71: astore_2
      72: aload_2
      73: invokevirtual #76                 // Method org/apache/commons/math3/linear/EigenDecomposition.getSquareRoot:()Lorg/apache/commons/math3/linear/RealMatrix;
      76: areturn

  public org.apache.commons.math3.optimization.PointVectorValuePair optimize(int, org.apache.commons.math3.analysis.MultivariateVectorFunction, double[], double[], double[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #67                 // class org/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #77                 // Method optimize:(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
      14: areturn
}
