Compiled from "PolyhedronsSet.java"
public class org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet extends org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D, org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> {
  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":()V
       4: return

  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
       5: return

  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet(java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":(Ljava/util/Collection;)V
       5: return

  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet(double, double, double, double, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: dload         7
       7: dload         9
       9: dload         11
      11: invokestatic  #6                  // Method buildBoundary:(DDDDDD)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      14: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/AbstractRegion."<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
      17: return

  private static org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> buildBoundary(double, double, double, double, double, double);
    Code:
       0: new           #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
       3: dup
       4: new           #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
       7: dup
       8: dload_0
       9: dconst_0
      10: dconst_0
      11: invokespecial #9                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DDD)V
      14: getstatic     #10                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.MINUS_I:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      17: invokespecial #11                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      20: astore        12
      22: new           #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      25: dup
      26: new           #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      29: dup
      30: dload_2
      31: dconst_0
      32: dconst_0
      33: invokespecial #9                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DDD)V
      36: getstatic     #12                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.PLUS_I:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      39: invokespecial #11                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      42: astore        13
      44: new           #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      47: dup
      48: new           #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      51: dup
      52: dconst_0
      53: dload         4
      55: dconst_0
      56: invokespecial #9                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DDD)V
      59: getstatic     #13                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.MINUS_J:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      62: invokespecial #11                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      65: astore        14
      67: new           #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      70: dup
      71: new           #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      74: dup
      75: dconst_0
      76: dload         6
      78: dconst_0
      79: invokespecial #9                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DDD)V
      82: getstatic     #14                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.PLUS_J:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      85: invokespecial #11                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      88: astore        15
      90: new           #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      93: dup
      94: new           #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      97: dup
      98: dconst_0
      99: dconst_0
     100: dload         8
     102: invokespecial #9                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DDD)V
     105: getstatic     #15                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.MINUS_K:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
     108: invokespecial #11                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
     111: astore        16
     113: new           #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
     116: dup
     117: new           #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
     120: dup
     121: dconst_0
     122: dconst_0
     123: dload         10
     125: invokespecial #9                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DDD)V
     128: getstatic     #16                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.PLUS_K:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
     131: invokespecial #11                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
     134: astore        17
     136: new           #17                 // class org/apache/commons/math3/geometry/partitioning/RegionFactory
     139: dup
     140: invokespecial #18                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory."<init>":()V
     143: bipush        6
     145: anewarray     #19                 // class org/apache/commons/math3/geometry/partitioning/Hyperplane
     148: dup
     149: iconst_0
     150: aload         12
     152: aastore
     153: dup
     154: iconst_1
     155: aload         13
     157: aastore
     158: dup
     159: iconst_2
     160: aload         14
     162: aastore
     163: dup
     164: iconst_3
     165: aload         15
     167: aastore
     168: dup
     169: iconst_4
     170: aload         16
     172: aastore
     173: dup
     174: iconst_5
     175: aload         17
     177: aastore
     178: invokevirtual #20                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory.buildConvex:([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Region;
     181: astore        18
     183: aload         18
     185: iconst_0
     186: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     191: areturn

  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: new           #22                 // class org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet
       3: dup
       4: aload_1
       5: invokespecial #23                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
       8: areturn

  protected void computeGeometricalProperties();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #24                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       5: new           #25                 // class org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet$FacetsContributionVisitor
       8: dup
       9: aload_0
      10: invokespecial #26                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet$FacetsContributionVisitor."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;)V
      13: invokevirtual #27                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      16: aload_0
      17: invokevirtual #28                 // Method getSize:()D
      20: dconst_0
      21: dcmpg
      22: ifge          42
      25: aload_0
      26: ldc2_w        #29                 // double Infinityd
      29: invokevirtual #2                  // Method setSize:(D)V
      32: aload_0
      33: getstatic     #31                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.NaN:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      36: invokevirtual #1                  // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Vector;)V
      39: goto          82
      42: aload_0
      43: aload_0
      44: invokevirtual #28                 // Method getSize:()D
      47: ldc2_w        #32                 // double 3.0d
      50: ddiv
      51: invokevirtual #2                  // Method setSize:(D)V
      54: aload_0
      55: new           #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      58: dup
      59: dconst_1
      60: ldc2_w        #34                 // double 4.0d
      63: aload_0
      64: invokevirtual #28                 // Method getSize:()D
      67: dmul
      68: ddiv
      69: aload_0
      70: invokevirtual #36                 // Method getBarycenter:()Lorg/apache/commons/math3/geometry/Vector;
      73: checkcast     #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      76: invokespecial #37                 // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      79: invokevirtual #1                  // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Vector;)V
      82: return

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> firstIntersection(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Line);
    Code:
       0: aload_0
       1: aload_0
       2: iconst_1
       3: invokevirtual #24                 // Method getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
       6: aload_1
       7: aload_2
       8: invokespecial #38                 // Method recurseFirstIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      11: areturn

  private org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> recurseFirstIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Line);
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_1
      14: invokevirtual #40                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      17: astore        5
      19: aload_1
      20: invokevirtual #41                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      23: astore        6
      25: aload         4
      27: invokeinterface #42,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      32: checkcast     #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      35: astore        7
      37: aload         7
      39: aload_2
      40: invokevirtual #43                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.getOffset:(Lorg/apache/commons/math3/geometry/Vector;)D
      43: dstore        8
      45: dload         8
      47: invokestatic  #44                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      50: ldc2_w        #45                 // double 1.0E-10d
      53: dcmpg
      54: ifge          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: istore        10
      64: dload         8
      66: dconst_0
      67: dcmpg
      68: ifge          82
      71: aload         5
      73: astore        11
      75: aload         6
      77: astore        12
      79: goto          90
      82: aload         6
      84: astore        11
      86: aload         5
      88: astore        12
      90: iload         10
      92: ifeq          111
      95: aload_0
      96: aload_2
      97: aload_1
      98: invokespecial #47                 // Method boundaryFacet:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     101: astore        13
     103: aload         13
     105: ifnull        111
     108: aload         13
     110: areturn
     111: aload_0
     112: aload         11
     114: aload_2
     115: aload_3
     116: invokespecial #38                 // Method recurseFirstIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     119: astore        13
     121: aload         13
     123: ifnull        129
     126: aload         13
     128: areturn
     129: iload         10
     131: ifne          164
     134: aload         7
     136: aload_3
     137: invokevirtual #48                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.intersection:(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
     140: astore        14
     142: aload         14
     144: ifnull        164
     147: aload_0
     148: aload         14
     150: aload_1
     151: invokespecial #47                 // Method boundaryFacet:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     154: astore        15
     156: aload         15
     158: ifnull        164
     161: aload         15
     163: areturn
     164: aload_0
     165: aload         12
     167: aload_2
     168: aload_3
     169: invokespecial #38                 // Method recurseFirstIntersection:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     172: areturn

  private org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> boundaryFacet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_2
       1: invokevirtual #39                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       9: checkcast     #7                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      12: aload_1
      13: invokevirtual #49                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSubSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      16: astore_3
      17: aload_2
      18: invokevirtual #50                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      21: checkcast     #51                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      24: astore        4
      26: aload         4
      28: invokevirtual #52                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      31: ifnull        63
      34: aload         4
      36: invokevirtual #52                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      39: checkcast     #53                 // class org/apache/commons/math3/geometry/euclidean/threed/SubPlane
      42: invokevirtual #54                 // Method org/apache/commons/math3/geometry/euclidean/threed/SubPlane.getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      45: aload_3
      46: invokeinterface #55,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.checkPoint:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      51: getstatic     #56                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.INSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      54: if_acmpne     63
      57: aload         4
      59: invokevirtual #52                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      62: areturn
      63: aload         4
      65: invokevirtual #57                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      68: ifnull        100
      71: aload         4
      73: invokevirtual #57                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      76: checkcast     #53                 // class org/apache/commons/math3/geometry/euclidean/threed/SubPlane
      79: invokevirtual #54                 // Method org/apache/commons/math3/geometry/euclidean/threed/SubPlane.getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      82: aload_3
      83: invokeinterface #55,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.checkPoint:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      88: getstatic     #56                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.INSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      91: if_acmpne     100
      94: aload         4
      96: invokevirtual #57                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      99: areturn
     100: aconst_null
     101: areturn

  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Rotation);
    Code:
       0: aload_0
       1: new           #58                 // class org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet$RotationTransform
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #59                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet$RotationTransform."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)V
      10: invokevirtual #60                 // Method applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
      13: checkcast     #22                 // class org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet
      16: areturn

  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D);
    Code:
       0: aload_0
       1: new           #61                 // class org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet$TranslationTransform
       4: dup
       5: aload_1
       6: invokespecial #62                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet$TranslationTransform."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
       9: invokevirtual #60                 // Method applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
      12: checkcast     #22                 // class org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet
      15: areturn

  public org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
       5: areturn

  public org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
       5: areturn

  static void access$000(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #2                  // Method setSize:(D)V
       5: return

  static void access$100(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet, org.apache.commons.math3.geometry.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Vector;)V
       5: return

  static void access$200(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #2                  // Method setSize:(D)V
       5: return

  static void access$300(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet, org.apache.commons.math3.geometry.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Vector;)V
       5: return

  static void access$400(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #2                  // Method setSize:(D)V
       5: return

  static void access$500(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet, org.apache.commons.math3.geometry.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method setBarycenter:(Lorg/apache/commons/math3/geometry/Vector;)V
       5: return
}
