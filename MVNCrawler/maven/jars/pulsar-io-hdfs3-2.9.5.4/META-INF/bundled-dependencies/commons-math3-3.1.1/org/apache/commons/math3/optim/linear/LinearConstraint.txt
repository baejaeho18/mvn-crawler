Compiled from "LinearConstraint.java"
public class org.apache.commons.math3.optim.linear.LinearConstraint implements java.io.Serializable {
  private static final long serialVersionUID;

  private final transient org.apache.commons.math3.linear.RealVector coefficients;

  private final org.apache.commons.math3.optim.linear.Relationship relationship;

  private final double value;

  public org.apache.commons.math3.optim.linear.LinearConstraint(double[], org.apache.commons.math3.optim.linear.Relationship, double);
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/math3/linear/ArrayRealVector
       4: dup
       5: aload_1
       6: invokespecial #2                  // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([D)V
       9: aload_2
      10: dload_3
      11: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/linear/Relationship;D)V
      14: return

  public org.apache.commons.math3.optim.linear.LinearConstraint(org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.optim.linear.Relationship, double);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field relationship:Lorg/apache/commons/math3/optim/linear/Relationship;
      14: aload_0
      15: dload_3
      16: putfield      #7                  // Field value:D
      19: return

  public org.apache.commons.math3.optim.linear.LinearConstraint(double[], double, org.apache.commons.math3.optim.linear.Relationship, double[], double);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: arraylength
       6: newarray       double
       8: astore        8
      10: iconst_0
      11: istore        9
      13: iload         9
      15: aload         8
      17: arraylength
      18: if_icmpge     42
      21: aload         8
      23: iload         9
      25: aload_1
      26: iload         9
      28: daload
      29: aload         5
      31: iload         9
      33: daload
      34: dsub
      35: dastore
      36: iinc          9, 1
      39: goto          13
      42: aload_0
      43: new           #1                  // class org/apache/commons/math3/linear/ArrayRealVector
      46: dup
      47: aload         8
      49: iconst_0
      50: invokespecial #8                  // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      53: putfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
      56: aload_0
      57: aload         4
      59: putfield      #6                  // Field relationship:Lorg/apache/commons/math3/optim/linear/Relationship;
      62: aload_0
      63: dload         6
      65: dload_2
      66: dsub
      67: putfield      #7                  // Field value:D
      70: return

  public org.apache.commons.math3.optim.linear.LinearConstraint(org.apache.commons.math3.linear.RealVector, double, org.apache.commons.math3.optim.linear.Relationship, org.apache.commons.math3.linear.RealVector, double);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: aload         5
       8: invokevirtual #9                  // Method org/apache/commons/math3/linear/RealVector.subtract:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      11: putfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
      14: aload_0
      15: aload         4
      17: putfield      #6                  // Field relationship:Lorg/apache/commons/math3/optim/linear/Relationship;
      20: aload_0
      21: dload         6
      23: dload_2
      24: dsub
      25: putfield      #7                  // Field value:D
      28: return

  public org.apache.commons.math3.linear.RealVector getCoefficients();
    Code:
       0: aload_0
       1: getfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
       4: areturn

  public org.apache.commons.math3.optim.linear.Relationship getRelationship();
    Code:
       0: aload_0
       1: getfield      #6                  // Field relationship:Lorg/apache/commons/math3/optim/linear/Relationship;
       4: areturn

  public double getValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:D
       4: dreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class org/apache/commons/math3/optim/linear/LinearConstraint
      11: ifeq          62
      14: aload_1
      15: checkcast     #10                 // class org/apache/commons/math3/optim/linear/LinearConstraint
      18: astore_2
      19: aload_0
      20: getfield      #6                  // Field relationship:Lorg/apache/commons/math3/optim/linear/Relationship;
      23: aload_2
      24: getfield      #6                  // Field relationship:Lorg/apache/commons/math3/optim/linear/Relationship;
      27: if_acmpne     60
      30: aload_0
      31: getfield      #7                  // Field value:D
      34: aload_2
      35: getfield      #7                  // Field value:D
      38: dcmpl
      39: ifne          60
      42: aload_0
      43: getfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
      46: aload_2
      47: getfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
      50: invokevirtual #11                 // Method org/apache/commons/math3/linear/RealVector.equals:(Ljava/lang/Object;)Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn
      62: iconst_0
      63: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field relationship:Lorg/apache/commons/math3/optim/linear/Relationship;
       4: invokevirtual #12                 // Method org/apache/commons/math3/optim/linear/Relationship.hashCode:()I
       7: aload_0
       8: getfield      #7                  // Field value:D
      11: invokestatic  #13                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      14: invokevirtual #14                 // Method java/lang/Double.hashCode:()I
      17: ixor
      18: aload_0
      19: getfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
      22: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.hashCode:()I
      25: ixor
      26: ireturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_0
       5: getfield      #5                  // Field coefficients:Lorg/apache/commons/math3/linear/RealVector;
       8: aload_1
       9: invokestatic  #17                 // Method org/apache/commons/math3/linear/MatrixUtils.serializeRealVector:(Lorg/apache/commons/math3/linear/RealVector;Ljava/io/ObjectOutputStream;)V
      12: return

  private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: ldc           #19                 // String coefficients
       7: aload_1
       8: invokestatic  #20                 // Method org/apache/commons/math3/linear/MatrixUtils.deserializeRealVector:(Ljava/lang/Object;Ljava/lang/String;Ljava/io/ObjectInputStream;)V
      11: return
}
