Compiled from "RandomDataGenerator.java"
public class org.apache.commons.math3.random.RandomDataGenerator implements org.apache.commons.math3.random.RandomData,java.io.Serializable {
  private static final long serialVersionUID;

  private org.apache.commons.math3.random.RandomGenerator rand;

  private java.security.SecureRandom secRand;

  public org.apache.commons.math3.random.RandomDataGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field rand:Lorg/apache/commons/math3/random/RandomGenerator;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field secRand:Ljava/security/SecureRandom;
      14: return

  public org.apache.commons.math3.random.RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field rand:Lorg/apache/commons/math3/random/RandomGenerator;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field secRand:Ljava/security/SecureRandom;
      14: aload_0
      15: aload_1
      16: putfield      #2                  // Field rand:Lorg/apache/commons/math3/random/RandomGenerator;
      19: return

  public java.lang.String nextHexString(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: iload_1
       1: ifgt          19
       4: new           #4                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
       7: dup
       8: getstatic     #5                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.LENGTH:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_1
      12: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #7                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: aload_0
      20: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
      23: astore_2
      24: new           #9                  // class java/lang/StringBuilder
      27: dup
      28: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      31: astore_3
      32: iload_1
      33: iconst_2
      34: idiv
      35: iconst_1
      36: iadd
      37: newarray       byte
      39: astore        4
      41: aload_2
      42: aload         4
      44: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextBytes:([B)V
      49: iconst_0
      50: istore        5
      52: iload         5
      54: aload         4
      56: arraylength
      57: if_icmpge     128
      60: aload         4
      62: iload         5
      64: baload
      65: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: astore        6
      70: aload         6
      72: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      75: sipush        128
      78: iadd
      79: invokestatic  #13                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      82: astore        7
      84: aload         7
      86: invokevirtual #14                 // Method java/lang/String.length:()I
      89: iconst_1
      90: if_icmpne     115
      93: new           #9                  // class java/lang/StringBuilder
      96: dup
      97: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #15                 // String 0
     102: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload         7
     107: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: astore        7
     115: aload_3
     116: aload         7
     118: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: pop
     122: iinc          5, 1
     125: goto          52
     128: aload_3
     129: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: iconst_0
     133: iload_1
     134: invokevirtual #18                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     137: areturn

  public int nextInt(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: iload_1
       1: iload_2
       2: if_icmplt     25
       5: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
       8: dup
       9: getstatic     #20                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      12: iload_1
      13: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: iload_2
      17: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: iconst_0
      21: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      24: athrow
      25: aload_0
      26: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
      29: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextDouble:()D
      34: dstore_3
      35: dload_3
      36: iload_2
      37: i2d
      38: dmul
      39: dconst_1
      40: dload_3
      41: dsub
      42: iload_1
      43: i2d
      44: dmul
      45: dadd
      46: dload_3
      47: dadd
      48: dstore        5
      50: dload         5
      52: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      55: d2i
      56: ireturn

  public long nextLong(long, long) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: lload_1
       1: lload_3
       2: lcmp
       3: iflt          26
       6: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
       9: dup
      10: getstatic     #20                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      13: lload_1
      14: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      17: lload_3
      18: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: iconst_0
      22: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      25: athrow
      26: aload_0
      27: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
      30: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextDouble:()D
      35: dstore        5
      37: dload         5
      39: lload_3
      40: l2d
      41: dmul
      42: dconst_1
      43: dload         5
      45: dsub
      46: lload_1
      47: l2d
      48: dmul
      49: dadd
      50: dload         5
      52: dadd
      53: dstore        7
      55: dload         7
      57: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      60: d2l
      61: lreturn

  public java.lang.String nextSecureHexString(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: iload_1
       1: ifgt          19
       4: new           #4                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
       7: dup
       8: getstatic     #5                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.LENGTH:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_1
      12: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #7                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: aload_0
      20: invokespecial #25                 // Method getSecRan:()Ljava/security/SecureRandom;
      23: astore_2
      24: aconst_null
      25: astore_3
      26: ldc           #26                 // String SHA-1
      28: invokestatic  #27                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      31: astore_3
      32: goto          47
      35: astore        4
      37: new           #29                 // class org/apache/commons/math3/exception/MathInternalError
      40: dup
      41: aload         4
      43: invokespecial #30                 // Method org/apache/commons/math3/exception/MathInternalError."<init>":(Ljava/lang/Throwable;)V
      46: athrow
      47: aload_3
      48: invokevirtual #31                 // Method java/security/MessageDigest.reset:()V
      51: iload_1
      52: bipush        40
      54: idiv
      55: iconst_1
      56: iadd
      57: istore        4
      59: new           #9                  // class java/lang/StringBuilder
      62: dup
      63: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      66: astore        5
      68: iconst_1
      69: istore        6
      71: iload         6
      73: iload         4
      75: iconst_1
      76: iadd
      77: if_icmpge     190
      80: bipush        40
      82: newarray       byte
      84: astore        7
      86: aload_2
      87: aload         7
      89: invokevirtual #32                 // Method java/security/SecureRandom.nextBytes:([B)V
      92: aload_3
      93: aload         7
      95: invokevirtual #33                 // Method java/security/MessageDigest.update:([B)V
      98: aload_3
      99: invokevirtual #34                 // Method java/security/MessageDigest.digest:()[B
     102: astore        8
     104: iconst_0
     105: istore        9
     107: iload         9
     109: aload         8
     111: arraylength
     112: if_icmpge     184
     115: aload         8
     117: iload         9
     119: baload
     120: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     123: astore        10
     125: aload         10
     127: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
     130: sipush        128
     133: iadd
     134: invokestatic  #13                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     137: astore        11
     139: aload         11
     141: invokevirtual #14                 // Method java/lang/String.length:()I
     144: iconst_1
     145: if_icmpne     170
     148: new           #9                  // class java/lang/StringBuilder
     151: dup
     152: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #15                 // String 0
     157: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload         11
     162: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: astore        11
     170: aload         5
     172: aload         11
     174: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: pop
     178: iinc          9, 1
     181: goto          107
     184: iinc          6, 1
     187: goto          71
     190: aload         5
     192: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: iconst_0
     196: iload_1
     197: invokevirtual #18                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     200: areturn
    Exception table:
       from    to  target type
          26    32    35   Class java/security/NoSuchAlgorithmException

  public int nextSecureInt(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: iload_1
       1: iload_2
       2: if_icmplt     25
       5: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
       8: dup
       9: getstatic     #20                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      12: iload_1
      13: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: iload_2
      17: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: iconst_0
      21: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      24: athrow
      25: aload_0
      26: invokespecial #25                 // Method getSecRan:()Ljava/security/SecureRandom;
      29: astore_3
      30: aload_3
      31: invokevirtual #35                 // Method java/security/SecureRandom.nextDouble:()D
      34: dstore        4
      36: dload         4
      38: iload_2
      39: i2d
      40: dmul
      41: dconst_1
      42: dload         4
      44: dsub
      45: iload_1
      46: i2d
      47: dmul
      48: dadd
      49: dload         4
      51: dadd
      52: dstore        6
      54: dload         6
      56: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      59: d2i
      60: ireturn

  public long nextSecureLong(long, long) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: lload_1
       1: lload_3
       2: lcmp
       3: iflt          26
       6: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
       9: dup
      10: getstatic     #20                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      13: lload_1
      14: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      17: lload_3
      18: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: iconst_0
      22: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      25: athrow
      26: aload_0
      27: invokespecial #25                 // Method getSecRan:()Ljava/security/SecureRandom;
      30: astore        5
      32: aload         5
      34: invokevirtual #35                 // Method java/security/SecureRandom.nextDouble:()D
      37: dstore        6
      39: dload         6
      41: lload_3
      42: l2d
      43: dmul
      44: dconst_1
      45: dload         6
      47: dsub
      48: lload_1
      49: l2d
      50: dmul
      51: dadd
      52: dload         6
      54: dadd
      55: dstore        8
      57: dload         8
      59: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      62: d2l
      63: lreturn

  public long nextPoisson(double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #36                 // class org/apache/commons/math3/distribution/PoissonDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: ldc2_w        #37                 // double 1.0E-12d
      12: ldc           #39                 // int 10000000
      14: invokespecial #40                 // Method org/apache/commons/math3/distribution/PoissonDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DDI)V
      17: invokevirtual #41                 // Method org/apache/commons/math3/distribution/PoissonDistribution.sample:()I
      20: i2l
      21: lreturn

  public double nextGaussian(double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: dload_3
       1: dconst_0
       2: dcmpg
       3: ifgt          21
       6: new           #4                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
       9: dup
      10: getstatic     #42                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.STANDARD_DEVIATION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      13: dload_3
      14: invokestatic  #43                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      17: invokespecial #7                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      20: athrow
      21: dload_3
      22: aload_0
      23: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
      26: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextGaussian:()D
      31: dmul
      32: dload_1
      33: dadd
      34: dreturn

  public double nextExponential(double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #45                 // class org/apache/commons/math3/distribution/ExponentialDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: ldc2_w        #46                 // double 1.0E-9d
      12: invokespecial #48                 // Method org/apache/commons/math3/distribution/ExponentialDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
      15: invokevirtual #49                 // Method org/apache/commons/math3/distribution/ExponentialDistribution.sample:()D
      18: dreturn

  public double nextGamma(double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #50                 // class org/apache/commons/math3/distribution/GammaDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: dload_3
      10: ldc2_w        #46                 // double 1.0E-9d
      13: invokespecial #51                 // Method org/apache/commons/math3/distribution/GammaDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
      16: invokevirtual #52                 // Method org/apache/commons/math3/distribution/GammaDistribution.sample:()D
      19: dreturn

  public int nextHypergeometric(int, int, int) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: new           #53                 // class org/apache/commons/math3/distribution/HypergeometricDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: iload_1
       9: iload_2
      10: iload_3
      11: invokespecial #54                 // Method org/apache/commons/math3/distribution/HypergeometricDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;III)V
      14: invokevirtual #55                 // Method org/apache/commons/math3/distribution/HypergeometricDistribution.sample:()I
      17: ireturn

  public int nextPascal(int, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: new           #56                 // class org/apache/commons/math3/distribution/PascalDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: iload_1
       9: dload_2
      10: invokespecial #57                 // Method org/apache/commons/math3/distribution/PascalDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
      13: invokevirtual #58                 // Method org/apache/commons/math3/distribution/PascalDistribution.sample:()I
      16: ireturn

  public double nextT(double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #59                 // class org/apache/commons/math3/distribution/TDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: ldc2_w        #46                 // double 1.0E-9d
      12: invokespecial #60                 // Method org/apache/commons/math3/distribution/TDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
      15: invokevirtual #61                 // Method org/apache/commons/math3/distribution/TDistribution.sample:()D
      18: dreturn

  public double nextWeibull(double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #62                 // class org/apache/commons/math3/distribution/WeibullDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: dload_3
      10: ldc2_w        #46                 // double 1.0E-9d
      13: invokespecial #63                 // Method org/apache/commons/math3/distribution/WeibullDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
      16: invokevirtual #64                 // Method org/apache/commons/math3/distribution/WeibullDistribution.sample:()D
      19: dreturn

  public int nextZipf(int, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #65                 // class org/apache/commons/math3/distribution/ZipfDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: iload_1
       9: dload_2
      10: invokespecial #66                 // Method org/apache/commons/math3/distribution/ZipfDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
      13: invokevirtual #67                 // Method org/apache/commons/math3/distribution/ZipfDistribution.sample:()I
      16: ireturn

  public double nextBeta(double, double);
    Code:
       0: new           #68                 // class org/apache/commons/math3/distribution/BetaDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: dload_3
      10: ldc2_w        #46                 // double 1.0E-9d
      13: invokespecial #69                 // Method org/apache/commons/math3/distribution/BetaDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
      16: invokevirtual #70                 // Method org/apache/commons/math3/distribution/BetaDistribution.sample:()D
      19: dreturn

  public int nextBinomial(int, double);
    Code:
       0: new           #71                 // class org/apache/commons/math3/distribution/BinomialDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: iload_1
       9: dload_2
      10: invokespecial #72                 // Method org/apache/commons/math3/distribution/BinomialDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
      13: invokevirtual #73                 // Method org/apache/commons/math3/distribution/BinomialDistribution.sample:()I
      16: ireturn

  public double nextCauchy(double, double);
    Code:
       0: new           #74                 // class org/apache/commons/math3/distribution/CauchyDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: dload_3
      10: ldc2_w        #46                 // double 1.0E-9d
      13: invokespecial #75                 // Method org/apache/commons/math3/distribution/CauchyDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
      16: invokevirtual #76                 // Method org/apache/commons/math3/distribution/CauchyDistribution.sample:()D
      19: dreturn

  public double nextChiSquare(double);
    Code:
       0: new           #77                 // class org/apache/commons/math3/distribution/ChiSquaredDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: ldc2_w        #46                 // double 1.0E-9d
      12: invokespecial #78                 // Method org/apache/commons/math3/distribution/ChiSquaredDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
      15: invokevirtual #79                 // Method org/apache/commons/math3/distribution/ChiSquaredDistribution.sample:()D
      18: dreturn

  public double nextF(double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #80                 // class org/apache/commons/math3/distribution/FDistribution
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       8: dload_1
       9: dload_3
      10: ldc2_w        #46                 // double 1.0E-9d
      13: invokespecial #81                 // Method org/apache/commons/math3/distribution/FDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
      16: invokevirtual #82                 // Method org/apache/commons/math3/distribution/FDistribution.sample:()D
      19: dreturn

  public double nextUniform(double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotFiniteNumberException, org.apache.commons.math3.exception.NotANumberException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: iconst_0
       4: invokevirtual #83                 // Method nextUniform:(DDZ)D
       7: dreturn

  public double nextUniform(double, double, boolean) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotFiniteNumberException, org.apache.commons.math3.exception.NotANumberException;
    Code:
       0: dload_1
       1: dload_3
       2: dcmpl
       3: iflt          26
       6: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
       9: dup
      10: getstatic     #20                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      13: dload_1
      14: invokestatic  #43                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      17: dload_3
      18: invokestatic  #43                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      21: iconst_0
      22: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      25: athrow
      26: dload_1
      27: invokestatic  #84                 // Method java/lang/Double.isInfinite:(D)Z
      30: ifeq          52
      33: new           #85                 // class org/apache/commons/math3/exception/NotFiniteNumberException
      36: dup
      37: getstatic     #86                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INFINITE_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      40: dload_1
      41: invokestatic  #43                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      44: iconst_0
      45: anewarray     #87                 // class java/lang/Object
      48: invokespecial #88                 // Method org/apache/commons/math3/exception/NotFiniteNumberException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V
      51: athrow
      52: dload_3
      53: invokestatic  #84                 // Method java/lang/Double.isInfinite:(D)Z
      56: ifeq          78
      59: new           #85                 // class org/apache/commons/math3/exception/NotFiniteNumberException
      62: dup
      63: getstatic     #86                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INFINITE_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      66: dload_3
      67: invokestatic  #43                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      70: iconst_0
      71: anewarray     #87                 // class java/lang/Object
      74: invokespecial #88                 // Method org/apache/commons/math3/exception/NotFiniteNumberException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V
      77: athrow
      78: dload_1
      79: invokestatic  #89                 // Method java/lang/Double.isNaN:(D)Z
      82: ifne          92
      85: dload_3
      86: invokestatic  #89                 // Method java/lang/Double.isNaN:(D)Z
      89: ifeq          100
      92: new           #90                 // class org/apache/commons/math3/exception/NotANumberException
      95: dup
      96: invokespecial #91                 // Method org/apache/commons/math3/exception/NotANumberException."<init>":()V
      99: athrow
     100: aload_0
     101: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
     104: astore        6
     106: aload         6
     108: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextDouble:()D
     113: dstore        7
     115: iload         5
     117: ifne          139
     120: dload         7
     122: dconst_0
     123: dcmpg
     124: ifgt          139
     127: aload         6
     129: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextDouble:()D
     134: dstore        7
     136: goto          115
     139: dload         7
     141: dload_3
     142: dmul
     143: dconst_1
     144: dload         7
     146: dsub
     147: dload_1
     148: dmul
     149: dadd
     150: dreturn

  public int[] nextPermutation(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: iload_2
       1: iload_1
       2: if_icmple     25
       5: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
       8: dup
       9: getstatic     #92                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.PERMUTATION_EXCEEDS_N:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      12: iload_2
      13: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: iload_1
      17: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: iconst_1
      21: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      24: athrow
      25: iload_2
      26: ifgt          44
      29: new           #4                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      32: dup
      33: getstatic     #93                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.PERMUTATION_SIZE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      36: iload_2
      37: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokespecial #7                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      43: athrow
      44: aload_0
      45: iload_1
      46: invokespecial #94                 // Method getNatural:(I)[I
      49: astore_3
      50: aload_0
      51: aload_3
      52: iload_1
      53: iload_2
      54: isub
      55: invokespecial #95                 // Method shuffle:([II)V
      58: iload_2
      59: newarray       int
      61: astore        4
      63: iconst_0
      64: istore        5
      66: iload         5
      68: iload_2
      69: if_icmpge     91
      72: aload         4
      74: iload         5
      76: aload_3
      77: iload_1
      78: iload         5
      80: isub
      81: iconst_1
      82: isub
      83: iaload
      84: iastore
      85: iinc          5, 1
      88: goto          66
      91: aload         4
      93: areturn

  public java.lang.Object[] nextSample(java.util.Collection<?>, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_1
       1: invokeinterface #96,  1           // InterfaceMethod java/util/Collection.size:()I
       6: istore_3
       7: iload_2
       8: iload_3
       9: if_icmple     32
      12: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      15: dup
      16: getstatic     #97                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      19: iload_2
      20: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: iload_3
      24: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: iconst_1
      28: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      31: athrow
      32: iload_2
      33: ifgt          51
      36: new           #4                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      39: dup
      40: getstatic     #98                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_SAMPLES:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      43: iload_2
      44: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: invokespecial #7                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      50: athrow
      51: aload_1
      52: invokeinterface #99,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      57: astore        4
      59: aload_0
      60: iload_3
      61: iload_2
      62: invokevirtual #100                // Method nextPermutation:(II)[I
      65: astore        5
      67: iload_2
      68: anewarray     #87                 // class java/lang/Object
      71: astore        6
      73: iconst_0
      74: istore        7
      76: iload         7
      78: iload_2
      79: if_icmpge     101
      82: aload         6
      84: iload         7
      86: aload         4
      88: aload         5
      90: iload         7
      92: iaload
      93: aaload
      94: aastore
      95: iinc          7, 1
      98: goto          76
     101: aload         6
     103: areturn

  public void reSeed(long);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       4: lload_1
       5: invokeinterface #101,  3          // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.setSeed:(J)V
      10: return

  public void reSeedSecure();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method getSecRan:()Ljava/security/SecureRandom;
       4: invokestatic  #102                // Method java/lang/System.currentTimeMillis:()J
       7: invokevirtual #103                // Method java/security/SecureRandom.setSeed:(J)V
      10: return

  public void reSeedSecure(long);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method getSecRan:()Ljava/security/SecureRandom;
       4: lload_1
       5: invokevirtual #103                // Method java/security/SecureRandom.setSeed:(J)V
       8: return

  public void reSeed();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getRan:()Lorg/apache/commons/math3/random/RandomGenerator;
       4: invokestatic  #102                // Method java/lang/System.currentTimeMillis:()J
       7: aload_0
       8: invokestatic  #104                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      11: i2l
      12: ladd
      13: invokeinterface #101,  3          // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.setSeed:(J)V
      18: return

  public void setSecureAlgorithm(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #105                // Method java/security/SecureRandom.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/SecureRandom;
       6: putfield      #3                  // Field secRand:Ljava/security/SecureRandom;
       9: return

  private org.apache.commons.math3.random.RandomGenerator getRan();
    Code:
       0: aload_0
       1: getfield      #2                  // Field rand:Lorg/apache/commons/math3/random/RandomGenerator;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #106                // Method initRan:()V
      11: aload_0
      12: getfield      #2                  // Field rand:Lorg/apache/commons/math3/random/RandomGenerator;
      15: areturn

  private void initRan();
    Code:
       0: aload_0
       1: new           #107                // class org/apache/commons/math3/random/Well19937c
       4: dup
       5: invokestatic  #102                // Method java/lang/System.currentTimeMillis:()J
       8: aload_0
       9: invokestatic  #104                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      12: i2l
      13: ladd
      14: invokespecial #108                // Method org/apache/commons/math3/random/Well19937c."<init>":(J)V
      17: putfield      #2                  // Field rand:Lorg/apache/commons/math3/random/RandomGenerator;
      20: return

  private java.security.SecureRandom getSecRan();
    Code:
       0: aload_0
       1: getfield      #3                  // Field secRand:Ljava/security/SecureRandom;
       4: ifnonnull     34
       7: aload_0
       8: new           #109                // class java/security/SecureRandom
      11: dup
      12: invokespecial #110                // Method java/security/SecureRandom."<init>":()V
      15: putfield      #3                  // Field secRand:Ljava/security/SecureRandom;
      18: aload_0
      19: getfield      #3                  // Field secRand:Ljava/security/SecureRandom;
      22: invokestatic  #102                // Method java/lang/System.currentTimeMillis:()J
      25: aload_0
      26: invokestatic  #104                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      29: i2l
      30: ladd
      31: invokevirtual #103                // Method java/security/SecureRandom.setSeed:(J)V
      34: aload_0
      35: getfield      #3                  // Field secRand:Ljava/security/SecureRandom;
      38: areturn

  private void shuffle(int[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: arraylength
       4: iconst_1
       5: isub
       6: istore        4
       8: iload         4
      10: iload_2
      11: if_icmplt     56
      14: iload         4
      16: ifne          24
      19: iconst_0
      20: istore_3
      21: goto          32
      24: aload_0
      25: iconst_0
      26: iload         4
      28: invokevirtual #111                // Method nextInt:(II)I
      31: istore_3
      32: aload_1
      33: iload_3
      34: iaload
      35: istore        5
      37: aload_1
      38: iload_3
      39: aload_1
      40: iload         4
      42: iaload
      43: iastore
      44: aload_1
      45: iload         4
      47: iload         5
      49: iastore
      50: iinc          4, -1
      53: goto          8
      56: return

  private int[] getNatural(int);
    Code:
       0: iload_1
       1: newarray       int
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     21
      11: aload_2
      12: iload_3
      13: iload_3
      14: iastore
      15: iinc          3, 1
      18: goto          6
      21: aload_2
      22: areturn
}
