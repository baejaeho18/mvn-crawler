Compiled from "NevilleInterpolator.java"
public class org.apache.commons.math3.analysis.interpolation.NevilleInterpolator implements org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator,java.io.Serializable {
  static final long serialVersionUID;

  public org.apache.commons.math3.analysis.interpolation.NevilleInterpolator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm interpolate(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NonMonotonicSequenceException;
    Code:
       0: new           #2                  // class org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #3                  // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm."<init>":([D[D)V
       9: areturn

  public org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #4                  // Method interpolate:([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm;
       6: areturn
}
