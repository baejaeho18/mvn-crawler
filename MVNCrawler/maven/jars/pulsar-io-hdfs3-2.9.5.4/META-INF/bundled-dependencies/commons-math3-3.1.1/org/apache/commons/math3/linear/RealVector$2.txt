Compiled from "RealVector.java"
final class org.apache.commons.math3.linear.RealVector$2 extends org.apache.commons.math3.linear.RealVector {
  final org.apache.commons.math3.linear.RealVector val$v;

  org.apache.commons.math3.linear.RealVector$2(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       9: return

  public org.apache.commons.math3.linear.RealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.commons.math3.linear.RealVector map(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #5                  // Method org/apache/commons/math3/linear/RealVector.map:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public java.util.Iterator<org.apache.commons.math3.linear.RealVector$Entry> iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #6                  // Method org/apache/commons/math3/linear/RealVector.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: new           #7                  // class org/apache/commons/math3/linear/RealVector$2$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #8                  // Method org/apache/commons/math3/linear/RealVector$2$1."<init>":(Lorg/apache/commons/math3/linear/RealVector$2;Ljava/util/Iterator;)V
      17: areturn

  public java.util.Iterator<org.apache.commons.math3.linear.RealVector$Entry> sparseIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #9                  // Method org/apache/commons/math3/linear/RealVector.sparseIterator:()Ljava/util/Iterator;
       7: astore_1
       8: new           #10                 // class org/apache/commons/math3/linear/RealVector$2$2
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #11                 // Method org/apache/commons/math3/linear/RealVector$2$2."<init>":(Lorg/apache/commons/math3/linear/RealVector$2;Ljava/util/Iterator;)V
      17: areturn

  public org.apache.commons.math3.linear.RealVector copy();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #12                 // Method org/apache/commons/math3/linear/RealVector.copy:()Lorg/apache/commons/math3/linear/RealVector;
       7: areturn

  public org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #13                 // Method org/apache/commons/math3/linear/RealVector.add:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.subtract:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapAdd(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.mapAdd:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapAddToSelf(double) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.commons.math3.linear.RealVector mapSubtract(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #16                 // Method org/apache/commons/math3/linear/RealVector.mapSubtract:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapSubtractToSelf(double) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.commons.math3.linear.RealVector mapMultiply(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #17                 // Method org/apache/commons/math3/linear/RealVector.mapMultiply:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapMultiplyToSelf(double) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.commons.math3.linear.RealVector mapDivide(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #18                 // Method org/apache/commons/math3/linear/RealVector.mapDivide:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapDivideToSelf(double) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #19                 // Method org/apache/commons/math3/linear/RealVector.ebeMultiply:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector ebeDivide(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #20                 // Method org/apache/commons/math3/linear/RealVector.ebeDivide:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public double dotProduct(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector.dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
       8: dreturn

  public double cosine(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector.cosine:(Lorg/apache/commons/math3/linear/RealVector;)D
       8: dreturn

  public double getNorm();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #23                 // Method org/apache/commons/math3/linear/RealVector.getNorm:()D
       7: dreturn

  public double getL1Norm();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #24                 // Method org/apache/commons/math3/linear/RealVector.getL1Norm:()D
       7: dreturn

  public double getLInfNorm();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #25                 // Method org/apache/commons/math3/linear/RealVector.getLInfNorm:()D
       7: dreturn

  public double getDistance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #26                 // Method org/apache/commons/math3/linear/RealVector.getDistance:(Lorg/apache/commons/math3/linear/RealVector;)D
       8: dreturn

  public double getL1Distance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/commons/math3/linear/RealVector.getL1Distance:(Lorg/apache/commons/math3/linear/RealVector;)D
       8: dreturn

  public double getLInfDistance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #28                 // Method org/apache/commons/math3/linear/RealVector.getLInfDistance:(Lorg/apache/commons/math3/linear/RealVector;)D
       8: dreturn

  public org.apache.commons.math3.linear.RealVector unitVector() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #29                 // Method org/apache/commons/math3/linear/RealVector.unitVector:()Lorg/apache/commons/math3/linear/RealVector;
       7: areturn

  public void unitize() throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.commons.math3.linear.RealMatrix outerProduct(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #30                 // Method org/apache/commons/math3/linear/RealVector.outerProduct:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;
       8: areturn

  public double getEntry(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: iload_1
       5: invokevirtual #31                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
       8: dreturn

  public void setEntry(int, double) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public void addToEntry(int, double) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public int getDimension();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #32                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
       7: ireturn

  public org.apache.commons.math3.linear.RealVector append(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #33                 // Method org/apache/commons/math3/linear/RealVector.append:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector append(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #34                 // Method org/apache/commons/math3/linear/RealVector.append:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector getSubVector(int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NotPositiveException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: iload_1
       5: iload_2
       6: invokevirtual #35                 // Method org/apache/commons/math3/linear/RealVector.getSubVector:(II)Lorg/apache/commons/math3/linear/RealVector;
       9: areturn

  public void setSubVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public void set(double) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double[] toArray();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #36                 // Method org/apache/commons/math3/linear/RealVector.toArray:()[D
       7: areturn

  public boolean isNaN();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #37                 // Method org/apache/commons/math3/linear/RealVector.isNaN:()Z
       7: ireturn

  public boolean isInfinite();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: invokevirtual #38                 // Method org/apache/commons/math3/linear/RealVector.isInfinite:()Z
       7: ireturn

  public org.apache.commons.math3.linear.RealVector combine(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$v:Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: dload_3
       6: aload         5
       8: invokevirtual #39                 // Method org/apache/commons/math3/linear/RealVector.combine:(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      11: areturn

  public org.apache.commons.math3.linear.RealVector combineToSelf(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #3                  // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #4                  // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow
}
