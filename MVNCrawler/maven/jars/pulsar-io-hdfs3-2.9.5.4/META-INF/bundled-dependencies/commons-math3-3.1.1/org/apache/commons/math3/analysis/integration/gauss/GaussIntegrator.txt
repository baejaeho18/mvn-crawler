Compiled from "GaussIntegrator.java"
public class org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator {
  private final double[] points;

  private final double[] weights;

  public org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator(double[], double[]) throws org.apache.commons.math3.exception.NonMonotonicSequenceException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: arraylength
       6: aload_2
       7: arraylength
       8: if_icmpeq     23
      11: new           #2                  // class org/apache/commons/math3/exception/DimensionMismatchException
      14: dup
      15: aload_1
      16: arraylength
      17: aload_2
      18: arraylength
      19: invokespecial #3                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: aload_1
      24: getstatic     #4                  // Field org/apache/commons/math3/util/MathArrays$OrderDirection.INCREASING:Lorg/apache/commons/math3/util/MathArrays$OrderDirection;
      27: iconst_1
      28: iconst_1
      29: invokestatic  #5                  // Method org/apache/commons/math3/util/MathArrays.checkOrder:([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z
      32: pop
      33: aload_0
      34: aload_1
      35: invokevirtual #6                  // Method "[D".clone:()Ljava/lang/Object;
      38: checkcast     #7                  // class "[D"
      41: putfield      #8                  // Field points:[D
      44: aload_0
      45: aload_2
      46: invokevirtual #9                  // Method "[D".clone:()Ljava/lang/Object;
      49: checkcast     #7                  // class "[D"
      52: putfield      #10                 // Field weights:[D
      55: return

  public org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator(org.apache.commons.math3.util.Pair<double[], double[]>) throws org.apache.commons.math3.exception.NonMonotonicSequenceException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method org/apache/commons/math3/util/Pair.getFirst:()Ljava/lang/Object;
       5: checkcast     #7                  // class "[D"
       8: aload_1
       9: invokevirtual #12                 // Method org/apache/commons/math3/util/Pair.getSecond:()Ljava/lang/Object;
      12: checkcast     #7                  // class "[D"
      15: invokespecial #13                 // Method "<init>":([D[D)V
      18: return

  public double integrate(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: dconst_0
       1: dstore_2
       2: dconst_0
       3: dstore        4
       5: iconst_0
       6: istore        6
       8: iload         6
      10: aload_0
      11: getfield      #8                  // Field points:[D
      14: arraylength
      15: if_icmpge     76
      18: aload_0
      19: getfield      #8                  // Field points:[D
      22: iload         6
      24: daload
      25: dstore        7
      27: aload_0
      28: getfield      #10                 // Field weights:[D
      31: iload         6
      33: daload
      34: dstore        9
      36: dload         9
      38: aload_1
      39: dload         7
      41: invokeinterface #14,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
      46: dmul
      47: dload         4
      49: dsub
      50: dstore        11
      52: dload_2
      53: dload         11
      55: dadd
      56: dstore        13
      58: dload         13
      60: dload_2
      61: dsub
      62: dload         11
      64: dsub
      65: dstore        4
      67: dload         13
      69: dstore_2
      70: iinc          6, 1
      73: goto          8
      76: dload_2
      77: dreturn

  public int getNumberOfPoints();
    Code:
       0: aload_0
       1: getfield      #8                  // Field points:[D
       4: arraylength
       5: ireturn
}
