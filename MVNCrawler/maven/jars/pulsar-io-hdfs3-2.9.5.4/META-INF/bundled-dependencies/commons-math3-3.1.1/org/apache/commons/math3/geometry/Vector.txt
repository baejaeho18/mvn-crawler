Compiled from "Vector.java"
public interface org.apache.commons.math3.geometry.Vector<S extends org.apache.commons.math3.geometry.Space> extends java.io.Serializable {
  public abstract org.apache.commons.math3.geometry.Space getSpace();

  public abstract org.apache.commons.math3.geometry.Vector<S> getZero();

  public abstract double getNorm1();

  public abstract double getNorm();

  public abstract double getNormSq();

  public abstract double getNormInf();

  public abstract org.apache.commons.math3.geometry.Vector<S> add(org.apache.commons.math3.geometry.Vector<S>);

  public abstract org.apache.commons.math3.geometry.Vector<S> add(double, org.apache.commons.math3.geometry.Vector<S>);

  public abstract org.apache.commons.math3.geometry.Vector<S> subtract(org.apache.commons.math3.geometry.Vector<S>);

  public abstract org.apache.commons.math3.geometry.Vector<S> subtract(double, org.apache.commons.math3.geometry.Vector<S>);

  public abstract org.apache.commons.math3.geometry.Vector<S> negate();

  public abstract org.apache.commons.math3.geometry.Vector<S> normalize() throws org.apache.commons.math3.exception.MathArithmeticException;

  public abstract org.apache.commons.math3.geometry.Vector<S> scalarMultiply(double);

  public abstract boolean isNaN();

  public abstract boolean isInfinite();

  public abstract double distance1(org.apache.commons.math3.geometry.Vector<S>);

  public abstract double distance(org.apache.commons.math3.geometry.Vector<S>);

  public abstract double distanceInf(org.apache.commons.math3.geometry.Vector<S>);

  public abstract double distanceSq(org.apache.commons.math3.geometry.Vector<S>);

  public abstract double dotProduct(org.apache.commons.math3.geometry.Vector<S>);

  public abstract java.lang.String toString(java.text.NumberFormat);
}
