Compiled from "AVLTree.java"
public class org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node {
  private T element;

  private org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node left;

  private org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node right;

  private org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node parent;

  private org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew skew;

  final org.apache.commons.math3.geometry.partitioning.utilities.AVLTree this$0;

  org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node(T, org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field element:Ljava/lang/Comparable;
      14: aload_0
      15: aconst_null
      16: putfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      19: aload_0
      20: aconst_null
      21: putfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      29: aload_0
      30: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      33: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      36: return

  public T getElement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field element:Ljava/lang/Comparable;
       4: areturn

  int size();
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       5: ifnonnull     12
       8: iconst_0
       9: goto          19
      12: aload_0
      13: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      16: invokevirtual #9                  // Method size:()I
      19: iadd
      20: aload_0
      21: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      24: ifnonnull     31
      27: iconst_0
      28: goto          38
      31: aload_0
      32: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      35: invokevirtual #9                  // Method size:()I
      38: iadd
      39: ireturn

  org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getSmallest();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       6: ifnull        17
       9: aload_1
      10: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      13: astore_1
      14: goto          2
      17: aload_1
      18: areturn

  org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getLargest();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       6: ifnull        17
       9: aload_1
      10: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      13: astore_1
      14: goto          2
      17: aload_1
      18: areturn

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getPrevious();
    Code:
       0: aload_0
       1: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: ifnull        21
       7: aload_0
       8: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      11: invokevirtual #10                 // Method getLargest:()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      14: astore_1
      15: aload_1
      16: ifnull        21
      19: aload_1
      20: areturn
      21: aload_0
      22: astore_1
      23: aload_1
      24: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      27: ifnull        54
      30: aload_1
      31: aload_1
      32: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      35: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      38: if_acmpeq     46
      41: aload_1
      42: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      45: areturn
      46: aload_1
      47: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      50: astore_1
      51: goto          23
      54: aconst_null
      55: areturn

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: ifnull        21
       7: aload_0
       8: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      11: invokevirtual #11                 // Method getSmallest:()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      14: astore_1
      15: aload_1
      16: ifnull        21
      19: aload_1
      20: areturn
      21: aload_0
      22: astore_1
      23: aload_1
      24: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      27: ifnull        54
      30: aload_1
      31: aload_1
      32: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      35: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      38: if_acmpeq     46
      41: aload_1
      42: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      45: areturn
      46: aload_1
      47: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      50: astore_1
      51: goto          23
      54: aconst_null
      55: areturn

  boolean insert(T);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field element:Ljava/lang/Comparable;
       5: invokeinterface #12,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      10: ifge          62
      13: aload_0
      14: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      17: ifnonnull     42
      20: aload_0
      21: new           #13                 // class org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node
      24: dup
      25: aload_0
      26: getfield      #4                  // Field this$0:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
      29: aload_1
      30: aload_0
      31: invokespecial #14                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;Ljava/lang/Comparable;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)V
      34: putfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      37: aload_0
      38: invokespecial #15                 // Method rebalanceLeftGrown:()Z
      41: ireturn
      42: aload_0
      43: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      46: aload_1
      47: invokevirtual #16                 // Method insert:(Ljava/lang/Comparable;)Z
      50: ifeq          60
      53: aload_0
      54: invokespecial #15                 // Method rebalanceLeftGrown:()Z
      57: goto          61
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      66: ifnonnull     91
      69: aload_0
      70: new           #13                 // class org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node
      73: dup
      74: aload_0
      75: getfield      #4                  // Field this$0:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
      78: aload_1
      79: aload_0
      80: invokespecial #14                 // Method "<init>":(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;Ljava/lang/Comparable;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)V
      83: putfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      86: aload_0
      87: invokespecial #17                 // Method rebalanceRightGrown:()Z
      90: ireturn
      91: aload_0
      92: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      95: aload_1
      96: invokevirtual #16                 // Method insert:(Ljava/lang/Comparable;)Z
      99: ifeq          109
     102: aload_0
     103: invokespecial #17                 // Method rebalanceRightGrown:()Z
     106: goto          110
     109: iconst_0
     110: ireturn

  public void delete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: ifnonnull     38
       7: aload_0
       8: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      11: ifnonnull     38
      14: aload_0
      15: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      18: ifnonnull     38
      21: aload_0
      22: aconst_null
      23: putfield      #3                  // Field element:Ljava/lang/Comparable;
      26: aload_0
      27: getfield      #4                  // Field this$0:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
      30: aconst_null
      31: invokestatic  #18                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.access$302:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      34: pop
      35: goto          235
      38: aload_0
      39: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      42: ifnonnull     81
      45: aload_0
      46: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      49: ifnonnull     81
      52: aload_0
      53: astore_1
      54: aload_0
      55: aconst_null
      56: putfield      #3                  // Field element:Ljava/lang/Comparable;
      59: aload_1
      60: aload_1
      61: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      64: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      67: if_acmpne     74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: istore_3
      76: aconst_null
      77: astore_2
      78: goto          150
      81: aload_0
      82: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      85: ifnull        98
      88: aload_0
      89: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      92: invokevirtual #10                 // Method getLargest:()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      95: goto          105
      98: aload_0
      99: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     102: invokevirtual #11                 // Method getSmallest:()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     105: astore_1
     106: aload_0
     107: aload_1
     108: getfield      #3                  // Field element:Ljava/lang/Comparable;
     111: putfield      #3                  // Field element:Ljava/lang/Comparable;
     114: aload_1
     115: aload_1
     116: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     119: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     122: if_acmpne     129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: istore_3
     131: aload_1
     132: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     135: ifnull        145
     138: aload_1
     139: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     142: goto          149
     145: aload_1
     146: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     149: astore_2
     150: aload_1
     151: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     154: astore_1
     155: iload_3
     156: ifeq          167
     159: aload_1
     160: aload_2
     161: putfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     164: goto          172
     167: aload_1
     168: aload_2
     169: putfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     172: aload_2
     173: ifnull        181
     176: aload_2
     177: aload_1
     178: putfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     181: iload_3
     182: ifeq          195
     185: aload_1
     186: invokespecial #19                 // Method rebalanceLeftShrunk:()Z
     189: ifeq          235
     192: goto          202
     195: aload_1
     196: invokespecial #20                 // Method rebalanceRightShrunk:()Z
     199: ifeq          235
     202: aload_1
     203: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     206: ifnonnull     210
     209: return
     210: aload_1
     211: aload_1
     212: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     215: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     218: if_acmpne     225
     221: iconst_1
     222: goto          226
     225: iconst_0
     226: istore_3
     227: aload_1
     228: getfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     231: astore_1
     232: goto          181
     235: return

  private boolean rebalanceLeftGrown();
    Code:
       0: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
       3: aload_0
       4: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
       7: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 203
               default: 212
          }
      36: aload_0
      37: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      40: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      43: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      46: if_acmpne     73
      49: aload_0
      50: invokespecial #24                 // Method rotateCW:()V
      53: aload_0
      54: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      57: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      60: aload_0
      61: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      64: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      67: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      70: goto          201
      73: aload_0
      74: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      77: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      80: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      83: astore_1
      84: aload_0
      85: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      88: invokespecial #25                 // Method rotateCCW:()V
      91: aload_0
      92: invokespecial #24                 // Method rotateCW:()V
      95: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
      98: aload_1
      99: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
     102: iaload
     103: lookupswitch  { // 2
                     1: 128
                     2: 151
               default: 174
          }
     128: aload_0
     129: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     132: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     135: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     138: aload_0
     139: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     142: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     145: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     148: goto          194
     151: aload_0
     152: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     155: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     158: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     161: aload_0
     162: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     165: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     168: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     171: goto          194
     174: aload_0
     175: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     178: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     181: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     184: aload_0
     185: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     188: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     191: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     194: aload_0
     195: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     198: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     201: iconst_0
     202: ireturn
     203: aload_0
     204: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     207: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     210: iconst_0
     211: ireturn
     212: aload_0
     213: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     216: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     219: iconst_1
     220: ireturn

  private boolean rebalanceRightGrown();
    Code:
       0: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
       3: aload_0
       4: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
       7: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 45
               default: 215
          }
      36: aload_0
      37: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      40: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      49: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      52: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      55: if_acmpne     82
      58: aload_0
      59: invokespecial #25                 // Method rotateCCW:()V
      62: aload_0
      63: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      66: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      69: aload_0
      70: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      73: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      76: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      79: goto          213
      82: aload_0
      83: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      86: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      89: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      92: astore_1
      93: aload_0
      94: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      97: invokespecial #24                 // Method rotateCW:()V
     100: aload_0
     101: invokespecial #25                 // Method rotateCCW:()V
     104: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
     107: aload_1
     108: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
     111: iaload
     112: lookupswitch  { // 2
                     1: 140
                     2: 163
               default: 186
          }
     140: aload_0
     141: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     144: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     147: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     150: aload_0
     151: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     154: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     157: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     160: goto          206
     163: aload_0
     164: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     167: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     170: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     173: aload_0
     174: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     177: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     180: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     183: goto          206
     186: aload_0
     187: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     190: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     193: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     196: aload_0
     197: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     200: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     203: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     206: aload_0
     207: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     210: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     213: iconst_0
     214: ireturn
     215: aload_0
     216: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     219: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     222: iconst_1
     223: ireturn

  private boolean rebalanceLeftShrunk();
    Code:
       0: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
       3: aload_0
       4: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
       7: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 45
               default: 247
          }
      36: aload_0
      37: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      40: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      43: iconst_1
      44: ireturn
      45: aload_0
      46: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      49: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      52: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      55: if_acmpne     81
      58: aload_0
      59: invokespecial #25                 // Method rotateCCW:()V
      62: aload_0
      63: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      66: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      69: aload_0
      70: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      73: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      76: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      79: iconst_1
      80: ireturn
      81: aload_0
      82: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      85: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      88: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      91: if_acmpne     117
      94: aload_0
      95: invokespecial #25                 // Method rotateCCW:()V
      98: aload_0
      99: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     102: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     105: aload_0
     106: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     109: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     112: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     115: iconst_0
     116: ireturn
     117: aload_0
     118: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     121: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     124: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     127: astore_1
     128: aload_0
     129: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     132: invokespecial #24                 // Method rotateCW:()V
     135: aload_0
     136: invokespecial #25                 // Method rotateCCW:()V
     139: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
     142: aload_1
     143: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
     146: iaload
     147: lookupswitch  { // 2
                     1: 172
                     2: 195
               default: 218
          }
     172: aload_0
     173: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     176: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     179: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     182: aload_0
     183: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     186: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     189: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     192: goto          238
     195: aload_0
     196: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     199: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     202: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     205: aload_0
     206: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     209: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     212: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     215: goto          238
     218: aload_0
     219: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     222: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     225: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     228: aload_0
     229: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     232: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     235: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     238: aload_0
     239: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     242: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     245: iconst_1
     246: ireturn
     247: aload_0
     248: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     251: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     254: iconst_0
     255: ireturn

  private boolean rebalanceRightShrunk();
    Code:
       0: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
       3: aload_0
       4: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
       7: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 45
                     2: 36
               default: 247
          }
      36: aload_0
      37: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      40: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      43: iconst_1
      44: ireturn
      45: aload_0
      46: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      49: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      52: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      55: if_acmpne     81
      58: aload_0
      59: invokespecial #24                 // Method rotateCW:()V
      62: aload_0
      63: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      66: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      69: aload_0
      70: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      73: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      76: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      79: iconst_1
      80: ireturn
      81: aload_0
      82: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      85: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      88: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
      91: if_acmpne     117
      94: aload_0
      95: invokespecial #24                 // Method rotateCW:()V
      98: aload_0
      99: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     102: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     105: aload_0
     106: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     109: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     112: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     115: iconst_0
     116: ireturn
     117: aload_0
     118: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     121: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     124: getfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     127: astore_1
     128: aload_0
     129: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     132: invokespecial #25                 // Method rotateCCW:()V
     135: aload_0
     136: invokespecial #24                 // Method rotateCW:()V
     139: getstatic     #21                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$1.$SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew:[I
     142: aload_1
     143: invokevirtual #22                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.ordinal:()I
     146: iaload
     147: lookupswitch  { // 2
                     1: 172
                     2: 195
               default: 218
          }
     172: aload_0
     173: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     176: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     179: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     182: aload_0
     183: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     186: getstatic     #26                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.RIGHT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     189: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     192: goto          238
     195: aload_0
     196: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     199: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     202: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     205: aload_0
     206: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     209: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     212: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     215: goto          238
     218: aload_0
     219: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     222: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     225: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     228: aload_0
     229: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
     232: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     235: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     238: aload_0
     239: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.BALANCED:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     242: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     245: iconst_1
     246: ireturn
     247: aload_0
     248: getstatic     #23                 // Field org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew.LEFT_HIGH:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     251: putfield      #8                  // Field skew:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
     254: iconst_0
     255: ireturn

  private void rotateCW();
    Code:
       0: aload_0
       1: getfield      #3                  // Field element:Ljava/lang/Comparable;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      10: getfield      #3                  // Field element:Ljava/lang/Comparable;
      13: putfield      #3                  // Field element:Ljava/lang/Comparable;
      16: aload_0
      17: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      20: aload_1
      21: putfield      #3                  // Field element:Ljava/lang/Comparable;
      24: aload_0
      25: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      28: astore_2
      29: aload_0
      30: aload_2
      31: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      34: putfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      37: aload_2
      38: aload_2
      39: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      42: putfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      45: aload_2
      46: aload_0
      47: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      50: putfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      53: aload_0
      54: aload_2
      55: putfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      58: aload_0
      59: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      62: ifnull        73
      65: aload_0
      66: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      69: aload_0
      70: putfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      73: aload_0
      74: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      77: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      80: ifnull        97
      83: aload_0
      84: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      87: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      90: aload_0
      91: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      94: putfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      97: return

  private void rotateCCW();
    Code:
       0: aload_0
       1: getfield      #3                  // Field element:Ljava/lang/Comparable;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      10: getfield      #3                  // Field element:Ljava/lang/Comparable;
      13: putfield      #3                  // Field element:Ljava/lang/Comparable;
      16: aload_0
      17: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      20: aload_1
      21: putfield      #3                  // Field element:Ljava/lang/Comparable;
      24: aload_0
      25: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      28: astore_2
      29: aload_0
      30: aload_2
      31: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      34: putfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      37: aload_2
      38: aload_2
      39: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      42: putfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      45: aload_2
      46: aload_0
      47: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      50: putfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      53: aload_0
      54: aload_2
      55: putfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      58: aload_0
      59: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      62: ifnull        73
      65: aload_0
      66: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      69: aload_0
      70: putfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      73: aload_0
      74: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      77: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      80: ifnull        97
      83: aload_0
      84: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      87: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      90: aload_0
      91: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      94: putfield      #6                  // Field parent:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      97: return

  static java.lang.Comparable access$000(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field element:Ljava/lang/Comparable;
       4: areturn

  static org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node access$100(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field right:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: areturn

  static org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node access$200(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node);
    Code:
       0: aload_0
       1: getfield      #1                  // Field left:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: areturn
}
