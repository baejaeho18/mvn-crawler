Compiled from "RealVector.java"
public abstract class org.apache.commons.math3.linear.RealVector {
  public org.apache.commons.math3.linear.RealVector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract int getDimension();

  public abstract double getEntry(int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setEntry(int, double) throws org.apache.commons.math3.exception.OutOfRangeException;

  public void addToEntry(int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: iload_1
       4: invokevirtual #2                  // Method getEntry:(I)D
       7: dload_2
       8: dadd
       9: invokevirtual #3                  // Method setEntry:(ID)V
      12: return

  public abstract org.apache.commons.math3.linear.RealVector append(org.apache.commons.math3.linear.RealVector);

  public abstract org.apache.commons.math3.linear.RealVector append(double);

  public abstract org.apache.commons.math3.linear.RealVector getSubVector(int, int) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setSubVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract boolean isNaN();

  public abstract boolean isInfinite();

  protected void checkVectorDimensions(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method getDimension:()I
       5: invokevirtual #5                  // Method checkVectorDimensions:(I)V
       8: return

  protected void checkVectorDimensions(int) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getDimension:()I
       4: istore_2
       5: iload_2
       6: iload_1
       7: if_icmpeq     20
      10: new           #6                  // class org/apache/commons/math3/exception/DimensionMismatchException
      13: dup
      14: iload_2
      15: iload_1
      16: invokespecial #7                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      19: athrow
      20: return

  protected void checkIndex(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #4                  // Method getDimension:()I
       9: if_icmplt     40
      12: new           #8                  // class org/apache/commons/math3/exception/OutOfRangeException
      15: dup
      16: getstatic     #9                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      19: iload_1
      20: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: iconst_0
      24: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aload_0
      28: invokevirtual #4                  // Method getDimension:()I
      31: iconst_1
      32: isub
      33: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: invokespecial #11                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      39: athrow
      40: return

  protected void checkIndices(int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getDimension:()I
       4: istore_3
       5: iload_1
       6: iflt          14
       9: iload_1
      10: iload_3
      11: if_icmplt     39
      14: new           #8                  // class org/apache/commons/math3/exception/OutOfRangeException
      17: dup
      18: getstatic     #9                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      21: iload_1
      22: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: iconst_0
      26: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: iload_3
      30: iconst_1
      31: isub
      32: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokespecial #11                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      38: athrow
      39: iload_2
      40: iflt          48
      43: iload_2
      44: iload_3
      45: if_icmplt     73
      48: new           #8                  // class org/apache/commons/math3/exception/OutOfRangeException
      51: dup
      52: getstatic     #9                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      55: iload_2
      56: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: iconst_0
      60: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: iload_3
      64: iconst_1
      65: isub
      66: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokespecial #11                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      72: athrow
      73: iload_2
      74: iload_1
      75: if_icmpge     98
      78: new           #12                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      81: dup
      82: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      85: iload_2
      86: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: iload_1
      90: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: iconst_0
      94: invokespecial #14                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      97: athrow
      98: return

  public org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
       5: aload_1
       6: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/linear/RealVector;
       9: astore_2
      10: aload_0
      11: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          63
      24: aload_3
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      33: astore        4
      35: aload         4
      37: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
      40: istore        5
      42: aload_2
      43: iload         5
      45: aload         4
      47: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      50: aload_2
      51: iload         5
      53: invokevirtual #2                  // Method getEntry:(I)D
      56: dadd
      57: invokevirtual #3                  // Method setEntry:(ID)V
      60: goto          15
      63: aload_2
      64: areturn

  public org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
       5: aload_1
       6: ldc2_w        #23                 // double -1.0d
       9: invokevirtual #25                 // Method mapMultiply:(D)Lorg/apache/commons/math3/linear/RealVector;
      12: astore_2
      13: aload_0
      14: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          66
      27: aload_3
      28: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      36: astore        4
      38: aload         4
      40: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
      43: istore        5
      45: aload_2
      46: iload         5
      48: aload         4
      50: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      53: aload_2
      54: iload         5
      56: invokevirtual #2                  // Method getEntry:(I)D
      59: dadd
      60: invokevirtual #3                  // Method setEntry:(ID)V
      63: goto          18
      66: aload_2
      67: areturn

  public org.apache.commons.math3.linear.RealVector mapAdd(double);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #26                 // Method mapAddToSelf:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapAddToSelf(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: ifeq          22
       6: aload_0
       7: new           #27                 // class org/apache/commons/math3/analysis/function/Add
      10: dup
      11: invokespecial #28                 // Method org/apache/commons/math3/analysis/function/Add."<init>":()V
      14: dload_1
      15: invokestatic  #29                 // Method org/apache/commons/math3/analysis/FunctionUtils.fix2ndArgument:(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
      18: invokevirtual #30                 // Method mapToSelf:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
      21: areturn
      22: aload_0
      23: areturn

  public abstract org.apache.commons.math3.linear.RealVector copy();

  public double dotProduct(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
       5: dconst_0
       6: dstore_2
       7: aload_0
       8: invokevirtual #4                  // Method getDimension:()I
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     45
      23: dload_2
      24: aload_0
      25: iload         5
      27: invokevirtual #2                  // Method getEntry:(I)D
      30: aload_1
      31: iload         5
      33: invokevirtual #2                  // Method getEntry:(I)D
      36: dmul
      37: dadd
      38: dstore_2
      39: iinc          5, 1
      42: goto          16
      45: dload_2
      46: dreturn

  public double cosine(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getNorm:()D
       4: dstore_2
       5: aload_1
       6: invokevirtual #31                 // Method getNorm:()D
       9: dstore        4
      11: dload_2
      12: dconst_0
      13: dcmpl
      14: ifeq          24
      17: dload         4
      19: dconst_0
      20: dcmpl
      21: ifne          39
      24: new           #32                 // class org/apache/commons/math3/exception/MathArithmeticException
      27: dup
      28: getstatic     #33                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.ZERO_NORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      31: iconst_0
      32: anewarray     #34                 // class java/lang/Object
      35: invokespecial #35                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      38: athrow
      39: aload_0
      40: aload_1
      41: invokevirtual #36                 // Method dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      44: dload_2
      45: dload         4
      47: dmul
      48: ddiv
      49: dreturn

  public abstract org.apache.commons.math3.linear.RealVector ebeDivide(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public double getDistance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
       5: dconst_0
       6: dstore_2
       7: aload_0
       8: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          63
      23: aload         4
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      33: astore        5
      35: aload         5
      37: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      40: aload_1
      41: aload         5
      43: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
      46: invokevirtual #2                  // Method getEntry:(I)D
      49: dsub
      50: dstore        6
      52: dload_2
      53: dload         6
      55: dload         6
      57: dmul
      58: dadd
      59: dstore_2
      60: goto          13
      63: dload_2
      64: invokestatic  #37                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      67: dreturn

  public double getNorm();
    Code:
       0: dconst_0
       1: dstore_1
       2: aload_0
       3: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          45
      16: aload_3
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      25: astore        4
      27: aload         4
      29: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      32: dstore        5
      34: dload_1
      35: dload         5
      37: dload         5
      39: dmul
      40: dadd
      41: dstore_1
      42: goto          7
      45: dload_1
      46: invokestatic  #37                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      49: dreturn

  public double getL1Norm();
    Code:
       0: dconst_0
       1: dstore_1
       2: aload_0
       3: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_3
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      25: astore        4
      27: dload_1
      28: aload         4
      30: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      33: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      36: dadd
      37: dstore_1
      38: goto          7
      41: dload_1
      42: dreturn

  public double getLInfNorm();
    Code:
       0: dconst_0
       1: dstore_1
       2: aload_0
       3: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          43
      16: aload_3
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      25: astore        4
      27: dload_1
      28: aload         4
      30: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      33: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      36: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      39: dstore_1
      40: goto          7
      43: dload_1
      44: dreturn

  public double getL1Distance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
       5: dconst_0
       6: dstore_2
       7: aload_0
       8: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          59
      23: aload         4
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      33: astore        5
      35: dload_2
      36: aload         5
      38: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      41: aload_1
      42: aload         5
      44: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
      47: invokevirtual #2                  // Method getEntry:(I)D
      50: dsub
      51: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      54: dadd
      55: dstore_2
      56: goto          13
      59: dload_2
      60: dreturn

  public double getLInfDistance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
       5: dconst_0
       6: dstore_2
       7: aload_0
       8: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          61
      23: aload         4
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      33: astore        5
      35: aload         5
      37: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      40: aload_1
      41: aload         5
      43: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
      46: invokevirtual #2                  // Method getEntry:(I)D
      49: dsub
      50: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      53: dload_2
      54: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      57: dstore_2
      58: goto          13
      61: dload_2
      62: dreturn

  public int getMinIndex();
    Code:
       0: iconst_m1
       1: istore_1
       2: ldc2_w        #40                 // double Infinityd
       5: dstore_2
       6: aload_0
       7: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      10: astore        4
      12: aload         4
      14: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          59
      22: aload         4
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      32: astore        5
      34: aload         5
      36: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      39: dload_2
      40: dcmpg
      41: ifgt          56
      44: aload         5
      46: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
      49: istore_1
      50: aload         5
      52: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      55: dstore_2
      56: goto          12
      59: iload_1
      60: ireturn

  public double getMinValue();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getMinIndex:()I
       4: istore_1
       5: iload_1
       6: ifge          15
       9: ldc2_w        #43                 // double NaNd
      12: goto          20
      15: aload_0
      16: iload_1
      17: invokevirtual #2                  // Method getEntry:(I)D
      20: dreturn

  public int getMaxIndex();
    Code:
       0: iconst_m1
       1: istore_1
       2: ldc2_w        #45                 // double -Infinityd
       5: dstore_2
       6: aload_0
       7: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
      10: astore        4
      12: aload         4
      14: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          59
      22: aload         4
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      32: astore        5
      34: aload         5
      36: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      39: dload_2
      40: dcmpl
      41: iflt          56
      44: aload         5
      46: invokevirtual #21                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
      49: istore_1
      50: aload         5
      52: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      55: dstore_2
      56: goto          12
      59: iload_1
      60: ireturn

  public double getMaxValue();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getMaxIndex:()I
       4: istore_1
       5: iload_1
       6: ifge          15
       9: ldc2_w        #43                 // double NaNd
      12: goto          20
      15: aload_0
      16: iload_1
      17: invokevirtual #2                  // Method getEntry:(I)D
      20: dreturn

  public org.apache.commons.math3.linear.RealVector mapMultiply(double);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #48                 // Method mapMultiplyToSelf:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapMultiplyToSelf(double);
    Code:
       0: aload_0
       1: new           #49                 // class org/apache/commons/math3/analysis/function/Multiply
       4: dup
       5: invokespecial #50                 // Method org/apache/commons/math3/analysis/function/Multiply."<init>":()V
       8: dload_1
       9: invokestatic  #29                 // Method org/apache/commons/math3/analysis/FunctionUtils.fix2ndArgument:(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
      12: invokevirtual #30                 // Method mapToSelf:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
      15: areturn

  public org.apache.commons.math3.linear.RealVector mapSubtract(double);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #51                 // Method mapSubtractToSelf:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapSubtractToSelf(double);
    Code:
       0: aload_0
       1: dload_1
       2: dneg
       3: invokevirtual #26                 // Method mapAddToSelf:(D)Lorg/apache/commons/math3/linear/RealVector;
       6: areturn

  public org.apache.commons.math3.linear.RealVector mapDivide(double);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: invokevirtual #52                 // Method mapDivideToSelf:(D)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapDivideToSelf(double);
    Code:
       0: aload_0
       1: new           #53                 // class org/apache/commons/math3/analysis/function/Divide
       4: dup
       5: invokespecial #54                 // Method org/apache/commons/math3/analysis/function/Divide."<init>":()V
       8: dload_1
       9: invokestatic  #29                 // Method org/apache/commons/math3/analysis/FunctionUtils.fix2ndArgument:(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
      12: invokevirtual #30                 // Method mapToSelf:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
      15: areturn

  public org.apache.commons.math3.linear.RealMatrix outerProduct(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getDimension:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #4                  // Method getDimension:()I
       9: istore_3
      10: aload_1
      11: instanceof    #55                 // class org/apache/commons/math3/linear/SparseRealVector
      14: ifne          24
      17: aload_0
      18: instanceof    #55                 // class org/apache/commons/math3/linear/SparseRealVector
      21: ifeq          38
      24: new           #56                 // class org/apache/commons/math3/linear/OpenMapRealMatrix
      27: dup
      28: iload_2
      29: iload_3
      30: invokespecial #57                 // Method org/apache/commons/math3/linear/OpenMapRealMatrix."<init>":(II)V
      33: astore        4
      35: goto          49
      38: new           #58                 // class org/apache/commons/math3/linear/Array2DRowRealMatrix
      41: dup
      42: iload_2
      43: iload_3
      44: invokespecial #59                 // Method org/apache/commons/math3/linear/Array2DRowRealMatrix."<init>":(II)V
      47: astore        4
      49: iconst_0
      50: istore        5
      52: iload         5
      54: iload_2
      55: if_icmpge     103
      58: iconst_0
      59: istore        6
      61: iload         6
      63: iload_3
      64: if_icmpge     97
      67: aload         4
      69: iload         5
      71: iload         6
      73: aload_0
      74: iload         5
      76: invokevirtual #2                  // Method getEntry:(I)D
      79: aload_1
      80: iload         6
      82: invokevirtual #2                  // Method getEntry:(I)D
      85: dmul
      86: invokeinterface #60,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      91: iinc          6, 1
      94: goto          61
      97: iinc          5, 1
     100: goto          52
     103: aload         4
     105: areturn

  public org.apache.commons.math3.linear.RealVector projection(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #36                 // Method dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
       5: dstore_2
       6: dload_2
       7: dconst_0
       8: dcmpl
       9: ifne          27
      12: new           #32                 // class org/apache/commons/math3/exception/MathArithmeticException
      15: dup
      16: getstatic     #33                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.ZERO_NORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      19: iconst_0
      20: anewarray     #34                 // class java/lang/Object
      23: invokespecial #35                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      26: athrow
      27: aload_1
      28: aload_0
      29: aload_1
      30: invokevirtual #36                 // Method dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      33: aload_1
      34: aload_1
      35: invokevirtual #36                 // Method dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      38: ddiv
      39: invokevirtual #25                 // Method mapMultiply:(D)Lorg/apache/commons/math3/linear/RealVector;
      42: areturn

  public void set(double);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          34
      14: aload_3
      15: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      23: astore        4
      25: aload         4
      27: dload_1
      28: invokevirtual #61                 // Method org/apache/commons/math3/linear/RealVector$Entry.setValue:(D)V
      31: goto          5
      34: return

  public double[] toArray();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getDimension:()I
       4: istore_1
       5: iload_1
       6: newarray       double
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_1
      13: if_icmpge     30
      16: aload_2
      17: iload_3
      18: aload_0
      19: iload_3
      20: invokevirtual #2                  // Method getEntry:(I)D
      23: dastore
      24: iinc          3, 1
      27: goto          11
      30: aload_2
      31: areturn

  public org.apache.commons.math3.linear.RealVector unitVector() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getNorm:()D
       4: dstore_1
       5: dload_1
       6: dconst_0
       7: dcmpl
       8: ifne          26
      11: new           #32                 // class org/apache/commons/math3/exception/MathArithmeticException
      14: dup
      15: getstatic     #33                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.ZERO_NORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: iconst_0
      19: anewarray     #34                 // class java/lang/Object
      22: invokespecial #35                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      25: athrow
      26: aload_0
      27: dload_1
      28: invokevirtual #62                 // Method mapDivide:(D)Lorg/apache/commons/math3/linear/RealVector;
      31: areturn

  public void unitize() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getNorm:()D
       4: dstore_1
       5: dload_1
       6: dconst_0
       7: dcmpl
       8: ifne          26
      11: new           #32                 // class org/apache/commons/math3/exception/MathArithmeticException
      14: dup
      15: getstatic     #33                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.ZERO_NORM:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: iconst_0
      19: anewarray     #34                 // class java/lang/Object
      22: invokespecial #35                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      25: athrow
      26: aload_0
      27: aload_0
      28: invokevirtual #31                 // Method getNorm:()D
      31: invokevirtual #52                 // Method mapDivideToSelf:(D)Lorg/apache/commons/math3/linear/RealVector;
      34: pop
      35: return

  public java.util.Iterator<org.apache.commons.math3.linear.RealVector$Entry> sparseIterator();
    Code:
       0: new           #63                 // class org/apache/commons/math3/linear/RealVector$SparseEntryIterator
       3: dup
       4: aload_0
       5: invokespecial #64                 // Method org/apache/commons/math3/linear/RealVector$SparseEntryIterator."<init>":(Lorg/apache/commons/math3/linear/RealVector;)V
       8: areturn

  public java.util.Iterator<org.apache.commons.math3.linear.RealVector$Entry> iterator();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getDimension:()I
       4: istore_1
       5: new           #65                 // class org/apache/commons/math3/linear/RealVector$1
       8: dup
       9: aload_0
      10: iload_1
      11: invokespecial #66                 // Method org/apache/commons/math3/linear/RealVector$1."<init>":(Lorg/apache/commons/math3/linear/RealVector;I)V
      14: areturn

  public org.apache.commons.math3.linear.RealVector map(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/linear/RealVector;
       4: aload_1
       5: invokevirtual #30                 // Method mapToSelf:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          41
      14: aload_2
      15: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #20                 // class org/apache/commons/math3/linear/RealVector$Entry
      23: astore_3
      24: aload_3
      25: aload_1
      26: aload_3
      27: invokevirtual #22                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
      30: invokeinterface #67,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
      35: invokevirtual #61                 // Method org/apache/commons/math3/linear/RealVector$Entry.setValue:(D)V
      38: goto          5
      41: aload_0
      42: areturn

  public org.apache.commons.math3.linear.RealVector combine(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/linear/RealVector;
       4: dload_1
       5: dload_3
       6: aload         5
       8: invokevirtual #68                 // Method combineToSelf:(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
      11: areturn

  public org.apache.commons.math3.linear.RealVector combineToSelf(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload         5
       3: invokevirtual #15                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
       6: iconst_0
       7: istore        6
       9: iload         6
      11: aload_0
      12: invokevirtual #4                  // Method getDimension:()I
      15: if_icmpge     56
      18: aload_0
      19: iload         6
      21: invokevirtual #2                  // Method getEntry:(I)D
      24: dstore        7
      26: aload         5
      28: iload         6
      30: invokevirtual #2                  // Method getEntry:(I)D
      33: dstore        9
      35: aload_0
      36: iload         6
      38: dload_1
      39: dload         7
      41: dmul
      42: dload_3
      43: dload         9
      45: dmul
      46: dadd
      47: invokevirtual #3                  // Method setEntry:(ID)V
      50: iinc          6, 1
      53: goto          9
      56: aload_0
      57: areturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getDimension:()I
       4: istore_2
       5: aload_1
       6: iload_2
       7: iconst_0
       8: iload_2
       9: iconst_1
      10: isub
      11: invokeinterface #69,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.start:(III)V
      16: iconst_0
      17: istore_3
      18: iload_3
      19: iload_2
      20: if_icmpge     41
      23: aload_1
      24: iload_3
      25: aload_0
      26: iload_3
      27: invokevirtual #2                  // Method getEntry:(I)D
      30: invokeinterface #70,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.visit:(ID)V
      35: iinc          3, 1
      38: goto          18
      41: aload_1
      42: invokeinterface #71,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.end:()D
      47: dreturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #72                 // Method checkIndices:(II)V
       6: aload_1
       7: aload_0
       8: invokevirtual #4                  // Method getDimension:()I
      11: iload_2
      12: iload_3
      13: invokeinterface #69,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.start:(III)V
      18: iload_2
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpgt     47
      27: aload_1
      28: iload         4
      30: aload_0
      31: iload         4
      33: invokevirtual #2                  // Method getEntry:(I)D
      36: invokeinterface #70,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.visit:(ID)V
      41: iinc          4, 1
      44: goto          21
      47: aload_1
      48: invokeinterface #71,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.end:()D
      53: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
       5: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #74                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
       7: dreturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getDimension:()I
       4: istore_2
       5: aload_1
       6: iload_2
       7: iconst_0
       8: iload_2
       9: iconst_1
      10: isub
      11: invokeinterface #75,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.start:(III)V
      16: iconst_0
      17: istore_3
      18: iload_3
      19: iload_2
      20: if_icmpge     46
      23: aload_0
      24: iload_3
      25: aload_1
      26: iload_3
      27: aload_0
      28: iload_3
      29: invokevirtual #2                  // Method getEntry:(I)D
      32: invokeinterface #76,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.visit:(ID)D
      37: invokevirtual #3                  // Method setEntry:(ID)V
      40: iinc          3, 1
      43: goto          18
      46: aload_1
      47: invokeinterface #77,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.end:()D
      52: dreturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #72                 // Method checkIndices:(II)V
       6: aload_1
       7: aload_0
       8: invokevirtual #4                  // Method getDimension:()I
      11: iload_2
      12: iload_3
      13: invokeinterface #75,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.start:(III)V
      18: iload_2
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpgt     53
      27: aload_0
      28: iload         4
      30: aload_1
      31: iload         4
      33: aload_0
      34: iload         4
      36: invokevirtual #2                  // Method getEntry:(I)D
      39: invokeinterface #76,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.visit:(ID)D
      44: invokevirtual #3                  // Method setEntry:(ID)V
      47: iinc          4, 1
      50: goto          21
      53: aload_1
      54: invokeinterface #77,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.end:()D
      59: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
       5: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #79                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
       7: dreturn

  public boolean equals(java.lang.Object) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #80                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #81                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public int hashCode() throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #80                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #81                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public static org.apache.commons.math3.linear.RealVector unmodifiableRealVector(org.apache.commons.math3.linear.RealVector);
    Code:
       0: new           #82                 // class org/apache/commons/math3/linear/RealVector$2
       3: dup
       4: aload_0
       5: invokespecial #83                 // Method org/apache/commons/math3/linear/RealVector$2."<init>":(Lorg/apache/commons/math3/linear/RealVector;)V
       8: areturn
}
