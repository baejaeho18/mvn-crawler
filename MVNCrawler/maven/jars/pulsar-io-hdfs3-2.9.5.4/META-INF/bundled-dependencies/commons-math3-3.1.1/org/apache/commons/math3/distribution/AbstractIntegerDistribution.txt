Compiled from "AbstractIntegerDistribution.java"
public abstract class org.apache.commons.math3.distribution.AbstractIntegerDistribution implements org.apache.commons.math3.distribution.IntegerDistribution,java.io.Serializable {
  private static final long serialVersionUID;

  protected final org.apache.commons.math3.random.RandomDataImpl randomData;

  protected final org.apache.commons.math3.random.RandomGenerator random;

  protected org.apache.commons.math3.distribution.AbstractIntegerDistribution();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/random/RandomDataImpl
       8: dup
       9: invokespecial #3                  // Method org/apache/commons/math3/random/RandomDataImpl."<init>":()V
      12: putfield      #4                  // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field random:Lorg/apache/commons/math3/random/RandomGenerator;
      20: return

  protected org.apache.commons.math3.distribution.AbstractIntegerDistribution(org.apache.commons.math3.random.RandomGenerator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/random/RandomDataImpl
       8: dup
       9: invokespecial #3                  // Method org/apache/commons/math3/random/RandomDataImpl."<init>":()V
      12: putfield      #4                  // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field random:Lorg/apache/commons/math3/random/RandomGenerator;
      20: return

  public double cumulativeProbability(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: iload_2
       1: iload_1
       2: if_icmpge     25
       5: new           #6                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
       8: dup
       9: getstatic     #7                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      12: iload_1
      13: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: iload_2
      17: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: iconst_1
      21: invokespecial #9                  // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      24: athrow
      25: aload_0
      26: iload_2
      27: invokevirtual #10                 // Method cumulativeProbability:(I)D
      30: aload_0
      31: iload_1
      32: invokevirtual #10                 // Method cumulativeProbability:(I)D
      35: dsub
      36: dreturn

  public int inverseCumulativeProbability(double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          12
       6: dload_1
       7: dconst_1
       8: dcmpl
       9: ifle          32
      12: new           #11                 // class org/apache/commons/math3/exception/OutOfRangeException
      15: dup
      16: dload_1
      17: invokestatic  #12                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      20: iconst_0
      21: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: iconst_1
      25: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokespecial #13                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      31: athrow
      32: aload_0
      33: invokevirtual #14                 // Method getSupportLowerBound:()I
      36: istore_3
      37: dload_1
      38: dconst_0
      39: dcmpl
      40: ifne          45
      43: iload_3
      44: ireturn
      45: iload_3
      46: ldc           #15                 // int -2147483648
      48: if_icmpne     63
      51: aload_0
      52: iload_3
      53: invokespecial #16                 // Method checkedCumulativeProbability:(I)D
      56: dload_1
      57: dcmpl
      58: iflt          66
      61: iload_3
      62: ireturn
      63: iinc          3, -1
      66: aload_0
      67: invokevirtual #17                 // Method getSupportUpperBound:()I
      70: istore        4
      72: dload_1
      73: dconst_1
      74: dcmpl
      75: ifne          81
      78: iload         4
      80: ireturn
      81: aload_0
      82: invokevirtual #18                 // Method getNumericalMean:()D
      85: dstore        5
      87: aload_0
      88: invokevirtual #19                 // Method getNumericalVariance:()D
      91: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      94: dstore        7
      96: dload         5
      98: invokestatic  #21                 // Method java/lang/Double.isInfinite:(D)Z
     101: ifne          139
     104: dload         5
     106: invokestatic  #22                 // Method java/lang/Double.isNaN:(D)Z
     109: ifne          139
     112: dload         7
     114: invokestatic  #21                 // Method java/lang/Double.isInfinite:(D)Z
     117: ifne          139
     120: dload         7
     122: invokestatic  #22                 // Method java/lang/Double.isNaN:(D)Z
     125: ifne          139
     128: dload         7
     130: dconst_0
     131: dcmpl
     132: ifeq          139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: istore        9
     142: iload         9
     144: ifeq          219
     147: dconst_1
     148: dload_1
     149: dsub
     150: dload_1
     151: ddiv
     152: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     155: dstore        10
     157: dload         5
     159: dload         10
     161: dload         7
     163: dmul
     164: dsub
     165: dstore        12
     167: dload         12
     169: iload_3
     170: i2d
     171: dcmpl
     172: ifle          184
     175: dload         12
     177: invokestatic  #23                 // Method java/lang/Math.ceil:(D)D
     180: d2i
     181: iconst_1
     182: isub
     183: istore_3
     184: dconst_1
     185: dload         10
     187: ddiv
     188: dstore        10
     190: dload         5
     192: dload         10
     194: dload         7
     196: dmul
     197: dadd
     198: dstore        12
     200: dload         12
     202: iload         4
     204: i2d
     205: dcmpg
     206: ifge          219
     209: dload         12
     211: invokestatic  #23                 // Method java/lang/Math.ceil:(D)D
     214: d2i
     215: iconst_1
     216: isub
     217: istore        4
     219: aload_0
     220: dload_1
     221: iload_3
     222: iload         4
     224: invokevirtual #24                 // Method solveInverseCumulativeProbability:(DII)I
     227: ireturn

  protected int solveInverseCumulativeProbability(double, int, int);
    Code:
       0: iload_3
       1: iconst_1
       2: iadd
       3: iload         4
       5: if_icmpge     67
       8: iload_3
       9: iload         4
      11: iadd
      12: iconst_2
      13: idiv
      14: istore        5
      16: iload         5
      18: iload_3
      19: if_icmplt     29
      22: iload         5
      24: iload         4
      26: if_icmple     39
      29: iload_3
      30: iload         4
      32: iload_3
      33: isub
      34: iconst_2
      35: idiv
      36: iadd
      37: istore        5
      39: aload_0
      40: iload         5
      42: invokespecial #16                 // Method checkedCumulativeProbability:(I)D
      45: dstore        6
      47: dload         6
      49: dload_1
      50: dcmpl
      51: iflt          61
      54: iload         5
      56: istore        4
      58: goto          64
      61: iload         5
      63: istore_3
      64: goto          0
      67: iload         4
      69: ireturn

  public void reseedRandomGenerator(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field random:Lorg/apache/commons/math3/random/RandomGenerator;
       4: lload_1
       5: invokeinterface #25,  3           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.setSeed:(J)V
      10: aload_0
      11: getfield      #4                  // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
      14: lload_1
      15: invokevirtual #26                 // Method org/apache/commons/math3/random/RandomDataImpl.reSeed:(J)V
      18: return

  public int sample();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field random:Lorg/apache/commons/math3/random/RandomGenerator;
       5: invokeinterface #27,  1           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextDouble:()D
      10: invokevirtual #28                 // Method inverseCumulativeProbability:(D)I
      13: ireturn

  public int[] sample(int);
    Code:
       0: iload_1
       1: ifgt          19
       4: new           #29                 // class org/apache/commons/math3/exception/NotStrictlyPositiveException
       7: dup
       8: getstatic     #30                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_SAMPLES:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_1
      12: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #31                 // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: iload_1
      20: newarray       int
      22: astore_2
      23: iconst_0
      24: istore_3
      25: iload_3
      26: iload_1
      27: if_icmpge     43
      30: aload_2
      31: iload_3
      32: aload_0
      33: invokevirtual #32                 // Method sample:()I
      36: iastore
      37: iinc          3, 1
      40: goto          25
      43: aload_2
      44: areturn

  private double checkedCumulativeProbability(int) throws org.apache.commons.math3.exception.MathInternalError;
    Code:
       0: ldc2_w        #33                 // double NaNd
       3: dstore_2
       4: aload_0
       5: iload_1
       6: invokevirtual #10                 // Method cumulativeProbability:(I)D
       9: dstore_2
      10: dload_2
      11: invokestatic  #22                 // Method java/lang/Double.isNaN:(D)Z
      14: ifeq          39
      17: new           #35                 // class org/apache/commons/math3/exception/MathInternalError
      20: dup
      21: getstatic     #36                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      24: iconst_1
      25: anewarray     #37                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: iload_1
      31: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokespecial #38                 // Method org/apache/commons/math3/exception/MathInternalError."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      38: athrow
      39: dload_2
      40: dreturn
}
