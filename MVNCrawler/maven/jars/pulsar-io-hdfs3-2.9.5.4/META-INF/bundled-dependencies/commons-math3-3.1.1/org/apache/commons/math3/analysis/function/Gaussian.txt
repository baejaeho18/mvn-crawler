Compiled from "Gaussian.java"
public class org.apache.commons.math3.analysis.function.Gaussian implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction {
  private final double mean;

  private final double is;

  private final double i2s2;

  private final double norm;

  public org.apache.commons.math3.analysis.function.Gaussian(double, double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: dload         5
       6: dconst_0
       7: dcmpg
       8: ifgt          24
      11: new           #3                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      14: dup
      15: dload         5
      17: invokestatic  #4                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      20: invokespecial #5                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Ljava/lang/Number;)V
      23: athrow
      24: aload_0
      25: dload_1
      26: putfield      #6                  // Field norm:D
      29: aload_0
      30: dload_3
      31: putfield      #7                  // Field mean:D
      34: aload_0
      35: dconst_1
      36: dload         5
      38: ddiv
      39: putfield      #8                  // Field is:D
      42: aload_0
      43: ldc2_w        #9                  // double 0.5d
      46: aload_0
      47: getfield      #8                  // Field is:D
      50: dmul
      51: aload_0
      52: getfield      #8                  // Field is:D
      55: dmul
      56: putfield      #11                 // Field i2s2:D
      59: return

  public org.apache.commons.math3.analysis.function.Gaussian(double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: dconst_1
       2: dload_3
       3: ldc2_w        #12                 // double 6.283185307179586d
       6: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
       9: dmul
      10: ddiv
      11: dload_1
      12: dload_3
      13: invokespecial #15                 // Method "<init>":(DDD)V
      16: return

  public org.apache.commons.math3.analysis.function.Gaussian();
    Code:
       0: aload_0
       1: dconst_0
       2: dconst_1
       3: invokespecial #16                 // Method "<init>":(DD)V
       6: return

  public double value(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #7                  // Field mean:D
       5: dsub
       6: aload_0
       7: getfield      #6                  // Field norm:D
      10: aload_0
      11: getfield      #11                 // Field i2s2:D
      14: invokestatic  #1                  // Method value:(DDD)D
      17: dreturn

  public org.apache.commons.math3.analysis.UnivariateFunction derivative();
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method org/apache/commons/math3/analysis/FunctionUtils.toDifferentiableUnivariateFunction:(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.derivative:()Lorg/apache/commons/math3/analysis/UnivariateFunction;
       9: areturn

  private static double value(double, double, double);
    Code:
       0: dload_2
       1: dload_0
       2: dneg
       3: dload_0
       4: dmul
       5: dload         4
       7: dmul
       8: invokestatic  #19                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
      11: dmul
      12: dreturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure);
    Code:
       0: aload_0
       1: getfield      #8                  // Field is:D
       4: aload_1
       5: invokevirtual #20                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getValue:()D
       8: aload_0
       9: getfield      #7                  // Field mean:D
      12: dsub
      13: dmul
      14: dstore_2
      15: aload_1
      16: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getOrder:()I
      19: iconst_1
      20: iadd
      21: newarray       double
      23: astore        4
      25: aload         4
      27: arraylength
      28: newarray       double
      30: astore        5
      32: aload         5
      34: iconst_0
      35: dconst_1
      36: dastore
      37: dload_2
      38: dload_2
      39: dmul
      40: dstore        6
      42: aload_0
      43: getfield      #6                  // Field norm:D
      46: ldc2_w        #22                 // double -0.5d
      49: dload         6
      51: dmul
      52: invokestatic  #19                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
      55: dmul
      56: dstore        8
      58: dload         8
      60: getstatic     #24                 // Field org/apache/commons/math3/util/Precision.SAFE_MIN:D
      63: dcmpg
      64: ifgt          76
      67: aload         4
      69: dconst_0
      70: invokestatic  #25                 // Method java/util/Arrays.fill:([DD)V
      73: goto          227
      76: aload         4
      78: iconst_0
      79: dload         8
      81: dastore
      82: iconst_1
      83: istore        10
      85: iload         10
      87: aload         4
      89: arraylength
      90: if_icmpge     227
      93: dconst_0
      94: dstore        11
      96: aload         5
      98: iload         10
     100: aload         5
     102: iload         10
     104: iconst_1
     105: isub
     106: daload
     107: dneg
     108: dastore
     109: iload         10
     111: istore        13
     113: iload         13
     115: iflt          188
     118: dload         11
     120: dload         6
     122: dmul
     123: aload         5
     125: iload         13
     127: daload
     128: dadd
     129: dstore        11
     131: iload         13
     133: iconst_2
     134: if_icmple     168
     137: aload         5
     139: iload         13
     141: iconst_2
     142: isub
     143: iload         13
     145: iconst_1
     146: isub
     147: i2d
     148: aload         5
     150: iload         13
     152: iconst_1
     153: isub
     154: daload
     155: dmul
     156: aload         5
     158: iload         13
     160: iconst_3
     161: isub
     162: daload
     163: dsub
     164: dastore
     165: goto          182
     168: iload         13
     170: iconst_2
     171: if_icmpne     182
     174: aload         5
     176: iconst_0
     177: aload         5
     179: iconst_1
     180: daload
     181: dastore
     182: iinc          13, -2
     185: goto          113
     188: iload         10
     190: iconst_1
     191: iand
     192: iconst_1
     193: if_icmpne     202
     196: dload         11
     198: dload_2
     199: dmul
     200: dstore        11
     202: dload         8
     204: aload_0
     205: getfield      #8                  // Field is:D
     208: dmul
     209: dstore        8
     211: aload         4
     213: iload         10
     215: dload         8
     217: dload         11
     219: dmul
     220: dastore
     221: iinc          10, 1
     224: goto          85
     227: aload_1
     228: aload         4
     230: invokevirtual #26                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.compose:([D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     233: areturn

  static double access$000(double, double, double);
    Code:
       0: dload_0
       1: dload_2
       2: dload         4
       4: invokestatic  #1                  // Method value:(DDD)D
       7: dreturn
}
