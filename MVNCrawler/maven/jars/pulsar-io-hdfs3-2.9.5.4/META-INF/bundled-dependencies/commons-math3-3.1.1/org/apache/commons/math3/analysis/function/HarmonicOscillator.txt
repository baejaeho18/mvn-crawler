Compiled from "HarmonicOscillator.java"
public class org.apache.commons.math3.analysis.function.HarmonicOscillator implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction {
  private final double amplitude;

  private final double omega;

  private final double phase;

  public org.apache.commons.math3.analysis.function.HarmonicOscillator(double, double, double);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #3                  // Field amplitude:D
       9: aload_0
      10: dload_3
      11: putfield      #4                  // Field omega:D
      14: aload_0
      15: dload         5
      17: putfield      #5                  // Field phase:D
      20: return

  public double value(double);
    Code:
       0: aload_0
       1: getfield      #4                  // Field omega:D
       4: dload_1
       5: dmul
       6: aload_0
       7: getfield      #5                  // Field phase:D
      10: dadd
      11: aload_0
      12: getfield      #3                  // Field amplitude:D
      15: invokestatic  #1                  // Method value:(DD)D
      18: dreturn

  public org.apache.commons.math3.analysis.UnivariateFunction derivative();
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/apache/commons/math3/analysis/FunctionUtils.toDifferentiableUnivariateFunction:(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.derivative:()Lorg/apache/commons/math3/analysis/UnivariateFunction;
       9: areturn

  private static double value(double, double);
    Code:
       0: dload_2
       1: dload_0
       2: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.cos:(D)D
       5: dmul
       6: dreturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getValue:()D
       4: dstore_2
       5: aload_1
       6: invokevirtual #10                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getOrder:()I
       9: iconst_1
      10: iadd
      11: newarray       double
      13: astore        4
      15: aload_0
      16: getfield      #4                  // Field omega:D
      19: dload_2
      20: dmul
      21: aload_0
      22: getfield      #5                  // Field phase:D
      25: dadd
      26: dstore        5
      28: aload         4
      30: iconst_0
      31: aload_0
      32: getfield      #3                  // Field amplitude:D
      35: dload         5
      37: invokestatic  #8                  // Method org/apache/commons/math3/util/FastMath.cos:(D)D
      40: dmul
      41: dastore
      42: aload         4
      44: arraylength
      45: iconst_1
      46: if_icmple     113
      49: aload         4
      51: iconst_1
      52: aload_0
      53: getfield      #3                  // Field amplitude:D
      56: dneg
      57: aload_0
      58: getfield      #4                  // Field omega:D
      61: dmul
      62: dload         5
      64: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.sin:(D)D
      67: dmul
      68: dastore
      69: aload_0
      70: getfield      #4                  // Field omega:D
      73: dneg
      74: aload_0
      75: getfield      #4                  // Field omega:D
      78: dmul
      79: dstore        7
      81: iconst_2
      82: istore        9
      84: iload         9
      86: aload         4
      88: arraylength
      89: if_icmpge     113
      92: aload         4
      94: iload         9
      96: dload         7
      98: aload         4
     100: iload         9
     102: iconst_2
     103: isub
     104: daload
     105: dmul
     106: dastore
     107: iinc          9, 1
     110: goto          84
     113: aload_1
     114: aload         4
     116: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.compose:([D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     119: areturn

  static double access$000(double, double);
    Code:
       0: dload_0
       1: dload_2
       2: invokestatic  #1                  // Method value:(DD)D
       5: dreturn
}
