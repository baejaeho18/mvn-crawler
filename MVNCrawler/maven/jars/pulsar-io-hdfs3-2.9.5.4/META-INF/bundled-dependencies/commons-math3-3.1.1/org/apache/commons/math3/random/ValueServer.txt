Compiled from "ValueServer.java"
public class org.apache.commons.math3.random.ValueServer {
  public static final int DIGEST_MODE;

  public static final int REPLAY_MODE;

  public static final int UNIFORM_MODE;

  public static final int EXPONENTIAL_MODE;

  public static final int GAUSSIAN_MODE;

  public static final int CONSTANT_MODE;

  private int mode;

  private java.net.URL valuesFileURL;

  private double mu;

  private double sigma;

  private org.apache.commons.math3.random.EmpiricalDistribution empiricalDistribution;

  private java.io.BufferedReader filePointer;

  private final org.apache.commons.math3.random.RandomDataImpl randomData;

  public org.apache.commons.math3.random.ValueServer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #2                  // Field mode:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field valuesFileURL:Ljava/net/URL;
      14: aload_0
      15: dconst_0
      16: putfield      #4                  // Field mu:D
      19: aload_0
      20: dconst_0
      21: putfield      #5                  // Field sigma:D
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      34: aload_0
      35: new           #8                  // class org/apache/commons/math3/random/RandomDataImpl
      38: dup
      39: invokespecial #9                  // Method org/apache/commons/math3/random/RandomDataImpl."<init>":()V
      42: putfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
      45: return

  public org.apache.commons.math3.random.ValueServer(org.apache.commons.math3.random.RandomDataImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #2                  // Field mode:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field valuesFileURL:Ljava/net/URL;
      14: aload_0
      15: dconst_0
      16: putfield      #4                  // Field mu:D
      19: aload_0
      20: dconst_0
      21: putfield      #5                  // Field sigma:D
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      34: aload_0
      35: aload_1
      36: putfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
      39: return

  public org.apache.commons.math3.random.ValueServer(org.apache.commons.math3.random.RandomGenerator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #2                  // Field mode:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field valuesFileURL:Ljava/net/URL;
      14: aload_0
      15: dconst_0
      16: putfield      #4                  // Field mu:D
      19: aload_0
      20: dconst_0
      21: putfield      #5                  // Field sigma:D
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      34: aload_0
      35: new           #8                  // class org/apache/commons/math3/random/RandomDataImpl
      38: dup
      39: aload_1
      40: invokespecial #11                 // Method org/apache/commons/math3/random/RandomDataImpl."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;)V
      43: putfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
      46: return

  public double getNext() throws java.io.IOException, org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field mode:I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 49
                     2: 54
                     3: 59
                     4: 64
                     5: 69
               default: 74
          }
      44: aload_0
      45: invokespecial #12                 // Method getNextDigest:()D
      48: dreturn
      49: aload_0
      50: invokespecial #13                 // Method getNextReplay:()D
      53: dreturn
      54: aload_0
      55: invokespecial #14                 // Method getNextUniform:()D
      58: dreturn
      59: aload_0
      60: invokespecial #15                 // Method getNextExponential:()D
      63: dreturn
      64: aload_0
      65: invokespecial #16                 // Method getNextGaussian:()D
      68: dreturn
      69: aload_0
      70: getfield      #4                  // Field mu:D
      73: dreturn
      74: new           #17                 // class org/apache/commons/math3/exception/MathIllegalStateException
      77: dup
      78: getstatic     #18                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.UNKNOWN_MODE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      81: bipush        13
      83: anewarray     #19                 // class java/lang/Object
      86: dup
      87: iconst_0
      88: aload_0
      89: getfield      #2                  // Field mode:I
      92: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      95: aastore
      96: dup
      97: iconst_1
      98: ldc           #21                 // String DIGEST_MODE
     100: aastore
     101: dup
     102: iconst_2
     103: iconst_0
     104: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: aastore
     108: dup
     109: iconst_3
     110: ldc           #22                 // String REPLAY_MODE
     112: aastore
     113: dup
     114: iconst_4
     115: iconst_1
     116: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     119: aastore
     120: dup
     121: iconst_5
     122: ldc           #23                 // String UNIFORM_MODE
     124: aastore
     125: dup
     126: bipush        6
     128: iconst_2
     129: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     132: aastore
     133: dup
     134: bipush        7
     136: ldc           #24                 // String EXPONENTIAL_MODE
     138: aastore
     139: dup
     140: bipush        8
     142: iconst_3
     143: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     146: aastore
     147: dup
     148: bipush        9
     150: ldc           #25                 // String GAUSSIAN_MODE
     152: aastore
     153: dup
     154: bipush        10
     156: iconst_4
     157: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     160: aastore
     161: dup
     162: bipush        11
     164: ldc           #26                 // String CONSTANT_MODE
     166: aastore
     167: dup
     168: bipush        12
     170: iconst_5
     171: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     174: aastore
     175: invokespecial #27                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     178: athrow

  public void fill(double[]) throws java.io.IOException, org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     21
       8: aload_1
       9: iload_2
      10: aload_0
      11: invokevirtual #28                 // Method getNext:()D
      14: dastore
      15: iinc          2, 1
      18: goto          2
      21: return

  public double[] fill(int) throws java.io.IOException, org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: iload_1
       1: newarray       double
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_0
      14: invokevirtual #28                 // Method getNext:()D
      17: dastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public void computeDistribution() throws java.io.IOException, org.apache.commons.math3.exception.ZeroException, org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: sipush        1000
       4: invokevirtual #29                 // Method computeDistribution:(I)V
       7: return

  public void computeDistribution(int) throws org.apache.commons.math3.exception.NullArgumentException, java.io.IOException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: new           #30                 // class org/apache/commons/math3/random/EmpiricalDistribution
       4: dup
       5: iload_1
       6: aload_0
       7: getfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
      10: invokespecial #31                 // Method org/apache/commons/math3/random/EmpiricalDistribution."<init>":(ILorg/apache/commons/math3/random/RandomDataImpl;)V
      13: putfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      16: aload_0
      17: getfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      20: aload_0
      21: getfield      #3                  // Field valuesFileURL:Ljava/net/URL;
      24: invokevirtual #32                 // Method org/apache/commons/math3/random/EmpiricalDistribution.load:(Ljava/net/URL;)V
      27: aload_0
      28: aload_0
      29: getfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      32: invokevirtual #33                 // Method org/apache/commons/math3/random/EmpiricalDistribution.getSampleStats:()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
      35: invokeinterface #34,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      40: putfield      #4                  // Field mu:D
      43: aload_0
      44: aload_0
      45: getfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      48: invokevirtual #33                 // Method org/apache/commons/math3/random/EmpiricalDistribution.getSampleStats:()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
      51: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getStandardDeviation:()D
      56: putfield      #5                  // Field sigma:D
      59: return

  public int getMode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mode:I
       4: ireturn

  public void setMode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field mode:I
       5: return

  public java.net.URL getValuesFileURL();
    Code:
       0: aload_0
       1: getfield      #3                  // Field valuesFileURL:Ljava/net/URL;
       4: areturn

  public void setValuesFileURL(java.lang.String) throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: new           #36                 // class java/net/URL
       4: dup
       5: aload_1
       6: invokespecial #37                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
       9: putfield      #3                  // Field valuesFileURL:Ljava/net/URL;
      12: return

  public void setValuesFileURL(java.net.URL);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field valuesFileURL:Ljava/net/URL;
       5: return

  public org.apache.commons.math3.random.EmpiricalDistribution getEmpiricalDistribution();
    Code:
       0: aload_0
       1: getfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
       4: areturn

  public void resetReplayFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
       4: ifnull        23
       7: aload_0
       8: getfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      11: invokevirtual #38                 // Method java/io/BufferedReader.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      19: goto          23
      22: astore_1
      23: aload_0
      24: new           #40                 // class java/io/BufferedReader
      27: dup
      28: new           #41                 // class java/io/InputStreamReader
      31: dup
      32: aload_0
      33: getfield      #3                  // Field valuesFileURL:Ljava/net/URL;
      36: invokevirtual #42                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      39: ldc           #43                 // String UTF-8
      41: invokespecial #44                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      44: invokespecial #45                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      47: putfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      50: return
    Exception table:
       from    to  target type
           7    19    22   Class java/io/IOException

  public void closeReplayFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
       4: ifnull        19
       7: aload_0
       8: getfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      11: invokevirtual #38                 // Method java/io/BufferedReader.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      19: return

  public double getMu();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mu:D
       4: dreturn

  public void setMu(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #4                  // Field mu:D
       5: return

  public double getSigma();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sigma:D
       4: dreturn

  public void setSigma(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #5                  // Field sigma:D
       5: return

  public void reSeed(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
       4: lload_1
       5: invokevirtual #46                 // Method org/apache/commons/math3/random/RandomDataImpl.reSeed:(J)V
       8: return

  private double getNextDigest() throws org.apache.commons.math3.exception.MathIllegalStateException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
       4: ifnull        22
       7: aload_0
       8: getfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      11: invokevirtual #47                 // Method org/apache/commons/math3/random/EmpiricalDistribution.getBinStats:()Ljava/util/List;
      14: invokeinterface #48,  1           // InterfaceMethod java/util/List.size:()I
      19: ifne          37
      22: new           #17                 // class org/apache/commons/math3/exception/MathIllegalStateException
      25: dup
      26: getstatic     #49                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.DIGEST_NOT_INITIALIZED:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      29: iconst_0
      30: anewarray     #19                 // class java/lang/Object
      33: invokespecial #27                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      36: athrow
      37: aload_0
      38: getfield      #6                  // Field empiricalDistribution:Lorg/apache/commons/math3/random/EmpiricalDistribution;
      41: invokevirtual #50                 // Method org/apache/commons/math3/random/EmpiricalDistribution.getNextValue:()D
      44: dreturn

  private double getNextReplay() throws java.io.IOException, org.apache.commons.math3.exception.MathIllegalStateException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
       6: ifnonnull     13
       9: aload_0
      10: invokevirtual #51                 // Method resetReplayFile:()V
      13: aload_0
      14: getfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      17: invokevirtual #52                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      20: dup
      21: astore_1
      22: ifnonnull     67
      25: aload_0
      26: invokevirtual #53                 // Method closeReplayFile:()V
      29: aload_0
      30: invokevirtual #51                 // Method resetReplayFile:()V
      33: aload_0
      34: getfield      #7                  // Field filePointer:Ljava/io/BufferedReader;
      37: invokevirtual #52                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      40: dup
      41: astore_1
      42: ifnonnull     67
      45: new           #17                 // class org/apache/commons/math3/exception/MathIllegalStateException
      48: dup
      49: getstatic     #54                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.URL_CONTAINS_NO_DATA:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      52: iconst_1
      53: anewarray     #19                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_0
      59: getfield      #3                  // Field valuesFileURL:Ljava/net/URL;
      62: aastore
      63: invokespecial #27                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      66: athrow
      67: aload_1
      68: invokestatic  #55                 // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;
      71: invokevirtual #56                 // Method java/lang/Double.doubleValue:()D
      74: dreturn

  private double getNextUniform() throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
       4: dconst_0
       5: ldc2_w        #57                 // double 2.0d
       8: aload_0
       9: getfield      #4                  // Field mu:D
      12: dmul
      13: invokevirtual #59                 // Method org/apache/commons/math3/random/RandomDataImpl.nextUniform:(DD)D
      16: dreturn

  private double getNextExponential() throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
       4: aload_0
       5: getfield      #4                  // Field mu:D
       8: invokevirtual #60                 // Method org/apache/commons/math3/random/RandomDataImpl.nextExponential:(D)D
      11: dreturn

  private double getNextGaussian() throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field randomData:Lorg/apache/commons/math3/random/RandomDataImpl;
       4: aload_0
       5: getfield      #4                  // Field mu:D
       8: aload_0
       9: getfield      #5                  // Field sigma:D
      12: invokevirtual #61                 // Method org/apache/commons/math3/random/RandomDataImpl.nextGaussian:(DD)D
      15: dreturn
}
