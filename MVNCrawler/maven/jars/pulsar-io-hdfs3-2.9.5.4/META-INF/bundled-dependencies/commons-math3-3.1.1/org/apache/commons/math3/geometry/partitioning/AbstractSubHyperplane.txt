Compiled from "AbstractSubHyperplane.java"
public abstract class org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S extends org.apache.commons.math3.geometry.Space, T extends org.apache.commons.math3.geometry.Space> implements org.apache.commons.math3.geometry.partitioning.SubHyperplane<S> {
  private final org.apache.commons.math3.geometry.partitioning.Hyperplane<S> hyperplane;

  private final org.apache.commons.math3.geometry.partitioning.Region<T> remainingRegion;

  protected org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Region<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      14: return

  protected abstract org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Region<T>);

  public org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> copySelf();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       5: aload_0
       6: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
       9: invokevirtual #4                  // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      12: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane<S> getHyperplane();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       4: areturn

  public org.apache.commons.math3.geometry.partitioning.Region<T> getRemainingRegion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
       4: areturn

  public double getSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getSize:()D
       9: dreturn

  public org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
       4: astore_2
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      10: new           #7                  // class org/apache/commons/math3/geometry/partitioning/RegionFactory
      13: dup
      14: invokespecial #8                  // Method org/apache/commons/math3/geometry/partitioning/RegionFactory."<init>":()V
      17: aload_0
      18: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      21: aload_2
      22: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      25: invokevirtual #9                  // Method org/apache/commons/math3/geometry/partitioning/RegionFactory.union:(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
      28: invokevirtual #4                  // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      31: areturn

  public org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<S, T> applyTransform(org.apache.commons.math3.geometry.partitioning.Transform<S, T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
       5: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      10: astore_2
      11: aload_0
      12: aload_0
      13: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      16: iconst_0
      17: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      22: aload_2
      23: aload_1
      24: invokespecial #12                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      27: astore_3
      28: aload_0
      29: aload_2
      30: aload_0
      31: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
      34: aload_3
      35: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.buildNew:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
      40: invokevirtual #4                  // Method buildNew:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
      43: areturn

  private org.apache.commons.math3.geometry.partitioning.BSPTree<T> recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree<T>, org.apache.commons.math3.geometry.partitioning.Hyperplane<S>, org.apache.commons.math3.geometry.partitioning.Transform<S, T>);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
       4: ifnonnull     19
       7: new           #15                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
      10: dup
      11: aload_1
      12: invokevirtual #16                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      15: invokespecial #17                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Ljava/lang/Object;)V
      18: areturn
      19: aload_1
      20: invokevirtual #16                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
      23: checkcast     #18                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      26: astore        4
      28: aload         4
      30: ifnull        106
      33: aload         4
      35: invokevirtual #19                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      38: ifnonnull     45
      41: aconst_null
      42: goto          61
      45: aload_3
      46: aload         4
      48: invokevirtual #19                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      51: aload_0
      52: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      55: aload_2
      56: invokeinterface #20,  4           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      61: astore        5
      63: aload         4
      65: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      68: ifnonnull     75
      71: aconst_null
      72: goto          91
      75: aload_3
      76: aload         4
      78: invokevirtual #21                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      81: aload_0
      82: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      85: aload_2
      86: invokeinterface #20,  4           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      91: astore        6
      93: new           #18                 // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
      96: dup
      97: aload         5
      99: aload         6
     101: invokespecial #22                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
     104: astore        4
     106: new           #15                 // class org/apache/commons/math3/geometry/partitioning/BSPTree
     109: dup
     110: aload_3
     111: aload_1
     112: invokevirtual #14                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getCut:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     115: aload_0
     116: getfield      #2                  // Field hyperplane:Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
     119: aload_2
     120: invokeinterface #20,  4           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Transform.apply:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
     125: aload_0
     126: aload_1
     127: invokevirtual #23                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getPlus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     130: aload_2
     131: aload_3
     132: invokespecial #12                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     135: aload_0
     136: aload_1
     137: invokevirtual #24                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getMinus:()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     140: aload_2
     141: aload_3
     142: invokespecial #12                 // Method recurseTransform:(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
     145: aload         4
     147: invokespecial #25                 // Method org/apache/commons/math3/geometry/partitioning/BSPTree."<init>":(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
     150: areturn

  public abstract org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>);

  public abstract org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane<S> split(org.apache.commons.math3.geometry.partitioning.Hyperplane<S>);

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remainingRegion:Lorg/apache/commons/math3/geometry/partitioning/Region;
       4: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.isEmpty:()Z
       9: ireturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method reunite:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
       5: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method copySelf:()Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
       4: areturn
}
