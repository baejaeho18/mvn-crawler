Compiled from "NewtonRaphsonSolver.java"
public class org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver extends org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver {
  private static final double DEFAULT_ABSOLUTE_ACCURACY;

  public org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver();
    Code:
       0: aload_0
       1: ldc2_w        #1                  // double 1.0E-6d
       4: invokespecial #3                  // Method "<init>":(D)V
       7: return

  public org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #4                  // Method org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver."<init>":(D)V
       5: return

  public double solve(int, org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction, double, double) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: dload_3
       4: dload         5
       6: invokestatic  #5                  // Method org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.midpoint:(DD)D
       9: invokespecial #6                  // Method org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.solve:(ILorg/apache/commons/math3/analysis/UnivariateFunction;D)D
      12: dreturn

  protected double doSolve() throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getStartValue:()D
       4: dstore_1
       5: aload_0
       6: invokevirtual #8                  // Method getAbsoluteAccuracy:()D
       9: dstore_3
      10: dload_1
      11: dstore        5
      13: aload_0
      14: dload         5
      16: invokevirtual #9                  // Method computeObjectiveValueAndDerivative:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      19: astore        9
      21: dload         5
      23: aload         9
      25: invokevirtual #10                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getValue:()D
      28: aload         9
      30: iconst_1
      31: newarray       int
      33: dup
      34: iconst_0
      35: iconst_1
      36: iastore
      37: invokevirtual #11                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getPartialDerivative:([I)D
      40: ddiv
      41: dsub
      42: dstore        7
      44: dload         7
      46: dload         5
      48: dsub
      49: invokestatic  #12                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      52: dload_3
      53: dcmpg
      54: ifgt          60
      57: dload         7
      59: dreturn
      60: dload         7
      62: dstore        5
      64: goto          13

  public double solve(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #13                 // class org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction
       6: dload_3
       7: dload         5
       9: invokevirtual #14                 // Method solve:(ILorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;DD)D
      12: dreturn
}
