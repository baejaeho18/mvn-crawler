Compiled from "RealVectorFormat.java"
public class org.apache.commons.math3.linear.RealVectorFormat {
  private static final java.lang.String DEFAULT_PREFIX;

  private static final java.lang.String DEFAULT_SUFFIX;

  private static final java.lang.String DEFAULT_SEPARATOR;

  private final java.lang.String prefix;

  private final java.lang.String suffix;

  private final java.lang.String separator;

  private final java.lang.String trimmedPrefix;

  private final java.lang.String trimmedSuffix;

  private final java.lang.String trimmedSeparator;

  private final java.text.NumberFormat format;

  public org.apache.commons.math3.linear.RealVectorFormat();
    Code:
       0: aload_0
       1: ldc           #1                  // String {
       3: ldc           #2                  // String }
       5: ldc           #3                  // String ;
       7: invokestatic  #4                  // Method org/apache/commons/math3/util/CompositeFormat.getDefaultNumberFormat:()Ljava/text/NumberFormat;
      10: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
      13: return

  public org.apache.commons.math3.linear.RealVectorFormat(java.text.NumberFormat);
    Code:
       0: aload_0
       1: ldc           #1                  // String {
       3: ldc           #2                  // String }
       5: ldc           #3                  // String ;
       7: aload_1
       8: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
      11: return

  public org.apache.commons.math3.linear.RealVectorFormat(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #4                  // Method org/apache/commons/math3/util/CompositeFormat.getDefaultNumberFormat:()Ljava/text/NumberFormat;
       7: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
      10: return

  public org.apache.commons.math3.linear.RealVectorFormat(java.lang.String, java.lang.String, java.lang.String, java.text.NumberFormat);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field prefix:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #8                  // Field suffix:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #9                  // Field separator:Ljava/lang/String;
      19: aload_0
      20: aload_1
      21: invokevirtual #10                 // Method java/lang/String.trim:()Ljava/lang/String;
      24: putfield      #11                 // Field trimmedPrefix:Ljava/lang/String;
      27: aload_0
      28: aload_2
      29: invokevirtual #10                 // Method java/lang/String.trim:()Ljava/lang/String;
      32: putfield      #12                 // Field trimmedSuffix:Ljava/lang/String;
      35: aload_0
      36: aload_3
      37: invokevirtual #10                 // Method java/lang/String.trim:()Ljava/lang/String;
      40: putfield      #13                 // Field trimmedSeparator:Ljava/lang/String;
      43: aload_0
      44: aload         4
      46: putfield      #14                 // Field format:Ljava/text/NumberFormat;
      49: return

  public static java.util.Locale[] getAvailableLocales();
    Code:
       0: invokestatic  #15                 // Method java/text/NumberFormat.getAvailableLocales:()[Ljava/util/Locale;
       3: areturn

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #7                  // Field prefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getSuffix();
    Code:
       0: aload_0
       1: getfield      #8                  // Field suffix:Ljava/lang/String;
       4: areturn

  public java.lang.String getSeparator();
    Code:
       0: aload_0
       1: getfield      #9                  // Field separator:Ljava/lang/String;
       4: areturn

  public java.text.NumberFormat getFormat();
    Code:
       0: aload_0
       1: getfield      #14                 // Field format:Ljava/text/NumberFormat;
       4: areturn

  public static org.apache.commons.math3.linear.RealVectorFormat getInstance();
    Code:
       0: invokestatic  #16                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       3: invokestatic  #17                 // Method getInstance:(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealVectorFormat;
       6: areturn

  public static org.apache.commons.math3.linear.RealVectorFormat getInstance(java.util.Locale);
    Code:
       0: new           #18                 // class org/apache/commons/math3/linear/RealVectorFormat
       3: dup
       4: aload_0
       5: invokestatic  #19                 // Method org/apache/commons/math3/util/CompositeFormat.getDefaultNumberFormat:(Ljava/util/Locale;)Ljava/text/NumberFormat;
       8: invokespecial #20                 // Method "<init>":(Ljava/text/NumberFormat;)V
      11: areturn

  public java.lang.String format(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: aload_1
       2: new           #21                 // class java/lang/StringBuffer
       5: dup
       6: invokespecial #22                 // Method java/lang/StringBuffer."<init>":()V
       9: new           #23                 // class java/text/FieldPosition
      12: dup
      13: iconst_0
      14: invokespecial #24                 // Method java/text/FieldPosition."<init>":(I)V
      17: invokevirtual #25                 // Method format:(Lorg/apache/commons/math3/linear/RealVector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
      20: invokevirtual #26                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      23: areturn

  public java.lang.StringBuffer format(org.apache.commons.math3.linear.RealVector, java.lang.StringBuffer, java.text.FieldPosition);
    Code:
       0: aload_3
       1: iconst_0
       2: invokevirtual #27                 // Method java/text/FieldPosition.setBeginIndex:(I)V
       5: aload_3
       6: iconst_0
       7: invokevirtual #28                 // Method java/text/FieldPosition.setEndIndex:(I)V
      10: aload_2
      11: aload_0
      12: getfield      #7                  // Field prefix:Ljava/lang/String;
      15: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: pop
      19: iconst_0
      20: istore        4
      22: iload         4
      24: aload_1
      25: invokevirtual #30                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      28: if_icmpge     67
      31: iload         4
      33: ifle          45
      36: aload_2
      37: aload_0
      38: getfield      #9                  // Field separator:Ljava/lang/String;
      41: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: pop
      45: aload_1
      46: iload         4
      48: invokevirtual #31                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      51: aload_0
      52: getfield      #14                 // Field format:Ljava/text/NumberFormat;
      55: aload_2
      56: aload_3
      57: invokestatic  #32                 // Method org/apache/commons/math3/util/CompositeFormat.formatDouble:(DLjava/text/NumberFormat;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
      60: pop
      61: iinc          4, 1
      64: goto          22
      67: aload_2
      68: aload_0
      69: getfield      #8                  // Field suffix:Ljava/lang/String;
      72: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      75: pop
      76: aload_2
      77: areturn

  public org.apache.commons.math3.linear.ArrayRealVector parse(java.lang.String);
    Code:
       0: new           #33                 // class java/text/ParsePosition
       3: dup
       4: iconst_0
       5: invokespecial #34                 // Method java/text/ParsePosition."<init>":(I)V
       8: astore_2
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #35                 // Method parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/linear/ArrayRealVector;
      15: astore_3
      16: aload_2
      17: invokevirtual #36                 // Method java/text/ParsePosition.getIndex:()I
      20: ifne          39
      23: new           #37                 // class org/apache/commons/math3/exception/MathParseException
      26: dup
      27: aload_1
      28: aload_2
      29: invokevirtual #38                 // Method java/text/ParsePosition.getErrorIndex:()I
      32: ldc_w         #39                 // class org/apache/commons/math3/linear/ArrayRealVector
      35: invokespecial #40                 // Method org/apache/commons/math3/exception/MathParseException."<init>":(Ljava/lang/String;ILjava/lang/Class;)V
      38: athrow
      39: aload_3
      40: areturn

  public org.apache.commons.math3.linear.ArrayRealVector parse(java.lang.String, java.text.ParsePosition);
    Code:
       0: aload_2
       1: invokevirtual #36                 // Method java/text/ParsePosition.getIndex:()I
       4: istore_3
       5: aload_1
       6: aload_2
       7: invokestatic  #41                 // Method org/apache/commons/math3/util/CompositeFormat.parseAndIgnoreWhitespace:(Ljava/lang/String;Ljava/text/ParsePosition;)V
      10: aload_1
      11: aload_0
      12: getfield      #11                 // Field trimmedPrefix:Ljava/lang/String;
      15: aload_2
      16: invokestatic  #42                 // Method org/apache/commons/math3/util/CompositeFormat.parseFixedstring:(Ljava/lang/String;Ljava/lang/String;Ljava/text/ParsePosition;)Z
      19: ifne          24
      22: aconst_null
      23: areturn
      24: new           #43                 // class java/util/ArrayList
      27: dup
      28: invokespecial #44                 // Method java/util/ArrayList."<init>":()V
      31: astore        4
      33: iconst_1
      34: istore        5
      36: iload         5
      38: ifeq          120
      41: aload         4
      43: invokeinterface #45,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      48: ifne          71
      51: aload_1
      52: aload_2
      53: invokestatic  #41                 // Method org/apache/commons/math3/util/CompositeFormat.parseAndIgnoreWhitespace:(Ljava/lang/String;Ljava/text/ParsePosition;)V
      56: aload_1
      57: aload_0
      58: getfield      #13                 // Field trimmedSeparator:Ljava/lang/String;
      61: aload_2
      62: invokestatic  #42                 // Method org/apache/commons/math3/util/CompositeFormat.parseFixedstring:(Ljava/lang/String;Ljava/lang/String;Ljava/text/ParsePosition;)Z
      65: ifne          71
      68: iconst_0
      69: istore        5
      71: iload         5
      73: ifeq          36
      76: aload_1
      77: aload_2
      78: invokestatic  #41                 // Method org/apache/commons/math3/util/CompositeFormat.parseAndIgnoreWhitespace:(Ljava/lang/String;Ljava/text/ParsePosition;)V
      81: aload_1
      82: aload_0
      83: getfield      #14                 // Field format:Ljava/text/NumberFormat;
      86: aload_2
      87: invokestatic  #46                 // Method org/apache/commons/math3/util/CompositeFormat.parseNumber:(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;
      90: astore        6
      92: aload         6
      94: ifnull        110
      97: aload         4
      99: aload         6
     101: invokeinterface #47,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     106: pop
     107: goto          117
     110: aload_2
     111: iload_3
     112: invokevirtual #48                 // Method java/text/ParsePosition.setIndex:(I)V
     115: aconst_null
     116: areturn
     117: goto          36
     120: aload_1
     121: aload_2
     122: invokestatic  #41                 // Method org/apache/commons/math3/util/CompositeFormat.parseAndIgnoreWhitespace:(Ljava/lang/String;Ljava/text/ParsePosition;)V
     125: aload_1
     126: aload_0
     127: getfield      #12                 // Field trimmedSuffix:Ljava/lang/String;
     130: aload_2
     131: invokestatic  #42                 // Method org/apache/commons/math3/util/CompositeFormat.parseFixedstring:(Ljava/lang/String;Ljava/lang/String;Ljava/text/ParsePosition;)Z
     134: ifne          139
     137: aconst_null
     138: areturn
     139: aload         4
     141: invokeinterface #49,  1           // InterfaceMethod java/util/List.size:()I
     146: newarray       double
     148: astore        5
     150: iconst_0
     151: istore        6
     153: iload         6
     155: aload         5
     157: arraylength
     158: if_icmpge     187
     161: aload         5
     163: iload         6
     165: aload         4
     167: iload         6
     169: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     174: checkcast     #51                 // class java/lang/Number
     177: invokevirtual #52                 // Method java/lang/Number.doubleValue:()D
     180: dastore
     181: iinc          6, 1
     184: goto          153
     187: new           #39                 // class org/apache/commons/math3/linear/ArrayRealVector
     190: dup
     191: aload         5
     193: iconst_0
     194: invokespecial #53                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
     197: areturn
}
