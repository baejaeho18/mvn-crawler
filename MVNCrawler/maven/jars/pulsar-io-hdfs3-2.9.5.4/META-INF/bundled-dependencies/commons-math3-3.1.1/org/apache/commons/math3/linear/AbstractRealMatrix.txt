Compiled from "AbstractRealMatrix.java"
public abstract class org.apache.commons.math3.linear.AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
  private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT;

  protected org.apache.commons.math3.linear.AbstractRealMatrix();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealLinearOperator."<init>":()V
       4: return

  protected org.apache.commons.math3.linear.AbstractRealMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealLinearOperator."<init>":()V
       4: iload_1
       5: iconst_1
       6: if_icmpge     21
       9: new           #2                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      12: dup
      13: iload_1
      14: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: invokespecial #4                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Ljava/lang/Number;)V
      20: athrow
      21: iload_2
      22: iconst_1
      23: if_icmpge     38
      26: new           #2                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      29: dup
      30: iload_2
      31: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokespecial #4                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Ljava/lang/Number;)V
      37: athrow
      38: return

  public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method org/apache/commons/math3/linear/MatrixUtils.checkAdditionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #7                  // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: iload_2
      17: iload_3
      18: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      21: astore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload_2
      29: if_icmpge     83
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload_3
      38: if_icmpge     77
      41: aload         4
      43: iload         5
      45: iload         6
      47: aload_0
      48: iload         5
      50: iload         6
      52: invokevirtual #9                  // Method getEntry:(II)D
      55: aload_1
      56: iload         5
      58: iload         6
      60: invokeinterface #10,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      65: dadd
      66: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      71: iinc          6, 1
      74: goto          35
      77: iinc          5, 1
      80: goto          26
      83: aload         4
      85: areturn

  public org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #7                  // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: iload_2
      17: iload_3
      18: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      21: astore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload_2
      29: if_icmpge     83
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload_3
      38: if_icmpge     77
      41: aload         4
      43: iload         5
      45: iload         6
      47: aload_0
      48: iload         5
      50: iload         6
      52: invokevirtual #9                  // Method getEntry:(II)D
      55: aload_1
      56: iload         5
      58: iload         6
      60: invokeinterface #10,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      65: dsub
      66: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      71: iinc          6, 1
      74: goto          35
      77: iinc          5, 1
      80: goto          26
      83: aload         4
      85: areturn

  public org.apache.commons.math3.linear.RealMatrix scalarAdd(double);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_3
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore        4
      11: aload_0
      12: iload_3
      13: iload         4
      15: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      18: astore        5
      20: iconst_0
      21: istore        6
      23: iload         6
      25: iload_3
      26: if_icmpge     72
      29: iconst_0
      30: istore        7
      32: iload         7
      34: iload         4
      36: if_icmpge     66
      39: aload         5
      41: iload         6
      43: iload         7
      45: aload_0
      46: iload         6
      48: iload         7
      50: invokevirtual #9                  // Method getEntry:(II)D
      53: dload_1
      54: dadd
      55: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      60: iinc          7, 1
      63: goto          32
      66: iinc          6, 1
      69: goto          23
      72: aload         5
      74: areturn

  public org.apache.commons.math3.linear.RealMatrix scalarMultiply(double);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_3
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore        4
      11: aload_0
      12: iload_3
      13: iload         4
      15: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      18: astore        5
      20: iconst_0
      21: istore        6
      23: iload         6
      25: iload_3
      26: if_icmpge     72
      29: iconst_0
      30: istore        7
      32: iload         7
      34: iload         4
      36: if_icmpge     66
      39: aload         5
      41: iload         6
      43: iload         7
      45: aload_0
      46: iload         6
      48: iload         7
      50: invokevirtual #9                  // Method getEntry:(II)D
      53: dload_1
      54: dmul
      55: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      60: iinc          7, 1
      63: goto          32
      66: iinc          6, 1
      69: goto          23
      72: aload         5
      74: areturn

  public org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_2
      10: aload_1
      11: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      16: istore_3
      17: aload_0
      18: invokevirtual #7                  // Method getColumnDimension:()I
      21: istore        4
      23: aload_0
      24: iload_2
      25: iload_3
      26: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      29: astore        5
      31: iconst_0
      32: istore        6
      34: iload         6
      36: iload_2
      37: if_icmpge     117
      40: iconst_0
      41: istore        7
      43: iload         7
      45: iload_3
      46: if_icmpge     111
      49: dconst_0
      50: dstore        8
      52: iconst_0
      53: istore        10
      55: iload         10
      57: iload         4
      59: if_icmpge     92
      62: dload         8
      64: aload_0
      65: iload         6
      67: iload         10
      69: invokevirtual #9                  // Method getEntry:(II)D
      72: aload_1
      73: iload         10
      75: iload         7
      77: invokeinterface #10,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      82: dmul
      83: dadd
      84: dstore        8
      86: iinc          10, 1
      89: goto          55
      92: aload         5
      94: iload         6
      96: iload         7
      98: dload         8
     100: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
     105: iinc          7, 1
     108: goto          43
     111: iinc          6, 1
     114: goto          34
     117: aload         5
     119: areturn

  public org.apache.commons.math3.linear.RealMatrix preMultiply(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
       7: areturn

  public org.apache.commons.math3.linear.RealMatrix power(int) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.linear.NonSquareMatrixException;
    Code:
       0: iload_1
       1: ifge          19
       4: new           #16                 // class org/apache/commons/math3/exception/NotPositiveException
       7: dup
       8: getstatic     #17                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NOT_POSITIVE_EXPONENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_1
      12: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #18                 // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: aload_0
      20: invokevirtual #19                 // Method isSquare:()Z
      23: ifne          42
      26: new           #20                 // class org/apache/commons/math3/linear/NonSquareMatrixException
      29: dup
      30: aload_0
      31: invokevirtual #6                  // Method getRowDimension:()I
      34: aload_0
      35: invokevirtual #7                  // Method getColumnDimension:()I
      38: invokespecial #21                 // Method org/apache/commons/math3/linear/NonSquareMatrixException."<init>":(II)V
      41: athrow
      42: iload_1
      43: ifne          54
      46: aload_0
      47: invokevirtual #6                  // Method getRowDimension:()I
      50: invokestatic  #22                 // Method org/apache/commons/math3/linear/MatrixUtils.createRealIdentityMatrix:(I)Lorg/apache/commons/math3/linear/RealMatrix;
      53: areturn
      54: iload_1
      55: iconst_1
      56: if_icmpne     64
      59: aload_0
      60: invokevirtual #23                 // Method copy:()Lorg/apache/commons/math3/linear/RealMatrix;
      63: areturn
      64: iload_1
      65: iconst_1
      66: isub
      67: istore_2
      68: iload_2
      69: invokestatic  #24                 // Method java/lang/Integer.toBinaryString:(I)Ljava/lang/String;
      72: invokevirtual #25                 // Method java/lang/String.toCharArray:()[C
      75: astore_3
      76: new           #26                 // class java/util/ArrayList
      79: dup
      80: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      83: astore        4
      85: iconst_m1
      86: istore        5
      88: iconst_0
      89: istore        6
      91: iload         6
      93: aload_3
      94: arraylength
      95: if_icmpge     143
      98: aload_3
      99: iload         6
     101: caload
     102: bipush        49
     104: if_icmpne     137
     107: aload_3
     108: arraylength
     109: iload         6
     111: isub
     112: iconst_1
     113: isub
     114: istore        7
     116: aload         4
     118: iload         7
     120: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     123: invokevirtual #28                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     126: pop
     127: iload         5
     129: iconst_m1
     130: if_icmpne     137
     133: iload         7
     135: istore        5
     137: iinc          6, 1
     140: goto          91
     143: iload         5
     145: iconst_1
     146: iadd
     147: anewarray     #29                 // class org/apache/commons/math3/linear/RealMatrix
     150: astore        6
     152: aload         6
     154: iconst_0
     155: aload_0
     156: invokevirtual #23                 // Method copy:()Lorg/apache/commons/math3/linear/RealMatrix;
     159: aastore
     160: iconst_1
     161: istore        7
     163: iload         7
     165: iload         5
     167: if_icmpgt     200
     170: aload         6
     172: iload         7
     174: aload         6
     176: iload         7
     178: iconst_1
     179: isub
     180: aaload
     181: aload         6
     183: iload         7
     185: iconst_1
     186: isub
     187: aaload
     188: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
     193: aastore
     194: iinc          7, 1
     197: goto          163
     200: aload_0
     201: invokevirtual #23                 // Method copy:()Lorg/apache/commons/math3/linear/RealMatrix;
     204: astore        7
     206: aload         4
     208: invokevirtual #30                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     211: astore        8
     213: aload         8
     215: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     220: ifeq          255
     223: aload         8
     225: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #33                 // class java/lang/Integer
     233: astore        9
     235: aload         7
     237: aload         6
     239: aload         9
     241: invokevirtual #34                 // Method java/lang/Integer.intValue:()I
     244: aaload
     245: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
     250: astore        7
     252: goto          213
     255: aload         7
     257: areturn

  public double[][] getData();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: aload_0
       5: invokevirtual #7                  // Method getColumnDimension:()I
       8: multianewarray #35,  2            // class "[[D"
      12: astore_1
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_1
      17: arraylength
      18: if_icmpge     58
      21: aload_1
      22: iload_2
      23: aaload
      24: astore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_3
      31: arraylength
      32: if_icmpge     52
      35: aload_3
      36: iload         4
      38: aload_0
      39: iload_2
      40: iload         4
      42: invokevirtual #9                  // Method getEntry:(II)D
      45: dastore
      46: iinc          4, 1
      49: goto          28
      52: iinc          2, 1
      55: goto          15
      58: aload_1
      59: areturn

  public double getNorm();
    Code:
       0: aload_0
       1: new           #36                 // class org/apache/commons/math3/linear/AbstractRealMatrix$1
       4: dup
       5: aload_0
       6: invokespecial #37                 // Method org/apache/commons/math3/linear/AbstractRealMatrix$1."<init>":(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V
       9: invokevirtual #38                 // Method walkInColumnOrder:(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
      12: dreturn

  public double getFrobeniusNorm();
    Code:
       0: aload_0
       1: new           #39                 // class org/apache/commons/math3/linear/AbstractRealMatrix$2
       4: dup
       5: aload_0
       6: invokespecial #40                 // Method org/apache/commons/math3/linear/AbstractRealMatrix$2."<init>":(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V
       9: invokevirtual #41                 // Method walkInOptimizedOrder:(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
      12: dreturn

  public org.apache.commons.math3.linear.RealMatrix getSubMatrix(int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokestatic  #42                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
       9: aload_0
      10: iload_2
      11: iload_1
      12: isub
      13: iconst_1
      14: iadd
      15: iload         4
      17: iload_3
      18: isub
      19: iconst_1
      20: iadd
      21: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      24: astore        5
      26: iload_1
      27: istore        6
      29: iload         6
      31: iload_2
      32: if_icmpgt     80
      35: iload_3
      36: istore        7
      38: iload         7
      40: iload         4
      42: if_icmpgt     74
      45: aload         5
      47: iload         6
      49: iload_1
      50: isub
      51: iload         7
      53: iload_3
      54: isub
      55: aload_0
      56: iload         6
      58: iload         7
      60: invokevirtual #9                  // Method getEntry:(II)D
      63: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      68: iinc          7, 1
      71: goto          38
      74: iinc          6, 1
      77: goto          29
      80: aload         5
      82: areturn

  public org.apache.commons.math3.linear.RealMatrix getSubMatrix(int[], int[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;[I[I)V
       6: aload_0
       7: aload_1
       8: arraylength
       9: aload_2
      10: arraylength
      11: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      14: astore_3
      15: aload_3
      16: new           #44                 // class org/apache/commons/math3/linear/AbstractRealMatrix$3
      19: dup
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokespecial #45                 // Method org/apache/commons/math3/linear/AbstractRealMatrix$3."<init>":(Lorg/apache/commons/math3/linear/AbstractRealMatrix;[I[I)V
      26: invokeinterface #46,  2           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.walkInOptimizedOrder:(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
      31: pop2
      32: aload_3
      33: areturn

  public void copySubMatrix(int, int, int, int, double[][]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokestatic  #42                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
       9: iload_2
      10: iconst_1
      11: iadd
      12: iload_1
      13: isub
      14: istore        6
      16: iload         4
      18: iconst_1
      19: iadd
      20: iload_3
      21: isub
      22: istore        7
      24: aload         5
      26: arraylength
      27: iload         6
      29: if_icmplt     42
      32: aload         5
      34: iconst_0
      35: aaload
      36: arraylength
      37: iload         7
      39: if_icmpge     62
      42: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      45: dup
      46: aload         5
      48: arraylength
      49: aload         5
      51: iconst_0
      52: aaload
      53: arraylength
      54: iload         6
      56: iload         7
      58: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      61: athrow
      62: aload_0
      63: new           #49                 // class org/apache/commons/math3/linear/AbstractRealMatrix$4
      66: dup
      67: aload_0
      68: aload         5
      70: invokespecial #50                 // Method org/apache/commons/math3/linear/AbstractRealMatrix$4."<init>":(Lorg/apache/commons/math3/linear/AbstractRealMatrix;[[D)V
      73: iload_1
      74: iload_2
      75: iload_3
      76: iload         4
      78: invokevirtual #51                 // Method walkInOptimizedOrder:(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
      81: pop2
      82: return

  public void copySubMatrix(int[], int[], double[][]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;[I[I)V
       6: aload_3
       7: arraylength
       8: aload_1
       9: arraylength
      10: if_icmplt     22
      13: aload_3
      14: iconst_0
      15: aaload
      16: arraylength
      17: aload_2
      18: arraylength
      19: if_icmpge     40
      22: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      25: dup
      26: aload_3
      27: arraylength
      28: aload_3
      29: iconst_0
      30: aaload
      31: arraylength
      32: aload_1
      33: arraylength
      34: aload_2
      35: arraylength
      36: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      39: athrow
      40: iconst_0
      41: istore        4
      43: iload         4
      45: aload_1
      46: arraylength
      47: if_icmpge     95
      50: aload_3
      51: iload         4
      53: aaload
      54: astore        5
      56: iconst_0
      57: istore        6
      59: iload         6
      61: aload_2
      62: arraylength
      63: if_icmpge     89
      66: aload         5
      68: iload         6
      70: aload_0
      71: aload_1
      72: iload         4
      74: iaload
      75: aload_2
      76: iload         6
      78: iaload
      79: invokevirtual #9                  // Method getEntry:(II)D
      82: dastore
      83: iinc          6, 1
      86: goto          59
      89: iinc          4, 1
      92: goto          43
      95: return

  public void setSubMatrix(double[][], int, int) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_1
       1: invokestatic  #52                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: arraylength
       6: istore        4
       8: iload         4
      10: ifne          24
      13: new           #53                 // class org/apache/commons/math3/exception/NoDataException
      16: dup
      17: getstatic     #54                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_ROW:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      20: invokespecial #55                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      23: athrow
      24: aload_1
      25: iconst_0
      26: aaload
      27: arraylength
      28: istore        5
      30: iload         5
      32: ifne          46
      35: new           #53                 // class org/apache/commons/math3/exception/NoDataException
      38: dup
      39: getstatic     #56                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_COLUMN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      42: invokespecial #55                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      45: athrow
      46: iconst_1
      47: istore        6
      49: iload         6
      51: iload         4
      53: if_icmpge     87
      56: aload_1
      57: iload         6
      59: aaload
      60: arraylength
      61: iload         5
      63: if_icmpeq     81
      66: new           #57                 // class org/apache/commons/math3/exception/DimensionMismatchException
      69: dup
      70: iload         5
      72: aload_1
      73: iload         6
      75: aaload
      76: arraylength
      77: invokespecial #58                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      80: athrow
      81: iinc          6, 1
      84: goto          49
      87: aload_0
      88: iload_2
      89: invokestatic  #59                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
      92: aload_0
      93: iload_3
      94: invokestatic  #60                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
      97: aload_0
      98: iload         4
     100: iload_2
     101: iadd
     102: iconst_1
     103: isub
     104: invokestatic  #59                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
     107: aload_0
     108: iload         5
     110: iload_3
     111: iadd
     112: iconst_1
     113: isub
     114: invokestatic  #60                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
     117: iconst_0
     118: istore        6
     120: iload         6
     122: iload         4
     124: if_icmpge     168
     127: iconst_0
     128: istore        7
     130: iload         7
     132: iload         5
     134: if_icmpge     162
     137: aload_0
     138: iload_2
     139: iload         6
     141: iadd
     142: iload_3
     143: iload         7
     145: iadd
     146: aload_1
     147: iload         6
     149: aaload
     150: iload         7
     152: daload
     153: invokevirtual #61                 // Method setEntry:(IID)V
     156: iinc          7, 1
     159: goto          130
     162: iinc          6, 1
     165: goto          120
     168: return

  public org.apache.commons.math3.linear.RealMatrix getRowMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_2
      10: aload_0
      11: iconst_1
      12: iload_2
      13: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpge     48
      26: aload_3
      27: iconst_0
      28: iload         4
      30: aload_0
      31: iload_1
      32: iload         4
      34: invokevirtual #9                  // Method getEntry:(II)D
      37: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      42: iinc          4, 1
      45: goto          20
      48: aload_3
      49: areturn

  public void setRowMatrix(int, org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_2
      11: invokeinterface #62,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      16: iconst_1
      17: if_icmpne     30
      20: aload_2
      21: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      26: iload_3
      27: if_icmpeq     52
      30: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      33: dup
      34: aload_2
      35: invokeinterface #62,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      40: aload_2
      41: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      46: iconst_1
      47: iload_3
      48: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      51: athrow
      52: iconst_0
      53: istore        4
      55: iload         4
      57: iload_3
      58: if_icmpge     83
      61: aload_0
      62: iload_1
      63: iload         4
      65: aload_2
      66: iconst_0
      67: iload         4
      69: invokeinterface #10,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      74: invokevirtual #61                 // Method setEntry:(IID)V
      77: iinc          4, 1
      80: goto          55
      83: return

  public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #60                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_2
      10: aload_0
      11: iload_2
      12: iconst_1
      13: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpge     48
      26: aload_3
      27: iload         4
      29: iconst_0
      30: aload_0
      31: iload         4
      33: iload_1
      34: invokevirtual #9                  // Method getEntry:(II)D
      37: invokeinterface #11,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      42: iinc          4, 1
      45: goto          20
      48: aload_3
      49: areturn

  public void setColumnMatrix(int, org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #60                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_3
      10: aload_2
      11: invokeinterface #62,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      16: iload_3
      17: if_icmpne     30
      20: aload_2
      21: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      26: iconst_1
      27: if_icmpeq     52
      30: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      33: dup
      34: aload_2
      35: invokeinterface #62,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      40: aload_2
      41: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      46: iload_3
      47: iconst_1
      48: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      51: athrow
      52: iconst_0
      53: istore        4
      55: iload         4
      57: iload_3
      58: if_icmpge     83
      61: aload_0
      62: iload         4
      64: iload_1
      65: aload_2
      66: iload         4
      68: iconst_0
      69: invokeinterface #10,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      74: invokevirtual #61                 // Method setEntry:(IID)V
      77: iinc          4, 1
      80: goto          55
      83: return

  public org.apache.commons.math3.linear.RealVector getRowVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: new           #63                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_0
       5: iload_1
       6: invokevirtual #64                 // Method getRow:(I)[D
       9: iconst_0
      10: invokespecial #65                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      13: areturn

  public void setRowVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_2
      11: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      14: iload_3
      15: if_icmpeq     33
      18: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      21: dup
      22: iconst_1
      23: aload_2
      24: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      27: iconst_1
      28: iload_3
      29: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      32: athrow
      33: iconst_0
      34: istore        4
      36: iload         4
      38: iload_3
      39: if_icmpge     61
      42: aload_0
      43: iload_1
      44: iload         4
      46: aload_2
      47: iload         4
      49: invokevirtual #67                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      52: invokevirtual #61                 // Method setEntry:(IID)V
      55: iinc          4, 1
      58: goto          36
      61: return

  public org.apache.commons.math3.linear.RealVector getColumnVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: new           #63                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_0
       5: iload_1
       6: invokevirtual #68                 // Method getColumn:(I)[D
       9: iconst_0
      10: invokespecial #65                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      13: areturn

  public void setColumnVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #60                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_3
      10: aload_2
      11: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      14: iload_3
      15: if_icmpeq     33
      18: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      21: dup
      22: aload_2
      23: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      26: iconst_1
      27: iload_3
      28: iconst_1
      29: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      32: athrow
      33: iconst_0
      34: istore        4
      36: iload         4
      38: iload_3
      39: if_icmpge     61
      42: aload_0
      43: iload         4
      45: iload_1
      46: aload_2
      47: iload         4
      49: invokevirtual #67                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      52: invokevirtual #61                 // Method setEntry:(IID)V
      55: iinc          4, 1
      58: goto          36
      61: return

  public double[] getRow(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_2
      10: iload_2
      11: newarray       double
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_2
      20: if_icmpge     40
      23: aload_3
      24: iload         4
      26: aload_0
      27: iload_1
      28: iload         4
      30: invokevirtual #9                  // Method getEntry:(II)D
      33: dastore
      34: iinc          4, 1
      37: goto          17
      40: aload_3
      41: areturn

  public void setRow(int, double[]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iload_3
      13: if_icmpeq     29
      16: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      19: dup
      20: iconst_1
      21: aload_2
      22: arraylength
      23: iconst_1
      24: iload_3
      25: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      28: athrow
      29: iconst_0
      30: istore        4
      32: iload         4
      34: iload_3
      35: if_icmpge     55
      38: aload_0
      39: iload_1
      40: iload         4
      42: aload_2
      43: iload         4
      45: daload
      46: invokevirtual #61                 // Method setEntry:(IID)V
      49: iinc          4, 1
      52: goto          32
      55: return

  public double[] getColumn(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #60                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_2
      10: iload_2
      11: newarray       double
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_2
      20: if_icmpge     40
      23: aload_3
      24: iload         4
      26: aload_0
      27: iload         4
      29: iload_1
      30: invokevirtual #9                  // Method getEntry:(II)D
      33: dastore
      34: iinc          4, 1
      37: goto          17
      40: aload_3
      41: areturn

  public void setColumn(int, double[]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #60                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #6                  // Method getRowDimension:()I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iload_3
      13: if_icmpeq     29
      16: new           #47                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      19: dup
      20: aload_2
      21: arraylength
      22: iconst_1
      23: iload_3
      24: iconst_1
      25: invokespecial #48                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      28: athrow
      29: iconst_0
      30: istore        4
      32: iload         4
      34: iload_3
      35: if_icmpge     55
      38: aload_0
      39: iload         4
      41: iload_1
      42: aload_2
      43: iload         4
      45: daload
      46: invokevirtual #61                 // Method setEntry:(IID)V
      49: iinc          4, 1
      52: goto          32
      55: return

  public void addToEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #69                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
       6: aload_0
       7: iload_1
       8: iload_2
       9: aload_0
      10: iload_1
      11: iload_2
      12: invokevirtual #9                  // Method getEntry:(II)D
      15: dload_3
      16: dadd
      17: invokevirtual #61                 // Method setEntry:(IID)V
      20: return

  public void multiplyEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #69                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
       6: aload_0
       7: iload_1
       8: iload_2
       9: aload_0
      10: iload_1
      11: iload_2
      12: invokevirtual #9                  // Method getEntry:(II)D
      15: dload_3
      16: dmul
      17: invokevirtual #61                 // Method setEntry:(IID)V
      20: return

  public org.apache.commons.math3.linear.RealMatrix transpose();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_2
      10: aload_0
      11: iload_2
      12: iload_1
      13: invokevirtual #8                  // Method createMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      16: astore_3
      17: aload_0
      18: new           #70                 // class org/apache/commons/math3/linear/AbstractRealMatrix$5
      21: dup
      22: aload_0
      23: aload_3
      24: invokespecial #71                 // Method org/apache/commons/math3/linear/AbstractRealMatrix$5."<init>":(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V
      27: invokevirtual #41                 // Method walkInOptimizedOrder:(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
      30: pop2
      31: aload_3
      32: areturn

  public boolean isSquare();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getColumnDimension:()I
       4: aload_0
       5: invokevirtual #6                  // Method getRowDimension:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public abstract int getRowDimension();

  public abstract int getColumnDimension();

  public double getTrace() throws org.apache.commons.math3.linear.NonSquareMatrixException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_2
      10: iload_1
      11: iload_2
      12: if_icmpeq     25
      15: new           #20                 // class org/apache/commons/math3/linear/NonSquareMatrixException
      18: dup
      19: iload_1
      20: iload_2
      21: invokespecial #21                 // Method org/apache/commons/math3/linear/NonSquareMatrixException."<init>":(II)V
      24: athrow
      25: dconst_0
      26: dstore_3
      27: iconst_0
      28: istore        5
      30: iload         5
      32: iload_1
      33: if_icmpge     53
      36: dload_3
      37: aload_0
      38: iload         5
      40: iload         5
      42: invokevirtual #9                  // Method getEntry:(II)D
      45: dadd
      46: dstore_3
      47: iinc          5, 1
      50: goto          30
      53: dload_3
      54: dreturn

  public double[] operate(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: arraylength
      12: iload_3
      13: if_icmpeq     27
      16: new           #57                 // class org/apache/commons/math3/exception/DimensionMismatchException
      19: dup
      20: aload_1
      21: arraylength
      22: iload_3
      23: invokespecial #58                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      26: athrow
      27: iload_2
      28: newarray       double
      30: astore        4
      32: iconst_0
      33: istore        5
      35: iload         5
      37: iload_2
      38: if_icmpge     90
      41: dconst_0
      42: dstore        6
      44: iconst_0
      45: istore        8
      47: iload         8
      49: iload_3
      50: if_icmpge     77
      53: dload         6
      55: aload_0
      56: iload         5
      58: iload         8
      60: invokevirtual #9                  // Method getEntry:(II)D
      63: aload_1
      64: iload         8
      66: daload
      67: dmul
      68: dadd
      69: dstore        6
      71: iinc          8, 1
      74: goto          47
      77: aload         4
      79: iload         5
      81: dload         6
      83: dastore
      84: iinc          5, 1
      87: goto          35
      90: aload         4
      92: areturn

  public org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: new           #63                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_0
       5: aload_1
       6: checkcast     #63                 // class org/apache/commons/math3/linear/ArrayRealVector
       9: invokevirtual #72                 // Method org/apache/commons/math3/linear/ArrayRealVector.getDataRef:()[D
      12: invokevirtual #73                 // Method operate:([D)[D
      15: iconst_0
      16: invokespecial #65                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      19: areturn
      20: astore_2
      21: aload_0
      22: invokevirtual #6                  // Method getRowDimension:()I
      25: istore_3
      26: aload_0
      27: invokevirtual #7                  // Method getColumnDimension:()I
      30: istore        4
      32: aload_1
      33: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      36: iload         4
      38: if_icmpeq     55
      41: new           #57                 // class org/apache/commons/math3/exception/DimensionMismatchException
      44: dup
      45: aload_1
      46: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      49: iload         4
      51: invokespecial #58                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      54: athrow
      55: iload_3
      56: newarray       double
      58: astore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: iload_3
      66: if_icmpge     121
      69: dconst_0
      70: dstore        7
      72: iconst_0
      73: istore        9
      75: iload         9
      77: iload         4
      79: if_icmpge     108
      82: dload         7
      84: aload_0
      85: iload         6
      87: iload         9
      89: invokevirtual #9                  // Method getEntry:(II)D
      92: aload_1
      93: iload         9
      95: invokevirtual #67                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      98: dmul
      99: dadd
     100: dstore        7
     102: iinc          9, 1
     105: goto          75
     108: aload         5
     110: iload         6
     112: dload         7
     114: dastore
     115: iinc          6, 1
     118: goto          63
     121: new           #63                 // class org/apache/commons/math3/linear/ArrayRealVector
     124: dup
     125: aload         5
     127: iconst_0
     128: invokespecial #65                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
     131: areturn
    Exception table:
       from    to  target type
           0    19    20   Class java/lang/ClassCastException

  public double[] preMultiply(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: arraylength
      12: iload_2
      13: if_icmpeq     27
      16: new           #57                 // class org/apache/commons/math3/exception/DimensionMismatchException
      19: dup
      20: aload_1
      21: arraylength
      22: iload_2
      23: invokespecial #58                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      26: athrow
      27: iload_3
      28: newarray       double
      30: astore        4
      32: iconst_0
      33: istore        5
      35: iload         5
      37: iload_3
      38: if_icmpge     90
      41: dconst_0
      42: dstore        6
      44: iconst_0
      45: istore        8
      47: iload         8
      49: iload_2
      50: if_icmpge     77
      53: dload         6
      55: aload_0
      56: iload         8
      58: iload         5
      60: invokevirtual #9                  // Method getEntry:(II)D
      63: aload_1
      64: iload         8
      66: daload
      67: dmul
      68: dadd
      69: dstore        6
      71: iinc          8, 1
      74: goto          47
      77: aload         4
      79: iload         5
      81: dload         6
      83: dastore
      84: iinc          5, 1
      87: goto          35
      90: aload         4
      92: areturn

  public org.apache.commons.math3.linear.RealVector preMultiply(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: new           #63                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_0
       5: aload_1
       6: checkcast     #63                 // class org/apache/commons/math3/linear/ArrayRealVector
       9: invokevirtual #72                 // Method org/apache/commons/math3/linear/ArrayRealVector.getDataRef:()[D
      12: invokevirtual #75                 // Method preMultiply:([D)[D
      15: iconst_0
      16: invokespecial #65                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
      19: areturn
      20: astore_2
      21: aload_0
      22: invokevirtual #6                  // Method getRowDimension:()I
      25: istore_3
      26: aload_0
      27: invokevirtual #7                  // Method getColumnDimension:()I
      30: istore        4
      32: aload_1
      33: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      36: iload_3
      37: if_icmpeq     53
      40: new           #57                 // class org/apache/commons/math3/exception/DimensionMismatchException
      43: dup
      44: aload_1
      45: invokevirtual #66                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      48: iload_3
      49: invokespecial #58                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      52: athrow
      53: iload         4
      55: newarray       double
      57: astore        5
      59: iconst_0
      60: istore        6
      62: iload         6
      64: iload         4
      66: if_icmpge     120
      69: dconst_0
      70: dstore        7
      72: iconst_0
      73: istore        9
      75: iload         9
      77: iload_3
      78: if_icmpge     107
      81: dload         7
      83: aload_0
      84: iload         9
      86: iload         6
      88: invokevirtual #9                  // Method getEntry:(II)D
      91: aload_1
      92: iload         9
      94: invokevirtual #67                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      97: dmul
      98: dadd
      99: dstore        7
     101: iinc          9, 1
     104: goto          75
     107: aload         5
     109: iload         6
     111: dload         7
     113: dastore
     114: iinc          6, 1
     117: goto          62
     120: new           #63                 // class org/apache/commons/math3/linear/ArrayRealVector
     123: dup
     124: aload         5
     126: iconst_0
     127: invokespecial #65                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
     130: areturn
    Exception table:
       from    to  target type
           0    19    20   Class java/lang/ClassCastException

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #76,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_2
      32: if_icmpge     90
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmpge     84
      44: aload_0
      45: iload         4
      47: iload         5
      49: invokevirtual #9                  // Method getEntry:(II)D
      52: dstore        6
      54: aload_1
      55: iload         4
      57: iload         5
      59: dload         6
      61: invokeinterface #77,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
      66: dstore        8
      68: aload_0
      69: iload         4
      71: iload         5
      73: dload         8
      75: invokevirtual #61                 // Method setEntry:(IID)V
      78: iinc          5, 1
      81: goto          38
      84: iinc          4, 1
      87: goto          29
      90: aload_1
      91: invokeinterface #78,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
      96: dreturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #79,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_2
      32: if_icmpge     74
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmpge     68
      44: aload_1
      45: iload         4
      47: iload         5
      49: aload_0
      50: iload         4
      52: iload         5
      54: invokevirtual #9                  // Method getEntry:(II)D
      57: invokeinterface #80,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
      62: iinc          5, 1
      65: goto          38
      68: iinc          4, 1
      71: goto          29
      74: aload_1
      75: invokeinterface #81,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
      80: dreturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #42                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #6                  // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #7                  // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #76,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      30: iload_2
      31: istore        6
      33: iload         6
      35: iload_3
      36: if_icmpgt     96
      39: iload         4
      41: istore        7
      43: iload         7
      45: iload         5
      47: if_icmpgt     90
      50: aload_0
      51: iload         6
      53: iload         7
      55: invokevirtual #9                  // Method getEntry:(II)D
      58: dstore        8
      60: aload_1
      61: iload         6
      63: iload         7
      65: dload         8
      67: invokeinterface #77,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
      72: dstore        10
      74: aload_0
      75: iload         6
      77: iload         7
      79: dload         10
      81: invokevirtual #61                 // Method setEntry:(IID)V
      84: iinc          7, 1
      87: goto          43
      90: iinc          6, 1
      93: goto          33
      96: aload_1
      97: invokeinterface #78,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
     102: dreturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #42                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #6                  // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #7                  // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #79,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      30: iload_2
      31: istore        6
      33: iload         6
      35: iload_3
      36: if_icmpgt     80
      39: iload         4
      41: istore        7
      43: iload         7
      45: iload         5
      47: if_icmpgt     74
      50: aload_1
      51: iload         6
      53: iload         7
      55: aload_0
      56: iload         6
      58: iload         7
      60: invokevirtual #9                  // Method getEntry:(II)D
      63: invokeinterface #80,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
      68: iinc          7, 1
      71: goto          43
      74: iinc          6, 1
      77: goto          33
      80: aload_1
      81: invokeinterface #81,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
      86: dreturn

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #76,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     90
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_2
      41: if_icmpge     84
      44: aload_0
      45: iload         5
      47: iload         4
      49: invokevirtual #9                  // Method getEntry:(II)D
      52: dstore        6
      54: aload_1
      55: iload         5
      57: iload         4
      59: dload         6
      61: invokeinterface #77,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
      66: dstore        8
      68: aload_0
      69: iload         5
      71: iload         4
      73: dload         8
      75: invokevirtual #61                 // Method setEntry:(IID)V
      78: iinc          5, 1
      81: goto          38
      84: iinc          4, 1
      87: goto          29
      90: aload_1
      91: invokeinterface #78,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
      96: dreturn

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #7                  // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #79,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     74
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_2
      41: if_icmpge     68
      44: aload_1
      45: iload         5
      47: iload         4
      49: aload_0
      50: iload         5
      52: iload         4
      54: invokevirtual #9                  // Method getEntry:(II)D
      57: invokeinterface #80,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
      62: iinc          5, 1
      65: goto          38
      68: iinc          4, 1
      71: goto          29
      74: aload_1
      75: invokeinterface #81,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
      80: dreturn

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #42                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #6                  // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #7                  // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #76,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      30: iload         4
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpgt     96
      41: iload_2
      42: istore        7
      44: iload         7
      46: iload_3
      47: if_icmpgt     90
      50: aload_0
      51: iload         7
      53: iload         6
      55: invokevirtual #9                  // Method getEntry:(II)D
      58: dstore        8
      60: aload_1
      61: iload         7
      63: iload         6
      65: dload         8
      67: invokeinterface #77,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
      72: dstore        10
      74: aload_0
      75: iload         7
      77: iload         6
      79: dload         10
      81: invokevirtual #61                 // Method setEntry:(IID)V
      84: iinc          7, 1
      87: goto          44
      90: iinc          6, 1
      93: goto          34
      96: aload_1
      97: invokeinterface #78,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
     102: dreturn

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #42                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #6                  // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #7                  // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #79,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      30: iload         4
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpgt     80
      41: iload_2
      42: istore        7
      44: iload         7
      46: iload_3
      47: if_icmpgt     74
      50: aload_1
      51: iload         7
      53: iload         6
      55: aload_0
      56: iload         7
      58: iload         6
      60: invokevirtual #9                  // Method getEntry:(II)D
      63: invokeinterface #80,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
      68: iinc          7, 1
      71: goto          44
      74: iinc          6, 1
      77: goto          34
      80: aload_1
      81: invokeinterface #81,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
      86: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method walkInRowOrder:(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
       5: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #83                 // Method walkInRowOrder:(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
       5: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokevirtual #84                 // Method walkInRowOrder:(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
      11: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokevirtual #85                 // Method walkInRowOrder:(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
      11: dreturn

  public java.lang.String toString();
    Code:
       0: new           #86                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #89                 // Method java/lang/Class.getName:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: aload_2
      18: bipush        46
      20: invokevirtual #90                 // Method java/lang/String.lastIndexOf:(I)I
      23: iconst_1
      24: iadd
      25: invokevirtual #91                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: aload_1
      36: getstatic     #93                 // Field DEFAULT_FORMAT:Lorg/apache/commons/math3/linear/RealMatrixFormat;
      39: aload_0
      40: invokevirtual #94                 // Method org/apache/commons/math3/linear/RealMatrixFormat.format:(Lorg/apache/commons/math3/linear/RealMatrix;)Ljava/lang/String;
      43: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #29                 // class org/apache/commons/math3/linear/RealMatrix
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #29                 // class org/apache/commons/math3/linear/RealMatrix
      20: astore_2
      21: aload_0
      22: invokevirtual #6                  // Method getRowDimension:()I
      25: istore_3
      26: aload_0
      27: invokevirtual #7                  // Method getColumnDimension:()I
      30: istore        4
      32: aload_2
      33: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      38: iload         4
      40: if_icmpne     53
      43: aload_2
      44: invokeinterface #62,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      49: iload_3
      50: if_icmpeq     55
      53: iconst_0
      54: ireturn
      55: iconst_0
      56: istore        5
      58: iload         5
      60: iload_3
      61: if_icmpge     110
      64: iconst_0
      65: istore        6
      67: iload         6
      69: iload         4
      71: if_icmpge     104
      74: aload_0
      75: iload         5
      77: iload         6
      79: invokevirtual #9                  // Method getEntry:(II)D
      82: aload_2
      83: iload         5
      85: iload         6
      87: invokeinterface #10,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      92: dcmpl
      93: ifeq          98
      96: iconst_0
      97: ireturn
      98: iinc          6, 1
     101: goto          67
     104: iinc          5, 1
     107: goto          58
     110: iconst_1
     111: ireturn

  public int hashCode();
    Code:
       0: bipush        7
       2: istore_1
       3: aload_0
       4: invokevirtual #6                  // Method getRowDimension:()I
       7: istore_2
       8: aload_0
       9: invokevirtual #7                  // Method getColumnDimension:()I
      12: istore_3
      13: iload_1
      14: bipush        31
      16: imul
      17: iload_2
      18: iadd
      19: istore_1
      20: iload_1
      21: bipush        31
      23: imul
      24: iload_3
      25: iadd
      26: istore_1
      27: iconst_0
      28: istore        4
      30: iload         4
      32: iload_2
      33: if_icmpge     90
      36: iconst_0
      37: istore        5
      39: iload         5
      41: iload_3
      42: if_icmpge     84
      45: iload_1
      46: bipush        31
      48: imul
      49: bipush        11
      51: iload         4
      53: iconst_1
      54: iadd
      55: imul
      56: bipush        17
      58: iload         5
      60: iconst_1
      61: iadd
      62: imul
      63: iadd
      64: aload_0
      65: iload         4
      67: iload         5
      69: invokevirtual #9                  // Method getEntry:(II)D
      72: invokestatic  #96                 // Method org/apache/commons/math3/util/MathUtils.hash:(D)I
      75: imul
      76: iadd
      77: istore_1
      78: iinc          5, 1
      81: goto          39
      84: iinc          4, 1
      87: goto          30
      90: iload_1
      91: ireturn

  public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract org.apache.commons.math3.linear.RealMatrix copy();

  public abstract double getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;

  static {};
    Code:
       0: getstatic     #97                 // Field java/util/Locale.US:Ljava/util/Locale;
       3: invokestatic  #98                 // Method org/apache/commons/math3/linear/RealMatrixFormat.getInstance:(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealMatrixFormat;
       6: putstatic     #93                 // Field DEFAULT_FORMAT:Lorg/apache/commons/math3/linear/RealMatrixFormat;
       9: getstatic     #93                 // Field DEFAULT_FORMAT:Lorg/apache/commons/math3/linear/RealMatrixFormat;
      12: invokevirtual #99                 // Method org/apache/commons/math3/linear/RealMatrixFormat.getFormat:()Ljava/text/NumberFormat;
      15: iconst_1
      16: invokevirtual #100                // Method java/text/NumberFormat.setMinimumFractionDigits:(I)V
      19: return
}
