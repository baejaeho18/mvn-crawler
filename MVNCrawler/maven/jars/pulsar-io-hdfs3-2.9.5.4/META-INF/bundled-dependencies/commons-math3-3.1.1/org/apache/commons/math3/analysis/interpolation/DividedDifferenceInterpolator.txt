Compiled from "DividedDifferenceInterpolator.java"
public class org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator implements org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator,java.io.Serializable {
  private static final long serialVersionUID;

  public org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm interpolate(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NonMonotonicSequenceException;
    Code:
       0: aload_1
       1: aload_2
       2: iconst_1
       3: invokestatic  #2                  // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.verifyInterpolationArray:([D[DZ)Z
       6: pop
       7: aload_1
       8: arraylength
       9: iconst_1
      10: isub
      11: newarray       double
      13: astore_3
      14: aload_1
      15: iconst_0
      16: aload_3
      17: iconst_0
      18: aload_3
      19: arraylength
      20: invokestatic  #3                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_1
      24: aload_2
      25: invokestatic  #4                  // Method computeDividedDifference:([D[D)[D
      28: astore        4
      30: new           #5                  // class org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm
      33: dup
      34: aload         4
      36: aload_3
      37: invokespecial #6                  // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm."<init>":([D[D)V
      40: areturn

  protected static double[] computeDividedDifference(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NonMonotonicSequenceException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #2                  // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.verifyInterpolationArray:([D[DZ)Z
       6: pop
       7: aload_1
       8: invokevirtual #7                  // Method "[D".clone:()Ljava/lang/Object;
      11: checkcast     #8                  // class "[D"
      14: astore_2
      15: aload_0
      16: arraylength
      17: istore_3
      18: iload_3
      19: newarray       double
      21: astore        4
      23: aload         4
      25: iconst_0
      26: aload_2
      27: iconst_0
      28: daload
      29: dastore
      30: iconst_1
      31: istore        5
      33: iload         5
      35: iload_3
      36: if_icmpge     103
      39: iconst_0
      40: istore        6
      42: iload         6
      44: iload_3
      45: iload         5
      47: isub
      48: if_icmpge     89
      51: aload_0
      52: iload         6
      54: iload         5
      56: iadd
      57: daload
      58: aload_0
      59: iload         6
      61: daload
      62: dsub
      63: dstore        7
      65: aload_2
      66: iload         6
      68: aload_2
      69: iload         6
      71: iconst_1
      72: iadd
      73: daload
      74: aload_2
      75: iload         6
      77: daload
      78: dsub
      79: dload         7
      81: ddiv
      82: dastore
      83: iinc          6, 1
      86: goto          42
      89: aload         4
      91: iload         5
      93: aload_2
      94: iconst_0
      95: daload
      96: dastore
      97: iinc          5, 1
     100: goto          33
     103: aload         4
     105: areturn

  public org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #9                  // Method interpolate:([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm;
       6: areturn
}
