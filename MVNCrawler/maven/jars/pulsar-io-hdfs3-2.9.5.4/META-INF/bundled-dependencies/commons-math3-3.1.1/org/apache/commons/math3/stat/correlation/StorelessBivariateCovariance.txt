Compiled from "StorelessBivariateCovariance.java"
class org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance {
  private double meanX;

  private double meanY;

  private double n;

  private double covarianceNumerator;

  private boolean biasCorrected;

  public org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: dconst_0
       7: dup2_x1
       8: putfield      #3                  // Field meanY:D
      11: putfield      #4                  // Field meanX:D
      14: aload_0
      15: dconst_0
      16: putfield      #5                  // Field n:D
      19: aload_0
      20: dconst_0
      21: putfield      #6                  // Field covarianceNumerator:D
      24: aload_0
      25: iload_1
      26: putfield      #7                  // Field biasCorrected:Z
      29: return

  public void increment(double, double);
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field n:D
       5: dconst_1
       6: dadd
       7: putfield      #5                  // Field n:D
      10: dload_1
      11: aload_0
      12: getfield      #4                  // Field meanX:D
      15: dsub
      16: dstore        5
      18: dload_3
      19: aload_0
      20: getfield      #3                  // Field meanY:D
      23: dsub
      24: dstore        7
      26: aload_0
      27: dup
      28: getfield      #4                  // Field meanX:D
      31: dload         5
      33: aload_0
      34: getfield      #5                  // Field n:D
      37: ddiv
      38: dadd
      39: putfield      #4                  // Field meanX:D
      42: aload_0
      43: dup
      44: getfield      #3                  // Field meanY:D
      47: dload         7
      49: aload_0
      50: getfield      #5                  // Field n:D
      53: ddiv
      54: dadd
      55: putfield      #3                  // Field meanY:D
      58: aload_0
      59: dup
      60: getfield      #6                  // Field covarianceNumerator:D
      63: aload_0
      64: getfield      #5                  // Field n:D
      67: dconst_1
      68: dsub
      69: aload_0
      70: getfield      #5                  // Field n:D
      73: ddiv
      74: dload         5
      76: dmul
      77: dload         7
      79: dmul
      80: dadd
      81: putfield      #6                  // Field covarianceNumerator:D
      84: return

  public double getN();
    Code:
       0: aload_0
       1: getfield      #5                  // Field n:D
       4: dreturn

  public double getResult() throws org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field n:D
       4: ldc2_w        #8                  // double 2.0d
       7: dcmpg
       8: ifge          34
      11: new           #10                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      14: dup
      15: getstatic     #11                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INSUFFICIENT_DIMENSION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: aload_0
      19: getfield      #5                  // Field n:D
      22: invokestatic  #12                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      25: iconst_2
      26: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: iconst_1
      30: invokespecial #14                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      33: athrow
      34: aload_0
      35: getfield      #7                  // Field biasCorrected:Z
      38: ifeq          53
      41: aload_0
      42: getfield      #6                  // Field covarianceNumerator:D
      45: aload_0
      46: getfield      #5                  // Field n:D
      49: dconst_1
      50: dsub
      51: ddiv
      52: dreturn
      53: aload_0
      54: getfield      #6                  // Field covarianceNumerator:D
      57: aload_0
      58: getfield      #5                  // Field n:D
      61: ddiv
      62: dreturn
}
