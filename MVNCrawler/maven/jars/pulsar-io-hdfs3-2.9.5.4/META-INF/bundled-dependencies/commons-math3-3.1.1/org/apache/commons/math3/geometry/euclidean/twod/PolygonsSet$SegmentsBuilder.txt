Compiled from "PolygonsSet.java"
class org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder implements org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> {
  private org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment> sorted;

  public org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/geometry/partitioning/utilities/AVLTree
       8: dup
       9: invokespecial #3                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree."<init>":()V
      12: putfield      #4                  // Field sorted:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
      15: return

  public org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: getstatic     #5                  // Field org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order.MINUS_SUB_PLUS:Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
       3: areturn

  public void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
       4: checkcast     #7                  // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
       7: astore_2
       8: aload_2
       9: invokevirtual #8                  // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      12: ifnull        24
      15: aload_0
      16: aload_2
      17: invokevirtual #8                  // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      20: iconst_0
      21: invokespecial #9                  // Method addContribution:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V
      24: aload_2
      25: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      28: ifnull        40
      31: aload_0
      32: aload_2
      33: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      36: iconst_1
      37: invokespecial #9                  // Method addContribution:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V
      40: return

  public void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>);
    Code:
       0: return

  private void addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, boolean);
    Code:
       0: aload_1
       1: checkcast     #11                 // class org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
       4: astore_3
       5: aload_1
       6: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      11: checkcast     #13                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      14: astore        4
      16: aload_3
      17: invokevirtual #14                 // Method org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
      20: checkcast     #15                 // class org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
      23: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.asList:()Ljava/util/List;
      26: astore        5
      28: aload         5
      30: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore        6
      37: aload         6
      39: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          180
      47: aload         6
      49: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #20                 // class org/apache/commons/math3/geometry/euclidean/oned/Interval
      57: astore        7
      59: aload         7
      61: invokevirtual #21                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getInf:()D
      64: invokestatic  #22                 // Method java/lang/Double.isInfinite:(D)Z
      67: ifeq          74
      70: aconst_null
      71: goto          91
      74: aload         4
      76: new           #23                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
      79: dup
      80: aload         7
      82: invokevirtual #21                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getInf:()D
      85: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
      88: invokevirtual #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      91: astore        8
      93: aload         7
      95: invokevirtual #26                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getSup:()D
      98: invokestatic  #22                 // Method java/lang/Double.isInfinite:(D)Z
     101: ifeq          108
     104: aconst_null
     105: goto          125
     108: aload         4
     110: new           #23                 // class org/apache/commons/math3/geometry/euclidean/oned/Vector1D
     113: dup
     114: aload         7
     116: invokevirtual #26                 // Method org/apache/commons/math3/geometry/euclidean/oned/Interval.getSup:()D
     119: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/oned/Vector1D."<init>":(D)V
     122: invokevirtual #25                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.toSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
     125: astore        9
     127: iload_2
     128: ifeq          157
     131: aload_0
     132: getfield      #4                  // Field sorted:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
     135: new           #27                 // class org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment
     138: dup
     139: aload         9
     141: aload         8
     143: aload         4
     145: invokevirtual #28                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getReverse:()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
     148: invokespecial #29                 // Method org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
     151: invokevirtual #30                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.insert:(Ljava/lang/Comparable;)V
     154: goto          177
     157: aload_0
     158: getfield      #4                  // Field sorted:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
     161: new           #27                 // class org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment
     164: dup
     165: aload         8
     167: aload         9
     169: aload         4
     171: invokespecial #29                 // Method org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
     174: invokevirtual #30                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.insert:(Ljava/lang/Comparable;)V
     177: goto          37
     180: return

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment> getSorted();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sorted:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;
       4: areturn
}
