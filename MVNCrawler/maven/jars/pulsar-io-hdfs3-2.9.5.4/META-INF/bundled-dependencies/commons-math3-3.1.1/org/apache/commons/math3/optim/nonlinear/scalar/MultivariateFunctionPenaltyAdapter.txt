Compiled from "MultivariateFunctionPenaltyAdapter.java"
public class org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter implements org.apache.commons.math3.analysis.MultivariateFunction {
  private final org.apache.commons.math3.analysis.MultivariateFunction bounded;

  private final double[] lower;

  private final double[] upper;

  private final double offset;

  private final double[] scale;

  public org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter(org.apache.commons.math3.analysis.MultivariateFunction, double[], double[], double, double[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokestatic  #2                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_3
       9: invokestatic  #2                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      12: aload         6
      14: invokestatic  #2                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      17: aload_2
      18: arraylength
      19: aload_3
      20: arraylength
      21: if_icmpeq     36
      24: new           #3                  // class org/apache/commons/math3/exception/DimensionMismatchException
      27: dup
      28: aload_2
      29: arraylength
      30: aload_3
      31: arraylength
      32: invokespecial #4                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      35: athrow
      36: aload_2
      37: arraylength
      38: aload         6
      40: arraylength
      41: if_icmpeq     57
      44: new           #3                  // class org/apache/commons/math3/exception/DimensionMismatchException
      47: dup
      48: aload_2
      49: arraylength
      50: aload         6
      52: arraylength
      53: invokespecial #4                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      56: athrow
      57: iconst_0
      58: istore        7
      60: iload         7
      62: aload_2
      63: arraylength
      64: if_icmpge     108
      67: aload_3
      68: iload         7
      70: daload
      71: aload_2
      72: iload         7
      74: daload
      75: dcmpl
      76: ifge          102
      79: new           #5                  // class org/apache/commons/math3/exception/NumberIsTooSmallException
      82: dup
      83: aload_3
      84: iload         7
      86: daload
      87: invokestatic  #6                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      90: aload_2
      91: iload         7
      93: daload
      94: invokestatic  #6                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      97: iconst_1
      98: invokespecial #7                  // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
     101: athrow
     102: iinc          7, 1
     105: goto          60
     108: aload_0
     109: aload_1
     110: putfield      #8                  // Field bounded:Lorg/apache/commons/math3/analysis/MultivariateFunction;
     113: aload_0
     114: aload_2
     115: invokevirtual #9                  // Method "[D".clone:()Ljava/lang/Object;
     118: checkcast     #10                 // class "[D"
     121: putfield      #11                 // Field lower:[D
     124: aload_0
     125: aload_3
     126: invokevirtual #12                 // Method "[D".clone:()Ljava/lang/Object;
     129: checkcast     #10                 // class "[D"
     132: putfield      #13                 // Field upper:[D
     135: aload_0
     136: dload         4
     138: putfield      #14                 // Field offset:D
     141: aload_0
     142: aload         6
     144: invokevirtual #15                 // Method "[D".clone:()Ljava/lang/Object;
     147: checkcast     #10                 // class "[D"
     150: putfield      #16                 // Field scale:[D
     153: return

  public double value(double[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #16                 // Field scale:[D
       7: arraylength
       8: if_icmpge     162
      11: aload_1
      12: iload_2
      13: daload
      14: aload_0
      15: getfield      #11                 // Field lower:[D
      18: iload_2
      19: daload
      20: dcmpg
      21: iflt          37
      24: aload_1
      25: iload_2
      26: daload
      27: aload_0
      28: getfield      #13                 // Field upper:[D
      31: iload_2
      32: daload
      33: dcmpl
      34: ifle          156
      37: dconst_0
      38: dstore_3
      39: iload_2
      40: istore        5
      42: iload         5
      44: aload_0
      45: getfield      #16                 // Field scale:[D
      48: arraylength
      49: if_icmpge     149
      52: aload_1
      53: iload         5
      55: daload
      56: aload_0
      57: getfield      #11                 // Field lower:[D
      60: iload         5
      62: daload
      63: dcmpg
      64: ifge          92
      67: aload_0
      68: getfield      #16                 // Field scale:[D
      71: iload         5
      73: daload
      74: aload_0
      75: getfield      #11                 // Field lower:[D
      78: iload         5
      80: daload
      81: aload_1
      82: iload         5
      84: daload
      85: dsub
      86: dmul
      87: dstore        6
      89: goto          135
      92: aload_1
      93: iload         5
      95: daload
      96: aload_0
      97: getfield      #13                 // Field upper:[D
     100: iload         5
     102: daload
     103: dcmpl
     104: ifle          132
     107: aload_0
     108: getfield      #16                 // Field scale:[D
     111: iload         5
     113: daload
     114: aload_1
     115: iload         5
     117: daload
     118: aload_0
     119: getfield      #13                 // Field upper:[D
     122: iload         5
     124: daload
     125: dsub
     126: dmul
     127: dstore        6
     129: goto          135
     132: dconst_0
     133: dstore        6
     135: dload_3
     136: dload         6
     138: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     141: dadd
     142: dstore_3
     143: iinc          5, 1
     146: goto          42
     149: aload_0
     150: getfield      #14                 // Field offset:D
     153: dload_3
     154: dadd
     155: dreturn
     156: iinc          2, 1
     159: goto          2
     162: aload_0
     163: getfield      #8                  // Field bounded:Lorg/apache/commons/math3/analysis/MultivariateFunction;
     166: aload_1
     167: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/analysis/MultivariateFunction.value:([D)D
     172: dreturn
}
