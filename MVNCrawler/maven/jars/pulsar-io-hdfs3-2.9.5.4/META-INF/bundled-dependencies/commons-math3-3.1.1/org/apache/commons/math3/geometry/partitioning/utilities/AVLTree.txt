Compiled from "AVLTree.java"
public class org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T extends java.lang.Comparable<T>> {
  private org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node top;

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       9: return

  public void insert(T);
    Code:
       0: aload_1
       1: ifnull        37
       4: aload_0
       5: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       8: ifnonnull     28
      11: aload_0
      12: new           #3                  // class org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node
      15: dup
      16: aload_0
      17: aload_1
      18: aconst_null
      19: invokespecial #4                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node."<init>":(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;Ljava/lang/Comparable;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)V
      22: putfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      25: goto          37
      28: aload_0
      29: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      32: aload_1
      33: invokevirtual #5                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.insert:(Ljava/lang/Comparable;)Z
      36: pop
      37: return

  public boolean delete(T);
    Code:
       0: aload_1
       1: ifnull        51
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method getNotSmaller:(Ljava/lang/Comparable;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       9: astore_2
      10: aload_2
      11: ifnull        51
      14: aload_2
      15: invokestatic  #7                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$000:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Ljava/lang/Comparable;
      18: aload_1
      19: if_acmpne     28
      22: aload_2
      23: invokevirtual #8                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.delete:()V
      26: iconst_1
      27: ireturn
      28: aload_2
      29: invokestatic  #7                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$000:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Ljava/lang/Comparable;
      32: aload_1
      33: invokeinterface #9,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      38: ifle          43
      41: iconst_0
      42: ireturn
      43: aload_2
      44: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.getNext:()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      47: astore_2
      48: goto          10
      51: iconst_0
      52: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      15: invokevirtual #11                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.size:()I
      18: ireturn

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getSmallest();
    Code:
       0: aload_0
       1: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      15: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.getSmallest:()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      18: areturn

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getLargest();
    Code:
       0: aload_0
       1: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      15: invokevirtual #13                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.getLargest:()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      18: areturn

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getNotSmaller(T);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       6: astore_3
       7: aload_3
       8: ifnull        60
      11: aload_3
      12: invokestatic  #7                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$000:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Ljava/lang/Comparable;
      15: aload_1
      16: invokeinterface #9,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      21: ifge          41
      24: aload_3
      25: invokestatic  #14                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$100:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      28: ifnonnull     33
      31: aload_2
      32: areturn
      33: aload_3
      34: invokestatic  #14                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$100:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      37: astore_3
      38: goto          7
      41: aload_3
      42: astore_2
      43: aload_3
      44: invokestatic  #15                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$200:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      47: ifnonnull     52
      50: aload_2
      51: areturn
      52: aload_3
      53: invokestatic  #15                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$200:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      56: astore_3
      57: goto          7
      60: aconst_null
      61: areturn

  public org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node getNotLarger(T);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       6: astore_3
       7: aload_3
       8: ifnull        60
      11: aload_3
      12: invokestatic  #7                  // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$000:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Ljava/lang/Comparable;
      15: aload_1
      16: invokeinterface #9,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      21: ifle          41
      24: aload_3
      25: invokestatic  #15                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$200:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      28: ifnonnull     33
      31: aload_2
      32: areturn
      33: aload_3
      34: invokestatic  #15                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$200:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      37: astore_3
      38: goto          7
      41: aload_3
      42: astore_2
      43: aload_3
      44: invokestatic  #14                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$100:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      47: ifnonnull     52
      50: aload_2
      51: areturn
      52: aload_3
      53: invokestatic  #14                 // Method org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node.access$100:(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
      56: astore_3
      57: goto          7
      60: aconst_null
      61: areturn

  static org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node access$302(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree, org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field top:Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
       6: areturn
}
