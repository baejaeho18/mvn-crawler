Compiled from "Logistic.java"
public class org.apache.commons.math3.analysis.function.Logistic implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction {
  private final double a;

  private final double k;

  private final double b;

  private final double oneOverN;

  private final double q;

  private final double m;

  public org.apache.commons.math3.analysis.function.Logistic(double, double, double, double, double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: dload         11
       6: dconst_0
       7: dcmpg
       8: ifgt          24
      11: new           #3                  // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      14: dup
      15: dload         11
      17: invokestatic  #4                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      20: invokespecial #5                  // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Ljava/lang/Number;)V
      23: athrow
      24: aload_0
      25: dload_1
      26: putfield      #6                  // Field k:D
      29: aload_0
      30: dload_3
      31: putfield      #7                  // Field m:D
      34: aload_0
      35: dload         5
      37: putfield      #8                  // Field b:D
      40: aload_0
      41: dload         7
      43: putfield      #9                  // Field q:D
      46: aload_0
      47: dload         9
      49: putfield      #10                 // Field a:D
      52: aload_0
      53: dconst_1
      54: dload         11
      56: ddiv
      57: putfield      #11                 // Field oneOverN:D
      60: return

  public double value(double);
    Code:
       0: aload_0
       1: getfield      #7                  // Field m:D
       4: dload_1
       5: dsub
       6: aload_0
       7: getfield      #6                  // Field k:D
      10: aload_0
      11: getfield      #8                  // Field b:D
      14: aload_0
      15: getfield      #9                  // Field q:D
      18: aload_0
      19: getfield      #10                 // Field a:D
      22: aload_0
      23: getfield      #11                 // Field oneOverN:D
      26: invokestatic  #1                  // Method value:(DDDDDD)D
      29: dreturn

  public org.apache.commons.math3.analysis.UnivariateFunction derivative();
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method org/apache/commons/math3/analysis/FunctionUtils.toDifferentiableUnivariateFunction:(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.derivative:()Lorg/apache/commons/math3/analysis/UnivariateFunction;
       9: areturn

  private static double value(double, double, double, double, double, double);
    Code:
       0: dload         8
       2: dload_2
       3: dload         8
       5: dsub
       6: dconst_1
       7: dload         6
       9: dload         4
      11: dload_0
      12: dmul
      13: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
      16: dmul
      17: dadd
      18: dload         10
      20: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      23: ddiv
      24: dadd
      25: dreturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.negate:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       4: aload_0
       5: getfield      #7                  // Field m:D
       8: invokevirtual #17                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.add:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      11: aload_0
      12: getfield      #8                  // Field b:D
      15: invokevirtual #18                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.multiply:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      18: invokevirtual #19                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.exp:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      21: aload_0
      22: getfield      #9                  // Field q:D
      25: invokevirtual #18                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.multiply:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      28: dconst_1
      29: invokevirtual #17                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.add:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      32: aload_0
      33: getfield      #11                 // Field oneOverN:D
      36: invokevirtual #20                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.pow:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      39: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.reciprocal:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      42: aload_0
      43: getfield      #6                  // Field k:D
      46: aload_0
      47: getfield      #10                 // Field a:D
      50: dsub
      51: invokevirtual #18                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.multiply:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      54: aload_0
      55: getfield      #10                 // Field a:D
      58: invokevirtual #17                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.add:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      61: areturn

  static double access$000(double, double, double, double, double, double);
    Code:
       0: dload_0
       1: dload_2
       2: dload         4
       4: dload         6
       6: dload         8
       8: dload         10
      10: invokestatic  #1                  // Method value:(DDDDDD)D
      13: dreturn
}
