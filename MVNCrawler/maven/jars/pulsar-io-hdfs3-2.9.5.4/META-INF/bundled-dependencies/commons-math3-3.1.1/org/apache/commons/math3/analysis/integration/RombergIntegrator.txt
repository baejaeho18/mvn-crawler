Compiled from "RombergIntegrator.java"
public class org.apache.commons.math3.analysis.integration.RombergIntegrator extends org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator {
  public static final int ROMBERG_MAX_ITERATIONS_COUNT;

  public org.apache.commons.math3.analysis.integration.RombergIntegrator(double, double, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: iload         5
       5: iload         6
       7: invokespecial #1                  // Method org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator."<init>":(DDII)V
      10: iload         6
      12: bipush        32
      14: if_icmple     36
      17: new           #2                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      20: dup
      21: iload         6
      23: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: bipush        32
      28: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: iconst_0
      32: invokespecial #4                  // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      35: athrow
      36: return

  public org.apache.commons.math3.analysis.integration.RombergIntegrator(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #5                  // Method org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator."<init>":(II)V
       6: iload_2
       7: bipush        32
       9: if_icmple     30
      12: new           #2                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      15: dup
      16: iload_2
      17: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: bipush        32
      22: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: iconst_0
      26: invokespecial #4                  // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      29: athrow
      30: return

  public org.apache.commons.math3.analysis.integration.RombergIntegrator();
    Code:
       0: aload_0
       1: iconst_3
       2: bipush        32
       4: invokespecial #5                  // Method org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator."<init>":(II)V
       7: return

  protected double doIntegrate() throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field iterations:Lorg/apache/commons/math3/util/Incrementor;
       4: invokevirtual #7                  // Method org/apache/commons/math3/util/Incrementor.getMaximalCount:()I
       7: iconst_1
       8: iadd
       9: istore_1
      10: iload_1
      11: newarray       double
      13: astore_2
      14: iload_1
      15: newarray       double
      17: astore_3
      18: new           #8                  // class org/apache/commons/math3/analysis/integration/TrapezoidIntegrator
      21: dup
      22: invokespecial #9                  // Method org/apache/commons/math3/analysis/integration/TrapezoidIntegrator."<init>":()V
      25: astore        4
      27: aload_3
      28: iconst_0
      29: aload         4
      31: aload_0
      32: iconst_0
      33: invokevirtual #10                 // Method org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.stage:(Lorg/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator;I)D
      36: dastore
      37: aload_0
      38: getfield      #6                  // Field iterations:Lorg/apache/commons/math3/util/Incrementor;
      41: invokevirtual #11                 // Method org/apache/commons/math3/util/Incrementor.incrementCount:()V
      44: aload_3
      45: iconst_0
      46: daload
      47: dstore        5
      49: aload_0
      50: getfield      #6                  // Field iterations:Lorg/apache/commons/math3/util/Incrementor;
      53: invokevirtual #12                 // Method org/apache/commons/math3/util/Incrementor.getCount:()I
      56: istore        7
      58: aload_2
      59: astore        8
      61: aload_3
      62: astore_2
      63: aload         8
      65: astore_3
      66: aload_3
      67: iconst_0
      68: aload         4
      70: aload_0
      71: iload         7
      73: invokevirtual #10                 // Method org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.stage:(Lorg/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator;I)D
      76: dastore
      77: aload_0
      78: getfield      #6                  // Field iterations:Lorg/apache/commons/math3/util/Incrementor;
      81: invokevirtual #11                 // Method org/apache/commons/math3/util/Incrementor.incrementCount:()V
      84: iconst_1
      85: istore        9
      87: iload         9
      89: iload         7
      91: if_icmpgt     138
      94: lconst_1
      95: iconst_2
      96: iload         9
      98: imul
      99: lshl
     100: lconst_1
     101: lsub
     102: l2d
     103: dstore        10
     105: aload_3
     106: iload         9
     108: iconst_1
     109: isub
     110: daload
     111: dstore        12
     113: aload_3
     114: iload         9
     116: dload         12
     118: dload         12
     120: aload_2
     121: iload         9
     123: iconst_1
     124: isub
     125: daload
     126: dsub
     127: dload         10
     129: ddiv
     130: dadd
     131: dastore
     132: iinc          9, 1
     135: goto          87
     138: aload_3
     139: iload         7
     141: daload
     142: dstore        9
     144: iload         7
     146: aload_0
     147: invokevirtual #13                 // Method getMinimalIterationCount:()I
     150: if_icmplt     206
     153: dload         9
     155: dload         5
     157: dsub
     158: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     161: dstore        11
     163: aload_0
     164: invokevirtual #15                 // Method getRelativeAccuracy:()D
     167: dload         5
     169: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     172: dload         9
     174: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     177: dadd
     178: dmul
     179: ldc2_w        #16                 // double 0.5d
     182: dmul
     183: dstore        13
     185: dload         11
     187: dload         13
     189: dcmpg
     190: ifle          203
     193: dload         11
     195: aload_0
     196: invokevirtual #18                 // Method getAbsoluteAccuracy:()D
     199: dcmpg
     200: ifgt          206
     203: dload         9
     205: dreturn
     206: dload         9
     208: dstore        5
     210: goto          49
}
