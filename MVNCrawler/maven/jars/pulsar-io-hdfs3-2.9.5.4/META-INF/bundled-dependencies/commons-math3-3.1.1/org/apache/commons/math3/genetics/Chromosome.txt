Compiled from "Chromosome.java"
public abstract class org.apache.commons.math3.genetics.Chromosome implements java.lang.Comparable<org.apache.commons.math3.genetics.Chromosome>, org.apache.commons.math3.genetics.Fitness {
  private static final double NO_FITNESS;

  private double fitness;

  public org.apache.commons.math3.genetics.Chromosome();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // double -Infinityd
       8: putfield      #4                  // Field fitness:D
      11: return

  public double getFitness();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fitness:D
       4: ldc2_w        #2                  // double -Infinityd
       7: dcmpl
       8: ifne          19
      11: aload_0
      12: aload_0
      13: invokevirtual #5                  // Method fitness:()D
      16: putfield      #4                  // Field fitness:D
      19: aload_0
      20: getfield      #4                  // Field fitness:D
      23: dreturn

  public int compareTo(org.apache.commons.math3.genetics.Chromosome);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getFitness:()D
       4: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: aload_1
       8: invokevirtual #6                  // Method getFitness:()D
      11: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      14: invokevirtual #8                  // Method java/lang/Double.compareTo:(Ljava/lang/Double;)I
      17: ireturn

  protected boolean isSame(org.apache.commons.math3.genetics.Chromosome);
    Code:
       0: iconst_0
       1: ireturn

  protected org.apache.commons.math3.genetics.Chromosome findSameChromosome(org.apache.commons.math3.genetics.Population);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/math3/genetics/Population.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          39
      16: aload_2
      17: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #12                 // class org/apache/commons/math3/genetics/Chromosome
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #13                 // Method isSame:(Lorg/apache/commons/math3/genetics/Chromosome;)Z
      31: ifeq          36
      34: aload_3
      35: areturn
      36: goto          7
      39: aconst_null
      40: areturn

  public void searchForFitnessUpdate(org.apache.commons.math3.genetics.Population);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method findSameChromosome:(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/Chromosome;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_0
      11: aload_2
      12: invokevirtual #6                  // Method getFitness:()D
      15: putfield      #4                  // Field fitness:D
      18: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class org/apache/commons/math3/genetics/Chromosome
       5: invokevirtual #15                 // Method compareTo:(Lorg/apache/commons/math3/genetics/Chromosome;)I
       8: ireturn
}
