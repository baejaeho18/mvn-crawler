Compiled from "EuclideanIntegerPoint.java"
public class org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint implements org.apache.commons.math3.stat.clustering.Clusterable<org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint>, java.io.Serializable {
  private static final long serialVersionUID;

  private final int[] point;

  public org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint(int[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field point:[I
       9: return

  public int[] getPoint();
    Code:
       0: aload_0
       1: getfield      #2                  // Field point:[I
       4: areturn

  public double distanceFrom(org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint);
    Code:
       0: aload_0
       1: getfield      #2                  // Field point:[I
       4: aload_1
       5: invokevirtual #3                  // Method getPoint:()[I
       8: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.distance:([I[I)D
      11: dreturn

  public org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint centroidOf(java.util.Collection<org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint>);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getPoint:()[I
       4: arraylength
       5: newarray       int
       7: astore_2
       8: aload_1
       9: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          69
      24: aload_3
      25: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #8                  // class org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint
      33: astore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: aload_2
      41: arraylength
      42: if_icmpge     66
      45: aload_2
      46: iload         5
      48: dup2
      49: iaload
      50: aload         4
      52: invokevirtual #3                  // Method getPoint:()[I
      55: iload         5
      57: iaload
      58: iadd
      59: iastore
      60: iinc          5, 1
      63: goto          38
      66: goto          15
      69: iconst_0
      70: istore_3
      71: iload_3
      72: aload_2
      73: arraylength
      74: if_icmpge     95
      77: aload_2
      78: iload_3
      79: dup2
      80: iaload
      81: aload_1
      82: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.size:()I
      87: idiv
      88: iastore
      89: iinc          3, 1
      92: goto          71
      95: new           #8                  // class org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint
      98: dup
      99: aload_2
     100: invokespecial #10                 // Method "<init>":([I)V
     103: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field point:[I
      13: aload_1
      14: checkcast     #8                  // class org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint
      17: getfield      #2                  // Field point:[I
      20: invokestatic  #11                 // Method java/util/Arrays.equals:([I[I)Z
      23: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field point:[I
       4: invokestatic  #12                 // Method java/util/Arrays.hashCode:([I)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field point:[I
       4: invokestatic  #13                 // Method java/util/Arrays.toString:([I)Ljava/lang/String;
       7: areturn

  public java.lang.Object centroidOf(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method centroidOf:(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;
       5: areturn

  public double distanceFrom(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint
       5: invokevirtual #15                 // Method distanceFrom:(Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;)D
       8: dreturn
}
