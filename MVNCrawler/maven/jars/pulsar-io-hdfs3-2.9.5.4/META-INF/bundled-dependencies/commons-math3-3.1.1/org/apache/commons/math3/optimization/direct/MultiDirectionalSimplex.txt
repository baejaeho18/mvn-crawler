Compiled from "MultiDirectionalSimplex.java"
public class org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex extends org.apache.commons.math3.optimization.direct.AbstractSimplex {
  private static final double DEFAULT_KHI;

  private static final double DEFAULT_GAMMA;

  private final double khi;

  private final double gamma;

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(int);
    Code:
       0: aload_0
       1: iload_1
       2: dconst_1
       3: invokespecial #1                  // Method "<init>":(ID)V
       6: return

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(int, double);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: ldc2_w        #2                  // double 2.0d
       6: ldc2_w        #4                  // double 0.5d
       9: invokespecial #6                  // Method "<init>":(IDDD)V
      12: return

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(int, double, double);
    Code:
       0: aload_0
       1: iload_1
       2: dconst_1
       3: dload_2
       4: dload         4
       6: invokespecial #6                  // Method "<init>":(IDDD)V
       9: return

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(int, double, double, double);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: invokespecial #7                  // Method org/apache/commons/math3/optimization/direct/AbstractSimplex."<init>":(ID)V
       6: aload_0
       7: dload         4
       9: putfield      #8                  // Field khi:D
      12: aload_0
      13: dload         6
      15: putfield      #9                  // Field gamma:D
      18: return

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #2                  // double 2.0d
       5: ldc2_w        #4                  // double 0.5d
       8: invokespecial #10                 // Method "<init>":([DDD)V
      11: return

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(double[], double, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method org/apache/commons/math3/optimization/direct/AbstractSimplex."<init>":([D)V
       5: aload_0
       6: dload_2
       7: putfield      #8                  // Field khi:D
      10: aload_0
      11: dload         4
      13: putfield      #9                  // Field gamma:D
      16: return

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #2                  // double 2.0d
       5: ldc2_w        #4                  // double 0.5d
       8: invokespecial #12                 // Method "<init>":([[DDD)V
      11: return

  public org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex(double[][], double, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/apache/commons/math3/optimization/direct/AbstractSimplex."<init>":([[D)V
       5: aload_0
       6: dload_2
       7: putfield      #8                  // Field khi:D
      10: aload_0
      11: dload         4
      13: putfield      #9                  // Field gamma:D
      16: return

  public void iterate(org.apache.commons.math3.analysis.MultivariateFunction, java.util.Comparator<org.apache.commons.math3.optimization.PointValuePair>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getPoints:()[Lorg/apache/commons/math3/optimization/PointValuePair;
       4: astore_3
       5: aload_3
       6: iconst_0
       7: aaload
       8: astore        4
      10: aload_0
      11: aload_1
      12: aload_3
      13: dconst_1
      14: aload_2
      15: invokespecial #15                 // Method evaluateNewSimplex:(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optimization/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optimization/PointValuePair;
      18: astore        5
      20: aload_2
      21: aload         5
      23: aload         4
      25: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      30: ifge          72
      33: aload_0
      34: invokevirtual #14                 // Method getPoints:()[Lorg/apache/commons/math3/optimization/PointValuePair;
      37: astore        6
      39: aload_0
      40: aload_1
      41: aload_3
      42: aload_0
      43: getfield      #8                  // Field khi:D
      46: aload_2
      47: invokespecial #15                 // Method evaluateNewSimplex:(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optimization/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optimization/PointValuePair;
      50: astore        7
      52: aload_2
      53: aload         5
      55: aload         7
      57: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      62: ifgt          71
      65: aload_0
      66: aload         6
      68: invokevirtual #17                 // Method setPoints:([Lorg/apache/commons/math3/optimization/PointValuePair;)V
      71: return
      72: aload_0
      73: aload_1
      74: aload_3
      75: aload_0
      76: getfield      #9                  // Field gamma:D
      79: aload_2
      80: invokespecial #15                 // Method evaluateNewSimplex:(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optimization/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optimization/PointValuePair;
      83: pop
      84: return

  private org.apache.commons.math3.optimization.PointValuePair evaluateNewSimplex(org.apache.commons.math3.analysis.MultivariateFunction, org.apache.commons.math3.optimization.PointValuePair[], double, java.util.Comparator<org.apache.commons.math3.optimization.PointValuePair>);
    Code:
       0: aload_2
       1: iconst_0
       2: aaload
       3: invokevirtual #18                 // Method org/apache/commons/math3/optimization/PointValuePair.getPointRef:()[D
       6: astore        6
       8: aload_0
       9: iconst_0
      10: aload_2
      11: iconst_0
      12: aaload
      13: invokevirtual #19                 // Method setPoint:(ILorg/apache/commons/math3/optimization/PointValuePair;)V
      16: aload_0
      17: invokevirtual #20                 // Method getDimension:()I
      20: istore        7
      22: iconst_1
      23: istore        8
      25: iload         8
      27: aload_0
      28: invokevirtual #21                 // Method getSize:()I
      31: if_icmpge     114
      34: aload_2
      35: iload         8
      37: aaload
      38: invokevirtual #18                 // Method org/apache/commons/math3/optimization/PointValuePair.getPointRef:()[D
      41: astore        9
      43: iload         7
      45: newarray       double
      47: astore        10
      49: iconst_0
      50: istore        11
      52: iload         11
      54: iload         7
      56: if_icmpge     89
      59: aload         10
      61: iload         11
      63: aload         6
      65: iload         11
      67: daload
      68: dload_3
      69: aload         6
      71: iload         11
      73: daload
      74: aload         9
      76: iload         11
      78: daload
      79: dsub
      80: dmul
      81: dadd
      82: dastore
      83: iinc          11, 1
      86: goto          52
      89: aload_0
      90: iload         8
      92: new           #22                 // class org/apache/commons/math3/optimization/PointValuePair
      95: dup
      96: aload         10
      98: ldc2_w        #23                 // double NaNd
     101: iconst_0
     102: invokespecial #25                 // Method org/apache/commons/math3/optimization/PointValuePair."<init>":([DDZ)V
     105: invokevirtual #19                 // Method setPoint:(ILorg/apache/commons/math3/optimization/PointValuePair;)V
     108: iinc          8, 1
     111: goto          25
     114: aload_0
     115: aload_1
     116: aload         5
     118: invokevirtual #26                 // Method evaluate:(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
     121: aload_0
     122: iconst_0
     123: invokevirtual #27                 // Method getPoint:(I)Lorg/apache/commons/math3/optimization/PointValuePair;
     126: areturn
}
