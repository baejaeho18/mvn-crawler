Compiled from "RealMatrix.java"
public interface org.apache.commons.math3.linear.RealMatrix extends org.apache.commons.math3.linear.AnyMatrix {
  public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract org.apache.commons.math3.linear.RealMatrix copy();

  public abstract org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealMatrix scalarAdd(double);

  public abstract org.apache.commons.math3.linear.RealMatrix scalarMultiply(double);

  public abstract org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealMatrix preMultiply(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealMatrix power(int) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.linear.NonSquareMatrixException;

  public abstract double[][] getData();

  public abstract double getNorm();

  public abstract double getFrobeniusNorm();

  public abstract org.apache.commons.math3.linear.RealMatrix getSubMatrix(int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

  public abstract org.apache.commons.math3.linear.RealMatrix getSubMatrix(int[], int[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void copySubMatrix(int, int, int, int, double[][]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract void copySubMatrix(int[], int[], double[][]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract void setSubMatrix(double[][], int, int) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException;

  public abstract org.apache.commons.math3.linear.RealMatrix getRowMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setRowMatrix(int, org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealMatrix getColumnMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setColumnMatrix(int, org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealVector getRowVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setRowVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealVector getColumnVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setColumnVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract double[] getRow(int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setRow(int, double[]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract double[] getColumn(int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setColumn(int, double[]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;

  public abstract double getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void setEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void addToEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract void multiplyEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;

  public abstract org.apache.commons.math3.linear.RealMatrix transpose();

  public abstract double getTrace() throws org.apache.commons.math3.linear.NonSquareMatrixException;

  public abstract double[] operate(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract double[] preMultiply(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract org.apache.commons.math3.linear.RealVector preMultiply(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;

  public abstract double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);

  public abstract double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);

  public abstract double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

  public abstract double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

  public abstract double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);

  public abstract double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);

  public abstract double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

  public abstract double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

  public abstract double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);

  public abstract double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);

  public abstract double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

  public abstract double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
}
