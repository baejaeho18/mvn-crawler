Compiled from "BlockRealMatrix.java"
public class org.apache.commons.math3.linear.BlockRealMatrix extends org.apache.commons.math3.linear.AbstractRealMatrix implements java.io.Serializable {
  public static final int BLOCK_SIZE;

  private static final long serialVersionUID;

  private final double[][] blocks;

  private final int rows;

  private final int columns;

  private final int blockRows;

  private final int blockColumns;

  public org.apache.commons.math3.linear.BlockRealMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractRealMatrix."<init>":(II)V
       6: aload_0
       7: iload_1
       8: putfield      #2                  // Field rows:I
      11: aload_0
      12: iload_2
      13: putfield      #3                  // Field columns:I
      16: aload_0
      17: iload_1
      18: bipush        52
      20: iadd
      21: iconst_1
      22: isub
      23: bipush        52
      25: idiv
      26: putfield      #4                  // Field blockRows:I
      29: aload_0
      30: iload_2
      31: bipush        52
      33: iadd
      34: iconst_1
      35: isub
      36: bipush        52
      38: idiv
      39: putfield      #5                  // Field blockColumns:I
      42: aload_0
      43: iload_1
      44: iload_2
      45: invokestatic  #6                  // Method createBlocksLayout:(II)[[D
      48: putfield      #7                  // Field blocks:[[D
      51: return

  public org.apache.commons.math3.linear.BlockRealMatrix(double[][]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: aload_1
       4: iconst_0
       5: aaload
       6: arraylength
       7: aload_1
       8: invokestatic  #8                  // Method toBlocksLayout:([[D)[[D
      11: iconst_0
      12: invokespecial #9                  // Method "<init>":(II[[DZ)V
      15: return

  public org.apache.commons.math3.linear.BlockRealMatrix(int, int, double[][], boolean) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractRealMatrix."<init>":(II)V
       6: aload_0
       7: iload_1
       8: putfield      #2                  // Field rows:I
      11: aload_0
      12: iload_2
      13: putfield      #3                  // Field columns:I
      16: aload_0
      17: iload_1
      18: bipush        52
      20: iadd
      21: iconst_1
      22: isub
      23: bipush        52
      25: idiv
      26: putfield      #4                  // Field blockRows:I
      29: aload_0
      30: iload_2
      31: bipush        52
      33: iadd
      34: iconst_1
      35: isub
      36: bipush        52
      38: idiv
      39: putfield      #5                  // Field blockColumns:I
      42: iload         4
      44: ifeq          66
      47: aload_0
      48: aload_0
      49: getfield      #4                  // Field blockRows:I
      52: aload_0
      53: getfield      #5                  // Field blockColumns:I
      56: imul
      57: anewarray     #10                 // class "[D"
      60: putfield      #7                  // Field blocks:[[D
      63: goto          71
      66: aload_0
      67: aload_3
      68: putfield      #7                  // Field blocks:[[D
      71: iconst_0
      72: istore        5
      74: iconst_0
      75: istore        6
      77: iload         6
      79: aload_0
      80: getfield      #4                  // Field blockRows:I
      83: if_icmpge     182
      86: aload_0
      87: iload         6
      89: invokespecial #11                 // Method blockHeight:(I)I
      92: istore        7
      94: iconst_0
      95: istore        8
      97: iload         8
      99: aload_0
     100: getfield      #5                  // Field blockColumns:I
     103: if_icmpge     176
     106: aload_3
     107: iload         5
     109: aaload
     110: arraylength
     111: iload         7
     113: aload_0
     114: iload         8
     116: invokespecial #12                 // Method blockWidth:(I)I
     119: imul
     120: if_icmpeq     145
     123: new           #13                 // class org/apache/commons/math3/exception/DimensionMismatchException
     126: dup
     127: aload_3
     128: iload         5
     130: aaload
     131: arraylength
     132: iload         7
     134: aload_0
     135: iload         8
     137: invokespecial #12                 // Method blockWidth:(I)I
     140: imul
     141: invokespecial #14                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
     144: athrow
     145: iload         4
     147: ifeq          167
     150: aload_0
     151: getfield      #7                  // Field blocks:[[D
     154: iload         5
     156: aload_3
     157: iload         5
     159: aaload
     160: invokevirtual #15                 // Method "[D".clone:()Ljava/lang/Object;
     163: checkcast     #10                 // class "[D"
     166: aastore
     167: iinc          8, 1
     170: iinc          5, 1
     173: goto          97
     176: iinc          6, 1
     179: goto          77
     182: return

  public static double[][] toBlocksLayout(double[][]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: aload_0
       4: iconst_0
       5: aaload
       6: arraylength
       7: istore_2
       8: iload_1
       9: bipush        52
      11: iadd
      12: iconst_1
      13: isub
      14: bipush        52
      16: idiv
      17: istore_3
      18: iload_2
      19: bipush        52
      21: iadd
      22: iconst_1
      23: isub
      24: bipush        52
      26: idiv
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: aload_0
      35: arraylength
      36: if_icmpge     69
      39: aload_0
      40: iload         5
      42: aaload
      43: arraylength
      44: istore        6
      46: iload         6
      48: iload_2
      49: if_icmpeq     63
      52: new           #13                 // class org/apache/commons/math3/exception/DimensionMismatchException
      55: dup
      56: iload_2
      57: iload         6
      59: invokespecial #14                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      62: athrow
      63: iinc          5, 1
      66: goto          32
      69: iload_3
      70: iload         4
      72: imul
      73: anewarray     #10                 // class "[D"
      76: astore        5
      78: iconst_0
      79: istore        6
      81: iconst_0
      82: istore        7
      84: iload         7
      86: iload_3
      87: if_icmpge     223
      90: iload         7
      92: bipush        52
      94: imul
      95: istore        8
      97: iload         8
      99: bipush        52
     101: iadd
     102: iload_1
     103: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     106: istore        9
     108: iload         9
     110: iload         8
     112: isub
     113: istore        10
     115: iconst_0
     116: istore        11
     118: iload         11
     120: iload         4
     122: if_icmpge     217
     125: iload         11
     127: bipush        52
     129: imul
     130: istore        12
     132: iload         12
     134: bipush        52
     136: iadd
     137: iload_2
     138: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     141: istore        13
     143: iload         13
     145: iload         12
     147: isub
     148: istore        14
     150: iload         10
     152: iload         14
     154: imul
     155: newarray       double
     157: astore        15
     159: aload         5
     161: iload         6
     163: aload         15
     165: aastore
     166: iconst_0
     167: istore        16
     169: iload         8
     171: istore        17
     173: iload         17
     175: iload         9
     177: if_icmpge     208
     180: aload_0
     181: iload         17
     183: aaload
     184: iload         12
     186: aload         15
     188: iload         16
     190: iload         14
     192: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     195: iload         16
     197: iload         14
     199: iadd
     200: istore        16
     202: iinc          17, 1
     205: goto          173
     208: iinc          6, 1
     211: iinc          11, 1
     214: goto          118
     217: iinc          7, 1
     220: goto          84
     223: aload         5
     225: areturn

  public static double[][] createBlocksLayout(int, int);
    Code:
       0: iload_0
       1: bipush        52
       3: iadd
       4: iconst_1
       5: isub
       6: bipush        52
       8: idiv
       9: istore_2
      10: iload_1
      11: bipush        52
      13: iadd
      14: iconst_1
      15: isub
      16: bipush        52
      18: idiv
      19: istore_3
      20: iload_2
      21: iload_3
      22: imul
      23: anewarray     #10                 // class "[D"
      26: astore        4
      28: iconst_0
      29: istore        5
      31: iconst_0
      32: istore        6
      34: iload         6
      36: iload_2
      37: if_icmpge     126
      40: iload         6
      42: bipush        52
      44: imul
      45: istore        7
      47: iload         7
      49: bipush        52
      51: iadd
      52: iload_0
      53: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      56: istore        8
      58: iload         8
      60: iload         7
      62: isub
      63: istore        9
      65: iconst_0
      66: istore        10
      68: iload         10
      70: iload_3
      71: if_icmpge     120
      74: iload         10
      76: bipush        52
      78: imul
      79: istore        11
      81: iload         11
      83: bipush        52
      85: iadd
      86: iload_1
      87: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      90: istore        12
      92: iload         12
      94: iload         11
      96: isub
      97: istore        13
      99: aload         4
     101: iload         5
     103: iload         9
     105: iload         13
     107: imul
     108: newarray       double
     110: aastore
     111: iinc          5, 1
     114: iinc          10, 1
     117: goto          68
     120: iinc          6, 1
     123: goto          34
     126: aload         4
     128: areturn

  public org.apache.commons.math3.linear.BlockRealMatrix createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       3: dup
       4: iload_1
       5: iload_2
       6: invokespecial #19                 // Method "<init>":(II)V
       9: areturn

  public org.apache.commons.math3.linear.BlockRealMatrix copy();
    Code:
       0: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       3: dup
       4: aload_0
       5: getfield      #2                  // Field rows:I
       8: aload_0
       9: getfield      #3                  // Field columns:I
      12: invokespecial #19                 // Method "<init>":(II)V
      15: astore_1
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_0
      20: getfield      #7                  // Field blocks:[[D
      23: arraylength
      24: if_icmpge     57
      27: aload_0
      28: getfield      #7                  // Field blocks:[[D
      31: iload_2
      32: aaload
      33: iconst_0
      34: aload_1
      35: getfield      #7                  // Field blocks:[[D
      38: iload_2
      39: aaload
      40: iconst_0
      41: aload_0
      42: getfield      #7                  // Field blocks:[[D
      45: iload_2
      46: aaload
      47: arraylength
      48: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      51: iinc          2, 1
      54: goto          18
      57: aload_1
      58: areturn

  public org.apache.commons.math3.linear.BlockRealMatrix add(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       5: invokevirtual #20                 // Method add:(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokestatic  #22                 // Method org/apache/commons/math3/linear/MatrixUtils.checkAdditionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
      15: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
      18: dup
      19: aload_0
      20: getfield      #2                  // Field rows:I
      23: aload_0
      24: getfield      #3                  // Field columns:I
      27: invokespecial #19                 // Method "<init>":(II)V
      30: astore_3
      31: iconst_0
      32: istore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: aload_3
      40: getfield      #4                  // Field blockRows:I
      43: if_icmpge     194
      46: iconst_0
      47: istore        6
      49: iload         6
      51: aload_3
      52: getfield      #5                  // Field blockColumns:I
      55: if_icmpge     188
      58: aload_3
      59: getfield      #7                  // Field blocks:[[D
      62: iload         4
      64: aaload
      65: astore        7
      67: aload_0
      68: getfield      #7                  // Field blocks:[[D
      71: iload         4
      73: aaload
      74: astore        8
      76: iload         5
      78: bipush        52
      80: imul
      81: istore        9
      83: iload         9
      85: bipush        52
      87: iadd
      88: aload_0
      89: getfield      #2                  // Field rows:I
      92: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      95: istore        10
      97: iload         6
      99: bipush        52
     101: imul
     102: istore        11
     104: iload         11
     106: bipush        52
     108: iadd
     109: aload_0
     110: getfield      #3                  // Field columns:I
     113: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     116: istore        12
     118: iconst_0
     119: istore        13
     121: iload         9
     123: istore        14
     125: iload         14
     127: iload         10
     129: if_icmpge     179
     132: iload         11
     134: istore        15
     136: iload         15
     138: iload         12
     140: if_icmpge     173
     143: aload         7
     145: iload         13
     147: aload         8
     149: iload         13
     151: daload
     152: aload_1
     153: iload         14
     155: iload         15
     157: invokeinterface #23,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
     162: dadd
     163: dastore
     164: iinc          13, 1
     167: iinc          15, 1
     170: goto          136
     173: iinc          14, 1
     176: goto          125
     179: iinc          4, 1
     182: iinc          6, 1
     185: goto          49
     188: iinc          5, 1
     191: goto          37
     194: aload_3
     195: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.BlockRealMatrix add(org.apache.commons.math3.linear.BlockRealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method org/apache/commons/math3/linear/MatrixUtils.checkAdditionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       8: dup
       9: aload_0
      10: getfield      #2                  // Field rows:I
      13: aload_0
      14: getfield      #3                  // Field columns:I
      17: invokespecial #19                 // Method "<init>":(II)V
      20: astore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: aload_2
      25: getfield      #7                  // Field blocks:[[D
      28: arraylength
      29: if_icmpge     95
      32: aload_2
      33: getfield      #7                  // Field blocks:[[D
      36: iload_3
      37: aaload
      38: astore        4
      40: aload_0
      41: getfield      #7                  // Field blocks:[[D
      44: iload_3
      45: aaload
      46: astore        5
      48: aload_1
      49: getfield      #7                  // Field blocks:[[D
      52: iload_3
      53: aaload
      54: astore        6
      56: iconst_0
      57: istore        7
      59: iload         7
      61: aload         4
      63: arraylength
      64: if_icmpge     89
      67: aload         4
      69: iload         7
      71: aload         5
      73: iload         7
      75: daload
      76: aload         6
      78: iload         7
      80: daload
      81: dadd
      82: dastore
      83: iinc          7, 1
      86: goto          59
      89: iinc          3, 1
      92: goto          23
      95: aload_2
      96: areturn

  public org.apache.commons.math3.linear.BlockRealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       5: invokevirtual #24                 // Method subtract:(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokestatic  #25                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
      15: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
      18: dup
      19: aload_0
      20: getfield      #2                  // Field rows:I
      23: aload_0
      24: getfield      #3                  // Field columns:I
      27: invokespecial #19                 // Method "<init>":(II)V
      30: astore_3
      31: iconst_0
      32: istore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: aload_3
      40: getfield      #4                  // Field blockRows:I
      43: if_icmpge     194
      46: iconst_0
      47: istore        6
      49: iload         6
      51: aload_3
      52: getfield      #5                  // Field blockColumns:I
      55: if_icmpge     188
      58: aload_3
      59: getfield      #7                  // Field blocks:[[D
      62: iload         4
      64: aaload
      65: astore        7
      67: aload_0
      68: getfield      #7                  // Field blocks:[[D
      71: iload         4
      73: aaload
      74: astore        8
      76: iload         5
      78: bipush        52
      80: imul
      81: istore        9
      83: iload         9
      85: bipush        52
      87: iadd
      88: aload_0
      89: getfield      #2                  // Field rows:I
      92: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      95: istore        10
      97: iload         6
      99: bipush        52
     101: imul
     102: istore        11
     104: iload         11
     106: bipush        52
     108: iadd
     109: aload_0
     110: getfield      #3                  // Field columns:I
     113: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     116: istore        12
     118: iconst_0
     119: istore        13
     121: iload         9
     123: istore        14
     125: iload         14
     127: iload         10
     129: if_icmpge     179
     132: iload         11
     134: istore        15
     136: iload         15
     138: iload         12
     140: if_icmpge     173
     143: aload         7
     145: iload         13
     147: aload         8
     149: iload         13
     151: daload
     152: aload_1
     153: iload         14
     155: iload         15
     157: invokeinterface #23,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
     162: dsub
     163: dastore
     164: iinc          13, 1
     167: iinc          15, 1
     170: goto          136
     173: iinc          14, 1
     176: goto          125
     179: iinc          4, 1
     182: iinc          6, 1
     185: goto          49
     188: iinc          5, 1
     191: goto          37
     194: aload_3
     195: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.BlockRealMatrix subtract(org.apache.commons.math3.linear.BlockRealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       8: dup
       9: aload_0
      10: getfield      #2                  // Field rows:I
      13: aload_0
      14: getfield      #3                  // Field columns:I
      17: invokespecial #19                 // Method "<init>":(II)V
      20: astore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: aload_2
      25: getfield      #7                  // Field blocks:[[D
      28: arraylength
      29: if_icmpge     95
      32: aload_2
      33: getfield      #7                  // Field blocks:[[D
      36: iload_3
      37: aaload
      38: astore        4
      40: aload_0
      41: getfield      #7                  // Field blocks:[[D
      44: iload_3
      45: aaload
      46: astore        5
      48: aload_1
      49: getfield      #7                  // Field blocks:[[D
      52: iload_3
      53: aaload
      54: astore        6
      56: iconst_0
      57: istore        7
      59: iload         7
      61: aload         4
      63: arraylength
      64: if_icmpge     89
      67: aload         4
      69: iload         7
      71: aload         5
      73: iload         7
      75: daload
      76: aload         6
      78: iload         7
      80: daload
      81: dsub
      82: dastore
      83: iinc          7, 1
      86: goto          59
      89: iinc          3, 1
      92: goto          23
      95: aload_2
      96: areturn

  public org.apache.commons.math3.linear.BlockRealMatrix scalarAdd(double);
    Code:
       0: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       3: dup
       4: aload_0
       5: getfield      #2                  // Field rows:I
       8: aload_0
       9: getfield      #3                  // Field columns:I
      12: invokespecial #19                 // Method "<init>":(II)V
      15: astore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: aload_3
      22: getfield      #7                  // Field blocks:[[D
      25: arraylength
      26: if_icmpge     82
      29: aload_3
      30: getfield      #7                  // Field blocks:[[D
      33: iload         4
      35: aaload
      36: astore        5
      38: aload_0
      39: getfield      #7                  // Field blocks:[[D
      42: iload         4
      44: aaload
      45: astore        6
      47: iconst_0
      48: istore        7
      50: iload         7
      52: aload         5
      54: arraylength
      55: if_icmpge     76
      58: aload         5
      60: iload         7
      62: aload         6
      64: iload         7
      66: daload
      67: dload_1
      68: dadd
      69: dastore
      70: iinc          7, 1
      73: goto          50
      76: iinc          4, 1
      79: goto          19
      82: aload_3
      83: areturn

  public org.apache.commons.math3.linear.RealMatrix scalarMultiply(double);
    Code:
       0: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       3: dup
       4: aload_0
       5: getfield      #2                  // Field rows:I
       8: aload_0
       9: getfield      #3                  // Field columns:I
      12: invokespecial #19                 // Method "<init>":(II)V
      15: astore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: aload_3
      22: getfield      #7                  // Field blocks:[[D
      25: arraylength
      26: if_icmpge     82
      29: aload_3
      30: getfield      #7                  // Field blocks:[[D
      33: iload         4
      35: aaload
      36: astore        5
      38: aload_0
      39: getfield      #7                  // Field blocks:[[D
      42: iload         4
      44: aaload
      45: astore        6
      47: iconst_0
      48: istore        7
      50: iload         7
      52: aload         5
      54: arraylength
      55: if_icmpge     76
      58: aload         5
      60: iload         7
      62: aload         6
      64: iload         7
      66: daload
      67: dload_1
      68: dmul
      69: dastore
      70: iinc          7, 1
      73: goto          50
      76: iinc          4, 1
      79: goto          19
      82: aload_3
      83: areturn

  public org.apache.commons.math3.linear.BlockRealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       5: invokevirtual #26                 // Method multiply:(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokestatic  #27                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
      15: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
      18: dup
      19: aload_0
      20: getfield      #2                  // Field rows:I
      23: aload_1
      24: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      29: invokespecial #19                 // Method "<init>":(II)V
      32: astore_3
      33: iconst_0
      34: istore        4
      36: iconst_0
      37: istore        5
      39: iload         5
      41: aload_3
      42: getfield      #4                  // Field blockRows:I
      45: if_icmpge     293
      48: iload         5
      50: bipush        52
      52: imul
      53: istore        6
      55: iload         6
      57: bipush        52
      59: iadd
      60: aload_0
      61: getfield      #2                  // Field rows:I
      64: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      67: istore        7
      69: iconst_0
      70: istore        8
      72: iload         8
      74: aload_3
      75: getfield      #5                  // Field blockColumns:I
      78: if_icmpge     287
      81: iload         8
      83: bipush        52
      85: imul
      86: istore        9
      88: iload         9
      90: bipush        52
      92: iadd
      93: aload_1
      94: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      99: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     102: istore        10
     104: aload_3
     105: getfield      #7                  // Field blocks:[[D
     108: iload         4
     110: aaload
     111: astore        11
     113: iconst_0
     114: istore        12
     116: iload         12
     118: aload_0
     119: getfield      #5                  // Field blockColumns:I
     122: if_icmpge     278
     125: aload_0
     126: iload         12
     128: invokespecial #12                 // Method blockWidth:(I)I
     131: istore        13
     133: aload_0
     134: getfield      #7                  // Field blocks:[[D
     137: iload         5
     139: aload_0
     140: getfield      #5                  // Field blockColumns:I
     143: imul
     144: iload         12
     146: iadd
     147: aaload
     148: astore        14
     150: iload         12
     152: bipush        52
     154: imul
     155: istore        15
     157: iconst_0
     158: istore        16
     160: iload         6
     162: istore        17
     164: iload         17
     166: iload         7
     168: if_icmpge     272
     171: iload         17
     173: iload         6
     175: isub
     176: iload         13
     178: imul
     179: istore        18
     181: iload         18
     183: iload         13
     185: iadd
     186: istore        19
     188: iload         9
     190: istore        20
     192: iload         20
     194: iload         10
     196: if_icmpge     266
     199: dconst_0
     200: dstore        21
     202: iload         15
     204: istore        23
     206: iload         18
     208: istore        24
     210: iload         24
     212: iload         19
     214: if_icmpge     247
     217: dload         21
     219: aload         14
     221: iload         24
     223: daload
     224: aload_1
     225: iload         23
     227: iload         20
     229: invokeinterface #23,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
     234: dmul
     235: dadd
     236: dstore        21
     238: iinc          23, 1
     241: iinc          24, 1
     244: goto          210
     247: aload         11
     249: iload         16
     251: dup2
     252: daload
     253: dload         21
     255: dadd
     256: dastore
     257: iinc          16, 1
     260: iinc          20, 1
     263: goto          192
     266: iinc          17, 1
     269: goto          164
     272: iinc          12, 1
     275: goto          116
     278: iinc          4, 1
     281: iinc          8, 1
     284: goto          72
     287: iinc          5, 1
     290: goto          39
     293: aload_3
     294: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.BlockRealMatrix multiply(org.apache.commons.math3.linear.BlockRealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       8: dup
       9: aload_0
      10: getfield      #2                  // Field rows:I
      13: aload_1
      14: getfield      #3                  // Field columns:I
      17: invokespecial #19                 // Method "<init>":(II)V
      20: astore_2
      21: iconst_0
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: aload_2
      29: getfield      #4                  // Field blockRows:I
      32: if_icmpge     382
      35: iload         4
      37: bipush        52
      39: imul
      40: istore        5
      42: iload         5
      44: bipush        52
      46: iadd
      47: aload_0
      48: getfield      #2                  // Field rows:I
      51: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      54: istore        6
      56: iconst_0
      57: istore        7
      59: iload         7
      61: aload_2
      62: getfield      #5                  // Field blockColumns:I
      65: if_icmpge     376
      68: aload_2
      69: iload         7
      71: invokespecial #12                 // Method blockWidth:(I)I
      74: istore        8
      76: iload         8
      78: iload         8
      80: iadd
      81: istore        9
      83: iload         9
      85: iload         8
      87: iadd
      88: istore        10
      90: iload         10
      92: iload         8
      94: iadd
      95: istore        11
      97: aload_2
      98: getfield      #7                  // Field blocks:[[D
     101: iload_3
     102: aaload
     103: astore        12
     105: iconst_0
     106: istore        13
     108: iload         13
     110: aload_0
     111: getfield      #5                  // Field blockColumns:I
     114: if_icmpge     367
     117: aload_0
     118: iload         13
     120: invokespecial #12                 // Method blockWidth:(I)I
     123: istore        14
     125: aload_0
     126: getfield      #7                  // Field blocks:[[D
     129: iload         4
     131: aload_0
     132: getfield      #5                  // Field blockColumns:I
     135: imul
     136: iload         13
     138: iadd
     139: aaload
     140: astore        15
     142: aload_1
     143: getfield      #7                  // Field blocks:[[D
     146: iload         13
     148: aload_1
     149: getfield      #5                  // Field blockColumns:I
     152: imul
     153: iload         7
     155: iadd
     156: aaload
     157: astore        16
     159: iconst_0
     160: istore        17
     162: iload         5
     164: istore        18
     166: iload         18
     168: iload         6
     170: if_icmpge     361
     173: iload         18
     175: iload         5
     177: isub
     178: iload         14
     180: imul
     181: istore        19
     183: iload         19
     185: iload         14
     187: iadd
     188: istore        20
     190: iconst_0
     191: istore        21
     193: iload         21
     195: iload         8
     197: if_icmpge     355
     200: dconst_0
     201: dstore        22
     203: iload         19
     205: istore        24
     207: iload         21
     209: istore        25
     211: iload         24
     213: iload         20
     215: iconst_3
     216: isub
     217: if_icmpge     300
     220: dload         22
     222: aload         15
     224: iload         24
     226: daload
     227: aload         16
     229: iload         25
     231: daload
     232: dmul
     233: aload         15
     235: iload         24
     237: iconst_1
     238: iadd
     239: daload
     240: aload         16
     242: iload         25
     244: iload         8
     246: iadd
     247: daload
     248: dmul
     249: dadd
     250: aload         15
     252: iload         24
     254: iconst_2
     255: iadd
     256: daload
     257: aload         16
     259: iload         25
     261: iload         9
     263: iadd
     264: daload
     265: dmul
     266: dadd
     267: aload         15
     269: iload         24
     271: iconst_3
     272: iadd
     273: daload
     274: aload         16
     276: iload         25
     278: iload         10
     280: iadd
     281: daload
     282: dmul
     283: dadd
     284: dadd
     285: dstore        22
     287: iinc          24, 4
     290: iload         25
     292: iload         11
     294: iadd
     295: istore        25
     297: goto          211
     300: iload         24
     302: iload         20
     304: if_icmpge     336
     307: dload         22
     309: aload         15
     311: iload         24
     313: iinc          24, 1
     316: daload
     317: aload         16
     319: iload         25
     321: daload
     322: dmul
     323: dadd
     324: dstore        22
     326: iload         25
     328: iload         8
     330: iadd
     331: istore        25
     333: goto          300
     336: aload         12
     338: iload         17
     340: dup2
     341: daload
     342: dload         22
     344: dadd
     345: dastore
     346: iinc          17, 1
     349: iinc          21, 1
     352: goto          193
     355: iinc          18, 1
     358: goto          166
     361: iinc          13, 1
     364: goto          108
     367: iinc          3, 1
     370: iinc          7, 1
     373: goto          59
     376: iinc          4, 1
     379: goto          26
     382: aload_2
     383: areturn

  public double[][] getData();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getRowDimension:()I
       4: aload_0
       5: invokevirtual #30                 // Method getColumnDimension:()I
       8: multianewarray #31,  2            // class "[[D"
      12: astore_1
      13: aload_0
      14: getfield      #3                  // Field columns:I
      17: aload_0
      18: getfield      #5                  // Field blockColumns:I
      21: iconst_1
      22: isub
      23: bipush        52
      25: imul
      26: isub
      27: istore_2
      28: iconst_0
      29: istore_3
      30: iload_3
      31: aload_0
      32: getfield      #4                  // Field blockRows:I
      35: if_icmpge     174
      38: iload_3
      39: bipush        52
      41: imul
      42: istore        4
      44: iload         4
      46: bipush        52
      48: iadd
      49: aload_0
      50: getfield      #2                  // Field rows:I
      53: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      56: istore        5
      58: iconst_0
      59: istore        6
      61: iconst_0
      62: istore        7
      64: iload         4
      66: istore        8
      68: iload         8
      70: iload         5
      72: if_icmpge     168
      75: aload_1
      76: iload         8
      78: aaload
      79: astore        9
      81: iload_3
      82: aload_0
      83: getfield      #5                  // Field blockColumns:I
      86: imul
      87: istore        10
      89: iconst_0
      90: istore        11
      92: iconst_0
      93: istore        12
      95: iload         12
      97: aload_0
      98: getfield      #5                  // Field blockColumns:I
     101: iconst_1
     102: isub
     103: if_icmpge     136
     106: aload_0
     107: getfield      #7                  // Field blocks:[[D
     110: iload         10
     112: iinc          10, 1
     115: aaload
     116: iload         6
     118: aload         9
     120: iload         11
     122: bipush        52
     124: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     127: iinc          11, 52
     130: iinc          12, 1
     133: goto          95
     136: aload_0
     137: getfield      #7                  // Field blocks:[[D
     140: iload         10
     142: aaload
     143: iload         7
     145: aload         9
     147: iload         11
     149: iload_2
     150: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     153: iinc          6, 52
     156: iload         7
     158: iload_2
     159: iadd
     160: istore        7
     162: iinc          8, 1
     165: goto          68
     168: iinc          3, 1
     171: goto          30
     174: aload_1
     175: areturn

  public double getNorm();
    Code:
       0: bipush        52
       2: newarray       double
       4: astore_1
       5: dconst_0
       6: dstore_2
       7: iconst_0
       8: istore        4
      10: iload         4
      12: aload_0
      13: getfield      #5                  // Field blockColumns:I
      16: if_icmpge     172
      19: aload_0
      20: iload         4
      22: invokespecial #12                 // Method blockWidth:(I)I
      25: istore        5
      27: aload_1
      28: iconst_0
      29: iload         5
      31: dconst_0
      32: invokestatic  #32                 // Method java/util/Arrays.fill:([DIID)V
      35: iconst_0
      36: istore        6
      38: iload         6
      40: aload_0
      41: getfield      #4                  // Field blockRows:I
      44: if_icmpge     141
      47: aload_0
      48: iload         6
      50: invokespecial #11                 // Method blockHeight:(I)I
      53: istore        7
      55: aload_0
      56: getfield      #7                  // Field blocks:[[D
      59: iload         6
      61: aload_0
      62: getfield      #5                  // Field blockColumns:I
      65: imul
      66: iload         4
      68: iadd
      69: aaload
      70: astore        8
      72: iconst_0
      73: istore        9
      75: iload         9
      77: iload         5
      79: if_icmpge     135
      82: dconst_0
      83: dstore        10
      85: iconst_0
      86: istore        12
      88: iload         12
      90: iload         7
      92: if_icmpge     120
      95: dload         10
      97: aload         8
      99: iload         12
     101: iload         5
     103: imul
     104: iload         9
     106: iadd
     107: daload
     108: invokestatic  #33                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     111: dadd
     112: dstore        10
     114: iinc          12, 1
     117: goto          88
     120: aload_1
     121: iload         9
     123: dup2
     124: daload
     125: dload         10
     127: dadd
     128: dastore
     129: iinc          9, 1
     132: goto          75
     135: iinc          6, 1
     138: goto          38
     141: iconst_0
     142: istore        6
     144: iload         6
     146: iload         5
     148: if_icmpge     166
     151: dload_2
     152: aload_1
     153: iload         6
     155: daload
     156: invokestatic  #34                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
     159: dstore_2
     160: iinc          6, 1
     163: goto          144
     166: iinc          4, 1
     169: goto          10
     172: dload_2
     173: dreturn

  public double getFrobeniusNorm();
    Code:
       0: dconst_0
       1: dstore_1
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #7                  // Field blocks:[[D
       9: arraylength
      10: if_icmpge     63
      13: aload_0
      14: getfield      #7                  // Field blocks:[[D
      17: iload_3
      18: aaload
      19: astore        4
      21: aload         4
      23: arraylength
      24: istore        5
      26: iconst_0
      27: istore        6
      29: iload         6
      31: iload         5
      33: if_icmpge     57
      36: aload         4
      38: iload         6
      40: daload
      41: dstore        7
      43: dload_1
      44: dload         7
      46: dload         7
      48: dmul
      49: dadd
      50: dstore_1
      51: iinc          6, 1
      54: goto          29
      57: iinc          3, 1
      60: goto          4
      63: dload_1
      64: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      67: dreturn

  public org.apache.commons.math3.linear.BlockRealMatrix getSubMatrix(int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokestatic  #36                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
       9: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
      12: dup
      13: iload_2
      14: iload_1
      15: isub
      16: iconst_1
      17: iadd
      18: iload         4
      20: iload_3
      21: isub
      22: iconst_1
      23: iadd
      24: invokespecial #19                 // Method "<init>":(II)V
      27: astore        5
      29: iload_1
      30: bipush        52
      32: idiv
      33: istore        6
      35: iload_1
      36: bipush        52
      38: irem
      39: istore        7
      41: iload_3
      42: bipush        52
      44: idiv
      45: istore        8
      47: iload_3
      48: bipush        52
      50: irem
      51: istore        9
      53: iload         6
      55: istore        10
      57: iconst_0
      58: istore        11
      60: iload         11
      62: aload         5
      64: getfield      #4                  // Field blockRows:I
      67: if_icmpge     530
      70: aload         5
      72: iload         11
      74: invokespecial #11                 // Method blockHeight:(I)I
      77: istore        12
      79: iload         8
      81: istore        13
      83: iconst_0
      84: istore        14
      86: iload         14
      88: aload         5
      90: getfield      #5                  // Field blockColumns:I
      93: if_icmpge     521
      96: aload         5
      98: iload         14
     100: invokespecial #12                 // Method blockWidth:(I)I
     103: istore        15
     105: iload         11
     107: aload         5
     109: getfield      #5                  // Field blockColumns:I
     112: imul
     113: iload         14
     115: iadd
     116: istore        16
     118: aload         5
     120: getfield      #7                  // Field blocks:[[D
     123: iload         16
     125: aaload
     126: astore        17
     128: iload         10
     130: aload_0
     131: getfield      #5                  // Field blockColumns:I
     134: imul
     135: iload         13
     137: iadd
     138: istore        18
     140: aload_0
     141: iload         13
     143: invokespecial #12                 // Method blockWidth:(I)I
     146: istore        19
     148: iload         12
     150: iload         7
     152: iadd
     153: bipush        52
     155: isub
     156: istore        20
     158: iload         15
     160: iload         9
     162: iadd
     163: bipush        52
     165: isub
     166: istore        21
     168: iload         20
     170: ifle          396
     173: iload         21
     175: ifle          325
     178: aload_0
     179: iload         13
     181: iconst_1
     182: iadd
     183: invokespecial #12                 // Method blockWidth:(I)I
     186: istore        22
     188: aload_0
     189: aload_0
     190: getfield      #7                  // Field blocks:[[D
     193: iload         18
     195: aaload
     196: iload         19
     198: iload         7
     200: bipush        52
     202: iload         9
     204: bipush        52
     206: aload         17
     208: iload         15
     210: iconst_0
     211: iconst_0
     212: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     215: aload_0
     216: aload_0
     217: getfield      #7                  // Field blocks:[[D
     220: iload         18
     222: iconst_1
     223: iadd
     224: aaload
     225: iload         22
     227: iload         7
     229: bipush        52
     231: iconst_0
     232: iload         21
     234: aload         17
     236: iload         15
     238: iconst_0
     239: iload         15
     241: iload         21
     243: isub
     244: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     247: aload_0
     248: aload_0
     249: getfield      #7                  // Field blocks:[[D
     252: iload         18
     254: aload_0
     255: getfield      #5                  // Field blockColumns:I
     258: iadd
     259: aaload
     260: iload         19
     262: iconst_0
     263: iload         20
     265: iload         9
     267: bipush        52
     269: aload         17
     271: iload         15
     273: iload         12
     275: iload         20
     277: isub
     278: iconst_0
     279: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     282: aload_0
     283: aload_0
     284: getfield      #7                  // Field blocks:[[D
     287: iload         18
     289: aload_0
     290: getfield      #5                  // Field blockColumns:I
     293: iadd
     294: iconst_1
     295: iadd
     296: aaload
     297: iload         22
     299: iconst_0
     300: iload         20
     302: iconst_0
     303: iload         21
     305: aload         17
     307: iload         15
     309: iload         12
     311: iload         20
     313: isub
     314: iload         15
     316: iload         21
     318: isub
     319: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     322: goto          512
     325: aload_0
     326: aload_0
     327: getfield      #7                  // Field blocks:[[D
     330: iload         18
     332: aaload
     333: iload         19
     335: iload         7
     337: bipush        52
     339: iload         9
     341: iload         15
     343: iload         9
     345: iadd
     346: aload         17
     348: iload         15
     350: iconst_0
     351: iconst_0
     352: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     355: aload_0
     356: aload_0
     357: getfield      #7                  // Field blocks:[[D
     360: iload         18
     362: aload_0
     363: getfield      #5                  // Field blockColumns:I
     366: iadd
     367: aaload
     368: iload         19
     370: iconst_0
     371: iload         20
     373: iload         9
     375: iload         15
     377: iload         9
     379: iadd
     380: aload         17
     382: iload         15
     384: iload         12
     386: iload         20
     388: isub
     389: iconst_0
     390: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     393: goto          512
     396: iload         21
     398: ifle          479
     401: aload_0
     402: iload         13
     404: iconst_1
     405: iadd
     406: invokespecial #12                 // Method blockWidth:(I)I
     409: istore        22
     411: aload_0
     412: aload_0
     413: getfield      #7                  // Field blocks:[[D
     416: iload         18
     418: aaload
     419: iload         19
     421: iload         7
     423: iload         12
     425: iload         7
     427: iadd
     428: iload         9
     430: bipush        52
     432: aload         17
     434: iload         15
     436: iconst_0
     437: iconst_0
     438: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     441: aload_0
     442: aload_0
     443: getfield      #7                  // Field blocks:[[D
     446: iload         18
     448: iconst_1
     449: iadd
     450: aaload
     451: iload         22
     453: iload         7
     455: iload         12
     457: iload         7
     459: iadd
     460: iconst_0
     461: iload         21
     463: aload         17
     465: iload         15
     467: iconst_0
     468: iload         15
     470: iload         21
     472: isub
     473: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     476: goto          512
     479: aload_0
     480: aload_0
     481: getfield      #7                  // Field blocks:[[D
     484: iload         18
     486: aaload
     487: iload         19
     489: iload         7
     491: iload         12
     493: iload         7
     495: iadd
     496: iload         9
     498: iload         15
     500: iload         9
     502: iadd
     503: aload         17
     505: iload         15
     507: iconst_0
     508: iconst_0
     509: invokespecial #37                 // Method copyBlockPart:([DIIIII[DIII)V
     512: iinc          13, 1
     515: iinc          14, 1
     518: goto          86
     521: iinc          10, 1
     524: iinc          11, 1
     527: goto          60
     530: aload         5
     532: areturn

  private void copyBlockPart(double[], int, int, int, int, int, double[], int, int, int);
    Code:
       0: iload         6
       2: iload         5
       4: isub
       5: istore        11
       7: iload_3
       8: iload_2
       9: imul
      10: iload         5
      12: iadd
      13: istore        12
      15: iload         9
      17: iload         8
      19: imul
      20: iload         10
      22: iadd
      23: istore        13
      25: iload_3
      26: istore        14
      28: iload         14
      30: iload         4
      32: if_icmpge     66
      35: aload_1
      36: iload         12
      38: aload         7
      40: iload         13
      42: iload         11
      44: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: iload         12
      49: iload_2
      50: iadd
      51: istore        12
      53: iload         13
      55: iload         8
      57: iadd
      58: istore        13
      60: iinc          14, 1
      63: goto          28
      66: return

  public void setSubMatrix(double[][], int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: invokestatic  #38                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: iconst_0
       6: aaload
       7: arraylength
       8: istore        4
      10: iload         4
      12: ifne          26
      15: new           #39                 // class org/apache/commons/math3/exception/NoDataException
      18: dup
      19: getstatic     #40                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_COLUMN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      22: invokespecial #41                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      25: athrow
      26: iload_2
      27: aload_1
      28: arraylength
      29: iadd
      30: iconst_1
      31: isub
      32: istore        5
      34: iload_3
      35: iload         4
      37: iadd
      38: iconst_1
      39: isub
      40: istore        6
      42: aload_0
      43: iload_2
      44: iload         5
      46: iload_3
      47: iload         6
      49: invokestatic  #36                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      52: aload_1
      53: astore        7
      55: aload         7
      57: arraylength
      58: istore        8
      60: iconst_0
      61: istore        9
      63: iload         9
      65: iload         8
      67: if_icmpge     104
      70: aload         7
      72: iload         9
      74: aaload
      75: astore        10
      77: aload         10
      79: arraylength
      80: iload         4
      82: if_icmpeq     98
      85: new           #13                 // class org/apache/commons/math3/exception/DimensionMismatchException
      88: dup
      89: iload         4
      91: aload         10
      93: arraylength
      94: invokespecial #14                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      97: athrow
      98: iinc          9, 1
     101: goto          63
     104: iload_2
     105: bipush        52
     107: idiv
     108: istore        7
     110: iload         5
     112: bipush        52
     114: iadd
     115: bipush        52
     117: idiv
     118: istore        8
     120: iload_3
     121: bipush        52
     123: idiv
     124: istore        9
     126: iload         6
     128: bipush        52
     130: iadd
     131: bipush        52
     133: idiv
     134: istore        10
     136: iload         7
     138: istore        11
     140: iload         11
     142: iload         8
     144: if_icmpge     316
     147: aload_0
     148: iload         11
     150: invokespecial #11                 // Method blockHeight:(I)I
     153: istore        12
     155: iload         11
     157: bipush        52
     159: imul
     160: istore        13
     162: iload_2
     163: iload         13
     165: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     168: istore        14
     170: iload         5
     172: iconst_1
     173: iadd
     174: iload         13
     176: iload         12
     178: iadd
     179: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     182: istore        15
     184: iload         9
     186: istore        16
     188: iload         16
     190: iload         10
     192: if_icmpge     310
     195: aload_0
     196: iload         16
     198: invokespecial #12                 // Method blockWidth:(I)I
     201: istore        17
     203: iload         16
     205: bipush        52
     207: imul
     208: istore        18
     210: iload_3
     211: iload         18
     213: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     216: istore        19
     218: iload         6
     220: iconst_1
     221: iadd
     222: iload         18
     224: iload         17
     226: iadd
     227: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     230: istore        20
     232: iload         20
     234: iload         19
     236: isub
     237: istore        21
     239: aload_0
     240: getfield      #7                  // Field blocks:[[D
     243: iload         11
     245: aload_0
     246: getfield      #5                  // Field blockColumns:I
     249: imul
     250: iload         16
     252: iadd
     253: aaload
     254: astore        22
     256: iload         14
     258: istore        23
     260: iload         23
     262: iload         15
     264: if_icmpge     304
     267: aload_1
     268: iload         23
     270: iload_2
     271: isub
     272: aaload
     273: iload         19
     275: iload_3
     276: isub
     277: aload         22
     279: iload         23
     281: iload         13
     283: isub
     284: iload         17
     286: imul
     287: iload         19
     289: iload         18
     291: isub
     292: iadd
     293: iload         21
     295: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     298: iinc          23, 1
     301: goto          260
     304: iinc          16, 1
     307: goto          188
     310: iinc          11, 1
     313: goto          140
     316: return

  public org.apache.commons.math3.linear.BlockRealMatrix getRowMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #43                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       8: dup
       9: iconst_1
      10: aload_0
      11: getfield      #3                  // Field columns:I
      14: invokespecial #19                 // Method "<init>":(II)V
      17: astore_2
      18: iload_1
      19: bipush        52
      21: idiv
      22: istore_3
      23: iload_1
      24: iload_3
      25: bipush        52
      27: imul
      28: isub
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iconst_0
      35: istore        6
      37: aload_2
      38: getfield      #7                  // Field blocks:[[D
      41: iload         5
      43: aaload
      44: astore        7
      46: iconst_0
      47: istore        8
      49: iload         8
      51: aload_0
      52: getfield      #5                  // Field blockColumns:I
      55: if_icmpge     182
      58: aload_0
      59: iload         8
      61: invokespecial #12                 // Method blockWidth:(I)I
      64: istore        9
      66: aload_0
      67: getfield      #7                  // Field blocks:[[D
      70: iload_3
      71: aload_0
      72: getfield      #5                  // Field blockColumns:I
      75: imul
      76: iload         8
      78: iadd
      79: aaload
      80: astore        10
      82: aload         7
      84: arraylength
      85: iload         6
      87: isub
      88: istore        11
      90: iload         9
      92: iload         11
      94: if_icmple     153
      97: aload         10
      99: iload         4
     101: iload         9
     103: imul
     104: aload         7
     106: iload         6
     108: iload         11
     110: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     113: aload_2
     114: getfield      #7                  // Field blocks:[[D
     117: iinc          5, 1
     120: iload         5
     122: aaload
     123: astore        7
     125: aload         10
     127: iload         4
     129: iload         9
     131: imul
     132: aload         7
     134: iconst_0
     135: iload         9
     137: iload         11
     139: isub
     140: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     143: iload         9
     145: iload         11
     147: isub
     148: istore        6
     150: goto          176
     153: aload         10
     155: iload         4
     157: iload         9
     159: imul
     160: aload         7
     162: iload         6
     164: iload         9
     166: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     169: iload         6
     171: iload         9
     173: iadd
     174: istore        6
     176: iinc          8, 1
     179: goto          49
     182: aload_2
     183: areturn

  public void setRowMatrix(int, org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       6: invokevirtual #44                 // Method setRowMatrix:(ILorg/apache/commons/math3/linear/BlockRealMatrix;)V
       9: goto          19
      12: astore_3
      13: aload_0
      14: iload_1
      15: aload_2
      16: invokespecial #45                 // Method org/apache/commons/math3/linear/AbstractRealMatrix.setRowMatrix:(ILorg/apache/commons/math3/linear/RealMatrix;)V
      19: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/ClassCastException

  public void setRowMatrix(int, org.apache.commons.math3.linear.BlockRealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #43                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #30                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_2
      11: invokevirtual #29                 // Method getRowDimension:()I
      14: iconst_1
      15: if_icmpne     26
      18: aload_2
      19: invokevirtual #30                 // Method getColumnDimension:()I
      22: iload_3
      23: if_icmpeq     44
      26: new           #46                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      29: dup
      30: aload_2
      31: invokevirtual #29                 // Method getRowDimension:()I
      34: aload_2
      35: invokevirtual #30                 // Method getColumnDimension:()I
      38: iconst_1
      39: iload_3
      40: invokespecial #47                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      43: athrow
      44: iload_1
      45: bipush        52
      47: idiv
      48: istore        4
      50: iload_1
      51: iload         4
      53: bipush        52
      55: imul
      56: isub
      57: istore        5
      59: iconst_0
      60: istore        6
      62: iconst_0
      63: istore        7
      65: aload_2
      66: getfield      #7                  // Field blocks:[[D
      69: iload         6
      71: aaload
      72: astore        8
      74: iconst_0
      75: istore        9
      77: iload         9
      79: aload_0
      80: getfield      #5                  // Field blockColumns:I
      83: if_icmpge     211
      86: aload_0
      87: iload         9
      89: invokespecial #12                 // Method blockWidth:(I)I
      92: istore        10
      94: aload_0
      95: getfield      #7                  // Field blocks:[[D
      98: iload         4
     100: aload_0
     101: getfield      #5                  // Field blockColumns:I
     104: imul
     105: iload         9
     107: iadd
     108: aaload
     109: astore        11
     111: aload         8
     113: arraylength
     114: iload         7
     116: isub
     117: istore        12
     119: iload         10
     121: iload         12
     123: if_icmple     182
     126: aload         8
     128: iload         7
     130: aload         11
     132: iload         5
     134: iload         10
     136: imul
     137: iload         12
     139: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     142: aload_2
     143: getfield      #7                  // Field blocks:[[D
     146: iinc          6, 1
     149: iload         6
     151: aaload
     152: astore        8
     154: aload         8
     156: iconst_0
     157: aload         11
     159: iload         5
     161: iload         10
     163: imul
     164: iload         10
     166: iload         12
     168: isub
     169: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     172: iload         10
     174: iload         12
     176: isub
     177: istore        7
     179: goto          205
     182: aload         8
     184: iload         7
     186: aload         11
     188: iload         5
     190: iload         10
     192: imul
     193: iload         10
     195: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     198: iload         7
     200: iload         10
     202: iadd
     203: istore        7
     205: iinc          9, 1
     208: goto          77
     211: return

  public org.apache.commons.math3.linear.BlockRealMatrix getColumnMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #48                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       8: dup
       9: aload_0
      10: getfield      #2                  // Field rows:I
      13: iconst_1
      14: invokespecial #19                 // Method "<init>":(II)V
      17: astore_2
      18: iload_1
      19: bipush        52
      21: idiv
      22: istore_3
      23: iload_1
      24: iload_3
      25: bipush        52
      27: imul
      28: isub
      29: istore        4
      31: aload_0
      32: iload_3
      33: invokespecial #12                 // Method blockWidth:(I)I
      36: istore        5
      38: iconst_0
      39: istore        6
      41: iconst_0
      42: istore        7
      44: aload_2
      45: getfield      #7                  // Field blocks:[[D
      48: iload         6
      50: aaload
      51: astore        8
      53: iconst_0
      54: istore        9
      56: iload         9
      58: aload_0
      59: getfield      #4                  // Field blockRows:I
      62: if_icmpge     153
      65: aload_0
      66: iload         9
      68: invokespecial #11                 // Method blockHeight:(I)I
      71: istore        10
      73: aload_0
      74: getfield      #7                  // Field blocks:[[D
      77: iload         9
      79: aload_0
      80: getfield      #5                  // Field blockColumns:I
      83: imul
      84: iload_3
      85: iadd
      86: aaload
      87: astore        11
      89: iconst_0
      90: istore        12
      92: iload         12
      94: iload         10
      96: if_icmpge     147
      99: iload         7
     101: aload         8
     103: arraylength
     104: if_icmplt     122
     107: aload_2
     108: getfield      #7                  // Field blocks:[[D
     111: iinc          6, 1
     114: iload         6
     116: aaload
     117: astore        8
     119: iconst_0
     120: istore        7
     122: aload         8
     124: iload         7
     126: iinc          7, 1
     129: aload         11
     131: iload         12
     133: iload         5
     135: imul
     136: iload         4
     138: iadd
     139: daload
     140: dastore
     141: iinc          12, 1
     144: goto          92
     147: iinc          9, 1
     150: goto          56
     153: aload_2
     154: areturn

  public void setColumnMatrix(int, org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
       6: invokevirtual #49                 // Method setColumnMatrix:(ILorg/apache/commons/math3/linear/BlockRealMatrix;)V
       9: goto          19
      12: astore_3
      13: aload_0
      14: iload_1
      15: aload_2
      16: invokespecial #50                 // Method org/apache/commons/math3/linear/AbstractRealMatrix.setColumnMatrix:(ILorg/apache/commons/math3/linear/RealMatrix;)V
      19: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/ClassCastException

  void setColumnMatrix(int, org.apache.commons.math3.linear.BlockRealMatrix) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #48                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #29                 // Method getRowDimension:()I
       9: istore_3
      10: aload_2
      11: invokevirtual #29                 // Method getRowDimension:()I
      14: iload_3
      15: if_icmpne     26
      18: aload_2
      19: invokevirtual #30                 // Method getColumnDimension:()I
      22: iconst_1
      23: if_icmpeq     44
      26: new           #46                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      29: dup
      30: aload_2
      31: invokevirtual #29                 // Method getRowDimension:()I
      34: aload_2
      35: invokevirtual #30                 // Method getColumnDimension:()I
      38: iload_3
      39: iconst_1
      40: invokespecial #47                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      43: athrow
      44: iload_1
      45: bipush        52
      47: idiv
      48: istore        4
      50: iload_1
      51: iload         4
      53: bipush        52
      55: imul
      56: isub
      57: istore        5
      59: aload_0
      60: iload         4
      62: invokespecial #12                 // Method blockWidth:(I)I
      65: istore        6
      67: iconst_0
      68: istore        7
      70: iconst_0
      71: istore        8
      73: aload_2
      74: getfield      #7                  // Field blocks:[[D
      77: iload         7
      79: aaload
      80: astore        9
      82: iconst_0
      83: istore        10
      85: iload         10
      87: aload_0
      88: getfield      #4                  // Field blockRows:I
      91: if_icmpge     183
      94: aload_0
      95: iload         10
      97: invokespecial #11                 // Method blockHeight:(I)I
     100: istore        11
     102: aload_0
     103: getfield      #7                  // Field blocks:[[D
     106: iload         10
     108: aload_0
     109: getfield      #5                  // Field blockColumns:I
     112: imul
     113: iload         4
     115: iadd
     116: aaload
     117: astore        12
     119: iconst_0
     120: istore        13
     122: iload         13
     124: iload         11
     126: if_icmpge     177
     129: iload         8
     131: aload         9
     133: arraylength
     134: if_icmplt     152
     137: aload_2
     138: getfield      #7                  // Field blocks:[[D
     141: iinc          7, 1
     144: iload         7
     146: aaload
     147: astore        9
     149: iconst_0
     150: istore        8
     152: aload         12
     154: iload         13
     156: iload         6
     158: imul
     159: iload         5
     161: iadd
     162: aload         9
     164: iload         8
     166: iinc          8, 1
     169: daload
     170: dastore
     171: iinc          13, 1
     174: goto          122
     177: iinc          10, 1
     180: goto          85
     183: return

  public org.apache.commons.math3.linear.RealVector getRowVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #43                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: newarray       double
      11: astore_2
      12: iload_1
      13: bipush        52
      15: idiv
      16: istore_3
      17: iload_1
      18: iload_3
      19: bipush        52
      21: imul
      22: isub
      23: istore        4
      25: iconst_0
      26: istore        5
      28: iconst_0
      29: istore        6
      31: iload         6
      33: aload_0
      34: getfield      #5                  // Field blockColumns:I
      37: if_icmpge     92
      40: aload_0
      41: iload         6
      43: invokespecial #12                 // Method blockWidth:(I)I
      46: istore        7
      48: aload_0
      49: getfield      #7                  // Field blocks:[[D
      52: iload_3
      53: aload_0
      54: getfield      #5                  // Field blockColumns:I
      57: imul
      58: iload         6
      60: iadd
      61: aaload
      62: astore        8
      64: aload         8
      66: iload         4
      68: iload         7
      70: imul
      71: aload_2
      72: iload         5
      74: iload         7
      76: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: iload         5
      81: iload         7
      83: iadd
      84: istore        5
      86: iinc          6, 1
      89: goto          31
      92: new           #51                 // class org/apache/commons/math3/linear/ArrayRealVector
      95: dup
      96: aload_2
      97: iconst_0
      98: invokespecial #52                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
     101: areturn

  public void setRowVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #51                 // class org/apache/commons/math3/linear/ArrayRealVector
       6: invokevirtual #53                 // Method org/apache/commons/math3/linear/ArrayRealVector.getDataRef:()[D
       9: invokevirtual #54                 // Method setRow:(I[D)V
      12: goto          22
      15: astore_3
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokespecial #55                 // Method org/apache/commons/math3/linear/AbstractRealMatrix.setRowVector:(ILorg/apache/commons/math3/linear/RealVector;)V
      22: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.RealVector getColumnVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #48                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: getfield      #2                  // Field rows:I
       9: newarray       double
      11: astore_2
      12: iload_1
      13: bipush        52
      15: idiv
      16: istore_3
      17: iload_1
      18: iload_3
      19: bipush        52
      21: imul
      22: isub
      23: istore        4
      25: aload_0
      26: iload_3
      27: invokespecial #12                 // Method blockWidth:(I)I
      30: istore        5
      32: iconst_0
      33: istore        6
      35: iconst_0
      36: istore        7
      38: iload         7
      40: aload_0
      41: getfield      #4                  // Field blockRows:I
      44: if_icmpge     111
      47: aload_0
      48: iload         7
      50: invokespecial #11                 // Method blockHeight:(I)I
      53: istore        8
      55: aload_0
      56: getfield      #7                  // Field blocks:[[D
      59: iload         7
      61: aload_0
      62: getfield      #5                  // Field blockColumns:I
      65: imul
      66: iload_3
      67: iadd
      68: aaload
      69: astore        9
      71: iconst_0
      72: istore        10
      74: iload         10
      76: iload         8
      78: if_icmpge     105
      81: aload_2
      82: iload         6
      84: iinc          6, 1
      87: aload         9
      89: iload         10
      91: iload         5
      93: imul
      94: iload         4
      96: iadd
      97: daload
      98: dastore
      99: iinc          10, 1
     102: goto          74
     105: iinc          7, 1
     108: goto          38
     111: new           #51                 // class org/apache/commons/math3/linear/ArrayRealVector
     114: dup
     115: aload_2
     116: iconst_0
     117: invokespecial #52                 // Method org/apache/commons/math3/linear/ArrayRealVector."<init>":([DZ)V
     120: areturn

  public void setColumnVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #51                 // class org/apache/commons/math3/linear/ArrayRealVector
       6: invokevirtual #53                 // Method org/apache/commons/math3/linear/ArrayRealVector.getDataRef:()[D
       9: invokevirtual #56                 // Method setColumn:(I[D)V
      12: goto          22
      15: astore_3
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokespecial #57                 // Method org/apache/commons/math3/linear/AbstractRealMatrix.setColumnVector:(ILorg/apache/commons/math3/linear/RealVector;)V
      22: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/ClassCastException

  public double[] getRow(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #43                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: newarray       double
      11: astore_2
      12: iload_1
      13: bipush        52
      15: idiv
      16: istore_3
      17: iload_1
      18: iload_3
      19: bipush        52
      21: imul
      22: isub
      23: istore        4
      25: iconst_0
      26: istore        5
      28: iconst_0
      29: istore        6
      31: iload         6
      33: aload_0
      34: getfield      #5                  // Field blockColumns:I
      37: if_icmpge     92
      40: aload_0
      41: iload         6
      43: invokespecial #12                 // Method blockWidth:(I)I
      46: istore        7
      48: aload_0
      49: getfield      #7                  // Field blocks:[[D
      52: iload_3
      53: aload_0
      54: getfield      #5                  // Field blockColumns:I
      57: imul
      58: iload         6
      60: iadd
      61: aaload
      62: astore        8
      64: aload         8
      66: iload         4
      68: iload         7
      70: imul
      71: aload_2
      72: iload         5
      74: iload         7
      76: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: iload         5
      81: iload         7
      83: iadd
      84: istore        5
      86: iinc          6, 1
      89: goto          31
      92: aload_2
      93: areturn

  public void setRow(int, double[]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #43                 // Method org/apache/commons/math3/linear/MatrixUtils.checkRowIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #30                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iload_3
      13: if_icmpeq     29
      16: new           #46                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      19: dup
      20: iconst_1
      21: aload_2
      22: arraylength
      23: iconst_1
      24: iload_3
      25: invokespecial #47                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      28: athrow
      29: iload_1
      30: bipush        52
      32: idiv
      33: istore        4
      35: iload_1
      36: iload         4
      38: bipush        52
      40: imul
      41: isub
      42: istore        5
      44: iconst_0
      45: istore        6
      47: iconst_0
      48: istore        7
      50: iload         7
      52: aload_0
      53: getfield      #5                  // Field blockColumns:I
      56: if_icmpge     112
      59: aload_0
      60: iload         7
      62: invokespecial #12                 // Method blockWidth:(I)I
      65: istore        8
      67: aload_0
      68: getfield      #7                  // Field blocks:[[D
      71: iload         4
      73: aload_0
      74: getfield      #5                  // Field blockColumns:I
      77: imul
      78: iload         7
      80: iadd
      81: aaload
      82: astore        9
      84: aload_2
      85: iload         6
      87: aload         9
      89: iload         5
      91: iload         8
      93: imul
      94: iload         8
      96: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: iload         6
     101: iload         8
     103: iadd
     104: istore        6
     106: iinc          7, 1
     109: goto          50
     112: return

  public double[] getColumn(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #48                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: getfield      #2                  // Field rows:I
       9: newarray       double
      11: astore_2
      12: iload_1
      13: bipush        52
      15: idiv
      16: istore_3
      17: iload_1
      18: iload_3
      19: bipush        52
      21: imul
      22: isub
      23: istore        4
      25: aload_0
      26: iload_3
      27: invokespecial #12                 // Method blockWidth:(I)I
      30: istore        5
      32: iconst_0
      33: istore        6
      35: iconst_0
      36: istore        7
      38: iload         7
      40: aload_0
      41: getfield      #4                  // Field blockRows:I
      44: if_icmpge     111
      47: aload_0
      48: iload         7
      50: invokespecial #11                 // Method blockHeight:(I)I
      53: istore        8
      55: aload_0
      56: getfield      #7                  // Field blocks:[[D
      59: iload         7
      61: aload_0
      62: getfield      #5                  // Field blockColumns:I
      65: imul
      66: iload_3
      67: iadd
      68: aaload
      69: astore        9
      71: iconst_0
      72: istore        10
      74: iload         10
      76: iload         8
      78: if_icmpge     105
      81: aload_2
      82: iload         6
      84: iinc          6, 1
      87: aload         9
      89: iload         10
      91: iload         5
      93: imul
      94: iload         4
      96: iadd
      97: daload
      98: dastore
      99: iinc          10, 1
     102: goto          74
     105: iinc          7, 1
     108: goto          38
     111: aload_2
     112: areturn

  public void setColumn(int, double[]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #48                 // Method org/apache/commons/math3/linear/MatrixUtils.checkColumnIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
       5: aload_0
       6: invokevirtual #29                 // Method getRowDimension:()I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iload_3
      13: if_icmpeq     29
      16: new           #46                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      19: dup
      20: aload_2
      21: arraylength
      22: iconst_1
      23: iload_3
      24: iconst_1
      25: invokespecial #47                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      28: athrow
      29: iload_1
      30: bipush        52
      32: idiv
      33: istore        4
      35: iload_1
      36: iload         4
      38: bipush        52
      40: imul
      41: isub
      42: istore        5
      44: aload_0
      45: iload         4
      47: invokespecial #12                 // Method blockWidth:(I)I
      50: istore        6
      52: iconst_0
      53: istore        7
      55: iconst_0
      56: istore        8
      58: iload         8
      60: aload_0
      61: getfield      #4                  // Field blockRows:I
      64: if_icmpge     132
      67: aload_0
      68: iload         8
      70: invokespecial #11                 // Method blockHeight:(I)I
      73: istore        9
      75: aload_0
      76: getfield      #7                  // Field blocks:[[D
      79: iload         8
      81: aload_0
      82: getfield      #5                  // Field blockColumns:I
      85: imul
      86: iload         4
      88: iadd
      89: aaload
      90: astore        10
      92: iconst_0
      93: istore        11
      95: iload         11
      97: iload         9
      99: if_icmpge     126
     102: aload         10
     104: iload         11
     106: iload         6
     108: imul
     109: iload         5
     111: iadd
     112: aload_2
     113: iload         7
     115: iinc          7, 1
     118: daload
     119: dastore
     120: iinc          11, 1
     123: goto          95
     126: iinc          8, 1
     129: goto          58
     132: return

  public double getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #58                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
       6: iload_1
       7: bipush        52
       9: idiv
      10: istore_3
      11: iload_2
      12: bipush        52
      14: idiv
      15: istore        4
      17: iload_1
      18: iload_3
      19: bipush        52
      21: imul
      22: isub
      23: aload_0
      24: iload         4
      26: invokespecial #12                 // Method blockWidth:(I)I
      29: imul
      30: iload_2
      31: iload         4
      33: bipush        52
      35: imul
      36: isub
      37: iadd
      38: istore        5
      40: aload_0
      41: getfield      #7                  // Field blocks:[[D
      44: iload_3
      45: aload_0
      46: getfield      #5                  // Field blockColumns:I
      49: imul
      50: iload         4
      52: iadd
      53: aaload
      54: iload         5
      56: daload
      57: dreturn

  public void setEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #58                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
       6: iload_1
       7: bipush        52
       9: idiv
      10: istore        5
      12: iload_2
      13: bipush        52
      15: idiv
      16: istore        6
      18: iload_1
      19: iload         5
      21: bipush        52
      23: imul
      24: isub
      25: aload_0
      26: iload         6
      28: invokespecial #12                 // Method blockWidth:(I)I
      31: imul
      32: iload_2
      33: iload         6
      35: bipush        52
      37: imul
      38: isub
      39: iadd
      40: istore        7
      42: aload_0
      43: getfield      #7                  // Field blocks:[[D
      46: iload         5
      48: aload_0
      49: getfield      #5                  // Field blockColumns:I
      52: imul
      53: iload         6
      55: iadd
      56: aaload
      57: iload         7
      59: dload_3
      60: dastore
      61: return

  public void addToEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #58                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
       6: iload_1
       7: bipush        52
       9: idiv
      10: istore        5
      12: iload_2
      13: bipush        52
      15: idiv
      16: istore        6
      18: iload_1
      19: iload         5
      21: bipush        52
      23: imul
      24: isub
      25: aload_0
      26: iload         6
      28: invokespecial #12                 // Method blockWidth:(I)I
      31: imul
      32: iload_2
      33: iload         6
      35: bipush        52
      37: imul
      38: isub
      39: iadd
      40: istore        7
      42: aload_0
      43: getfield      #7                  // Field blocks:[[D
      46: iload         5
      48: aload_0
      49: getfield      #5                  // Field blockColumns:I
      52: imul
      53: iload         6
      55: iadd
      56: aaload
      57: iload         7
      59: dup2
      60: daload
      61: dload_3
      62: dadd
      63: dastore
      64: return

  public void multiplyEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #58                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
       6: iload_1
       7: bipush        52
       9: idiv
      10: istore        5
      12: iload_2
      13: bipush        52
      15: idiv
      16: istore        6
      18: iload_1
      19: iload         5
      21: bipush        52
      23: imul
      24: isub
      25: aload_0
      26: iload         6
      28: invokespecial #12                 // Method blockWidth:(I)I
      31: imul
      32: iload_2
      33: iload         6
      35: bipush        52
      37: imul
      38: isub
      39: iadd
      40: istore        7
      42: aload_0
      43: getfield      #7                  // Field blocks:[[D
      46: iload         5
      48: aload_0
      49: getfield      #5                  // Field blockColumns:I
      52: imul
      53: iload         6
      55: iadd
      56: aaload
      57: iload         7
      59: dup2
      60: daload
      61: dload_3
      62: dmul
      63: dastore
      64: return

  public org.apache.commons.math3.linear.BlockRealMatrix transpose();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getRowDimension:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #30                 // Method getColumnDimension:()I
       9: istore_2
      10: new           #18                 // class org/apache/commons/math3/linear/BlockRealMatrix
      13: dup
      14: iload_2
      15: iload_1
      16: invokespecial #19                 // Method "<init>":(II)V
      19: astore_3
      20: iconst_0
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: aload_0
      29: getfield      #5                  // Field blockColumns:I
      32: if_icmpge     201
      35: iconst_0
      36: istore        6
      38: iload         6
      40: aload_0
      41: getfield      #4                  // Field blockRows:I
      44: if_icmpge     195
      47: aload_3
      48: getfield      #7                  // Field blocks:[[D
      51: iload         4
      53: aaload
      54: astore        7
      56: aload_0
      57: getfield      #7                  // Field blocks:[[D
      60: iload         6
      62: aload_0
      63: getfield      #5                  // Field blockColumns:I
      66: imul
      67: iload         5
      69: iadd
      70: aaload
      71: astore        8
      73: iload         5
      75: bipush        52
      77: imul
      78: istore        9
      80: iload         9
      82: bipush        52
      84: iadd
      85: aload_0
      86: getfield      #3                  // Field columns:I
      89: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      92: istore        10
      94: iload         6
      96: bipush        52
      98: imul
      99: istore        11
     101: iload         11
     103: bipush        52
     105: iadd
     106: aload_0
     107: getfield      #2                  // Field rows:I
     110: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     113: istore        12
     115: iconst_0
     116: istore        13
     118: iload         9
     120: istore        14
     122: iload         14
     124: iload         10
     126: if_icmpge     186
     129: iload         10
     131: iload         9
     133: isub
     134: istore        15
     136: iload         14
     138: iload         9
     140: isub
     141: istore        16
     143: iload         11
     145: istore        17
     147: iload         17
     149: iload         12
     151: if_icmpge     180
     154: aload         7
     156: iload         13
     158: aload         8
     160: iload         16
     162: daload
     163: dastore
     164: iinc          13, 1
     167: iload         16
     169: iload         15
     171: iadd
     172: istore        16
     174: iinc          17, 1
     177: goto          147
     180: iinc          14, 1
     183: goto          122
     186: iinc          4, 1
     189: iinc          6, 1
     192: goto          38
     195: iinc          5, 1
     198: goto          26
     201: aload_3
     202: areturn

  public int getRowDimension();
    Code:
       0: aload_0
       1: getfield      #2                  // Field rows:I
       4: ireturn

  public int getColumnDimension();
    Code:
       0: aload_0
       1: getfield      #3                  // Field columns:I
       4: ireturn

  public double[] operate(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #3                  // Field columns:I
       6: if_icmpeq     23
       9: new           #13                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_1
      14: arraylength
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: invokespecial #14                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: aload_0
      24: getfield      #2                  // Field rows:I
      27: newarray       double
      29: astore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #4                  // Field blockRows:I
      37: if_icmpge     266
      40: iload_3
      41: bipush        52
      43: imul
      44: istore        4
      46: iload         4
      48: bipush        52
      50: iadd
      51: aload_0
      52: getfield      #2                  // Field rows:I
      55: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      58: istore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: aload_0
      66: getfield      #5                  // Field blockColumns:I
      69: if_icmpge     260
      72: aload_0
      73: getfield      #7                  // Field blocks:[[D
      76: iload_3
      77: aload_0
      78: getfield      #5                  // Field blockColumns:I
      81: imul
      82: iload         6
      84: iadd
      85: aaload
      86: astore        7
      88: iload         6
      90: bipush        52
      92: imul
      93: istore        8
      95: iload         8
      97: bipush        52
      99: iadd
     100: aload_0
     101: getfield      #3                  // Field columns:I
     104: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     107: istore        9
     109: iconst_0
     110: istore        10
     112: iload         4
     114: istore        11
     116: iload         11
     118: iload         5
     120: if_icmpge     254
     123: dconst_0
     124: dstore        12
     126: iload         8
     128: istore        14
     130: iload         14
     132: iload         9
     134: iconst_3
     135: isub
     136: if_icmpge     208
     139: dload         12
     141: aload         7
     143: iload         10
     145: daload
     146: aload_1
     147: iload         14
     149: daload
     150: dmul
     151: aload         7
     153: iload         10
     155: iconst_1
     156: iadd
     157: daload
     158: aload_1
     159: iload         14
     161: iconst_1
     162: iadd
     163: daload
     164: dmul
     165: dadd
     166: aload         7
     168: iload         10
     170: iconst_2
     171: iadd
     172: daload
     173: aload_1
     174: iload         14
     176: iconst_2
     177: iadd
     178: daload
     179: dmul
     180: dadd
     181: aload         7
     183: iload         10
     185: iconst_3
     186: iadd
     187: daload
     188: aload_1
     189: iload         14
     191: iconst_3
     192: iadd
     193: daload
     194: dmul
     195: dadd
     196: dadd
     197: dstore        12
     199: iinc          10, 4
     202: iinc          14, 4
     205: goto          130
     208: iload         14
     210: iload         9
     212: if_icmpge     239
     215: dload         12
     217: aload         7
     219: iload         10
     221: iinc          10, 1
     224: daload
     225: aload_1
     226: iload         14
     228: iinc          14, 1
     231: daload
     232: dmul
     233: dadd
     234: dstore        12
     236: goto          208
     239: aload_2
     240: iload         11
     242: dup2
     243: daload
     244: dload         12
     246: dadd
     247: dastore
     248: iinc          11, 1
     251: goto          116
     254: iinc          6, 1
     257: goto          63
     260: iinc          3, 1
     263: goto          32
     266: aload_2
     267: areturn

  public double[] preMultiply(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #2                  // Field rows:I
       6: if_icmpeq     23
       9: new           #13                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_1
      14: arraylength
      15: aload_0
      16: getfield      #2                  // Field rows:I
      19: invokespecial #14                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: aload_0
      24: getfield      #3                  // Field columns:I
      27: newarray       double
      29: astore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #5                  // Field blockColumns:I
      37: if_icmpge     309
      40: aload_0
      41: iload_3
      42: invokespecial #12                 // Method blockWidth:(I)I
      45: istore        4
      47: iload         4
      49: iload         4
      51: iadd
      52: istore        5
      54: iload         5
      56: iload         4
      58: iadd
      59: istore        6
      61: iload         6
      63: iload         4
      65: iadd
      66: istore        7
      68: iload_3
      69: bipush        52
      71: imul
      72: istore        8
      74: iload         8
      76: bipush        52
      78: iadd
      79: aload_0
      80: getfield      #3                  // Field columns:I
      83: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      86: istore        9
      88: iconst_0
      89: istore        10
      91: iload         10
      93: aload_0
      94: getfield      #4                  // Field blockRows:I
      97: if_icmpge     303
     100: aload_0
     101: getfield      #7                  // Field blocks:[[D
     104: iload         10
     106: aload_0
     107: getfield      #5                  // Field blockColumns:I
     110: imul
     111: iload_3
     112: iadd
     113: aaload
     114: astore        11
     116: iload         10
     118: bipush        52
     120: imul
     121: istore        12
     123: iload         12
     125: bipush        52
     127: iadd
     128: aload_0
     129: getfield      #2                  // Field rows:I
     132: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     135: istore        13
     137: iload         8
     139: istore        14
     141: iload         14
     143: iload         9
     145: if_icmpge     297
     148: iload         14
     150: iload         8
     152: isub
     153: istore        15
     155: dconst_0
     156: dstore        16
     158: iload         12
     160: istore        18
     162: iload         18
     164: iload         13
     166: iconst_3
     167: isub
     168: if_icmpge     247
     171: dload         16
     173: aload         11
     175: iload         15
     177: daload
     178: aload_1
     179: iload         18
     181: daload
     182: dmul
     183: aload         11
     185: iload         15
     187: iload         4
     189: iadd
     190: daload
     191: aload_1
     192: iload         18
     194: iconst_1
     195: iadd
     196: daload
     197: dmul
     198: dadd
     199: aload         11
     201: iload         15
     203: iload         5
     205: iadd
     206: daload
     207: aload_1
     208: iload         18
     210: iconst_2
     211: iadd
     212: daload
     213: dmul
     214: dadd
     215: aload         11
     217: iload         15
     219: iload         6
     221: iadd
     222: daload
     223: aload_1
     224: iload         18
     226: iconst_3
     227: iadd
     228: daload
     229: dmul
     230: dadd
     231: dadd
     232: dstore        16
     234: iload         15
     236: iload         7
     238: iadd
     239: istore        15
     241: iinc          18, 4
     244: goto          162
     247: iload         18
     249: iload         13
     251: if_icmpge     282
     254: dload         16
     256: aload         11
     258: iload         15
     260: daload
     261: aload_1
     262: iload         18
     264: iinc          18, 1
     267: daload
     268: dmul
     269: dadd
     270: dstore        16
     272: iload         15
     274: iload         4
     276: iadd
     277: istore        15
     279: goto          247
     282: aload_2
     283: iload         14
     285: dup2
     286: daload
     287: dload         16
     289: dadd
     290: dastore
     291: iinc          14, 1
     294: goto          141
     297: iinc          10, 1
     300: goto          91
     303: iinc          3, 1
     306: goto          32
     309: aload_2
     310: areturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #59,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iload_2
      31: aload_0
      32: getfield      #4                  // Field blockRows:I
      35: if_icmpge     190
      38: iload_2
      39: bipush        52
      41: imul
      42: istore_3
      43: iload_3
      44: bipush        52
      46: iadd
      47: aload_0
      48: getfield      #2                  // Field rows:I
      51: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      54: istore        4
      56: iload_3
      57: istore        5
      59: iload         5
      61: iload         4
      63: if_icmpge     184
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload_0
      72: getfield      #5                  // Field blockColumns:I
      75: if_icmpge     178
      78: aload_0
      79: iload         6
      81: invokespecial #12                 // Method blockWidth:(I)I
      84: istore        7
      86: iload         6
      88: bipush        52
      90: imul
      91: istore        8
      93: iload         8
      95: bipush        52
      97: iadd
      98: aload_0
      99: getfield      #3                  // Field columns:I
     102: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     105: istore        9
     107: aload_0
     108: getfield      #7                  // Field blocks:[[D
     111: iload_2
     112: aload_0
     113: getfield      #5                  // Field blockColumns:I
     116: imul
     117: iload         6
     119: iadd
     120: aaload
     121: astore        10
     123: iload         5
     125: iload_3
     126: isub
     127: iload         7
     129: imul
     130: istore        11
     132: iload         8
     134: istore        12
     136: iload         12
     138: iload         9
     140: if_icmpge     172
     143: aload         10
     145: iload         11
     147: aload_1
     148: iload         5
     150: iload         12
     152: aload         10
     154: iload         11
     156: daload
     157: invokeinterface #60,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
     162: dastore
     163: iinc          11, 1
     166: iinc          12, 1
     169: goto          136
     172: iinc          6, 1
     175: goto          69
     178: iinc          5, 1
     181: goto          59
     184: iinc          2, 1
     187: goto          30
     190: aload_1
     191: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
     196: dreturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #62,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iload_2
      31: aload_0
      32: getfield      #4                  // Field blockRows:I
      35: if_icmpge     185
      38: iload_2
      39: bipush        52
      41: imul
      42: istore_3
      43: iload_3
      44: bipush        52
      46: iadd
      47: aload_0
      48: getfield      #2                  // Field rows:I
      51: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      54: istore        4
      56: iload_3
      57: istore        5
      59: iload         5
      61: iload         4
      63: if_icmpge     179
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload_0
      72: getfield      #5                  // Field blockColumns:I
      75: if_icmpge     173
      78: aload_0
      79: iload         6
      81: invokespecial #12                 // Method blockWidth:(I)I
      84: istore        7
      86: iload         6
      88: bipush        52
      90: imul
      91: istore        8
      93: iload         8
      95: bipush        52
      97: iadd
      98: aload_0
      99: getfield      #3                  // Field columns:I
     102: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     105: istore        9
     107: aload_0
     108: getfield      #7                  // Field blocks:[[D
     111: iload_2
     112: aload_0
     113: getfield      #5                  // Field blockColumns:I
     116: imul
     117: iload         6
     119: iadd
     120: aaload
     121: astore        10
     123: iload         5
     125: iload_3
     126: isub
     127: iload         7
     129: imul
     130: istore        11
     132: iload         8
     134: istore        12
     136: iload         12
     138: iload         9
     140: if_icmpge     167
     143: aload_1
     144: iload         5
     146: iload         12
     148: aload         10
     150: iload         11
     152: daload
     153: invokeinterface #63,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
     158: iinc          11, 1
     161: iinc          12, 1
     164: goto          136
     167: iinc          6, 1
     170: goto          69
     173: iinc          5, 1
     176: goto          59
     179: iinc          2, 1
     182: goto          30
     185: aload_1
     186: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
     191: dreturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #36                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #59,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        52
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        52
      42: idiv
      43: iadd
      44: if_icmpge     238
      47: iload         6
      49: bipush        52
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        52
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         8
      79: istore        10
      81: iload         10
      83: iload         9
      85: if_icmpge     232
      88: iload         4
      90: bipush        52
      92: idiv
      93: istore        11
      95: iload         11
      97: iconst_1
      98: iload         5
     100: bipush        52
     102: idiv
     103: iadd
     104: if_icmpge     226
     107: aload_0
     108: iload         11
     110: invokespecial #12                 // Method blockWidth:(I)I
     113: istore        12
     115: iload         11
     117: bipush        52
     119: imul
     120: istore        13
     122: iload         4
     124: iload         13
     126: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     129: istore        14
     131: iload         11
     133: iconst_1
     134: iadd
     135: bipush        52
     137: imul
     138: iconst_1
     139: iload         5
     141: iadd
     142: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     145: istore        15
     147: aload_0
     148: getfield      #7                  // Field blocks:[[D
     151: iload         6
     153: aload_0
     154: getfield      #5                  // Field blockColumns:I
     157: imul
     158: iload         11
     160: iadd
     161: aaload
     162: astore        16
     164: iload         10
     166: iload         7
     168: isub
     169: iload         12
     171: imul
     172: iload         14
     174: iadd
     175: iload         13
     177: isub
     178: istore        17
     180: iload         14
     182: istore        18
     184: iload         18
     186: iload         15
     188: if_icmpge     220
     191: aload         16
     193: iload         17
     195: aload_1
     196: iload         10
     198: iload         18
     200: aload         16
     202: iload         17
     204: daload
     205: invokeinterface #60,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
     210: dastore
     211: iinc          17, 1
     214: iinc          18, 1
     217: goto          184
     220: iinc          11, 1
     223: goto          95
     226: iinc          10, 1
     229: goto          81
     232: iinc          6, 1
     235: goto          36
     238: aload_1
     239: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
     244: dreturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #36                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #62,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        52
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        52
      42: idiv
      43: iadd
      44: if_icmpge     233
      47: iload         6
      49: bipush        52
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        52
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         8
      79: istore        10
      81: iload         10
      83: iload         9
      85: if_icmpge     227
      88: iload         4
      90: bipush        52
      92: idiv
      93: istore        11
      95: iload         11
      97: iconst_1
      98: iload         5
     100: bipush        52
     102: idiv
     103: iadd
     104: if_icmpge     221
     107: aload_0
     108: iload         11
     110: invokespecial #12                 // Method blockWidth:(I)I
     113: istore        12
     115: iload         11
     117: bipush        52
     119: imul
     120: istore        13
     122: iload         4
     124: iload         13
     126: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     129: istore        14
     131: iload         11
     133: iconst_1
     134: iadd
     135: bipush        52
     137: imul
     138: iconst_1
     139: iload         5
     141: iadd
     142: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     145: istore        15
     147: aload_0
     148: getfield      #7                  // Field blocks:[[D
     151: iload         6
     153: aload_0
     154: getfield      #5                  // Field blockColumns:I
     157: imul
     158: iload         11
     160: iadd
     161: aaload
     162: astore        16
     164: iload         10
     166: iload         7
     168: isub
     169: iload         12
     171: imul
     172: iload         14
     174: iadd
     175: iload         13
     177: isub
     178: istore        17
     180: iload         14
     182: istore        18
     184: iload         18
     186: iload         15
     188: if_icmpge     215
     191: aload_1
     192: iload         10
     194: iload         18
     196: aload         16
     198: iload         17
     200: daload
     201: invokeinterface #63,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
     206: iinc          17, 1
     209: iinc          18, 1
     212: goto          184
     215: iinc          11, 1
     218: goto          95
     221: iinc          10, 1
     224: goto          81
     227: iinc          6, 1
     230: goto          36
     233: aload_1
     234: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
     239: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #59,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #4                  // Field blockRows:I
      37: if_icmpge     176
      40: iload_3
      41: bipush        52
      43: imul
      44: istore        4
      46: iload         4
      48: bipush        52
      50: iadd
      51: aload_0
      52: getfield      #2                  // Field rows:I
      55: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      58: istore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: aload_0
      66: getfield      #5                  // Field blockColumns:I
      69: if_icmpge     170
      72: iload         6
      74: bipush        52
      76: imul
      77: istore        7
      79: iload         7
      81: bipush        52
      83: iadd
      84: aload_0
      85: getfield      #3                  // Field columns:I
      88: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      91: istore        8
      93: aload_0
      94: getfield      #7                  // Field blocks:[[D
      97: iload_2
      98: aaload
      99: astore        9
     101: iconst_0
     102: istore        10
     104: iload         4
     106: istore        11
     108: iload         11
     110: iload         5
     112: if_icmpge     161
     115: iload         7
     117: istore        12
     119: iload         12
     121: iload         8
     123: if_icmpge     155
     126: aload         9
     128: iload         10
     130: aload_1
     131: iload         11
     133: iload         12
     135: aload         9
     137: iload         10
     139: daload
     140: invokeinterface #60,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
     145: dastore
     146: iinc          10, 1
     149: iinc          12, 1
     152: goto          119
     155: iinc          11, 1
     158: goto          108
     161: iinc          2, 1
     164: iinc          6, 1
     167: goto          63
     170: iinc          3, 1
     173: goto          32
     176: aload_1
     177: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
     182: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #62,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #4                  // Field blockRows:I
      37: if_icmpge     171
      40: iload_3
      41: bipush        52
      43: imul
      44: istore        4
      46: iload         4
      48: bipush        52
      50: iadd
      51: aload_0
      52: getfield      #2                  // Field rows:I
      55: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      58: istore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: aload_0
      66: getfield      #5                  // Field blockColumns:I
      69: if_icmpge     165
      72: iload         6
      74: bipush        52
      76: imul
      77: istore        7
      79: iload         7
      81: bipush        52
      83: iadd
      84: aload_0
      85: getfield      #3                  // Field columns:I
      88: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      91: istore        8
      93: aload_0
      94: getfield      #7                  // Field blocks:[[D
      97: iload_2
      98: aaload
      99: astore        9
     101: iconst_0
     102: istore        10
     104: iload         4
     106: istore        11
     108: iload         11
     110: iload         5
     112: if_icmpge     156
     115: iload         7
     117: istore        12
     119: iload         12
     121: iload         8
     123: if_icmpge     150
     126: aload_1
     127: iload         11
     129: iload         12
     131: aload         9
     133: iload         10
     135: daload
     136: invokeinterface #63,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
     141: iinc          10, 1
     144: iinc          12, 1
     147: goto          119
     150: iinc          11, 1
     153: goto          108
     156: iinc          2, 1
     159: iinc          6, 1
     162: goto          63
     165: iinc          3, 1
     168: goto          32
     171: aload_1
     172: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
     177: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #36                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #59,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        52
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        52
      42: idiv
      43: iadd
      44: if_icmpge     238
      47: iload         6
      49: bipush        52
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        52
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         4
      79: bipush        52
      81: idiv
      82: istore        10
      84: iload         10
      86: iconst_1
      87: iload         5
      89: bipush        52
      91: idiv
      92: iadd
      93: if_icmpge     232
      96: aload_0
      97: iload         10
      99: invokespecial #12                 // Method blockWidth:(I)I
     102: istore        11
     104: iload         10
     106: bipush        52
     108: imul
     109: istore        12
     111: iload         4
     113: iload         12
     115: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     118: istore        13
     120: iload         10
     122: iconst_1
     123: iadd
     124: bipush        52
     126: imul
     127: iconst_1
     128: iload         5
     130: iadd
     131: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     134: istore        14
     136: aload_0
     137: getfield      #7                  // Field blocks:[[D
     140: iload         6
     142: aload_0
     143: getfield      #5                  // Field blockColumns:I
     146: imul
     147: iload         10
     149: iadd
     150: aaload
     151: astore        15
     153: iload         8
     155: istore        16
     157: iload         16
     159: iload         9
     161: if_icmpge     226
     164: iload         16
     166: iload         7
     168: isub
     169: iload         11
     171: imul
     172: iload         13
     174: iadd
     175: iload         12
     177: isub
     178: istore        17
     180: iload         13
     182: istore        18
     184: iload         18
     186: iload         14
     188: if_icmpge     220
     191: aload         15
     193: iload         17
     195: aload_1
     196: iload         16
     198: iload         18
     200: aload         15
     202: iload         17
     204: daload
     205: invokeinterface #60,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.visit:(IID)D
     210: dastore
     211: iinc          17, 1
     214: iinc          18, 1
     217: goto          184
     220: iinc          16, 1
     223: goto          157
     226: iinc          10, 1
     229: goto          84
     232: iinc          6, 1
     235: goto          36
     238: aload_1
     239: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixChangingVisitor.end:()D
     244: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokestatic  #36                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #62,  7           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        52
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        52
      42: idiv
      43: iadd
      44: if_icmpge     233
      47: iload         6
      49: bipush        52
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        52
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         4
      79: bipush        52
      81: idiv
      82: istore        10
      84: iload         10
      86: iconst_1
      87: iload         5
      89: bipush        52
      91: idiv
      92: iadd
      93: if_icmpge     227
      96: aload_0
      97: iload         10
      99: invokespecial #12                 // Method blockWidth:(I)I
     102: istore        11
     104: iload         10
     106: bipush        52
     108: imul
     109: istore        12
     111: iload         4
     113: iload         12
     115: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     118: istore        13
     120: iload         10
     122: iconst_1
     123: iadd
     124: bipush        52
     126: imul
     127: iconst_1
     128: iload         5
     130: iadd
     131: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     134: istore        14
     136: aload_0
     137: getfield      #7                  // Field blocks:[[D
     140: iload         6
     142: aload_0
     143: getfield      #5                  // Field blockColumns:I
     146: imul
     147: iload         10
     149: iadd
     150: aaload
     151: astore        15
     153: iload         8
     155: istore        16
     157: iload         16
     159: iload         9
     161: if_icmpge     221
     164: iload         16
     166: iload         7
     168: isub
     169: iload         11
     171: imul
     172: iload         13
     174: iadd
     175: iload         12
     177: isub
     178: istore        17
     180: iload         13
     182: istore        18
     184: iload         18
     186: iload         14
     188: if_icmpge     215
     191: aload_1
     192: iload         16
     194: iload         18
     196: aload         15
     198: iload         17
     200: daload
     201: invokeinterface #63,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.visit:(IID)V
     206: iinc          17, 1
     209: iinc          18, 1
     212: goto          184
     215: iinc          16, 1
     218: goto          157
     221: iinc          10, 1
     224: goto          84
     227: iinc          6, 1
     230: goto          36
     233: aload_1
     234: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrixPreservingVisitor.end:()D
     239: dreturn

  private int blockHeight(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field blockRows:I
       5: iconst_1
       6: isub
       7: if_icmpne     22
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iload_1
      15: bipush        52
      17: imul
      18: isub
      19: goto          24
      22: bipush        52
      24: ireturn

  private int blockWidth(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field blockColumns:I
       5: iconst_1
       6: isub
       7: if_icmpne     22
      10: aload_0
      11: getfield      #3                  // Field columns:I
      14: iload_1
      15: bipush        52
      17: imul
      18: isub
      19: goto          24
      22: bipush        52
      24: ireturn

  public org.apache.commons.math3.linear.RealMatrix copy();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method copy:()Lorg/apache/commons/math3/linear/BlockRealMatrix;
       4: areturn

  public org.apache.commons.math3.linear.RealMatrix createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #66                 // Method createMatrix:(II)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       6: areturn

  public org.apache.commons.math3.linear.RealMatrix transpose();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method transpose:()Lorg/apache/commons/math3/linear/BlockRealMatrix;
       4: areturn

  public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #68                 // Method getColumnMatrix:(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       5: areturn

  public org.apache.commons.math3.linear.RealMatrix getRowMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method getRowMatrix:(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       5: areturn

  public org.apache.commons.math3.linear.RealMatrix getSubMatrix(int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #70                 // Method getSubMatrix:(IIII)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       9: areturn

  public org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method multiply:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       5: areturn

  public org.apache.commons.math3.linear.RealMatrix scalarAdd(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #72                 // Method scalarAdd:(D)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       5: areturn

  public org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method subtract:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       5: areturn

  public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method add:(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
       5: areturn
}
