Compiled from "GradientMultivariateOptimizer.java"
public abstract class org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer extends org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer {
  private org.apache.commons.math3.analysis.MultivariateVectorFunction gradient;

  protected org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: return

  protected double[] computeObjectiveGradient(double[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field gradient:Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/analysis/MultivariateVectorFunction.value:([D)[D
      10: areturn

  public org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData...) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_0
       6: aload_1
       7: invokespecial #5                  // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
      10: areturn

  private void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     49
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: instanceof    #6                  // class org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient
      25: ifeq          43
      28: aload_0
      29: aload         5
      31: checkcast     #6                  // class org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient
      34: invokevirtual #7                  // Method org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient.getObjectiveFunctionGradient:()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
      37: putfield      #2                  // Field gradient:Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
      40: goto          49
      43: iinc          4, 1
      46: goto          8
      49: return

  public java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
       5: areturn
}
