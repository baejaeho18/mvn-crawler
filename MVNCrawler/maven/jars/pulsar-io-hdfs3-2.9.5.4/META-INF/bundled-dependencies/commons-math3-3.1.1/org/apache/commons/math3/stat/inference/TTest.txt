Compiled from "TTest.java"
public class org.apache.commons.math3.stat.inference.TTest {
  public org.apache.commons.math3.stat.inference.TTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public double pairedT(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method checkSampleData:([D)V
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method checkSampleData:([D)V
      10: aload_1
      11: aload_2
      12: invokestatic  #3                  // Method org/apache/commons/math3/stat/StatUtils.meanDifference:([D[D)D
      15: dstore_3
      16: aload_0
      17: dload_3
      18: dconst_0
      19: aload_1
      20: aload_2
      21: dload_3
      22: invokestatic  #4                  // Method org/apache/commons/math3/stat/StatUtils.varianceDifference:([D[DD)D
      25: aload_1
      26: arraylength
      27: i2d
      28: invokevirtual #5                  // Method t:(DDDD)D
      31: dreturn

  public double pairedTTest(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #3                  // Method org/apache/commons/math3/stat/StatUtils.meanDifference:([D[D)D
       5: dstore_3
       6: aload_0
       7: dload_3
       8: dconst_0
       9: aload_1
      10: aload_2
      11: dload_3
      12: invokestatic  #4                  // Method org/apache/commons/math3/stat/StatUtils.varianceDifference:([D[DD)D
      15: aload_1
      16: arraylength
      17: i2d
      18: invokevirtual #6                  // Method tTest:(DDDD)D
      21: dreturn

  public boolean pairedTTest(double[], double[], double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: dload_3
       2: invokespecial #7                  // Method checkSignificanceLevel:(D)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #8                  // Method pairedTTest:([D[D)D
      11: dload_3
      12: dcmpg
      13: ifge          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public double t(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #2                  // Method checkSampleData:([D)V
       5: aload_0
       6: aload_3
       7: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      10: dload_1
      11: aload_3
      12: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      15: aload_3
      16: arraylength
      17: i2d
      18: invokevirtual #5                  // Method t:(DDDD)D
      21: dreturn

  public double t(double, org.apache.commons.math3.stat.descriptive.StatisticalSummary) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
       5: aload_0
       6: aload_3
       7: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      12: dload_1
      13: aload_3
      14: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      19: aload_3
      20: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      25: l2d
      26: invokevirtual #5                  // Method t:(DDDD)D
      29: dreturn

  public double homoscedasticT(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method checkSampleData:([D)V
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method checkSampleData:([D)V
      10: aload_0
      11: aload_1
      12: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      15: aload_2
      16: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      19: aload_1
      20: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      23: aload_2
      24: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      27: aload_1
      28: arraylength
      29: i2d
      30: aload_2
      31: arraylength
      32: i2d
      33: invokevirtual #15                 // Method homoscedasticT:(DDDDDD)D
      36: dreturn

  public double t(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method checkSampleData:([D)V
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method checkSampleData:([D)V
      10: aload_0
      11: aload_1
      12: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      15: aload_2
      16: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      19: aload_1
      20: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      23: aload_2
      24: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      27: aload_1
      28: arraylength
      29: i2d
      30: aload_2
      31: arraylength
      32: i2d
      33: invokevirtual #16                 // Method t:(DDDDDD)D
      36: dreturn

  public double t(org.apache.commons.math3.stat.descriptive.StatisticalSummary, org.apache.commons.math3.stat.descriptive.StatisticalSummary) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
       5: aload_0
       6: aload_2
       7: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      23: aload_1
      24: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      29: aload_2
      30: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      35: aload_1
      36: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      41: l2d
      42: aload_2
      43: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      48: l2d
      49: invokevirtual #16                 // Method t:(DDDDDD)D
      52: dreturn

  public double homoscedasticT(org.apache.commons.math3.stat.descriptive.StatisticalSummary, org.apache.commons.math3.stat.descriptive.StatisticalSummary) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
       5: aload_0
       6: aload_2
       7: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      23: aload_1
      24: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      29: aload_2
      30: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      35: aload_1
      36: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      41: l2d
      42: aload_2
      43: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      48: l2d
      49: invokevirtual #15                 // Method homoscedasticT:(DDDDDD)D
      52: dreturn

  public double tTest(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #2                  // Method checkSampleData:([D)V
       5: aload_0
       6: aload_3
       7: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      10: dload_1
      11: aload_3
      12: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      15: aload_3
      16: arraylength
      17: i2d
      18: invokevirtual #6                  // Method tTest:(DDDD)D
      21: dreturn

  public boolean tTest(double, double[], double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: dload         4
       3: invokespecial #7                  // Method checkSignificanceLevel:(D)V
       6: aload_0
       7: dload_1
       8: aload_3
       9: invokevirtual #17                 // Method tTest:(D[D)D
      12: dload         4
      14: dcmpg
      15: ifge          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public double tTest(double, org.apache.commons.math3.stat.descriptive.StatisticalSummary) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
       5: aload_0
       6: aload_3
       7: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      12: dload_1
      13: aload_3
      14: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      19: aload_3
      20: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      25: l2d
      26: invokevirtual #6                  // Method tTest:(DDDD)D
      29: dreturn

  public boolean tTest(double, org.apache.commons.math3.stat.descriptive.StatisticalSummary, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: dload         4
       3: invokespecial #7                  // Method checkSignificanceLevel:(D)V
       6: aload_0
       7: dload_1
       8: aload_3
       9: invokevirtual #18                 // Method tTest:(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
      12: dload         4
      14: dcmpg
      15: ifge          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public double tTest(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method checkSampleData:([D)V
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method checkSampleData:([D)V
      10: aload_0
      11: aload_1
      12: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      15: aload_2
      16: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      19: aload_1
      20: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      23: aload_2
      24: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      27: aload_1
      28: arraylength
      29: i2d
      30: aload_2
      31: arraylength
      32: i2d
      33: invokevirtual #19                 // Method tTest:(DDDDDD)D
      36: dreturn

  public double homoscedasticTTest(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method checkSampleData:([D)V
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method checkSampleData:([D)V
      10: aload_0
      11: aload_1
      12: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      15: aload_2
      16: invokestatic  #9                  // Method org/apache/commons/math3/stat/StatUtils.mean:([D)D
      19: aload_1
      20: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      23: aload_2
      24: invokestatic  #10                 // Method org/apache/commons/math3/stat/StatUtils.variance:([D)D
      27: aload_1
      28: arraylength
      29: i2d
      30: aload_2
      31: arraylength
      32: i2d
      33: invokevirtual #20                 // Method homoscedasticTTest:(DDDDDD)D
      36: dreturn

  public boolean tTest(double[], double[], double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: dload_3
       2: invokespecial #7                  // Method checkSignificanceLevel:(D)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #21                 // Method tTest:([D[D)D
      11: dload_3
      12: dcmpg
      13: ifge          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean homoscedasticTTest(double[], double[], double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: dload_3
       2: invokespecial #7                  // Method checkSignificanceLevel:(D)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #22                 // Method homoscedasticTTest:([D[D)D
      11: dload_3
      12: dcmpg
      13: ifge          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public double tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary, org.apache.commons.math3.stat.descriptive.StatisticalSummary) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
       5: aload_0
       6: aload_2
       7: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      23: aload_1
      24: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      29: aload_2
      30: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      35: aload_1
      36: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      41: l2d
      42: aload_2
      43: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      48: l2d
      49: invokevirtual #19                 // Method tTest:(DDDDDD)D
      52: dreturn

  public double homoscedasticTTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary, org.apache.commons.math3.stat.descriptive.StatisticalSummary) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
       5: aload_0
       6: aload_2
       7: invokespecial #11                 // Method checkSampleData:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getMean:()D
      23: aload_1
      24: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      29: aload_2
      30: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getVariance:()D
      35: aload_1
      36: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      41: l2d
      42: aload_2
      43: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      48: l2d
      49: invokevirtual #20                 // Method homoscedasticTTest:(DDDDDD)D
      52: dreturn

  public boolean tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary, org.apache.commons.math3.stat.descriptive.StatisticalSummary, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: dload_3
       2: invokespecial #7                  // Method checkSignificanceLevel:(D)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #23                 // Method tTest:(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
      11: dload_3
      12: dcmpg
      13: ifge          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected double df(double, double, double, double);
    Code:
       0: dload_1
       1: dload         5
       3: ddiv
       4: dload_3
       5: dload         7
       7: ddiv
       8: dadd
       9: dload_1
      10: dload         5
      12: ddiv
      13: dload_3
      14: dload         7
      16: ddiv
      17: dadd
      18: dmul
      19: dload_1
      20: dload_1
      21: dmul
      22: dload         5
      24: dload         5
      26: dmul
      27: dload         5
      29: dconst_1
      30: dsub
      31: dmul
      32: ddiv
      33: dload_3
      34: dload_3
      35: dmul
      36: dload         7
      38: dload         7
      40: dmul
      41: dload         7
      43: dconst_1
      44: dsub
      45: dmul
      46: ddiv
      47: dadd
      48: ddiv
      49: dreturn

  protected double t(double, double, double, double);
    Code:
       0: dload_1
       1: dload_3
       2: dsub
       3: dload         5
       5: dload         7
       7: ddiv
       8: invokestatic  #24                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      11: ddiv
      12: dreturn

  protected double t(double, double, double, double, double, double);
    Code:
       0: dload_1
       1: dload_3
       2: dsub
       3: dload         5
       5: dload         9
       7: ddiv
       8: dload         7
      10: dload         11
      12: ddiv
      13: dadd
      14: invokestatic  #24                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      17: ddiv
      18: dreturn

  protected double homoscedasticT(double, double, double, double, double, double);
    Code:
       0: dload         9
       2: dconst_1
       3: dsub
       4: dload         5
       6: dmul
       7: dload         11
       9: dconst_1
      10: dsub
      11: dload         7
      13: dmul
      14: dadd
      15: dload         9
      17: dload         11
      19: dadd
      20: ldc2_w        #25                 // double 2.0d
      23: dsub
      24: ddiv
      25: dstore        13
      27: dload_1
      28: dload_3
      29: dsub
      30: dload         13
      32: dconst_1
      33: dload         9
      35: ddiv
      36: dconst_1
      37: dload         11
      39: ddiv
      40: dadd
      41: dmul
      42: invokestatic  #24                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      45: ddiv
      46: dreturn

  protected double tTest(double, double, double, double) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: dload         7
       7: invokevirtual #5                  // Method t:(DDDD)D
      10: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      13: dstore        9
      15: new           #28                 // class org/apache/commons/math3/distribution/TDistribution
      18: dup
      19: dload         7
      21: dconst_1
      22: dsub
      23: invokespecial #29                 // Method org/apache/commons/math3/distribution/TDistribution."<init>":(D)V
      26: astore        11
      28: ldc2_w        #25                 // double 2.0d
      31: aload         11
      33: dload         9
      35: dneg
      36: invokevirtual #30                 // Method org/apache/commons/math3/distribution/TDistribution.cumulativeProbability:(D)D
      39: dmul
      40: dreturn

  protected double tTest(double, double, double, double, double, double) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: dload         7
       7: dload         9
       9: dload         11
      11: invokevirtual #16                 // Method t:(DDDDDD)D
      14: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      17: dstore        13
      19: aload_0
      20: dload         5
      22: dload         7
      24: dload         9
      26: dload         11
      28: invokevirtual #31                 // Method df:(DDDD)D
      31: dstore        15
      33: new           #28                 // class org/apache/commons/math3/distribution/TDistribution
      36: dup
      37: dload         15
      39: invokespecial #29                 // Method org/apache/commons/math3/distribution/TDistribution."<init>":(D)V
      42: astore        17
      44: ldc2_w        #25                 // double 2.0d
      47: aload         17
      49: dload         13
      51: dneg
      52: invokevirtual #30                 // Method org/apache/commons/math3/distribution/TDistribution.cumulativeProbability:(D)D
      55: dmul
      56: dreturn

  protected double homoscedasticTTest(double, double, double, double, double, double) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: dload         7
       7: dload         9
       9: dload         11
      11: invokevirtual #15                 // Method homoscedasticT:(DDDDDD)D
      14: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      17: dstore        13
      19: dload         9
      21: dload         11
      23: dadd
      24: ldc2_w        #25                 // double 2.0d
      27: dsub
      28: dstore        15
      30: new           #28                 // class org/apache/commons/math3/distribution/TDistribution
      33: dup
      34: dload         15
      36: invokespecial #29                 // Method org/apache/commons/math3/distribution/TDistribution."<init>":(D)V
      39: astore        17
      41: ldc2_w        #25                 // double 2.0d
      44: aload         17
      46: dload         13
      48: dneg
      49: invokevirtual #30                 // Method org/apache/commons/math3/distribution/TDistribution.cumulativeProbability:(D)D
      52: dmul
      53: dreturn

  private void checkSignificanceLevel(double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: ifle          14
       6: dload_1
       7: ldc2_w        #32                 // double 0.5d
      10: dcmpl
      11: ifle          39
      14: new           #34                 // class org/apache/commons/math3/exception/OutOfRangeException
      17: dup
      18: getstatic     #35                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.SIGNIFICANCE_LEVEL:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      21: dload_1
      22: invokestatic  #36                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      25: dconst_0
      26: invokestatic  #36                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      29: ldc2_w        #32                 // double 0.5d
      32: invokestatic  #36                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      35: invokespecial #37                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      38: athrow
      39: return

  private void checkSampleData(double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #38                 // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: invokespecial #39                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      11: athrow
      12: aload_1
      13: arraylength
      14: iconst_2
      15: if_icmpge     39
      18: new           #40                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      21: dup
      22: getstatic     #41                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INSUFFICIENT_DATA_FOR_T_STATISTIC:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      25: aload_1
      26: arraylength
      27: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: iconst_2
      31: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: iconst_1
      35: invokespecial #43                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      38: athrow
      39: return

  private void checkSampleData(org.apache.commons.math3.stat.descriptive.StatisticalSummary) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #38                 // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: invokespecial #39                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      11: athrow
      12: aload_1
      13: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      18: ldc2_w        #44                 // long 2l
      21: lcmp
      22: ifge          50
      25: new           #40                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      28: dup
      29: getstatic     #41                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INSUFFICIENT_DATA_FOR_T_STATISTIC:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      32: aload_1
      33: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/stat/descriptive/StatisticalSummary.getN:()J
      38: invokestatic  #46                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: iconst_2
      42: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: iconst_1
      46: invokespecial #43                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      49: athrow
      50: return
}
