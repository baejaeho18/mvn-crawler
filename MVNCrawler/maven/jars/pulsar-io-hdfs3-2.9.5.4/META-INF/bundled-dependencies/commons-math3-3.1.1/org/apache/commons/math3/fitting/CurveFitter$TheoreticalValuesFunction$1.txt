Compiled from "CurveFitter.java"
class org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1 implements org.apache.commons.math3.analysis.MultivariateVectorFunction {
  final org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction this$1;

  org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1(org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public double[] value(double[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
       4: getfield      #3                  // Field org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.this$0:Lorg/apache/commons/math3/fitting/CurveFitter;
       7: invokestatic  #4                  // Method org/apache/commons/math3/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/fitting/CurveFitter;)Ljava/util/List;
      10: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      15: newarray       double
      17: astore_2
      18: iconst_0
      19: istore_3
      20: aload_0
      21: getfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
      24: getfield      #3                  // Field org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.this$0:Lorg/apache/commons/math3/fitting/CurveFitter;
      27: invokestatic  #4                  // Method org/apache/commons/math3/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/fitting/CurveFitter;)Ljava/util/List;
      30: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          86
      47: aload         4
      49: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #9                  // class org/apache/commons/math3/fitting/WeightedObservedPoint
      57: astore        5
      59: aload_2
      60: iload_3
      61: iinc          3, 1
      64: aload_0
      65: getfield      #1                  // Field this$1:Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;
      68: invokestatic  #10                 // Method org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.access$100:(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
      71: aload         5
      73: invokevirtual #11                 // Method org/apache/commons/math3/fitting/WeightedObservedPoint.getX:()D
      76: aload_1
      77: invokeinterface #12,  4           // InterfaceMethod org/apache/commons/math3/analysis/ParametricUnivariateFunction.value:(D[D)D
      82: dastore
      83: goto          37
      86: aload_2
      87: areturn
}
