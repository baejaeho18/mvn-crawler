Compiled from "UnivariateOptimizer.java"
public abstract class org.apache.commons.math3.optim.univariate.UnivariateOptimizer extends org.apache.commons.math3.optim.BaseOptimizer<org.apache.commons.math3.optim.univariate.UnivariatePointValuePair> {
  private org.apache.commons.math3.analysis.UnivariateFunction function;

  private org.apache.commons.math3.optim.nonlinear.scalar.GoalType goal;

  private double start;

  private double min;

  private double max;

  protected org.apache.commons.math3.optim.univariate.UnivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.univariate.UnivariatePointValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/optim/BaseOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: return

  public org.apache.commons.math3.optim.univariate.UnivariatePointValuePair optimize(org.apache.commons.math3.optim.OptimizationData...) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method org/apache/commons/math3/optim/BaseOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
      10: checkcast     #4                  // class org/apache/commons/math3/optim/univariate/UnivariatePointValuePair
      13: areturn

  public org.apache.commons.math3.optim.nonlinear.scalar.GoalType getGoalType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field goal:Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
       4: areturn

  private void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     114
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: instanceof    #6                  // class org/apache/commons/math3/optim/univariate/SearchInterval
      25: ifeq          65
      28: aload         5
      30: checkcast     #6                  // class org/apache/commons/math3/optim/univariate/SearchInterval
      33: astore        6
      35: aload_0
      36: aload         6
      38: invokevirtual #7                  // Method org/apache/commons/math3/optim/univariate/SearchInterval.getMin:()D
      41: putfield      #8                  // Field min:D
      44: aload_0
      45: aload         6
      47: invokevirtual #9                  // Method org/apache/commons/math3/optim/univariate/SearchInterval.getMax:()D
      50: putfield      #10                 // Field max:D
      53: aload_0
      54: aload         6
      56: invokevirtual #11                 // Method org/apache/commons/math3/optim/univariate/SearchInterval.getStartValue:()D
      59: putfield      #12                 // Field start:D
      62: goto          108
      65: aload         5
      67: instanceof    #13                 // class org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction
      70: ifeq          88
      73: aload_0
      74: aload         5
      76: checkcast     #13                 // class org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction
      79: invokevirtual #14                 // Method org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction.getObjectiveFunction:()Lorg/apache/commons/math3/analysis/UnivariateFunction;
      82: putfield      #15                 // Field function:Lorg/apache/commons/math3/analysis/UnivariateFunction;
      85: goto          108
      88: aload         5
      90: instanceof    #16                 // class org/apache/commons/math3/optim/nonlinear/scalar/GoalType
      93: ifeq          108
      96: aload_0
      97: aload         5
      99: checkcast     #16                 // class org/apache/commons/math3/optim/nonlinear/scalar/GoalType
     102: putfield      #5                  // Field goal:Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
     105: goto          108
     108: iinc          4, 1
     111: goto          8
     114: return

  public double getStartValue();
    Code:
       0: aload_0
       1: getfield      #12                 // Field start:D
       4: dreturn

  public double getMin();
    Code:
       0: aload_0
       1: getfield      #8                  // Field min:D
       4: dreturn

  public double getMax();
    Code:
       0: aload_0
       1: getfield      #10                 // Field max:D
       4: dreturn

  protected double computeObjectiveValue(double);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/commons/math3/optim/BaseOptimizer.incrementEvaluationCount:()V
       4: aload_0
       5: getfield      #15                 // Field function:Lorg/apache/commons/math3/analysis/UnivariateFunction;
       8: dload_1
       9: invokeinterface #18,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
      14: dreturn

  public java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.TooManyIterationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
       5: areturn
}
