Compiled from "OutlineExtractor.java"
public class org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor {
  private org.apache.commons.math3.geometry.euclidean.threed.Vector3D u;

  private org.apache.commons.math3.geometry.euclidean.threed.Vector3D v;

  private org.apache.commons.math3.geometry.euclidean.threed.Vector3D w;

  public org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field u:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field v:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokestatic  #5                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D.crossProduct:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      20: putfield      #3                  // Field w:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      23: return

  public org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] getOutline(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet);
    Code:
       0: new           #6                  // class org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor$BoundaryProjector
       3: dup
       4: aload_0
       5: invokespecial #7                  // Method org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor$BoundaryProjector."<init>":(Lorg/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor;)V
       8: astore_2
       9: aload_1
      10: iconst_1
      11: invokevirtual #8                  // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.getTree:(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
      14: aload_2
      15: invokevirtual #9                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.visit:(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
      18: aload_2
      19: invokevirtual #10                 // Method org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor$BoundaryProjector.getProjected:()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;
      22: astore_3
      23: aload_3
      24: invokevirtual #11                 // Method org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.getVertices:()[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      27: astore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: aload         4
      36: arraylength
      37: if_icmpge     156
      40: aload         4
      42: iload         5
      44: aaload
      45: astore        6
      47: aload         6
      49: arraylength
      50: istore        7
      52: iconst_0
      53: istore        8
      55: iload         8
      57: iload         7
      59: if_icmpge     118
      62: aload_0
      63: aload         6
      65: iload         7
      67: iload         8
      69: invokespecial #12                 // Method pointIsBetween:([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;II)Z
      72: ifeq          112
      75: iload         8
      77: istore        9
      79: iload         9
      81: iload         7
      83: iconst_1
      84: isub
      85: if_icmpge     106
      88: aload         6
      90: iload         9
      92: aload         6
      94: iload         9
      96: iconst_1
      97: iadd
      98: aaload
      99: aastore
     100: iinc          9, 1
     103: goto          79
     106: iinc          7, -1
     109: goto          55
     112: iinc          8, 1
     115: goto          55
     118: iload         7
     120: aload         6
     122: arraylength
     123: if_icmpeq     150
     126: aload         4
     128: iload         5
     130: iload         7
     132: anewarray     #13                 // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
     135: aastore
     136: aload         6
     138: iconst_0
     139: aload         4
     141: iload         5
     143: aaload
     144: iconst_0
     145: iload         7
     147: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     150: iinc          5, 1
     153: goto          32
     156: aload         4
     158: areturn

  private boolean pointIsBetween(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[], int, int);
    Code:
       0: aload_1
       1: iload_3
       2: iload_2
       3: iadd
       4: iconst_1
       5: isub
       6: iload_2
       7: irem
       8: aaload
       9: astore        4
      11: aload_1
      12: iload_3
      13: aaload
      14: astore        5
      16: aload_1
      17: iload_3
      18: iconst_1
      19: iadd
      20: iload_2
      21: irem
      22: aaload
      23: astore        6
      25: aload         5
      27: invokevirtual #15                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
      30: aload         4
      32: invokevirtual #15                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
      35: dsub
      36: dstore        7
      38: aload         5
      40: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      43: aload         4
      45: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      48: dsub
      49: dstore        9
      51: aload         6
      53: invokevirtual #15                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
      56: aload         5
      58: invokevirtual #15                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
      61: dsub
      62: dstore        11
      64: aload         6
      66: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      69: aload         5
      71: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      74: dsub
      75: dstore        13
      77: dload         7
      79: dload         13
      81: dmul
      82: dload         11
      84: dload         9
      86: dmul
      87: dsub
      88: dstore        15
      90: dload         7
      92: dload         11
      94: dmul
      95: dload         9
      97: dload         13
      99: dmul
     100: dadd
     101: dstore        17
     103: dload         7
     105: dload         7
     107: dmul
     108: dload         9
     110: dload         9
     112: dmul
     113: dadd
     114: dload         11
     116: dload         11
     118: dmul
     119: dload         13
     121: dload         13
     123: dmul
     124: dadd
     125: dmul
     126: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     129: dstore        19
     131: dload         15
     133: invokestatic  #18                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     136: ldc2_w        #19                 // double 1.0E-6d
     139: dload         19
     141: dmul
     142: dcmpg
     143: ifgt          157
     146: dload         17
     148: dconst_0
     149: dcmpl
     150: iflt          157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: ireturn

  static org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$000(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field w:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       4: areturn

  static org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$100(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field u:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       4: areturn

  static org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$200(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field v:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       4: areturn
}
