Compiled from "DerivativeStructure.java"
public class org.apache.commons.math3.analysis.differentiation.DerivativeStructure implements org.apache.commons.math3.FieldElement<org.apache.commons.math3.analysis.differentiation.DerivativeStructure>, java.io.Serializable {
  private static final long serialVersionUID;

  private transient org.apache.commons.math3.analysis.differentiation.DSCompiler compiler;

  private final double[] data;

  private org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getSize:()I
      14: newarray       double
      16: putfield      #4                  // Field data:[D
      19: return

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #5                  // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getCompiler:(II)Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       6: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
       9: return

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int, double);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #7                  // Method "<init>":(II)V
       6: aload_0
       7: getfield      #4                  // Field data:[D
      10: iconst_0
      11: dload_3
      12: dastore
      13: return

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int, int, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: dload         4
       5: invokespecial #8                  // Method "<init>":(IID)V
       8: iload_3
       9: iload_1
      10: if_icmplt     30
      13: new           #9                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      16: dup
      17: iload_3
      18: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: iload_1
      22: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: iconst_0
      26: invokespecial #11                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      29: athrow
      30: iload_2
      31: ifle          48
      34: aload_0
      35: getfield      #4                  // Field data:[D
      38: iload_3
      39: iload_2
      40: invokestatic  #5                  // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getCompiler:(II)Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      43: invokevirtual #3                  // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getSize:()I
      46: dconst_1
      47: dastore
      48: return

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_3
       2: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       5: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
       8: aload_0
       9: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      12: aload         6
      14: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      17: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      20: aload_0
      21: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      24: dload_1
      25: aload_3
      26: getfield      #4                  // Field data:[D
      29: iconst_0
      30: dload         4
      32: aload         6
      34: getfield      #4                  // Field data:[D
      37: iconst_0
      38: aload_0
      39: getfield      #4                  // Field data:[D
      42: iconst_0
      43: invokevirtual #13                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.linearCombination:(D[DID[DI[DI)V
      46: return

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_3
       2: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       5: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
       8: aload_0
       9: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      12: aload         6
      14: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      17: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      20: aload_0
      21: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      24: aload         9
      26: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      29: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      32: aload_0
      33: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      36: dload_1
      37: aload_3
      38: getfield      #4                  // Field data:[D
      41: iconst_0
      42: dload         4
      44: aload         6
      46: getfield      #4                  // Field data:[D
      49: iconst_0
      50: dload         7
      52: aload         9
      54: getfield      #4                  // Field data:[D
      57: iconst_0
      58: aload_0
      59: getfield      #4                  // Field data:[D
      62: iconst_0
      63: invokevirtual #14                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.linearCombination:(D[DID[DID[DI[DI)V
      66: return

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_3
       2: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       5: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
       8: aload_0
       9: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      12: aload         6
      14: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      17: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      20: aload_0
      21: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      24: aload         9
      26: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      29: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      32: aload_0
      33: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      36: aload         12
      38: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      41: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      44: aload_0
      45: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      48: dload_1
      49: aload_3
      50: getfield      #4                  // Field data:[D
      53: iconst_0
      54: dload         4
      56: aload         6
      58: getfield      #4                  // Field data:[D
      61: iconst_0
      62: dload         7
      64: aload         9
      66: getfield      #4                  // Field data:[D
      69: iconst_0
      70: dload         10
      72: aload         12
      74: getfield      #4                  // Field data:[D
      77: iconst_0
      78: aload_0
      79: getfield      #4                  // Field data:[D
      82: iconst_0
      83: invokevirtual #15                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.linearCombination:(D[DID[DID[DID[DI[DI)V
      86: return

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int, double...) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #7                  // Method "<init>":(II)V
       6: aload_3
       7: arraylength
       8: aload_0
       9: getfield      #4                  // Field data:[D
      12: arraylength
      13: if_icmpeq     31
      16: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      19: dup
      20: aload_3
      21: arraylength
      22: aload_0
      23: getfield      #4                  // Field data:[D
      26: arraylength
      27: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      30: athrow
      31: aload_3
      32: iconst_0
      33: aload_0
      34: getfield      #4                  // Field data:[D
      37: iconst_0
      38: aload_0
      39: getfield      #4                  // Field data:[D
      42: arraylength
      43: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: return

  private org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       9: putfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      12: aload_0
      13: aload_1
      14: getfield      #4                  // Field data:[D
      17: invokevirtual #19                 // Method "[D".clone:()Ljava/lang/Object;
      20: checkcast     #20                 // class "[D"
      23: putfield      #4                  // Field data:[D
      26: return

  public int getFreeParameters();
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
       7: ireturn

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: invokevirtual #22                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getOrder:()I
       7: ireturn

  public double getValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[D
       4: iconst_0
       5: daload
       6: dreturn

  public double getPartialDerivative(int...) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[D
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: aload_1
       9: invokevirtual #23                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getPartialDerivativeIndex:([I)I
      12: daload
      13: dreturn

  public double[] getAllDerivatives();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[D
       4: invokevirtual #24                 // Method "[D".clone:()Ljava/lang/Object;
       7: checkcast     #20                 // class "[D"
      10: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure add(double);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
       8: astore_3
       9: aload_3
      10: getfield      #4                  // Field data:[D
      13: iconst_0
      14: dup2
      15: daload
      16: dload_1
      17: dadd
      18: dastore
      19: aload_3
      20: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      14: dup
      15: aload_0
      16: invokespecial #26                 // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
      19: astore_2
      20: aload_0
      21: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      24: aload_0
      25: getfield      #4                  // Field data:[D
      28: iconst_0
      29: aload_1
      30: getfield      #4                  // Field data:[D
      33: iconst_0
      34: aload_2
      35: getfield      #4                  // Field data:[D
      38: iconst_0
      39: invokevirtual #27                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.add:([DI[DI[DI)V
      42: aload_2
      43: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure subtract(double);
    Code:
       0: aload_0
       1: dload_1
       2: dneg
       3: invokevirtual #28                 // Method add:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       6: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      14: dup
      15: aload_0
      16: invokespecial #26                 // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
      19: astore_2
      20: aload_0
      21: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      24: aload_0
      25: getfield      #4                  // Field data:[D
      28: iconst_0
      29: aload_1
      30: getfield      #4                  // Field data:[D
      33: iconst_0
      34: aload_2
      35: getfield      #4                  // Field data:[D
      38: iconst_0
      39: invokevirtual #29                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.subtract:([DI[DI[DI)V
      42: aload_2
      43: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2d
       3: invokevirtual #30                 // Method multiply:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       6: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(double);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: aload_3
      15: getfield      #4                  // Field data:[D
      18: arraylength
      19: if_icmpge     39
      22: aload_3
      23: getfield      #4                  // Field data:[D
      26: iload         4
      28: dup2
      29: daload
      30: dload_1
      31: dmul
      32: dastore
      33: iinc          4, 1
      36: goto          12
      39: aload_3
      40: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      14: dup
      15: aload_0
      16: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      19: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      22: astore_2
      23: aload_0
      24: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      27: aload_0
      28: getfield      #4                  // Field data:[D
      31: iconst_0
      32: aload_1
      33: getfield      #4                  // Field data:[D
      36: iconst_0
      37: aload_2
      38: getfield      #4                  // Field data:[D
      41: iconst_0
      42: invokevirtual #31                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.multiply:([DI[DI[DI)V
      45: aload_2
      46: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure divide(double);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: aload_3
      15: getfield      #4                  // Field data:[D
      18: arraylength
      19: if_icmpge     39
      22: aload_3
      23: getfield      #4                  // Field data:[D
      26: iload         4
      28: dup2
      29: daload
      30: dload_1
      31: ddiv
      32: dastore
      33: iinc          4, 1
      36: goto          12
      39: aload_3
      40: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      14: dup
      15: aload_0
      16: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      19: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      22: astore_2
      23: aload_0
      24: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      27: aload_0
      28: getfield      #4                  // Field data:[D
      31: iconst_0
      32: aload_1
      33: getfield      #4                  // Field data:[D
      36: iconst_0
      37: aload_2
      38: getfield      #4                  // Field data:[D
      41: iconst_0
      42: invokevirtual #32                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.divide:([DI[DI[DI)V
      45: aload_2
      46: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure remainder(double);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
       8: astore_3
       9: aload_3
      10: getfield      #4                  // Field data:[D
      13: iconst_0
      14: aload_3
      15: getfield      #4                  // Field data:[D
      18: iconst_0
      19: daload
      20: dload_1
      21: drem
      22: dastore
      23: aload_3
      24: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure remainder(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      14: dup
      15: aload_0
      16: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      19: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      22: astore_2
      23: aload_0
      24: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      27: aload_0
      28: getfield      #4                  // Field data:[D
      31: iconst_0
      32: aload_1
      33: getfield      #4                  // Field data:[D
      36: iconst_0
      37: aload_2
      38: getfield      #4                  // Field data:[D
      41: iconst_0
      42: invokevirtual #33                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.remainder:([DI[DI[DI)V
      45: aload_2
      46: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure negate();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_1
      16: getfield      #4                  // Field data:[D
      19: arraylength
      20: if_icmpge     42
      23: aload_1
      24: getfield      #4                  // Field data:[D
      27: iload_2
      28: aload_0
      29: getfield      #4                  // Field data:[D
      32: iload_2
      33: daload
      34: dneg
      35: dastore
      36: iinc          2, 1
      39: goto          14
      42: aload_1
      43: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure abs();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[D
       4: iconst_0
       5: daload
       6: invokestatic  #34                 // Method java/lang/Double.doubleToLongBits:(D)J
       9: lconst_0
      10: lcmp
      11: ifge          19
      14: aload_0
      15: invokevirtual #35                 // Method negate:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      18: areturn
      19: aload_0
      20: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure ceil();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      11: aload_0
      12: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      15: invokevirtual #22                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getOrder:()I
      18: aload_0
      19: getfield      #4                  // Field data:[D
      22: iconst_0
      23: daload
      24: invokestatic  #36                 // Method org/apache/commons/math3/util/FastMath.ceil:(D)D
      27: invokespecial #8                  // Method "<init>":(IID)V
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure floor();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      11: aload_0
      12: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      15: invokevirtual #22                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getOrder:()I
      18: aload_0
      19: getfield      #4                  // Field data:[D
      22: iconst_0
      23: daload
      24: invokestatic  #37                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      27: invokespecial #8                  // Method "<init>":(IID)V
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure rint();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      11: aload_0
      12: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      15: invokevirtual #22                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getOrder:()I
      18: aload_0
      19: getfield      #4                  // Field data:[D
      22: iconst_0
      23: daload
      24: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.rint:(D)D
      27: invokespecial #8                  // Method "<init>":(IID)V
      30: areturn

  public long round();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[D
       4: iconst_0
       5: daload
       6: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.round:(D)J
       9: lreturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure signum();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      11: aload_0
      12: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      15: invokevirtual #22                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getOrder:()I
      18: aload_0
      19: getfield      #4                  // Field data:[D
      22: iconst_0
      23: daload
      24: invokestatic  #40                 // Method org/apache/commons/math3/util/FastMath.signum:(D)D
      27: invokespecial #8                  // Method "<init>":(IID)V
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure copySign(double);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[D
       4: iconst_0
       5: daload
       6: invokestatic  #34                 // Method java/lang/Double.doubleToLongBits:(D)J
       9: lstore_3
      10: dload_1
      11: invokestatic  #34                 // Method java/lang/Double.doubleToLongBits:(D)J
      14: lstore        5
      16: lload_3
      17: lconst_0
      18: lcmp
      19: iflt          29
      22: lload         5
      24: lconst_0
      25: lcmp
      26: ifge          42
      29: lload_3
      30: lconst_0
      31: lcmp
      32: ifge          44
      35: lload         5
      37: lconst_0
      38: lcmp
      39: ifge          44
      42: aload_0
      43: areturn
      44: aload_0
      45: invokevirtual #35                 // Method negate:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      48: areturn

  public int getExponent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[D
       4: iconst_0
       5: daload
       6: invokestatic  #41                 // Method org/apache/commons/math3/util/FastMath.getExponent:(D)I
       9: ireturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure scalb(int);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: aload_2
      16: getfield      #4                  // Field data:[D
      19: arraylength
      20: if_icmpge     45
      23: aload_2
      24: getfield      #4                  // Field data:[D
      27: iload_3
      28: aload_0
      29: getfield      #4                  // Field data:[D
      32: iload_3
      33: daload
      34: iload_1
      35: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.scalb:(DI)D
      38: dastore
      39: iinc          3, 1
      42: goto          14
      45: aload_2
      46: areturn

  public static org.apache.commons.math3.analysis.differentiation.DerivativeStructure hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: aload_0
      12: getfield      #4                  // Field data:[D
      15: iconst_0
      16: daload
      17: invokestatic  #43                 // Method java/lang/Double.isInfinite:(D)Z
      20: ifne          35
      23: aload_1
      24: getfield      #4                  // Field data:[D
      27: iconst_0
      28: daload
      29: invokestatic  #43                 // Method java/lang/Double.isInfinite:(D)Z
      32: ifeq          60
      35: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      38: dup
      39: aload_0
      40: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      43: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      46: aload_0
      47: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      50: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      53: ldc2_w        #44                 // double Infinityd
      56: invokespecial #8                  // Method "<init>":(IID)V
      59: areturn
      60: aload_0
      61: getfield      #4                  // Field data:[D
      64: iconst_0
      65: daload
      66: invokestatic  #46                 // Method java/lang/Double.isNaN:(D)Z
      69: ifne          84
      72: aload_1
      73: getfield      #4                  // Field data:[D
      76: iconst_0
      77: daload
      78: invokestatic  #46                 // Method java/lang/Double.isNaN:(D)Z
      81: ifeq          109
      84: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      87: dup
      88: aload_0
      89: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      92: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      95: aload_0
      96: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      99: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
     102: ldc2_w        #47                 // double NaNd
     105: invokespecial #8                  // Method "<init>":(IID)V
     108: areturn
     109: aload_0
     110: invokevirtual #49                 // Method getExponent:()I
     113: istore_2
     114: aload_1
     115: invokevirtual #49                 // Method getExponent:()I
     118: istore_3
     119: iload_2
     120: iload_3
     121: bipush        27
     123: iadd
     124: if_icmple     132
     127: aload_0
     128: invokevirtual #50                 // Method abs:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     131: areturn
     132: iload_3
     133: iload_2
     134: bipush        27
     136: iadd
     137: if_icmple     145
     140: aload_1
     141: invokevirtual #50                 // Method abs:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     144: areturn
     145: iload_2
     146: iload_3
     147: iadd
     148: iconst_2
     149: idiv
     150: istore        4
     152: aload_0
     153: iload         4
     155: ineg
     156: invokevirtual #51                 // Method scalb:(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     159: astore        5
     161: aload_1
     162: iload         4
     164: ineg
     165: invokevirtual #51                 // Method scalb:(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     168: astore        6
     170: aload         5
     172: aload         5
     174: invokevirtual #52                 // Method multiply:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     177: aload         6
     179: aload         6
     181: invokevirtual #52                 // Method multiply:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     184: invokevirtual #53                 // Method add:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     187: invokevirtual #54                 // Method sqrt:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     190: astore        7
     192: aload         7
     194: iload         4
     196: invokevirtual #51                 // Method scalb:(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     199: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure compose(double...);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: invokevirtual #55                 // Method getOrder:()I
       6: iconst_1
       7: iadd
       8: if_icmpeq     27
      11: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      14: dup
      15: aload_1
      16: arraylength
      17: aload_0
      18: invokevirtual #55                 // Method getOrder:()I
      21: iconst_1
      22: iadd
      23: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      26: athrow
      27: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      30: dup
      31: aload_0
      32: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      35: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      38: astore_2
      39: aload_0
      40: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      43: aload_0
      44: getfield      #4                  // Field data:[D
      47: iconst_0
      48: aload_1
      49: aload_2
      50: getfield      #4                  // Field data:[D
      53: iconst_0
      54: invokevirtual #56                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.compose:([DI[D[DI)V
      57: aload_2
      58: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure reciprocal();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: iconst_m1
      22: aload_1
      23: getfield      #4                  // Field data:[D
      26: iconst_0
      27: invokevirtual #57                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.pow:([DII[DI)V
      30: aload_1
      31: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure sqrt();
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #58                 // Method rootN:(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       5: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure cbrt();
    Code:
       0: aload_0
       1: iconst_3
       2: invokevirtual #58                 // Method rootN:(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       5: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure rootN(int);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_2
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: iload_1
      22: aload_2
      23: getfield      #4                  // Field data:[D
      26: iconst_0
      27: invokevirtual #59                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.rootN:([DII[DI)V
      30: aload_2
      31: areturn

  public org.apache.commons.math3.Field<org.apache.commons.math3.analysis.differentiation.DerivativeStructure> getField();
    Code:
       0: new           #60                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure$1
       3: dup
       4: aload_0
       5: invokespecial #61                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure$1."<init>":(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
       8: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(double);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_3
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: dload_1
      22: aload_3
      23: getfield      #4                  // Field data:[D
      26: iconst_0
      27: invokevirtual #62                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.pow:([DID[DI)V
      30: aload_3
      31: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(int);
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_2
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: iload_1
      22: aload_2
      23: getfield      #4                  // Field data:[D
      26: iconst_0
      27: invokevirtual #57                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.pow:([DII[DI)V
      30: aload_2
      31: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      14: dup
      15: aload_0
      16: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      19: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      22: astore_2
      23: aload_0
      24: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      27: aload_0
      28: getfield      #4                  // Field data:[D
      31: iconst_0
      32: aload_1
      33: getfield      #4                  // Field data:[D
      36: iconst_0
      37: aload_2
      38: getfield      #4                  // Field data:[D
      41: iconst_0
      42: invokevirtual #63                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.pow:([DI[DI[DI)V
      45: aload_2
      46: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure exp();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #64                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.exp:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure expm1();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #65                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.expm1:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure log();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #66                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.log:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure log1p();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #67                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.log1p:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure log10();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #68                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.log10:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure cos();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #69                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.cos:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure sin();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #70                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.sin:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure tan();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #71                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.tan:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure acos();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #72                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.acos:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure asin();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #73                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.asin:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure atan();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #74                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.atan:([DI[DI)V
      29: aload_1
      30: areturn

  public static org.apache.commons.math3.analysis.differentiation.DerivativeStructure atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_1
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.checkCompatibility:(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      14: dup
      15: aload_0
      16: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      19: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      22: astore_2
      23: aload_0
      24: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      27: aload_0
      28: getfield      #4                  // Field data:[D
      31: iconst_0
      32: aload_1
      33: getfield      #4                  // Field data:[D
      36: iconst_0
      37: aload_2
      38: getfield      #4                  // Field data:[D
      41: iconst_0
      42: invokevirtual #75                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.atan2:([DI[DI[DI)V
      45: aload_2
      46: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure cosh();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #76                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.cosh:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure sinh();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #77                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.sinh:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure tanh();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #78                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.tanh:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure acosh();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #79                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.acosh:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure asinh();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #80                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.asinh:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure atanh();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: aload_0
      13: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      16: aload_0
      17: getfield      #4                  // Field data:[D
      20: iconst_0
      21: aload_1
      22: getfield      #4                  // Field data:[D
      25: iconst_0
      26: invokevirtual #81                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.atanh:([DI[DI)V
      29: aload_1
      30: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure toDegrees();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_1
      16: getfield      #4                  // Field data:[D
      19: arraylength
      20: if_icmpge     44
      23: aload_1
      24: getfield      #4                  // Field data:[D
      27: iload_2
      28: aload_0
      29: getfield      #4                  // Field data:[D
      32: iload_2
      33: daload
      34: invokestatic  #82                 // Method org/apache/commons/math3/util/FastMath.toDegrees:(D)D
      37: dastore
      38: iinc          2, 1
      41: goto          14
      44: aload_1
      45: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure toRadians();
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_1
      16: getfield      #4                  // Field data:[D
      19: arraylength
      20: if_icmpge     44
      23: aload_1
      24: getfield      #4                  // Field data:[D
      27: iload_2
      28: aload_0
      29: getfield      #4                  // Field data:[D
      32: iload_2
      33: daload
      34: invokestatic  #83                 // Method org/apache/commons/math3/util/FastMath.toRadians:(D)D
      37: dastore
      38: iinc          2, 1
      41: goto          14
      44: aload_1
      45: areturn

  public double taylor(double...);
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: aload_0
       5: getfield      #4                  // Field data:[D
       8: iconst_0
       9: aload_1
      10: invokevirtual #84                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.taylor:([DI[D)D
      13: dreturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #85                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure$DataTransferObject
       3: dup
       4: aload_0
       5: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       8: invokevirtual #21                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getFreeParameters:()I
      11: aload_0
      12: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
      15: invokevirtual #22                 // Method org/apache/commons/math3/analysis/differentiation/DSCompiler.getOrder:()I
      18: aload_0
      19: getfield      #4                  // Field data:[D
      22: invokespecial #86                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure$DataTransferObject."<init>":(II[D)V
      25: areturn

  public java.lang.Object reciprocal() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method reciprocal:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       4: areturn

  public java.lang.Object divide(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       5: invokevirtual #88                 // Method divide:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       8: areturn

  public java.lang.Object multiply(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       5: invokevirtual #52                 // Method multiply:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       8: areturn

  public java.lang.Object multiply(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #89                 // Method multiply:(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       5: areturn

  public java.lang.Object negate();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method negate:()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       4: areturn

  public java.lang.Object subtract(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       5: invokevirtual #90                 // Method subtract:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       8: areturn

  public java.lang.Object add(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
       5: invokevirtual #53                 // Method add:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       8: areturn

  static org.apache.commons.math3.analysis.differentiation.DSCompiler access$000(org.apache.commons.math3.analysis.differentiation.DerivativeStructure);
    Code:
       0: aload_0
       1: getfield      #1                  // Field compiler:Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
       4: areturn
}
