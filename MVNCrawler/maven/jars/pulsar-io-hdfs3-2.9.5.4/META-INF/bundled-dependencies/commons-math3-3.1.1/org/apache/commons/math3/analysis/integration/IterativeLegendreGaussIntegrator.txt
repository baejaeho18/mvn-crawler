Compiled from "IterativeLegendreGaussIntegrator.java"
public class org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator extends org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator {
  private static final org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory FACTORY;

  private final int numberOfPoints;

  public org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: dload_2
       2: dload         4
       4: iload         6
       6: iload         7
       8: invokespecial #1                  // Method org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator."<init>":(DDII)V
      11: aload_0
      12: iload_1
      13: putfield      #2                  // Field numberOfPoints:I
      16: return

  public org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: iconst_3
       6: ldc           #3                  // int 2147483647
       8: invokespecial #4                  // Method "<init>":(IDDII)V
      11: return

  public org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc2_w        #5                  // double 1.0E-6d
       5: ldc2_w        #7                  // double 1.0E-15d
       8: iload_2
       9: iload_3
      10: invokespecial #4                  // Method "<init>":(IDDII)V
      13: return

  protected double doIntegrate() throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #9                  // Method stage:(I)D
       5: dstore_1
       6: iconst_2
       7: istore_3
       8: aload_0
       9: iload_3
      10: invokespecial #9                  // Method stage:(I)D
      13: dstore        4
      15: dload         4
      17: dload_1
      18: dsub
      19: invokestatic  #10                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      22: dstore        6
      24: aload_0
      25: invokevirtual #11                 // Method getAbsoluteAccuracy:()D
      28: aload_0
      29: invokevirtual #12                 // Method getRelativeAccuracy:()D
      32: dload_1
      33: invokestatic  #10                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      36: dload         4
      38: invokestatic  #10                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      41: dadd
      42: dmul
      43: ldc2_w        #13                 // double 0.5d
      46: dmul
      47: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      50: dstore        8
      52: aload_0
      53: getfield      #16                 // Field iterations:Lorg/apache/commons/math3/util/Incrementor;
      56: invokevirtual #17                 // Method org/apache/commons/math3/util/Incrementor.getCount:()I
      59: iconst_1
      60: iadd
      61: aload_0
      62: invokevirtual #18                 // Method getMinimalIterationCount:()I
      65: if_icmplt     79
      68: dload         6
      70: dload         8
      72: dcmpg
      73: ifgt          79
      76: dload         4
      78: dreturn
      79: ldc2_w        #19                 // double 4.0d
      82: dload         6
      84: dload         8
      86: ddiv
      87: ldc2_w        #13                 // double 0.5d
      90: aload_0
      91: getfield      #2                  // Field numberOfPoints:I
      94: i2d
      95: ddiv
      96: invokestatic  #21                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      99: invokestatic  #22                 // Method org/apache/commons/math3/util/FastMath.min:(DD)D
     102: dstore        10
     104: dload         10
     106: iload_3
     107: i2d
     108: dmul
     109: d2i
     110: iload_3
     111: iconst_1
     112: iadd
     113: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     116: istore_3
     117: dload         4
     119: dstore_1
     120: aload_0
     121: getfield      #16                 // Field iterations:Lorg/apache/commons/math3/util/Incrementor;
     124: invokevirtual #24                 // Method org/apache/commons/math3/util/Incrementor.incrementCount:()V
     127: goto          8

  private double stage(int) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: new           #25                 // class org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator$1
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator$1."<init>":(Lorg/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator;)V
       8: astore_2
       9: aload_0
      10: invokevirtual #27                 // Method getMin:()D
      13: dstore_3
      14: aload_0
      15: invokevirtual #28                 // Method getMax:()D
      18: dstore        5
      20: dload         5
      22: dload_3
      23: dsub
      24: iload_1
      25: i2d
      26: ddiv
      27: dstore        7
      29: dconst_0
      30: dstore        9
      32: iconst_0
      33: istore        11
      35: iload         11
      37: iload_1
      38: if_icmpge     91
      41: dload_3
      42: iload         11
      44: i2d
      45: dload         7
      47: dmul
      48: dadd
      49: dstore        12
      51: dload         12
      53: dload         7
      55: dadd
      56: dstore        14
      58: getstatic     #29                 // Field FACTORY:Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory;
      61: aload_0
      62: getfield      #2                  // Field numberOfPoints:I
      65: dload         12
      67: dload         14
      69: invokevirtual #30                 // Method org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.legendreHighPrecision:(IDD)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
      72: astore        16
      74: dload         9
      76: aload         16
      78: aload_2
      79: invokevirtual #31                 // Method org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.integrate:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)D
      82: dadd
      83: dstore        9
      85: iinc          11, 1
      88: goto          35
      91: dload         9
      93: dreturn

  static {};
    Code:
       0: new           #32                 // class org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory
       3: dup
       4: invokespecial #33                 // Method org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory."<init>":()V
       7: putstatic     #29                 // Field FACTORY:Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory;
      10: return
}
