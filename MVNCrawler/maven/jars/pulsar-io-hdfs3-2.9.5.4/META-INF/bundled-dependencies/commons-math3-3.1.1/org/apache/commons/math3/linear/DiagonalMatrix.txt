Compiled from "DiagonalMatrix.java"
public class org.apache.commons.math3.linear.DiagonalMatrix extends org.apache.commons.math3.linear.AbstractRealMatrix implements java.io.Serializable {
  private static final long serialVersionUID;

  private final double[] data;

  public org.apache.commons.math3.linear.DiagonalMatrix(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractRealMatrix."<init>":(II)V
       6: aload_0
       7: iload_1
       8: newarray       double
      10: putfield      #2                  // Field data:[D
      13: return

  public org.apache.commons.math3.linear.DiagonalMatrix(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #3                  // Method "<init>":([DZ)V
       6: return

  public org.apache.commons.math3.linear.DiagonalMatrix(double[], boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/commons/math3/linear/AbstractRealMatrix."<init>":()V
       4: aload_0
       5: iload_2
       6: ifeq          19
       9: aload_1
      10: invokevirtual #5                  // Method "[D".clone:()Ljava/lang/Object;
      13: checkcast     #6                  // class "[D"
      16: goto          20
      19: aload_1
      20: putfield      #2                  // Field data:[D
      23: return

  public org.apache.commons.math3.linear.RealMatrix createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpeq     15
       5: new           #7                  // class org/apache/commons/math3/exception/DimensionMismatchException
       8: dup
       9: iload_1
      10: iload_2
      11: invokespecial #8                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      14: athrow
      15: new           #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
      18: dup
      19: iload_1
      20: invokespecial #10                 // Method "<init>":(I)V
      23: areturn

  public org.apache.commons.math3.linear.RealMatrix copy();
    Code:
       0: new           #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
       3: dup
       4: aload_0
       5: getfield      #2                  // Field data:[D
       8: invokespecial #11                 // Method "<init>":([D)V
      11: areturn

  public org.apache.commons.math3.linear.DiagonalMatrix add(org.apache.commons.math3.linear.DiagonalMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method org/apache/commons/math3/linear/MatrixUtils.checkAdditionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: aload_0
       6: invokevirtual #13                 // Method getRowDimension:()I
       9: istore_2
      10: iload_2
      11: newarray       double
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_2
      20: if_icmpge     48
      23: aload_3
      24: iload         4
      26: aload_0
      27: getfield      #2                  // Field data:[D
      30: iload         4
      32: daload
      33: aload_1
      34: getfield      #2                  // Field data:[D
      37: iload         4
      39: daload
      40: dadd
      41: dastore
      42: iinc          4, 1
      45: goto          17
      48: new           #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
      51: dup
      52: aload_3
      53: iconst_0
      54: invokespecial #3                  // Method "<init>":([DZ)V
      57: areturn

  public org.apache.commons.math3.linear.DiagonalMatrix subtract(org.apache.commons.math3.linear.DiagonalMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method org/apache/commons/math3/linear/MatrixUtils.checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: aload_0
       6: invokevirtual #13                 // Method getRowDimension:()I
       9: istore_2
      10: iload_2
      11: newarray       double
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_2
      20: if_icmpge     48
      23: aload_3
      24: iload         4
      26: aload_0
      27: getfield      #2                  // Field data:[D
      30: iload         4
      32: daload
      33: aload_1
      34: getfield      #2                  // Field data:[D
      37: iload         4
      39: daload
      40: dsub
      41: dastore
      42: iinc          4, 1
      45: goto          17
      48: new           #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
      51: dup
      52: aload_3
      53: iconst_0
      54: invokespecial #3                  // Method "<init>":([DZ)V
      57: areturn

  public org.apache.commons.math3.linear.DiagonalMatrix multiply(org.apache.commons.math3.linear.DiagonalMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
       5: aload_0
       6: invokevirtual #13                 // Method getRowDimension:()I
       9: istore_2
      10: iload_2
      11: newarray       double
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_2
      20: if_icmpge     48
      23: aload_3
      24: iload         4
      26: aload_0
      27: getfield      #2                  // Field data:[D
      30: iload         4
      32: daload
      33: aload_1
      34: getfield      #2                  // Field data:[D
      37: iload         4
      39: daload
      40: dmul
      41: dastore
      42: iinc          4, 1
      45: goto          17
      48: new           #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
      51: dup
      52: aload_3
      53: iconst_0
      54: invokespecial #3                  // Method "<init>":([DZ)V
      57: areturn

  public org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
      12: invokevirtual #16                 // Method multiply:(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
      15: areturn
      16: aload_0
      17: aload_1
      18: invokestatic  #15                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
      21: aload_1
      22: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      27: istore_2
      28: aload_1
      29: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      34: istore_3
      35: iload_2
      36: iload_3
      37: multianewarray #19,  2            // class "[[D"
      41: astore        4
      43: iconst_0
      44: istore        5
      46: iload         5
      48: iload_2
      49: if_icmpge     99
      52: iconst_0
      53: istore        6
      55: iload         6
      57: iload_3
      58: if_icmpge     93
      61: aload         4
      63: iload         5
      65: aaload
      66: iload         6
      68: aload_0
      69: getfield      #2                  // Field data:[D
      72: iload         5
      74: daload
      75: aload_1
      76: iload         5
      78: iload         6
      80: invokeinterface #20,  3           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getEntry:(II)D
      85: dmul
      86: dastore
      87: iinc          6, 1
      90: goto          55
      93: iinc          5, 1
      96: goto          46
      99: new           #21                 // class org/apache/commons/math3/linear/Array2DRowRealMatrix
     102: dup
     103: aload         4
     105: iconst_0
     106: invokespecial #22                 // Method org/apache/commons/math3/linear/Array2DRowRealMatrix."<init>":([[DZ)V
     109: areturn

  public double[][] getData();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getRowDimension:()I
       4: istore_1
       5: iload_1
       6: iload_1
       7: multianewarray #19,  2            // class "[[D"
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: iload_1
      16: if_icmpge     36
      19: aload_2
      20: iload_3
      21: aaload
      22: iload_3
      23: aload_0
      24: getfield      #2                  // Field data:[D
      27: iload_3
      28: daload
      29: dastore
      30: iinc          3, 1
      33: goto          14
      36: aload_2
      37: areturn

  public double[] getDataRef();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: areturn

  public void setSubMatrix(double[][], int, int) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #25                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
       6: iload_1
       7: iload_2
       8: if_icmpne     20
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: iload_1
      16: daload
      17: goto          21
      20: dconst_0
      21: dreturn

  public void setEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpeq     13
       5: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       8: dup
       9: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
      12: athrow
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokestatic  #25                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
      19: aload_0
      20: getfield      #2                  // Field data:[D
      23: iload_1
      24: dload_3
      25: dastore
      26: return

  public void addToEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpeq     13
       5: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       8: dup
       9: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
      12: athrow
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokestatic  #25                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
      19: aload_0
      20: getfield      #2                  // Field data:[D
      23: iload_1
      24: dup2
      25: daload
      26: dload_3
      27: dadd
      28: dastore
      29: return

  public void multiplyEntry(int, int, double) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpeq     13
       5: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       8: dup
       9: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
      12: athrow
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokestatic  #25                 // Method org/apache/commons/math3/linear/MatrixUtils.checkMatrixIndex:(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
      19: aload_0
      20: getfield      #2                  // Field data:[D
      23: iload_1
      24: dup2
      25: daload
      26: dload_3
      27: dmul
      28: dastore
      29: return

  public int getRowDimension();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: arraylength
      16: ireturn

  public int getColumnDimension();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getRowDimension:()I
       4: ireturn

  public double[] operate(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: new           #9                  // class org/apache/commons/math3/linear/DiagonalMatrix
       4: dup
       5: aload_1
       6: iconst_0
       7: invokespecial #3                  // Method "<init>":([DZ)V
      10: invokevirtual #16                 // Method multiply:(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
      13: invokevirtual #26                 // Method getDataRef:()[D
      16: areturn

  public double[] preMultiply(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method operate:([D)[D
       5: areturn

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.MathUnsupportedOperationException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow
}
