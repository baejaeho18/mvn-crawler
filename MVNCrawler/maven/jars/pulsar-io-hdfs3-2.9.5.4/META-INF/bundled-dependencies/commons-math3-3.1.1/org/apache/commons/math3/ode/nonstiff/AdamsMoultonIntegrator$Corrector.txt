Compiled from "AdamsMoultonIntegrator.java"
class org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector implements org.apache.commons.math3.linear.RealMatrixPreservingVisitor {
  private final double[] previous;

  private final double[] scaled;

  private final double[] before;

  private final double[] after;

  final org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator this$0;

  public org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector(org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator, double[], double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field previous:[D
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field scaled:[D
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field after:[D
      25: aload_0
      26: aload         4
      28: invokevirtual #6                  // Method "[D".clone:()Ljava/lang/Object;
      31: checkcast     #7                  // class "[D"
      34: putfield      #8                  // Field before:[D
      37: return

  public void start(int, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field after:[D
       4: dconst_0
       5: invokestatic  #9                  // Method java/util/Arrays.fill:([DD)V
       8: return

  public void visit(int, int, double);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifne          19
       6: aload_0
       7: getfield      #5                  // Field after:[D
      10: iload_2
      11: dup2
      12: daload
      13: dload_3
      14: dsub
      15: dastore
      16: goto          29
      19: aload_0
      20: getfield      #5                  // Field after:[D
      23: iload_2
      24: dup2
      25: daload
      26: dload_3
      27: dadd
      28: dastore
      29: return

  public double end();
    Code:
       0: dconst_0
       1: dstore_1
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #5                  // Field after:[D
       9: arraylength
      10: if_icmpge     156
      13: aload_0
      14: getfield      #5                  // Field after:[D
      17: iload_3
      18: dup2
      19: daload
      20: aload_0
      21: getfield      #3                  // Field previous:[D
      24: iload_3
      25: daload
      26: aload_0
      27: getfield      #4                  // Field scaled:[D
      30: iload_3
      31: daload
      32: dadd
      33: dadd
      34: dastore
      35: iload_3
      36: aload_0
      37: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
      40: getfield      #10                 // Field org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.mainSetDimension:I
      43: if_icmpge     150
      46: aload_0
      47: getfield      #3                  // Field previous:[D
      50: iload_3
      51: daload
      52: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      55: aload_0
      56: getfield      #5                  // Field after:[D
      59: iload_3
      60: daload
      61: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      64: invokestatic  #12                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      67: dstore        4
      69: aload_0
      70: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
      73: getfield      #13                 // Field org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.vecAbsoluteTolerance:[D
      76: ifnonnull     100
      79: aload_0
      80: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
      83: getfield      #14                 // Field org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.scalAbsoluteTolerance:D
      86: aload_0
      87: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
      90: getfield      #15                 // Field org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.scalRelativeTolerance:D
      93: dload         4
      95: dmul
      96: dadd
      97: goto          122
     100: aload_0
     101: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
     104: getfield      #13                 // Field org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.vecAbsoluteTolerance:[D
     107: iload_3
     108: daload
     109: aload_0
     110: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
     113: getfield      #16                 // Field org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.vecRelativeTolerance:[D
     116: iload_3
     117: daload
     118: dload         4
     120: dmul
     121: dadd
     122: dstore        6
     124: aload_0
     125: getfield      #5                  // Field after:[D
     128: iload_3
     129: daload
     130: aload_0
     131: getfield      #8                  // Field before:[D
     134: iload_3
     135: daload
     136: dsub
     137: dload         6
     139: ddiv
     140: dstore        8
     142: dload_1
     143: dload         8
     145: dload         8
     147: dmul
     148: dadd
     149: dstore_1
     150: iinc          3, 1
     153: goto          4
     156: dload_1
     157: aload_0
     158: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;
     161: getfield      #10                 // Field org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.mainSetDimension:I
     164: i2d
     165: ddiv
     166: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     169: dreturn
}
