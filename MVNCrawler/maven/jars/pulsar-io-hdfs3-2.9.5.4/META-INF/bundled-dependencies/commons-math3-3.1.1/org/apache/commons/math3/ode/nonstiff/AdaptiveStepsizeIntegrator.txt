Compiled from "AdaptiveStepsizeIntegrator.java"
public abstract class org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator extends org.apache.commons.math3.ode.AbstractIntegrator {
  protected double scalAbsoluteTolerance;

  protected double scalRelativeTolerance;

  protected double[] vecAbsoluteTolerance;

  protected double[] vecRelativeTolerance;

  protected int mainSetDimension;

  private double initialStep;

  private double minStep;

  private double maxStep;

  public org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator(java.lang.String, double, double, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/ode/AbstractIntegrator."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: dload_2
       7: dload         4
       9: dload         6
      11: dload         8
      13: invokevirtual #2                  // Method setStepSizeControl:(DDDD)V
      16: aload_0
      17: invokevirtual #3                  // Method resetInternalState:()V
      20: return

  public org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator(java.lang.String, double, double, double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/ode/AbstractIntegrator."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: dload_2
       7: dload         4
       9: aload         6
      11: aload         7
      13: invokevirtual #4                  // Method setStepSizeControl:(DD[D[D)V
      16: aload_0
      17: invokevirtual #3                  // Method resetInternalState:()V
      20: return

  public void setStepSizeControl(double, double, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
       5: putfield      #6                  // Field minStep:D
       8: aload_0
       9: dload_3
      10: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      13: putfield      #7                  // Field maxStep:D
      16: aload_0
      17: ldc2_w        #8                  // double -1.0d
      20: putfield      #10                 // Field initialStep:D
      23: aload_0
      24: dload         5
      26: putfield      #11                 // Field scalAbsoluteTolerance:D
      29: aload_0
      30: dload         7
      32: putfield      #12                 // Field scalRelativeTolerance:D
      35: aload_0
      36: aconst_null
      37: putfield      #13                 // Field vecAbsoluteTolerance:[D
      40: aload_0
      41: aconst_null
      42: putfield      #14                 // Field vecRelativeTolerance:[D
      45: return

  public void setStepSizeControl(double, double, double[], double[]);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
       5: putfield      #6                  // Field minStep:D
       8: aload_0
       9: dload_3
      10: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      13: putfield      #7                  // Field maxStep:D
      16: aload_0
      17: ldc2_w        #8                  // double -1.0d
      20: putfield      #10                 // Field initialStep:D
      23: aload_0
      24: dconst_0
      25: putfield      #11                 // Field scalAbsoluteTolerance:D
      28: aload_0
      29: dconst_0
      30: putfield      #12                 // Field scalRelativeTolerance:D
      33: aload_0
      34: aload         5
      36: invokevirtual #15                 // Method "[D".clone:()Ljava/lang/Object;
      39: checkcast     #16                 // class "[D"
      42: putfield      #13                 // Field vecAbsoluteTolerance:[D
      45: aload_0
      46: aload         6
      48: invokevirtual #17                 // Method "[D".clone:()Ljava/lang/Object;
      51: checkcast     #16                 // class "[D"
      54: putfield      #14                 // Field vecRelativeTolerance:[D
      57: return

  public void setInitialStepSize(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #6                  // Field minStep:D
       5: dcmpg
       6: iflt          18
       9: dload_1
      10: aload_0
      11: getfield      #7                  // Field maxStep:D
      14: dcmpl
      15: ifle          28
      18: aload_0
      19: ldc2_w        #8                  // double -1.0d
      22: putfield      #10                 // Field initialStep:D
      25: goto          33
      28: aload_0
      29: dload_1
      30: putfield      #10                 // Field initialStep:D
      33: return

  protected void sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE, double) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: invokespecial #18                 // Method org/apache/commons/math3/ode/AbstractIntegrator.sanityChecks:(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
       6: aload_0
       7: aload_1
       8: invokevirtual #19                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getPrimaryMapper:()Lorg/apache/commons/math3/ode/EquationsMapper;
      11: invokevirtual #20                 // Method org/apache/commons/math3/ode/EquationsMapper.getDimension:()I
      14: putfield      #21                 // Field mainSetDimension:I
      17: aload_0
      18: getfield      #13                 // Field vecAbsoluteTolerance:[D
      21: ifnull        53
      24: aload_0
      25: getfield      #13                 // Field vecAbsoluteTolerance:[D
      28: arraylength
      29: aload_0
      30: getfield      #21                 // Field mainSetDimension:I
      33: if_icmpeq     53
      36: new           #22                 // class org/apache/commons/math3/exception/DimensionMismatchException
      39: dup
      40: aload_0
      41: getfield      #21                 // Field mainSetDimension:I
      44: aload_0
      45: getfield      #13                 // Field vecAbsoluteTolerance:[D
      48: arraylength
      49: invokespecial #23                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      52: athrow
      53: aload_0
      54: getfield      #14                 // Field vecRelativeTolerance:[D
      57: ifnull        89
      60: aload_0
      61: getfield      #14                 // Field vecRelativeTolerance:[D
      64: arraylength
      65: aload_0
      66: getfield      #21                 // Field mainSetDimension:I
      69: if_icmpeq     89
      72: new           #22                 // class org/apache/commons/math3/exception/DimensionMismatchException
      75: dup
      76: aload_0
      77: getfield      #21                 // Field mainSetDimension:I
      80: aload_0
      81: getfield      #14                 // Field vecRelativeTolerance:[D
      84: arraylength
      85: invokespecial #23                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      88: athrow
      89: return

  public double initializeStep(boolean, int, double[], double, double[], double[], double[], double[]) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field initialStep:D
       4: dconst_0
       5: dcmpl
       6: ifle          26
       9: iload_1
      10: ifeq          20
      13: aload_0
      14: getfield      #10                 // Field initialStep:D
      17: goto          25
      20: aload_0
      21: getfield      #10                 // Field initialStep:D
      24: dneg
      25: dreturn
      26: dconst_0
      27: dstore        12
      29: dconst_0
      30: dstore        14
      32: iconst_0
      33: istore        16
      35: iload         16
      37: aload_3
      38: arraylength
      39: if_icmpge     92
      42: aload         6
      44: iload         16
      46: daload
      47: aload_3
      48: iload         16
      50: daload
      51: ddiv
      52: dstore        10
      54: dload         12
      56: dload         10
      58: dload         10
      60: dmul
      61: dadd
      62: dstore        12
      64: aload         7
      66: iload         16
      68: daload
      69: aload_3
      70: iload         16
      72: daload
      73: ddiv
      74: dstore        10
      76: dload         14
      78: dload         10
      80: dload         10
      82: dmul
      83: dadd
      84: dstore        14
      86: iinc          16, 1
      89: goto          35
      92: dload         12
      94: ldc2_w        #24                 // double 1.0E-10d
      97: dcmpg
      98: iflt          110
     101: dload         14
     103: ldc2_w        #24                 // double 1.0E-10d
     106: dcmpg
     107: ifge          116
     110: ldc2_w        #26                 // double 1.0E-6d
     113: goto          128
     116: ldc2_w        #28                 // double 0.01d
     119: dload         12
     121: dload         14
     123: ddiv
     124: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     127: dmul
     128: dstore        16
     130: iload_1
     131: ifne          139
     134: dload         16
     136: dneg
     137: dstore        16
     139: iconst_0
     140: istore        18
     142: iload         18
     144: aload         6
     146: arraylength
     147: if_icmpge     175
     150: aload         8
     152: iload         18
     154: aload         6
     156: iload         18
     158: daload
     159: dload         16
     161: aload         7
     163: iload         18
     165: daload
     166: dmul
     167: dadd
     168: dastore
     169: iinc          18, 1
     172: goto          142
     175: aload_0
     176: dload         4
     178: dload         16
     180: dadd
     181: aload         8
     183: aload         9
     185: invokevirtual #31                 // Method computeDerivatives:(D[D[D)V
     188: dconst_0
     189: dstore        18
     191: iconst_0
     192: istore        20
     194: iload         20
     196: aload_3
     197: arraylength
     198: if_icmpge     235
     201: aload         9
     203: iload         20
     205: daload
     206: aload         7
     208: iload         20
     210: daload
     211: dsub
     212: aload_3
     213: iload         20
     215: daload
     216: ddiv
     217: dstore        10
     219: dload         18
     221: dload         10
     223: dload         10
     225: dmul
     226: dadd
     227: dstore        18
     229: iinc          20, 1
     232: goto          194
     235: dload         18
     237: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     240: dload         16
     242: ddiv
     243: dstore        18
     245: dload         14
     247: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     250: dload         18
     252: invokestatic  #32                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
     255: dstore        20
     257: dload         20
     259: ldc2_w        #33                 // double 1.0E-15d
     262: dcmpg
     263: ifge          284
     266: ldc2_w        #26                 // double 1.0E-6d
     269: ldc2_w        #35                 // double 0.001d
     272: dload         16
     274: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     277: dmul
     278: invokestatic  #32                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
     281: goto          297
     284: ldc2_w        #28                 // double 0.01d
     287: dload         20
     289: ddiv
     290: dconst_1
     291: iload_2
     292: i2d
     293: ddiv
     294: invokestatic  #37                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
     297: dstore        22
     299: ldc2_w        #38                 // double 100.0d
     302: dload         16
     304: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     307: dmul
     308: dload         22
     310: invokestatic  #40                 // Method org/apache/commons/math3/util/FastMath.min:(DD)D
     313: dstore        16
     315: dload         16
     317: ldc2_w        #41                 // double 1.0E-12d
     320: dload         4
     322: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     325: dmul
     326: invokestatic  #32                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
     329: dstore        16
     331: dload         16
     333: aload_0
     334: invokevirtual #43                 // Method getMinStep:()D
     337: dcmpg
     338: ifge          347
     341: aload_0
     342: invokevirtual #43                 // Method getMinStep:()D
     345: dstore        16
     347: dload         16
     349: aload_0
     350: invokevirtual #44                 // Method getMaxStep:()D
     353: dcmpl
     354: ifle          363
     357: aload_0
     358: invokevirtual #44                 // Method getMaxStep:()D
     361: dstore        16
     363: iload_1
     364: ifne          372
     367: dload         16
     369: dneg
     370: dstore        16
     372: dload         16
     374: dreturn

  protected double filterStep(double, boolean, boolean) throws org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: dload_1
       1: dstore        5
       3: dload_1
       4: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
       7: aload_0
       8: getfield      #6                  // Field minStep:D
      11: dcmpg
      12: ifge          67
      15: iload         4
      17: ifeq          41
      20: iload_3
      21: ifeq          31
      24: aload_0
      25: getfield      #6                  // Field minStep:D
      28: goto          36
      31: aload_0
      32: getfield      #6                  // Field minStep:D
      35: dneg
      36: dstore        5
      38: goto          67
      41: new           #45                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      44: dup
      45: getstatic     #46                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      48: dload_1
      49: invokestatic  #5                  // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      52: invokestatic  #47                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      55: aload_0
      56: getfield      #6                  // Field minStep:D
      59: invokestatic  #47                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      62: iconst_1
      63: invokespecial #48                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      66: athrow
      67: dload         5
      69: aload_0
      70: getfield      #7                  // Field maxStep:D
      73: dcmpl
      74: ifle          86
      77: aload_0
      78: getfield      #7                  // Field maxStep:D
      81: dstore        5
      83: goto          104
      86: dload         5
      88: aload_0
      89: getfield      #7                  // Field maxStep:D
      92: dneg
      93: dcmpg
      94: ifge          104
      97: aload_0
      98: getfield      #7                  // Field maxStep:D
     101: dneg
     102: dstore        5
     104: dload         5
     106: dreturn

  public abstract void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException;

  public double getCurrentStepStart();
    Code:
       0: aload_0
       1: getfield      #49                 // Field stepStart:D
       4: dreturn

  protected void resetInternalState();
    Code:
       0: aload_0
       1: ldc2_w        #50                 // double NaNd
       4: putfield      #49                 // Field stepStart:D
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field minStep:D
      12: aload_0
      13: getfield      #7                  // Field maxStep:D
      16: dmul
      17: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      20: putfield      #52                 // Field stepSize:D
      23: return

  public double getMinStep();
    Code:
       0: aload_0
       1: getfield      #6                  // Field minStep:D
       4: dreturn

  public double getMaxStep();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxStep:D
       4: dreturn
}
