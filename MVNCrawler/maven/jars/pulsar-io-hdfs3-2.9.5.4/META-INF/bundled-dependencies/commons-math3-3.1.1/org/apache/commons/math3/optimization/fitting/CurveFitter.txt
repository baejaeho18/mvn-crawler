Compiled from "CurveFitter.java"
public class org.apache.commons.math3.optimization.fitting.CurveFitter<T extends org.apache.commons.math3.analysis.ParametricUnivariateFunction> {
  private final org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer oldOptimizer;

  private final org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer optimizer;

  private final java.util.List<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint> observations;

  public org.apache.commons.math3.optimization.fitting.CurveFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field oldOptimizer:Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field optimizer:Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;
      14: aload_0
      15: new           #5                  // class java/util/ArrayList
      18: dup
      19: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #1                  // Field observations:Ljava/util/List;
      25: return

  public org.apache.commons.math3.optimization.fitting.CurveFitter(org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field oldOptimizer:Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field optimizer:Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;
      14: aload_0
      15: new           #5                  // class java/util/ArrayList
      18: dup
      19: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #1                  // Field observations:Ljava/util/List;
      25: return

  public void addObservedPoint(double, double);
    Code:
       0: aload_0
       1: dconst_1
       2: dload_1
       3: dload_3
       4: invokevirtual #7                  // Method addObservedPoint:(DDD)V
       7: return

  public void addObservedPoint(double, double, double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: new           #8                  // class org/apache/commons/math3/optimization/fitting/WeightedObservedPoint
       7: dup
       8: dload_1
       9: dload_3
      10: dload         5
      12: invokespecial #9                  // Method org/apache/commons/math3/optimization/fitting/WeightedObservedPoint."<init>":(DDD)V
      15: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      20: pop
      21: return

  public void addObservedPoint(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[] getObservations();
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: aload_0
       5: getfield      #1                  // Field observations:Ljava/util/List;
       8: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
      13: anewarray     #8                  // class org/apache/commons/math3/optimization/fitting/WeightedObservedPoint
      16: invokeinterface #12,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #13                 // class "[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;"
      24: areturn

  public void clearObservations();
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.clear:()V
       9: return

  public double[] fit(T, double[]);
    Code:
       0: aload_0
       1: ldc           #15                 // int 2147483647
       3: aload_1
       4: aload_2
       5: invokevirtual #16                 // Method fit:(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
       8: areturn

  public double[] fit(int, T, double[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
       9: newarray       double
      11: astore        4
      13: aload_0
      14: getfield      #1                  // Field observations:Ljava/util/List;
      17: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
      22: newarray       double
      24: astore        5
      26: iconst_0
      27: istore        6
      29: aload_0
      30: getfield      #1                  // Field observations:Ljava/util/List;
      33: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore        7
      40: aload         7
      42: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          88
      50: aload         7
      52: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #8                  // class org/apache/commons/math3/optimization/fitting/WeightedObservedPoint
      60: astore        8
      62: aload         4
      64: iload         6
      66: aload         8
      68: invokevirtual #20                 // Method org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.getY:()D
      71: dastore
      72: aload         5
      74: iload         6
      76: aload         8
      78: invokevirtual #21                 // Method org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.getWeight:()D
      81: dastore
      82: iinc          6, 1
      85: goto          40
      88: aload_0
      89: getfield      #4                  // Field optimizer:Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;
      92: ifnonnull     124
      95: aload_0
      96: getfield      #3                  // Field oldOptimizer:Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;
      99: iload_1
     100: new           #22                 // class org/apache/commons/math3/optimization/fitting/CurveFitter$OldTheoreticalValuesFunction
     103: dup
     104: aload_0
     105: aload_2
     106: invokespecial #23                 // Method org/apache/commons/math3/optimization/fitting/CurveFitter$OldTheoreticalValuesFunction."<init>":(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V
     109: aload         4
     111: aload         5
     113: aload_3
     114: invokeinterface #24,  6           // InterfaceMethod org/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer.optimize:(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
     119: astore        7
     121: goto          150
     124: aload_0
     125: getfield      #4                  // Field optimizer:Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;
     128: iload_1
     129: new           #25                 // class org/apache/commons/math3/optimization/fitting/CurveFitter$TheoreticalValuesFunction
     132: dup
     133: aload_0
     134: aload_2
     135: invokespecial #26                 // Method org/apache/commons/math3/optimization/fitting/CurveFitter$TheoreticalValuesFunction."<init>":(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V
     138: aload         4
     140: aload         5
     142: aload_3
     143: invokeinterface #27,  6           // InterfaceMethod org/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer.optimize:(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
     148: astore        7
     150: aload         7
     152: invokevirtual #28                 // Method org/apache/commons/math3/optimization/PointVectorValuePair.getPointRef:()[D
     155: areturn

  static java.util.List access$000(org.apache.commons.math3.optimization.fitting.CurveFitter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: areturn
}
