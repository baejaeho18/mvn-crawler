Compiled from "PolynomialFunctionNewtonForm.java"
public class org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction {
  private double[] coefficients;

  private final double[] c;

  private final double[] a;

  private boolean coefficientsComputed;

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm(double[], double[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: aload_2
       6: invokestatic  #2                  // Method verifyInputArray:([D[D)V
       9: aload_0
      10: aload_1
      11: arraylength
      12: newarray       double
      14: putfield      #3                  // Field a:[D
      17: aload_0
      18: aload_2
      19: arraylength
      20: newarray       double
      22: putfield      #4                  // Field c:[D
      25: aload_1
      26: iconst_0
      27: aload_0
      28: getfield      #3                  // Field a:[D
      31: iconst_0
      32: aload_1
      33: arraylength
      34: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload_2
      38: iconst_0
      39: aload_0
      40: getfield      #4                  // Field c:[D
      43: iconst_0
      44: aload_2
      45: arraylength
      46: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: aload_0
      50: iconst_0
      51: putfield      #6                  // Field coefficientsComputed:Z
      54: return

  public double value(double);
    Code:
       0: aload_0
       1: getfield      #3                  // Field a:[D
       4: aload_0
       5: getfield      #4                  // Field c:[D
       8: dload_1
       9: invokestatic  #7                  // Method evaluate:([D[DD)D
      12: dreturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure);
    Code:
       0: aload_0
       1: getfield      #3                  // Field a:[D
       4: aload_0
       5: getfield      #4                  // Field c:[D
       8: invokestatic  #2                  // Method verifyInputArray:([D[D)V
      11: aload_0
      12: getfield      #4                  // Field c:[D
      15: arraylength
      16: istore_2
      17: new           #8                  // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      20: dup
      21: aload_1
      22: invokevirtual #9                  // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getFreeParameters:()I
      25: aload_1
      26: invokevirtual #10                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getOrder:()I
      29: aload_0
      30: getfield      #3                  // Field a:[D
      33: iload_2
      34: daload
      35: invokespecial #11                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure."<init>":(IID)V
      38: astore_3
      39: iload_2
      40: iconst_1
      41: isub
      42: istore        4
      44: iload         4
      46: iflt          81
      49: aload_1
      50: aload_0
      51: getfield      #4                  // Field c:[D
      54: iload         4
      56: daload
      57: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.subtract:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      60: aload_3
      61: invokevirtual #13                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.multiply:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      64: aload_0
      65: getfield      #3                  // Field a:[D
      68: iload         4
      70: daload
      71: invokevirtual #14                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.add:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      74: astore_3
      75: iinc          4, -1
      78: goto          44
      81: aload_3
      82: areturn

  public int degree();
    Code:
       0: aload_0
       1: getfield      #4                  // Field c:[D
       4: arraylength
       5: ireturn

  public double[] getNewtonCoefficients();
    Code:
       0: aload_0
       1: getfield      #3                  // Field a:[D
       4: arraylength
       5: newarray       double
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field a:[D
      12: iconst_0
      13: aload_1
      14: iconst_0
      15: aload_0
      16: getfield      #3                  // Field a:[D
      19: arraylength
      20: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_1
      24: areturn

  public double[] getCenters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field c:[D
       4: arraylength
       5: newarray       double
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field c:[D
      12: iconst_0
      13: aload_1
      14: iconst_0
      15: aload_0
      16: getfield      #4                  // Field c:[D
      19: arraylength
      20: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_1
      24: areturn

  public double[] getCoefficients();
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficientsComputed:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #15                 // Method computeCoefficients:()V
      11: aload_0
      12: getfield      #16                 // Field coefficients:[D
      15: arraylength
      16: newarray       double
      18: astore_1
      19: aload_0
      20: getfield      #16                 // Field coefficients:[D
      23: iconst_0
      24: aload_1
      25: iconst_0
      26: aload_0
      27: getfield      #16                 // Field coefficients:[D
      30: arraylength
      31: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_1
      35: areturn

  public static double evaluate(double[], double[], double);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method verifyInputArray:([D[D)V
       5: aload_1
       6: arraylength
       7: istore        4
       9: aload_0
      10: iload         4
      12: daload
      13: dstore        5
      15: iload         4
      17: iconst_1
      18: isub
      19: istore        7
      21: iload         7
      23: iflt          48
      26: aload_0
      27: iload         7
      29: daload
      30: dload_2
      31: aload_1
      32: iload         7
      34: daload
      35: dsub
      36: dload         5
      38: dmul
      39: dadd
      40: dstore        5
      42: iinc          7, -1
      45: goto          21
      48: dload         5
      50: dreturn

  protected void computeCoefficients();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method degree:()I
       4: istore_1
       5: aload_0
       6: iload_1
       7: iconst_1
       8: iadd
       9: newarray       double
      11: putfield      #16                 // Field coefficients:[D
      14: iconst_0
      15: istore_2
      16: iload_2
      17: iload_1
      18: if_icmpgt     34
      21: aload_0
      22: getfield      #16                 // Field coefficients:[D
      25: iload_2
      26: dconst_0
      27: dastore
      28: iinc          2, 1
      31: goto          16
      34: aload_0
      35: getfield      #16                 // Field coefficients:[D
      38: iconst_0
      39: aload_0
      40: getfield      #3                  // Field a:[D
      43: iload_1
      44: daload
      45: dastore
      46: iload_1
      47: iconst_1
      48: isub
      49: istore_2
      50: iload_2
      51: iflt          128
      54: iload_1
      55: iload_2
      56: isub
      57: istore_3
      58: iload_3
      59: ifle          96
      62: aload_0
      63: getfield      #16                 // Field coefficients:[D
      66: iload_3
      67: aload_0
      68: getfield      #16                 // Field coefficients:[D
      71: iload_3
      72: iconst_1
      73: isub
      74: daload
      75: aload_0
      76: getfield      #4                  // Field c:[D
      79: iload_2
      80: daload
      81: aload_0
      82: getfield      #16                 // Field coefficients:[D
      85: iload_3
      86: daload
      87: dmul
      88: dsub
      89: dastore
      90: iinc          3, -1
      93: goto          58
      96: aload_0
      97: getfield      #16                 // Field coefficients:[D
     100: iconst_0
     101: aload_0
     102: getfield      #3                  // Field a:[D
     105: iload_2
     106: daload
     107: aload_0
     108: getfield      #4                  // Field c:[D
     111: iload_2
     112: daload
     113: aload_0
     114: getfield      #16                 // Field coefficients:[D
     117: iconst_0
     118: daload
     119: dmul
     120: dsub
     121: dastore
     122: iinc          2, -1
     125: goto          50
     128: aload_0
     129: iconst_1
     130: putfield      #6                  // Field coefficientsComputed:Z
     133: return

  protected static void verifyInputArray(double[], double[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifeq          10
       5: aload_1
       6: arraylength
       7: ifne          21
      10: new           #18                 // class org/apache/commons/math3/exception/NoDataException
      13: dup
      14: getstatic     #19                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      17: invokespecial #20                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      20: athrow
      21: aload_0
      22: arraylength
      23: aload_1
      24: arraylength
      25: iconst_1
      26: iadd
      27: if_icmpeq     45
      30: new           #21                 // class org/apache/commons/math3/exception/DimensionMismatchException
      33: dup
      34: getstatic     #22                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      37: aload_0
      38: arraylength
      39: aload_1
      40: arraylength
      41: invokespecial #23                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;II)V
      44: athrow
      45: return
}
