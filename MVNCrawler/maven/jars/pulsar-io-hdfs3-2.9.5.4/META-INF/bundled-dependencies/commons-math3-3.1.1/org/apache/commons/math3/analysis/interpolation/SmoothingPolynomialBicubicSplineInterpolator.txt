Compiled from "SmoothingPolynomialBicubicSplineInterpolator.java"
public class org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator extends org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator {
  private final org.apache.commons.math3.fitting.PolynomialFitter xFitter;

  private final int xDegree;

  private final org.apache.commons.math3.fitting.PolynomialFitter yFitter;

  private final int yDegree;

  public org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator();
    Code:
       0: aload_0
       1: iconst_3
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator(int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: invokespecial #2                  // Method "<init>":(II)V
       6: return

  public org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator(int, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator."<init>":()V
       4: iload_1
       5: ifge          20
       8: new           #4                  // class org/apache/commons/math3/exception/NotPositiveException
      11: dup
      12: iload_1
      13: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokespecial #6                  // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Ljava/lang/Number;)V
      19: athrow
      20: iload_2
      21: ifge          36
      24: new           #4                  // class org/apache/commons/math3/exception/NotPositiveException
      27: dup
      28: iload_2
      29: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: invokespecial #6                  // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Ljava/lang/Number;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #7                  // Field xDegree:I
      41: aload_0
      42: iload_2
      43: putfield      #8                  // Field yDegree:I
      46: ldc2_w        #9                  // double 100.0d
      49: dstore_3
      50: new           #11                 // class org/apache/commons/math3/optim/SimpleVectorValueChecker
      53: dup
      54: ldc2_w        #9                  // double 100.0d
      57: getstatic     #12                 // Field org/apache/commons/math3/util/Precision.EPSILON:D
      60: dmul
      61: ldc2_w        #9                  // double 100.0d
      64: getstatic     #13                 // Field org/apache/commons/math3/util/Precision.SAFE_MIN:D
      67: dmul
      68: invokespecial #14                 // Method org/apache/commons/math3/optim/SimpleVectorValueChecker."<init>":(DD)V
      71: astore        5
      73: aload_0
      74: new           #15                 // class org/apache/commons/math3/fitting/PolynomialFitter
      77: dup
      78: new           #16                 // class org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer
      81: dup
      82: iconst_0
      83: aload         5
      85: invokespecial #17                 // Method org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer."<init>":(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V
      88: invokespecial #18                 // Method org/apache/commons/math3/fitting/PolynomialFitter."<init>":(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
      91: putfield      #19                 // Field xFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
      94: aload_0
      95: new           #15                 // class org/apache/commons/math3/fitting/PolynomialFitter
      98: dup
      99: new           #16                 // class org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer
     102: dup
     103: iconst_0
     104: aload         5
     106: invokespecial #17                 // Method org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer."<init>":(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V
     109: invokespecial #18                 // Method org/apache/commons/math3/fitting/PolynomialFitter."<init>":(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
     112: putfield      #20                 // Field yFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
     115: return

  public org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: arraylength
       2: ifeq          15
       5: aload_2
       6: arraylength
       7: ifeq          15
      10: aload_3
      11: arraylength
      12: ifne          23
      15: new           #21                 // class org/apache/commons/math3/exception/NoDataException
      18: dup
      19: invokespecial #22                 // Method org/apache/commons/math3/exception/NoDataException."<init>":()V
      22: athrow
      23: aload_1
      24: arraylength
      25: aload_3
      26: arraylength
      27: if_icmpeq     42
      30: new           #23                 // class org/apache/commons/math3/exception/DimensionMismatchException
      33: dup
      34: aload_1
      35: arraylength
      36: aload_3
      37: arraylength
      38: invokespecial #24                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      41: athrow
      42: aload_1
      43: arraylength
      44: istore        4
      46: aload_2
      47: arraylength
      48: istore        5
      50: iconst_0
      51: istore        6
      53: iload         6
      55: iload         4
      57: if_icmpge     91
      60: aload_3
      61: iload         6
      63: aaload
      64: arraylength
      65: iload         5
      67: if_icmpeq     85
      70: new           #23                 // class org/apache/commons/math3/exception/DimensionMismatchException
      73: dup
      74: aload_3
      75: iload         6
      77: aaload
      78: arraylength
      79: iload         5
      81: invokespecial #24                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      84: athrow
      85: iinc          6, 1
      88: goto          53
      91: aload_1
      92: invokestatic  #25                 // Method org/apache/commons/math3/util/MathArrays.checkOrder:([D)V
      95: aload_2
      96: invokestatic  #25                 // Method org/apache/commons/math3/util/MathArrays.checkOrder:([D)V
      99: iload         5
     101: anewarray     #26                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     104: astore        6
     106: iconst_0
     107: istore        7
     109: iload         7
     111: iload         5
     113: if_icmpge     191
     116: aload_0
     117: getfield      #19                 // Field xFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
     120: invokevirtual #27                 // Method org/apache/commons/math3/fitting/PolynomialFitter.clearObservations:()V
     123: iconst_0
     124: istore        8
     126: iload         8
     128: iload         4
     130: if_icmpge     158
     133: aload_0
     134: getfield      #19                 // Field xFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
     137: dconst_1
     138: aload_1
     139: iload         8
     141: daload
     142: aload_3
     143: iload         8
     145: aaload
     146: iload         7
     148: daload
     149: invokevirtual #28                 // Method org/apache/commons/math3/fitting/PolynomialFitter.addObservedPoint:(DDD)V
     152: iinc          8, 1
     155: goto          126
     158: aload         6
     160: iload         7
     162: new           #26                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     165: dup
     166: aload_0
     167: getfield      #19                 // Field xFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
     170: aload_0
     171: getfield      #7                  // Field xDegree:I
     174: iconst_1
     175: iadd
     176: newarray       double
     178: invokevirtual #29                 // Method org/apache/commons/math3/fitting/PolynomialFitter.fit:([D)[D
     181: invokespecial #30                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunction."<init>":([D)V
     184: aastore
     185: iinc          7, 1
     188: goto          109
     191: iload         4
     193: iload         5
     195: multianewarray #31,  2            // class "[[D"
     199: astore        7
     201: iconst_0
     202: istore        8
     204: iload         8
     206: iload         5
     208: if_icmpge     257
     211: aload         6
     213: iload         8
     215: aaload
     216: astore        9
     218: iconst_0
     219: istore        10
     221: iload         10
     223: iload         4
     225: if_icmpge     251
     228: aload         7
     230: iload         10
     232: aaload
     233: iload         8
     235: aload         9
     237: aload_1
     238: iload         10
     240: daload
     241: invokevirtual #32                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunction.value:(D)D
     244: dastore
     245: iinc          10, 1
     248: goto          221
     251: iinc          8, 1
     254: goto          204
     257: iload         4
     259: anewarray     #26                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     262: astore        8
     264: iconst_0
     265: istore        9
     267: iload         9
     269: iload         4
     271: if_icmpge     350
     274: aload_0
     275: getfield      #20                 // Field yFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
     278: invokevirtual #27                 // Method org/apache/commons/math3/fitting/PolynomialFitter.clearObservations:()V
     281: iconst_0
     282: istore        10
     284: iload         10
     286: iload         5
     288: if_icmpge     317
     291: aload_0
     292: getfield      #20                 // Field yFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
     295: dconst_1
     296: aload_2
     297: iload         10
     299: daload
     300: aload         7
     302: iload         9
     304: aaload
     305: iload         10
     307: daload
     308: invokevirtual #28                 // Method org/apache/commons/math3/fitting/PolynomialFitter.addObservedPoint:(DDD)V
     311: iinc          10, 1
     314: goto          284
     317: aload         8
     319: iload         9
     321: new           #26                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     324: dup
     325: aload_0
     326: getfield      #20                 // Field yFitter:Lorg/apache/commons/math3/fitting/PolynomialFitter;
     329: aload_0
     330: getfield      #8                  // Field yDegree:I
     333: iconst_1
     334: iadd
     335: newarray       double
     337: invokevirtual #29                 // Method org/apache/commons/math3/fitting/PolynomialFitter.fit:([D)[D
     340: invokespecial #30                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunction."<init>":([D)V
     343: aastore
     344: iinc          9, 1
     347: goto          267
     350: iload         4
     352: iload         5
     354: multianewarray #31,  2            // class "[[D"
     358: astore        9
     360: iconst_0
     361: istore        10
     363: iload         10
     365: iload         4
     367: if_icmpge     416
     370: aload         8
     372: iload         10
     374: aaload
     375: astore        11
     377: iconst_0
     378: istore        12
     380: iload         12
     382: iload         5
     384: if_icmpge     410
     387: aload         9
     389: iload         10
     391: aaload
     392: iload         12
     394: aload         11
     396: aload_2
     397: iload         12
     399: daload
     400: invokevirtual #32                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunction.value:(D)D
     403: dastore
     404: iinc          12, 1
     407: goto          380
     410: iinc          10, 1
     413: goto          363
     416: aload_0
     417: aload_1
     418: aload_2
     419: aload         9
     421: invokespecial #33                 // Method org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.interpolate:([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;
     424: areturn

  public org.apache.commons.math3.analysis.BivariateFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #34                 // Method interpolate:([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;
       7: areturn
}
