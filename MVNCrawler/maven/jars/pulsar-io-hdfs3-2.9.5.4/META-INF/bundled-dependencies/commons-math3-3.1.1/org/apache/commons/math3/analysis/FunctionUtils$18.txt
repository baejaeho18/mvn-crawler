Compiled from "FunctionUtils.java"
final class org.apache.commons.math3.analysis.FunctionUtils$18 implements org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction {
  final org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction val$f;

  org.apache.commons.math3.analysis.FunctionUtils$18(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$f:Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public double[] value(double[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$f:Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction.value:([D)[D
      10: areturn

  public org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian();
    Code:
       0: new           #4                  // class org/apache/commons/math3/analysis/FunctionUtils$18$1
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method org/apache/commons/math3/analysis/FunctionUtils$18$1."<init>":(Lorg/apache/commons/math3/analysis/FunctionUtils$18;)V
       8: areturn
}
