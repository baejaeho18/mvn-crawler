Compiled from "UniformIntegerDistribution.java"
public class org.apache.commons.math3.distribution.UniformIntegerDistribution extends org.apache.commons.math3.distribution.AbstractIntegerDistribution {
  private static final long serialVersionUID;

  private final int lower;

  private final int upper;

  public org.apache.commons.math3.distribution.UniformIntegerDistribution(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/math3/random/Well19937c
       4: dup
       5: invokespecial #2                  // Method org/apache/commons/math3/random/Well19937c."<init>":()V
       8: iload_1
       9: iload_2
      10: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/math3/random/RandomGenerator;II)V
      13: return

  public org.apache.commons.math3.distribution.UniformIntegerDistribution(org.apache.commons.math3.random.RandomGenerator, int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/commons/math3/distribution/AbstractIntegerDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;)V
       5: iload_2
       6: iload_3
       7: if_icmplt     30
      10: new           #5                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      13: dup
      14: getstatic     #6                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      17: iload_2
      18: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: iload_3
      22: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: iconst_0
      26: invokespecial #8                  // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      29: athrow
      30: aload_0
      31: iload_2
      32: putfield      #9                  // Field lower:I
      35: aload_0
      36: iload_3
      37: putfield      #10                 // Field upper:I
      40: return

  public double probability(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #9                  // Field lower:I
       5: if_icmplt     16
       8: iload_1
       9: aload_0
      10: getfield      #10                 // Field upper:I
      13: if_icmple     18
      16: dconst_0
      17: dreturn
      18: dconst_1
      19: aload_0
      20: getfield      #10                 // Field upper:I
      23: aload_0
      24: getfield      #9                  // Field lower:I
      27: isub
      28: iconst_1
      29: iadd
      30: i2d
      31: ddiv
      32: dreturn

  public double cumulativeProbability(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #9                  // Field lower:I
       5: if_icmpge     10
       8: dconst_0
       9: dreturn
      10: iload_1
      11: aload_0
      12: getfield      #10                 // Field upper:I
      15: if_icmple     20
      18: dconst_1
      19: dreturn
      20: iload_1
      21: aload_0
      22: getfield      #9                  // Field lower:I
      25: isub
      26: i2d
      27: dconst_1
      28: dadd
      29: aload_0
      30: getfield      #10                 // Field upper:I
      33: aload_0
      34: getfield      #9                  // Field lower:I
      37: isub
      38: i2d
      39: dconst_1
      40: dadd
      41: ddiv
      42: dreturn

  public double getNumericalMean();
    Code:
       0: ldc2_w        #11                 // double 0.5d
       3: aload_0
       4: getfield      #9                  // Field lower:I
       7: aload_0
       8: getfield      #10                 // Field upper:I
      11: iadd
      12: i2d
      13: dmul
      14: dreturn

  public double getNumericalVariance();
    Code:
       0: aload_0
       1: getfield      #10                 // Field upper:I
       4: aload_0
       5: getfield      #9                  // Field lower:I
       8: isub
       9: iconst_1
      10: iadd
      11: i2d
      12: dstore_1
      13: dload_1
      14: dload_1
      15: dmul
      16: dconst_1
      17: dsub
      18: ldc2_w        #13                 // double 12.0d
      21: ddiv
      22: dreturn

  public int getSupportLowerBound();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lower:I
       4: ireturn

  public int getSupportUpperBound();
    Code:
       0: aload_0
       1: getfield      #10                 // Field upper:I
       4: ireturn

  public boolean isSupportConnected();
    Code:
       0: iconst_1
       1: ireturn

  public int sample();
    Code:
       0: aload_0
       1: getfield      #15                 // Field random:Lorg/apache/commons/math3/random/RandomGenerator;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/commons/math3/random/RandomGenerator.nextDouble:()D
       9: dstore_1
      10: dload_1
      11: aload_0
      12: getfield      #10                 // Field upper:I
      15: i2d
      16: dmul
      17: dconst_1
      18: dload_1
      19: dsub
      20: aload_0
      21: getfield      #9                  // Field lower:I
      24: i2d
      25: dmul
      26: dadd
      27: dload_1
      28: dadd
      29: dstore_3
      30: dload_3
      31: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      34: d2i
      35: ireturn
}
