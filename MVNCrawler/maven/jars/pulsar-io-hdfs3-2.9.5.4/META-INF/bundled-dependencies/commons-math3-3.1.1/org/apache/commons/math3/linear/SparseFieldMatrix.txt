Compiled from "SparseFieldMatrix.java"
public class org.apache.commons.math3.linear.SparseFieldMatrix<T extends org.apache.commons.math3.FieldElement<T>> extends org.apache.commons.math3.linear.AbstractFieldMatrix<T> {
  private final org.apache.commons.math3.util.OpenIntToFieldHashMap<T> entries;

  private final int rows;

  private final int columns;

  public org.apache.commons.math3.linear.SparseFieldMatrix(org.apache.commons.math3.Field<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field rows:I
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field columns:I
      15: aload_0
      16: new           #4                  // class org/apache/commons/math3/util/OpenIntToFieldHashMap
      19: dup
      20: aload_1
      21: invokespecial #5                  // Method org/apache/commons/math3/util/OpenIntToFieldHashMap."<init>":(Lorg/apache/commons/math3/Field;)V
      24: putfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      27: return

  public org.apache.commons.math3.linear.SparseFieldMatrix(org.apache.commons.math3.Field<T>, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #7                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
       7: aload_0
       8: iload_2
       9: putfield      #2                  // Field rows:I
      12: aload_0
      13: iload_3
      14: putfield      #3                  // Field columns:I
      17: aload_0
      18: new           #4                  // class org/apache/commons/math3/util/OpenIntToFieldHashMap
      21: dup
      22: aload_1
      23: invokespecial #5                  // Method org/apache/commons/math3/util/OpenIntToFieldHashMap."<init>":(Lorg/apache/commons/math3/Field;)V
      26: putfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      29: return

  public org.apache.commons.math3.linear.SparseFieldMatrix(org.apache.commons.math3.linear.SparseFieldMatrix<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method getField:()Lorg/apache/commons/math3/Field;
       5: aload_1
       6: invokevirtual #9                  // Method getRowDimension:()I
       9: aload_1
      10: invokevirtual #10                 // Method getColumnDimension:()I
      13: invokespecial #7                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
      16: aload_0
      17: aload_1
      18: invokevirtual #9                  // Method getRowDimension:()I
      21: putfield      #2                  // Field rows:I
      24: aload_0
      25: aload_1
      26: invokevirtual #10                 // Method getColumnDimension:()I
      29: putfield      #3                  // Field columns:I
      32: aload_0
      33: new           #4                  // class org/apache/commons/math3/util/OpenIntToFieldHashMap
      36: dup
      37: aload_1
      38: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      41: invokespecial #11                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap."<init>":(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)V
      44: putfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      47: return

  public org.apache.commons.math3.linear.SparseFieldMatrix(org.apache.commons.math3.linear.FieldMatrix<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getField:()Lorg/apache/commons/math3/Field;
       7: aload_1
       8: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getRowDimension:()I
      13: aload_1
      14: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getColumnDimension:()I
      19: invokespecial #7                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
      22: aload_0
      23: aload_1
      24: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getRowDimension:()I
      29: putfield      #2                  // Field rows:I
      32: aload_0
      33: aload_1
      34: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getColumnDimension:()I
      39: putfield      #3                  // Field columns:I
      42: aload_0
      43: new           #4                  // class org/apache/commons/math3/util/OpenIntToFieldHashMap
      46: dup
      47: aload_0
      48: invokevirtual #8                  // Method getField:()Lorg/apache/commons/math3/Field;
      51: invokespecial #5                  // Method org/apache/commons/math3/util/OpenIntToFieldHashMap."<init>":(Lorg/apache/commons/math3/Field;)V
      54: putfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      57: iconst_0
      58: istore_2
      59: iload_2
      60: aload_0
      61: getfield      #2                  // Field rows:I
      64: if_icmpge     103
      67: iconst_0
      68: istore_3
      69: iload_3
      70: aload_0
      71: getfield      #3                  // Field columns:I
      74: if_icmpge     97
      77: aload_0
      78: iload_2
      79: iload_3
      80: aload_1
      81: iload_2
      82: iload_3
      83: invokeinterface #15,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getEntry:(II)Lorg/apache/commons/math3/FieldElement;
      88: invokevirtual #16                 // Method setEntry:(IILorg/apache/commons/math3/FieldElement;)V
      91: iinc          3, 1
      94: goto          69
      97: iinc          2, 1
     100: goto          59
     103: return

  public void addToEntry(int, int, T);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #17                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #18                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: iload_1
      12: iload_2
      13: invokespecial #19                 // Method computeKey:(II)I
      16: istore        4
      18: aload_0
      19: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      22: iload         4
      24: invokevirtual #20                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.get:(I)Lorg/apache/commons/math3/FieldElement;
      27: aload_3
      28: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #22                 // class org/apache/commons/math3/FieldElement
      36: astore        5
      38: aload_0
      39: invokevirtual #8                  // Method getField:()Lorg/apache/commons/math3/Field;
      42: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      47: checkcast     #22                 // class org/apache/commons/math3/FieldElement
      50: aload         5
      52: invokevirtual #24                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          71
      58: aload_0
      59: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      62: iload         4
      64: invokevirtual #25                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.remove:(I)Lorg/apache/commons/math3/FieldElement;
      67: pop
      68: goto          83
      71: aload_0
      72: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      75: iload         4
      77: aload         5
      79: invokevirtual #26                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.put:(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      82: pop
      83: return

  public org.apache.commons.math3.linear.FieldMatrix<T> copy();
    Code:
       0: new           #27                 // class org/apache/commons/math3/linear/SparseFieldMatrix
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method "<init>":(Lorg/apache/commons/math3/linear/SparseFieldMatrix;)V
       8: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> createMatrix(int, int);
    Code:
       0: new           #27                 // class org/apache/commons/math3/linear/SparseFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #8                  // Method getField:()Lorg/apache/commons/math3/Field;
       8: iload_1
       9: iload_2
      10: invokespecial #29                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      13: areturn

  public int getColumnDimension();
    Code:
       0: aload_0
       1: getfield      #3                  // Field columns:I
       4: ireturn

  public T getEntry(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #17                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #18                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      14: aload_0
      15: iload_1
      16: iload_2
      17: invokespecial #19                 // Method computeKey:(II)I
      20: invokevirtual #20                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.get:(I)Lorg/apache/commons/math3/FieldElement;
      23: areturn

  public int getRowDimension();
    Code:
       0: aload_0
       1: getfield      #2                  // Field rows:I
       4: ireturn

  public void multiplyEntry(int, int, T);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #17                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #18                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: iload_1
      12: iload_2
      13: invokespecial #19                 // Method computeKey:(II)I
      16: istore        4
      18: aload_0
      19: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      22: iload         4
      24: invokevirtual #20                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.get:(I)Lorg/apache/commons/math3/FieldElement;
      27: aload_3
      28: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #22                 // class org/apache/commons/math3/FieldElement
      36: astore        5
      38: aload_0
      39: invokevirtual #8                  // Method getField:()Lorg/apache/commons/math3/Field;
      42: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      47: checkcast     #22                 // class org/apache/commons/math3/FieldElement
      50: aload         5
      52: invokevirtual #24                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          71
      58: aload_0
      59: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      62: iload         4
      64: invokevirtual #25                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.remove:(I)Lorg/apache/commons/math3/FieldElement;
      67: pop
      68: goto          83
      71: aload_0
      72: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      75: iload         4
      77: aload         5
      79: invokevirtual #26                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.put:(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      82: pop
      83: return

  public void setEntry(int, int, T);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #17                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #18                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: invokevirtual #8                  // Method getField:()Lorg/apache/commons/math3/Field;
      14: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      19: checkcast     #22                 // class org/apache/commons/math3/FieldElement
      22: aload_3
      23: invokevirtual #24                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifeq          46
      29: aload_0
      30: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      33: aload_0
      34: iload_1
      35: iload_2
      36: invokespecial #19                 // Method computeKey:(II)I
      39: invokevirtual #25                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.remove:(I)Lorg/apache/commons/math3/FieldElement;
      42: pop
      43: goto          61
      46: aload_0
      47: getfield      #6                  // Field entries:Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
      50: aload_0
      51: iload_1
      52: iload_2
      53: invokespecial #19                 // Method computeKey:(II)I
      56: aload_3
      57: invokevirtual #26                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap.put:(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      60: pop
      61: return

  private int computeKey(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field columns:I
       5: imul
       6: iload_2
       7: iadd
       8: ireturn
}
