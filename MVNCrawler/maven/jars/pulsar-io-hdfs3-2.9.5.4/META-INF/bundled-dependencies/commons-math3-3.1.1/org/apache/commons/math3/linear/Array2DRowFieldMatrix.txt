Compiled from "Array2DRowFieldMatrix.java"
public class org.apache.commons.math3.linear.Array2DRowFieldMatrix<T extends org.apache.commons.math3.FieldElement<T>> extends org.apache.commons.math3.linear.AbstractFieldMatrix<T> implements java.io.Serializable {
  private static final long serialVersionUID;

  private T[][] data;

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #2                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokestatic  #3                  // Method buildArray:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
      14: putfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      17: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[][]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method extractField:([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
       5: aload_1
       6: invokespecial #6                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;)V
       9: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, T[][]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: aload_0
       6: aload_2
       7: invokespecial #7                  // Method copyIn:([[Lorg/apache/commons/math3/FieldElement;)V
      10: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[][], boolean) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method extractField:([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
       5: aload_1
       6: iload_2
       7: invokespecial #8                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
      10: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, T[][], boolean) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: iload_3
       6: ifeq          17
       9: aload_0
      10: aload_2
      11: invokespecial #7                  // Method copyIn:([[Lorg/apache/commons/math3/FieldElement;)V
      14: goto          109
      17: aload_2
      18: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      21: aload_2
      22: arraylength
      23: istore        4
      25: iload         4
      27: ifne          41
      30: new           #10                 // class org/apache/commons/math3/exception/NoDataException
      33: dup
      34: getstatic     #11                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_ROW:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      37: invokespecial #12                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      40: athrow
      41: aload_2
      42: iconst_0
      43: aaload
      44: arraylength
      45: istore        5
      47: iload         5
      49: ifne          63
      52: new           #10                 // class org/apache/commons/math3/exception/NoDataException
      55: dup
      56: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_COLUMN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      59: invokespecial #12                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      62: athrow
      63: iconst_1
      64: istore        6
      66: iload         6
      68: iload         4
      70: if_icmpge     104
      73: aload_2
      74: iload         6
      76: aaload
      77: arraylength
      78: iload         5
      80: if_icmpeq     98
      83: new           #14                 // class org/apache/commons/math3/exception/DimensionMismatchException
      86: dup
      87: iload         5
      89: aload_2
      90: iload         6
      92: aaload
      93: arraylength
      94: invokespecial #15                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      97: athrow
      98: iinc          6, 1
     101: goto          66
     104: aload_0
     105: aload_2
     106: putfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     109: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[]) throws org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method extractField:([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
       5: aload_1
       6: invokespecial #17                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
       9: return

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T>, T[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;)V
       5: aload_2
       6: arraylength
       7: istore_3
       8: aload_0
       9: aload_0
      10: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: iload_3
      14: iconst_1
      15: invokestatic  #3                  // Method buildArray:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
      18: putfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      21: iconst_0
      22: istore        4
      24: iload         4
      26: iload_3
      27: if_icmpge     49
      30: aload_0
      31: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      34: iload         4
      36: aaload
      37: iconst_0
      38: aload_2
      39: iload         4
      41: aaload
      42: aastore
      43: iinc          4, 1
      46: goto          24
      49: return

  public org.apache.commons.math3.linear.FieldMatrix<T> createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #19                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: iload_1
       9: iload_2
      10: invokespecial #20                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      13: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> copy();
    Code:
       0: new           #19                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: aload_0
       9: invokespecial #21                 // Method copyOut:()[[Lorg/apache/commons/math3/FieldElement;
      12: iconst_0
      13: invokespecial #8                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
      16: areturn

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> add(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method checkAdditionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: aload_0
       6: invokevirtual #23                 // Method getRowDimension:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #24                 // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      19: iload_2
      20: iload_3
      21: invokestatic  #3                  // Method buildArray:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
      24: astore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload_2
      32: if_icmpge     104
      35: aload_0
      36: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      39: iload         5
      41: aaload
      42: astore        6
      44: aload_1
      45: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      48: iload         5
      50: aaload
      51: astore        7
      53: aload         4
      55: iload         5
      57: aaload
      58: astore        8
      60: iconst_0
      61: istore        9
      63: iload         9
      65: iload_3
      66: if_icmpge     98
      69: aload         8
      71: iload         9
      73: aload         6
      75: iload         9
      77: aaload
      78: aload         7
      80: iload         9
      82: aaload
      83: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      88: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      91: aastore
      92: iinc          9, 1
      95: goto          63
      98: iinc          5, 1
     101: goto          29
     104: new           #19                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
     107: dup
     108: aload_0
     109: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
     112: aload         4
     114: iconst_0
     115: invokespecial #8                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
     118: areturn

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: aload_0
       6: invokevirtual #23                 // Method getRowDimension:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #24                 // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      19: iload_2
      20: iload_3
      21: invokestatic  #3                  // Method buildArray:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
      24: astore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload_2
      32: if_icmpge     104
      35: aload_0
      36: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      39: iload         5
      41: aaload
      42: astore        6
      44: aload_1
      45: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      48: iload         5
      50: aaload
      51: astore        7
      53: aload         4
      55: iload         5
      57: aaload
      58: astore        8
      60: iconst_0
      61: istore        9
      63: iload         9
      65: iload_3
      66: if_icmpge     98
      69: aload         8
      71: iload         9
      73: aload         6
      75: iload         9
      77: aaload
      78: aload         7
      80: iload         9
      82: aaload
      83: invokeinterface #28,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      88: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      91: aastore
      92: iinc          9, 1
      95: goto          63
      98: iinc          5, 1
     101: goto          29
     104: new           #19                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
     107: dup
     108: aload_0
     109: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
     112: aload         4
     114: iconst_0
     115: invokespecial #8                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
     118: areturn

  public org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: aload_0
       6: invokevirtual #23                 // Method getRowDimension:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #24                 // Method getColumnDimension:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #24                 // Method getColumnDimension:()I
      19: istore        4
      21: aload_0
      22: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      25: iload_2
      26: iload_3
      27: invokestatic  #3                  // Method buildArray:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
      30: astore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload_2
      38: if_icmpge     147
      41: aload_0
      42: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      45: iload         6
      47: aaload
      48: astore        7
      50: aload         5
      52: iload         6
      54: aaload
      55: astore        8
      57: iconst_0
      58: istore        9
      60: iload         9
      62: iload_3
      63: if_icmpge     141
      66: aload_0
      67: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      70: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      75: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      78: astore        10
      80: iconst_0
      81: istore        11
      83: iload         11
      85: iload         4
      87: if_icmpge     128
      90: aload         10
      92: aload         7
      94: iload         11
      96: aaload
      97: aload_1
      98: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     101: iload         11
     103: aaload
     104: iload         9
     106: aaload
     107: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     112: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     117: checkcast     #26                 // class org/apache/commons/math3/FieldElement
     120: astore        10
     122: iinc          11, 1
     125: goto          83
     128: aload         8
     130: iload         9
     132: aload         10
     134: aastore
     135: iinc          9, 1
     138: goto          60
     141: iinc          6, 1
     144: goto          35
     147: new           #19                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
     150: dup
     151: aload_0
     152: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
     155: aload         5
     157: iconst_0
     158: invokespecial #8                  // Method "<init>":(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
     161: areturn

  public T[][] getData();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method copyOut:()[[Lorg/apache/commons/math3/FieldElement;
       4: areturn

  public T[][] getDataRef();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: areturn

  public void setSubMatrix(T[][], int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: ifnonnull     183
       7: iload_2
       8: ifle          33
      11: new           #32                 // class org/apache/commons/math3/exception/MathIllegalStateException
      14: dup
      15: getstatic     #33                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: iconst_1
      19: anewarray     #34                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: iload_2
      25: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: invokespecial #36                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      32: athrow
      33: iload_3
      34: ifle          59
      37: new           #32                 // class org/apache/commons/math3/exception/MathIllegalStateException
      40: dup
      41: getstatic     #37                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      44: iconst_1
      45: anewarray     #34                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: iload_3
      51: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: aastore
      55: invokespecial #36                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      58: athrow
      59: aload_1
      60: arraylength
      61: istore        4
      63: iload         4
      65: ifne          79
      68: new           #10                 // class org/apache/commons/math3/exception/NoDataException
      71: dup
      72: getstatic     #11                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_ROW:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      75: invokespecial #12                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      78: athrow
      79: aload_1
      80: iconst_0
      81: aaload
      82: arraylength
      83: istore        5
      85: iload         5
      87: ifne          101
      90: new           #10                 // class org/apache/commons/math3/exception/NoDataException
      93: dup
      94: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_COLUMN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      97: invokespecial #12                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
     100: athrow
     101: aload_0
     102: aload_0
     103: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
     106: aload_1
     107: arraylength
     108: iload         5
     110: invokestatic  #3                  // Method buildArray:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
     113: putfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     116: iconst_0
     117: istore        6
     119: iload         6
     121: aload_0
     122: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     125: arraylength
     126: if_icmpge     180
     129: aload_1
     130: iload         6
     132: aaload
     133: arraylength
     134: iload         5
     136: if_icmpeq     154
     139: new           #14                 // class org/apache/commons/math3/exception/DimensionMismatchException
     142: dup
     143: iload         5
     145: aload_1
     146: iload         6
     148: aaload
     149: arraylength
     150: invokespecial #15                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
     153: athrow
     154: aload_1
     155: iload         6
     157: aaload
     158: iconst_0
     159: aload_0
     160: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
     163: iload         6
     165: iload_2
     166: iadd
     167: aaload
     168: iload_3
     169: iload         5
     171: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     174: iinc          6, 1
     177: goto          119
     180: goto          190
     183: aload_0
     184: aload_1
     185: iload_2
     186: iload_3
     187: invokespecial #39                 // Method org/apache/commons/math3/linear/AbstractFieldMatrix.setSubMatrix:([[Lorg/apache/commons/math3/FieldElement;II)V
     190: return

  public T getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #40                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #41                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aaload
      18: areturn

  public void setEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #40                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #41                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aload_3
      18: aastore
      19: return

  public void addToEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #40                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #41                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aload_0
      18: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      21: iload_1
      22: aaload
      23: iload_2
      24: aaload
      25: aload_3
      26: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      34: aastore
      35: return

  public void multiplyEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #40                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #41                 // Method checkColumnIndex:(I)V
      10: aload_0
      11: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      14: iload_1
      15: aaload
      16: iload_2
      17: aload_0
      18: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      21: iload_1
      22: aaload
      23: iload_2
      24: aaload
      25: aload_3
      26: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      34: aastore
      35: return

  public int getRowDimension();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      15: arraylength
      16: ireturn

  public int getColumnDimension();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
       4: ifnull        16
       7: aload_0
       8: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      11: iconst_0
      12: aaload
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      24: iconst_0
      25: aaload
      26: arraylength
      27: ireturn

  public T[] operate(T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #24                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: arraylength
      12: iload_3
      13: if_icmpeq     27
      16: new           #14                 // class org/apache/commons/math3/exception/DimensionMismatchException
      19: dup
      20: aload_1
      21: arraylength
      22: iload_3
      23: invokespecial #15                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      26: athrow
      27: aload_0
      28: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      31: iload_2
      32: invokestatic  #42                 // Method buildArray:(Lorg/apache/commons/math3/Field;I)[Lorg/apache/commons/math3/FieldElement;
      35: astore        4
      37: iconst_0
      38: istore        5
      40: iload         5
      42: iload_2
      43: if_icmpge     123
      46: aload_0
      47: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      50: iload         5
      52: aaload
      53: astore        6
      55: aload_0
      56: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      59: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      64: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      67: astore        7
      69: iconst_0
      70: istore        8
      72: iload         8
      74: iload_3
      75: if_icmpge     110
      78: aload         7
      80: aload         6
      82: iload         8
      84: aaload
      85: aload_1
      86: iload         8
      88: aaload
      89: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      94: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #26                 // class org/apache/commons/math3/FieldElement
     102: astore        7
     104: iinc          8, 1
     107: goto          72
     110: aload         4
     112: iload         5
     114: aload         7
     116: aastore
     117: iinc          5, 1
     120: goto          40
     123: aload         4
     125: areturn

  public T[] preMultiply(T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #24                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: arraylength
      12: iload_2
      13: if_icmpeq     27
      16: new           #14                 // class org/apache/commons/math3/exception/DimensionMismatchException
      19: dup
      20: aload_1
      21: arraylength
      22: iload_2
      23: invokespecial #15                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      26: athrow
      27: aload_0
      28: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      31: iload_3
      32: invokestatic  #42                 // Method buildArray:(Lorg/apache/commons/math3/Field;I)[Lorg/apache/commons/math3/FieldElement;
      35: astore        4
      37: iconst_0
      38: istore        5
      40: iload         5
      42: iload_3
      43: if_icmpge     119
      46: aload_0
      47: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
      50: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      55: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      58: astore        6
      60: iconst_0
      61: istore        7
      63: iload         7
      65: iload_2
      66: if_icmpge     106
      69: aload         6
      71: aload_0
      72: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      75: iload         7
      77: aaload
      78: iload         5
      80: aaload
      81: aload_1
      82: iload         7
      84: aaload
      85: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      90: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #26                 // class org/apache/commons/math3/FieldElement
      98: astore        6
     100: iinc          7, 1
     103: goto          63
     106: aload         4
     108: iload         5
     110: aload         6
     112: aastore
     113: iinc          5, 1
     116: goto          40
     119: aload         4
     121: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #24                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #43,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_2
      32: if_icmpge     85
      35: aload_0
      36: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      39: iload         4
      41: aaload
      42: astore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload_3
      50: if_icmpge     79
      53: aload         5
      55: iload         6
      57: aload_1
      58: iload         4
      60: iload         6
      62: aload         5
      64: iload         6
      66: aaload
      67: invokeinterface #44,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      72: aastore
      73: iinc          6, 1
      76: goto          47
      79: iinc          4, 1
      82: goto          29
      85: aload_1
      86: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      91: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #24                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #46,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_2
      32: if_icmpge     80
      35: aload_0
      36: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      39: iload         4
      41: aaload
      42: astore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload_3
      50: if_icmpge     74
      53: aload_1
      54: iload         4
      56: iload         6
      58: aload         5
      60: iload         6
      62: aaload
      63: invokeinterface #47,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      68: iinc          6, 1
      71: goto          47
      74: iinc          4, 1
      77: goto          29
      80: aload_1
      81: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      86: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #49                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #23                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #24                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #43,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      30: iload_2
      31: istore        6
      33: iload         6
      35: iload_3
      36: if_icmpgt     91
      39: aload_0
      40: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      43: iload         6
      45: aaload
      46: astore        7
      48: iload         4
      50: istore        8
      52: iload         8
      54: iload         5
      56: if_icmpgt     85
      59: aload         7
      61: iload         8
      63: aload_1
      64: iload         6
      66: iload         8
      68: aload         7
      70: iload         8
      72: aaload
      73: invokeinterface #44,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      78: aastore
      79: iinc          8, 1
      82: goto          52
      85: iinc          6, 1
      88: goto          33
      91: aload_1
      92: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      97: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #49                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #23                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #24                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #46,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      30: iload_2
      31: istore        6
      33: iload         6
      35: iload_3
      36: if_icmpgt     86
      39: aload_0
      40: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      43: iload         6
      45: aaload
      46: astore        7
      48: iload         4
      50: istore        8
      52: iload         8
      54: iload         5
      56: if_icmpgt     80
      59: aload_1
      60: iload         6
      62: iload         8
      64: aload         7
      66: iload         8
      68: aaload
      69: invokeinterface #47,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      74: iinc          8, 1
      77: goto          52
      80: iinc          6, 1
      83: goto          33
      86: aload_1
      87: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      92: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #24                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #43,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     85
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_2
      41: if_icmpge     79
      44: aload_0
      45: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      48: iload         5
      50: aaload
      51: astore        6
      53: aload         6
      55: iload         4
      57: aload_1
      58: iload         5
      60: iload         4
      62: aload         6
      64: iload         4
      66: aaload
      67: invokeinterface #44,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      72: aastore
      73: iinc          5, 1
      76: goto          38
      79: iinc          4, 1
      82: goto          29
      85: aload_1
      86: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      91: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowDimension:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #24                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_1
      11: iload_2
      12: iload_3
      13: iconst_0
      14: iload_2
      15: iconst_1
      16: isub
      17: iconst_0
      18: iload_3
      19: iconst_1
      20: isub
      21: invokeinterface #46,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     76
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_2
      41: if_icmpge     70
      44: aload_1
      45: iload         5
      47: iload         4
      49: aload_0
      50: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      53: iload         5
      55: aaload
      56: iload         4
      58: aaload
      59: invokeinterface #47,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      64: iinc          5, 1
      67: goto          38
      70: iinc          4, 1
      73: goto          29
      76: aload_1
      77: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      82: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #49                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #23                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #24                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #43,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      30: iload         4
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpgt     91
      41: iload_2
      42: istore        7
      44: iload         7
      46: iload_3
      47: if_icmpgt     85
      50: aload_0
      51: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      54: iload         7
      56: aaload
      57: astore        8
      59: aload         8
      61: iload         6
      63: aload_1
      64: iload         7
      66: iload         6
      68: aload         8
      70: iload         6
      72: aaload
      73: invokeinterface #44,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      78: aastore
      79: iinc          7, 1
      82: goto          44
      85: iinc          6, 1
      88: goto          34
      91: aload_1
      92: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      97: areturn

  public T walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #49                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: invokevirtual #23                 // Method getRowDimension:()I
      15: aload_0
      16: invokevirtual #24                 // Method getColumnDimension:()I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #46,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      30: iload         4
      32: istore        6
      34: iload         6
      36: iload         5
      38: if_icmpgt     82
      41: iload_2
      42: istore        7
      44: iload         7
      46: iload_3
      47: if_icmpgt     76
      50: aload_1
      51: iload         7
      53: iload         6
      55: aload_0
      56: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      59: iload         7
      61: aaload
      62: iload         6
      64: aaload
      65: invokeinterface #47,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
      70: iinc          7, 1
      73: goto          44
      76: iinc          6, 1
      79: goto          34
      82: aload_1
      83: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      88: areturn

  private T[][] copyOut();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowDimension:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #18                 // Method getField:()Lorg/apache/commons/math3/Field;
       9: iload_1
      10: aload_0
      11: invokevirtual #24                 // Method getColumnDimension:()I
      14: invokestatic  #3                  // Method buildArray:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: iload_1
      22: if_icmpge     52
      25: aload_0
      26: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      29: iload_3
      30: aaload
      31: iconst_0
      32: aload_2
      33: iload_3
      34: aaload
      35: iconst_0
      36: aload_0
      37: getfield      #4                  // Field data:[[Lorg/apache/commons/math3/FieldElement;
      40: iload_3
      41: aaload
      42: arraylength
      43: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: iinc          3, 1
      49: goto          20
      52: aload_2
      53: areturn

  private void copyIn(T[][]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokevirtual #50                 // Method setSubMatrix:([[Lorg/apache/commons/math3/FieldElement;II)V
       7: return
}
