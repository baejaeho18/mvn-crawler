Compiled from "MannWhitneyUTest.java"
public class org.apache.commons.math3.stat.inference.MannWhitneyUTest {
  private org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking;

  public org.apache.commons.math3.stat.inference.MannWhitneyUTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/stat/ranking/NaturalRanking
       8: dup
       9: getstatic     #3                  // Field org/apache/commons/math3/stat/ranking/NaNStrategy.FIXED:Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
      12: getstatic     #4                  // Field org/apache/commons/math3/stat/ranking/TiesStrategy.AVERAGE:Lorg/apache/commons/math3/stat/ranking/TiesStrategy;
      15: invokespecial #5                  // Method org/apache/commons/math3/stat/ranking/NaturalRanking."<init>":(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
      18: putfield      #6                  // Field naturalRanking:Lorg/apache/commons/math3/stat/ranking/NaturalRanking;
      21: return

  public org.apache.commons.math3.stat.inference.MannWhitneyUTest(org.apache.commons.math3.stat.ranking.NaNStrategy, org.apache.commons.math3.stat.ranking.TiesStrategy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/stat/ranking/NaturalRanking
       8: dup
       9: aload_1
      10: aload_2
      11: invokespecial #5                  // Method org/apache/commons/math3/stat/ranking/NaturalRanking."<init>":(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
      14: putfield      #6                  // Field naturalRanking:Lorg/apache/commons/math3/stat/ranking/NaturalRanking;
      17: return

  private void ensureDataConformance(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     16
       8: new           #7                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #8                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: arraylength
      18: ifeq          26
      21: aload_2
      22: arraylength
      23: ifne          34
      26: new           #9                  // class org/apache/commons/math3/exception/NoDataException
      29: dup
      30: invokespecial #10                 // Method org/apache/commons/math3/exception/NoDataException."<init>":()V
      33: athrow
      34: return

  private double[] concatenateSamples(double[], double[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: iadd
       5: newarray       double
       7: astore_3
       8: aload_1
       9: iconst_0
      10: aload_3
      11: iconst_0
      12: aload_1
      13: arraylength
      14: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_2
      18: iconst_0
      19: aload_3
      20: aload_1
      21: arraylength
      22: aload_2
      23: arraylength
      24: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_3
      28: areturn

  public double mannWhitneyU(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method ensureDataConformance:([D[D)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokespecial #13                 // Method concatenateSamples:([D[D)[D
      12: astore_3
      13: aload_0
      14: getfield      #6                  // Field naturalRanking:Lorg/apache/commons/math3/stat/ranking/NaturalRanking;
      17: aload_3
      18: invokevirtual #14                 // Method org/apache/commons/math3/stat/ranking/NaturalRanking.rank:([D)[D
      21: astore        4
      23: dconst_0
      24: dstore        5
      26: iconst_0
      27: istore        7
      29: iload         7
      31: aload_1
      32: arraylength
      33: if_icmpge     52
      36: dload         5
      38: aload         4
      40: iload         7
      42: daload
      43: dadd
      44: dstore        5
      46: iinc          7, 1
      49: goto          29
      52: dload         5
      54: aload_1
      55: arraylength
      56: aload_1
      57: arraylength
      58: iconst_1
      59: iadd
      60: imul
      61: iconst_2
      62: idiv
      63: i2d
      64: dsub
      65: dstore        7
      67: aload_1
      68: arraylength
      69: aload_2
      70: arraylength
      71: imul
      72: i2d
      73: dload         7
      75: dsub
      76: dstore        9
      78: dload         7
      80: dload         9
      82: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      85: dreturn

  private double calculateAsymptoticPValue(double, int, int) throws org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: iload_3
       1: i2l
       2: iload         4
       4: i2l
       5: lmul
       6: lstore        5
       8: lload         5
      10: l2d
      11: ldc2_w        #16                 // double 2.0d
      14: ddiv
      15: dstore        7
      17: lload         5
      19: iload_3
      20: iload         4
      22: iadd
      23: iconst_1
      24: iadd
      25: i2l
      26: lmul
      27: l2d
      28: ldc2_w        #18                 // double 12.0d
      31: ddiv
      32: dstore        9
      34: dload_1
      35: dload         7
      37: dsub
      38: dload         9
      40: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      43: ddiv
      44: dstore        11
      46: new           #21                 // class org/apache/commons/math3/distribution/NormalDistribution
      49: dup
      50: dconst_0
      51: dconst_1
      52: invokespecial #22                 // Method org/apache/commons/math3/distribution/NormalDistribution."<init>":(DD)V
      55: astore        13
      57: ldc2_w        #16                 // double 2.0d
      60: aload         13
      62: dload         11
      64: invokevirtual #23                 // Method org/apache/commons/math3/distribution/NormalDistribution.cumulativeProbability:(D)D
      67: dmul
      68: dreturn

  public double mannWhitneyUTest(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method ensureDataConformance:([D[D)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #24                 // Method mannWhitneyU:([D[D)D
      12: dstore_3
      13: aload_1
      14: arraylength
      15: aload_2
      16: arraylength
      17: imul
      18: i2d
      19: dload_3
      20: dsub
      21: dstore        5
      23: aload_0
      24: dload         5
      26: aload_1
      27: arraylength
      28: aload_2
      29: arraylength
      30: invokespecial #25                 // Method calculateAsymptoticPValue:(DII)D
      33: dreturn
}
