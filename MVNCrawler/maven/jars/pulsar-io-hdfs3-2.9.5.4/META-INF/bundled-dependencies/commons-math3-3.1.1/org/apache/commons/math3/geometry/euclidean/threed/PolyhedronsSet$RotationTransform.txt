Compiled from "PolyhedronsSet.java"
class org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform implements org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D, org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> {
  private org.apache.commons.math3.geometry.euclidean.threed.Vector3D center;

  private org.apache.commons.math3.geometry.euclidean.threed.Rotation rotation;

  private org.apache.commons.math3.geometry.euclidean.threed.Plane cachedOriginal;

  private org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> cachedTransform;

  public org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Rotation);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field center:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
      14: return

  public org.apache.commons.math3.geometry.euclidean.threed.Vector3D apply(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_1
       1: checkcast     #4                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
       4: aload_0
       5: getfield      #2                  // Field center:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       8: invokevirtual #5                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D.subtract:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      11: astore_2
      12: new           #4                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      15: dup
      16: dconst_1
      17: aload_0
      18: getfield      #2                  // Field center:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      21: dconst_1
      22: aload_0
      23: getfield      #3                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
      26: aload_2
      27: invokevirtual #6                  // Method org/apache/commons/math3/geometry/euclidean/threed/Rotation.applyTo:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      30: invokespecial #7                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
      33: areturn

  public org.apache.commons.math3.geometry.euclidean.threed.Plane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_1
       1: checkcast     #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
       4: aload_0
       5: getfield      #2                  // Field center:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       8: aload_0
       9: getfield      #3                  // Field rotation:Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
      12: invokevirtual #9                  // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.rotate:(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
      15: areturn

  public org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>, org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #10                 // Field cachedOriginal:Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
       5: if_acmpeq     178
       8: aload_2
       9: checkcast     #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      12: astore        4
      14: aload_3
      15: checkcast     #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      18: astore        5
      20: aload         4
      22: invokevirtual #11                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.getOrigin:()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      25: astore        6
      27: aload         4
      29: new           #12                 // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
      32: dup
      33: dconst_1
      34: dconst_0
      35: invokespecial #13                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D."<init>":(DD)V
      38: invokevirtual #14                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      41: astore        7
      43: aload         4
      45: new           #12                 // class org/apache/commons/math3/geometry/euclidean/twod/Vector2D
      48: dup
      49: dconst_0
      50: dconst_1
      51: invokespecial #13                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D."<init>":(DD)V
      54: invokevirtual #14                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      57: astore        8
      59: aload         5
      61: aload_0
      62: aload         6
      64: invokevirtual #15                 // Method apply:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      67: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSubSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      70: astore        9
      72: aload         5
      74: aload_0
      75: aload         7
      77: invokevirtual #15                 // Method apply:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      80: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSubSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      83: astore        10
      85: aload         5
      87: aload_0
      88: aload         8
      90: invokevirtual #15                 // Method apply:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      93: invokevirtual #16                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSubSpace:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      96: astore        11
      98: new           #17                 // class java/awt/geom/AffineTransform
     101: dup
     102: aload         10
     104: invokevirtual #18                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
     107: aload         9
     109: invokevirtual #18                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
     112: dsub
     113: aload         10
     115: invokevirtual #19                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
     118: aload         9
     120: invokevirtual #19                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
     123: dsub
     124: aload         11
     126: invokevirtual #18                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
     129: aload         9
     131: invokevirtual #18                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
     134: dsub
     135: aload         11
     137: invokevirtual #19                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
     140: aload         9
     142: invokevirtual #19                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
     145: dsub
     146: aload         9
     148: invokevirtual #18                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
     151: aload         9
     153: invokevirtual #19                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
     156: invokespecial #20                 // Method java/awt/geom/AffineTransform."<init>":(DDDDDD)V
     159: astore        12
     161: aload_0
     162: aload_2
     163: checkcast     #8                  // class org/apache/commons/math3/geometry/euclidean/threed/Plane
     166: putfield      #10                 // Field cachedOriginal:Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
     169: aload_0
     170: aload         12
     172: invokestatic  #21                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line.getTransform:(Ljava/awt/geom/AffineTransform;)Lorg/apache/commons/math3/geometry/partitioning/Transform;
     175: putfield      #22                 // Field cachedTransform:Lorg/apache/commons/math3/geometry/partitioning/Transform;
     178: aload_1
     179: checkcast     #23                 // class org/apache/commons/math3/geometry/euclidean/twod/SubLine
     182: aload_0
     183: getfield      #22                 // Field cachedTransform:Lorg/apache/commons/math3/geometry/partitioning/Transform;
     186: invokevirtual #24                 // Method org/apache/commons/math3/geometry/euclidean/twod/SubLine.applyTransform:(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
     189: areturn

  public org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method apply:(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
       5: areturn

  public org.apache.commons.math3.geometry.Vector apply(org.apache.commons.math3.geometry.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method apply:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
       5: areturn
}
