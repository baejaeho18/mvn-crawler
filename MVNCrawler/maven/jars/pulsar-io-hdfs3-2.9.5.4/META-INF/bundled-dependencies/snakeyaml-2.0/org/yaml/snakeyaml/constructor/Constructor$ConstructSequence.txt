Compiled from "Constructor.java"
public class org.yaml.snakeyaml.constructor.Constructor$ConstructSequence implements org.yaml.snakeyaml.constructor.Construct {
  final org.yaml.snakeyaml.constructor.Constructor this$0;

  protected org.yaml.snakeyaml.constructor.Constructor$ConstructSequence(org.yaml.snakeyaml.constructor.Constructor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public java.lang.Object construct(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/yaml/snakeyaml/nodes/SequenceNode
       4: astore_2
       5: ldc           #4                  // class java/util/Set
       7: aload_1
       8: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
      11: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      14: ifeq          43
      17: aload_1
      18: invokevirtual #7                  // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
      21: ifeq          34
      24: new           #8                  // class org/yaml/snakeyaml/error/YAMLException
      27: dup
      28: ldc           #9                  // String Set cannot be recursive.
      30: invokespecial #10                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
      38: aload_2
      39: invokevirtual #11                 // Method org/yaml/snakeyaml/constructor/Constructor.constructSet:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/util/Set;
      42: areturn
      43: ldc           #12                 // class java/util/Collection
      45: aload_1
      46: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
      49: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      52: ifeq          80
      55: aload_1
      56: invokevirtual #7                  // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
      59: ifeq          71
      62: aload_0
      63: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
      66: aload_2
      67: invokevirtual #13                 // Method org/yaml/snakeyaml/constructor/Constructor.newList:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/util/List;
      70: areturn
      71: aload_0
      72: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
      75: aload_2
      76: invokevirtual #14                 // Method org/yaml/snakeyaml/constructor/Constructor.constructSequence:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/util/List;
      79: areturn
      80: aload_1
      81: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
      84: invokevirtual #15                 // Method java/lang/Class.isArray:()Z
      87: ifeq          127
      90: aload_1
      91: invokevirtual #7                  // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
      94: ifeq          118
      97: aload_0
      98: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
     101: aload_1
     102: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
     105: aload_2
     106: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     109: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     114: invokevirtual #18                 // Method org/yaml/snakeyaml/constructor/Constructor.createArray:(Ljava/lang/Class;I)Ljava/lang/Object;
     117: areturn
     118: aload_0
     119: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
     122: aload_2
     123: invokevirtual #19                 // Method org/yaml/snakeyaml/constructor/Constructor.constructArray:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/lang/Object;
     126: areturn
     127: new           #20                 // class java/util/ArrayList
     130: dup
     131: aload_2
     132: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     135: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     140: invokespecial #21                 // Method java/util/ArrayList."<init>":(I)V
     143: astore_3
     144: aload_1
     145: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
     148: invokevirtual #22                 // Method java/lang/Class.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;
     151: astore        4
     153: aload         4
     155: arraylength
     156: istore        5
     158: iconst_0
     159: istore        6
     161: iload         6
     163: iload         5
     165: if_icmpge     208
     168: aload         4
     170: iload         6
     172: aaload
     173: astore        7
     175: aload_2
     176: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     179: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     184: aload         7
     186: invokevirtual #23                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
     189: arraylength
     190: if_icmpne     202
     193: aload_3
     194: aload         7
     196: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     201: pop
     202: iinc          6, 1
     205: goto          161
     208: aload_3
     209: invokeinterface #25,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     214: ifne          543
     217: aload_3
     218: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     223: iconst_1
     224: if_icmpne     352
     227: aload_2
     228: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     231: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     236: anewarray     #26                 // class java/lang/Object
     239: astore        4
     241: aload_3
     242: iconst_0
     243: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     248: checkcast     #28                 // class java/lang/reflect/Constructor
     251: astore        5
     253: iconst_0
     254: istore        6
     256: aload_2
     257: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     260: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     265: astore        7
     267: aload         7
     269: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     274: ifeq          326
     277: aload         7
     279: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     284: checkcast     #32                 // class org/yaml/snakeyaml/nodes/Node
     287: astore        8
     289: aload         5
     291: invokevirtual #23                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
     294: iload         6
     296: aaload
     297: astore        9
     299: aload         8
     301: aload         9
     303: invokevirtual #33                 // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
     306: aload         4
     308: iload         6
     310: iinc          6, 1
     313: aload_0
     314: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
     317: aload         8
     319: invokevirtual #34                 // Method org/yaml/snakeyaml/constructor/Constructor.constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
     322: aastore
     323: goto          267
     326: aload         5
     328: iconst_1
     329: invokevirtual #35                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
     332: aload         5
     334: aload         4
     336: invokevirtual #36                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     339: areturn
     340: astore        7
     342: new           #8                  // class org/yaml/snakeyaml/error/YAMLException
     345: dup
     346: aload         7
     348: invokespecial #38                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     351: athrow
     352: aload_0
     353: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
     356: aload_2
     357: invokevirtual #14                 // Method org/yaml/snakeyaml/constructor/Constructor.constructSequence:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/util/List;
     360: astore        4
     362: aload         4
     364: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     369: anewarray     #39                 // class java/lang/Class
     372: astore        5
     374: iconst_0
     375: istore        6
     377: aload         4
     379: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     384: astore        7
     386: aload         7
     388: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     393: ifeq          421
     396: aload         7
     398: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     403: astore        8
     405: aload         5
     407: iload         6
     409: aload         8
     411: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     414: aastore
     415: iinc          6, 1
     418: goto          386
     421: aload_3
     422: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     427: astore        7
     429: aload         7
     431: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     436: ifeq          543
     439: aload         7
     441: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     446: checkcast     #28                 // class java/lang/reflect/Constructor
     449: astore        8
     451: aload         8
     453: invokevirtual #23                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
     456: astore        9
     458: iconst_1
     459: istore        10
     461: iconst_0
     462: istore        11
     464: iload         11
     466: aload         9
     468: arraylength
     469: if_icmpge     504
     472: aload_0
     473: aload         9
     475: iload         11
     477: aaload
     478: invokespecial #41                 // Method wrapIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;
     481: aload         5
     483: iload         11
     485: aaload
     486: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     489: ifne          498
     492: iconst_0
     493: istore        10
     495: goto          504
     498: iinc          11, 1
     501: goto          464
     504: iload         10
     506: ifeq          540
     509: aload         8
     511: iconst_1
     512: invokevirtual #35                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
     515: aload         8
     517: aload         4
     519: invokeinterface #42,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
     524: invokevirtual #36                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     527: areturn
     528: astore        11
     530: new           #8                  // class org/yaml/snakeyaml/error/YAMLException
     533: dup
     534: aload         11
     536: invokespecial #38                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     539: athrow
     540: goto          429
     543: new           #8                  // class org/yaml/snakeyaml/error/YAMLException
     546: dup
     547: new           #43                 // class java/lang/StringBuilder
     550: dup
     551: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     554: ldc           #45                 // String No suitable constructor with
     556: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     559: aload_2
     560: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     563: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     568: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     571: ldc           #48                 // String  arguments found for
     573: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     576: aload_1
     577: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
     580: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     583: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     586: invokespecial #10                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     589: athrow
    Exception table:
       from    to  target type
         326   339   340   Class java/lang/Exception
         509   527   528   Class java/lang/Exception

  private java.lang.Class<? extends java.lang.Object> wrapIfPrimitive(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method java/lang/Class.isPrimitive:()Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: aload_1
      10: getstatic     #52                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      13: if_acmpne     19
      16: ldc           #53                 // class java/lang/Integer
      18: areturn
      19: aload_1
      20: getstatic     #54                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      23: if_acmpne     29
      26: ldc           #55                 // class java/lang/Float
      28: areturn
      29: aload_1
      30: getstatic     #56                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      33: if_acmpne     39
      36: ldc           #57                 // class java/lang/Double
      38: areturn
      39: aload_1
      40: getstatic     #58                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      43: if_acmpne     49
      46: ldc           #59                 // class java/lang/Boolean
      48: areturn
      49: aload_1
      50: getstatic     #60                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      53: if_acmpne     59
      56: ldc           #61                 // class java/lang/Long
      58: areturn
      59: aload_1
      60: getstatic     #62                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      63: if_acmpne     69
      66: ldc           #63                 // class java/lang/Character
      68: areturn
      69: aload_1
      70: getstatic     #64                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      73: if_acmpne     79
      76: ldc           #65                 // class java/lang/Short
      78: areturn
      79: aload_1
      80: getstatic     #66                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      83: if_acmpne     89
      86: ldc           #67                 // class java/lang/Byte
      88: areturn
      89: new           #8                  // class org/yaml/snakeyaml/error/YAMLException
      92: dup
      93: new           #43                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #68                 // String Unexpected primitive
     102: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_1
     106: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #10                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     115: athrow

  public void construct2ndStep(org.yaml.snakeyaml.nodes.Node, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/yaml/snakeyaml/nodes/SequenceNode
       4: astore_3
       5: ldc           #69                 // class java/util/List
       7: aload_1
       8: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
      11: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      14: ifeq          36
      17: aload_2
      18: checkcast     #69                 // class java/util/List
      21: astore        4
      23: aload_0
      24: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
      27: aload_3
      28: aload         4
      30: invokevirtual #70                 // Method org/yaml/snakeyaml/constructor/Constructor.constructSequenceStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/util/Collection;)V
      33: goto          69
      36: aload_1
      37: invokevirtual #5                  // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
      40: invokevirtual #15                 // Method java/lang/Class.isArray:()Z
      43: ifeq          59
      46: aload_0
      47: getfield      #1                  // Field this$0:Lorg/yaml/snakeyaml/constructor/Constructor;
      50: aload_3
      51: aload_2
      52: invokevirtual #71                 // Method org/yaml/snakeyaml/constructor/Constructor.constructArrayStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: goto          69
      59: new           #8                  // class org/yaml/snakeyaml/error/YAMLException
      62: dup
      63: ldc           #72                 // String Immutable objects cannot be recursive.
      65: invokespecial #10                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return
}
