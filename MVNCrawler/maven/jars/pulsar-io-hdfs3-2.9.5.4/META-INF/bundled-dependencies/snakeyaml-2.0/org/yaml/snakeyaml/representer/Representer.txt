Compiled from "Representer.java"
public class org.yaml.snakeyaml.representer.Representer extends org.yaml.snakeyaml.representer.SafeRepresenter {
  protected java.util.Map<java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.TypeDescription> typeDefinitions;

  public org.yaml.snakeyaml.representer.Representer(org.yaml.snakeyaml.DumperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/yaml/snakeyaml/representer/SafeRepresenter."<init>":(Lorg/yaml/snakeyaml/DumperOptions;)V
       5: aload_0
       6: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       9: putfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      12: aload_0
      13: getfield      #4                  // Field representers:Ljava/util/Map;
      16: aconst_null
      17: new           #5                  // class org/yaml/snakeyaml/representer/Representer$RepresentJavaBean
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method org/yaml/snakeyaml/representer/Representer$RepresentJavaBean."<init>":(Lorg/yaml/snakeyaml/representer/Representer;)V
      25: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  public org.yaml.snakeyaml.TypeDescription addTypeDescription(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: getstatic     #8                  // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
       3: aload_0
       4: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
       7: if_acmpne     21
      10: aload_0
      11: new           #9                  // class java/util/HashMap
      14: dup
      15: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      18: putfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      21: aload_1
      22: invokevirtual #11                 // Method org/yaml/snakeyaml/TypeDescription.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      25: ifnull        41
      28: aload_0
      29: aload_1
      30: invokevirtual #12                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      33: aload_1
      34: invokevirtual #11                 // Method org/yaml/snakeyaml/TypeDescription.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      37: invokevirtual #13                 // Method addClassTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/Tag;
      40: pop
      41: aload_1
      42: aload_0
      43: invokevirtual #14                 // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      46: invokevirtual #15                 // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      49: aload_0
      50: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      53: aload_1
      54: invokevirtual #12                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      57: aload_1
      58: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #16                 // class org/yaml/snakeyaml/TypeDescription
      66: areturn

  public void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
       5: aload_0
       6: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
       9: invokeinterface #18,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      14: astore_2
      15: aload_2
      16: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          51
      31: aload_3
      32: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #16                 // class org/yaml/snakeyaml/TypeDescription
      40: astore        4
      42: aload         4
      44: aload_1
      45: invokevirtual #15                 // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      48: goto          22
      51: return

  protected org.yaml.snakeyaml.nodes.MappingNode representJavaBean(java.util.Set<org.yaml.snakeyaml.introspector.Property>, java.lang.Object);
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #23,  1           // InterfaceMethod java/util/Set.size:()I
      10: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_3
      14: aload_0
      15: getfield      #25                 // Field classTags:Ljava/util/Map;
      18: aload_2
      19: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #28                 // class org/yaml/snakeyaml/nodes/Tag
      30: astore        5
      32: aload         5
      34: ifnull        42
      37: aload         5
      39: goto          53
      42: new           #28                 // class org/yaml/snakeyaml/nodes/Tag
      45: dup
      46: aload_2
      47: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokespecial #29                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/Class;)V
      53: astore        4
      55: new           #30                 // class org/yaml/snakeyaml/nodes/MappingNode
      58: dup
      59: aload         4
      61: aload_3
      62: getstatic     #31                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      65: invokespecial #32                 // Method org/yaml/snakeyaml/nodes/MappingNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/util/List;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      68: astore        6
      70: aload_0
      71: getfield      #33                 // Field representedObjects:Ljava/util/Map;
      74: aload_2
      75: aload         6
      77: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: getstatic     #34                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.FLOW:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      86: astore        7
      88: aload_1
      89: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      94: astore        8
      96: aload         8
      98: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          237
     106: aload         8
     108: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #36                 // class org/yaml/snakeyaml/introspector/Property
     116: astore        9
     118: aload         9
     120: aload_2
     121: invokevirtual #37                 // Method org/yaml/snakeyaml/introspector/Property.get:(Ljava/lang/Object;)Ljava/lang/Object;
     124: astore        10
     126: aload         10
     128: ifnonnull     135
     131: aconst_null
     132: goto          152
     135: aload_0
     136: getfield      #25                 // Field classTags:Ljava/util/Map;
     139: aload         10
     141: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     144: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     149: checkcast     #28                 // class org/yaml/snakeyaml/nodes/Tag
     152: astore        11
     154: aload_0
     155: aload_2
     156: aload         9
     158: aload         10
     160: aload         11
     162: invokevirtual #38                 // Method representJavaBeanProperty:(Ljava/lang/Object;Lorg/yaml/snakeyaml/introspector/Property;Ljava/lang/Object;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/NodeTuple;
     165: astore        12
     167: aload         12
     169: ifnonnull     175
     172: goto          96
     175: aload         12
     177: invokevirtual #39                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     180: checkcast     #40                 // class org/yaml/snakeyaml/nodes/ScalarNode
     183: invokevirtual #41                 // Method org/yaml/snakeyaml/nodes/ScalarNode.isPlain:()Z
     186: ifne          194
     189: getstatic     #42                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     192: astore        7
     194: aload         12
     196: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
     199: astore        13
     201: aload         13
     203: instanceof    #40                 // class org/yaml/snakeyaml/nodes/ScalarNode
     206: ifeq          220
     209: aload         13
     211: checkcast     #40                 // class org/yaml/snakeyaml/nodes/ScalarNode
     214: invokevirtual #41                 // Method org/yaml/snakeyaml/nodes/ScalarNode.isPlain:()Z
     217: ifne          225
     220: getstatic     #42                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     223: astore        7
     225: aload_3
     226: aload         12
     228: invokeinterface #44,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     233: pop
     234: goto          96
     237: aload_0
     238: getfield      #45                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     241: getstatic     #31                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     244: if_acmpeq     259
     247: aload         6
     249: aload_0
     250: getfield      #45                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     253: invokevirtual #46                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     256: goto          266
     259: aload         6
     261: aload         7
     263: invokevirtual #46                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     266: aload         6
     268: areturn

  protected org.yaml.snakeyaml.nodes.NodeTuple representJavaBeanProperty(java.lang.Object, org.yaml.snakeyaml.introspector.Property, java.lang.Object, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #47                 // Method org/yaml/snakeyaml/introspector/Property.getName:()Ljava/lang/String;
       5: invokevirtual #48                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       8: checkcast     #40                 // class org/yaml/snakeyaml/nodes/ScalarNode
      11: astore        5
      13: aload_0
      14: getfield      #33                 // Field representedObjects:Ljava/util/Map;
      17: aload_3
      18: invokeinterface #49,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      23: istore        6
      25: aload_0
      26: aload_3
      27: invokevirtual #48                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      30: astore        7
      32: aload_3
      33: ifnull        144
      36: iload         6
      38: ifne          144
      41: aload         7
      43: invokevirtual #50                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      46: astore        8
      48: aload         4
      50: ifnonnull     144
      53: aload         8
      55: getstatic     #51                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
      58: if_acmpne     88
      61: aload_2
      62: invokevirtual #52                 // Method org/yaml/snakeyaml/introspector/Property.getType:()Ljava/lang/Class;
      65: ldc           #53                 // class java/lang/Enum
      67: if_acmpeq     144
      70: aload_3
      71: instanceof    #53                 // class java/lang/Enum
      74: ifeq          144
      77: aload         7
      79: getstatic     #54                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
      82: invokevirtual #55                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      85: goto          144
      88: aload         8
      90: getstatic     #56                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
      93: if_acmpne     136
      96: aload_2
      97: invokevirtual #52                 // Method org/yaml/snakeyaml/introspector/Property.getType:()Ljava/lang/Class;
     100: aload_3
     101: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     104: if_acmpne     136
     107: aload_3
     108: instanceof    #57                 // class java/util/Map
     111: ifne          136
     114: aload         7
     116: invokevirtual #58                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     119: getstatic     #59                 // Field org/yaml/snakeyaml/nodes/Tag.SET:Lorg/yaml/snakeyaml/nodes/Tag;
     122: invokevirtual #60                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
     125: ifne          136
     128: aload         7
     130: getstatic     #61                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     133: invokevirtual #55                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     136: aload_0
     137: aload_2
     138: aload         7
     140: aload_3
     141: invokevirtual #62                 // Method checkGlobalTag:(Lorg/yaml/snakeyaml/introspector/Property;Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)V
     144: new           #63                 // class org/yaml/snakeyaml/nodes/NodeTuple
     147: dup
     148: aload         5
     150: aload         7
     152: invokespecial #64                 // Method org/yaml/snakeyaml/nodes/NodeTuple."<init>":(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
     155: areturn

  protected void checkGlobalTag(org.yaml.snakeyaml.introspector.Property, org.yaml.snakeyaml.nodes.Node, java.lang.Object);
    Code:
       0: aload_3
       1: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #65                 // Method java/lang/Class.isArray:()Z
       7: ifeq          24
      10: aload_3
      11: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #66                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      17: invokevirtual #67                 // Method java/lang/Class.isPrimitive:()Z
      20: ifeq          24
      23: return
      24: aload_1
      25: invokevirtual #68                 // Method org/yaml/snakeyaml/introspector/Property.getActualTypeArguments:()[Ljava/lang/Class;
      28: astore        4
      30: aload         4
      32: ifnull        408
      35: aload_2
      36: invokevirtual #50                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      39: getstatic     #69                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
      42: if_acmpne     202
      45: aload         4
      47: iconst_0
      48: aaload
      49: astore        5
      51: aload_2
      52: checkcast     #70                 // class org/yaml/snakeyaml/nodes/SequenceNode
      55: astore        6
      57: getstatic     #71                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      60: astore        7
      62: aload_3
      63: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #65                 // Method java/lang/Class.isArray:()Z
      69: ifeq          84
      72: aload_3
      73: checkcast     #72                 // class "[Ljava/lang/Object;"
      76: invokestatic  #73                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      79: astore        7
      81: goto          97
      84: aload_3
      85: instanceof    #74                 // class java/lang/Iterable
      88: ifeq          97
      91: aload_3
      92: checkcast     #74                 // class java/lang/Iterable
      95: astore        7
      97: aload         7
      99: invokeinterface #75,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     104: astore        8
     106: aload         8
     108: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          199
     116: aload         6
     118: invokevirtual #76                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     121: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     126: astore        9
     128: aload         9
     130: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     135: ifeq          199
     138: aload         9
     140: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #78                 // class org/yaml/snakeyaml/nodes/Node
     148: astore        10
     150: aload         8
     152: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     157: astore        11
     159: aload         11
     161: ifnull        196
     164: aload         5
     166: aload         11
     168: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     171: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     174: ifeq          196
     177: aload         10
     179: invokevirtual #50                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     182: getstatic     #56                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     185: if_acmpne     196
     188: aload         10
     190: getstatic     #61                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     193: invokevirtual #55                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     196: goto          128
     199: goto          408
     202: aload_3
     203: instanceof    #80                 // class java/util/Set
     206: ifeq          324
     209: aload         4
     211: iconst_0
     212: aaload
     213: astore        5
     215: aload_2
     216: checkcast     #30                 // class org/yaml/snakeyaml/nodes/MappingNode
     219: astore        6
     221: aload         6
     223: invokevirtual #81                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
     226: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     231: astore        7
     233: aload_3
     234: checkcast     #80                 // class java/util/Set
     237: astore        8
     239: aload         8
     241: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     246: astore        9
     248: aload         9
     250: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     255: ifeq          321
     258: aload         9
     260: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     265: astore        10
     267: aload         7
     269: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     274: checkcast     #63                 // class org/yaml/snakeyaml/nodes/NodeTuple
     277: astore        11
     279: aload         11
     281: invokevirtual #39                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     284: astore        12
     286: aload         5
     288: aload         10
     290: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     293: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     296: ifeq          318
     299: aload         12
     301: invokevirtual #50                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     304: getstatic     #56                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     307: if_acmpne     318
     310: aload         12
     312: getstatic     #61                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     315: invokevirtual #55                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     318: goto          248
     321: goto          408
     324: aload_3
     325: instanceof    #57                 // class java/util/Map
     328: ifeq          408
     331: aload         4
     333: iconst_0
     334: aaload
     335: astore        5
     337: aload         4
     339: iconst_1
     340: aaload
     341: astore        6
     343: aload_2
     344: checkcast     #30                 // class org/yaml/snakeyaml/nodes/MappingNode
     347: astore        7
     349: aload         7
     351: invokevirtual #81                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
     354: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     359: astore        8
     361: aload         8
     363: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     368: ifeq          408
     371: aload         8
     373: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     378: checkcast     #63                 // class org/yaml/snakeyaml/nodes/NodeTuple
     381: astore        9
     383: aload_0
     384: aload         5
     386: aload         9
     388: invokevirtual #39                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     391: invokespecial #82                 // Method resetTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)V
     394: aload_0
     395: aload         6
     397: aload         9
     399: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
     402: invokespecial #82                 // Method resetTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)V
     405: goto          361
     408: return

  private void resetTag(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_2
       1: invokevirtual #58                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokevirtual #83                 // Method org/yaml/snakeyaml/nodes/Tag.matches:(Ljava/lang/Class;)Z
      10: ifeq          39
      13: ldc           #53                 // class java/lang/Enum
      15: aload_1
      16: invokevirtual #84                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifeq          32
      22: aload_2
      23: getstatic     #54                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
      26: invokevirtual #55                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      29: goto          39
      32: aload_2
      33: getstatic     #61                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
      36: invokevirtual #55                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      39: return

  protected java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          30
      13: aload_0
      14: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #16                 // class org/yaml/snakeyaml/TypeDescription
      26: invokevirtual #85                 // Method org/yaml/snakeyaml/TypeDescription.getProperties:()Ljava/util/Set;
      29: areturn
      30: aload_0
      31: invokevirtual #14                 // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      34: aload_1
      35: invokevirtual #86                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperties:(Ljava/lang/Class;)Ljava/util/Set;
      38: areturn

  public void setTimeZone(java.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #87                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.setTimeZone:(Ljava/util/TimeZone;)V
       5: return

  public java.util.TimeZone getTimeZone();
    Code:
       0: aload_0
       1: invokespecial #88                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.getTimeZone:()Ljava/util/TimeZone;
       4: areturn

  public org.yaml.snakeyaml.nodes.Tag addClassTag(java.lang.Class, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #89                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.addClassTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/Tag;
       6: areturn
}
