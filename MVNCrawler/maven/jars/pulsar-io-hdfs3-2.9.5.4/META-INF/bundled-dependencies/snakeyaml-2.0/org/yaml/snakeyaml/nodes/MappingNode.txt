Compiled from "MappingNode.java"
public class org.yaml.snakeyaml.nodes.MappingNode extends org.yaml.snakeyaml.nodes.CollectionNode<org.yaml.snakeyaml.nodes.NodeTuple> {
  private java.util.List<org.yaml.snakeyaml.nodes.NodeTuple> value;

  private boolean merged;

  public org.yaml.snakeyaml.nodes.MappingNode(org.yaml.snakeyaml.nodes.Tag, boolean, java.util.List<org.yaml.snakeyaml.nodes.NodeTuple>, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload         5
       6: aload         6
       8: invokespecial #1                  // Method org/yaml/snakeyaml/nodes/CollectionNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      11: aload_0
      12: iconst_0
      13: putfield      #2                  // Field merged:Z
      16: aload_3
      17: ifnonnull     30
      20: new           #3                  // class java/lang/NullPointerException
      23: dup
      24: ldc           #4                  // String value in a Node is required.
      26: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: aload_3
      32: putfield      #6                  // Field value:Ljava/util/List;
      35: aload_0
      36: iload_2
      37: putfield      #7                  // Field resolved:Z
      40: return

  public org.yaml.snakeyaml.nodes.MappingNode(org.yaml.snakeyaml.nodes.Tag, java.util.List<org.yaml.snakeyaml.nodes.NodeTuple>, org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_2
       4: aconst_null
       5: aconst_null
       6: aload_3
       7: invokespecial #8                  // Method "<init>":(Lorg/yaml/snakeyaml/nodes/Tag;ZLjava/util/List;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      10: return

  public org.yaml.snakeyaml.nodes.NodeId getNodeId();
    Code:
       0: getstatic     #9                  // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
       3: areturn

  public java.util.List<org.yaml.snakeyaml.nodes.NodeTuple> getValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:Ljava/util/List;
       4: areturn

  public void setValue(java.util.List<org.yaml.snakeyaml.nodes.NodeTuple>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field value:Ljava/util/List;
       5: return

  public void setOnlyKeyType(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_2
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #13                 // class org/yaml/snakeyaml/nodes/NodeTuple
      28: astore_3
      29: aload_3
      30: invokevirtual #14                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      33: aload_1
      34: invokevirtual #15                 // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
      37: goto          10
      40: return

  public void setTypes(java.lang.Class<? extends java.lang.Object>, java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          51
      19: aload_3
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #13                 // class org/yaml/snakeyaml/nodes/NodeTuple
      28: astore        4
      30: aload         4
      32: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      35: aload_2
      36: invokevirtual #15                 // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
      39: aload         4
      41: invokevirtual #14                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      44: aload_1
      45: invokevirtual #15                 // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
      48: goto          10
      51: return

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #19                 // Method getValue:()Ljava/util/List;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          106
      27: aload_3
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #13                 // class org/yaml/snakeyaml/nodes/NodeTuple
      36: astore        4
      38: aload_2
      39: ldc           #20                 // String { key=
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_2
      46: aload         4
      48: invokevirtual #14                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      51: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_2
      56: ldc           #23                 // String ; value=
      58: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: aload         4
      64: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      67: instanceof    #24                 // class org/yaml/snakeyaml/nodes/CollectionNode
      70: ifeq          89
      73: aload_2
      74: aload         4
      76: invokevirtual #16                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      79: invokestatic  #25                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      82: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: pop
      86: goto          96
      89: aload_2
      90: aload         4
      92: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: pop
      96: aload_2
      97: ldc           #27                 // String  }
      99: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: pop
     103: goto          18
     106: aload_2
     107: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: astore_1
     111: new           #17                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #29                 // String <
     120: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     127: invokevirtual #31                 // Method java/lang/Class.getName:()Ljava/lang/String;
     130: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #32                 // String  (tag=
     135: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: invokevirtual #33                 // Method getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     142: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: ldc           #34                 // String , values=
     147: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_1
     151: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #35                 // String )>
     156: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: areturn

  public void setMerged(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field merged:Z
       5: return

  public boolean isMerged();
    Code:
       0: aload_0
       1: getfield      #2                  // Field merged:Z
       4: ireturn
}
