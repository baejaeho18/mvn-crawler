Compiled from "StreamReader.java"
public class org.yaml.snakeyaml.reader.StreamReader {
  private java.lang.String name;

  private final java.io.Reader stream;

  private int[] dataWindow;

  private int dataLength;

  private int pointer;

  private boolean eof;

  private int index;

  private int line;

  private int column;

  private final char[] buffer;

  private static final int BUFFER_SIZE;

  public org.yaml.snakeyaml.reader.StreamReader(java.lang.String);
    Code:
       0: aload_0
       1: new           #1                  // class java/io/StringReader
       4: dup
       5: aload_1
       6: invokespecial #2                  // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
       9: invokespecial #3                  // Method "<init>":(Ljava/io/Reader;)V
      12: aload_0
      13: ldc           #4                  // String \'string\'
      15: putfield      #5                  // Field name:Ljava/lang/String;
      18: return

  public org.yaml.snakeyaml.reader.StreamReader(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field pointer:I
       9: aload_0
      10: iconst_0
      11: putfield      #8                  // Field index:I
      14: aload_0
      15: iconst_0
      16: putfield      #9                  // Field line:I
      19: aload_0
      20: iconst_0
      21: putfield      #10                 // Field column:I
      24: aload_1
      25: ifnonnull     38
      28: new           #11                 // class java/lang/NullPointerException
      31: dup
      32: ldc           #12                 // String Reader must be provided.
      34: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: ldc           #14                 // String \'reader\'
      41: putfield      #5                  // Field name:Ljava/lang/String;
      44: aload_0
      45: iconst_0
      46: newarray       int
      48: putfield      #15                 // Field dataWindow:[I
      51: aload_0
      52: iconst_0
      53: putfield      #16                 // Field dataLength:I
      56: aload_0
      57: aload_1
      58: putfield      #17                 // Field stream:Ljava/io/Reader;
      61: aload_0
      62: iconst_0
      63: putfield      #18                 // Field eof:Z
      66: aload_0
      67: sipush        1025
      70: newarray       char
      72: putfield      #20                 // Field buffer:[C
      75: return

  public static boolean isPrintable(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method java/lang/String.length:()I
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: iload_1
       9: if_icmpge     37
      12: aload_0
      13: iload_2
      14: invokevirtual #22                 // Method java/lang/String.codePointAt:(I)I
      17: istore_3
      18: iload_3
      19: invokestatic  #23                 // Method isPrintable:(I)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: iload_2
      28: iload_3
      29: invokestatic  #24                 // Method java/lang/Character.charCount:(I)I
      32: iadd
      33: istore_2
      34: goto          7
      37: iconst_1
      38: ireturn

  public static boolean isPrintable(int);
    Code:
       0: iload_0
       1: bipush        32
       3: if_icmplt     12
       6: iload_0
       7: bipush        126
       9: if_icmple     74
      12: iload_0
      13: bipush        9
      15: if_icmpeq     74
      18: iload_0
      19: bipush        10
      21: if_icmpeq     74
      24: iload_0
      25: bipush        13
      27: if_icmpeq     74
      30: iload_0
      31: sipush        133
      34: if_icmpeq     74
      37: iload_0
      38: sipush        160
      41: if_icmplt     50
      44: iload_0
      45: ldc           #25                 // int 55295
      47: if_icmple     74
      50: iload_0
      51: ldc           #26                 // int 57344
      53: if_icmplt     62
      56: iload_0
      57: ldc           #27                 // int 65533
      59: if_icmple     74
      62: iload_0
      63: ldc           #28                 // int 65536
      65: if_icmplt     78
      68: iload_0
      69: ldc           #29                 // int 1114111
      71: if_icmpgt     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn

  public org.yaml.snakeyaml.error.Mark getMark();
    Code:
       0: new           #30                 // class org/yaml/snakeyaml/error/Mark
       3: dup
       4: aload_0
       5: getfield      #5                  // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #8                  // Field index:I
      12: aload_0
      13: getfield      #9                  // Field line:I
      16: aload_0
      17: getfield      #10                 // Field column:I
      20: aload_0
      21: getfield      #15                 // Field dataWindow:[I
      24: aload_0
      25: getfield      #7                  // Field pointer:I
      28: invokespecial #31                 // Method org/yaml/snakeyaml/error/Mark."<init>":(Ljava/lang/String;III[II)V
      31: areturn

  public void forward();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #32                 // Method forward:(I)V
       5: return

  public void forward(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     118
       7: aload_0
       8: invokespecial #33                 // Method ensureEnoughData:()Z
      11: ifeq          118
      14: aload_0
      15: getfield      #15                 // Field dataWindow:[I
      18: aload_0
      19: dup
      20: getfield      #7                  // Field pointer:I
      23: dup_x1
      24: iconst_1
      25: iadd
      26: putfield      #7                  // Field pointer:I
      29: iaload
      30: istore_3
      31: aload_0
      32: dup
      33: getfield      #8                  // Field index:I
      36: iconst_1
      37: iadd
      38: putfield      #8                  // Field index:I
      41: getstatic     #34                 // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      44: iload_3
      45: invokevirtual #35                 // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
      48: ifne          78
      51: iload_3
      52: bipush        13
      54: if_icmpne     96
      57: aload_0
      58: invokespecial #33                 // Method ensureEnoughData:()Z
      61: ifeq          96
      64: aload_0
      65: getfield      #15                 // Field dataWindow:[I
      68: aload_0
      69: getfield      #7                  // Field pointer:I
      72: iaload
      73: bipush        10
      75: if_icmpeq     96
      78: aload_0
      79: dup
      80: getfield      #9                  // Field line:I
      83: iconst_1
      84: iadd
      85: putfield      #9                  // Field line:I
      88: aload_0
      89: iconst_0
      90: putfield      #10                 // Field column:I
      93: goto          112
      96: iload_3
      97: ldc           #36                 // int 65279
      99: if_icmpeq     112
     102: aload_0
     103: dup
     104: getfield      #10                 // Field column:I
     107: iconst_1
     108: iadd
     109: putfield      #10                 // Field column:I
     112: iinc          2, 1
     115: goto          2
     118: return

  public int peek();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method ensureEnoughData:()Z
       4: ifeq          19
       7: aload_0
       8: getfield      #15                 // Field dataWindow:[I
      11: aload_0
      12: getfield      #7                  // Field pointer:I
      15: iaload
      16: goto          20
      19: iconst_0
      20: ireturn

  public int peek(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #37                 // Method ensureEnoughData:(I)Z
       5: ifeq          22
       8: aload_0
       9: getfield      #15                 // Field dataWindow:[I
      12: aload_0
      13: getfield      #7                  // Field pointer:I
      16: iload_1
      17: iadd
      18: iaload
      19: goto          23
      22: iconst_0
      23: ireturn

  public java.lang.String prefix(int);
    Code:
       0: iload_1
       1: ifne          7
       4: ldc           #38                 // String
       6: areturn
       7: aload_0
       8: iload_1
       9: invokespecial #37                 // Method ensureEnoughData:(I)Z
      12: ifeq          32
      15: new           #39                 // class java/lang/String
      18: dup
      19: aload_0
      20: getfield      #15                 // Field dataWindow:[I
      23: aload_0
      24: getfield      #7                  // Field pointer:I
      27: iload_1
      28: invokespecial #40                 // Method java/lang/String."<init>":([III)V
      31: areturn
      32: new           #39                 // class java/lang/String
      35: dup
      36: aload_0
      37: getfield      #15                 // Field dataWindow:[I
      40: aload_0
      41: getfield      #7                  // Field pointer:I
      44: iload_1
      45: aload_0
      46: getfield      #16                 // Field dataLength:I
      49: aload_0
      50: getfield      #7                  // Field pointer:I
      53: isub
      54: invokestatic  #41                 // Method java/lang/Math.min:(II)I
      57: invokespecial #40                 // Method java/lang/String."<init>":([III)V
      60: areturn

  public java.lang.String prefixForward(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method prefix:(I)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: dup
       8: getfield      #7                  // Field pointer:I
      11: iload_1
      12: iadd
      13: putfield      #7                  // Field pointer:I
      16: aload_0
      17: dup
      18: getfield      #8                  // Field index:I
      21: iload_1
      22: iadd
      23: putfield      #8                  // Field index:I
      26: aload_0
      27: dup
      28: getfield      #10                 // Field column:I
      31: iload_1
      32: iadd
      33: putfield      #10                 // Field column:I
      36: aload_2
      37: areturn

  private boolean ensureEnoughData();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #37                 // Method ensureEnoughData:(I)Z
       5: ireturn

  private boolean ensureEnoughData(int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field eof:Z
       4: ifne          24
       7: aload_0
       8: getfield      #7                  // Field pointer:I
      11: iload_1
      12: iadd
      13: aload_0
      14: getfield      #16                 // Field dataLength:I
      17: if_icmplt     24
      20: aload_0
      21: invokespecial #43                 // Method update:()V
      24: aload_0
      25: getfield      #7                  // Field pointer:I
      28: iload_1
      29: iadd
      30: aload_0
      31: getfield      #16                 // Field dataLength:I
      34: if_icmpge     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private void update();
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/Reader;
       4: aload_0
       5: getfield      #20                 // Field buffer:[C
       8: iconst_0
       9: sipush        1024
      12: invokevirtual #44                 // Method java/io/Reader.read:([CII)I
      15: istore_1
      16: iload_1
      17: ifle          194
      20: aload_0
      21: getfield      #16                 // Field dataLength:I
      24: aload_0
      25: getfield      #7                  // Field pointer:I
      28: isub
      29: istore_2
      30: aload_0
      31: aload_0
      32: getfield      #15                 // Field dataWindow:[I
      35: aload_0
      36: getfield      #7                  // Field pointer:I
      39: aload_0
      40: getfield      #16                 // Field dataLength:I
      43: iload_1
      44: iadd
      45: invokestatic  #45                 // Method java/util/Arrays.copyOfRange:([III)[I
      48: putfield      #15                 // Field dataWindow:[I
      51: aload_0
      52: getfield      #20                 // Field buffer:[C
      55: iload_1
      56: iconst_1
      57: isub
      58: caload
      59: invokestatic  #46                 // Method java/lang/Character.isHighSurrogate:(C)Z
      62: ifeq          93
      65: aload_0
      66: getfield      #17                 // Field stream:Ljava/io/Reader;
      69: aload_0
      70: getfield      #20                 // Field buffer:[C
      73: iload_1
      74: iconst_1
      75: invokevirtual #44                 // Method java/io/Reader.read:([CII)I
      78: iconst_m1
      79: if_icmpne     90
      82: aload_0
      83: iconst_1
      84: putfield      #18                 // Field eof:Z
      87: goto          93
      90: iinc          1, 1
      93: bipush        32
      95: istore_3
      96: iconst_0
      97: istore        4
      99: iload         4
     101: iload_1
     102: if_icmpge     157
     105: aload_0
     106: getfield      #20                 // Field buffer:[C
     109: iload         4
     111: invokestatic  #47                 // Method java/lang/Character.codePointAt:([CI)I
     114: istore        5
     116: aload_0
     117: getfield      #15                 // Field dataWindow:[I
     120: iload_2
     121: iload         5
     123: iastore
     124: iload         5
     126: invokestatic  #23                 // Method isPrintable:(I)Z
     129: ifeq          145
     132: iload         4
     134: iload         5
     136: invokestatic  #24                 // Method java/lang/Character.charCount:(I)I
     139: iadd
     140: istore        4
     142: goto          151
     145: iload         5
     147: istore_3
     148: iload_1
     149: istore        4
     151: iinc          2, 1
     154: goto          99
     157: aload_0
     158: iload_2
     159: putfield      #16                 // Field dataLength:I
     162: aload_0
     163: iconst_0
     164: putfield      #7                  // Field pointer:I
     167: iload_3
     168: bipush        32
     170: if_icmpeq     191
     173: new           #48                 // class org/yaml/snakeyaml/reader/ReaderException
     176: dup
     177: aload_0
     178: getfield      #5                  // Field name:Ljava/lang/String;
     181: iload_2
     182: iconst_1
     183: isub
     184: iload_3
     185: ldc           #49                 // String special characters are not allowed
     187: invokespecial #50                 // Method org/yaml/snakeyaml/reader/ReaderException."<init>":(Ljava/lang/String;IILjava/lang/String;)V
     190: athrow
     191: goto          199
     194: aload_0
     195: iconst_1
     196: putfield      #18                 // Field eof:Z
     199: goto          212
     202: astore_1
     203: new           #52                 // class org/yaml/snakeyaml/error/YAMLException
     206: dup
     207: aload_1
     208: invokespecial #53                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     211: athrow
     212: return
    Exception table:
       from    to  target type
           0   199   202   Class java/io/IOException

  public int getColumn();
    Code:
       0: aload_0
       1: getfield      #10                 // Field column:I
       4: ireturn

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #8                  // Field index:I
       4: ireturn

  public int getLine();
    Code:
       0: aload_0
       1: getfield      #9                  // Field line:I
       4: ireturn
}
