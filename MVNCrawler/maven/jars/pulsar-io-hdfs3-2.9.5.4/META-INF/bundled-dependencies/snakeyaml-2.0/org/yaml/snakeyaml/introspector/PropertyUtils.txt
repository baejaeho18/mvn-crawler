Compiled from "PropertyUtils.java"
public class org.yaml.snakeyaml.introspector.PropertyUtils {
  private final java.util.Map<java.lang.Class<?>, java.util.Map<java.lang.String, org.yaml.snakeyaml.introspector.Property>> propertiesCache;

  private final java.util.Map<java.lang.Class<?>, java.util.Set<org.yaml.snakeyaml.introspector.Property>> readableProperties;

  private org.yaml.snakeyaml.introspector.BeanAccess beanAccess;

  private boolean allowReadOnlyProperties;

  private boolean skipMissingProperties;

  private final org.yaml.snakeyaml.util.PlatformFeatureDetector platformFeatureDetector;

  private static final java.lang.String TRANSIENT;

  public org.yaml.snakeyaml.introspector.PropertyUtils();
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/util/PlatformFeatureDetector
       4: dup
       5: invokespecial #2                  // Method org/yaml/snakeyaml/util/PlatformFeatureDetector."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/yaml/snakeyaml/util/PlatformFeatureDetector;)V
      11: return

  org.yaml.snakeyaml.introspector.PropertyUtils(org.yaml.snakeyaml.util.PlatformFeatureDetector);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/HashMap
       8: dup
       9: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      12: putfield      #7                  // Field propertiesCache:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #8                  // Field readableProperties:Ljava/util/Map;
      26: aload_0
      27: getstatic     #9                  // Field org/yaml/snakeyaml/introspector/BeanAccess.DEFAULT:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      30: putfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      33: aload_0
      34: iconst_0
      35: putfield      #11                 // Field allowReadOnlyProperties:Z
      38: aload_0
      39: iconst_0
      40: putfield      #12                 // Field skipMissingProperties:Z
      43: aload_0
      44: aload_1
      45: putfield      #13                 // Field platformFeatureDetector:Lorg/yaml/snakeyaml/util/PlatformFeatureDetector;
      48: aload_1
      49: invokevirtual #14                 // Method org/yaml/snakeyaml/util/PlatformFeatureDetector.isRunningOnAndroid:()Z
      52: ifeq          62
      55: aload_0
      56: getstatic     #15                 // Field org/yaml/snakeyaml/introspector/BeanAccess.FIELD:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      59: putfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      62: return

  protected java.util.Map<java.lang.String, org.yaml.snakeyaml.introspector.Property> getPropertiesMap(java.lang.Class<?>, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #18                 // class java/util/Map
      26: areturn
      27: new           #19                 // class java/util/LinkedHashMap
      30: dup
      31: invokespecial #20                 // Method java/util/LinkedHashMap."<init>":()V
      34: astore_3
      35: iconst_0
      36: istore        4
      38: aload_2
      39: getstatic     #15                 // Field org/yaml/snakeyaml/introspector/BeanAccess.FIELD:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      42: if_acmpne     159
      45: aload_1
      46: astore        5
      48: aload         5
      50: ifnull        156
      53: aload         5
      55: invokevirtual #21                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      58: astore        6
      60: aload         6
      62: arraylength
      63: istore        7
      65: iconst_0
      66: istore        8
      68: iload         8
      70: iload         7
      72: if_icmpge     146
      75: aload         6
      77: iload         8
      79: aaload
      80: astore        9
      82: aload         9
      84: invokevirtual #22                 // Method java/lang/reflect/Field.getModifiers:()I
      87: istore        10
      89: iload         10
      91: invokestatic  #23                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      94: ifne          140
      97: iload         10
      99: invokestatic  #24                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
     102: ifne          140
     105: aload_3
     106: aload         9
     108: invokevirtual #25                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     111: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     116: ifne          140
     119: aload_3
     120: aload         9
     122: invokevirtual #25                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     125: new           #26                 // class org/yaml/snakeyaml/introspector/FieldProperty
     128: dup
     129: aload         9
     131: invokespecial #27                 // Method org/yaml/snakeyaml/introspector/FieldProperty."<init>":(Ljava/lang/reflect/Field;)V
     134: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: iinc          8, 1
     143: goto          68
     146: aload         5
     148: invokevirtual #29                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     151: astore        5
     153: goto          48
     156: goto          379
     159: aload_1
     160: invokestatic  #30                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
     163: invokeinterface #31,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
     168: astore        5
     170: aload         5
     172: arraylength
     173: istore        6
     175: iconst_0
     176: istore        7
     178: iload         7
     180: iload         6
     182: if_icmpge     253
     185: aload         5
     187: iload         7
     189: aaload
     190: astore        8
     192: aload         8
     194: invokevirtual #32                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
     197: astore        9
     199: aload         9
     201: ifnull        217
     204: aload         9
     206: invokevirtual #33                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     209: ldc           #34                 // String getClass
     211: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     214: ifne          247
     217: aload_0
     218: aload         8
     220: invokespecial #36                 // Method isTransient:(Ljava/beans/FeatureDescriptor;)Z
     223: ifne          247
     226: aload_3
     227: aload         8
     229: invokevirtual #37                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     232: new           #38                 // class org/yaml/snakeyaml/introspector/MethodProperty
     235: dup
     236: aload         8
     238: invokespecial #39                 // Method org/yaml/snakeyaml/introspector/MethodProperty."<init>":(Ljava/beans/PropertyDescriptor;)V
     241: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     246: pop
     247: iinc          7, 1
     250: goto          178
     253: goto          268
     256: astore        5
     258: new           #41                 // class org/yaml/snakeyaml/error/YAMLException
     261: dup
     262: aload         5
     264: invokespecial #42                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     267: athrow
     268: aload_1
     269: astore        5
     271: aload         5
     273: ifnull        379
     276: aload         5
     278: invokevirtual #21                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
     281: astore        6
     283: aload         6
     285: arraylength
     286: istore        7
     288: iconst_0
     289: istore        8
     291: iload         8
     293: iload         7
     295: if_icmpge     369
     298: aload         6
     300: iload         8
     302: aaload
     303: astore        9
     305: aload         9
     307: invokevirtual #22                 // Method java/lang/reflect/Field.getModifiers:()I
     310: istore        10
     312: iload         10
     314: invokestatic  #23                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
     317: ifne          363
     320: iload         10
     322: invokestatic  #24                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
     325: ifne          363
     328: iload         10
     330: invokestatic  #43                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
     333: ifeq          360
     336: aload_3
     337: aload         9
     339: invokevirtual #25                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     342: new           #26                 // class org/yaml/snakeyaml/introspector/FieldProperty
     345: dup
     346: aload         9
     348: invokespecial #27                 // Method org/yaml/snakeyaml/introspector/FieldProperty."<init>":(Ljava/lang/reflect/Field;)V
     351: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     356: pop
     357: goto          363
     360: iconst_1
     361: istore        4
     363: iinc          8, 1
     366: goto          291
     369: aload         5
     371: invokevirtual #29                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     374: astore        5
     376: goto          271
     379: aload_3
     380: invokeinterface #44,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     385: ifeq          423
     388: iload         4
     390: ifeq          423
     393: new           #41                 // class org/yaml/snakeyaml/error/YAMLException
     396: dup
     397: new           #45                 // class java/lang/StringBuilder
     400: dup
     401: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     404: ldc           #47                 // String No JavaBean properties found in
     406: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     409: aload_1
     410: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
     413: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     416: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     419: invokespecial #51                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     422: athrow
     423: aload_0
     424: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
     427: aload_1
     428: aload_3
     429: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     434: pop
     435: aload_3
     436: areturn
    Exception table:
       from    to  target type
         159   253   256   Class java/beans/IntrospectionException

  private boolean isTransient(java.beans.FeatureDescriptor);
    Code:
       0: getstatic     #52                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_1
       4: ldc           #54                 // String transient
       6: invokevirtual #55                 // Method java/beans/FeatureDescriptor.getValue:(Ljava/lang/String;)Ljava/lang/Object;
       9: invokevirtual #56                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      12: ireturn

  public java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
       6: invokevirtual #57                 // Method getProperties:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Set;
       9: areturn

  public java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #8                  // Field readableProperties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #58                 // class java/util/Set
      26: areturn
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #59                 // Method createPropertySet:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Set;
      33: astore_3
      34: aload_0
      35: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      38: aload_1
      39: aload_3
      40: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: areturn

  protected java.util.Set<org.yaml.snakeyaml.introspector.Property> createPropertySet(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: new           #60                 // class java/util/TreeSet
       3: dup
       4: invokespecial #61                 // Method java/util/TreeSet."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #62                 // Method getPropertiesMap:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Map;
      14: invokeinterface #63,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      19: astore        4
      21: aload         4
      23: invokeinterface #64,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          87
      40: aload         5
      42: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #67                 // class org/yaml/snakeyaml/introspector/Property
      50: astore        6
      52: aload         6
      54: invokevirtual #68                 // Method org/yaml/snakeyaml/introspector/Property.isReadable:()Z
      57: ifeq          84
      60: aload_0
      61: getfield      #11                 // Field allowReadOnlyProperties:Z
      64: ifne          75
      67: aload         6
      69: invokevirtual #69                 // Method org/yaml/snakeyaml/introspector/Property.isWritable:()Z
      72: ifeq          84
      75: aload_3
      76: aload         6
      78: invokeinterface #70,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          30
      87: aload_3
      88: areturn

  public org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class<? extends java.lang.Object>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
       7: invokevirtual #71                 // Method getProperty:(Ljava/lang/Class;Ljava/lang/String;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Lorg/yaml/snakeyaml/introspector/Property;
      10: areturn

  public org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class<? extends java.lang.Object>, java.lang.String, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #62                 // Method getPropertiesMap:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Map;
       6: astore        4
       8: aload         4
      10: aload_2
      11: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #67                 // class org/yaml/snakeyaml/introspector/Property
      19: astore        5
      21: aload         5
      23: ifnonnull     43
      26: aload_0
      27: getfield      #12                 // Field skipMissingProperties:Z
      30: ifeq          43
      33: new           #72                 // class org/yaml/snakeyaml/introspector/MissingProperty
      36: dup
      37: aload_2
      38: invokespecial #73                 // Method org/yaml/snakeyaml/introspector/MissingProperty."<init>":(Ljava/lang/String;)V
      41: astore        5
      43: aload         5
      45: ifnonnull     87
      48: new           #41                 // class org/yaml/snakeyaml/error/YAMLException
      51: dup
      52: new           #45                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #74                 // String Unable to find property \'
      61: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_2
      65: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #75                 // String \' on class:
      70: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      77: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #51                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload         5
      89: areturn

  public void setBeanAccess(org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #13                 // Field platformFeatureDetector:Lorg/yaml/snakeyaml/util/PlatformFeatureDetector;
       4: invokevirtual #14                 // Method org/yaml/snakeyaml/util/PlatformFeatureDetector.isRunningOnAndroid:()Z
       7: ifeq          27
      10: aload_1
      11: getstatic     #15                 // Field org/yaml/snakeyaml/introspector/BeanAccess.FIELD:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      14: if_acmpeq     27
      17: new           #76                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #77                 // String JVM is Android - only BeanAccess.FIELD is available
      23: invokespecial #78                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      31: aload_1
      32: if_acmpeq     58
      35: aload_0
      36: aload_1
      37: putfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      40: aload_0
      41: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
      44: invokeinterface #79,  1           // InterfaceMethod java/util/Map.clear:()V
      49: aload_0
      50: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      53: invokeinterface #79,  1           // InterfaceMethod java/util/Map.clear:()V
      58: return

  public void setAllowReadOnlyProperties(boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field allowReadOnlyProperties:Z
       4: iload_1
       5: if_icmpeq     22
       8: aload_0
       9: iload_1
      10: putfield      #11                 // Field allowReadOnlyProperties:Z
      13: aload_0
      14: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      17: invokeinterface #79,  1           // InterfaceMethod java/util/Map.clear:()V
      22: return

  public boolean isAllowReadOnlyProperties();
    Code:
       0: aload_0
       1: getfield      #11                 // Field allowReadOnlyProperties:Z
       4: ireturn

  public void setSkipMissingProperties(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipMissingProperties:Z
       4: iload_1
       5: if_icmpeq     22
       8: aload_0
       9: iload_1
      10: putfield      #12                 // Field skipMissingProperties:Z
      13: aload_0
      14: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      17: invokeinterface #79,  1           // InterfaceMethod java/util/Map.clear:()V
      22: return

  public boolean isSkipMissingProperties();
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipMissingProperties:Z
       4: ireturn
}
