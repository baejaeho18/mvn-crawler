Compiled from "Token.java"
public final class org.yaml.snakeyaml.tokens.Token$ID extends java.lang.Enum<org.yaml.snakeyaml.tokens.Token$ID> {
  public static final org.yaml.snakeyaml.tokens.Token$ID Alias;

  public static final org.yaml.snakeyaml.tokens.Token$ID Anchor;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockEntry;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockMappingStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockSequenceStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID Directive;

  public static final org.yaml.snakeyaml.tokens.Token$ID DocumentEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID DocumentStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowEntry;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowMappingStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowSequenceStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID Key;

  public static final org.yaml.snakeyaml.tokens.Token$ID Scalar;

  public static final org.yaml.snakeyaml.tokens.Token$ID StreamEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID StreamStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID Tag;

  public static final org.yaml.snakeyaml.tokens.Token$ID Value;

  public static final org.yaml.snakeyaml.tokens.Token$ID Whitespace;

  public static final org.yaml.snakeyaml.tokens.Token$ID Comment;

  public static final org.yaml.snakeyaml.tokens.Token$ID Error;

  private final java.lang.String description;

  private static final org.yaml.snakeyaml.tokens.Token$ID[] $VALUES;

  public static org.yaml.snakeyaml.tokens.Token$ID[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/yaml/snakeyaml/tokens/Token$ID;
       3: invokevirtual #2                  // Method "[Lorg/yaml/snakeyaml/tokens/Token$ID;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/yaml/snakeyaml/tokens/Token$ID;"
       9: areturn

  public static org.yaml.snakeyaml.tokens.Token$ID valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/yaml/snakeyaml/tokens/Token$ID
       9: areturn

  private org.yaml.snakeyaml.tokens.Token$ID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field description:Ljava/lang/String;
      11: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field description:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
       3: dup
       4: ldc           #8                  // String Alias
       6: iconst_0
       7: ldc           #9                  // String <alias>
       9: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #11                 // Field Alias:Lorg/yaml/snakeyaml/tokens/Token$ID;
      15: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      18: dup
      19: ldc           #12                 // String Anchor
      21: iconst_1
      22: ldc           #13                 // String <anchor>
      24: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #14                 // Field Anchor:Lorg/yaml/snakeyaml/tokens/Token$ID;
      30: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      33: dup
      34: ldc           #15                 // String BlockEnd
      36: iconst_2
      37: ldc           #16                 // String <block end>
      39: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #17                 // Field BlockEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
      45: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      48: dup
      49: ldc           #18                 // String BlockEntry
      51: iconst_3
      52: ldc           #19                 // String -
      54: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #20                 // Field BlockEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
      60: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      63: dup
      64: ldc           #21                 // String BlockMappingStart
      66: iconst_4
      67: ldc           #22                 // String <block mapping start>
      69: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      72: putstatic     #23                 // Field BlockMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
      75: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      78: dup
      79: ldc           #24                 // String BlockSequenceStart
      81: iconst_5
      82: ldc           #25                 // String <block sequence start>
      84: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      87: putstatic     #26                 // Field BlockSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
      90: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      93: dup
      94: ldc           #27                 // String Directive
      96: bipush        6
      98: ldc           #28                 // String <directive>
     100: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     103: putstatic     #29                 // Field Directive:Lorg/yaml/snakeyaml/tokens/Token$ID;
     106: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     109: dup
     110: ldc           #30                 // String DocumentEnd
     112: bipush        7
     114: ldc           #31                 // String <document end>
     116: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     119: putstatic     #32                 // Field DocumentEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     122: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     125: dup
     126: ldc           #33                 // String DocumentStart
     128: bipush        8
     130: ldc           #34                 // String <document start>
     132: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     135: putstatic     #35                 // Field DocumentStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     138: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     141: dup
     142: ldc           #36                 // String FlowEntry
     144: bipush        9
     146: ldc           #37                 // String ,
     148: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     151: putstatic     #38                 // Field FlowEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
     154: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     157: dup
     158: ldc           #39                 // String FlowMappingEnd
     160: bipush        10
     162: ldc           #40                 // String }
     164: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     167: putstatic     #41                 // Field FlowMappingEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     170: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     173: dup
     174: ldc           #42                 // String FlowMappingStart
     176: bipush        11
     178: ldc           #43                 // String {
     180: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     183: putstatic     #44                 // Field FlowMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     186: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     189: dup
     190: ldc           #45                 // String FlowSequenceEnd
     192: bipush        12
     194: ldc           #46                 // String ]
     196: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     199: putstatic     #47                 // Field FlowSequenceEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     202: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     205: dup
     206: ldc           #48                 // String FlowSequenceStart
     208: bipush        13
     210: ldc           #49                 // String [
     212: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     215: putstatic     #50                 // Field FlowSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     218: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     221: dup
     222: ldc           #51                 // String Key
     224: bipush        14
     226: ldc           #52                 // String ?
     228: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     231: putstatic     #53                 // Field Key:Lorg/yaml/snakeyaml/tokens/Token$ID;
     234: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     237: dup
     238: ldc           #54                 // String Scalar
     240: bipush        15
     242: ldc           #55                 // String <scalar>
     244: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     247: putstatic     #56                 // Field Scalar:Lorg/yaml/snakeyaml/tokens/Token$ID;
     250: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     253: dup
     254: ldc           #57                 // String StreamEnd
     256: bipush        16
     258: ldc           #58                 // String <stream end>
     260: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     263: putstatic     #59                 // Field StreamEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     266: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     269: dup
     270: ldc           #60                 // String StreamStart
     272: bipush        17
     274: ldc           #61                 // String <stream start>
     276: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     279: putstatic     #62                 // Field StreamStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     282: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     285: dup
     286: ldc           #63                 // String Tag
     288: bipush        18
     290: ldc           #64                 // String <tag>
     292: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     295: putstatic     #65                 // Field Tag:Lorg/yaml/snakeyaml/tokens/Token$ID;
     298: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     301: dup
     302: ldc           #66                 // String Value
     304: bipush        19
     306: ldc           #67                 // String :
     308: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     311: putstatic     #68                 // Field Value:Lorg/yaml/snakeyaml/tokens/Token$ID;
     314: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     317: dup
     318: ldc           #69                 // String Whitespace
     320: bipush        20
     322: ldc           #70                 // String <whitespace>
     324: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     327: putstatic     #71                 // Field Whitespace:Lorg/yaml/snakeyaml/tokens/Token$ID;
     330: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     333: dup
     334: ldc           #72                 // String Comment
     336: bipush        21
     338: ldc           #73                 // String #
     340: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     343: putstatic     #74                 // Field Comment:Lorg/yaml/snakeyaml/tokens/Token$ID;
     346: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     349: dup
     350: ldc           #75                 // String Error
     352: bipush        22
     354: ldc           #76                 // String <error>
     356: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     359: putstatic     #77                 // Field Error:Lorg/yaml/snakeyaml/tokens/Token$ID;
     362: bipush        23
     364: anewarray     #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     367: dup
     368: iconst_0
     369: getstatic     #11                 // Field Alias:Lorg/yaml/snakeyaml/tokens/Token$ID;
     372: aastore
     373: dup
     374: iconst_1
     375: getstatic     #14                 // Field Anchor:Lorg/yaml/snakeyaml/tokens/Token$ID;
     378: aastore
     379: dup
     380: iconst_2
     381: getstatic     #17                 // Field BlockEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     384: aastore
     385: dup
     386: iconst_3
     387: getstatic     #20                 // Field BlockEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
     390: aastore
     391: dup
     392: iconst_4
     393: getstatic     #23                 // Field BlockMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     396: aastore
     397: dup
     398: iconst_5
     399: getstatic     #26                 // Field BlockSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     402: aastore
     403: dup
     404: bipush        6
     406: getstatic     #29                 // Field Directive:Lorg/yaml/snakeyaml/tokens/Token$ID;
     409: aastore
     410: dup
     411: bipush        7
     413: getstatic     #32                 // Field DocumentEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     416: aastore
     417: dup
     418: bipush        8
     420: getstatic     #35                 // Field DocumentStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     423: aastore
     424: dup
     425: bipush        9
     427: getstatic     #38                 // Field FlowEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
     430: aastore
     431: dup
     432: bipush        10
     434: getstatic     #41                 // Field FlowMappingEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     437: aastore
     438: dup
     439: bipush        11
     441: getstatic     #44                 // Field FlowMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     444: aastore
     445: dup
     446: bipush        12
     448: getstatic     #47                 // Field FlowSequenceEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     451: aastore
     452: dup
     453: bipush        13
     455: getstatic     #50                 // Field FlowSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     458: aastore
     459: dup
     460: bipush        14
     462: getstatic     #53                 // Field Key:Lorg/yaml/snakeyaml/tokens/Token$ID;
     465: aastore
     466: dup
     467: bipush        15
     469: getstatic     #56                 // Field Scalar:Lorg/yaml/snakeyaml/tokens/Token$ID;
     472: aastore
     473: dup
     474: bipush        16
     476: getstatic     #59                 // Field StreamEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     479: aastore
     480: dup
     481: bipush        17
     483: getstatic     #62                 // Field StreamStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     486: aastore
     487: dup
     488: bipush        18
     490: getstatic     #65                 // Field Tag:Lorg/yaml/snakeyaml/tokens/Token$ID;
     493: aastore
     494: dup
     495: bipush        19
     497: getstatic     #68                 // Field Value:Lorg/yaml/snakeyaml/tokens/Token$ID;
     500: aastore
     501: dup
     502: bipush        20
     504: getstatic     #71                 // Field Whitespace:Lorg/yaml/snakeyaml/tokens/Token$ID;
     507: aastore
     508: dup
     509: bipush        21
     511: getstatic     #74                 // Field Comment:Lorg/yaml/snakeyaml/tokens/Token$ID;
     514: aastore
     515: dup
     516: bipush        22
     518: getstatic     #77                 // Field Error:Lorg/yaml/snakeyaml/tokens/Token$ID;
     521: aastore
     522: putstatic     #1                  // Field $VALUES:[Lorg/yaml/snakeyaml/tokens/Token$ID;
     525: return
}
