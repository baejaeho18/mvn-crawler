Compiled from "Emitter.java"
public final class org.yaml.snakeyaml.emitter.Emitter implements org.yaml.snakeyaml.emitter.Emitable {
  public static final int MIN_INDENT;

  public static final int MAX_INDENT;

  private static final char[] SPACE;

  private static final java.util.regex.Pattern SPACES_PATTERN;

  private static final java.util.Set<java.lang.Character> INVALID_ANCHOR;

  private static final java.util.Map<java.lang.Character, java.lang.String> ESCAPE_REPLACEMENTS;

  private static final java.util.Map<java.lang.String, java.lang.String> DEFAULT_TAG_PREFIXES;

  private final java.io.Writer stream;

  private final org.yaml.snakeyaml.util.ArrayStack<org.yaml.snakeyaml.emitter.EmitterState> states;

  private org.yaml.snakeyaml.emitter.EmitterState state;

  private final java.util.Queue<org.yaml.snakeyaml.events.Event> events;

  private org.yaml.snakeyaml.events.Event event;

  private final org.yaml.snakeyaml.util.ArrayStack<java.lang.Integer> indents;

  private java.lang.Integer indent;

  private int flowLevel;

  private boolean rootContext;

  private boolean mappingContext;

  private boolean simpleKeyContext;

  private int column;

  private boolean whitespace;

  private boolean indention;

  private boolean openEnded;

  private final java.lang.Boolean canonical;

  private final java.lang.Boolean prettyFlow;

  private final boolean allowUnicode;

  private int bestIndent;

  private final int indicatorIndent;

  private final boolean indentWithIndicator;

  private int bestWidth;

  private final char[] bestLineBreak;

  private final boolean splitLines;

  private final int maxSimpleKeyLength;

  private final boolean emitComments;

  private java.util.Map<java.lang.String, java.lang.String> tagPrefixes;

  private java.lang.String preparedAnchor;

  private java.lang.String preparedTag;

  private org.yaml.snakeyaml.emitter.ScalarAnalysis analysis;

  private org.yaml.snakeyaml.DumperOptions$ScalarStyle style;

  private final org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector;

  private final org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector;

  private static final java.util.regex.Pattern HANDLE_FORMAT;

  private static final java.util.regex.Pattern LEADING_ZERO_PATTERN;

  public org.yaml.snakeyaml.emitter.Emitter(java.io.Writer, org.yaml.snakeyaml.DumperOptions);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #33                 // class java/lang/NullPointerException
      11: dup
      12: ldc           #34                 // String Writer must be provided.
      14: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #33                 // class java/lang/NullPointerException
      25: dup
      26: ldc           #36                 // String DumperOptions must be provided.
      28: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: putfield      #37                 // Field stream:Ljava/io/Writer;
      37: aload_0
      38: new           #38                 // class org/yaml/snakeyaml/util/ArrayStack
      41: dup
      42: bipush        100
      44: invokespecial #39                 // Method org/yaml/snakeyaml/util/ArrayStack."<init>":(I)V
      47: putfield      #19                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
      50: aload_0
      51: new           #40                 // class org/yaml/snakeyaml/emitter/Emitter$ExpectStreamStart
      54: dup
      55: aload_0
      56: aconst_null
      57: invokespecial #41                 // Method org/yaml/snakeyaml/emitter/Emitter$ExpectStreamStart."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      60: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      63: aload_0
      64: new           #42                 // class java/util/ArrayDeque
      67: dup
      68: bipush        100
      70: invokespecial #43                 // Method java/util/ArrayDeque."<init>":(I)V
      73: putfield      #44                 // Field events:Ljava/util/Queue;
      76: aload_0
      77: aconst_null
      78: putfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      81: aload_0
      82: new           #38                 // class org/yaml/snakeyaml/util/ArrayStack
      85: dup
      86: bipush        10
      88: invokespecial #39                 // Method org/yaml/snakeyaml/util/ArrayStack."<init>":(I)V
      91: putfield      #16                 // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
      94: aload_0
      95: aconst_null
      96: putfield      #17                 // Field indent:Ljava/lang/Integer;
      99: aload_0
     100: iconst_0
     101: putfield      #15                 // Field flowLevel:I
     104: aload_0
     105: iconst_0
     106: putfield      #45                 // Field mappingContext:Z
     109: aload_0
     110: iconst_0
     111: putfield      #46                 // Field simpleKeyContext:Z
     114: aload_0
     115: iconst_0
     116: putfield      #12                 // Field column:I
     119: aload_0
     120: iconst_1
     121: putfield      #47                 // Field whitespace:Z
     124: aload_0
     125: iconst_1
     126: putfield      #48                 // Field indention:Z
     129: aload_0
     130: iconst_0
     131: putfield      #29                 // Field openEnded:Z
     134: aload_0
     135: aload_2
     136: invokevirtual #49                 // Method org/yaml/snakeyaml/DumperOptions.isCanonical:()Z
     139: invokestatic  #50                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     142: putfield      #23                 // Field canonical:Ljava/lang/Boolean;
     145: aload_0
     146: aload_2
     147: invokevirtual #51                 // Method org/yaml/snakeyaml/DumperOptions.isPrettyFlow:()Z
     150: invokestatic  #50                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     153: putfield      #9                  // Field prettyFlow:Ljava/lang/Boolean;
     156: aload_0
     157: aload_2
     158: invokevirtual #52                 // Method org/yaml/snakeyaml/DumperOptions.isAllowUnicode:()Z
     161: putfield      #53                 // Field allowUnicode:Z
     164: aload_0
     165: iconst_2
     166: putfield      #54                 // Field bestIndent:I
     169: aload_2
     170: invokevirtual #55                 // Method org/yaml/snakeyaml/DumperOptions.getIndent:()I
     173: iconst_1
     174: if_icmple     194
     177: aload_2
     178: invokevirtual #55                 // Method org/yaml/snakeyaml/DumperOptions.getIndent:()I
     181: bipush        10
     183: if_icmpge     194
     186: aload_0
     187: aload_2
     188: invokevirtual #55                 // Method org/yaml/snakeyaml/DumperOptions.getIndent:()I
     191: putfield      #54                 // Field bestIndent:I
     194: aload_0
     195: aload_2
     196: invokevirtual #57                 // Method org/yaml/snakeyaml/DumperOptions.getIndicatorIndent:()I
     199: putfield      #6                  // Field indicatorIndent:I
     202: aload_0
     203: aload_2
     204: invokevirtual #58                 // Method org/yaml/snakeyaml/DumperOptions.getIndentWithIndicator:()Z
     207: putfield      #7                  // Field indentWithIndicator:Z
     210: aload_0
     211: bipush        80
     213: putfield      #11                 // Field bestWidth:I
     216: aload_2
     217: invokevirtual #59                 // Method org/yaml/snakeyaml/DumperOptions.getWidth:()I
     220: aload_0
     221: getfield      #54                 // Field bestIndent:I
     224: iconst_2
     225: imul
     226: if_icmple     237
     229: aload_0
     230: aload_2
     231: invokevirtual #59                 // Method org/yaml/snakeyaml/DumperOptions.getWidth:()I
     234: putfield      #11                 // Field bestWidth:I
     237: aload_0
     238: aload_2
     239: invokevirtual #60                 // Method org/yaml/snakeyaml/DumperOptions.getLineBreak:()Lorg/yaml/snakeyaml/DumperOptions$LineBreak;
     242: invokevirtual #61                 // Method org/yaml/snakeyaml/DumperOptions$LineBreak.getString:()Ljava/lang/String;
     245: invokevirtual #62                 // Method java/lang/String.toCharArray:()[C
     248: putfield      #63                 // Field bestLineBreak:[C
     251: aload_0
     252: aload_2
     253: invokevirtual #64                 // Method org/yaml/snakeyaml/DumperOptions.getSplitLines:()Z
     256: putfield      #10                 // Field splitLines:Z
     259: aload_0
     260: aload_2
     261: invokevirtual #65                 // Method org/yaml/snakeyaml/DumperOptions.getMaxSimpleKeyLength:()I
     264: putfield      #66                 // Field maxSimpleKeyLength:I
     267: aload_0
     268: aload_2
     269: invokevirtual #67                 // Method org/yaml/snakeyaml/DumperOptions.isProcessComments:()Z
     272: putfield      #68                 // Field emitComments:Z
     275: aload_0
     276: new           #69                 // class java/util/LinkedHashMap
     279: dup
     280: invokespecial #70                 // Method java/util/LinkedHashMap."<init>":()V
     283: putfield      #27                 // Field tagPrefixes:Ljava/util/Map;
     286: aload_0
     287: aconst_null
     288: putfield      #71                 // Field preparedAnchor:Ljava/lang/String;
     291: aload_0
     292: aconst_null
     293: putfield      #72                 // Field preparedTag:Ljava/lang/String;
     296: aload_0
     297: aconst_null
     298: putfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     301: aload_0
     302: aconst_null
     303: putfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     306: aload_0
     307: new           #74                 // class org/yaml/snakeyaml/comments/CommentEventsCollector
     310: dup
     311: aload_0
     312: getfield      #44                 // Field events:Ljava/util/Queue;
     315: iconst_2
     316: anewarray     #75                 // class org/yaml/snakeyaml/comments/CommentType
     319: dup
     320: iconst_0
     321: getstatic     #76                 // Field org/yaml/snakeyaml/comments/CommentType.BLANK_LINE:Lorg/yaml/snakeyaml/comments/CommentType;
     324: aastore
     325: dup
     326: iconst_1
     327: getstatic     #77                 // Field org/yaml/snakeyaml/comments/CommentType.BLOCK:Lorg/yaml/snakeyaml/comments/CommentType;
     330: aastore
     331: invokespecial #78                 // Method org/yaml/snakeyaml/comments/CommentEventsCollector."<init>":(Ljava/util/Queue;[Lorg/yaml/snakeyaml/comments/CommentType;)V
     334: putfield      #21                 // Field blockCommentsCollector:Lorg/yaml/snakeyaml/comments/CommentEventsCollector;
     337: aload_0
     338: new           #74                 // class org/yaml/snakeyaml/comments/CommentEventsCollector
     341: dup
     342: aload_0
     343: getfield      #44                 // Field events:Ljava/util/Queue;
     346: iconst_1
     347: anewarray     #75                 // class org/yaml/snakeyaml/comments/CommentType
     350: dup
     351: iconst_0
     352: getstatic     #79                 // Field org/yaml/snakeyaml/comments/CommentType.IN_LINE:Lorg/yaml/snakeyaml/comments/CommentType;
     355: aastore
     356: invokespecial #78                 // Method org/yaml/snakeyaml/comments/CommentEventsCollector."<init>":(Ljava/util/Queue;[Lorg/yaml/snakeyaml/comments/CommentType;)V
     359: putfield      #14                 // Field inlineCommentsCollector:Lorg/yaml/snakeyaml/comments/CommentEventsCollector;
     362: return

  public void emit(org.yaml.snakeyaml.events.Event) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #44                 // Field events:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #80,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokespecial #81                 // Method needMoreEvents:()Z
      15: ifne          51
      18: aload_0
      19: aload_0
      20: getfield      #44                 // Field events:Ljava/util/Queue;
      23: invokeinterface #82,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      28: checkcast     #83                 // class org/yaml/snakeyaml/events/Event
      31: putfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      34: aload_0
      35: getfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      38: invokeinterface #84,  1           // InterfaceMethod org/yaml/snakeyaml/emitter/EmitterState.expect:()V
      43: aload_0
      44: aconst_null
      45: putfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      48: goto          11
      51: return

  private boolean needMoreEvents();
    Code:
       0: aload_0
       1: getfield      #44                 // Field events:Ljava/util/Queue;
       4: invokeinterface #85,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #44                 // Field events:Ljava/util/Queue;
      18: invokeinterface #86,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      23: astore_1
      24: aload_1
      25: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #83                 // class org/yaml/snakeyaml/events/Event
      33: astore_2
      34: aload_2
      35: instanceof    #88                 // class org/yaml/snakeyaml/events/CommentEvent
      38: ifeq          65
      41: aload_1
      42: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifne          52
      50: iconst_1
      51: ireturn
      52: aload_1
      53: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #83                 // class org/yaml/snakeyaml/events/Event
      61: astore_2
      62: goto          34
      65: aload_2
      66: instanceof    #90                 // class org/yaml/snakeyaml/events/DocumentStartEvent
      69: ifeq          79
      72: aload_0
      73: aload_1
      74: iconst_1
      75: invokespecial #91                 // Method needEvents:(Ljava/util/Iterator;I)Z
      78: ireturn
      79: aload_2
      80: instanceof    #92                 // class org/yaml/snakeyaml/events/SequenceStartEvent
      83: ifeq          93
      86: aload_0
      87: aload_1
      88: iconst_2
      89: invokespecial #91                 // Method needEvents:(Ljava/util/Iterator;I)Z
      92: ireturn
      93: aload_2
      94: instanceof    #93                 // class org/yaml/snakeyaml/events/MappingStartEvent
      97: ifeq          107
     100: aload_0
     101: aload_1
     102: iconst_3
     103: invokespecial #91                 // Method needEvents:(Ljava/util/Iterator;I)Z
     106: ireturn
     107: aload_2
     108: instanceof    #94                 // class org/yaml/snakeyaml/events/StreamStartEvent
     111: ifeq          121
     114: aload_0
     115: aload_1
     116: iconst_2
     117: invokespecial #91                 // Method needEvents:(Ljava/util/Iterator;I)Z
     120: ireturn
     121: aload_2
     122: instanceof    #95                 // class org/yaml/snakeyaml/events/StreamEndEvent
     125: ifeq          130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: getfield      #68                 // Field emitComments:Z
     134: ifeq          144
     137: aload_0
     138: aload_1
     139: iconst_1
     140: invokespecial #91                 // Method needEvents:(Ljava/util/Iterator;I)Z
     143: ireturn
     144: iconst_0
     145: ireturn

  private boolean needEvents(java.util.Iterator<org.yaml.snakeyaml.events.Event>, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: aload_1
       6: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          102
      14: aload_1
      15: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #83                 // class org/yaml/snakeyaml/events/Event
      23: astore        5
      25: aload         5
      27: instanceof    #88                 // class org/yaml/snakeyaml/events/CommentEvent
      30: ifeq          36
      33: goto          5
      36: iinc          4, 1
      39: aload         5
      41: instanceof    #90                 // class org/yaml/snakeyaml/events/DocumentStartEvent
      44: ifne          55
      47: aload         5
      49: instanceof    #96                 // class org/yaml/snakeyaml/events/CollectionStartEvent
      52: ifeq          61
      55: iinc          3, 1
      58: goto          93
      61: aload         5
      63: instanceof    #97                 // class org/yaml/snakeyaml/events/DocumentEndEvent
      66: ifne          77
      69: aload         5
      71: instanceof    #98                 // class org/yaml/snakeyaml/events/CollectionEndEvent
      74: ifeq          83
      77: iinc          3, -1
      80: goto          93
      83: aload         5
      85: instanceof    #95                 // class org/yaml/snakeyaml/events/StreamEndEvent
      88: ifeq          93
      91: iconst_m1
      92: istore_3
      93: iload_3
      94: ifge          99
      97: iconst_0
      98: ireturn
      99: goto          5
     102: iload         4
     104: iload_2
     105: if_icmpge     112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: ireturn

  private void increaseIndent(boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
       4: aload_0
       5: getfield      #17                 // Field indent:Ljava/lang/Integer;
       8: invokevirtual #99                 // Method org/yaml/snakeyaml/util/ArrayStack.push:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #17                 // Field indent:Ljava/lang/Integer;
      15: ifnonnull     47
      18: iload_1
      19: ifeq          36
      22: aload_0
      23: aload_0
      24: getfield      #54                 // Field bestIndent:I
      27: invokestatic  #100                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: putfield      #17                 // Field indent:Ljava/lang/Integer;
      33: goto          70
      36: aload_0
      37: iconst_0
      38: invokestatic  #100                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: putfield      #17                 // Field indent:Ljava/lang/Integer;
      44: goto          70
      47: iload_2
      48: ifne          70
      51: aload_0
      52: aload_0
      53: getfield      #17                 // Field indent:Ljava/lang/Integer;
      56: invokevirtual #101                // Method java/lang/Integer.intValue:()I
      59: aload_0
      60: getfield      #54                 // Field bestIndent:I
      63: iadd
      64: invokestatic  #100                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: putfield      #17                 // Field indent:Ljava/lang/Integer;
      70: return

  private void expectNode(boolean, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #102                // Field rootContext:Z
       5: aload_0
       6: iload_2
       7: putfield      #45                 // Field mappingContext:Z
      10: aload_0
      11: iload_3
      12: putfield      #46                 // Field simpleKeyContext:Z
      15: aload_0
      16: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      19: instanceof    #103                // class org/yaml/snakeyaml/events/AliasEvent
      22: ifeq          32
      25: aload_0
      26: invokespecial #104                // Method expectAlias:()V
      29: goto          221
      32: aload_0
      33: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      36: instanceof    #105                // class org/yaml/snakeyaml/events/ScalarEvent
      39: ifne          52
      42: aload_0
      43: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      46: instanceof    #96                 // class org/yaml/snakeyaml/events/CollectionStartEvent
      49: ifeq          191
      52: aload_0
      53: ldc           #106                // String &
      55: invokespecial #107                // Method processAnchor:(Ljava/lang/String;)V
      58: aload_0
      59: invokespecial #108                // Method processTag:()V
      62: aload_0
      63: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      66: instanceof    #105                // class org/yaml/snakeyaml/events/ScalarEvent
      69: ifeq          79
      72: aload_0
      73: invokespecial #109                // Method expectScalar:()V
      76: goto          221
      79: aload_0
      80: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      83: instanceof    #92                 // class org/yaml/snakeyaml/events/SequenceStartEvent
      86: ifeq          140
      89: aload_0
      90: getfield      #15                 // Field flowLevel:I
      93: ifne          126
      96: aload_0
      97: getfield      #23                 // Field canonical:Ljava/lang/Boolean;
     100: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
     103: ifne          126
     106: aload_0
     107: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     110: checkcast     #92                 // class org/yaml/snakeyaml/events/SequenceStartEvent
     113: invokevirtual #111                // Method org/yaml/snakeyaml/events/SequenceStartEvent.isFlow:()Z
     116: ifne          126
     119: aload_0
     120: invokespecial #112                // Method checkEmptySequence:()Z
     123: ifeq          133
     126: aload_0
     127: invokespecial #113                // Method expectFlowSequence:()V
     130: goto          221
     133: aload_0
     134: invokespecial #114                // Method expectBlockSequence:()V
     137: goto          221
     140: aload_0
     141: getfield      #15                 // Field flowLevel:I
     144: ifne          177
     147: aload_0
     148: getfield      #23                 // Field canonical:Ljava/lang/Boolean;
     151: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
     154: ifne          177
     157: aload_0
     158: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     161: checkcast     #93                 // class org/yaml/snakeyaml/events/MappingStartEvent
     164: invokevirtual #115                // Method org/yaml/snakeyaml/events/MappingStartEvent.isFlow:()Z
     167: ifne          177
     170: aload_0
     171: invokespecial #116                // Method checkEmptyMapping:()Z
     174: ifeq          184
     177: aload_0
     178: invokespecial #117                // Method expectFlowMapping:()V
     181: goto          221
     184: aload_0
     185: invokespecial #118                // Method expectBlockMapping:()V
     188: goto          221
     191: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
     194: dup
     195: new           #120                // class java/lang/StringBuilder
     198: dup
     199: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     202: ldc           #122                // String expected NodeEvent, but got
     204: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: aload_0
     208: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     211: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     214: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     217: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
     220: athrow
     221: return

  private void expectAlias() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: instanceof    #103                // class org/yaml/snakeyaml/events/AliasEvent
       7: ifne          20
      10: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      13: dup
      14: ldc           #127                // String Alias must be provided
      16: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: ldc           #128                // String *
      23: invokespecial #107                // Method processAnchor:(Ljava/lang/String;)V
      26: aload_0
      27: aload_0
      28: getfield      #19                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
      31: invokevirtual #129                // Method org/yaml/snakeyaml/util/ArrayStack.pop:()Ljava/lang/Object;
      34: checkcast     #130                // class org/yaml/snakeyaml/emitter/EmitterState
      37: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      40: return

  private void expectScalar() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_0
       3: invokespecial #4                  // Method increaseIndent:(ZZ)V
       6: aload_0
       7: invokespecial #131                // Method processScalar:()V
      10: aload_0
      11: aload_0
      12: getfield      #16                 // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
      15: invokevirtual #129                // Method org/yaml/snakeyaml/util/ArrayStack.pop:()Ljava/lang/Object;
      18: checkcast     #132                // class java/lang/Integer
      21: putfield      #17                 // Field indent:Ljava/lang/Integer;
      24: aload_0
      25: aload_0
      26: getfield      #19                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
      29: invokevirtual #129                // Method org/yaml/snakeyaml/util/ArrayStack.pop:()Ljava/lang/Object;
      32: checkcast     #130                // class org/yaml/snakeyaml/emitter/EmitterState
      35: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      38: return

  private void expectFlowSequence() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #133                // String [
       3: iconst_1
       4: iconst_1
       5: iconst_0
       6: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
       9: aload_0
      10: dup
      11: getfield      #15                 // Field flowLevel:I
      14: iconst_1
      15: iadd
      16: putfield      #15                 // Field flowLevel:I
      19: aload_0
      20: iconst_1
      21: iconst_0
      22: invokespecial #4                  // Method increaseIndent:(ZZ)V
      25: aload_0
      26: getfield      #9                  // Field prettyFlow:Ljava/lang/Boolean;
      29: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
      32: ifeq          39
      35: aload_0
      36: invokevirtual #135                // Method writeIndent:()V
      39: aload_0
      40: new           #136                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowSequenceItem
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #137                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowSequenceItem."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      49: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      52: return

  private void expectFlowMapping() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #138                // String {
       3: iconst_1
       4: iconst_1
       5: iconst_0
       6: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
       9: aload_0
      10: dup
      11: getfield      #15                 // Field flowLevel:I
      14: iconst_1
      15: iadd
      16: putfield      #15                 // Field flowLevel:I
      19: aload_0
      20: iconst_1
      21: iconst_0
      22: invokespecial #4                  // Method increaseIndent:(ZZ)V
      25: aload_0
      26: getfield      #9                  // Field prettyFlow:Ljava/lang/Boolean;
      29: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
      32: ifeq          39
      35: aload_0
      36: invokevirtual #135                // Method writeIndent:()V
      39: aload_0
      40: new           #139                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowMappingKey
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #140                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowMappingKey."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      49: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      52: return

  private void expectBlockSequence() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field mappingContext:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #48                 // Field indention:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_1
      20: aload_0
      21: iconst_0
      22: iload_1
      23: invokespecial #4                  // Method increaseIndent:(ZZ)V
      26: aload_0
      27: new           #141                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockSequenceItem
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #142                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockSequenceItem."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      36: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      39: return

  private void expectBlockMapping() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokespecial #4                  // Method increaseIndent:(ZZ)V
       6: aload_0
       7: new           #143                // class org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockMappingKey
      10: dup
      11: aload_0
      12: aconst_null
      13: invokespecial #144                // Method org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockMappingKey."<init>":(Lorg/yaml/snakeyaml/emitter/Emitter;Lorg/yaml/snakeyaml/emitter/Emitter$1;)V
      16: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
      19: return

  private boolean isFoldedOrLiteral(org.yaml.snakeyaml.events.Event);
    Code:
       0: aload_1
       1: getstatic     #145                // Field org/yaml/snakeyaml/events/Event$ID.Scalar:Lorg/yaml/snakeyaml/events/Event$ID;
       4: invokevirtual #146                // Method org/yaml/snakeyaml/events/Event.is:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_1
      13: checkcast     #105                // class org/yaml/snakeyaml/events/ScalarEvent
      16: astore_2
      17: aload_2
      18: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      21: astore_3
      22: aload_3
      23: getstatic     #148                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.FOLDED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      26: if_acmpeq     36
      29: aload_3
      30: getstatic     #149                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.LITERAL:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      33: if_acmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private boolean checkEmptySequence();
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: instanceof    #92                 // class org/yaml/snakeyaml/events/SequenceStartEvent
       7: ifeq          41
      10: aload_0
      11: getfield      #44                 // Field events:Ljava/util/Queue;
      14: invokeinterface #85,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifne          41
      22: aload_0
      23: getfield      #44                 // Field events:Ljava/util/Queue;
      26: invokeinterface #150,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      31: instanceof    #151                // class org/yaml/snakeyaml/events/SequenceEndEvent
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean checkEmptyMapping();
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: instanceof    #93                 // class org/yaml/snakeyaml/events/MappingStartEvent
       7: ifeq          41
      10: aload_0
      11: getfield      #44                 // Field events:Ljava/util/Queue;
      14: invokeinterface #85,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifne          41
      22: aload_0
      23: getfield      #44                 // Field events:Ljava/util/Queue;
      26: invokeinterface #150,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      31: instanceof    #152                // class org/yaml/snakeyaml/events/MappingEndEvent
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean checkEmptyDocument();
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: instanceof    #90                 // class org/yaml/snakeyaml/events/DocumentStartEvent
       7: ifeq          22
      10: aload_0
      11: getfield      #44                 // Field events:Ljava/util/Queue;
      14: invokeinterface #85,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifeq          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #44                 // Field events:Ljava/util/Queue;
      28: invokeinterface #150,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      33: checkcast     #83                 // class org/yaml/snakeyaml/events/Event
      36: astore_1
      37: aload_1
      38: instanceof    #105                // class org/yaml/snakeyaml/events/ScalarEvent
      41: ifeq          86
      44: aload_1
      45: checkcast     #105                // class org/yaml/snakeyaml/events/ScalarEvent
      48: astore_2
      49: aload_2
      50: invokevirtual #153                // Method org/yaml/snakeyaml/events/ScalarEvent.getAnchor:()Ljava/lang/String;
      53: ifnonnull     84
      56: aload_2
      57: invokevirtual #154                // Method org/yaml/snakeyaml/events/ScalarEvent.getTag:()Ljava/lang/String;
      60: ifnonnull     84
      63: aload_2
      64: invokevirtual #155                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      67: ifnull        84
      70: aload_2
      71: invokevirtual #156                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      74: invokevirtual #157                // Method java/lang/String.length:()I
      77: ifne          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn
      86: iconst_0
      87: ireturn

  private boolean checkSimpleKey();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       6: instanceof    #158                // class org/yaml/snakeyaml/events/NodeEvent
       9: ifeq          59
      12: aload_0
      13: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      16: checkcast     #158                // class org/yaml/snakeyaml/events/NodeEvent
      19: invokevirtual #159                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      22: ifnull        59
      25: aload_0
      26: getfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      29: ifnonnull     49
      32: aload_0
      33: aload_0
      34: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      37: checkcast     #158                // class org/yaml/snakeyaml/events/NodeEvent
      40: invokevirtual #159                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      43: invokestatic  #160                // Method prepareAnchor:(Ljava/lang/String;)Ljava/lang/String;
      46: putfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      49: iload_1
      50: aload_0
      51: getfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      54: invokevirtual #157                // Method java/lang/String.length:()I
      57: iadd
      58: istore_1
      59: aconst_null
      60: astore_2
      61: aload_0
      62: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      65: instanceof    #105                // class org/yaml/snakeyaml/events/ScalarEvent
      68: ifeq          85
      71: aload_0
      72: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      75: checkcast     #105                // class org/yaml/snakeyaml/events/ScalarEvent
      78: invokevirtual #154                // Method org/yaml/snakeyaml/events/ScalarEvent.getTag:()Ljava/lang/String;
      81: astore_2
      82: goto          106
      85: aload_0
      86: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      89: instanceof    #96                 // class org/yaml/snakeyaml/events/CollectionStartEvent
      92: ifeq          106
      95: aload_0
      96: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      99: checkcast     #96                 // class org/yaml/snakeyaml/events/CollectionStartEvent
     102: invokevirtual #161                // Method org/yaml/snakeyaml/events/CollectionStartEvent.getTag:()Ljava/lang/String;
     105: astore_2
     106: aload_2
     107: ifnull        136
     110: aload_0
     111: getfield      #72                 // Field preparedTag:Ljava/lang/String;
     114: ifnonnull     126
     117: aload_0
     118: aload_0
     119: aload_2
     120: invokespecial #162                // Method prepareTag:(Ljava/lang/String;)Ljava/lang/String;
     123: putfield      #72                 // Field preparedTag:Ljava/lang/String;
     126: iload_1
     127: aload_0
     128: getfield      #72                 // Field preparedTag:Ljava/lang/String;
     131: invokevirtual #157                // Method java/lang/String.length:()I
     134: iadd
     135: istore_1
     136: aload_0
     137: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     140: instanceof    #105                // class org/yaml/snakeyaml/events/ScalarEvent
     143: ifeq          184
     146: aload_0
     147: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     150: ifnonnull     171
     153: aload_0
     154: aload_0
     155: aload_0
     156: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     159: checkcast     #105                // class org/yaml/snakeyaml/events/ScalarEvent
     162: invokevirtual #156                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
     165: invokespecial #2                  // Method analyzeScalar:(Ljava/lang/String;)Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     168: putfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     171: iload_1
     172: aload_0
     173: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     176: invokevirtual #163                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.getScalar:()Ljava/lang/String;
     179: invokevirtual #157                // Method java/lang/String.length:()I
     182: iadd
     183: istore_1
     184: iload_1
     185: aload_0
     186: getfield      #66                 // Field maxSimpleKeyLength:I
     189: if_icmpge     250
     192: aload_0
     193: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     196: instanceof    #103                // class org/yaml/snakeyaml/events/AliasEvent
     199: ifne          246
     202: aload_0
     203: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     206: instanceof    #105                // class org/yaml/snakeyaml/events/ScalarEvent
     209: ifeq          232
     212: aload_0
     213: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     216: invokevirtual #164                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isEmpty:()Z
     219: ifne          232
     222: aload_0
     223: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     226: invokevirtual #165                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isMultiline:()Z
     229: ifeq          246
     232: aload_0
     233: invokespecial #112                // Method checkEmptySequence:()Z
     236: ifne          246
     239: aload_0
     240: invokespecial #116                // Method checkEmptyMapping:()Z
     243: ifeq          250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: ireturn

  private void processAnchor(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: checkcast     #158                // class org/yaml/snakeyaml/events/NodeEvent
       7: astore_2
       8: aload_2
       9: invokevirtual #159                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      12: ifnonnull     21
      15: aload_0
      16: aconst_null
      17: putfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      20: return
      21: aload_0
      22: getfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      25: ifnonnull     39
      28: aload_0
      29: aload_2
      30: invokevirtual #159                // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
      33: invokestatic  #160                // Method prepareAnchor:(Ljava/lang/String;)Ljava/lang/String;
      36: putfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      39: aload_0
      40: new           #120                // class java/lang/StringBuilder
      43: dup
      44: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      47: aload_1
      48: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      55: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: iconst_1
      62: iconst_0
      63: iconst_0
      64: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      67: aload_0
      68: aconst_null
      69: putfield      #71                 // Field preparedAnchor:Ljava/lang/String;
      72: return

  private void processTag() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       6: instanceof    #105                // class org/yaml/snakeyaml/events/ScalarEvent
       9: ifeq          119
      12: aload_0
      13: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
      16: checkcast     #105                // class org/yaml/snakeyaml/events/ScalarEvent
      19: astore_2
      20: aload_2
      21: invokevirtual #154                // Method org/yaml/snakeyaml/events/ScalarEvent.getTag:()Ljava/lang/String;
      24: astore_1
      25: aload_0
      26: getfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      29: ifnonnull     40
      32: aload_0
      33: aload_0
      34: invokespecial #166                // Method chooseScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      37: putfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      40: aload_0
      41: getfield      #23                 // Field canonical:Ljava/lang/Boolean;
      44: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
      47: ifeq          54
      50: aload_1
      51: ifnonnull     94
      54: aload_0
      55: getfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      58: ifnonnull     71
      61: aload_2
      62: invokevirtual #155                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      65: invokevirtual #167                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInPlainScalar:()Z
      68: ifne          88
      71: aload_0
      72: getfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      75: ifnull        94
      78: aload_2
      79: invokevirtual #155                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      82: invokevirtual #168                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInNonPlainScalar:()Z
      85: ifeq          94
      88: aload_0
      89: aconst_null
      90: putfield      #72                 // Field preparedTag:Ljava/lang/String;
      93: return
      94: aload_2
      95: invokevirtual #155                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      98: invokevirtual #167                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInPlainScalar:()Z
     101: ifeq          116
     104: aload_1
     105: ifnonnull     116
     108: ldc           #169                // String !
     110: astore_1
     111: aload_0
     112: aconst_null
     113: putfield      #72                 // Field preparedTag:Ljava/lang/String;
     116: goto          159
     119: aload_0
     120: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
     123: checkcast     #96                 // class org/yaml/snakeyaml/events/CollectionStartEvent
     126: astore_2
     127: aload_2
     128: invokevirtual #161                // Method org/yaml/snakeyaml/events/CollectionStartEvent.getTag:()Ljava/lang/String;
     131: astore_1
     132: aload_0
     133: getfield      #23                 // Field canonical:Ljava/lang/Boolean;
     136: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
     139: ifeq          146
     142: aload_1
     143: ifnonnull     159
     146: aload_2
     147: invokevirtual #170                // Method org/yaml/snakeyaml/events/CollectionStartEvent.getImplicit:()Z
     150: ifeq          159
     153: aload_0
     154: aconst_null
     155: putfield      #72                 // Field preparedTag:Ljava/lang/String;
     158: return
     159: aload_1
     160: ifnonnull     173
     163: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
     166: dup
     167: ldc           #171                // String tag is not specified
     169: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: aload_0
     174: getfield      #72                 // Field preparedTag:Ljava/lang/String;
     177: ifnonnull     189
     180: aload_0
     181: aload_0
     182: aload_1
     183: invokespecial #162                // Method prepareTag:(Ljava/lang/String;)Ljava/lang/String;
     186: putfield      #72                 // Field preparedTag:Ljava/lang/String;
     189: aload_0
     190: aload_0
     191: getfield      #72                 // Field preparedTag:Ljava/lang/String;
     194: iconst_1
     195: iconst_0
     196: iconst_0
     197: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
     200: aload_0
     201: aconst_null
     202: putfield      #72                 // Field preparedTag:Ljava/lang/String;
     205: return

  private org.yaml.snakeyaml.DumperOptions$ScalarStyle chooseScalarStyle();
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: checkcast     #105                // class org/yaml/snakeyaml/events/ScalarEvent
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      12: ifnonnull     27
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokevirtual #156                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      21: invokespecial #2                  // Method analyzeScalar:(Ljava/lang/String;)Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      24: putfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      27: aload_1
      28: invokevirtual #172                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
      31: ifne          44
      34: aload_1
      35: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      38: getstatic     #173                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.DOUBLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      41: if_acmpeq     54
      44: aload_0
      45: getfield      #23                 // Field canonical:Ljava/lang/Boolean;
      48: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
      51: ifeq          58
      54: getstatic     #173                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.DOUBLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      57: areturn
      58: aload_1
      59: invokevirtual #172                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
      62: ifeq          138
      65: aload_1
      66: invokevirtual #155                // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      69: invokevirtual #167                // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInPlainScalar:()Z
      72: ifeq          138
      75: aload_0
      76: getfield      #46                 // Field simpleKeyContext:Z
      79: ifeq          102
      82: aload_0
      83: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      86: invokevirtual #164                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isEmpty:()Z
      89: ifne          138
      92: aload_0
      93: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      96: invokevirtual #165                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isMultiline:()Z
      99: ifne          138
     102: aload_0
     103: getfield      #15                 // Field flowLevel:I
     106: ifeq          119
     109: aload_0
     110: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     113: invokevirtual #174                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isAllowFlowPlain:()Z
     116: ifne          136
     119: aload_0
     120: getfield      #15                 // Field flowLevel:I
     123: ifne          138
     126: aload_0
     127: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     130: invokevirtual #175                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isAllowBlockPlain:()Z
     133: ifeq          138
     136: aconst_null
     137: areturn
     138: aload_1
     139: invokevirtual #172                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
     142: ifne          194
     145: aload_1
     146: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     149: getstatic     #149                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.LITERAL:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     152: if_acmpeq     165
     155: aload_1
     156: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     159: getstatic     #148                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.FOLDED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     162: if_acmpne     194
     165: aload_0
     166: getfield      #15                 // Field flowLevel:I
     169: ifne          194
     172: aload_0
     173: getfield      #46                 // Field simpleKeyContext:Z
     176: ifne          194
     179: aload_0
     180: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     183: invokevirtual #176                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isAllowBlock:()Z
     186: ifeq          194
     189: aload_1
     190: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     193: areturn
     194: aload_1
     195: invokevirtual #172                // Method org/yaml/snakeyaml/events/ScalarEvent.isPlain:()Z
     198: ifne          211
     201: aload_1
     202: invokevirtual #147                // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     205: getstatic     #177                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.SINGLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     208: if_acmpne     242
     211: aload_0
     212: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     215: invokevirtual #178                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isAllowSingleQuoted:()Z
     218: ifeq          242
     221: aload_0
     222: getfield      #46                 // Field simpleKeyContext:Z
     225: ifeq          238
     228: aload_0
     229: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     232: invokevirtual #165                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.isMultiline:()Z
     235: ifne          242
     238: getstatic     #177                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.SINGLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     241: areturn
     242: getstatic     #173                // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.DOUBLE_QUOTED:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     245: areturn

  private void processScalar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: checkcast     #105                // class org/yaml/snakeyaml/events/ScalarEvent
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      12: ifnonnull     27
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokevirtual #156                // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      21: invokespecial #2                  // Method analyzeScalar:(Ljava/lang/String;)Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      24: putfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      27: aload_0
      28: getfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      31: ifnonnull     42
      34: aload_0
      35: aload_0
      36: invokespecial #166                // Method chooseScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      39: putfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      42: aload_0
      43: getfield      #46                 // Field simpleKeyContext:Z
      46: ifne          60
      49: aload_0
      50: getfield      #10                 // Field splitLines:Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: istore_2
      62: aload_0
      63: getfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      66: ifnonnull     84
      69: aload_0
      70: aload_0
      71: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
      74: invokevirtual #163                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.getScalar:()Ljava/lang/String;
      77: iload_2
      78: invokevirtual #179                // Method writePlain:(Ljava/lang/String;Z)V
      81: goto          213
      84: getstatic     #180                // Field org/yaml/snakeyaml/emitter/Emitter$1.$SwitchMap$org$yaml$snakeyaml$DumperOptions$ScalarStyle:[I
      87: aload_0
      88: getfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      91: invokevirtual #181                // Method org/yaml/snakeyaml/DumperOptions$ScalarStyle.ordinal:()I
      94: iaload
      95: tableswitch   { // 1 to 4
                     1: 124
                     2: 139
                     3: 154
                     4: 169
               default: 183
          }
     124: aload_0
     125: aload_0
     126: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     129: invokevirtual #163                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.getScalar:()Ljava/lang/String;
     132: iload_2
     133: invokespecial #182                // Method writeDoubleQuoted:(Ljava/lang/String;Z)V
     136: goto          213
     139: aload_0
     140: aload_0
     141: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     144: invokevirtual #163                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.getScalar:()Ljava/lang/String;
     147: iload_2
     148: invokespecial #183                // Method writeSingleQuoted:(Ljava/lang/String;Z)V
     151: goto          213
     154: aload_0
     155: aload_0
     156: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     159: invokevirtual #163                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.getScalar:()Ljava/lang/String;
     162: iload_2
     163: invokevirtual #184                // Method writeFolded:(Ljava/lang/String;Z)V
     166: goto          213
     169: aload_0
     170: aload_0
     171: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     174: invokevirtual #163                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis.getScalar:()Ljava/lang/String;
     177: invokevirtual #185                // Method writeLiteral:(Ljava/lang/String;)V
     180: goto          213
     183: new           #186                // class org/yaml/snakeyaml/error/YAMLException
     186: dup
     187: new           #120                // class java/lang/StringBuilder
     190: dup
     191: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     194: ldc           #187                // String Unexpected style:
     196: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_0
     200: getfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     203: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     206: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     209: invokespecial #188                // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     212: athrow
     213: aload_0
     214: aconst_null
     215: putfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
     218: aload_0
     219: aconst_null
     220: putfield      #73                 // Field style:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     223: return

  private java.lang.String prepareVersion(org.yaml.snakeyaml.DumperOptions$Version);
    Code:
       0: aload_1
       1: invokevirtual #189                // Method org/yaml/snakeyaml/DumperOptions$Version.major:()I
       4: iconst_1
       5: if_icmpeq     35
       8: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      11: dup
      12: new           #120                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #190                // String unsupported YAML version:
      21: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_1
      36: invokevirtual #191                // Method org/yaml/snakeyaml/DumperOptions$Version.getRepresentation:()Ljava/lang/String;
      39: areturn

  private java.lang.String prepareTagHandle(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #157                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #192                // String tag handle must not be empty
      13: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: iconst_0
      19: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      22: bipush        33
      24: if_icmpne     42
      27: aload_1
      28: aload_1
      29: invokevirtual #157                // Method java/lang/String.length:()I
      32: iconst_1
      33: isub
      34: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      37: bipush        33
      39: if_icmpeq     69
      42: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      45: dup
      46: new           #120                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #194                // String tag handle must start and end with \'!\':
      55: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: ldc           #169                // String !
      71: aload_1
      72: invokevirtual #195                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          118
      78: getstatic     #196                // Field HANDLE_FORMAT:Ljava/util/regex/Pattern;
      81: aload_1
      82: invokevirtual #197                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      85: invokevirtual #198                // Method java/util/regex/Matcher.matches:()Z
      88: ifne          118
      91: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      94: dup
      95: new           #120                // class java/lang/StringBuilder
      98: dup
      99: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #199                // String invalid character in the tag handle:
     104: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aload_1
     119: areturn

  private java.lang.String prepareTagPrefix(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #157                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #200                // String tag prefix must not be empty
      13: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #120                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iconst_0
      28: istore        4
      30: aload_1
      31: iconst_0
      32: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      35: bipush        33
      37: if_icmpne     43
      40: iconst_1
      41: istore        4
      43: iload         4
      45: aload_1
      46: invokevirtual #157                // Method java/lang/String.length:()I
      49: if_icmpge     58
      52: iinc          4, 1
      55: goto          43
      58: iload_3
      59: iload         4
      61: if_icmpge     73
      64: aload_2
      65: aload_1
      66: iload_3
      67: iload         4
      69: invokevirtual #201                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      72: pop
      73: aload_2
      74: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: areturn

  private java.lang.String prepareTag(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #157                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #202                // String tag must not be empty
      13: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc           #169                // String !
      19: aload_1
      20: invokevirtual #195                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          28
      26: aload_1
      27: areturn
      28: aconst_null
      29: astore_2
      30: aload_1
      31: astore_3
      32: aload_0
      33: getfield      #27                 // Field tagPrefixes:Ljava/util/Map;
      36: invokeinterface #203,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      41: invokeinterface #204,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore        4
      48: aload         4
      50: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          107
      58: aload         4
      60: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #205                // class java/lang/String
      68: astore        5
      70: aload_1
      71: aload         5
      73: invokevirtual #206                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      76: ifeq          104
      79: ldc           #169                // String !
      81: aload         5
      83: invokevirtual #195                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifne          101
      89: aload         5
      91: invokevirtual #157                // Method java/lang/String.length:()I
      94: aload_1
      95: invokevirtual #157                // Method java/lang/String.length:()I
      98: if_icmpge     104
     101: aload         5
     103: astore_2
     104: goto          48
     107: aload_2
     108: ifnull        134
     111: aload_1
     112: aload_2
     113: invokevirtual #157                // Method java/lang/String.length:()I
     116: invokevirtual #207                // Method java/lang/String.substring:(I)Ljava/lang/String;
     119: astore_3
     120: aload_0
     121: getfield      #27                 // Field tagPrefixes:Ljava/util/Map;
     124: aload_2
     125: invokeinterface #208,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     130: checkcast     #205                // class java/lang/String
     133: astore_2
     134: aload_3
     135: invokevirtual #157                // Method java/lang/String.length:()I
     138: istore        4
     140: iload         4
     142: ifle          155
     145: aload_3
     146: iconst_0
     147: iload         4
     149: invokevirtual #209                // Method java/lang/String.substring:(II)Ljava/lang/String;
     152: goto          157
     155: ldc           #210                // String
     157: astore        5
     159: aload_2
     160: ifnull        183
     163: new           #120                // class java/lang/StringBuilder
     166: dup
     167: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     170: aload_2
     171: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload         5
     176: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: areturn
     183: new           #120                // class java/lang/StringBuilder
     186: dup
     187: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     190: ldc           #211                // String !<
     192: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: aload         5
     197: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: ldc           #212                // String >
     202: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: areturn

  static java.lang.String prepareAnchor(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #157                // Method java/lang/String.length:()I
       4: ifne          17
       7: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      10: dup
      11: ldc           #213                // String anchor must not be empty
      13: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
      20: invokeinterface #204,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          96
      35: aload_1
      36: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #215                // class java/lang/Character
      44: astore_2
      45: aload_0
      46: aload_2
      47: invokevirtual #216                // Method java/lang/Character.charValue:()C
      50: invokevirtual #217                // Method java/lang/String.indexOf:(I)I
      53: iconst_m1
      54: if_icmple     93
      57: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
      60: dup
      61: new           #120                // class java/lang/StringBuilder
      64: dup
      65: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #218                // String Invalid character \'
      70: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_2
      74: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: ldc           #219                // String \' in the anchor:
      79: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: goto          26
      96: getstatic     #220                // Field SPACES_PATTERN:Ljava/util/regex/Pattern;
      99: aload_0
     100: invokevirtual #197                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     103: astore_1
     104: aload_1
     105: invokevirtual #221                // Method java/util/regex/Matcher.find:()Z
     108: ifeq          138
     111: new           #119                // class org/yaml/snakeyaml/emitter/EmitterException
     114: dup
     115: new           #120                // class java/lang/StringBuilder
     118: dup
     119: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #222                // String Anchor may not contain spaces:
     124: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #126                // Method org/yaml/snakeyaml/emitter/EmitterException."<init>":(Ljava/lang/String;)V
     137: athrow
     138: aload_0
     139: areturn

  private org.yaml.snakeyaml.emitter.ScalarAnalysis analyzeScalar(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #157                // Method java/lang/String.length:()I
       4: ifne          22
       7: new           #223                // class org/yaml/snakeyaml/emitter/ScalarAnalysis
      10: dup
      11: aload_1
      12: iconst_1
      13: iconst_0
      14: iconst_0
      15: iconst_1
      16: iconst_1
      17: iconst_0
      18: invokespecial #224                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis."<init>":(Ljava/lang/String;ZZZZZZ)V
      21: areturn
      22: iconst_0
      23: istore_2
      24: iconst_0
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iconst_0
      30: istore        5
      32: getstatic     #225                // Field LEADING_ZERO_PATTERN:Ljava/util/regex/Pattern;
      35: aload_1
      36: invokevirtual #197                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      39: invokevirtual #198                // Method java/util/regex/Matcher.matches:()Z
      42: istore        6
      44: iconst_0
      45: istore        7
      47: iconst_0
      48: istore        8
      50: iconst_0
      51: istore        9
      53: iconst_0
      54: istore        10
      56: iconst_0
      57: istore        11
      59: iconst_0
      60: istore        12
      62: aload_1
      63: ldc           #226                // String ---
      65: invokevirtual #206                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      68: ifne          80
      71: aload_1
      72: ldc           #227                // String ...
      74: invokevirtual #206                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      77: ifeq          84
      80: iconst_1
      81: istore_2
      82: iconst_1
      83: istore_3
      84: iconst_1
      85: istore        13
      87: aload_1
      88: invokevirtual #157                // Method java/lang/String.length:()I
      91: iconst_1
      92: if_icmpeq     109
      95: getstatic     #228                // Field org/yaml/snakeyaml/scanner/Constant.NULL_BL_T_LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      98: aload_1
      99: iconst_1
     100: invokevirtual #229                // Method java/lang/String.codePointAt:(I)I
     103: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     106: ifeq          113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: istore        14
     116: iconst_0
     117: istore        15
     119: iconst_0
     120: istore        16
     122: iconst_0
     123: istore        17
     125: iload         17
     127: aload_1
     128: invokevirtual #157                // Method java/lang/String.length:()I
     131: if_icmpge     551
     134: aload_1
     135: iload         17
     137: invokevirtual #229                // Method java/lang/String.codePointAt:(I)I
     140: istore        18
     142: iload         17
     144: ifne          204
     147: ldc           #231                // String #,[]{}&*!|>\'\"%@`
     149: iload         18
     151: invokevirtual #217                // Method java/lang/String.indexOf:(I)I
     154: iconst_m1
     155: if_icmpeq     162
     158: iconst_1
     159: istore_3
     160: iconst_1
     161: istore_2
     162: iload         18
     164: bipush        63
     166: if_icmpeq     176
     169: iload         18
     171: bipush        58
     173: if_icmpne     185
     176: iconst_1
     177: istore_3
     178: iload         14
     180: ifeq          185
     183: iconst_1
     184: istore_2
     185: iload         18
     187: bipush        45
     189: if_icmpne     249
     192: iload         14
     194: ifeq          249
     197: iconst_1
     198: istore_3
     199: iconst_1
     200: istore_2
     201: goto          249
     204: ldc           #232                // String ,?[]{}
     206: iload         18
     208: invokevirtual #217                // Method java/lang/String.indexOf:(I)I
     211: iconst_m1
     212: if_icmpeq     217
     215: iconst_1
     216: istore_3
     217: iload         18
     219: bipush        58
     221: if_icmpne     233
     224: iconst_1
     225: istore_3
     226: iload         14
     228: ifeq          233
     231: iconst_1
     232: istore_2
     233: iload         18
     235: bipush        35
     237: if_icmpne     249
     240: iload         13
     242: ifeq          249
     245: iconst_1
     246: istore_3
     247: iconst_1
     248: istore_2
     249: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     252: iload         18
     254: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     257: istore        19
     259: iload         19
     261: ifeq          267
     264: iconst_1
     265: istore        4
     267: iload         18
     269: bipush        10
     271: if_icmpeq     355
     274: bipush        32
     276: iload         18
     278: if_icmpgt     288
     281: iload         18
     283: bipush        126
     285: if_icmple     355
     288: iload         18
     290: sipush        133
     293: if_icmpeq     339
     296: iload         18
     298: sipush        160
     301: if_icmplt     311
     304: iload         18
     306: ldc           #234                // int 55295
     308: if_icmple     339
     311: iload         18
     313: ldc           #235                // int 57344
     315: if_icmplt     325
     318: iload         18
     320: ldc           #236                // int 65533
     322: if_icmple     339
     325: iload         18
     327: ldc           #237                // int 65536
     329: if_icmplt     352
     332: iload         18
     334: ldc           #238                // int 1114111
     336: if_icmpgt     352
     339: aload_0
     340: getfield      #53                 // Field allowUnicode:Z
     343: ifne          355
     346: iconst_1
     347: istore        5
     349: goto          355
     352: iconst_1
     353: istore        5
     355: iload         18
     357: bipush        32
     359: if_icmpne     401
     362: iload         17
     364: ifne          370
     367: iconst_1
     368: istore        7
     370: iload         17
     372: aload_1
     373: invokevirtual #157                // Method java/lang/String.length:()I
     376: iconst_1
     377: isub
     378: if_icmpne     384
     381: iconst_1
     382: istore        9
     384: iload         16
     386: ifeq          392
     389: iconst_1
     390: istore        11
     392: iconst_1
     393: istore        15
     395: iconst_0
     396: istore        16
     398: goto          451
     401: iload         19
     403: ifeq          445
     406: iload         17
     408: ifne          414
     411: iconst_1
     412: istore        8
     414: iload         17
     416: aload_1
     417: invokevirtual #157                // Method java/lang/String.length:()I
     420: iconst_1
     421: isub
     422: if_icmpne     428
     425: iconst_1
     426: istore        10
     428: iload         15
     430: ifeq          436
     433: iconst_1
     434: istore        12
     436: iconst_0
     437: istore        15
     439: iconst_1
     440: istore        16
     442: goto          451
     445: iconst_0
     446: istore        15
     448: iconst_0
     449: istore        16
     451: iload         17
     453: iload         18
     455: invokestatic  #239                // Method java/lang/Character.charCount:(I)I
     458: iadd
     459: istore        17
     461: getstatic     #240                // Field org/yaml/snakeyaml/scanner/Constant.NULL_BL_T:Lorg/yaml/snakeyaml/scanner/Constant;
     464: iload         18
     466: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     469: ifne          477
     472: iload         19
     474: ifeq          481
     477: iconst_1
     478: goto          482
     481: iconst_0
     482: istore        13
     484: iconst_1
     485: istore        14
     487: iload         17
     489: iconst_1
     490: iadd
     491: aload_1
     492: invokevirtual #157                // Method java/lang/String.length:()I
     495: if_icmpge     548
     498: iload         17
     500: aload_1
     501: iload         17
     503: invokevirtual #229                // Method java/lang/String.codePointAt:(I)I
     506: invokestatic  #239                // Method java/lang/Character.charCount:(I)I
     509: iadd
     510: istore        20
     512: iload         20
     514: aload_1
     515: invokevirtual #157                // Method java/lang/String.length:()I
     518: if_icmpge     548
     521: getstatic     #240                // Field org/yaml/snakeyaml/scanner/Constant.NULL_BL_T:Lorg/yaml/snakeyaml/scanner/Constant;
     524: aload_1
     525: iload         20
     527: invokevirtual #229                // Method java/lang/String.codePointAt:(I)I
     530: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     533: ifne          541
     536: iload         19
     538: ifeq          545
     541: iconst_1
     542: goto          546
     545: iconst_0
     546: istore        14
     548: goto          125
     551: iconst_1
     552: istore        18
     554: iconst_1
     555: istore        19
     557: iconst_1
     558: istore        20
     560: iconst_1
     561: istore        21
     563: iload         7
     565: ifne          588
     568: iload         8
     570: ifne          588
     573: iload         9
     575: ifne          588
     578: iload         10
     580: ifne          588
     583: iload         6
     585: ifeq          594
     588: iconst_0
     589: dup
     590: istore        19
     592: istore        18
     594: iload         9
     596: ifeq          602
     599: iconst_0
     600: istore        21
     602: iload         11
     604: ifeq          616
     607: iconst_0
     608: dup
     609: istore        20
     611: dup
     612: istore        19
     614: istore        18
     616: iload         12
     618: ifne          626
     621: iload         5
     623: ifeq          638
     626: iconst_0
     627: dup
     628: istore        21
     630: dup
     631: istore        20
     633: dup
     634: istore        19
     636: istore        18
     638: iload         4
     640: ifeq          646
     643: iconst_0
     644: istore        18
     646: iload_3
     647: ifeq          653
     650: iconst_0
     651: istore        18
     653: iload_2
     654: ifeq          660
     657: iconst_0
     658: istore        19
     660: new           #223                // class org/yaml/snakeyaml/emitter/ScalarAnalysis
     663: dup
     664: aload_1
     665: iconst_0
     666: iload         4
     668: iload         18
     670: iload         19
     672: iload         20
     674: iload         21
     676: invokespecial #224                // Method org/yaml/snakeyaml/emitter/ScalarAnalysis."<init>":(Ljava/lang/String;ZZZZZZ)V
     679: areturn

  void flushStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field stream:Ljava/io/Writer;
       4: invokevirtual #241                // Method java/io/Writer.flush:()V
       7: return

  void writeStreamStart();
    Code:
       0: return

  void writeStreamEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #242                // Method flushStream:()V
       4: return

  void writeIndicator(java.lang.String, boolean, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field whitespace:Z
       4: ifne          31
       7: iload_2
       8: ifeq          31
      11: aload_0
      12: dup
      13: getfield      #12                 // Field column:I
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field column:I
      21: aload_0
      22: getfield      #37                 // Field stream:Ljava/io/Writer;
      25: getstatic     #243                // Field SPACE:[C
      28: invokevirtual #244                // Method java/io/Writer.write:([C)V
      31: aload_0
      32: iload_3
      33: putfield      #47                 // Field whitespace:Z
      36: aload_0
      37: aload_0
      38: getfield      #48                 // Field indention:Z
      41: ifeq          53
      44: iload         4
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: putfield      #48                 // Field indention:Z
      57: aload_0
      58: dup
      59: getfield      #12                 // Field column:I
      62: aload_1
      63: invokevirtual #157                // Method java/lang/String.length:()I
      66: iadd
      67: putfield      #12                 // Field column:I
      70: aload_0
      71: iconst_0
      72: putfield      #29                 // Field openEnded:Z
      75: aload_0
      76: getfield      #37                 // Field stream:Ljava/io/Writer;
      79: aload_1
      80: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
      83: return

  void writeIndent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field indent:Ljava/lang/Integer;
       4: ifnull        18
       7: aload_0
       8: getfield      #17                 // Field indent:Ljava/lang/Integer;
      11: invokevirtual #101                // Method java/lang/Integer.intValue:()I
      14: istore_1
      15: goto          20
      18: iconst_0
      19: istore_1
      20: aload_0
      21: getfield      #48                 // Field indention:Z
      24: ifeq          50
      27: aload_0
      28: getfield      #12                 // Field column:I
      31: iload_1
      32: if_icmpgt     50
      35: aload_0
      36: getfield      #12                 // Field column:I
      39: iload_1
      40: if_icmpne     55
      43: aload_0
      44: getfield      #47                 // Field whitespace:Z
      47: ifne          55
      50: aload_0
      51: aconst_null
      52: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
      55: aload_0
      56: iload_1
      57: aload_0
      58: getfield      #12                 // Field column:I
      61: isub
      62: invokespecial #5                  // Method writeWhitespace:(I)V
      65: return

  private void writeWhitespace(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifgt          5
       4: return
       5: aload_0
       6: iconst_1
       7: putfield      #47                 // Field whitespace:Z
      10: iload_1
      11: newarray       char
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_2
      18: arraylength
      19: if_icmpge     33
      22: aload_2
      23: iload_3
      24: bipush        32
      26: castore
      27: iinc          3, 1
      30: goto          16
      33: aload_0
      34: dup
      35: getfield      #12                 // Field column:I
      38: iload_1
      39: iadd
      40: putfield      #12                 // Field column:I
      43: aload_0
      44: getfield      #37                 // Field stream:Ljava/io/Writer;
      47: aload_2
      48: invokevirtual #244                // Method java/io/Writer.write:([C)V
      51: return

  private void writeLineBreak(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #47                 // Field whitespace:Z
       5: aload_0
       6: iconst_1
       7: putfield      #48                 // Field indention:Z
      10: aload_0
      11: iconst_0
      12: putfield      #12                 // Field column:I
      15: aload_1
      16: ifnonnull     33
      19: aload_0
      20: getfield      #37                 // Field stream:Ljava/io/Writer;
      23: aload_0
      24: getfield      #63                 // Field bestLineBreak:[C
      27: invokevirtual #244                // Method java/io/Writer.write:([C)V
      30: goto          41
      33: aload_0
      34: getfield      #37                 // Field stream:Ljava/io/Writer;
      37: aload_1
      38: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
      41: return

  void writeVersionDirective(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field stream:Ljava/io/Writer;
       4: ldc           #247                // String %YAML
       6: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #37                 // Field stream:Ljava/io/Writer;
      13: aload_1
      14: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
      17: aload_0
      18: aconst_null
      19: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
      22: return

  void writeTagDirective(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field stream:Ljava/io/Writer;
       4: ldc           #248                // String %TAG
       6: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #37                 // Field stream:Ljava/io/Writer;
      13: aload_1
      14: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
      17: aload_0
      18: getfield      #37                 // Field stream:Ljava/io/Writer;
      21: getstatic     #243                // Field SPACE:[C
      24: invokevirtual #244                // Method java/io/Writer.write:([C)V
      27: aload_0
      28: getfield      #37                 // Field stream:Ljava/io/Writer;
      31: aload_2
      32: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
      35: aload_0
      36: aconst_null
      37: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
      40: return

  private void writeSingleQuoted(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #249                // String \'
       3: iconst_1
       4: iconst_0
       5: iconst_0
       6: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: aload_1
      23: invokevirtual #157                // Method java/lang/String.length:()I
      26: if_icmpgt     384
      29: iconst_0
      30: istore        7
      32: iload         6
      34: aload_1
      35: invokevirtual #157                // Method java/lang/String.length:()I
      38: if_icmpge     49
      41: aload_1
      42: iload         6
      44: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      47: istore        7
      49: iload_3
      50: ifeq          147
      53: iload         7
      55: ifeq          65
      58: iload         7
      60: bipush        32
      62: if_icmpeq     318
      65: iload         5
      67: iconst_1
      68: iadd
      69: iload         6
      71: if_icmpne     110
      74: aload_0
      75: getfield      #12                 // Field column:I
      78: aload_0
      79: getfield      #11                 // Field bestWidth:I
      82: if_icmple     110
      85: iload_2
      86: ifeq          110
      89: iload         5
      91: ifeq          110
      94: iload         6
      96: aload_1
      97: invokevirtual #157                // Method java/lang/String.length:()I
     100: if_icmpeq     110
     103: aload_0
     104: invokevirtual #135                // Method writeIndent:()V
     107: goto          140
     110: iload         6
     112: iload         5
     114: isub
     115: istore        8
     117: aload_0
     118: dup
     119: getfield      #12                 // Field column:I
     122: iload         8
     124: iadd
     125: putfield      #12                 // Field column:I
     128: aload_0
     129: getfield      #37                 // Field stream:Ljava/io/Writer;
     132: aload_1
     133: iload         5
     135: iload         8
     137: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     140: iload         6
     142: istore        5
     144: goto          318
     147: iload         4
     149: ifeq          264
     152: iload         7
     154: ifeq          168
     157: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     160: iload         7
     162: invokevirtual #251                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     165: ifeq          318
     168: aload_1
     169: iload         5
     171: invokevirtual #193                // Method java/lang/String.charAt:(I)C
     174: bipush        10
     176: if_icmpne     184
     179: aload_0
     180: aconst_null
     181: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     184: aload_1
     185: iload         5
     187: iload         6
     189: invokevirtual #209                // Method java/lang/String.substring:(II)Ljava/lang/String;
     192: astore        8
     194: aload         8
     196: invokevirtual #62                 // Method java/lang/String.toCharArray:()[C
     199: astore        9
     201: aload         9
     203: arraylength
     204: istore        10
     206: iconst_0
     207: istore        11
     209: iload         11
     211: iload         10
     213: if_icmpge     253
     216: aload         9
     218: iload         11
     220: caload
     221: istore        12
     223: iload         12
     225: bipush        10
     227: if_icmpne     238
     230: aload_0
     231: aconst_null
     232: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     235: goto          247
     238: aload_0
     239: iload         12
     241: invokestatic  #252                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     244: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     247: iinc          11, 1
     250: goto          209
     253: aload_0
     254: invokevirtual #135                // Method writeIndent:()V
     257: iload         6
     259: istore        5
     261: goto          318
     264: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     267: iload         7
     269: ldc           #253                // String \u0000 \'
     271: invokevirtual #254                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
     274: ifeq          318
     277: iload         5
     279: iload         6
     281: if_icmpge     318
     284: iload         6
     286: iload         5
     288: isub
     289: istore        8
     291: aload_0
     292: dup
     293: getfield      #12                 // Field column:I
     296: iload         8
     298: iadd
     299: putfield      #12                 // Field column:I
     302: aload_0
     303: getfield      #37                 // Field stream:Ljava/io/Writer;
     306: aload_1
     307: iload         5
     309: iload         8
     311: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     314: iload         6
     316: istore        5
     318: iload         7
     320: bipush        39
     322: if_icmpne     350
     325: aload_0
     326: dup
     327: getfield      #12                 // Field column:I
     330: iconst_2
     331: iadd
     332: putfield      #12                 // Field column:I
     335: aload_0
     336: getfield      #37                 // Field stream:Ljava/io/Writer;
     339: ldc           #255                // String \'\'
     341: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
     344: iload         6
     346: iconst_1
     347: iadd
     348: istore        5
     350: iload         7
     352: ifeq          378
     355: iload         7
     357: bipush        32
     359: if_icmpne     366
     362: iconst_1
     363: goto          367
     366: iconst_0
     367: istore_3
     368: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     371: iload         7
     373: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     376: istore        4
     378: iinc          6, 1
     381: goto          20
     384: aload_0
     385: ldc           #249                // String \'
     387: iconst_0
     388: iconst_0
     389: iconst_0
     390: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
     393: return

  private void writeDoubleQuoted(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #256                // String \"
       4: iconst_1
       5: iconst_0
       6: iconst_0
       7: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      10: iconst_0
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: aload_1
      18: invokevirtual #157                // Method java/lang/String.length:()I
      21: if_icmpgt     704
      24: aconst_null
      25: astore        5
      27: iload         4
      29: aload_1
      30: invokevirtual #157                // Method java/lang/String.length:()I
      33: if_icmpge     47
      36: aload_1
      37: iload         4
      39: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      42: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      45: astore        5
      47: aload         5
      49: ifnull        87
      52: ldc_w         #258                // String \"\\\u0085  ﻿
      55: aload         5
      57: invokevirtual #216                // Method java/lang/Character.charValue:()C
      60: invokevirtual #217                // Method java/lang/String.indexOf:(I)I
      63: iconst_m1
      64: if_icmpne     87
      67: bipush        32
      69: aload         5
      71: invokevirtual #216                // Method java/lang/Character.charValue:()C
      74: if_icmpgt     87
      77: aload         5
      79: invokevirtual #216                // Method java/lang/Character.charValue:()C
      82: bipush        126
      84: if_icmple     519
      87: iload_3
      88: iload         4
      90: if_icmpge     124
      93: iload         4
      95: iload_3
      96: isub
      97: istore        6
      99: aload_0
     100: dup
     101: getfield      #12                 // Field column:I
     104: iload         6
     106: iadd
     107: putfield      #12                 // Field column:I
     110: aload_0
     111: getfield      #37                 // Field stream:Ljava/io/Writer;
     114: aload_1
     115: iload_3
     116: iload         6
     118: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     121: iload         4
     123: istore_3
     124: aload         5
     126: ifnull        519
     129: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     132: aload         5
     134: invokeinterface #260,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     139: ifeq          179
     142: new           #120                // class java/lang/StringBuilder
     145: dup
     146: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     149: ldc_w         #261                // String \\
     152: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     158: aload         5
     160: invokeinterface #208,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     165: checkcast     #205                // class java/lang/String
     168: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: astore        6
     176: goto          491
     179: aload         5
     181: invokevirtual #216                // Method java/lang/Character.charValue:()C
     184: invokestatic  #262                // Method java/lang/Character.isHighSurrogate:(C)Z
     187: ifeq          226
     190: iload         4
     192: iconst_1
     193: iadd
     194: aload_1
     195: invokevirtual #157                // Method java/lang/String.length:()I
     198: if_icmpge     226
     201: aload_1
     202: iload         4
     204: iconst_1
     205: iadd
     206: invokevirtual #193                // Method java/lang/String.charAt:(I)C
     209: istore        8
     211: aload         5
     213: invokevirtual #216                // Method java/lang/Character.charValue:()C
     216: iload         8
     218: invokestatic  #263                // Method java/lang/Character.toCodePoint:(CC)I
     221: istore        7
     223: goto          233
     226: aload         5
     228: invokevirtual #216                // Method java/lang/Character.charValue:()C
     231: istore        7
     233: aload_0
     234: getfield      #53                 // Field allowUnicode:Z
     237: ifeq          273
     240: iload         7
     242: invokestatic  #264                // Method org/yaml/snakeyaml/reader/StreamReader.isPrintable:(I)Z
     245: ifeq          273
     248: iload         7
     250: invokestatic  #265                // Method java/lang/Character.toChars:(I)[C
     253: invokestatic  #266                // Method java/lang/String.valueOf:([C)Ljava/lang/String;
     256: astore        6
     258: iload         7
     260: invokestatic  #239                // Method java/lang/Character.charCount:(I)I
     263: iconst_2
     264: if_icmpne     491
     267: iinc          4, 1
     270: goto          491
     273: aload         5
     275: invokevirtual #216                // Method java/lang/Character.charValue:()C
     278: sipush        255
     281: if_icmpgt     351
     284: new           #120                // class java/lang/StringBuilder
     287: dup
     288: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     291: ldc_w         #267                // String 0
     294: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: aload         5
     299: invokevirtual #216                // Method java/lang/Character.charValue:()C
     302: bipush        16
     304: invokestatic  #268                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     307: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     310: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     313: astore        8
     315: new           #120                // class java/lang/StringBuilder
     318: dup
     319: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     322: ldc_w         #269                // String \\x
     325: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: aload         8
     330: aload         8
     332: invokevirtual #157                // Method java/lang/String.length:()I
     335: iconst_2
     336: isub
     337: invokevirtual #207                // Method java/lang/String.substring:(I)Ljava/lang/String;
     340: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     343: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     346: astore        6
     348: goto          491
     351: iload         7
     353: invokestatic  #239                // Method java/lang/Character.charCount:(I)I
     356: iconst_2
     357: if_icmpne     427
     360: iinc          4, 1
     363: new           #120                // class java/lang/StringBuilder
     366: dup
     367: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     370: ldc_w         #270                // String 000
     373: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     376: iload         7
     378: i2l
     379: invokestatic  #271                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     382: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     385: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     388: astore        8
     390: new           #120                // class java/lang/StringBuilder
     393: dup
     394: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     397: ldc_w         #272                // String \\U
     400: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     403: aload         8
     405: aload         8
     407: invokevirtual #157                // Method java/lang/String.length:()I
     410: bipush        8
     412: isub
     413: invokevirtual #207                // Method java/lang/String.substring:(I)Ljava/lang/String;
     416: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     419: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     422: astore        6
     424: goto          491
     427: new           #120                // class java/lang/StringBuilder
     430: dup
     431: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     434: ldc_w         #270                // String 000
     437: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     440: aload         5
     442: invokevirtual #216                // Method java/lang/Character.charValue:()C
     445: bipush        16
     447: invokestatic  #268                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     450: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     453: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     456: astore        8
     458: new           #120                // class java/lang/StringBuilder
     461: dup
     462: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     465: ldc_w         #273                // String \\u
     468: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     471: aload         8
     473: aload         8
     475: invokevirtual #157                // Method java/lang/String.length:()I
     478: iconst_4
     479: isub
     480: invokevirtual #207                // Method java/lang/String.substring:(I)Ljava/lang/String;
     483: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     486: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     489: astore        6
     491: aload_0
     492: dup
     493: getfield      #12                 // Field column:I
     496: aload         6
     498: invokevirtual #157                // Method java/lang/String.length:()I
     501: iadd
     502: putfield      #12                 // Field column:I
     505: aload_0
     506: getfield      #37                 // Field stream:Ljava/io/Writer;
     509: aload         6
     511: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
     514: iload         4
     516: iconst_1
     517: iadd
     518: istore_3
     519: iconst_0
     520: iload         4
     522: if_icmpge     698
     525: iload         4
     527: aload_1
     528: invokevirtual #157                // Method java/lang/String.length:()I
     531: iconst_1
     532: isub
     533: if_icmpge     698
     536: aload         5
     538: invokevirtual #216                // Method java/lang/Character.charValue:()C
     541: bipush        32
     543: if_icmpeq     552
     546: iload_3
     547: iload         4
     549: if_icmplt     698
     552: aload_0
     553: getfield      #12                 // Field column:I
     556: iload         4
     558: iload_3
     559: isub
     560: iadd
     561: aload_0
     562: getfield      #11                 // Field bestWidth:I
     565: if_icmple     698
     568: iload_2
     569: ifeq          698
     572: iload_3
     573: iload         4
     575: if_icmplt     586
     578: ldc_w         #261                // String \\
     581: astore        6
     583: goto          614
     586: new           #120                // class java/lang/StringBuilder
     589: dup
     590: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
     593: aload_1
     594: iload_3
     595: iload         4
     597: invokevirtual #209                // Method java/lang/String.substring:(II)Ljava/lang/String;
     600: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     603: ldc_w         #261                // String \\
     606: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     609: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     612: astore        6
     614: iload_3
     615: iload         4
     617: if_icmpge     623
     620: iload         4
     622: istore_3
     623: aload_0
     624: dup
     625: getfield      #12                 // Field column:I
     628: aload         6
     630: invokevirtual #157                // Method java/lang/String.length:()I
     633: iadd
     634: putfield      #12                 // Field column:I
     637: aload_0
     638: getfield      #37                 // Field stream:Ljava/io/Writer;
     641: aload         6
     643: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
     646: aload_0
     647: invokevirtual #135                // Method writeIndent:()V
     650: aload_0
     651: iconst_0
     652: putfield      #47                 // Field whitespace:Z
     655: aload_0
     656: iconst_0
     657: putfield      #48                 // Field indention:Z
     660: aload_1
     661: iload_3
     662: invokevirtual #193                // Method java/lang/String.charAt:(I)C
     665: bipush        32
     667: if_icmpne     698
     670: ldc_w         #261                // String \\
     673: astore        6
     675: aload_0
     676: dup
     677: getfield      #12                 // Field column:I
     680: aload         6
     682: invokevirtual #157                // Method java/lang/String.length:()I
     685: iadd
     686: putfield      #12                 // Field column:I
     689: aload_0
     690: getfield      #37                 // Field stream:Ljava/io/Writer;
     693: aload         6
     695: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
     698: iinc          4, 1
     701: goto          15
     704: aload_0
     705: ldc_w         #256                // String \"
     708: iconst_0
     709: iconst_0
     710: iconst_0
     711: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
     714: return

  private boolean writeCommentLines(java.util.List<org.yaml.snakeyaml.comments.CommentLine>) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #68                 // Field emitComments:Z
       6: ifeq          158
       9: iconst_0
      10: istore_3
      11: iconst_1
      12: istore        4
      14: aload_1
      15: invokeinterface #274,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        5
      22: aload         5
      24: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          158
      32: aload         5
      34: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #275                // class org/yaml/snakeyaml/comments/CommentLine
      42: astore        6
      44: aload         6
      46: invokevirtual #276                // Method org/yaml/snakeyaml/comments/CommentLine.getCommentType:()Lorg/yaml/snakeyaml/comments/CommentType;
      49: getstatic     #76                 // Field org/yaml/snakeyaml/comments/CommentType.BLANK_LINE:Lorg/yaml/snakeyaml/comments/CommentType;
      52: if_acmpeq     144
      55: iload         4
      57: ifeq          109
      60: iconst_0
      61: istore        4
      63: aload_0
      64: ldc_w         #277                // String #
      67: aload         6
      69: invokevirtual #276                // Method org/yaml/snakeyaml/comments/CommentLine.getCommentType:()Lorg/yaml/snakeyaml/comments/CommentType;
      72: getstatic     #79                 // Field org/yaml/snakeyaml/comments/CommentType.IN_LINE:Lorg/yaml/snakeyaml/comments/CommentType;
      75: if_acmpne     82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: iconst_0
      84: iconst_0
      85: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      88: aload_0
      89: getfield      #12                 // Field column:I
      92: ifle          104
      95: aload_0
      96: getfield      #12                 // Field column:I
      99: iconst_1
     100: isub
     101: goto          105
     104: iconst_0
     105: istore_3
     106: goto          124
     109: aload_0
     110: iload_3
     111: invokespecial #5                  // Method writeWhitespace:(I)V
     114: aload_0
     115: ldc_w         #277                // String #
     118: iconst_0
     119: iconst_0
     120: iconst_0
     121: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
     124: aload_0
     125: getfield      #37                 // Field stream:Ljava/io/Writer;
     128: aload         6
     130: invokevirtual #278                // Method org/yaml/snakeyaml/comments/CommentLine.getValue:()Ljava/lang/String;
     133: invokevirtual #245                // Method java/io/Writer.write:(Ljava/lang/String;)V
     136: aload_0
     137: aconst_null
     138: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     141: goto          153
     144: aload_0
     145: aconst_null
     146: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     149: aload_0
     150: invokevirtual #135                // Method writeIndent:()V
     153: iconst_1
     154: istore_2
     155: goto          22
     158: iload_2
     159: ireturn

  private void writeBlockComment() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field blockCommentsCollector:Lorg/yaml/snakeyaml/comments/CommentEventsCollector;
       4: invokevirtual #279                // Method org/yaml/snakeyaml/comments/CommentEventsCollector.isEmpty:()Z
       7: ifne          26
      10: aload_0
      11: invokevirtual #135                // Method writeIndent:()V
      14: aload_0
      15: aload_0
      16: getfield      #21                 // Field blockCommentsCollector:Lorg/yaml/snakeyaml/comments/CommentEventsCollector;
      19: invokevirtual #280                // Method org/yaml/snakeyaml/comments/CommentEventsCollector.consume:()Ljava/util/List;
      22: invokespecial #281                // Method writeCommentLines:(Ljava/util/List;)Z
      25: pop
      26: return

  private boolean writeInlineComments() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #14                 // Field inlineCommentsCollector:Lorg/yaml/snakeyaml/comments/CommentEventsCollector;
       5: invokevirtual #280                // Method org/yaml/snakeyaml/comments/CommentEventsCollector.consume:()Ljava/util/List;
       8: invokespecial #281                // Method writeCommentLines:(Ljava/util/List;)Z
      11: ireturn

  private java.lang.String determineBlockHints(java.lang.String);
    Code:
       0: new           #120                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      11: aload_1
      12: iconst_0
      13: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      16: ldc_w         #282                // String
      19: invokevirtual #254                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
      22: ifeq          34
      25: aload_2
      26: aload_0
      27: getfield      #54                 // Field bestIndent:I
      30: invokevirtual #283                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: aload_1
      36: invokevirtual #157                // Method java/lang/String.length:()I
      39: iconst_1
      40: isub
      41: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      44: istore_3
      45: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      48: iload_3
      49: invokevirtual #251                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
      52: ifeq          66
      55: aload_2
      56: ldc_w         #284                // String -
      59: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: goto          101
      66: aload_1
      67: invokevirtual #157                // Method java/lang/String.length:()I
      70: iconst_1
      71: if_icmpeq     93
      74: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      77: aload_1
      78: aload_1
      79: invokevirtual #157                // Method java/lang/String.length:()I
      82: iconst_2
      83: isub
      84: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      87: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
      90: ifeq          101
      93: aload_2
      94: ldc_w         #285                // String +
      97: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: pop
     101: aload_2
     102: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: areturn

  void writeFolded(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #286                // Method determineBlockHints:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_0
       7: new           #120                // class java/lang/StringBuilder
      10: dup
      11: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #212                // String >
      16: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_3
      20: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: iconst_1
      27: iconst_0
      28: iconst_0
      29: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      32: aload_3
      33: invokevirtual #157                // Method java/lang/String.length:()I
      36: ifle          59
      39: aload_3
      40: aload_3
      41: invokevirtual #157                // Method java/lang/String.length:()I
      44: iconst_1
      45: isub
      46: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      49: bipush        43
      51: if_icmpne     59
      54: aload_0
      55: iconst_1
      56: putfield      #29                 // Field openEnded:Z
      59: aload_0
      60: invokespecial #13                 // Method writeInlineComments:()Z
      63: ifne          71
      66: aload_0
      67: aconst_null
      68: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
      71: iconst_1
      72: istore        4
      74: iconst_0
      75: istore        5
      77: iconst_1
      78: istore        6
      80: iconst_0
      81: istore        7
      83: iconst_0
      84: istore        8
      86: iload         8
      88: aload_1
      89: invokevirtual #157                // Method java/lang/String.length:()I
      92: if_icmpgt     441
      95: iconst_0
      96: istore        9
      98: iload         8
     100: aload_1
     101: invokevirtual #157                // Method java/lang/String.length:()I
     104: if_icmpge     115
     107: aload_1
     108: iload         8
     110: invokevirtual #193                // Method java/lang/String.charAt:(I)C
     113: istore        9
     115: iload         6
     117: ifeq          268
     120: iload         9
     122: ifeq          136
     125: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     128: iload         9
     130: invokevirtual #251                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     133: ifeq          406
     136: iload         4
     138: ifne          169
     141: iload         9
     143: ifeq          169
     146: iload         9
     148: bipush        32
     150: if_icmpeq     169
     153: aload_1
     154: iload         7
     156: invokevirtual #193                // Method java/lang/String.charAt:(I)C
     159: bipush        10
     161: if_icmpne     169
     164: aload_0
     165: aconst_null
     166: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     169: iload         9
     171: bipush        32
     173: if_icmpne     180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: istore        4
     183: aload_1
     184: iload         7
     186: iload         8
     188: invokevirtual #209                // Method java/lang/String.substring:(II)Ljava/lang/String;
     191: astore        10
     193: aload         10
     195: invokevirtual #62                 // Method java/lang/String.toCharArray:()[C
     198: astore        11
     200: aload         11
     202: arraylength
     203: istore        12
     205: iconst_0
     206: istore        13
     208: iload         13
     210: iload         12
     212: if_icmpge     252
     215: aload         11
     217: iload         13
     219: caload
     220: istore        14
     222: iload         14
     224: bipush        10
     226: if_icmpne     237
     229: aload_0
     230: aconst_null
     231: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     234: goto          246
     237: aload_0
     238: iload         14
     240: invokestatic  #252                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     243: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     246: iinc          13, 1
     249: goto          208
     252: iload         9
     254: ifeq          261
     257: aload_0
     258: invokevirtual #135                // Method writeIndent:()V
     261: iload         8
     263: istore        7
     265: goto          406
     268: iload         5
     270: ifeq          348
     273: iload         9
     275: bipush        32
     277: if_icmpeq     406
     280: iload         7
     282: iconst_1
     283: iadd
     284: iload         8
     286: if_icmpne     311
     289: aload_0
     290: getfield      #12                 // Field column:I
     293: aload_0
     294: getfield      #11                 // Field bestWidth:I
     297: if_icmple     311
     300: iload_2
     301: ifeq          311
     304: aload_0
     305: invokevirtual #135                // Method writeIndent:()V
     308: goto          341
     311: iload         8
     313: iload         7
     315: isub
     316: istore        10
     318: aload_0
     319: dup
     320: getfield      #12                 // Field column:I
     323: iload         10
     325: iadd
     326: putfield      #12                 // Field column:I
     329: aload_0
     330: getfield      #37                 // Field stream:Ljava/io/Writer;
     333: aload_1
     334: iload         7
     336: iload         10
     338: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     341: iload         8
     343: istore        7
     345: goto          406
     348: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     351: iload         9
     353: ldc_w         #287                // String \u0000
     356: invokevirtual #254                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
     359: ifeq          406
     362: iload         8
     364: iload         7
     366: isub
     367: istore        10
     369: aload_0
     370: dup
     371: getfield      #12                 // Field column:I
     374: iload         10
     376: iadd
     377: putfield      #12                 // Field column:I
     380: aload_0
     381: getfield      #37                 // Field stream:Ljava/io/Writer;
     384: aload_1
     385: iload         7
     387: iload         10
     389: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     392: iload         9
     394: ifne          402
     397: aload_0
     398: aconst_null
     399: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     402: iload         8
     404: istore        7
     406: iload         9
     408: ifeq          435
     411: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     414: iload         9
     416: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     419: istore        6
     421: iload         9
     423: bipush        32
     425: if_icmpne     432
     428: iconst_1
     429: goto          433
     432: iconst_0
     433: istore        5
     435: iinc          8, 1
     438: goto          86
     441: return

  void writeLiteral(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #286                // Method determineBlockHints:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: new           #120                // class java/lang/StringBuilder
      10: dup
      11: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      14: ldc_w         #288                // String |
      17: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_2
      21: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: iconst_1
      28: iconst_0
      29: iconst_0
      30: invokevirtual #134                // Method writeIndicator:(Ljava/lang/String;ZZZ)V
      33: aload_2
      34: invokevirtual #157                // Method java/lang/String.length:()I
      37: ifle          60
      40: aload_2
      41: aload_2
      42: invokevirtual #157                // Method java/lang/String.length:()I
      45: iconst_1
      46: isub
      47: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      50: bipush        43
      52: if_icmpne     60
      55: aload_0
      56: iconst_1
      57: putfield      #29                 // Field openEnded:Z
      60: aload_0
      61: invokespecial #13                 // Method writeInlineComments:()Z
      64: ifne          72
      67: aload_0
      68: aconst_null
      69: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
      72: iconst_1
      73: istore_3
      74: iconst_0
      75: istore        4
      77: iconst_0
      78: istore        5
      80: iload         5
      82: aload_1
      83: invokevirtual #157                // Method java/lang/String.length:()I
      86: if_icmpgt     279
      89: iconst_0
      90: istore        6
      92: iload         5
      94: aload_1
      95: invokevirtual #157                // Method java/lang/String.length:()I
      98: if_icmpge     109
     101: aload_1
     102: iload         5
     104: invokevirtual #193                // Method java/lang/String.charAt:(I)C
     107: istore        6
     109: iload_3
     110: ifeq          214
     113: iload         6
     115: ifeq          129
     118: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     121: iload         6
     123: invokevirtual #251                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     126: ifeq          259
     129: aload_1
     130: iload         4
     132: iload         5
     134: invokevirtual #209                // Method java/lang/String.substring:(II)Ljava/lang/String;
     137: astore        7
     139: aload         7
     141: invokevirtual #62                 // Method java/lang/String.toCharArray:()[C
     144: astore        8
     146: aload         8
     148: arraylength
     149: istore        9
     151: iconst_0
     152: istore        10
     154: iload         10
     156: iload         9
     158: if_icmpge     198
     161: aload         8
     163: iload         10
     165: caload
     166: istore        11
     168: iload         11
     170: bipush        10
     172: if_icmpne     183
     175: aload_0
     176: aconst_null
     177: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     180: goto          192
     183: aload_0
     184: iload         11
     186: invokestatic  #252                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     189: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     192: iinc          10, 1
     195: goto          154
     198: iload         6
     200: ifeq          207
     203: aload_0
     204: invokevirtual #135                // Method writeIndent:()V
     207: iload         5
     209: istore        4
     211: goto          259
     214: iload         6
     216: ifeq          230
     219: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     222: iload         6
     224: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     227: ifeq          259
     230: aload_0
     231: getfield      #37                 // Field stream:Ljava/io/Writer;
     234: aload_1
     235: iload         4
     237: iload         5
     239: iload         4
     241: isub
     242: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     245: iload         6
     247: ifne          255
     250: aload_0
     251: aconst_null
     252: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     255: iload         5
     257: istore        4
     259: iload         6
     261: ifeq          273
     264: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     267: iload         6
     269: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     272: istore_3
     273: iinc          5, 1
     276: goto          80
     279: return

  void writePlain(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #102                // Field rootContext:Z
       4: ifeq          12
       7: aload_0
       8: iconst_1
       9: putfield      #29                 // Field openEnded:Z
      12: aload_1
      13: invokevirtual #157                // Method java/lang/String.length:()I
      16: ifne          20
      19: return
      20: aload_0
      21: getfield      #47                 // Field whitespace:Z
      24: ifne          47
      27: aload_0
      28: dup
      29: getfield      #12                 // Field column:I
      32: iconst_1
      33: iadd
      34: putfield      #12                 // Field column:I
      37: aload_0
      38: getfield      #37                 // Field stream:Ljava/io/Writer;
      41: getstatic     #243                // Field SPACE:[C
      44: invokevirtual #244                // Method java/io/Writer.write:([C)V
      47: aload_0
      48: iconst_0
      49: putfield      #47                 // Field whitespace:Z
      52: aload_0
      53: iconst_0
      54: putfield      #48                 // Field indention:Z
      57: iconst_0
      58: istore_3
      59: iconst_0
      60: istore        4
      62: iconst_0
      63: istore        5
      65: iconst_0
      66: istore        6
      68: iload         6
      70: aload_1
      71: invokevirtual #157                // Method java/lang/String.length:()I
      74: if_icmpgt     390
      77: iconst_0
      78: istore        7
      80: iload         6
      82: aload_1
      83: invokevirtual #157                // Method java/lang/String.length:()I
      86: if_icmpge     97
      89: aload_1
      90: iload         6
      92: invokevirtual #193                // Method java/lang/String.charAt:(I)C
      95: istore        7
      97: iload_3
      98: ifeq          186
     101: iload         7
     103: bipush        32
     105: if_icmpeq     356
     108: iload         5
     110: iconst_1
     111: iadd
     112: iload         6
     114: if_icmpne     149
     117: aload_0
     118: getfield      #12                 // Field column:I
     121: aload_0
     122: getfield      #11                 // Field bestWidth:I
     125: if_icmple     149
     128: iload_2
     129: ifeq          149
     132: aload_0
     133: invokevirtual #135                // Method writeIndent:()V
     136: aload_0
     137: iconst_0
     138: putfield      #47                 // Field whitespace:Z
     141: aload_0
     142: iconst_0
     143: putfield      #48                 // Field indention:Z
     146: goto          179
     149: iload         6
     151: iload         5
     153: isub
     154: istore        8
     156: aload_0
     157: dup
     158: getfield      #12                 // Field column:I
     161: iload         8
     163: iadd
     164: putfield      #12                 // Field column:I
     167: aload_0
     168: getfield      #37                 // Field stream:Ljava/io/Writer;
     171: aload_1
     172: iload         5
     174: iload         8
     176: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     179: iload         6
     181: istore        5
     183: goto          356
     186: iload         4
     188: ifeq          308
     191: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     194: iload         7
     196: invokevirtual #251                // Method org/yaml/snakeyaml/scanner/Constant.hasNo:(I)Z
     199: ifeq          356
     202: aload_1
     203: iload         5
     205: invokevirtual #193                // Method java/lang/String.charAt:(I)C
     208: bipush        10
     210: if_icmpne     218
     213: aload_0
     214: aconst_null
     215: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     218: aload_1
     219: iload         5
     221: iload         6
     223: invokevirtual #209                // Method java/lang/String.substring:(II)Ljava/lang/String;
     226: astore        8
     228: aload         8
     230: invokevirtual #62                 // Method java/lang/String.toCharArray:()[C
     233: astore        9
     235: aload         9
     237: arraylength
     238: istore        10
     240: iconst_0
     241: istore        11
     243: iload         11
     245: iload         10
     247: if_icmpge     287
     250: aload         9
     252: iload         11
     254: caload
     255: istore        12
     257: iload         12
     259: bipush        10
     261: if_icmpne     272
     264: aload_0
     265: aconst_null
     266: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     269: goto          281
     272: aload_0
     273: iload         12
     275: invokestatic  #252                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     278: invokespecial #246                // Method writeLineBreak:(Ljava/lang/String;)V
     281: iinc          11, 1
     284: goto          243
     287: aload_0
     288: invokevirtual #135                // Method writeIndent:()V
     291: aload_0
     292: iconst_0
     293: putfield      #47                 // Field whitespace:Z
     296: aload_0
     297: iconst_0
     298: putfield      #48                 // Field indention:Z
     301: iload         6
     303: istore        5
     305: goto          356
     308: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     311: iload         7
     313: ldc_w         #287                // String \u0000
     316: invokevirtual #254                // Method org/yaml/snakeyaml/scanner/Constant.has:(ILjava/lang/String;)Z
     319: ifeq          356
     322: iload         6
     324: iload         5
     326: isub
     327: istore        8
     329: aload_0
     330: dup
     331: getfield      #12                 // Field column:I
     334: iload         8
     336: iadd
     337: putfield      #12                 // Field column:I
     340: aload_0
     341: getfield      #37                 // Field stream:Ljava/io/Writer;
     344: aload_1
     345: iload         5
     347: iload         8
     349: invokevirtual #250                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     352: iload         6
     354: istore        5
     356: iload         7
     358: ifeq          384
     361: iload         7
     363: bipush        32
     365: if_icmpne     372
     368: iconst_1
     369: goto          373
     372: iconst_0
     373: istore_3
     374: getstatic     #233                // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
     377: iload         7
     379: invokevirtual #230                // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
     382: istore        4
     384: iinc          6, 1
     387: goto          68
     390: return

  static org.yaml.snakeyaml.events.Event access$100(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       4: areturn

  static org.yaml.snakeyaml.emitter.EmitterState access$202(org.yaml.snakeyaml.emitter.Emitter, org.yaml.snakeyaml.emitter.EmitterState);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #30                 // Field state:Lorg/yaml/snakeyaml/emitter/EmitterState;
       6: areturn

  static boolean access$400(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #29                 // Field openEnded:Z
       4: ireturn

  static java.lang.String access$500(org.yaml.snakeyaml.emitter.Emitter, org.yaml.snakeyaml.DumperOptions$Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method prepareVersion:(Lorg/yaml/snakeyaml/DumperOptions$Version;)Ljava/lang/String;
       5: areturn

  static java.util.Map access$602(org.yaml.snakeyaml.emitter.Emitter, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #27                 // Field tagPrefixes:Ljava/util/Map;
       6: areturn

  static java.util.Map access$700();
    Code:
       0: getstatic     #26                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
       3: areturn

  static java.util.Map access$600(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #27                 // Field tagPrefixes:Ljava/util/Map;
       4: areturn

  static java.lang.String access$800(org.yaml.snakeyaml.emitter.Emitter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method prepareTagHandle:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.lang.String access$900(org.yaml.snakeyaml.emitter.Emitter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method prepareTagPrefix:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.lang.Boolean access$1000(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #23                 // Field canonical:Ljava/lang/Boolean;
       4: areturn

  static boolean access$1100(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method checkEmptyDocument:()Z
       4: ireturn

  static org.yaml.snakeyaml.comments.CommentEventsCollector access$1400(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #21                 // Field blockCommentsCollector:Lorg/yaml/snakeyaml/comments/CommentEventsCollector;
       4: areturn

  static void access$1500(org.yaml.snakeyaml.emitter.Emitter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method writeBlockComment:()V
       4: return

  static org.yaml.snakeyaml.events.Event access$102(org.yaml.snakeyaml.emitter.Emitter, org.yaml.snakeyaml.events.Event);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #31                 // Field event:Lorg/yaml/snakeyaml/events/Event;
       6: areturn

  static org.yaml.snakeyaml.util.ArrayStack access$1700(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #19                 // Field states:Lorg/yaml/snakeyaml/util/ArrayStack;
       4: areturn

  static void access$1800(org.yaml.snakeyaml.emitter.Emitter, boolean, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #18                 // Method expectNode:(ZZZ)V
       7: return

  static java.lang.Integer access$2002(org.yaml.snakeyaml.emitter.Emitter, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #17                 // Field indent:Ljava/lang/Integer;
       6: areturn

  static org.yaml.snakeyaml.util.ArrayStack access$2100(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #16                 // Field indents:Lorg/yaml/snakeyaml/util/ArrayStack;
       4: areturn

  static int access$2210(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: dup
       2: getfield      #15                 // Field flowLevel:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #15                 // Field flowLevel:I
      11: ireturn

  static org.yaml.snakeyaml.comments.CommentEventsCollector access$2300(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #14                 // Field inlineCommentsCollector:Lorg/yaml/snakeyaml/comments/CommentEventsCollector;
       4: areturn

  static boolean access$2400(org.yaml.snakeyaml.emitter.Emitter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method writeInlineComments:()Z
       4: ireturn

  static int access$2500(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #12                 // Field column:I
       4: ireturn

  static int access$2600(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #11                 // Field bestWidth:I
       4: ireturn

  static boolean access$2700(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #10                 // Field splitLines:Z
       4: ireturn

  static java.lang.Boolean access$2800(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #9                  // Field prettyFlow:Ljava/lang/Boolean;
       4: areturn

  static boolean access$3100(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkSimpleKey:()Z
       4: ireturn

  static boolean access$3600(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #7                  // Field indentWithIndicator:Z
       4: ireturn

  static int access$3700(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field indicatorIndent:I
       4: ireturn

  static void access$3800(org.yaml.snakeyaml.emitter.Emitter, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #5                  // Method writeWhitespace:(I)V
       5: return

  static java.lang.Integer access$2000(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #17                 // Field indent:Ljava/lang/Integer;
       4: areturn

  static void access$3900(org.yaml.snakeyaml.emitter.Emitter, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #4                  // Method increaseIndent:(ZZ)V
       6: return

  static org.yaml.snakeyaml.emitter.ScalarAnalysis access$4002(org.yaml.snakeyaml.emitter.Emitter, org.yaml.snakeyaml.emitter.ScalarAnalysis);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
       6: areturn

  static org.yaml.snakeyaml.emitter.ScalarAnalysis access$4100(org.yaml.snakeyaml.emitter.Emitter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method analyzeScalar:(Ljava/lang/String;)Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
       5: areturn

  static org.yaml.snakeyaml.emitter.ScalarAnalysis access$4000(org.yaml.snakeyaml.emitter.Emitter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field analysis:Lorg/yaml/snakeyaml/emitter/ScalarAnalysis;
       4: areturn

  static boolean access$4500(org.yaml.snakeyaml.emitter.Emitter, org.yaml.snakeyaml.events.Event);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method isFoldedOrLiteral:(Lorg/yaml/snakeyaml/events/Event;)Z
       5: ireturn

  static {};
    Code:
       0: iconst_1
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        32
       7: castore
       8: putstatic     #243                // Field SPACE:[C
      11: ldc_w         #289                // String \\s
      14: invokestatic  #290                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      17: putstatic     #220                // Field SPACES_PATTERN:Ljava/util/regex/Pattern;
      20: new           #291                // class java/util/HashSet
      23: dup
      24: invokespecial #292                // Method java/util/HashSet."<init>":()V
      27: putstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
      30: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
      33: bipush        91
      35: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      38: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      43: pop
      44: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
      47: bipush        93
      49: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      52: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      57: pop
      58: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
      61: bipush        123
      63: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      66: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      71: pop
      72: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
      75: bipush        125
      77: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      80: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
      89: bipush        44
      91: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      94: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      99: pop
     100: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
     103: bipush        42
     105: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     108: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     113: pop
     114: getstatic     #214                // Field INVALID_ANCHOR:Ljava/util/Set;
     117: bipush        38
     119: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     122: invokeinterface #293,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     127: pop
     128: new           #294                // class java/util/HashMap
     131: dup
     132: invokespecial #295                // Method java/util/HashMap."<init>":()V
     135: putstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     138: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     141: iconst_0
     142: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     145: ldc_w         #267                // String 0
     148: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     157: bipush        7
     159: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     162: ldc_w         #297                // String a
     165: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     174: bipush        8
     176: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     179: ldc_w         #298                // String b
     182: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     187: pop
     188: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     191: bipush        9
     193: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     196: ldc_w         #299                // String t
     199: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     204: pop
     205: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     208: bipush        10
     210: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     213: ldc_w         #300                // String n
     216: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     221: pop
     222: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     225: bipush        11
     227: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     230: ldc_w         #301                // String v
     233: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     238: pop
     239: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     242: bipush        12
     244: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     247: ldc_w         #302                // String f
     250: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     255: pop
     256: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     259: bipush        13
     261: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     264: ldc_w         #303                // String r
     267: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     272: pop
     273: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     276: bipush        27
     278: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     281: ldc_w         #304                // String e
     284: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     289: pop
     290: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     293: bipush        34
     295: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     298: ldc_w         #256                // String \"
     301: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     306: pop
     307: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     310: bipush        92
     312: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     315: ldc_w         #261                // String \\
     318: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     323: pop
     324: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     327: sipush        133
     330: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     333: ldc_w         #305                // String N
     336: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     341: pop
     342: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     345: sipush        160
     348: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     351: ldc_w         #306                // String _
     354: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     359: pop
     360: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     363: sipush        8232
     366: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     369: ldc_w         #307                // String L
     372: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     377: pop
     378: getstatic     #259                // Field ESCAPE_REPLACEMENTS:Ljava/util/Map;
     381: sipush        8233
     384: invokestatic  #257                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     387: ldc_w         #308                // String P
     390: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     395: pop
     396: new           #69                 // class java/util/LinkedHashMap
     399: dup
     400: invokespecial #70                 // Method java/util/LinkedHashMap."<init>":()V
     403: putstatic     #26                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
     406: getstatic     #26                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
     409: ldc           #169                // String !
     411: ldc           #169                // String !
     413: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     418: pop
     419: getstatic     #26                 // Field DEFAULT_TAG_PREFIXES:Ljava/util/Map;
     422: ldc_w         #310                // String tag:yaml.org,2002:
     425: ldc_w         #311                // String !!
     428: invokeinterface #296,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     433: pop
     434: ldc_w         #312                // String ^![-_\\w]*!$
     437: invokestatic  #290                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     440: putstatic     #196                // Field HANDLE_FORMAT:Ljava/util/regex/Pattern;
     443: ldc_w         #313                // String 0[0-9_]+
     446: invokestatic  #290                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     449: putstatic     #225                // Field LEADING_ZERO_PATTERN:Ljava/util/regex/Pattern;
     452: return
}
