Compiled from "SafeConstructor.java"
public class org.yaml.snakeyaml.constructor.SafeConstructor extends org.yaml.snakeyaml.constructor.BaseConstructor {
  public static final org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined undefinedConstructor;

  private static final java.util.Map<java.lang.String, java.lang.Boolean> BOOL_VALUES;

  private static final int[][] RADIX_MAX;

  private static final java.util.regex.Pattern TIMESTAMP_REGEXP;

  private static final java.util.regex.Pattern YMD_REGEXP;

  public org.yaml.snakeyaml.constructor.SafeConstructor(org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/yaml/snakeyaml/constructor/BaseConstructor."<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
       5: aload_0
       6: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
       9: getstatic     #7                  // Field org/yaml/snakeyaml/nodes/Tag.NULL:Lorg/yaml/snakeyaml/nodes/Tag;
      12: new           #8                  // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlNull
      15: dup
      16: aload_0
      17: invokespecial #9                  // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlNull."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      20: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      30: getstatic     #11                 // Field org/yaml/snakeyaml/nodes/Tag.BOOL:Lorg/yaml/snakeyaml/nodes/Tag;
      33: new           #12                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBool
      36: dup
      37: aload_0
      38: invokespecial #13                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBool."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      41: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      51: getstatic     #14                 // Field org/yaml/snakeyaml/nodes/Tag.INT:Lorg/yaml/snakeyaml/nodes/Tag;
      54: new           #15                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlInt
      57: dup
      58: aload_0
      59: invokespecial #16                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlInt."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      62: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_0
      69: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      72: getstatic     #17                 // Field org/yaml/snakeyaml/nodes/Tag.FLOAT:Lorg/yaml/snakeyaml/nodes/Tag;
      75: new           #18                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlFloat
      78: dup
      79: aload_0
      80: invokespecial #19                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlFloat."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      83: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: aload_0
      90: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      93: getstatic     #20                 // Field org/yaml/snakeyaml/nodes/Tag.BINARY:Lorg/yaml/snakeyaml/nodes/Tag;
      96: new           #21                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBinary
      99: dup
     100: aload_0
     101: invokespecial #22                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBinary."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     104: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     114: getstatic     #23                 // Field org/yaml/snakeyaml/nodes/Tag.TIMESTAMP:Lorg/yaml/snakeyaml/nodes/Tag;
     117: new           #24                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlTimestamp
     120: dup
     121: invokespecial #25                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlTimestamp."<init>":()V
     124: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_0
     131: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     134: getstatic     #26                 // Field org/yaml/snakeyaml/nodes/Tag.OMAP:Lorg/yaml/snakeyaml/nodes/Tag;
     137: new           #27                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlOmap
     140: dup
     141: aload_0
     142: invokespecial #28                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlOmap."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     145: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: aload_0
     152: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     155: getstatic     #29                 // Field org/yaml/snakeyaml/nodes/Tag.PAIRS:Lorg/yaml/snakeyaml/nodes/Tag;
     158: new           #30                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlPairs
     161: dup
     162: aload_0
     163: invokespecial #31                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlPairs."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     166: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     171: pop
     172: aload_0
     173: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     176: getstatic     #32                 // Field org/yaml/snakeyaml/nodes/Tag.SET:Lorg/yaml/snakeyaml/nodes/Tag;
     179: new           #33                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet
     182: dup
     183: aload_0
     184: invokespecial #34                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     187: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     192: pop
     193: aload_0
     194: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     197: getstatic     #35                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
     200: new           #36                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlStr
     203: dup
     204: aload_0
     205: invokespecial #37                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlStr."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     208: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     213: pop
     214: aload_0
     215: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     218: getstatic     #38                 // Field org/yaml/snakeyaml/nodes/Tag.SEQ:Lorg/yaml/snakeyaml/nodes/Tag;
     221: new           #39                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq
     224: dup
     225: aload_0
     226: invokespecial #40                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     229: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     234: pop
     235: aload_0
     236: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     239: getstatic     #41                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     242: new           #42                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap
     245: dup
     246: aload_0
     247: invokespecial #43                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     250: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     255: pop
     256: aload_0
     257: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     260: aconst_null
     261: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     264: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     269: pop
     270: aload_0
     271: getfield      #45                 // Field yamlClassConstructors:Ljava/util/Map;
     274: getstatic     #46                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
     277: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     280: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     285: pop
     286: aload_0
     287: getfield      #45                 // Field yamlClassConstructors:Ljava/util/Map;
     290: getstatic     #47                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
     293: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     296: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     301: pop
     302: aload_0
     303: getfield      #45                 // Field yamlClassConstructors:Ljava/util/Map;
     306: getstatic     #48                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     309: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     312: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     317: pop
     318: return

  protected void flattenMapping(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #49                 // Method flattenMapping:(Lorg/yaml/snakeyaml/nodes/MappingNode;Z)V
       6: return

  protected void flattenMapping(org.yaml.snakeyaml.nodes.MappingNode, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #50                 // Method processDuplicateKeys:(Lorg/yaml/snakeyaml/nodes/MappingNode;Z)V
       6: aload_1
       7: invokevirtual #51                 // Method org/yaml/snakeyaml/nodes/MappingNode.isMerged:()Z
      10: ifeq          38
      13: aload_1
      14: aload_0
      15: aload_1
      16: iconst_1
      17: new           #52                 // class java/util/HashMap
      20: dup
      21: invokespecial #53                 // Method java/util/HashMap."<init>":()V
      24: new           #54                 // class java/util/ArrayList
      27: dup
      28: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
      31: iload_2
      32: invokespecial #56                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;Z)Ljava/util/List;
      35: invokevirtual #57                 // Method org/yaml/snakeyaml/nodes/MappingNode.setValue:(Ljava/util/List;)V
      38: return

  protected void processDuplicateKeys(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #50                 // Method processDuplicateKeys:(Lorg/yaml/snakeyaml/nodes/MappingNode;Z)V
       6: return

  protected void processDuplicateKeys(org.yaml.snakeyaml.nodes.MappingNode, boolean);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: astore_3
       5: new           #52                 // class java/util/HashMap
       8: dup
       9: aload_3
      10: invokeinterface #59,  1           // InterfaceMethod java/util/List.size:()I
      15: invokespecial #60                 // Method java/util/HashMap."<init>":(I)V
      18: astore        4
      20: new           #61                 // class java/util/TreeSet
      23: dup
      24: invokespecial #62                 // Method java/util/TreeSet."<init>":()V
      27: astore        5
      29: iconst_0
      30: istore        6
      32: aload_3
      33: invokeinterface #63,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore        7
      40: aload         7
      42: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          311
      50: aload         7
      52: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #66                 // class org/yaml/snakeyaml/nodes/NodeTuple
      60: astore        8
      62: aload         8
      64: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      67: astore        9
      69: aload         9
      71: invokevirtual #68                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      74: getstatic     #69                 // Field org/yaml/snakeyaml/nodes/Tag.MERGE:Lorg/yaml/snakeyaml/nodes/Tag;
      77: invokevirtual #70                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      80: ifne          302
      83: iload_2
      84: ifeq          141
      87: aload         9
      89: instanceof    #71                 // class org/yaml/snakeyaml/nodes/ScalarNode
      92: ifeq          113
      95: aload         9
      97: ldc           #72                 // class java/lang/String
      99: invokevirtual #73                 // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
     102: aload         9
     104: getstatic     #35                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
     107: invokevirtual #74                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     110: goto          141
     113: new           #75                 // class org/yaml/snakeyaml/error/YAMLException
     116: dup
     117: new           #76                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #78                 // String Keys must be scalars but found:
     126: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         9
     131: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     134: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #82                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload_0
     142: aload         9
     144: invokevirtual #83                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
     147: astore        10
     149: aload         10
     151: ifnull        241
     154: iload_2
     155: ifne          241
     158: aload         9
     160: invokevirtual #84                 // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
     163: ifeq          241
     166: aload_0
     167: getfield      #85                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
     170: invokevirtual #86                 // Method org/yaml/snakeyaml/LoaderOptions.getAllowRecursiveKeys:()Z
     173: ifne          186
     176: new           #75                 // class org/yaml/snakeyaml/error/YAMLException
     179: dup
     180: ldc           #87                 // String Recursive key for mapping is detected but it is not configured to be allowed.
     182: invokespecial #82                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     185: athrow
     186: aload         10
     188: invokevirtual #88                 // Method java/lang/Object.hashCode:()I
     191: pop
     192: goto          241
     195: astore        11
     197: new           #90                 // class org/yaml/snakeyaml/constructor/ConstructorException
     200: dup
     201: ldc           #91                 // String while constructing a mapping
     203: aload_1
     204: invokevirtual #92                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     207: new           #76                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #93                 // String found unacceptable key
     216: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload         10
     221: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     224: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     227: aload         8
     229: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     232: invokevirtual #94                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     235: aload         11
     237: invokespecial #95                 // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Throwable;)V
     240: athrow
     241: aload         4
     243: aload         10
     245: iload         6
     247: invokestatic  #96                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     250: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     255: checkcast     #97                 // class java/lang/Integer
     258: astore        11
     260: aload         11
     262: ifnull        302
     265: aload_0
     266: invokevirtual #98                 // Method isAllowDuplicateKeys:()Z
     269: ifne          294
     272: new           #99                 // class org/yaml/snakeyaml/constructor/DuplicateKeyException
     275: dup
     276: aload_1
     277: invokevirtual #92                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     280: aload         10
     282: aload         8
     284: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     287: invokevirtual #94                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     290: invokespecial #100                // Method org/yaml/snakeyaml/constructor/DuplicateKeyException."<init>":(Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Object;Lorg/yaml/snakeyaml/error/Mark;)V
     293: athrow
     294: aload         5
     296: aload         11
     298: invokevirtual #101                // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
     301: pop
     302: iload         6
     304: iconst_1
     305: iadd
     306: istore        6
     308: goto          40
     311: aload         5
     313: invokevirtual #102                // Method java/util/TreeSet.descendingIterator:()Ljava/util/Iterator;
     316: astore        7
     318: aload         7
     320: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     325: ifeq          351
     328: aload_3
     329: aload         7
     331: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     336: checkcast     #97                 // class java/lang/Integer
     339: invokevirtual #103                // Method java/lang/Integer.intValue:()I
     342: invokeinterface #104,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     347: pop
     348: goto          318
     351: return
    Exception table:
       from    to  target type
         186   192   195   Class java/lang/Exception

  private java.util.List<org.yaml.snakeyaml.nodes.NodeTuple> mergeNode(org.yaml.snakeyaml.nodes.MappingNode, boolean, java.util.Map<java.lang.Object, java.lang.Integer>, java.util.List<org.yaml.snakeyaml.nodes.NodeTuple>, boolean);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: invokeinterface #63,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        6
      11: aload         6
      13: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          437
      21: aload         6
      23: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #66                 // class org/yaml/snakeyaml/nodes/NodeTuple
      31: astore        7
      33: aload         7
      35: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      38: astore        8
      40: aload         7
      42: invokevirtual #105                // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      45: astore        9
      47: aload         8
      49: invokevirtual #68                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      52: getstatic     #69                 // Field org/yaml/snakeyaml/nodes/Tag.MERGE:Lorg/yaml/snakeyaml/nodes/Tag;
      55: invokevirtual #70                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      58: ifeq          294
      61: aload         6
      63: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.remove:()V
      68: getstatic     #107                // Field org/yaml/snakeyaml/constructor/SafeConstructor$1.$SwitchMap$org$yaml$snakeyaml$nodes$NodeId:[I
      71: aload         9
      73: invokevirtual #108                // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      76: invokevirtual #109                // Method org/yaml/snakeyaml/nodes/NodeId.ordinal:()I
      79: iaload
      80: lookupswitch  { // 2
                     1: 108
                     2: 131
               default: 252
          }
     108: aload         9
     110: checkcast     #110                // class org/yaml/snakeyaml/nodes/MappingNode
     113: astore        10
     115: aload_0
     116: aload         10
     118: iconst_0
     119: aload_3
     120: aload         4
     122: iload         5
     124: invokespecial #56                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;Z)Ljava/util/List;
     127: pop
     128: goto          434
     131: aload         9
     133: checkcast     #111                // class org/yaml/snakeyaml/nodes/SequenceNode
     136: astore        11
     138: aload         11
     140: invokevirtual #112                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     143: astore        12
     145: aload         12
     147: invokeinterface #63,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     152: astore        13
     154: aload         13
     156: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     161: ifeq          249
     164: aload         13
     166: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     171: checkcast     #113                // class org/yaml/snakeyaml/nodes/Node
     174: astore        14
     176: aload         14
     178: instanceof    #110                // class org/yaml/snakeyaml/nodes/MappingNode
     181: ifne          226
     184: new           #90                 // class org/yaml/snakeyaml/constructor/ConstructorException
     187: dup
     188: ldc           #91                 // String while constructing a mapping
     190: aload_1
     191: invokevirtual #92                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     194: new           #76                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #114                // String expected a mapping for merging, but found
     203: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload         14
     208: invokevirtual #108                // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     211: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     214: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     217: aload         14
     219: invokevirtual #94                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     222: invokespecial #115                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
     225: athrow
     226: aload         14
     228: checkcast     #110                // class org/yaml/snakeyaml/nodes/MappingNode
     231: astore        15
     233: aload_0
     234: aload         15
     236: iconst_0
     237: aload_3
     238: aload         4
     240: iload         5
     242: invokespecial #56                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;Z)Ljava/util/List;
     245: pop
     246: goto          154
     249: goto          434
     252: new           #90                 // class org/yaml/snakeyaml/constructor/ConstructorException
     255: dup
     256: ldc           #91                 // String while constructing a mapping
     258: aload_1
     259: invokevirtual #92                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     262: new           #76                 // class java/lang/StringBuilder
     265: dup
     266: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     269: ldc           #116                // String expected a mapping or list of mappings for merging, but found
     271: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: aload         9
     276: invokevirtual #108                // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     279: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     282: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     285: aload         9
     287: invokevirtual #94                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     290: invokespecial #115                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
     293: athrow
     294: iload         5
     296: ifeq          353
     299: aload         8
     301: instanceof    #71                 // class org/yaml/snakeyaml/nodes/ScalarNode
     304: ifeq          325
     307: aload         8
     309: ldc           #72                 // class java/lang/String
     311: invokevirtual #73                 // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
     314: aload         8
     316: getstatic     #35                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
     319: invokevirtual #74                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     322: goto          353
     325: new           #75                 // class org/yaml/snakeyaml/error/YAMLException
     328: dup
     329: new           #76                 // class java/lang/StringBuilder
     332: dup
     333: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     336: ldc           #78                 // String Keys must be scalars but found:
     338: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: aload         8
     343: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     346: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     349: invokespecial #82                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     352: athrow
     353: aload_0
     354: aload         8
     356: invokevirtual #83                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
     359: astore        10
     361: aload_3
     362: aload         10
     364: invokeinterface #117,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     369: ifne          406
     372: aload         4
     374: aload         7
     376: invokeinterface #118,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     381: pop
     382: aload_3
     383: aload         10
     385: aload         4
     387: invokeinterface #59,  1           // InterfaceMethod java/util/List.size:()I
     392: iconst_1
     393: isub
     394: invokestatic  #96                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     397: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     402: pop
     403: goto          434
     406: iload_2
     407: ifeq          434
     410: aload         4
     412: aload_3
     413: aload         10
     415: invokeinterface #119,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     420: checkcast     #97                 // class java/lang/Integer
     423: invokevirtual #103                // Method java/lang/Integer.intValue:()I
     426: aload         7
     428: invokeinterface #120,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     433: pop
     434: goto          11
     437: aload         4
     439: areturn

  protected void constructMapping2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #121                // Method flattenMapping:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #122                // Method org/yaml/snakeyaml/constructor/BaseConstructor.constructMapping2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Map;)V
      11: return

  protected void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Set<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #121                // Method flattenMapping:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #123                // Method org/yaml/snakeyaml/constructor/BaseConstructor.constructSet2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Set;)V
      11: return

  private static int maxLen(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #124                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
       5: invokevirtual #125                // Method java/lang/String.length:()I
       8: ireturn

  private static int maxLen(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: invokestatic  #126                // Method java/lang/Long.toString:(JI)Ljava/lang/String;
       5: invokevirtual #125                // Method java/lang/String.length:()I
       8: ireturn

  private java.lang.Number createNumber(int, java.lang.String, int);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokevirtual #125                // Method java/lang/String.length:()I
       8: goto          12
      11: iconst_0
      12: istore        4
      14: iload_1
      15: ifge          38
      18: new           #76                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #127                // String -
      27: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: astore_2
      38: iload_3
      39: getstatic     #128                // Field RADIX_MAX:[[I
      42: arraylength
      43: if_icmpge     54
      46: getstatic     #128                // Field RADIX_MAX:[[I
      49: iload_3
      50: aaload
      51: goto          55
      54: aconst_null
      55: astore        5
      57: aload         5
      59: ifnull        108
      62: iload         4
      64: aload         5
      66: iconst_0
      67: iaload
      68: if_icmple     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: istore        6
      78: iload         6
      80: ifeq          108
      83: iload         4
      85: aload         5
      87: iconst_1
      88: iaload
      89: if_icmple     102
      92: new           #129                // class java/math/BigInteger
      95: dup
      96: aload_2
      97: iload_3
      98: invokespecial #130                // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     101: areturn
     102: aload_2
     103: iload_3
     104: invokestatic  #131                // Method createLongOrBigInteger:(Ljava/lang/String;I)Ljava/lang/Number;
     107: areturn
     108: aload_2
     109: iload_3
     110: invokestatic  #132                // Method java/lang/Integer.valueOf:(Ljava/lang/String;I)Ljava/lang/Integer;
     113: astore        6
     115: goto          127
     118: astore        7
     120: aload_2
     121: iload_3
     122: invokestatic  #131                // Method createLongOrBigInteger:(Ljava/lang/String;I)Ljava/lang/Number;
     125: astore        6
     127: aload         6
     129: areturn
    Exception table:
       from    to  target type
         108   115   118   Class java/lang/NumberFormatException

  protected static java.lang.Number createLongOrBigInteger(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #134                // Method java/lang/Long.valueOf:(Ljava/lang/String;I)Ljava/lang/Long;
       5: areturn
       6: astore_2
       7: new           #129                // class java/math/BigInteger
      10: dup
      11: aload_0
      12: iload_1
      13: invokespecial #130                // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      16: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/NumberFormatException

  static java.util.Map access$000();
    Code:
       0: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
       3: areturn

  static java.lang.Number access$100(org.yaml.snakeyaml.constructor.SafeConstructor, int, java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokespecial #3                  // Method createNumber:(ILjava/lang/String;I)Ljava/lang/Number;
       7: areturn

  static java.util.regex.Pattern access$200();
    Code:
       0: getstatic     #2                  // Field YMD_REGEXP:Ljava/util/regex/Pattern;
       3: areturn

  static java.util.regex.Pattern access$300();
    Code:
       0: getstatic     #1                  // Field TIMESTAMP_REGEXP:Ljava/util/regex/Pattern;
       3: areturn

  static {};
    Code:
       0: new           #135                // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined
       3: dup
       4: invokespecial #136                // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined."<init>":()V
       7: putstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
      10: new           #52                 // class java/util/HashMap
      13: dup
      14: invokespecial #53                 // Method java/util/HashMap."<init>":()V
      17: putstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      20: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      23: ldc           #137                // String yes
      25: getstatic     #138                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      28: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      37: ldc           #139                // String no
      39: getstatic     #140                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      42: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      51: ldc           #141                // String true
      53: getstatic     #138                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      56: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      65: ldc           #142                // String false
      67: getstatic     #140                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      70: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      79: ldc           #143                // String on
      81: getstatic     #138                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      84: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      93: ldc           #144                // String off
      95: getstatic     #140                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      98: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: bipush        17
     106: iconst_2
     107: multianewarray #145,  2           // class "[[I"
     111: putstatic     #128                // Field RADIX_MAX:[[I
     114: iconst_4
     115: newarray       int
     117: dup
     118: iconst_0
     119: iconst_2
     120: iastore
     121: dup
     122: iconst_1
     123: bipush        8
     125: iastore
     126: dup
     127: iconst_2
     128: bipush        10
     130: iastore
     131: dup
     132: iconst_3
     133: bipush        16
     135: iastore
     136: astore_0
     137: aload_0
     138: astore_1
     139: aload_1
     140: arraylength
     141: istore_2
     142: iconst_0
     143: istore_3
     144: iload_3
     145: iload_2
     146: if_icmpge     190
     149: aload_1
     150: iload_3
     151: iaload
     152: istore        4
     154: getstatic     #128                // Field RADIX_MAX:[[I
     157: iload         4
     159: iconst_2
     160: newarray       int
     162: dup
     163: iconst_0
     164: ldc           #146                // int 2147483647
     166: iload         4
     168: invokestatic  #147                // Method maxLen:(II)I
     171: iastore
     172: dup
     173: iconst_1
     174: ldc2_w        #149                // long 9223372036854775807l
     177: iload         4
     179: invokestatic  #151                // Method maxLen:(JI)I
     182: iastore
     183: aastore
     184: iinc          3, 1
     187: goto          144
     190: ldc           #152                // String ^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:(?:[Tt]|[ \t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \t]*(?:Z|([-+][0-9][0-9]?)(?::([0-9][0-9])?)?))?)?$
     192: invokestatic  #153                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     195: putstatic     #1                  // Field TIMESTAMP_REGEXP:Ljava/util/regex/Pattern;
     198: ldc           #154                // String ^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)$
     200: invokestatic  #153                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     203: putstatic     #2                  // Field YMD_REGEXP:Ljava/util/regex/Pattern;
     206: return
}
