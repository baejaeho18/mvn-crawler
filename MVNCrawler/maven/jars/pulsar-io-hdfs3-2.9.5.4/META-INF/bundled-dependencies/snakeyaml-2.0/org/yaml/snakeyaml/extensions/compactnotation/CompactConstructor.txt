Compiled from "CompactConstructor.java"
public class org.yaml.snakeyaml.extensions.compactnotation.CompactConstructor extends org.yaml.snakeyaml.constructor.Constructor {
  private static final java.util.regex.Pattern GUESS_COMPACT;

  private static final java.util.regex.Pattern FIRST_PATTERN;

  private static final java.util.regex.Pattern PROPERTY_NAME_PATTERN;

  private org.yaml.snakeyaml.constructor.Construct compactConstruct;

  public org.yaml.snakeyaml.extensions.compactnotation.CompactConstructor(org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/yaml/snakeyaml/constructor/Constructor."<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
       5: return

  public org.yaml.snakeyaml.extensions.compactnotation.CompactConstructor();
    Code:
       0: aload_0
       1: new           #4                  // class org/yaml/snakeyaml/LoaderOptions
       4: dup
       5: invokespecial #5                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
       8: invokespecial #3                  // Method org/yaml/snakeyaml/constructor/Constructor."<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
      11: return

  protected java.lang.Object constructCompactFormat(org.yaml.snakeyaml.nodes.ScalarNode, org.yaml.snakeyaml.extensions.compactnotation.CompactData);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #6                  // Method createInstance:(Lorg/yaml/snakeyaml/nodes/ScalarNode;Lorg/yaml/snakeyaml/extensions/compactnotation/CompactData;)Ljava/lang/Object;
       6: astore_3
       7: new           #7                  // class java/util/HashMap
      10: dup
      11: aload_2
      12: invokevirtual #8                  // Method org/yaml/snakeyaml/extensions/compactnotation/CompactData.getProperties:()Ljava/util/Map;
      15: invokespecial #9                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      18: astore        4
      20: aload_0
      21: aload_3
      22: aload         4
      24: invokevirtual #10                 // Method setProperties:(Ljava/lang/Object;Ljava/util/Map;)V
      27: aload_3
      28: areturn
      29: astore_3
      30: new           #12                 // class org/yaml/snakeyaml/error/YAMLException
      33: dup
      34: aload_3
      35: invokespecial #13                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/lang/Exception

  protected java.lang.Object createInstance(org.yaml.snakeyaml.nodes.ScalarNode, org.yaml.snakeyaml.extensions.compactnotation.CompactData) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #14                 // Method org/yaml/snakeyaml/extensions/compactnotation/CompactData.getPrefix:()Ljava/lang/String;
       5: invokevirtual #15                 // Method getClassForName:(Ljava/lang/String;)Ljava/lang/Class;
       8: astore_3
       9: aload_2
      10: invokevirtual #16                 // Method org/yaml/snakeyaml/extensions/compactnotation/CompactData.getArguments:()Ljava/util/List;
      13: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      18: anewarray     #18                 // class java/lang/Class
      21: astore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: aload         4
      30: arraylength
      31: if_icmpge     47
      34: aload         4
      36: iload         5
      38: ldc           #19                 // class java/lang/String
      40: aastore
      41: iinc          5, 1
      44: goto          26
      47: aload_3
      48: aload         4
      50: invokevirtual #20                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      53: astore        5
      55: aload         5
      57: iconst_1
      58: invokevirtual #21                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      61: aload         5
      63: aload_2
      64: invokevirtual #16                 // Method org/yaml/snakeyaml/extensions/compactnotation/CompactData.getArguments:()Ljava/util/List;
      67: invokeinterface #22,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
      72: invokevirtual #23                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      75: areturn

  protected void setProperties(java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #24                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #25                 // String Data for Compact Object Notation cannot be null.
      10: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: invokeinterface #27,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          166
      35: aload_3
      36: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #31                 // class java/util/Map$Entry
      44: astore        4
      46: aload         4
      48: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: checkcast     #19                 // class java/lang/String
      56: astore        5
      58: aload_0
      59: invokevirtual #33                 // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      62: aload_1
      63: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: aload         5
      68: invokevirtual #35                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperty:(Ljava/lang/Class;Ljava/lang/String;)Lorg/yaml/snakeyaml/introspector/Property;
      71: astore        6
      73: aload         6
      75: aload_1
      76: aload         4
      78: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: invokevirtual #37                 // Method org/yaml/snakeyaml/introspector/Property.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      86: goto          163
      89: astore        7
      91: new           #12                 // class org/yaml/snakeyaml/error/YAMLException
      94: dup
      95: new           #39                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #41                 // String Cannot set property=\'
     104: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload         5
     109: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #43                 // String \' with value=\'
     114: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_2
     118: aload         5
     120: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     125: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: ldc           #46                 // String \' (
     130: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_2
     134: aload         5
     136: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     141: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     144: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     147: ldc           #47                 // String ) in
     149: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_1
     153: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     156: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokespecial #49                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     162: athrow
     163: goto          26
     166: return
    Exception table:
       from    to  target type
          73    86    89   Class java/lang/IllegalArgumentException

  public org.yaml.snakeyaml.extensions.compactnotation.CompactData getCompactData(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #50                 // String )
       3: invokevirtual #51                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_1
      12: bipush        40
      14: invokevirtual #52                 // Method java/lang/String.indexOf:(I)I
      17: ifge          22
      20: aconst_null
      21: areturn
      22: getstatic     #53                 // Field FIRST_PATTERN:Ljava/util/regex/Pattern;
      25: aload_1
      26: invokevirtual #54                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      29: astore_2
      30: aload_2
      31: invokevirtual #55                 // Method java/util/regex/Matcher.matches:()Z
      34: ifeq          193
      37: aload_2
      38: iconst_1
      39: invokevirtual #56                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      42: invokevirtual #57                 // Method java/lang/String.trim:()Ljava/lang/String;
      45: astore_3
      46: aload_2
      47: iconst_3
      48: invokevirtual #56                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      51: astore        4
      53: new           #58                 // class org/yaml/snakeyaml/extensions/compactnotation/CompactData
      56: dup
      57: aload_3
      58: invokespecial #59                 // Method org/yaml/snakeyaml/extensions/compactnotation/CompactData."<init>":(Ljava/lang/String;)V
      61: astore        5
      63: aload         4
      65: invokevirtual #60                 // Method java/lang/String.length:()I
      68: ifne          74
      71: aload         5
      73: areturn
      74: aload         4
      76: ldc           #61                 // String \\s*,\\s*
      78: invokevirtual #62                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      81: astore        6
      83: iconst_0
      84: istore        7
      86: iload         7
      88: aload         6
      90: arraylength
      91: if_icmpge     190
      94: aload         6
      96: iload         7
      98: aaload
      99: astore        8
     101: aload         8
     103: bipush        61
     105: invokevirtual #52                 // Method java/lang/String.indexOf:(I)I
     108: ifge          127
     111: aload         5
     113: invokevirtual #16                 // Method org/yaml/snakeyaml/extensions/compactnotation/CompactData.getArguments:()Ljava/util/List;
     116: aload         8
     118: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     123: pop
     124: goto          184
     127: getstatic     #64                 // Field PROPERTY_NAME_PATTERN:Ljava/util/regex/Pattern;
     130: aload         8
     132: invokevirtual #54                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     135: astore        9
     137: aload         9
     139: invokevirtual #55                 // Method java/util/regex/Matcher.matches:()Z
     142: ifeq          182
     145: aload         9
     147: iconst_1
     148: invokevirtual #56                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     151: astore        10
     153: aload         9
     155: iconst_2
     156: invokevirtual #56                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     159: invokevirtual #57                 // Method java/lang/String.trim:()Ljava/lang/String;
     162: astore        11
     164: aload         5
     166: invokevirtual #8                  // Method org/yaml/snakeyaml/extensions/compactnotation/CompactData.getProperties:()Ljava/util/Map;
     169: aload         10
     171: aload         11
     173: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     178: pop
     179: goto          184
     182: aconst_null
     183: areturn
     184: iinc          7, 1
     187: goto          86
     190: aload         5
     192: areturn
     193: aconst_null
     194: areturn

  private org.yaml.snakeyaml.constructor.Construct getCompactConstruct();
    Code:
       0: aload_0
       1: getfield      #66                 // Field compactConstruct:Lorg/yaml/snakeyaml/constructor/Construct;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #67                 // Method createCompactConstruct:()Lorg/yaml/snakeyaml/constructor/Construct;
      12: putfield      #66                 // Field compactConstruct:Lorg/yaml/snakeyaml/constructor/Construct;
      15: aload_0
      16: getfield      #66                 // Field compactConstruct:Lorg/yaml/snakeyaml/constructor/Construct;
      19: areturn

  protected org.yaml.snakeyaml.constructor.Construct createCompactConstruct();
    Code:
       0: new           #68                 // class org/yaml/snakeyaml/extensions/compactnotation/CompactConstructor$ConstructCompactObject
       3: dup
       4: aload_0
       5: invokespecial #69                 // Method org/yaml/snakeyaml/extensions/compactnotation/CompactConstructor$ConstructCompactObject."<init>":(Lorg/yaml/snakeyaml/extensions/compactnotation/CompactConstructor;)V
       8: areturn

  protected org.yaml.snakeyaml.constructor.Construct getConstructor(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_1
       1: instanceof    #70                 // class org/yaml/snakeyaml/nodes/MappingNode
       4: ifeq          86
       7: aload_1
       8: checkcast     #70                 // class org/yaml/snakeyaml/nodes/MappingNode
      11: astore_2
      12: aload_2
      13: invokevirtual #71                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
      16: astore_3
      17: aload_3
      18: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      23: iconst_1
      24: if_icmpne     83
      27: aload_3
      28: iconst_0
      29: invokeinterface #72,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: checkcast     #73                 // class org/yaml/snakeyaml/nodes/NodeTuple
      37: astore        4
      39: aload         4
      41: invokevirtual #74                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      44: astore        5
      46: aload         5
      48: instanceof    #75                 // class org/yaml/snakeyaml/nodes/ScalarNode
      51: ifeq          83
      54: aload         5
      56: checkcast     #75                 // class org/yaml/snakeyaml/nodes/ScalarNode
      59: astore        6
      61: getstatic     #76                 // Field GUESS_COMPACT:Ljava/util/regex/Pattern;
      64: aload         6
      66: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getValue:()Ljava/lang/String;
      69: invokevirtual #54                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      72: invokevirtual #55                 // Method java/util/regex/Matcher.matches:()Z
      75: ifeq          83
      78: aload_0
      79: invokespecial #78                 // Method getCompactConstruct:()Lorg/yaml/snakeyaml/constructor/Construct;
      82: areturn
      83: goto          119
      86: aload_1
      87: instanceof    #75                 // class org/yaml/snakeyaml/nodes/ScalarNode
      90: ifeq          119
      93: aload_1
      94: checkcast     #75                 // class org/yaml/snakeyaml/nodes/ScalarNode
      97: astore_2
      98: getstatic     #76                 // Field GUESS_COMPACT:Ljava/util/regex/Pattern;
     101: aload_2
     102: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getValue:()Ljava/lang/String;
     105: invokevirtual #54                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     108: invokevirtual #55                 // Method java/util/regex/Matcher.matches:()Z
     111: ifeq          119
     114: aload_0
     115: invokespecial #78                 // Method getCompactConstruct:()Lorg/yaml/snakeyaml/constructor/Construct;
     118: areturn
     119: aload_0
     120: aload_1
     121: invokespecial #79                 // Method org/yaml/snakeyaml/constructor/Constructor.getConstructor:(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/constructor/Construct;
     124: areturn

  protected void applySequence(java.lang.Object, java.util.List<?>);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       4: aload_1
       5: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: aload_0
       9: aload_1
      10: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #80                 // Method getSequencePropertyName:(Ljava/lang/Class;)Ljava/lang/String;
      16: invokevirtual #35                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperty:(Ljava/lang/Class;Ljava/lang/String;)Lorg/yaml/snakeyaml/introspector/Property;
      19: astore_3
      20: aload_3
      21: aload_1
      22: aload_2
      23: invokevirtual #37                 // Method org/yaml/snakeyaml/introspector/Property.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      26: goto          39
      29: astore_3
      30: new           #12                 // class org/yaml/snakeyaml/error/YAMLException
      33: dup
      34: aload_3
      35: invokespecial #13                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
      39: return
    Exception table:
       from    to  target type
           0    26    29   Class java/lang/Exception

  protected java.lang.String getSequencePropertyName(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       4: aload_1
       5: invokevirtual #81                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperties:(Ljava/lang/Class;)Ljava/util/Set;
       8: astore_2
       9: aload_2
      10: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          58
      25: aload_3
      26: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #82                 // class org/yaml/snakeyaml/introspector/Property
      34: astore        4
      36: ldc           #83                 // class java/util/List
      38: aload         4
      40: invokevirtual #84                 // Method org/yaml/snakeyaml/introspector/Property.getType:()Ljava/lang/Class;
      43: invokevirtual #85                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      46: ifne          55
      49: aload_3
      50: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.remove:()V
      55: goto          16
      58: aload_2
      59: invokeinterface #87,  1           // InterfaceMethod java/util/Set.size:()I
      64: ifne          94
      67: new           #12                 // class org/yaml/snakeyaml/error/YAMLException
      70: dup
      71: new           #39                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #88                 // String No list property found in
      80: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_1
      84: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #49                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_2
      95: invokeinterface #87,  1           // InterfaceMethod java/util/Set.size:()I
     100: iconst_1
     101: if_icmple     136
     104: new           #12                 // class org/yaml/snakeyaml/error/YAMLException
     107: dup
     108: new           #39                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #89                 // String Many list properties found in
     117: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_1
     121: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: ldc           #90                 // String ; Please override getSequencePropertyName() to specify which property to use.
     126: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #49                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload_2
     137: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     142: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #82                 // class org/yaml/snakeyaml/introspector/Property
     150: invokevirtual #91                 // Method org/yaml/snakeyaml/introspector/Property.getName:()Ljava/lang/String;
     153: areturn

  static java.util.List access$000(org.yaml.snakeyaml.extensions.compactnotation.CompactConstructor, org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method constructSequence:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/util/List;
       5: areturn

  static java.lang.String access$100(org.yaml.snakeyaml.extensions.compactnotation.CompactConstructor, org.yaml.snakeyaml.nodes.ScalarNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method constructScalar:(Lorg/yaml/snakeyaml/nodes/ScalarNode;)Ljava/lang/String;
       5: areturn

  static {};
    Code:
       0: ldc           #92                 // String \\p{Alpha}.*\\s*\\((?:,?\\s*(?:(?:\\w*)|(?:\\p{Alpha}\\w*\\s*=.+))\\s*)+\\)
       2: invokestatic  #93                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #76                 // Field GUESS_COMPACT:Ljava/util/regex/Pattern;
       8: ldc           #94                 // String (\\p{Alpha}.*)(\\s*)\\((.*?)\\)
      10: invokestatic  #93                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #53                 // Field FIRST_PATTERN:Ljava/util/regex/Pattern;
      16: ldc           #95                 // String \\s*(\\p{Alpha}\\w*)\\s*=(.+)
      18: invokestatic  #93                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      21: putstatic     #64                 // Field PROPERTY_NAME_PATTERN:Ljava/util/regex/Pattern;
      24: return
}
