Compiled from "XdrSimple.java"
public abstract class org.apache.kerby.xdr.type.XdrSimple<T> extends org.apache.kerby.xdr.type.AbstractXdrType<T> {
  private byte[] bytes;

  public org.apache.kerby.xdr.type.XdrSimple(org.apache.kerby.xdr.XdrDataType);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/kerby/xdr/XdrDataType;Ljava/lang/Object;)V
       6: return

  public org.apache.kerby.xdr.type.XdrSimple(org.apache.kerby.xdr.XdrDataType, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/kerby/xdr/type/AbstractXdrType."<init>":(Lorg/apache/kerby/xdr/XdrDataType;Ljava/lang/Object;)V
       6: return

  protected byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: areturn

  protected void setBytes(byte[]);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method "[B".clone:()Ljava/lang/Object;
       9: checkcast     #5                  // class "[B"
      12: putfield      #3                  // Field bytes:[B
      15: goto          23
      18: aload_0
      19: aconst_null
      20: putfield      #3                  // Field bytes:[B
      23: return

  protected byte[] encodeBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #6                  // Method toBytes:()V
      11: aload_0
      12: getfield      #3                  // Field bytes:[B
      15: areturn

  protected void encodeBody(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method encodeBody:()[B
       4: astore_2
       5: aload_2
       6: ifnull        15
       9: aload_1
      10: aload_2
      11: invokevirtual #8                  // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      14: pop
      15: return

  protected int encodingBodyLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getValue:()Ljava/lang/Object;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field bytes:[B
      13: ifnonnull     20
      16: aload_0
      17: invokevirtual #6                  // Method toBytes:()V
      20: aload_0
      21: getfield      #3                  // Field bytes:[B
      24: arraylength
      25: ireturn

  public void decode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method decodeBody:(Ljava/nio/ByteBuffer;)V
       5: return

  protected void decodeBody(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/nio/ByteBuffer.array:()[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: ifle          19
      10: aload_0
      11: aload_2
      12: invokevirtual #12                 // Method setBytes:([B)V
      15: aload_0
      16: invokevirtual #13                 // Method toValue:()V
      19: return

  protected abstract void toValue() throws java.io.IOException;

  protected abstract void toBytes() throws java.io.IOException;

  public static boolean isSimple(org.apache.kerby.xdr.XdrDataType);
    Code:
       0: getstatic     #14                 // Field org/apache/kerby/xdr/type/XdrSimple$1.$SwitchMap$org$apache$kerby$xdr$XdrDataType:[I
       3: aload_0
       4: invokevirtual #15                 // Method org/apache/kerby/xdr/XdrDataType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 5
                     1: 44
                     2: 44
                     3: 44
                     4: 44
                     5: 44
               default: 46
          }
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn
}
