Compiled from "HdfsSyncThread.java"
public class org.apache.pulsar.io.hdfs3.sink.HdfsSyncThread<V> extends java.lang.Thread {
  private final org.apache.hadoop.fs.Syncable stream;

  private final java.util.concurrent.BlockingQueue<org.apache.pulsar.functions.api.Record<V>> unackedRecords;

  private final long syncInterval;

  private boolean keepRunning;

  public org.apache.pulsar.io.hdfs3.sink.HdfsSyncThread(org.apache.hadoop.fs.Syncable, java.util.concurrent.BlockingQueue<org.apache.pulsar.functions.api.Record<V>>, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field keepRunning:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field stream:Lorg/apache/hadoop/fs/Syncable;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field unackedRecords:Ljava/util/concurrent/BlockingQueue;
      19: aload_0
      20: lload_3
      21: putfield      #5                  // Field syncInterval:J
      24: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keepRunning:Z
       4: ifeq          31
       7: aload_0
       8: getfield      #5                  // Field syncInterval:J
      11: invokestatic  #6                  // Method java/lang/Thread.sleep:(J)V
      14: aload_0
      15: invokespecial #7                  // Method ackRecords:()V
      18: goto          0
      21: astore_1
      22: return
      23: astore_1
      24: aload_1
      25: invokevirtual #10                 // Method java/io/IOException.printStackTrace:()V
      28: goto          0
      31: return
    Exception table:
       from    to  target type
           7    18    21   Class java/lang/InterruptedException
           7    18    23   Class java/io/IOException

  public final void halt() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field keepRunning:Z
       5: aload_0
       6: invokespecial #7                  // Method ackRecords:()V
       9: return

  private void ackRecords() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field unackedRecords:Ljava/util/concurrent/BlockingQueue;
       4: invokestatic  #11                 // Method org/apache/commons/collections/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #3                  // Field stream:Lorg/apache/hadoop/fs/Syncable;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: getfield      #3                  // Field stream:Lorg/apache/hadoop/fs/Syncable;
      22: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/fs/Syncable.hsync:()V
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
      37: aload_0
      38: getfield      #4                  // Field unackedRecords:Ljava/util/concurrent/BlockingQueue;
      41: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      46: ifne          69
      49: aload_0
      50: getfield      #4                  // Field unackedRecords:Ljava/util/concurrent/BlockingQueue;
      53: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      58: checkcast     #15                 // class org/apache/pulsar/functions/api/Record
      61: invokeinterface #16,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.ack:()V
      66: goto          37
      69: return
    Exception table:
       from    to  target type
          18    29    32   any
          32    35    32   any
}
