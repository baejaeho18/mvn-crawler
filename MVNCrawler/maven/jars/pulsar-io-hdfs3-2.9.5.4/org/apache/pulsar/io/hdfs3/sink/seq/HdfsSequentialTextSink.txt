Compiled from "HdfsSequentialTextSink.java"
public class org.apache.pulsar.io.hdfs3.sink.seq.HdfsSequentialTextSink extends org.apache.pulsar.io.hdfs3.sink.seq.HdfsAbstractSequenceFileSink<java.lang.Long, java.lang.String, org.apache.hadoop.io.LongWritable, org.apache.hadoop.io.Text> {
  private java.util.concurrent.atomic.AtomicLong counter;

  public org.apache.pulsar.io.hdfs3.sink.seq.HdfsSequentialTextSink();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/pulsar/io/hdfs3/sink/seq/HdfsAbstractSequenceFileSink."<init>":()V
       4: return

  public org.apache.hadoop.io.SequenceFile$Writer getWriter() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       4: dup
       5: lconst_0
       6: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       9: putfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      12: aload_0
      13: invokevirtual #5                  // Method getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      16: aload_0
      17: invokevirtual #6                  // Method getOptions:()Ljava/util/List;
      20: aload_0
      21: invokevirtual #6                  // Method getOptions:()Ljava/util/List;
      24: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      29: anewarray     #8                  // class org/apache/hadoop/io/SequenceFile$Writer$Option
      32: invokeinterface #9,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      37: checkcast     #10                 // class "[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;"
      40: invokestatic  #11                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      43: areturn

  protected java.util.List<org.apache.hadoop.io.SequenceFile$Writer$Option> getOptions() throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/apache/pulsar/io/hdfs3/sink/seq/HdfsAbstractSequenceFileSink.getOptions:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ldc           #13                 // class org/apache/hadoop/io/LongWritable
       8: invokestatic  #14                 // Method org/apache/hadoop/io/SequenceFile$Writer.keyClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      11: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_1
      18: ldc           #16                 // class org/apache/hadoop/io/Text
      20: invokestatic  #17                 // Method org/apache/hadoop/io/SequenceFile$Writer.valueClass:(Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      23: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_1
      30: areturn

  public org.apache.pulsar.io.core.KeyValue<java.lang.Long, java.lang.String> extractKeyValue(org.apache.pulsar.functions.api.Record<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getRecordSequence:()Ljava/util/Optional;
       6: aload_0
       7: invokedynamic #19,  0             // InvokeDynamic #0:get:(Lorg/apache/pulsar/io/hdfs3/sink/seq/HdfsSequentialTextSink;)Ljava/util/function/Supplier;
      12: invokevirtual #20                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #21                 // class java/lang/Long
      18: astore_2
      19: new           #22                 // class org/apache/pulsar/io/core/KeyValue
      22: dup
      23: aload_2
      24: aload_1
      25: invokeinterface #23,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getValue:()Ljava/lang/Object;
      30: checkcast     #24                 // class java/lang/String
      33: invokespecial #25                 // Method org/apache/pulsar/io/core/KeyValue."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      36: areturn

  public org.apache.pulsar.io.core.KeyValue<org.apache.hadoop.io.LongWritable, org.apache.hadoop.io.Text> convert(org.apache.pulsar.io.core.KeyValue<java.lang.Long, java.lang.String>);
    Code:
       0: new           #22                 // class org/apache/pulsar/io/core/KeyValue
       3: dup
       4: new           #13                 // class org/apache/hadoop/io/LongWritable
       7: dup
       8: aload_1
       9: invokevirtual #26                 // Method org/apache/pulsar/io/core/KeyValue.getKey:()Ljava/lang/Object;
      12: checkcast     #21                 // class java/lang/Long
      15: invokevirtual #27                 // Method java/lang/Long.longValue:()J
      18: invokespecial #28                 // Method org/apache/hadoop/io/LongWritable."<init>":(J)V
      21: new           #16                 // class org/apache/hadoop/io/Text
      24: dup
      25: aload_1
      26: invokevirtual #29                 // Method org/apache/pulsar/io/core/KeyValue.getValue:()Ljava/lang/Object;
      29: checkcast     #24                 // class java/lang/String
      32: invokespecial #30                 // Method org/apache/hadoop/io/Text."<init>":(Ljava/lang/String;)V
      35: invokespecial #25                 // Method org/apache/pulsar/io/core/KeyValue."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      38: areturn

  private java.lang.Long lambda$extractKeyValue$0();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: areturn
}
