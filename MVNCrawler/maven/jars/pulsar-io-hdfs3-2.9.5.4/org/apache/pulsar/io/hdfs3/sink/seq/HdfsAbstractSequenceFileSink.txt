Compiled from "HdfsAbstractSequenceFileSink.java"
public abstract class org.apache.pulsar.io.hdfs3.sink.seq.HdfsAbstractSequenceFileSink<K, V, HdfsK, HdfsV> extends org.apache.pulsar.io.hdfs3.sink.HdfsAbstractSink<K, V> implements org.apache.pulsar.io.core.Sink<V> {
  private static final org.slf4j.Logger LOG;

  protected java.util.concurrent.atomic.AtomicLong counter;

  protected org.apache.hadoop.fs.FSDataOutputStream hdfsStream;

  protected org.apache.hadoop.io.SequenceFile$Writer writer;

  public org.apache.pulsar.io.hdfs3.sink.seq.HdfsAbstractSequenceFileSink();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/pulsar/io/hdfs3/sink/HdfsAbstractSink."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field writer:Lorg/apache/hadoop/io/SequenceFile$Writer;
       9: return

  public abstract org.apache.pulsar.io.core.KeyValue<HdfsK, HdfsV> convert(org.apache.pulsar.io.core.KeyValue<K, V>);

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field writer:Lorg/apache/hadoop/io/SequenceFile$Writer;
       4: invokevirtual #3                  // Method org/apache/hadoop/io/SequenceFile$Writer.close:()V
       7: aload_0
       8: invokespecial #4                  // Method org/apache/pulsar/io/hdfs3/sink/HdfsAbstractSink.close:()V
      11: return

  protected void createWriter() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #5                  // Method getWriter:()Lorg/apache/hadoop/io/SequenceFile$Writer;
       5: putfield      #2                  // Field writer:Lorg/apache/hadoop/io/SequenceFile$Writer;
       8: return

  public void write(org.apache.pulsar.functions.api.Record<V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method extractKeyValue:(Lorg/apache/pulsar/functions/api/Record;)Lorg/apache/pulsar/io/core/KeyValue;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #7                  // Method convert:(Lorg/apache/pulsar/io/core/KeyValue;)Lorg/apache/pulsar/io/core/KeyValue;
      11: astore_3
      12: aload_0
      13: getfield      #2                  // Field writer:Lorg/apache/hadoop/io/SequenceFile$Writer;
      16: aload_3
      17: invokevirtual #8                  // Method org/apache/pulsar/io/core/KeyValue.getKey:()Ljava/lang/Object;
      20: aload_3
      21: invokevirtual #9                  // Method org/apache/pulsar/io/core/KeyValue.getValue:()Ljava/lang/Object;
      24: invokevirtual #10                 // Method org/apache/hadoop/io/SequenceFile$Writer.append:(Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #11                 // Field unackedRecords:Ljava/util/concurrent/BlockingQueue;
      31: aload_1
      32: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.put:(Ljava/lang/Object;)V
      37: goto          78
      40: astore_2
      41: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      44: new           #16                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #18                 // String Unable to write to file
      53: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #20                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      60: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: aload_2
      67: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      72: aload_1
      73: invokeinterface #24,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.fail:()V
      78: return
    Exception table:
       from    to  target type
           0    37    40   Class java/io/IOException
           0    37    40   Class java/lang/InterruptedException

  protected org.apache.hadoop.io.SequenceFile$Writer getWriter() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #25                 // class java/util/concurrent/atomic/AtomicLong
       4: dup
       5: lconst_0
       6: invokespecial #26                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       9: putfield      #27                 // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      12: aload_0
      13: invokevirtual #28                 // Method getOptions:()Ljava/util/List;
      16: astore_1
      17: aload_0
      18: invokevirtual #29                 // Method getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      21: aload_1
      22: aload_1
      23: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
      28: anewarray     #31                 // class org/apache/hadoop/io/SequenceFile$Writer$Option
      31: invokeinterface #32,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      36: checkcast     #33                 // class "[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;"
      39: invokestatic  #34                 // Method org/apache/hadoop/io/SequenceFile.createWriter:(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/io/SequenceFile$Writer$Option;)Lorg/apache/hadoop/io/SequenceFile$Writer;
      42: areturn

  protected java.util.List<org.apache.hadoop.io.SequenceFile$Writer$Option> getOptions() throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: new           #35                 // class java/util/ArrayList
       3: dup
       4: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #37                 // Method getHdfsStream:()Lorg/apache/hadoop/fs/FSDataOutputStream;
      13: invokestatic  #38                 // Method org/apache/hadoop/io/SequenceFile$Writer.stream:(Lorg/apache/hadoop/fs/FSDataOutputStream;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      16: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: invokevirtual #40                 // Method getCompressionCodec:()Lorg/apache/hadoop/io/compress/CompressionCodec;
      26: ifnull        46
      29: aload_1
      30: getstatic     #41                 // Field org/apache/hadoop/io/SequenceFile$CompressionType.RECORD:Lorg/apache/hadoop/io/SequenceFile$CompressionType;
      33: aload_0
      34: invokevirtual #40                 // Method getCompressionCodec:()Lorg/apache/hadoop/io/compress/CompressionCodec;
      37: invokestatic  #42                 // Method org/apache/hadoop/io/SequenceFile$Writer.compression:(Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer$Option;
      40: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_1
      47: areturn

  static {};
    Code:
       0: ldc           #43                 // class org/apache/pulsar/io/hdfs3/sink/seq/HdfsAbstractSequenceFileSink
       2: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
