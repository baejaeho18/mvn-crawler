Compiled from "UpdateServiceMain.java"
class software.amazon.awssdk.release.UpdateServiceMain$ServiceUpdater {
  private final java.lang.String serviceModuleName;

  private final java.lang.String serviceId;

  private final java.nio.file.Path mavenProjectRoot;

  private final java.nio.file.Path serviceJson;

  private final java.nio.file.Path paginatorsJson;

  private final java.nio.file.Path waitersJson;

  private software.amazon.awssdk.release.UpdateServiceMain$ServiceUpdater(org.apache.commons.cli.CommandLine);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #3                  // String maven-project-root
       8: invokevirtual #4                  // Method org/apache/commons/cli/CommandLine.getOptionValue:(Ljava/lang/String;)Ljava/lang/String;
      11: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      14: iconst_0
      15: anewarray     #6                  // class java/lang/String
      18: invokestatic  #7                  // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      21: putfield      #8                  // Field mavenProjectRoot:Ljava/nio/file/Path;
      24: aload_0
      25: aload_1
      26: ldc           #9                  // String service-id
      28: invokevirtual #4                  // Method org/apache/commons/cli/CommandLine.getOptionValue:(Ljava/lang/String;)Ljava/lang/String;
      31: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      34: putfield      #10                 // Field serviceId:Ljava/lang/String;
      37: aload_0
      38: aload_1
      39: ldc           #11                 // String service-module-name
      41: invokevirtual #4                  // Method org/apache/commons/cli/CommandLine.getOptionValue:(Ljava/lang/String;)Ljava/lang/String;
      44: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      47: putfield      #12                 // Field serviceModuleName:Ljava/lang/String;
      50: aload_0
      51: aload_1
      52: ldc           #13                 // String service-json
      54: invokevirtual #4                  // Method org/apache/commons/cli/CommandLine.getOptionValue:(Ljava/lang/String;)Ljava/lang/String;
      57: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      60: iconst_0
      61: anewarray     #6                  // class java/lang/String
      64: invokestatic  #7                  // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      67: putfield      #14                 // Field serviceJson:Ljava/nio/file/Path;
      70: aload_0
      71: aload_0
      72: aload_1
      73: ldc           #15                 // String paginators-json
      75: invokevirtual #4                  // Method org/apache/commons/cli/CommandLine.getOptionValue:(Ljava/lang/String;)Ljava/lang/String;
      78: invokespecial #16                 // Method optionalPath:(Ljava/lang/String;)Ljava/nio/file/Path;
      81: putfield      #17                 // Field paginatorsJson:Ljava/nio/file/Path;
      84: aload_0
      85: aload_0
      86: aload_1
      87: ldc           #18                 // String waiters-json
      89: invokevirtual #4                  // Method org/apache/commons/cli/CommandLine.getOptionValue:(Ljava/lang/String;)Ljava/lang/String;
      92: invokespecial #16                 // Method optionalPath:(Ljava/lang/String;)Ljava/nio/file/Path;
      95: putfield      #19                 // Field waitersJson:Ljava/nio/file/Path;
      98: return

  private java.nio.file.Path optionalPath(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method org/apache/commons/lang3/StringUtils.trimToNull:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: iconst_0
      11: anewarray     #6                  // class java/lang/String
      14: invokestatic  #7                  // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      17: areturn
      18: aconst_null
      19: areturn

  public void run() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field serviceJson:Ljava/nio/file/Path;
       4: iconst_0
       5: anewarray     #21                 // class java/nio/file/LinkOption
       8: invokestatic  #22                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      11: new           #23                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: getfield      #14                 // Field serviceJson:Ljava/nio/file/Path;
      22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #26                 // String  is not a file.
      27: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: iconst_0
      34: anewarray     #29                 // class java/lang/Object
      37: invokestatic  #30                 // Method software/amazon/awssdk/utils/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
      40: aload_0
      41: aload_0
      42: getfield      #12                 // Field serviceModuleName:Ljava/lang/String;
      45: aload_0
      46: getfield      #10                 // Field serviceId:Ljava/lang/String;
      49: invokespecial #31                 // Method codegenFileLocation:(Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;
      52: astore_1
      53: aload_0
      54: aload_0
      55: getfield      #14                 // Field serviceJson:Ljava/nio/file/Path;
      58: aload_1
      59: ldc           #32                 // String service-2.json
      61: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      66: invokespecial #34                 // Method copyFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      69: aload_0
      70: aload_0
      71: getfield      #17                 // Field paginatorsJson:Ljava/nio/file/Path;
      74: aload_1
      75: ldc           #35                 // String paginators-1.json
      77: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      82: invokespecial #34                 // Method copyFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      85: aload_0
      86: aload_0
      87: getfield      #19                 // Field waitersJson:Ljava/nio/file/Path;
      90: aload_1
      91: ldc           #36                 // String waiters-2.json
      93: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      98: invokespecial #34                 // Method copyFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
     101: return

  private java.nio.file.Path codegenFileLocation(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field mavenProjectRoot:Ljava/nio/file/Path;
       4: ldc           #37                 // String services
       6: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      11: aload_1
      12: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      17: ldc           #38                 // String src
      19: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      24: ldc           #39                 // String main
      26: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      31: ldc           #40                 // String resources
      33: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      38: ldc           #41                 // String codegen-resources
      40: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      45: astore_3
      46: aload_2
      47: astore        4
      49: iconst_m1
      50: istore        5
      52: aload         4
      54: invokevirtual #42                 // Method java/lang/String.hashCode:()I
      57: lookupswitch  { // 4
           -1698164957: 100
           -1299403909: 132
                 85692: 116
            1507925704: 148
               default: 161
          }
     100: aload         4
     102: ldc           #43                 // String WAF Regional
     104: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     107: ifeq          161
     110: iconst_0
     111: istore        5
     113: goto          161
     116: aload         4
     118: ldc           #45                 // String WAF
     120: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     123: ifeq          161
     126: iconst_1
     127: istore        5
     129: goto          161
     132: aload         4
     134: ldc           #46                 // String DynamoDB Streams
     136: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     139: ifeq          161
     142: iconst_2
     143: istore        5
     145: goto          161
     148: aload         4
     150: ldc           #47                 // String DynamoDB
     152: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     155: ifeq          161
     158: iconst_3
     159: istore        5
     161: iload         5
     163: tableswitch   { // 0 to 3
                     0: 192
                     1: 201
                     2: 210
                     3: 219
               default: 228
          }
     192: aload_3
     193: ldc           #48                 // String wafregional
     195: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     200: areturn
     201: aload_3
     202: ldc           #49                 // String waf
     204: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     209: areturn
     210: aload_3
     211: ldc           #50                 // String dynamodbstreams
     213: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     218: areturn
     219: aload_3
     220: ldc           #51                 // String dynamodb
     222: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     227: areturn
     228: aload_3
     229: areturn

  private void copyFile(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_1
       5: iconst_0
       6: anewarray     #21                 // class java/nio/file/LinkOption
       9: invokestatic  #22                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      12: ifeq          43
      15: invokestatic  #52                 // Method software/amazon/awssdk/release/UpdateServiceMain.access$100:()Lsoftware/amazon/awssdk/utils/Logger;
      18: aload_1
      19: aload_2
      20: invokedynamic #53,  0             // InvokeDynamic #0:get:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/Supplier;
      25: invokevirtual #54                 // Method software/amazon/awssdk/utils/Logger.info:(Ljava/util/function/Supplier;)V
      28: aload_1
      29: invokeinterface #55,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      34: aload_2
      35: invokeinterface #55,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      40: invokestatic  #56                 // Method org/apache/commons/io/FileUtils.copyFile:(Ljava/io/File;Ljava/io/File;)V
      43: return

  private static java.lang.String lambda$copyFile$0(java.nio.file.Path, java.nio.file.Path);
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #57                 // String Copying
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc           #58                 // String  to
      18: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn

  software.amazon.awssdk.release.UpdateServiceMain$ServiceUpdater(org.apache.commons.cli.CommandLine, software.amazon.awssdk.release.UpdateServiceMain$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/cli/CommandLine;)V
       5: return
}
