Compiled from "AbstractSockjsServiceProxyGenerator.java"
abstract class io.vertx.serviceproxy.sockjs.generator.AbstractSockjsServiceProxyGenerator extends io.vertx.codegen.Generator<io.vertx.serviceproxy.generator.model.ProxyModel> {
  io.vertx.serviceproxy.sockjs.generator.AbstractSockjsServiceProxyGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/vertx/codegen/Generator."<init>":()V
       4: aload_0
       5: ldc           #2                  // String sockjs_service_proxies
       7: putfield      #3                  // Field name:Ljava/lang/String;
      10: aload_0
      11: ldc           #4                  // String proxy
      13: invokestatic  #5                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      16: putfield      #6                  // Field kinds:Ljava/util/Set;
      19: return

  public java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> annotations();
    Code:
       0: iconst_2
       1: anewarray     #7                  // class java/lang/Class
       4: dup
       5: iconst_0
       6: ldc           #8                  // class io/vertx/codegen/annotations/VertxGen
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #9                  // class io/vertx/codegen/annotations/ModuleGen
      13: aastore
      14: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: areturn

  boolean methodFilter(io.vertx.codegen.MethodInfo);
    Code:
       0: aload_1
       1: checkcast     #11                 // class io/vertx/serviceproxy/generator/model/ProxyMethodInfo
       4: astore_2
       5: aload_2
       6: invokevirtual #12                 // Method io/vertx/serviceproxy/generator/model/ProxyMethodInfo.isProxyIgnore:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  protected void genLicenses(java.io.PrintWriter);
    Code:
       0: aload_1
       1: ldc           #13                 // String /*
       3: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
       6: aload_1
       7: ldc           #15                 // String  * Copyright 2014 Red Hat, Inc.
       9: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      12: aload_1
      13: ldc           #16                 // String  *
      15: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      18: aload_1
      19: ldc           #17                 // String  * Red Hat licenses this file to you under the Apache License, version 2.0
      21: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      24: aload_1
      25: ldc           #18                 // String  * (the \"License\"); you may not use this file except in compliance with the
      27: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      30: aload_1
      31: ldc           #19                 // String  * License.  You may obtain a copy of the License at:
      33: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      36: aload_1
      37: ldc           #16                 // String  *
      39: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      42: aload_1
      43: ldc           #20                 // String  * http://www.apache.org/licenses/LICENSE-2.0
      45: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      48: aload_1
      49: ldc           #16                 // String  *
      51: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      54: aload_1
      55: ldc           #21                 // String  * Unless required by applicable law or agreed to in writing, software
      57: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      60: aload_1
      61: ldc           #22                 // String  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
      63: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      66: aload_1
      67: ldc           #23                 // String  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
      69: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      72: aload_1
      73: ldc           #24                 // String  * License for the specific language governing permissions and limitations
      75: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      78: aload_1
      79: ldc           #25                 // String  * under the License.
      81: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      84: aload_1
      85: ldc           #26                 // String  */
      87: invokevirtual #14                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      90: return

  protected java.lang.String renderLinkToHtml(io.vertx.codegen.doc.Tag$Link);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method io/vertx/codegen/doc/Tag$Link.getTargetType:()Lio/vertx/codegen/type/TypeInfo;
       4: invokevirtual #28                 // Method io/vertx/codegen/type/TypeInfo.getRaw:()Lio/vertx/codegen/type/ClassTypeInfo;
       7: astore_2
       8: aload_2
       9: invokevirtual #29                 // Method io/vertx/codegen/type/ClassTypeInfo.getModule:()Lio/vertx/codegen/ModuleInfo;
      12: ifnull        332
      15: aload_1
      16: invokevirtual #30                 // Method io/vertx/codegen/doc/Tag$Link.getLabel:()Ljava/lang/String;
      19: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;
      22: astore_3
      23: aload_2
      24: invokevirtual #32                 // Method io/vertx/codegen/type/ClassTypeInfo.getKind:()Lio/vertx/codegen/type/ClassKind;
      27: getstatic     #33                 // Field io/vertx/codegen/type/ClassKind.DATA_OBJECT:Lio/vertx/codegen/type/ClassKind;
      30: if_acmpne     82
      33: aload_3
      34: invokevirtual #34                 // Method java/lang/String.length:()I
      37: ifne          45
      40: aload_2
      41: invokevirtual #35                 // Method io/vertx/codegen/type/ClassTypeInfo.getSimpleName:()Ljava/lang/String;
      44: astore_3
      45: new           #36                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #38                 // String <a href=\"../../dataobjects.html#
      54: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokevirtual #35                 // Method io/vertx/codegen/type/ClassTypeInfo.getSimpleName:()Ljava/lang/String;
      61: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #40                 // String \">
      66: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_3
      70: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: ldc           #41                 // String </a>
      75: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: areturn
      82: aload_2
      83: invokevirtual #32                 // Method io/vertx/codegen/type/ClassTypeInfo.getKind:()Lio/vertx/codegen/type/ClassKind;
      86: getstatic     #43                 // Field io/vertx/codegen/type/ClassKind.ENUM:Lio/vertx/codegen/type/ClassKind;
      89: if_acmpne     151
      92: aload_2
      93: checkcast     #44                 // class io/vertx/codegen/type/EnumTypeInfo
      96: invokevirtual #45                 // Method io/vertx/codegen/type/EnumTypeInfo.isGen:()Z
      99: ifeq          151
     102: aload_3
     103: invokevirtual #34                 // Method java/lang/String.length:()I
     106: ifne          114
     109: aload_2
     110: invokevirtual #35                 // Method io/vertx/codegen/type/ClassTypeInfo.getSimpleName:()Ljava/lang/String;
     113: astore_3
     114: new           #36                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #46                 // String <a href=\"../../enums.html#
     123: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_2
     127: invokevirtual #35                 // Method io/vertx/codegen/type/ClassTypeInfo.getSimpleName:()Ljava/lang/String;
     130: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #40                 // String \">
     135: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_3
     139: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: ldc           #41                 // String </a>
     144: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: areturn
     151: aload_3
     152: invokevirtual #34                 // Method java/lang/String.length:()I
     155: ifle          183
     158: new           #36                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     165: ldc           #47                 // String [
     167: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_3
     171: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: ldc           #48                 // String ]
     176: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: astore_3
     183: aload_1
     184: invokevirtual #49                 // Method io/vertx/codegen/doc/Tag$Link.getTargetElement:()Ljavax/lang/model/element/Element;
     187: astore        4
     189: aload_2
     190: invokevirtual #35                 // Method io/vertx/codegen/type/ClassTypeInfo.getSimpleName:()Ljava/lang/String;
     193: astore        5
     195: aload         4
     197: invokeinterface #50,  1           // InterfaceMethod javax/lang/model/element/Element.getKind:()Ljavax/lang/model/element/ElementKind;
     202: astore        6
     204: aload         6
     206: getstatic     #51                 // Field javax/lang/model/element/ElementKind.CLASS:Ljavax/lang/model/element/ElementKind;
     209: if_acmpeq     220
     212: aload         6
     214: getstatic     #52                 // Field javax/lang/model/element/ElementKind.INTERFACE:Ljavax/lang/model/element/ElementKind;
     217: if_acmpne     250
     220: new           #36                 // class java/lang/StringBuilder
     223: dup
     224: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     227: aload_3
     228: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: ldc           #53                 // String {@link
     233: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload         5
     238: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: ldc           #54                 // String }
     243: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: areturn
     250: aload         6
     252: getstatic     #55                 // Field javax/lang/model/element/ElementKind.METHOD:Ljavax/lang/model/element/ElementKind;
     255: if_acmpne     306
     258: new           #36                 // class java/lang/StringBuilder
     261: dup
     262: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     265: aload_3
     266: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: ldc           #53                 // String {@link
     271: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: aload         5
     276: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: ldc           #56                 // String #
     281: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: aload         4
     286: invokeinterface #57,  1           // InterfaceMethod javax/lang/model/element/Element.getSimpleName:()Ljavax/lang/model/element/Name;
     291: invokevirtual #58                 // Method java/lang/Object.toString:()Ljava/lang/String;
     294: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: ldc           #54                 // String }
     299: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     302: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     305: areturn
     306: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
     309: new           #36                 // class java/lang/StringBuilder
     312: dup
     313: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     316: ldc           #60                 // String Unhandled kind
     318: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: aload         6
     323: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     326: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     329: invokevirtual #62                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     332: aconst_null
     333: areturn

  protected java.lang.String getJSDocType(io.vertx.codegen.type.TypeInfo);
    Code:
       0: getstatic     #63                 // Field io/vertx/serviceproxy/sockjs/generator/AbstractSockjsServiceProxyGenerator$1.$SwitchMap$io$vertx$codegen$type$ClassKind:[I
       3: aload_1
       4: invokevirtual #64                 // Method io/vertx/codegen/type/TypeInfo.getKind:()Lio/vertx/codegen/type/ClassKind;
       7: invokevirtual #65                 // Method io/vertx/codegen/type/ClassKind.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 14
                     1: 80
                     2: 83
                     3: 83
                     4: 229
                     5: 229
                     6: 229
                     7: 229
                     8: 232
                     9: 235
                    10: 243
                    11: 279
                    12: 279
                    13: 282
                    14: 282
               default: 318
          }
      80: ldc           #66                 // String string
      82: areturn
      83: aload_1
      84: invokevirtual #67                 // Method io/vertx/codegen/type/TypeInfo.getSimpleName:()Ljava/lang/String;
      87: astore_2
      88: iconst_m1
      89: istore_3
      90: aload_2
      91: invokevirtual #68                 // Method java/lang/String.hashCode:()I
      94: lookupswitch  { // 4
            -726803703: 178
               3052374: 164
              64711720: 136
            1729365000: 150
               default: 189
          }
     136: aload_2
     137: ldc           #69                 // String boolean
     139: invokevirtual #70                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     142: ifeq          189
     145: iconst_0
     146: istore_3
     147: goto          189
     150: aload_2
     151: ldc           #71                 // String Boolean
     153: invokevirtual #70                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     156: ifeq          189
     159: iconst_1
     160: istore_3
     161: goto          189
     164: aload_2
     165: ldc           #72                 // String char
     167: invokevirtual #70                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     170: ifeq          189
     173: iconst_2
     174: istore_3
     175: goto          189
     178: aload_2
     179: ldc           #73                 // String Character
     181: invokevirtual #70                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     184: ifeq          189
     187: iconst_3
     188: istore_3
     189: iload_3
     190: tableswitch   { // 0 to 3
                     0: 220
                     1: 220
                     2: 223
                     3: 223
               default: 226
          }
     220: ldc           #69                 // String boolean
     222: areturn
     223: ldc           #66                 // String string
     225: areturn
     226: ldc           #74                 // String number
     228: areturn
     229: ldc           #75                 // String Object
     231: areturn
     232: ldc           #76                 // String Array
     234: areturn
     235: aload_1
     236: invokevirtual #28                 // Method io/vertx/codegen/type/TypeInfo.getRaw:()Lio/vertx/codegen/type/ClassTypeInfo;
     239: invokevirtual #35                 // Method io/vertx/codegen/type/ClassTypeInfo.getSimpleName:()Ljava/lang/String;
     242: areturn
     243: new           #36                 // class java/lang/StringBuilder
     246: dup
     247: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     250: ldc           #77                 // String Object.<string,
     252: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: aload_0
     256: aload_1
     257: checkcast     #78                 // class io/vertx/codegen/type/ParameterizedTypeInfo
     260: iconst_1
     261: invokevirtual #79                 // Method io/vertx/codegen/type/ParameterizedTypeInfo.getArg:(I)Lio/vertx/codegen/type/TypeInfo;
     264: invokevirtual #80                 // Method getJSDocType:(Lio/vertx/codegen/type/TypeInfo;)Ljava/lang/String;
     267: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: ldc           #81                 // String >
     272: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     275: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     278: areturn
     279: ldc           #82                 // String function
     281: areturn
     282: new           #36                 // class java/lang/StringBuilder
     285: dup
     286: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     289: ldc           #83                 // String Array.<
     291: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: aload_0
     295: aload_1
     296: checkcast     #78                 // class io/vertx/codegen/type/ParameterizedTypeInfo
     299: iconst_0
     300: invokevirtual #79                 // Method io/vertx/codegen/type/ParameterizedTypeInfo.getArg:(I)Lio/vertx/codegen/type/TypeInfo;
     303: invokevirtual #80                 // Method getJSDocType:(Lio/vertx/codegen/type/TypeInfo;)Ljava/lang/String;
     306: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: ldc           #81                 // String >
     311: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     317: areturn
     318: ldc           #84                 // String todo
     320: areturn
}
