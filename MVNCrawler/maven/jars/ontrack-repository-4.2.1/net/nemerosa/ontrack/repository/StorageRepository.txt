Compiled from "StorageRepository.kt"
public interface net.nemerosa.ontrack.repository.StorageRepository {
  public abstract int count(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, ?>);

  public abstract java.util.List<com.fasterxml.jackson.databind.JsonNode> filter(java.lang.String, int, int, java.lang.String, java.lang.String, java.util.Map<java.lang.String, ?>, java.lang.String);

  public abstract java.util.Map<java.lang.String, com.fasterxml.jackson.databind.JsonNode> filterRecords(java.lang.String, int, int, java.lang.String, java.lang.String, java.util.Map<java.lang.String, ?>, java.lang.String);

  public abstract void forEach(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, ?>, java.lang.String, kotlin.jvm.functions.Function2<? super java.lang.String, ? super com.fasterxml.jackson.databind.JsonNode, kotlin.Unit>);

  public abstract int deleteWithFilter(java.lang.String, java.lang.String, java.util.Map<java.lang.String, ?>);

  public abstract void storeJson(java.lang.String, java.lang.String, com.fasterxml.jackson.databind.JsonNode);

  public abstract com.fasterxml.jackson.databind.JsonNode retrieveJson(java.lang.String, java.lang.String);

  public abstract java.util.List<java.lang.String> getKeys(java.lang.String);

  public abstract java.util.Map<java.lang.String, com.fasterxml.jackson.databind.JsonNode> getData(java.lang.String);

  public abstract void delete(java.lang.String, java.lang.String);

  public abstract void clear(java.lang.String);

  public abstract boolean exists(java.lang.String, java.lang.String);
}
