Compiled from "StructureRepository.java"
public interface net.nemerosa.ontrack.repository.StructureRepository {
  public abstract net.nemerosa.ontrack.model.structure.Project newProject(net.nemerosa.ontrack.model.structure.Project);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.Project> getProjectList();

  public abstract net.nemerosa.ontrack.model.structure.Project findProjectByID(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.Project> findProjectsByNamePattern(java.lang.String);

  public abstract net.nemerosa.ontrack.model.structure.Project getProject(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.Project> getProjectByName(java.lang.String);

  public abstract void saveProject(net.nemerosa.ontrack.model.structure.Project);

  public abstract net.nemerosa.ontrack.model.Ack deleteProject(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.Branch findBranchByID(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.Branch getBranch(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.Branch> getBranchByName(java.lang.String, java.lang.String);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.Branch> getBranchesForProject(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.Branch newBranch(net.nemerosa.ontrack.model.structure.Branch);

  public abstract void saveBranch(net.nemerosa.ontrack.model.structure.Branch);

  public abstract net.nemerosa.ontrack.model.Ack deleteBranch(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.Build newBuild(net.nemerosa.ontrack.model.structure.Build);

  public abstract net.nemerosa.ontrack.model.structure.Build saveBuild(net.nemerosa.ontrack.model.structure.Build);

  public abstract net.nemerosa.ontrack.model.structure.Build findBuildByID(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.Build getBuild(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.Build> getBuildByName(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.Build> findBuildAfterUsingNumericForm(net.nemerosa.ontrack.model.structure.ID, java.lang.String);

  public abstract int getBuildCount(net.nemerosa.ontrack.model.structure.Branch);

  public abstract int getBuildCountForProject(net.nemerosa.ontrack.model.structure.Project);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.Build> getPreviousBuild(net.nemerosa.ontrack.model.structure.Build);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.Build> getNextBuild(net.nemerosa.ontrack.model.structure.Build);

  public default void builds(net.nemerosa.ontrack.model.structure.Branch, java.util.function.Predicate<net.nemerosa.ontrack.model.structure.Build>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #1                  // Field net/nemerosa/ontrack/model/structure/BuildSortDirection.FROM_NEWEST:Lnet/nemerosa/ontrack/model/structure/BuildSortDirection;
       6: invokeinterface #2,  4            // InterfaceMethod builds:(Lnet/nemerosa/ontrack/model/structure/Branch;Ljava/util/function/Predicate;Lnet/nemerosa/ontrack/model/structure/BuildSortDirection;)V
      11: return

  public abstract void builds(net.nemerosa.ontrack.model.structure.Branch, java.util.function.Predicate<net.nemerosa.ontrack.model.structure.Build>, net.nemerosa.ontrack.model.structure.BuildSortDirection);

  public abstract void builds(net.nemerosa.ontrack.model.structure.Project, java.util.function.Predicate<net.nemerosa.ontrack.model.structure.Build>);

  public abstract net.nemerosa.ontrack.model.structure.Build getLastBuildForBranch(net.nemerosa.ontrack.model.structure.Branch);

  public abstract net.nemerosa.ontrack.model.Ack deleteBuild(net.nemerosa.ontrack.model.structure.ID);

  public abstract void addBuildLink(net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.model.structure.ID);

  public abstract void deleteBuildLink(net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.Build> getBuildsUsedBy(net.nemerosa.ontrack.model.structure.Build);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.Build> getBuildsUsing(net.nemerosa.ontrack.model.structure.Build);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.Build> searchBuildsLinkedTo(java.lang.String, java.lang.String);

  public abstract boolean isLinkedFrom(net.nemerosa.ontrack.model.structure.ID, java.lang.String, java.lang.String);

  public abstract boolean isLinkedTo(net.nemerosa.ontrack.model.structure.ID, java.lang.String, java.lang.String);

  public abstract void forEachBuildLink(java.util.function.BiConsumer<net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.model.structure.Build>);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.PromotionLevel> getPromotionLevelListForBranch(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.PromotionLevel newPromotionLevel(net.nemerosa.ontrack.model.structure.PromotionLevel);

  public abstract net.nemerosa.ontrack.model.structure.PromotionLevel getPromotionLevel(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.PromotionLevel findPromotionLevelByID(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.PromotionLevel> getPromotionLevelByName(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.PromotionLevel> getPromotionLevelByName(net.nemerosa.ontrack.model.structure.Branch, java.lang.String);

  public abstract net.nemerosa.ontrack.common.Document getPromotionLevelImage(net.nemerosa.ontrack.model.structure.ID);

  public abstract void setPromotionLevelImage(net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.common.Document);

  public abstract void savePromotionLevel(net.nemerosa.ontrack.model.structure.PromotionLevel);

  public abstract net.nemerosa.ontrack.model.Ack deletePromotionLevel(net.nemerosa.ontrack.model.structure.ID);

  public abstract void reorderPromotionLevels(net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.model.structure.Reordering);

  public abstract net.nemerosa.ontrack.model.structure.PromotionRun newPromotionRun(net.nemerosa.ontrack.model.structure.PromotionRun);

  public abstract net.nemerosa.ontrack.model.structure.PromotionRun getPromotionRun(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.PromotionRun findPromotionRunByID(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.Ack deletePromotionRun(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.PromotionRun> getPromotionRunsForBuild(net.nemerosa.ontrack.model.structure.Build);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.PromotionRun> getLastPromotionRunsForBuild(net.nemerosa.ontrack.model.structure.Build);

  public abstract net.nemerosa.ontrack.model.structure.PromotionRun getLastPromotionRunForPromotionLevel(net.nemerosa.ontrack.model.structure.PromotionLevel);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.PromotionRun> getLastPromotionRun(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.model.structure.PromotionLevel);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.PromotionRun> getPromotionRunsForBuildAndPromotionLevel(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.model.structure.PromotionLevel);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.PromotionRun> getPromotionRunsForPromotionLevel(net.nemerosa.ontrack.model.structure.PromotionLevel);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.PromotionRun> getEarliestPromotionRunAfterBuild(net.nemerosa.ontrack.model.structure.PromotionLevel, net.nemerosa.ontrack.model.structure.Build);

  public abstract void bulkUpdatePromotionLevels(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ValidationStamp> getValidationStampListForBranch(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.ValidationStamp newValidationStamp(net.nemerosa.ontrack.model.structure.ValidationStamp);

  public abstract net.nemerosa.ontrack.model.structure.ValidationStamp getValidationStamp(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.ValidationStamp findValidationStampByID(net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.ValidationStamp> getValidationStampByName(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.util.Optional<net.nemerosa.ontrack.model.structure.ValidationStamp> getValidationStampByName(net.nemerosa.ontrack.model.structure.Branch, java.lang.String);

  public abstract net.nemerosa.ontrack.common.Document getValidationStampImage(net.nemerosa.ontrack.model.structure.ID);

  public abstract void setValidationStampImage(net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.common.Document);

  public abstract void bulkUpdateValidationStamps(net.nemerosa.ontrack.model.structure.ID);

  public abstract void saveValidationStamp(net.nemerosa.ontrack.model.structure.ValidationStamp);

  public abstract net.nemerosa.ontrack.model.Ack deleteValidationStamp(net.nemerosa.ontrack.model.structure.ID);

  public abstract void reorderValidationStamps(net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.model.structure.Reordering);

  public abstract void forEachValidationRun(java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>, java.util.function.Consumer<net.nemerosa.ontrack.model.structure.ValidationRun>);

  public abstract net.nemerosa.ontrack.model.structure.ValidationRun newValidationRun(net.nemerosa.ontrack.model.structure.ValidationRun, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract net.nemerosa.ontrack.model.structure.ValidationRun getValidationRun(net.nemerosa.ontrack.model.structure.ID, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract net.nemerosa.ontrack.model.structure.ValidationRun findValidationRunByID(net.nemerosa.ontrack.model.structure.ID, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ValidationRun> getValidationRunsForBuild(net.nemerosa.ontrack.model.structure.Build, int, int, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract int getValidationRunsCountForBuild(net.nemerosa.ontrack.model.structure.Build);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ValidationRun> getValidationRunsForBuildAndValidationStamp(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.model.structure.ValidationStamp, int, int, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ValidationRun> getValidationRunsForBuildAndValidationStampAndStatus(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.model.structure.ValidationStamp, java.util.List<net.nemerosa.ontrack.model.structure.ValidationRunStatusID>, int, int, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ValidationRun> getValidationRunsForValidationStamp(net.nemerosa.ontrack.model.structure.ValidationStamp, int, int, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ValidationRun> getValidationRunsForValidationStampAndStatus(net.nemerosa.ontrack.model.structure.ValidationStamp, java.util.List<net.nemerosa.ontrack.model.structure.ValidationRunStatusID>, int, int, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ValidationRun> getValidationRunsForStatus(net.nemerosa.ontrack.model.structure.Branch, java.util.List<net.nemerosa.ontrack.model.structure.ValidationRunStatusID>, int, int, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract int getValidationRunsCountForBuildAndValidationStamp(net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.model.structure.ID);

  public abstract int getValidationRunsCountForValidationStamp(net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.model.structure.ValidationRun newValidationRunStatus(net.nemerosa.ontrack.model.structure.ValidationRun, net.nemerosa.ontrack.model.structure.ValidationRunStatus);

  public abstract net.nemerosa.ontrack.model.structure.ValidationRun getParentValidationRun(net.nemerosa.ontrack.model.structure.ID, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract net.nemerosa.ontrack.model.structure.ValidationRunStatus getValidationRunStatus(net.nemerosa.ontrack.model.structure.ID, java.util.function.Function<java.lang.String, net.nemerosa.ontrack.model.structure.ValidationRunStatusID>);

  public abstract void saveValidationRunStatusComment(net.nemerosa.ontrack.model.structure.ValidationRunStatus, java.lang.String);
}
