Compiled from "PropertyRepository.kt"
public interface net.nemerosa.ontrack.repository.PropertyRepository {
  public abstract boolean hasProperty(java.lang.String, net.nemerosa.ontrack.model.structure.ProjectEntityType, net.nemerosa.ontrack.model.structure.ID);

  public abstract net.nemerosa.ontrack.repository.TProperty loadProperty(java.lang.String, net.nemerosa.ontrack.model.structure.ProjectEntityType, net.nemerosa.ontrack.model.structure.ID);

  public abstract void saveProperty(java.lang.String, net.nemerosa.ontrack.model.structure.ProjectEntityType, net.nemerosa.ontrack.model.structure.ID, com.fasterxml.jackson.databind.JsonNode);

  public abstract net.nemerosa.ontrack.model.Ack deleteProperty(java.lang.String, net.nemerosa.ontrack.model.structure.ProjectEntityType, net.nemerosa.ontrack.model.structure.ID);

  public abstract java.util.Collection<net.nemerosa.ontrack.model.structure.ProjectEntity> searchByProperty(java.lang.String, java.util.function.BiFunction<net.nemerosa.ontrack.model.structure.ProjectEntityType, net.nemerosa.ontrack.model.structure.ID, net.nemerosa.ontrack.model.structure.ProjectEntity>, java.util.function.Predicate<net.nemerosa.ontrack.repository.TProperty>);

  public abstract net.nemerosa.ontrack.model.structure.ID findBuildByBranchAndSearchkey(net.nemerosa.ontrack.model.structure.ID, java.lang.String, net.nemerosa.ontrack.model.structure.PropertySearchArguments);

  public abstract java.util.List<net.nemerosa.ontrack.model.structure.ID> findByEntityTypeAndSearchArguments(net.nemerosa.ontrack.model.structure.ProjectEntityType, java.lang.String, net.nemerosa.ontrack.model.structure.PropertySearchArguments);

  public abstract void forEachEntityWithProperty(java.lang.String, kotlin.jvm.functions.Function1<? super net.nemerosa.ontrack.repository.TProperty, kotlin.Unit>);
}
