Compiled from "WikiScannerUtil.java"
public class org.xwiki.rendering.wikimodel.impl.WikiScannerUtil {
  private static final char DEFAULT_ESCAPECHAR;

  public org.xwiki.rendering.wikimodel.impl.WikiScannerUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String extractSubstring(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: bipush        92
       5: iconst_1
       6: invokestatic  #3                  // Method extractSubstring:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;CZ)Ljava/lang/String;
       9: areturn

  public static java.lang.String extractSubstring(java.lang.String, java.lang.String, java.lang.String, char);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_1
       5: invokestatic  #3                  // Method extractSubstring:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;CZ)Ljava/lang/String;
       8: areturn

  public static java.lang.String extractSubstring(java.lang.String, java.lang.String, java.lang.String, char, boolean);
    Code:
       0: new           #4                  // class java/lang/StringBuffer
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuffer."<init>":()V
       7: astore        6
       9: aload_0
      10: invokevirtual #6                  // Method java/lang/String.length:()I
      13: istore        7
      15: iconst_0
      16: istore        5
      18: iload         5
      20: iload         7
      22: if_icmpge     53
      25: aload_0
      26: aload_1
      27: iload         5
      29: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      32: ifeq          47
      35: iload         5
      37: aload_1
      38: invokevirtual #6                  // Method java/lang/String.length:()I
      41: iadd
      42: istore        5
      44: goto          53
      47: iinc          5, 1
      50: goto          18
      53: iconst_0
      54: istore        8
      56: iload         5
      58: iload         7
      60: if_icmpge     148
      63: iload         8
      65: ifeq          90
      68: aload_0
      69: iload         5
      71: invokevirtual #8                  // Method java/lang/String.charAt:(I)C
      74: istore        9
      76: aload         6
      78: iload         9
      80: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      83: pop
      84: iconst_0
      85: istore        8
      87: goto          142
      90: aload_0
      91: aload_2
      92: iload         5
      94: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      97: ifeq          103
     100: goto          148
     103: aload_0
     104: iload         5
     106: invokevirtual #8                  // Method java/lang/String.charAt:(I)C
     109: istore        9
     111: iload         9
     113: iload_3
     114: if_icmpne     121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: istore        8
     124: iload         8
     126: ifeq          134
     129: iload         4
     131: ifne          142
     134: aload         6
     136: iload         9
     138: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     141: pop
     142: iinc          5, 1
     145: goto          56
     148: aload         6
     150: invokevirtual #10                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     153: areturn

  public static int getNextSequence(char[], int, char[], java.lang.StringBuffer);
    Code:
       0: aload_3
       1: iconst_0
       2: aload_3
       3: invokevirtual #11                 // Method java/lang/StringBuffer.length:()I
       6: invokevirtual #12                 // Method java/lang/StringBuffer.delete:(II)Ljava/lang/StringBuffer;
       9: pop
      10: iconst_0
      11: istore        4
      13: iload_1
      14: aload_0
      15: arraylength
      16: if_icmpge     89
      19: aload_0
      20: iload_1
      21: caload
      22: istore        5
      24: iload         4
      26: ifeq          42
      29: iload         5
      31: iload         4
      33: if_icmpne     76
      36: iconst_0
      37: istore        4
      39: goto          76
      42: iload         5
      44: bipush        34
      46: if_icmpne     56
      49: iload         5
      51: istore        4
      53: goto          76
      56: aload_0
      57: iload_1
      58: aload_2
      59: invokestatic  #13                 // Method skipSequence:([CI[C)I
      62: istore        6
      64: iload         6
      66: iload_1
      67: if_icmple     76
      70: iload         6
      72: istore_1
      73: goto          89
      76: aload_3
      77: iload         5
      79: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      82: pop
      83: iinc          1, 1
      86: goto          13
      89: iload_1
      90: ireturn

  private static int getNextToken(char[], int, char[], java.lang.StringBuffer, boolean[], char);
    Code:
       0: aload_3
       1: iconst_0
       2: aload_3
       3: invokevirtual #11                 // Method java/lang/StringBuffer.length:()I
       6: invokevirtual #12                 // Method java/lang/StringBuffer.delete:(II)Ljava/lang/StringBuffer;
       9: pop
      10: iconst_0
      11: istore        6
      13: iload_1
      14: aload_0
      15: arraylength
      16: if_icmpge     132
      19: aload_0
      20: iload_1
      21: caload
      22: bipush        39
      24: if_icmpeq     35
      27: aload_0
      28: iload_1
      29: caload
      30: bipush        34
      32: if_icmpne     132
      35: aload         4
      37: iconst_0
      38: iconst_0
      39: bastore
      40: aload_0
      41: iload_1
      42: caload
      43: istore        7
      45: iinc          1, 1
      48: iload_1
      49: aload_0
      50: arraylength
      51: if_icmpge     120
      54: iload         6
      56: ifne          67
      59: aload_0
      60: iload_1
      61: caload
      62: iload         7
      64: if_icmpeq     120
      67: iload         6
      69: ifeq          86
      72: aload_3
      73: aload_0
      74: iload_1
      75: caload
      76: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      79: pop
      80: iconst_0
      81: istore        6
      83: goto          114
      86: aload_0
      87: iload_1
      88: caload
      89: iload         5
      91: if_icmpne     98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: istore        6
     101: iload         6
     103: ifne          114
     106: aload_3
     107: aload_0
     108: iload_1
     109: caload
     110: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     113: pop
     114: iinc          1, 1
     117: goto          48
     120: iload_1
     121: aload_0
     122: arraylength
     123: if_icmpge     129
     126: iinc          1, 1
     129: goto          236
     132: aload         4
     134: iconst_0
     135: iconst_1
     136: bastore
     137: iload_1
     138: aload_0
     139: arraylength
     140: if_icmpge     236
     143: iload         6
     145: ifeq          162
     148: aload_3
     149: aload_0
     150: iload_1
     151: caload
     152: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     155: pop
     156: iconst_0
     157: istore        6
     159: goto          230
     162: aload_0
     163: iload_1
     164: caload
     165: bipush        61
     167: if_icmpeq     236
     170: aload_0
     171: iload_1
     172: aload_2
     173: invokestatic  #13                 // Method skipSequence:([CI[C)I
     176: iload_1
     177: if_icmple     183
     180: goto          236
     183: aload_0
     184: iload_1
     185: caload
     186: bipush        39
     188: if_icmpeq     236
     191: aload_0
     192: iload_1
     193: caload
     194: bipush        34
     196: if_icmpne     202
     199: goto          236
     202: aload_0
     203: iload_1
     204: caload
     205: iload         5
     207: if_icmpne     214
     210: iconst_1
     211: goto          215
     214: iconst_0
     215: istore        6
     217: iload         6
     219: ifne          230
     222: aload_3
     223: aload_0
     224: iload_1
     225: caload
     226: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     229: pop
     230: iinc          1, 1
     233: goto          137
     236: iload_1
     237: ireturn

  public static boolean matchesSequence(char[], int, char[]);
    Code:
       0: iload_1
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload_3
       6: aload_0
       7: arraylength
       8: if_icmpge     40
      11: iload         4
      13: aload_2
      14: arraylength
      15: if_icmpge     40
      18: aload_0
      19: iload_3
      20: caload
      21: aload_2
      22: iload         4
      24: caload
      25: if_icmpeq     31
      28: goto          40
      31: iinc          3, 1
      34: iinc          4, 1
      37: goto          5
      40: iload         4
      42: aload_2
      43: arraylength
      44: if_icmpne     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  private static int removeSpaces(char[], int, java.lang.StringBuffer);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_2
       3: invokevirtual #11                 // Method java/lang/StringBuffer.length:()I
       6: invokevirtual #12                 // Method java/lang/StringBuffer.delete:(II)Ljava/lang/StringBuffer;
       9: pop
      10: iload_1
      11: aload_0
      12: arraylength
      13: if_icmpge     55
      16: aload_0
      17: iload_1
      18: caload
      19: bipush        61
      21: if_icmpeq     33
      24: aload_0
      25: iload_1
      26: caload
      27: invokestatic  #14                 // Method java/lang/Character.isSpaceChar:(C)Z
      30: ifeq          55
      33: aload_0
      34: iload_1
      35: caload
      36: bipush        61
      38: if_icmpne     49
      41: aload_2
      42: aload_0
      43: iload_1
      44: caload
      45: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      48: pop
      49: iinc          1, 1
      52: goto          10
      55: iload_1
      56: ireturn

  public static int skipSequence(char[], int, char[]);
    Code:
       0: iload_1
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload_3
       6: aload_0
       7: arraylength
       8: if_icmpge     40
      11: iload         4
      13: aload_2
      14: arraylength
      15: if_icmpge     40
      18: aload_0
      19: iload_3
      20: caload
      21: aload_2
      22: iload         4
      24: caload
      25: if_icmpeq     31
      28: goto          40
      31: iinc          3, 1
      34: iinc          4, 1
      37: goto          5
      40: iload         4
      42: aload_2
      43: arraylength
      44: if_icmpne     51
      47: iload_3
      48: goto          52
      51: iload_1
      52: ireturn

  public static int splitToPairs(java.lang.String, java.util.List<org.xwiki.rendering.wikimodel.WikiParameter>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #15                 // Method splitToPairs:(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)I
       6: ireturn

  public static int splitToPairs(java.lang.String, java.util.List<org.xwiki.rendering.wikimodel.WikiParameter>, char);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: iload_2
       5: invokestatic  #16                 // Method splitToPairs:(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;C)I
       8: ireturn

  public static int splitToPairs(java.lang.String, java.util.List<org.xwiki.rendering.wikimodel.WikiParameter>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokestatic  #17                 // Method splitToPairs:(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)I
       7: ireturn

  public static int splitToPairs(java.lang.String, java.util.List<org.xwiki.rendering.wikimodel.WikiParameter>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: bipush        92
       6: invokestatic  #16                 // Method splitToPairs:(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;C)I
       9: ireturn

  public static int splitToPairs(java.lang.String, java.util.List<org.xwiki.rendering.wikimodel.WikiParameter>, java.lang.String, java.lang.String, char);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #18                 // Method java/lang/String.toCharArray:()[C
      10: astore        5
      12: aload_2
      13: ifnonnull     19
      16: ldc           #19                 // String
      18: astore_2
      19: aload_2
      20: invokevirtual #18                 // Method java/lang/String.toCharArray:()[C
      23: astore        6
      25: aload_3
      26: ifnull        36
      29: aload_3
      30: invokevirtual #18                 // Method java/lang/String.toCharArray:()[C
      33: goto          39
      36: iconst_0
      37: newarray       char
      39: astore        7
      41: new           #4                  // class java/lang/StringBuffer
      44: dup
      45: invokespecial #5                  // Method java/lang/StringBuffer."<init>":()V
      48: astore        8
      50: iconst_0
      51: istore        9
      53: iconst_1
      54: newarray       boolean
      56: dup
      57: iconst_0
      58: iconst_0
      59: bastore
      60: astore        10
      62: iload         9
      64: aload         5
      66: arraylength
      67: if_icmpge     283
      70: aconst_null
      71: astore        11
      73: aconst_null
      74: astore        12
      76: aload         5
      78: iload         9
      80: aload         8
      82: invokestatic  #20                 // Method removeSpaces:([CILjava/lang/StringBuffer;)I
      85: istore        9
      87: iload         9
      89: aload         5
      91: arraylength
      92: if_icmplt     98
      95: goto          283
      98: iload         9
     100: istore        13
     102: aload         5
     104: iload         9
     106: aload         6
     108: invokestatic  #13                 // Method skipSequence:([CI[C)I
     111: istore        9
     113: iload         9
     115: aload         5
     117: arraylength
     118: if_icmplt     124
     121: goto          283
     124: iload         9
     126: iload         13
     128: if_icmple     153
     131: aload         5
     133: iload         9
     135: aload         8
     137: invokestatic  #20                 // Method removeSpaces:([CILjava/lang/StringBuffer;)I
     140: istore        9
     142: iload         9
     144: aload         5
     146: arraylength
     147: if_icmplt     153
     150: goto          283
     153: aload_3
     154: ifnull        172
     157: aload         5
     159: iload         9
     161: aload         7
     163: invokestatic  #21                 // Method matchesSequence:([CI[C)Z
     166: ifeq          172
     169: goto          283
     172: aload         5
     174: iload         9
     176: aload         6
     178: aload         8
     180: aload         10
     182: iload         4
     184: invokestatic  #22                 // Method getNextToken:([CI[CLjava/lang/StringBuffer;[ZC)I
     187: istore        9
     189: aload         8
     191: invokevirtual #10                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     194: invokevirtual #23                 // Method java/lang/String.trim:()Ljava/lang/String;
     197: astore        11
     199: aload         5
     201: iload         9
     203: aload         8
     205: invokestatic  #20                 // Method removeSpaces:([CILjava/lang/StringBuffer;)I
     208: istore        9
     210: aload         8
     212: ldc           #24                 // String =
     214: invokevirtual #25                 // Method java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I
     217: iflt          258
     220: aload         5
     222: iload         9
     224: aload         6
     226: aload         8
     228: aload         10
     230: iload         4
     232: invokestatic  #22                 // Method getNextToken:([CI[CLjava/lang/StringBuffer;[ZC)I
     235: istore        9
     237: aload         8
     239: invokevirtual #10                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     242: astore        12
     244: aload         10
     246: iconst_0
     247: baload
     248: ifeq          258
     251: aload         12
     253: invokevirtual #23                 // Method java/lang/String.trim:()Ljava/lang/String;
     256: astore        12
     258: new           #26                 // class org/xwiki/rendering/wikimodel/WikiParameter
     261: dup
     262: aload         11
     264: aload         12
     266: invokespecial #27                 // Method org/xwiki/rendering/wikimodel/WikiParameter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     269: astore        14
     271: aload_1
     272: aload         14
     274: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     279: pop
     280: goto          62
     283: iload         9
     285: ireturn

  public static java.lang.String unescape(java.lang.String);
    Code:
       0: aload_0
       1: bipush        92
       3: invokestatic  #29                 // Method unescape:(Ljava/lang/String;C)Ljava/lang/String;
       6: areturn

  public static java.lang.String unescape(java.lang.String, char);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #30                 // String
       6: areturn
       7: new           #4                  // class java/lang/StringBuffer
      10: dup
      11: invokespecial #5                  // Method java/lang/StringBuffer."<init>":()V
      14: astore_2
      15: aload_0
      16: invokevirtual #18                 // Method java/lang/String.toCharArray:()[C
      19: astore_3
      20: iconst_0
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: aload_3
      29: arraylength
      30: if_icmpge     88
      33: aload_3
      34: iload         5
      36: caload
      37: istore        6
      39: iload         4
      41: ifeq          57
      44: aload_2
      45: iload         6
      47: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      50: pop
      51: iconst_0
      52: istore        4
      54: goto          82
      57: iload         6
      59: iload_1
      60: if_icmpne     67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: istore        4
      70: iload         4
      72: ifne          82
      75: aload_2
      76: iload         6
      78: invokevirtual #9                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      81: pop
      82: iinc          5, 1
      85: goto          26
      88: aload_2
      89: invokevirtual #10                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      92: areturn
}
