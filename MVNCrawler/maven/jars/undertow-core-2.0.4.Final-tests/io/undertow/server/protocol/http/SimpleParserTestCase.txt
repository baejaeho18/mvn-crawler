Compiled from "SimpleParserTestCase.java"
public class io.undertow.server.protocol.http.SimpleParserTestCase {
  private final io.undertow.server.protocol.http.ParseState parseState;

  public io.undertow.server.protocol.http.SimpleParserTestCase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/server/protocol/http/ParseState
       8: dup
       9: iconst_m1
      10: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      13: putfield      #4                  // Field parseState:Lio/undertow/server/protocol/http/ParseState;
      16: return

  public void testEncodedSlashDisallowed() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #5                  // String GET /somepath%2FotherPath HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      28: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      31: aload_1
      32: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      35: aload_2
      36: aload_3
      37: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      40: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      43: aload_3
      44: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      47: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      50: ldc           #16                 // String /somepath%2FotherPath
      52: aload_3
      53: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      56: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: ldc           #16                 // String /somepath%2FotherPath
      61: aload_3
      62: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      65: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      68: return

  public void testEncodedSlashAllowed() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #20                 // String GET /somepath%2fotherPath HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #21                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      28: iconst_1
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      35: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      38: aload_1
      39: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: aload_2
      43: aload_3
      44: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      47: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      50: aload_3
      51: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      54: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: ldc           #24                 // String /somepath/otherPath
      59: aload_3
      60: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      63: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      66: ldc           #25                 // String /somepath%2fotherPath
      68: aload_3
      69: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      72: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: return

  public void testColonSlashInURL() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #26                 // String GET /a/http://myurl.com/b/c HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #21                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      28: iconst_1
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      35: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      38: aload_1
      39: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: aload_2
      43: aload_3
      44: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      47: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      50: aload_3
      51: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      54: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: ldc           #27                 // String /a/http://myurl.com/b/c
      59: aload_3
      60: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      63: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      66: ldc           #27                 // String /a/http://myurl.com/b/c
      68: aload_3
      69: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      72: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: return

  public void testColonSlashInFullURL() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #28                 // String GET http://foo.com/a/http://myurl.com/b/c HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #21                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      28: iconst_1
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      35: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      38: aload_1
      39: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: aload_2
      43: aload_3
      44: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      47: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      50: aload_3
      51: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      54: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: ldc           #27                 // String /a/http://myurl.com/b/c
      59: aload_3
      60: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      63: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      66: ldc           #29                 // String http://foo.com/a/http://myurl.com/b/c
      68: aload_3
      69: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      72: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: return

  public void testPathParameters() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #30                 // String GET /somepath;p1 HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #21                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      28: iconst_1
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      35: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      38: aload_1
      39: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: aload_2
      43: aload_3
      44: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      47: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      50: aload_3
      51: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      54: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: ldc           #31                 // String /somepath
      59: aload_3
      60: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      63: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      66: ldc           #32                 // String /somepath;p1
      68: aload_3
      69: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      72: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: aload_3
      76: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.getPathParameters:()Ljava/util/Map;
      79: ldc           #34                 // String p1
      81: invokeinterface #35,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      86: invokestatic  #36                 // Method org/junit/Assert.assertTrue:(Z)V
      89: ldc           #37                 // String GET /somepath;p1=v1&p2=v2?q1=v3 HTTP/1.1\r\n\r\n
      91: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
      94: astore_1
      95: new           #2                  // class io/undertow/server/protocol/http/ParseState
      98: dup
      99: bipush        10
     101: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
     104: astore_2
     105: new           #7                  // class io/undertow/server/HttpServerExchange
     108: dup
     109: aconst_null
     110: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
     113: astore_3
     114: getstatic     #21                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
     117: iconst_1
     118: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     121: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
     124: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
     127: aload_1
     128: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     131: aload_2
     132: aload_3
     133: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     136: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
     139: aload_3
     140: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
     143: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
     146: ldc           #31                 // String /somepath
     148: aload_3
     149: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
     152: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     155: ldc           #38                 // String /somepath;p1=v1&p2=v2
     157: aload_3
     158: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
     161: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     164: ldc           #39                 // String q1=v3
     166: aload_3
     167: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
     170: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     173: ldc           #41                 // String v1
     175: aload_3
     176: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.getPathParameters:()Ljava/util/Map;
     179: ldc           #34                 // String p1
     181: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     186: checkcast     #43                 // class java/util/Deque
     189: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     194: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     197: ldc           #45                 // String v2
     199: aload_3
     200: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.getPathParameters:()Ljava/util/Map;
     203: ldc           #46                 // String p2
     205: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     210: checkcast     #43                 // class java/util/Deque
     213: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     218: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     221: ldc           #47                 // String v3
     223: aload_3
     224: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     227: ldc           #49                 // String q1
     229: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     234: checkcast     #43                 // class java/util/Deque
     237: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     242: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     245: return

  public void testFullUrlRootPath() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #50                 // String GET http://myurl.com HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #21                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      28: iconst_1
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      35: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      38: aload_1
      39: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: aload_2
      43: aload_3
      44: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      47: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      50: aload_3
      51: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      54: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: ldc           #51                 // String /
      59: aload_3
      60: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      63: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      66: ldc           #52                 // String http://myurl.com
      68: aload_3
      69: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      72: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: return

  public void testLineEndingInsteadOfSpacesAfterVerb() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #53                 // String GET\r/somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testLineEndingInsteadOfSpacesAfterPath() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #55                 // String GET /somepath\rHTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testLineEndingInsteadOfSpacesAfterVerb2() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #56                 // String GET\n/somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testLineEndingInsteadOfSpacesAfterVerb3() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #57                 // String FOO\n/somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testLineEndingInsteadOfSpacesAfterPath2() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #58                 // String GET /somepath\nHTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testSimpleRequest() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #59                 // String GET /somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testTabInsteadOfSpaceAfterVerb() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #60                 // String GET\t/somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testTabInsteadOfSpaceAfterVerb2() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #61                 // String FOO\t/somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testTabInsteadOfSpaceAfterPath() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #60                 // String GET\t/somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testInvalidCharacterInPath() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #62                 // String GET /some>path HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testInvalidCharacterInQueryString1() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #63                 // String GET /somepath?foo>f=bar HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testInvalidCharacterInQueryString2() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #64                 // String GET /somepath?foo=ba>r HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testInvalidCharacterInPathParam1() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #65                 // String GET /somepath;foo>f=bar HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testInvalidCharacterInPathParam2() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #66                 // String GET /somepath;foo=ba>r HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testSimpleRequestWithHeaderCaching() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #67                 // String GET /somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: foo\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: ldc           #68                 // String foo
      10: invokespecial #69                 // Method runTest:([BLjava/lang/String;)V
      13: ldc           #70                 // String GET /somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader:       foo\r\n\r\n
      15: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
      18: astore_1
      19: aload_0
      20: aload_1
      21: ldc           #68                 // String foo
      23: invokespecial #69                 // Method runTest:([BLjava/lang/String;)V
      26: ldc           #71                 // String GET /somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader:      some value\r\n\r\n
      28: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
      31: astore_1
      32: aload_0
      33: aload_1
      34: invokespecial #54                 // Method runTest:([B)V
      37: ldc           #72                 // String GET /somepath HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some value\r\n\r\n
      39: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
      42: astore_1
      43: aload_0
      44: aload_1
      45: invokespecial #54                 // Method runTest:([B)V
      48: return

  public void testCarriageReturnLineEnds() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #73                 // String GET /somepath HTTP/1.1\rHost:   www.somehost.net\rOtherHeader: some\r    value\r\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testLineFeedsLineEnds() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #74                 // String GET /somepath HTTP/1.1\nHost:   www.somehost.net\nOtherHeader: some\n    value\n\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testTabWhitespace() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #75                 // String GET\t/somepath\tHTTP/1.1\nHost: \t www.somehost.net\nOtherHeader:\tsome\n \t  value\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method runTest:([B)V
      11: return

  public void testCanonicalPath() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #76                 // String GET http://www.somehost.net/somepath HTTP/1.1\nHost: \t www.somehost.net\nOtherHeader:\tsome\n \t  value\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: iconst_5
      11: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      14: astore_2
      15: new           #7                  // class io/undertow/server/HttpServerExchange
      18: dup
      19: aconst_null
      20: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      23: astore_3
      24: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      27: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      30: aload_1
      31: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      34: aload_2
      35: aload_3
      36: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      39: ldc           #31                 // String /somepath
      41: aload_3
      42: invokevirtual #77                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      45: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      48: ldc           #78                 // String http://www.somehost.net/somepath
      50: aload_3
      51: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      54: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: return

  public void testNoHeaders() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #79                 // String GET /aa HTTP/1.1\n\n\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: iconst_0
      11: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      14: astore_2
      15: new           #7                  // class io/undertow/server/HttpServerExchange
      18: dup
      19: aconst_null
      20: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      23: astore_3
      24: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      27: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      30: aload_1
      31: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      34: aload_2
      35: aload_3
      36: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      39: aload_2
      40: invokevirtual #80                 // Method io/undertow/server/protocol/http/ParseState.isComplete:()Z
      43: invokestatic  #36                 // Method org/junit/Assert.assertTrue:(Z)V
      46: ldc           #81                 // String /aa
      48: aload_3
      49: invokevirtual #77                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      52: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      55: return

  public void testQueryParams() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #82                 // String GET http://www.somehost.net/somepath?a=b&b=c&d&e&f= HTTP/1.1\nHost: \t www.somehost.net\nOtherHeader:\tsome\n \t  value\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      28: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      31: aload_1
      32: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      35: aload_2
      36: aload_3
      37: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      40: ldc           #31                 // String /somepath
      42: aload_3
      43: invokevirtual #77                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      46: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      49: ldc           #78                 // String http://www.somehost.net/somepath
      51: aload_3
      52: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      55: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      58: ldc           #83                 // String a=b&b=c&d&e&f=
      60: aload_3
      61: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
      64: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      67: ldc           #84                 // String b
      69: aload_3
      70: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
      73: ldc           #85                 // String a
      75: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      80: checkcast     #43                 // class java/util/Deque
      83: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
      88: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      91: ldc           #86                 // String c
      93: aload_3
      94: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
      97: ldc           #84                 // String b
      99: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #43                 // class java/util/Deque
     107: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     112: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     115: ldc           #87                 // String
     117: aload_3
     118: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     121: ldc           #88                 // String d
     123: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #43                 // class java/util/Deque
     131: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     136: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     139: ldc           #87                 // String
     141: aload_3
     142: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     145: ldc           #89                 // String e
     147: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     152: checkcast     #43                 // class java/util/Deque
     155: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     160: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     163: ldc           #87                 // String
     165: aload_3
     166: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     169: ldc           #90                 // String f
     171: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     176: checkcast     #43                 // class java/util/Deque
     179: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     184: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     187: return

  public void testSameHttpStringReturned() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #91                 // String GET http://www.somehost.net/somepath HTTP/1.1\nHost: \t www.somehost.net\nAccept-Charset:\tsome\n \t  value\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      28: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      31: aload_1
      32: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      35: aload_2
      36: aload_3
      37: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      40: new           #2                  // class io/undertow/server/protocol/http/ParseState
      43: dup
      44: bipush        10
      46: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      49: astore        4
      51: new           #7                  // class io/undertow/server/HttpServerExchange
      54: dup
      55: aconst_null
      56: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      59: astore        5
      61: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      64: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      67: aload_1
      68: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      71: aload         4
      73: aload         5
      75: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      78: aload_3
      79: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
      82: aload         5
      84: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
      87: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      90: aload_3
      91: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      94: aload         5
      96: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      99: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
     102: aload_3
     103: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     106: invokevirtual #94                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     109: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     114: astore        6
     116: aload         6
     118: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     123: ifeq          240
     126: aload         6
     128: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     133: checkcast     #98                 // class io/undertow/util/HttpString
     136: astore        7
     138: iconst_0
     139: istore        8
     141: aload_3
     142: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     145: invokevirtual #94                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     148: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     153: astore        9
     155: aload         9
     157: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     162: ifeq          193
     165: aload         9
     167: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     172: checkcast     #98                 // class io/undertow/util/HttpString
     175: astore        10
     177: aload         7
     179: aload         10
     181: if_acmpne     190
     184: iconst_1
     185: istore        8
     187: goto          193
     190: goto          155
     193: aload         7
     195: getstatic     #99                 // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
     198: invokevirtual #100                // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     201: ifeq          212
     204: getstatic     #99                 // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
     207: aload         7
     209: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
     212: new           #101                // class java/lang/StringBuilder
     215: dup
     216: invokespecial #102                // Method java/lang/StringBuilder."<init>":()V
     219: ldc           #103                // String Could not found header
     221: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: aload         7
     226: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     229: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     232: iload         8
     234: invokestatic  #107                // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
     237: goto          116
     240: return

  public void testPlusSignVsSpaceEncodingInPath() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #108                // String GET http://myurl.com/+/mypath%20with%20spaces HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #21                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      28: iconst_1
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      35: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      38: aload_1
      39: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: aload_2
      43: aload_3
      44: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      47: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      50: aload_3
      51: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      54: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: ldc           #109                // String + in path shouldn\'t be treated as space, caused probably by https://issues.jboss.org/browse/UNDERTOW-1193
      59: ldc           #110                // String /+/mypath with spaces
      61: aload_3
      62: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      65: invokestatic  #111                // Method org/junit/Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      68: ldc           #112                // String http://myurl.com/+/mypath%20with%20spaces
      70: aload_3
      71: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      74: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      77: return

  public void testEmptyQueryParams() throws io.undertow.util.BadRequestException;
    Code:
       0: ldc           #113                // String GET /clusterbench/requestinfo//?;?=44&test=OK;devil=3&&&&&&&&&&&&&&&&&&&&&&&&&&&&777=666 HTTP/1.1\r\n\r\n
       2: invokevirtual #6                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: new           #2                  // class io/undertow/server/protocol/http/ParseState
       9: dup
      10: bipush        10
      12: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      15: astore_2
      16: new           #7                  // class io/undertow/server/HttpServerExchange
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      24: astore_3
      25: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      28: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      31: aload_1
      32: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      35: aload_2
      36: aload_3
      37: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      40: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      43: aload_3
      44: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      47: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      50: ldc           #114                // String /clusterbench/requestinfo//
      52: aload_3
      53: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      56: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: ldc           #114                // String /clusterbench/requestinfo//
      61: aload_3
      62: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      65: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      68: ldc2_w        #115                // long 3l
      71: aload_3
      72: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
      75: invokeinterface #117,  1          // InterfaceMethod java/util/Map.size:()I
      80: i2l
      81: invokestatic  #118                // Method org/junit/Assert.assertEquals:(JJ)V
      84: ldc           #119                // String OK;devil=3
      86: aload_3
      87: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
      90: ldc           #120                // String test
      92: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #43                 // class java/util/Deque
     100: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     105: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     108: ldc           #121                // String 666
     110: aload_3
     111: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     114: ldc           #122                // String 777
     116: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     121: checkcast     #43                 // class java/util/Deque
     124: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     129: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     132: ldc           #123                // String 44
     134: aload_3
     135: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     138: ldc           #124                // String ;?
     140: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     145: checkcast     #43                 // class java/util/Deque
     148: invokeinterface #44,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     153: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     156: return

  public void testNonEncodedAsciiCharacters() throws java.io.UnsupportedEncodingException, io.undertow.util.BadRequestException;
    Code:
       0: ldc           #125                // String GET /bÃ¥r HTTP/1.1\r\n\r\n
       2: ldc           #126                // String ISO-8859-1
       4: invokevirtual #127                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
       7: astore_1
       8: new           #2                  // class io/undertow/server/protocol/http/ParseState
      11: dup
      12: bipush        10
      14: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      17: astore_2
      18: new           #7                  // class io/undertow/server/HttpServerExchange
      21: dup
      22: aconst_null
      23: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      26: astore_3
      27: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      30: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      33: aload_1
      34: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      37: aload_2
      38: aload_3
      39: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      42: return

  public void testNonEncodedAsciiCharactersExplicitlyAllowed() throws java.io.UnsupportedEncodingException, io.undertow.util.BadRequestException;
    Code:
       0: ldc           #125                // String GET /bÃ¥r HTTP/1.1\r\n\r\n
       2: ldc           #126                // String ISO-8859-1
       4: invokevirtual #127                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
       7: astore_1
       8: new           #2                  // class io/undertow/server/protocol/http/ParseState
      11: dup
      12: bipush        10
      14: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      17: astore_2
      18: new           #7                  // class io/undertow/server/HttpServerExchange
      21: dup
      22: aconst_null
      23: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      26: astore_3
      27: getstatic     #128                // Field io/undertow/UndertowOptions.ALLOW_UNESCAPED_CHARACTERS_IN_URL:Lorg/xnio/Option;
      30: iconst_1
      31: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: invokestatic  #23                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      37: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      40: aload_1
      41: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      44: aload_2
      45: aload_3
      46: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      49: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      52: aload_3
      53: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      56: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: ldc           #129                // String /bår
      61: aload_3
      62: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      65: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      68: ldc           #130                // String /bÃ¥r
      70: aload_3
      71: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      74: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      77: return

  private void runTest(byte[]) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #131                // String some value
       4: invokespecial #69                 // Method runTest:([BLjava/lang/String;)V
       7: return

  private void runTest(byte[], java.lang.String) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field parseState:Lio/undertow/server/protocol/http/ParseState;
       4: invokevirtual #132                // Method io/undertow/server/protocol/http/ParseState.reset:()V
       7: new           #7                  // class io/undertow/server/HttpServerExchange
      10: dup
      11: aconst_null
      12: invokespecial #8                  // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      15: astore_3
      16: getstatic     #9                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      19: invokestatic  #10                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      22: aload_1
      23: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      26: aload_0
      27: getfield      #4                  // Field parseState:Lio/undertow/server/protocol/http/ParseState;
      30: aload_3
      31: invokevirtual #12                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      34: getstatic     #13                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      37: aload_3
      38: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      41: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      44: ldc           #31                 // String /somepath
      46: aload_3
      47: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      50: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      53: getstatic     #133                // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
      56: aload_3
      57: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
      60: invokestatic  #15                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      63: ldc2_w        #134                // long 2l
      66: aload_3
      67: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      70: invokevirtual #94                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
      73: invokeinterface #136,  1          // InterfaceMethod java/util/Collection.size:()I
      78: i2l
      79: invokestatic  #118                // Method org/junit/Assert.assertEquals:(JJ)V
      82: ldc           #137                // String www.somehost.net
      84: aload_3
      85: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      88: new           #98                 // class io/undertow/util/HttpString
      91: dup
      92: ldc           #138                // String Host
      94: invokespecial #139                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      97: invokevirtual #140                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     100: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     103: aload_2
     104: aload_3
     105: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     108: new           #98                 // class io/undertow/util/HttpString
     111: dup
     112: ldc           #141                // String OtherHeader
     114: invokespecial #139                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     117: invokevirtual #140                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     120: invokestatic  #18                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     123: ldc2_w        #142                // long 8l
     126: aload_0
     127: getfield      #4                  // Field parseState:Lio/undertow/server/protocol/http/ParseState;
     130: getfield      #144                // Field io/undertow/server/protocol/http/ParseState.state:I
     133: i2l
     134: invokestatic  #118                // Method org/junit/Assert.assertEquals:(JJ)V
     137: return
}
