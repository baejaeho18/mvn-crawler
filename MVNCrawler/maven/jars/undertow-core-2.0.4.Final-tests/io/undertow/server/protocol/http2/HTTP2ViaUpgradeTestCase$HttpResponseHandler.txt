Compiled from "HTTP2ViaUpgradeTestCase.java"
class io.undertow.server.protocol.http2.HTTP2ViaUpgradeTestCase$HttpResponseHandler extends io.netty.channel.SimpleChannelInboundHandler<io.netty.handler.codec.http.FullHttpResponse> {
  private java.util.SortedMap<java.lang.Integer, io.netty.channel.ChannelPromise> streamidPromiseMap;

  io.undertow.server.protocol.http2.HTTP2ViaUpgradeTestCase$HttpResponseHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/SimpleChannelInboundHandler."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #4                  // Field streamidPromiseMap:Ljava/util/SortedMap;
      15: return

  public io.netty.channel.ChannelPromise put(int, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamidPromiseMap:Ljava/util/SortedMap;
       4: iload_1
       5: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: aload_2
       9: invokeinterface #6,  3            // InterfaceMethod java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #7                  // class io/netty/channel/ChannelPromise
      17: areturn

  public void awaitResponses(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamidPromiseMap:Ljava/util/SortedMap;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/SortedMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          166
      26: aload         4
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #12                 // class java/util/Map$Entry
      36: astore        5
      38: aload         5
      40: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: checkcast     #7                  // class io/netty/channel/ChannelPromise
      48: astore        6
      50: aload         6
      52: lload_1
      53: aload_3
      54: invokeinterface #14,  4           // InterfaceMethod io/netty/channel/ChannelPromise.awaitUninterruptibly:(JLjava/util/concurrent/TimeUnit;)Z
      59: ifne          95
      62: new           #15                 // class java/lang/IllegalStateException
      65: dup
      66: new           #16                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #18                 // String Timed out waiting for response on stream id
      75: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload         5
      80: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      85: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload         6
      97: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelPromise.isSuccess:()Z
     102: ifne          120
     105: new           #25                 // class java/lang/RuntimeException
     108: dup
     109: aload         6
     111: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelPromise.cause:()Ljava/lang/Throwable;
     116: invokespecial #27                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     119: athrow
     120: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     123: new           #16                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #29                 // String ---Stream id:
     132: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload         5
     137: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     142: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: ldc           #30                 // String  received---
     147: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokevirtual #31                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     156: aload         4
     158: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.remove:()V
     163: goto          16
     166: return

  protected void channelRead0(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpResponse) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       6: getstatic     #34                 // Field io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.STREAM_ID:Lio/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames;
       9: invokevirtual #35                 // Method io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.text:()Lio/netty/util/AsciiString;
      12: invokevirtual #36                 // Method io/netty/handler/codec/http/HttpHeaders.getInt:(Ljava/lang/CharSequence;)Ljava/lang/Integer;
      15: astore_3
      16: aload_3
      17: ifnonnull     46
      20: getstatic     #37                 // Field java/lang/System.err:Ljava/io/PrintStream;
      23: new           #16                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #38                 // String HttpResponseHandler unexpected message received:
      32: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #31                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      45: return
      46: aload_0
      47: getfield      #4                  // Field streamidPromiseMap:Ljava/util/SortedMap;
      50: aload_3
      51: invokeinterface #39,  2           // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #7                  // class io/netty/channel/ChannelPromise
      59: astore        4
      61: aload         4
      63: ifnonnull     94
      66: getstatic     #37                 // Field java/lang/System.err:Ljava/io/PrintStream;
      69: new           #16                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #40                 // String Message received for unknown stream id
      78: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_3
      82: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokevirtual #31                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      91: goto          158
      94: aload_2
      95: invokeinterface #41,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpResponse.content:()Lio/netty/buffer/ByteBuf;
     100: astore        5
     102: aload         5
     104: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     107: ifeq          150
     110: aload         5
     112: invokevirtual #43                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     115: istore        6
     117: iload         6
     119: newarray       byte
     121: astore        7
     123: aload         5
     125: aload         7
     127: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.readBytes:([B)Lio/netty/buffer/ByteBuf;
     130: pop
     131: invokestatic  #45                 // Method io/undertow/server/protocol/http2/HTTP2ViaUpgradeTestCase.access$200:()Ljava/util/concurrent/LinkedBlockingDeque;
     134: new           #46                 // class java/lang/String
     137: dup
     138: aload         7
     140: getstatic     #47                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     143: invokespecial #48                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     146: invokevirtual #49                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
     149: pop
     150: aload         4
     152: invokeinterface #50,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
     157: pop
     158: return

  protected void channelRead0(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #51                 // class io/netty/handler/codec/http/FullHttpResponse
       6: invokevirtual #52                 // Method channelRead0:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/FullHttpResponse;)V
       9: return
}
