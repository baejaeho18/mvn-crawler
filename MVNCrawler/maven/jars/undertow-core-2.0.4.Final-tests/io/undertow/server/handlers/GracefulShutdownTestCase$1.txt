Compiled from "GracefulShutdownTestCase.java"
final class io.undertow.server.handlers.GracefulShutdownTestCase$1 implements io.undertow.server.HttpHandler {
  io.undertow.server.handlers.GracefulShutdownTestCase$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: getstatic     #2                  // Field io/undertow/server/handlers/GracefulShutdownTestCase.latch2:Ljava/util/concurrent/atomic/AtomicReference;
       3: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class java/util/concurrent/CountDownLatch
       9: astore_2
      10: getstatic     #5                  // Field io/undertow/server/handlers/GracefulShutdownTestCase.latch1:Ljava/util/concurrent/atomic/AtomicReference;
      13: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      16: checkcast     #4                  // class java/util/concurrent/CountDownLatch
      19: astore_3
      20: aload_3
      21: ifnull        28
      24: aload_3
      25: invokevirtual #6                  // Method java/util/concurrent/CountDownLatch.countDown:()V
      28: aload_2
      29: ifnull        36
      32: aload_2
      33: invokevirtual #7                  // Method java/util/concurrent/CountDownLatch.await:()V
      36: return
}
