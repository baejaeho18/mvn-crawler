Compiled from "CacheHandlerTestCase.java"
class io.undertow.server.handlers.caching.CacheHandlerTestCase$1 implements io.undertow.server.HttpHandler {
  final java.util.concurrent.atomic.AtomicInteger val$responseCount;

  final io.undertow.server.handlers.caching.CacheHandlerTestCase this$0;

  io.undertow.server.handlers.caching.CacheHandlerTestCase$1(io.undertow.server.handlers.caching.CacheHandlerTestCase, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/caching/CacheHandlerTestCase;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$responseCount:Ljava/util/concurrent/atomic/AtomicInteger;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: getstatic     #4                  // Field io/undertow/server/handlers/cache/ResponseCache.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #6                  // class io/undertow/server/handlers/cache/ResponseCache
      10: astore_2
      11: aload_2
      12: invokevirtual #7                  // Method io/undertow/server/handlers/cache/ResponseCache.tryServeResponse:()Z
      15: ifne          87
      18: new           #8                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #10                 // String Response
      27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #2                  // Field val$responseCount:Ljava/util/concurrent/atomic/AtomicInteger;
      34: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      37: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore_3
      44: aload_1
      45: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      48: getstatic     #16                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      51: new           #8                  // class java/lang/StringBuilder
      54: dup
      55: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      58: aload_3
      59: invokevirtual #17                 // Method java/lang/String.length:()I
      62: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: ldc           #18                 // String
      67: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokevirtual #19                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      76: pop
      77: aload_1
      78: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getResponseSender:()Lio/undertow/io/Sender;
      81: aload_3
      82: invokeinterface #21,  2           // InterfaceMethod io/undertow/io/Sender.send:(Ljava/lang/String;)V
      87: return
}
