Compiled from "PathResourceManagerTestCase.java"
public class io.undertow.server.handlers.file.PathResourceManagerTestCase {
  public io.undertow.server.handlers.file.PathResourceManagerTestCase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void testGetResource() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #3                  // String page.html
       6: invokevirtual #4                  // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
       9: invokevirtual #5                  // Method java/net/URL.toURI:()Ljava/net/URI;
      12: invokestatic  #6                  // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      15: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      20: astore_1
      21: new           #8                  // class io/undertow/server/handlers/resource/PathResourceManager
      24: dup
      25: aload_1
      26: ldc2_w        #9                  // long 1048576l
      29: invokespecial #11                 // Method io/undertow/server/handlers/resource/PathResourceManager."<init>":(Ljava/nio/file/Path;J)V
      32: astore_2
      33: aload_2
      34: ldc           #3                  // String page.html
      36: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      39: invokestatic  #13                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      42: aload_2
      43: ldc           #14                 // String ./page.html
      45: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      48: invokestatic  #13                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      51: aload_2
      52: ldc           #15                 // String ../file/page.html
      54: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      57: invokestatic  #13                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      60: return

  public void testCantEscapeRoot() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #3                  // String page.html
       6: invokevirtual #4                  // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
       9: invokevirtual #5                  // Method java/net/URL.toURI:()Ljava/net/URI;
      12: invokestatic  #6                  // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      15: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      20: ldc           #16                 // String subdir
      22: invokeinterface #17,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      27: astore_1
      28: new           #8                  // class io/undertow/server/handlers/resource/PathResourceManager
      31: dup
      32: aload_1
      33: ldc2_w        #9                  // long 1048576l
      36: invokespecial #11                 // Method io/undertow/server/handlers/resource/PathResourceManager."<init>":(Ljava/nio/file/Path;J)V
      39: astore_2
      40: aload_2
      41: ldc           #18                 // String a.txt
      43: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      46: invokestatic  #13                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      49: aload_2
      50: ldc           #19                 // String ../page.html
      52: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      55: invokestatic  #20                 // Method org/junit/Assert.assertNull:(Ljava/lang/Object;)V
      58: return

  public void testBaseDirInSymlink() throws java.lang.Exception;
    Code:
       0: ldc           #21                 // String os.name
       2: invokestatic  #22                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: invokevirtual #23                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       8: ldc           #24                 // String windows
      10: invokevirtual #25                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      13: invokestatic  #26                 // Method org/junit/Assume.assumeFalse:(Z)V
      16: aload_0
      17: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: ldc           #3                  // String page.html
      22: invokevirtual #4                  // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
      25: invokevirtual #5                  // Method java/net/URL.toURI:()Ljava/net/URI;
      28: invokestatic  #6                  // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      31: astore_1
      32: aload_1
      33: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      38: astore_2
      39: aload_2
      40: ldc           #27                 // String newDir
      42: invokeinterface #17,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      47: astore_3
      48: aload_3
      49: ldc           #3                  // String page.html
      51: invokeinterface #17,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      56: astore        4
      58: aload_2
      59: ldc           #28                 // String newSymlink
      61: invokeinterface #17,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      66: astore        5
      68: aload_3
      69: iconst_0
      70: anewarray     #29                 // class java/nio/file/attribute/FileAttribute
      73: invokestatic  #30                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      76: pop
      77: aload_1
      78: aload         4
      80: iconst_0
      81: anewarray     #31                 // class java/nio/file/CopyOption
      84: invokestatic  #32                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      87: pop
      88: aload         5
      90: aload_3
      91: iconst_0
      92: anewarray     #29                 // class java/nio/file/attribute/FileAttribute
      95: invokestatic  #33                 // Method java/nio/file/Files.createSymbolicLink:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      98: pop
      99: ldc           #34                 // String Ensure that newSymlink is still a symlink as expected
     101: aload         5
     103: invokestatic  #35                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
     106: invokestatic  #36                 // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
     109: new           #8                  // class io/undertow/server/handlers/resource/PathResourceManager
     112: dup
     113: aload         5
     115: ldc2_w        #9                  // long 1048576l
     118: invokespecial #11                 // Method io/undertow/server/handlers/resource/PathResourceManager."<init>":(Ljava/nio/file/Path;J)V
     121: astore        6
     123: aload         6
     125: ldc           #3                  // String page.html
     127: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
     130: invokestatic  #13                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     133: aload         6
     135: ldc           #37                 // String Page.html
     137: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
     140: invokestatic  #20                 // Method org/junit/Assert.assertNull:(Ljava/lang/Object;)V
     143: aload         6
     145: ldc           #14                 // String ./page.html
     147: invokevirtual #12                 // Method io/undertow/server/handlers/resource/PathResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
     150: invokestatic  #13                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     153: aload         5
     155: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     158: pop
     159: aload         4
     161: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     164: pop
     165: aload_3
     166: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     169: pop
     170: aload_3
     171: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     174: pop
     175: goto          205
     178: astore        7
     180: aload         5
     182: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     185: pop
     186: aload         4
     188: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     191: pop
     192: aload_3
     193: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     196: pop
     197: aload_3
     198: invokestatic  #38                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
     201: pop
     202: aload         7
     204: athrow
     205: return
    Exception table:
       from    to  target type
          68   153   178   any
         178   180   178   any

  public void testETagFunction() throws java.lang.Exception;
    Code:
       0: ldc           #3                  // String page.html
       2: astore_1
       3: aload_0
       4: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: ldc           #3                  // String page.html
       9: invokevirtual #4                  // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
      12: invokevirtual #5                  // Method java/net/URL.toURI:()Ljava/net/URI;
      15: invokestatic  #6                  // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      18: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      23: astore_2
      24: invokestatic  #39                 // Method io/undertow/server/handlers/resource/PathResourceManager.builder:()Lio/undertow/server/handlers/resource/PathResourceManager$Builder;
      27: aload_2
      28: invokevirtual #40                 // Method io/undertow/server/handlers/resource/PathResourceManager$Builder.setBase:(Ljava/nio/file/Path;)Lio/undertow/server/handlers/resource/PathResourceManager$Builder;
      31: new           #41                 // class io/undertow/server/handlers/file/PathResourceManagerTestCase$1
      34: dup
      35: aload_0
      36: invokespecial #42                 // Method io/undertow/server/handlers/file/PathResourceManagerTestCase$1."<init>":(Lio/undertow/server/handlers/file/PathResourceManagerTestCase;)V
      39: invokevirtual #43                 // Method io/undertow/server/handlers/resource/PathResourceManager$Builder.setETagFunction:(Lio/undertow/server/handlers/resource/PathResourceManager$ETagFunction;)Lio/undertow/server/handlers/resource/PathResourceManager$Builder;
      42: invokevirtual #44                 // Method io/undertow/server/handlers/resource/PathResourceManager$Builder.build:()Lio/undertow/server/handlers/resource/ResourceManager;
      45: astore_3
      46: new           #45                 // class io/undertow/util/ETag
      49: dup
      50: iconst_1
      51: ldc           #3                  // String page.html
      53: invokespecial #46                 // Method io/undertow/util/ETag."<init>":(ZLjava/lang/String;)V
      56: astore        4
      58: aload_3
      59: ldc           #3                  // String page.html
      61: invokeinterface #47,  2           // InterfaceMethod io/undertow/server/handlers/resource/ResourceManager.getResource:(Ljava/lang/String;)Lio/undertow/server/handlers/resource/Resource;
      66: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/resource/Resource.getETag:()Lio/undertow/util/ETag;
      71: astore        5
      73: aload         4
      75: aload         5
      77: invokestatic  #49                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      80: return
}
