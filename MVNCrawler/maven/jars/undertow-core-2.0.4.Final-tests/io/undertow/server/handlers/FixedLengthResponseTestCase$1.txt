Compiled from "FixedLengthResponseTestCase.java"
final class io.undertow.server.handlers.FixedLengthResponseTestCase$1 implements io.undertow.server.HttpHandler {
  io.undertow.server.handlers.FixedLengthResponseTestCase$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: invokestatic  #2                  // Method io/undertow/server/handlers/FixedLengthResponseTestCase.access$000:()Lio/undertow/server/ServerConnection;
       3: ifnonnull     17
       6: aload_1
       7: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      10: invokestatic  #4                  // Method io/undertow/server/handlers/FixedLengthResponseTestCase.access$002:(Lio/undertow/server/ServerConnection;)Lio/undertow/server/ServerConnection;
      13: pop
      14: goto          53
      17: invokestatic  #5                  // Method io/undertow/testutils/DefaultServer.isAjp:()Z
      20: ifne          53
      23: invokestatic  #6                  // Method io/undertow/testutils/DefaultServer.isProxy:()Z
      26: ifne          53
      29: invokestatic  #2                  // Method io/undertow/server/handlers/FixedLengthResponseTestCase.access$000:()Lio/undertow/server/ServerConnection;
      32: aload_1
      33: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      36: if_acmpeq     53
      39: aload_1
      40: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.getResponseSender:()Lio/undertow/io/Sender;
      43: astore_2
      44: aload_2
      45: ldc           #8                  // String Connection not persistent
      47: invokeinterface #9,  2            // InterfaceMethod io/undertow/io/Sender.send:(Ljava/lang/String;)V
      52: return
      53: aload_1
      54: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      57: getstatic     #11                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      60: new           #12                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      67: invokestatic  #14                 // Method io/undertow/server/handlers/FixedLengthResponseTestCase.access$100:()Ljava/lang/String;
      70: invokevirtual #15                 // Method java/lang/String.length:()I
      73: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: ldc           #17                 // String
      78: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #20                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      87: pop
      88: aload_1
      89: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.getResponseSender:()Lio/undertow/io/Sender;
      92: astore_2
      93: aload_2
      94: invokestatic  #14                 // Method io/undertow/server/handlers/FixedLengthResponseTestCase.access$100:()Ljava/lang/String;
      97: invokeinterface #9,  2            // InterfaceMethod io/undertow/io/Sender.send:(Ljava/lang/String;)V
     102: return
}
