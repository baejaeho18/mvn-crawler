Compiled from "ChunkedRequestTrailersTestCase.java"
public class io.undertow.server.handlers.ChunkedRequestTrailersTestCase {
  private static volatile io.undertow.server.ServerConnection connection;

  private static org.xnio.OptionMap existing;

  public io.undertow.server.handlers.ChunkedRequestTrailersTestCase();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setup();
    Code:
       0: new           #3                  // class io/undertow/server/handlers/BlockingHandler
       3: dup
       4: invokespecial #4                  // Method io/undertow/server/handlers/BlockingHandler."<init>":()V
       7: astore_0
       8: invokestatic  #5                  // Method io/undertow/testutils/DefaultServer.getUndertowOptions:()Lorg/xnio/OptionMap;
      11: putstatic     #6                  // Field existing:Lorg/xnio/OptionMap;
      14: getstatic     #7                  // Field io/undertow/UndertowOptions.ALWAYS_SET_DATE:Lorg/xnio/Option;
      17: iconst_0
      18: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: invokestatic  #9                  // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      24: invokestatic  #10                 // Method io/undertow/testutils/DefaultServer.setUndertowOptions:(Lorg/xnio/OptionMap;)V
      27: aload_0
      28: invokestatic  #11                 // Method io/undertow/testutils/DefaultServer.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      31: aload_0
      32: new           #12                 // class io/undertow/server/handlers/ChunkedRequestTrailersTestCase$1
      35: dup
      36: invokespecial #13                 // Method io/undertow/server/handlers/ChunkedRequestTrailersTestCase$1."<init>":()V
      39: invokevirtual #14                 // Method io/undertow/server/handlers/BlockingHandler.setRootHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/BlockingHandler;
      42: pop
      43: return

  public static void cleanup();
    Code:
       0: getstatic     #6                  // Field existing:Lorg/xnio/OptionMap;
       3: invokestatic  #10                 // Method io/undertow/testutils/DefaultServer.setUndertowOptions:(Lorg/xnio/OptionMap;)V
       6: return

  public void testChunkedRequestsWithTrailers() throws java.io.IOException;
    Code:
       0: aconst_null
       1: putstatic     #1                  // Field connection:Lio/undertow/server/ServerConnection;
       4: ldc           #15                 // String POST / HTTP/1.1\r\nHost: default\r\nTrailer:foo, bar\r\nTransfer-Encoding: chunked\r\n\r\n9\r\nabcdefghi\r\n0\r\nfoo: fooVal\r\n bar: barVal\r\n\r\n
       6: astore_1
       7: ldc           #16                 // String HTTP/1.1 200 OK\r\nConnection: keep-alive\r\nContent-Length: 26\r\n\r\nfoo: fooVal\r\nbar: barVal\r\n
       9: astore_2
      10: ldc           #16                 // String HTTP/1.1 200 OK\r\nConnection: keep-alive\r\nContent-Length: 26\r\n\r\nfoo: fooVal\r\nbar: barVal\r\n
      12: astore_3
      13: new           #17                 // class java/net/Socket
      16: dup
      17: invokestatic  #18                 // Method io/undertow/testutils/DefaultServer.getDefaultServerAddress:()Ljava/net/InetSocketAddress;
      20: invokevirtual #19                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      23: invokestatic  #18                 // Method io/undertow/testutils/DefaultServer.getDefaultServerAddress:()Ljava/net/InetSocketAddress;
      26: invokevirtual #20                 // Method java/net/InetSocketAddress.getPort:()I
      29: invokespecial #21                 // Method java/net/Socket."<init>":(Ljava/net/InetAddress;I)V
      32: astore        4
      34: aload         4
      36: invokevirtual #22                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      39: aload_1
      40: invokevirtual #23                 // Method java/lang/String.getBytes:()[B
      43: invokevirtual #24                 // Method java/io/OutputStream.write:([B)V
      46: new           #25                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      53: astore        5
      55: iconst_0
      56: istore        6
      58: sipush        300
      61: newarray       byte
      63: astore        7
      65: iload         6
      67: aload_2
      68: invokevirtual #27                 // Method java/lang/String.length:()I
      71: if_icmpge     127
      74: aload         4
      76: invokevirtual #28                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      79: aload         7
      81: invokevirtual #29                 // Method java/io/InputStream.read:([B)I
      84: istore        8
      86: iload         8
      88: ifgt          94
      91: goto          127
      94: iload         8
      96: ifle          124
      99: iload         6
     101: iload         8
     103: iadd
     104: istore        6
     106: aload         5
     108: new           #30                 // class java/lang/String
     111: dup
     112: aload         7
     114: iconst_0
     115: iload         8
     117: invokespecial #31                 // Method java/lang/String."<init>":([BII)V
     120: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: pop
     124: goto          65
     127: aload         5
     129: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: astore        8
     134: aload         8
     136: ldc           #34                 // String \r\nDate:.*
     138: ldc           #35                 // String
     140: invokevirtual #36                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     143: astore        8
     145: aload         8
     147: ldc           #37                 // String content-length
     149: ldc           #38                 // String Content-Length
     151: invokevirtual #36                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     154: astore        8
     156: aload_2
     157: aload         8
     159: invokestatic  #39                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     162: goto          173
     165: astore        9
     167: aload_3
     168: aload         8
     170: invokestatic  #39                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     173: aload         4
     175: invokevirtual #22                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
     178: aload_1
     179: invokevirtual #23                 // Method java/lang/String.getBytes:()[B
     182: invokevirtual #24                 // Method java/io/OutputStream.write:([B)V
     185: new           #25                 // class java/lang/StringBuilder
     188: dup
     189: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     192: astore        5
     194: iconst_0
     195: istore        6
     197: iload         6
     199: aload_2
     200: invokevirtual #27                 // Method java/lang/String.length:()I
     203: if_icmpge     259
     206: aload         4
     208: invokevirtual #28                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
     211: aload         7
     213: invokevirtual #29                 // Method java/io/InputStream.read:([B)I
     216: istore        9
     218: iload         9
     220: ifgt          226
     223: goto          259
     226: iload         9
     228: ifle          256
     231: iload         6
     233: iload         9
     235: iadd
     236: istore        6
     238: aload         5
     240: new           #30                 // class java/lang/String
     243: dup
     244: aload         7
     246: iconst_0
     247: iload         9
     249: invokespecial #31                 // Method java/lang/String."<init>":([BII)V
     252: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: pop
     256: goto          197
     259: aload         5
     261: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: astore        8
     266: aload         8
     268: ldc           #34                 // String \r\nDate:.*
     270: ldc           #35                 // String
     272: invokevirtual #36                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     275: astore        8
     277: aload         8
     279: ldc           #37                 // String content-length
     281: ldc           #38                 // String Content-Length
     283: invokevirtual #36                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     286: astore        8
     288: aload_2
     289: aload         8
     291: invokestatic  #39                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     294: goto          305
     297: astore        9
     299: aload_3
     300: aload         8
     302: invokestatic  #39                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     305: aload         4
     307: invokevirtual #41                 // Method java/net/Socket.close:()V
     310: goto          323
     313: astore        10
     315: aload         4
     317: invokevirtual #41                 // Method java/net/Socket.close:()V
     320: aload         10
     322: athrow
     323: return
    Exception table:
       from    to  target type
         156   162   165   Class java/lang/AssertionError
         288   294   297   Class java/lang/AssertionError
          34   305   313   any
         313   315   313   any

  static io.undertow.server.ServerConnection access$000();
    Code:
       0: getstatic     #1                  // Field connection:Lio/undertow/server/ServerConnection;
       3: areturn

  static io.undertow.server.ServerConnection access$002(io.undertow.server.ServerConnection);
    Code:
       0: aload_0
       1: dup
       2: putstatic     #1                  // Field connection:Lio/undertow/server/ServerConnection;
       5: areturn
}
