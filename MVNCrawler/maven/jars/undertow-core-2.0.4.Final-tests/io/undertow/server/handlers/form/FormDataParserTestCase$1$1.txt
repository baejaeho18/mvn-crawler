Compiled from "FormDataParserTestCase.java"
class io.undertow.server.handlers.form.FormDataParserTestCase$1$1 implements io.undertow.server.HttpHandler {
  final io.undertow.server.handlers.form.FormDataParserTestCase$1 this$0;

  io.undertow.server.handlers.form.FormDataParserTestCase$1$1(io.undertow.server.handlers.form.FormDataParserTestCase$1);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/form/FormDataParserTestCase$1;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: getstatic     #3                  // Field io/undertow/server/handlers/form/FormDataParser.FORM_DATA:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #5                  // class io/undertow/server/handlers/form/FormData
      10: astore_2
      11: aload_2
      12: invokevirtual #6                  // Method io/undertow/server/handlers/form/FormData.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          124
      25: aload_3
      26: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #9                  // class java/lang/String
      34: astore        4
      36: aload_2
      37: aload         4
      39: invokevirtual #10                 // Method io/undertow/server/handlers/form/FormData.get:(Ljava/lang/String;)Ljava/util/Deque;
      42: invokeinterface #11,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      47: astore        5
      49: aload         5
      51: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          121
      59: aload         5
      61: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #12                 // class io/undertow/server/handlers/form/FormData$FormValue
      69: astore        6
      71: aload_1
      72: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      75: new           #14                 // class io/undertow/util/HttpString
      78: dup
      79: ldc           #15                 // String res
      81: invokespecial #16                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      84: new           #17                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      91: aload         4
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #20                 // String :
      98: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload         6
     103: invokeinterface #21,  1           // InterfaceMethod io/undertow/server/handlers/form/FormData$FormValue.getValue:()Ljava/lang/String;
     108: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokevirtual #23                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     117: pop
     118: goto          49
     121: goto          16
     124: return
}
