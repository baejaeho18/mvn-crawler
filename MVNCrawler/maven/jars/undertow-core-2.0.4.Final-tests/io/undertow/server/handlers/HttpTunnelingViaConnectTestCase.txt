Compiled from "HttpTunnelingViaConnectTestCase.java"
public class io.undertow.server.handlers.HttpTunnelingViaConnectTestCase {
  private static io.undertow.Undertow server;

  public io.undertow.server.handlers.HttpTunnelingViaConnectTestCase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setup();
    Code:
       0: new           #2                  // class io/undertow/server/handlers/SetHeaderHandler
       3: dup
       4: new           #3                  // class io/undertow/server/handlers/HttpTunnelingViaConnectTestCase$1
       7: dup
       8: invokespecial #4                  // Method io/undertow/server/handlers/HttpTunnelingViaConnectTestCase$1."<init>":()V
      11: ldc           #5                  // String MyHeader
      13: ldc           #6                  // String MyValue
      15: invokespecial #7                  // Method io/undertow/server/handlers/SetHeaderHandler."<init>":(Lio/undertow/server/HttpHandler;Ljava/lang/String;Ljava/lang/String;)V
      18: invokestatic  #8                  // Method io/undertow/testutils/DefaultServer.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      21: invokestatic  #9                  // Method io/undertow/Undertow.builder:()Lio/undertow/Undertow$Builder;
      24: ldc           #10                 // String default
      26: invokestatic  #11                 // Method io/undertow/testutils/DefaultServer.getHostPort:(Ljava/lang/String;)I
      29: iconst_1
      30: iadd
      31: ldc           #10                 // String default
      33: invokestatic  #12                 // Method io/undertow/testutils/DefaultServer.getHostAddress:(Ljava/lang/String;)Ljava/lang/String;
      36: invokevirtual #13                 // Method io/undertow/Undertow$Builder.addHttpListener:(ILjava/lang/String;)Lio/undertow/Undertow$Builder;
      39: new           #14                 // class io/undertow/server/handlers/ConnectHandler
      42: dup
      43: new           #15                 // class io/undertow/server/handlers/HttpTunnelingViaConnectTestCase$2
      46: dup
      47: invokespecial #16                 // Method io/undertow/server/handlers/HttpTunnelingViaConnectTestCase$2."<init>":()V
      50: invokespecial #17                 // Method io/undertow/server/handlers/ConnectHandler."<init>":(Lio/undertow/server/HttpHandler;)V
      53: invokevirtual #18                 // Method io/undertow/Undertow$Builder.setHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/Undertow$Builder;
      56: invokevirtual #19                 // Method io/undertow/Undertow$Builder.build:()Lio/undertow/Undertow;
      59: putstatic     #20                 // Field server:Lio/undertow/Undertow;
      62: getstatic     #20                 // Field server:Lio/undertow/Undertow;
      65: invokevirtual #21                 // Method io/undertow/Undertow.start:()V
      68: return

  public static void stop();
    Code:
       0: getstatic     #20                 // Field server:Lio/undertow/Undertow;
       3: invokevirtual #22                 // Method io/undertow/Undertow.stop:()V
       6: aconst_null
       7: putstatic     #20                 // Field server:Lio/undertow/Undertow;
      10: return

  public void testConnectViaProxy() throws java.lang.Exception;
    Code:
       0: new           #23                 // class org/apache/http/HttpHost
       3: dup
       4: ldc           #10                 // String default
       6: invokestatic  #12                 // Method io/undertow/testutils/DefaultServer.getHostAddress:(Ljava/lang/String;)Ljava/lang/String;
       9: ldc           #10                 // String default
      11: invokestatic  #11                 // Method io/undertow/testutils/DefaultServer.getHostPort:(Ljava/lang/String;)I
      14: iconst_1
      15: iadd
      16: ldc           #24                 // String http
      18: invokespecial #25                 // Method org/apache/http/HttpHost."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      21: astore_1
      22: new           #23                 // class org/apache/http/HttpHost
      25: dup
      26: ldc           #10                 // String default
      28: invokestatic  #12                 // Method io/undertow/testutils/DefaultServer.getHostAddress:(Ljava/lang/String;)Ljava/lang/String;
      31: ldc           #10                 // String default
      33: invokestatic  #11                 // Method io/undertow/testutils/DefaultServer.getHostPort:(Ljava/lang/String;)I
      36: ldc           #24                 // String http
      38: invokespecial #25                 // Method org/apache/http/HttpHost."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      41: astore_2
      42: new           #26                 // class org/apache/http/impl/client/ProxyClient
      45: dup
      46: invokespecial #27                 // Method org/apache/http/impl/client/ProxyClient."<init>":()V
      49: astore_3
      50: aload_3
      51: aload_1
      52: aload_2
      53: new           #28                 // class org/apache/http/auth/UsernamePasswordCredentials
      56: dup
      57: ldc           #29                 // String a
      59: ldc           #30                 // String b
      61: invokespecial #31                 // Method org/apache/http/auth/UsernamePasswordCredentials."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      64: invokevirtual #32                 // Method org/apache/http/impl/client/ProxyClient.tunnel:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpHost;Lorg/apache/http/auth/Credentials;)Ljava/net/Socket;
      67: astore        4
      69: new           #33                 // class java/io/OutputStreamWriter
      72: dup
      73: aload         4
      75: invokevirtual #34                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      78: getstatic     #35                 // Field org/apache/http/protocol/HTTP.DEF_CONTENT_CHARSET:Ljava/nio/charset/Charset;
      81: invokespecial #36                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      84: astore        5
      86: aload         5
      88: ldc           #37                 // String GET / HTTP/1.1\r\n
      90: invokevirtual #38                 // Method java/io/Writer.write:(Ljava/lang/String;)V
      93: aload         5
      95: new           #39                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #41                 // String Host:
     104: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_2
     108: invokevirtual #43                 // Method org/apache/http/HttpHost.toHostString:()Ljava/lang/String;
     111: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc           #44                 // String \r\n
     116: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokevirtual #38                 // Method java/io/Writer.write:(Ljava/lang/String;)V
     125: aload         5
     127: ldc           #46                 // String Connection: close\r\n
     129: invokevirtual #38                 // Method java/io/Writer.write:(Ljava/lang/String;)V
     132: aload         5
     134: ldc           #44                 // String \r\n
     136: invokevirtual #38                 // Method java/io/Writer.write:(Ljava/lang/String;)V
     139: aload         5
     141: invokevirtual #47                 // Method java/io/Writer.flush:()V
     144: new           #48                 // class java/io/BufferedReader
     147: dup
     148: new           #49                 // class java/io/InputStreamReader
     151: dup
     152: aload         4
     154: invokevirtual #50                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
     157: getstatic     #35                 // Field org/apache/http/protocol/HTTP.DEF_CONTENT_CHARSET:Ljava/nio/charset/Charset;
     160: invokespecial #51                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
     163: invokespecial #52                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     166: astore        6
     168: aconst_null
     169: astore        7
     171: iconst_0
     172: istore        8
     174: aload         6
     176: invokevirtual #53                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
     179: dup
     180: astore        7
     182: ifnull        209
     185: getstatic     #54                 // Field java/lang/System.out:Ljava/io/PrintStream;
     188: aload         7
     190: invokevirtual #55                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     193: aload         7
     195: ldc           #56                 // String MyHeader: MyValue
     197: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     200: ifeq          174
     203: iconst_1
     204: istore        8
     206: goto          174
     209: iload         8
     211: invokestatic  #58                 // Method org/junit/Assert.assertTrue:(Z)V
     214: aload         4
     216: invokevirtual #59                 // Method java/net/Socket.close:()V
     219: goto          232
     222: astore        9
     224: aload         4
     226: invokevirtual #59                 // Method java/net/Socket.close:()V
     229: aload         9
     231: athrow
     232: return
    Exception table:
       from    to  target type
          69   214   222   any
         222   224   222   any
}
