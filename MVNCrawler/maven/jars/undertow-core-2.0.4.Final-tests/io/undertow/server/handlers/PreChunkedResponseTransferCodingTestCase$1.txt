Compiled from "PreChunkedResponseTransferCodingTestCase.java"
final class io.undertow.server.handlers.PreChunkedResponseTransferCodingTestCase$1 implements io.undertow.server.HttpHandler {
  io.undertow.server.handlers.PreChunkedResponseTransferCodingTestCase$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handleRequest(io.undertow.server.HttpServerExchange);
    Code:
       0: invokestatic  #2                  // Method io/undertow/server/handlers/PreChunkedResponseTransferCodingTestCase.access$000:()Lio/undertow/server/ServerConnection;
       3: ifnonnull     17
       6: aload_1
       7: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      10: invokestatic  #4                  // Method io/undertow/server/handlers/PreChunkedResponseTransferCodingTestCase.access$002:(Lio/undertow/server/ServerConnection;)Lio/undertow/server/ServerConnection;
      13: pop
      14: goto          58
      17: invokestatic  #5                  // Method io/undertow/testutils/DefaultServer.isAjp:()Z
      20: ifne          58
      23: invokestatic  #6                  // Method io/undertow/testutils/DefaultServer.isProxy:()Z
      26: ifne          58
      29: invokestatic  #2                  // Method io/undertow/server/handlers/PreChunkedResponseTransferCodingTestCase.access$000:()Lio/undertow/server/ServerConnection;
      32: aload_1
      33: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      36: if_acmpeq     58
      39: aload_1
      40: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.getOutputStream:()Ljava/io/OutputStream;
      43: astore_2
      44: aload_2
      45: ldc           #8                  // String Connection not persistent
      47: invokevirtual #9                  // Method java/lang/String.getBytes:()[B
      50: invokevirtual #10                 // Method java/io/OutputStream.write:([B)V
      53: aload_2
      54: invokevirtual #11                 // Method java/io/OutputStream.close:()V
      57: return
      58: aload_1
      59: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      62: getstatic     #13                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      65: getstatic     #14                 // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
      68: invokevirtual #15                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      71: invokevirtual #16                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      74: pop
      75: aload_1
      76: getstatic     #17                 // Field io/undertow/server/protocol/http/HttpAttachments.PRE_CHUNKED_RESPONSE:Lio/undertow/util/AttachmentKey;
      79: iconst_1
      80: invokestatic  #18                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      83: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: new           #20                 // class io/undertow/util/StringWriteChannelListener
      90: dup
      91: invokestatic  #21                 // Method io/undertow/server/handlers/PreChunkedResponseTransferCodingTestCase.access$100:()Ljava/lang/String;
      94: invokespecial #22                 // Method io/undertow/util/StringWriteChannelListener."<init>":(Ljava/lang/String;)V
      97: aload_1
      98: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     101: invokevirtual #24                 // Method io/undertow/util/StringWriteChannelListener.setup:(Lorg/xnio/channels/StreamSinkChannel;)V
     104: goto          117
     107: astore_2
     108: new           #26                 // class java/lang/RuntimeException
     111: dup
     112: aload_2
     113: invokespecial #27                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     116: athrow
     117: return
    Exception table:
       from    to  target type
           0    57   107   Class java/io/IOException
          58   104   107   Class java/io/IOException
}
