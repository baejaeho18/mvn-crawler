Compiled from "ChunkedResponseTrailersTestCase.java"
class io.undertow.server.handlers.ChunkedResponseTrailersTestCase$2 implements org.apache.http.HttpResponseInterceptor {
  final java.util.concurrent.atomic.AtomicReference val$stream;

  final io.undertow.server.handlers.ChunkedResponseTrailersTestCase this$0;

  io.undertow.server.handlers.ChunkedResponseTrailersTestCase$2(io.undertow.server.handlers.ChunkedResponseTrailersTestCase, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/ChunkedResponseTrailersTestCase;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$stream:Ljava/util/concurrent/atomic/AtomicReference;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
       6: astore_3
       7: aload_3
       8: ifnull        39
      11: aload_3
      12: invokeinterface #5,  1            // InterfaceMethod org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
      17: astore        4
      19: aload         4
      21: instanceof    #6                  // class org/apache/http/impl/io/ChunkedInputStream
      24: ifeq          39
      27: aload_0
      28: getfield      #2                  // Field val$stream:Ljava/util/concurrent/atomic/AtomicReference;
      31: aload         4
      33: checkcast     #6                  // class org/apache/http/impl/io/ChunkedInputStream
      36: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      39: return
}
