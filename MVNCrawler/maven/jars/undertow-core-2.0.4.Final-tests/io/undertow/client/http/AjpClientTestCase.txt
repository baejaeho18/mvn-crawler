Compiled from "AjpClientTestCase.java"
public class io.undertow.client.http.AjpClientTestCase {
  private static final java.lang.String message;

  public static final java.lang.String MESSAGE;

  public static final java.lang.String POST;

  private static final int AJP_PORT;

  private static org.xnio.XnioWorker worker;

  private static io.undertow.Undertow undertow;

  private static final org.xnio.OptionMap DEFAULT_OPTIONS;

  private static final java.net.URI ADDRESS;

  private static final io.undertow.util.AttachmentKey<java.lang.String> RESPONSE_BODY;

  public io.undertow.client.http.AjpClientTestCase();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  static void sendMessage(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: sipush        200
       4: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
       7: pop
       8: aload_0
       9: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      12: getstatic     #7                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      15: new           #8                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #11                 // String Hello World!
      24: invokevirtual #12                 // Method java/lang/String.length:()I
      27: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #14                 // String
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokevirtual #17                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      41: pop
      42: aload_0
      43: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getResponseSender:()Lio/undertow/io/Sender;
      46: astore_1
      47: aload_1
      48: ldc           #11                 // String Hello World!
      50: invokeinterface #19,  2           // InterfaceMethod io/undertow/io/Sender.send:(Ljava/lang/String;)V
      55: return

  public static void beforeClass() throws java.io.IOException;
    Code:
       0: invokestatic  #20                 // Method org/xnio/Xnio.getInstance:()Lorg/xnio/Xnio;
       3: astore_0
       4: aload_0
       5: aconst_null
       6: getstatic     #21                 // Field DEFAULT_OPTIONS:Lorg/xnio/OptionMap;
       9: invokevirtual #22                 // Method org/xnio/Xnio.createWorker:(Ljava/lang/ThreadGroup;Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
      12: astore_1
      13: aload_1
      14: putstatic     #23                 // Field worker:Lorg/xnio/XnioWorker;
      17: invokestatic  #24                 // Method io/undertow/Undertow.builder:()Lio/undertow/Undertow$Builder;
      20: new           #25                 // class io/undertow/Undertow$ListenerBuilder
      23: dup
      24: invokespecial #26                 // Method io/undertow/Undertow$ListenerBuilder."<init>":()V
      27: getstatic     #27                 // Field io/undertow/Undertow$ListenerType.AJP:Lio/undertow/Undertow$ListenerType;
      30: invokevirtual #28                 // Method io/undertow/Undertow$ListenerBuilder.setType:(Lio/undertow/Undertow$ListenerType;)Lio/undertow/Undertow$ListenerBuilder;
      33: getstatic     #29                 // Field AJP_PORT:I
      36: invokevirtual #30                 // Method io/undertow/Undertow$ListenerBuilder.setPort:(I)Lio/undertow/Undertow$ListenerBuilder;
      39: invokevirtual #31                 // Method io/undertow/Undertow$Builder.addListener:(Lio/undertow/Undertow$ListenerBuilder;)Lio/undertow/Undertow$Builder;
      42: new           #32                 // class io/undertow/server/handlers/PathHandler
      45: dup
      46: invokespecial #33                 // Method io/undertow/server/handlers/PathHandler."<init>":()V
      49: ldc           #34                 // String /message
      51: new           #35                 // class io/undertow/client/http/AjpClientTestCase$2
      54: dup
      55: invokespecial #36                 // Method io/undertow/client/http/AjpClientTestCase$2."<init>":()V
      58: invokevirtual #37                 // Method io/undertow/server/handlers/PathHandler.addExactPath:(Ljava/lang/String;Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/PathHandler;
      61: ldc           #38                 // String /post
      63: new           #39                 // class io/undertow/client/http/AjpClientTestCase$1
      66: dup
      67: invokespecial #40                 // Method io/undertow/client/http/AjpClientTestCase$1."<init>":()V
      70: invokevirtual #37                 // Method io/undertow/server/handlers/PathHandler.addExactPath:(Ljava/lang/String;Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/PathHandler;
      73: invokevirtual #41                 // Method io/undertow/Undertow$Builder.setHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/Undertow$Builder;
      76: invokevirtual #42                 // Method io/undertow/Undertow$Builder.build:()Lio/undertow/Undertow;
      79: putstatic     #43                 // Field undertow:Lio/undertow/Undertow;
      82: getstatic     #43                 // Field undertow:Lio/undertow/Undertow;
      85: invokevirtual #44                 // Method io/undertow/Undertow.start:()V
      88: return

  public static void afterClass();
    Code:
       0: getstatic     #23                 // Field worker:Lorg/xnio/XnioWorker;
       3: invokevirtual #45                 // Method org/xnio/XnioWorker.shutdown:()V
       6: getstatic     #43                 // Field undertow:Lio/undertow/Undertow;
       9: invokevirtual #46                 // Method io/undertow/Undertow.stop:()V
      12: return

  static io.undertow.client.UndertowClient createClient();
    Code:
       0: getstatic     #47                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       3: invokestatic  #48                 // Method createClient:(Lorg/xnio/OptionMap;)Lio/undertow/client/UndertowClient;
       6: areturn

  static io.undertow.client.UndertowClient createClient(org.xnio.OptionMap);
    Code:
       0: invokestatic  #49                 // Method io/undertow/client/UndertowClient.getInstance:()Lio/undertow/client/UndertowClient;
       3: areturn

  public void testSimpleBasic() throws java.lang.Exception;
    Code:
       0: invokestatic  #50                 // Method createClient:()Lio/undertow/client/UndertowClient;
       3: astore_1
       4: new           #51                 // class java/util/concurrent/CopyOnWriteArrayList
       7: dup
       8: invokespecial #52                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      11: astore_2
      12: new           #53                 // class java/util/concurrent/CountDownLatch
      15: dup
      16: bipush        10
      18: invokespecial #54                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      21: astore_3
      22: aload_1
      23: getstatic     #55                 // Field ADDRESS:Ljava/net/URI;
      26: getstatic     #23                 // Field worker:Lorg/xnio/XnioWorker;
      29: invokestatic  #56                 // Method io/undertow/testutils/DefaultServer.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      32: getstatic     #47                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      35: invokevirtual #57                 // Method io/undertow/client/UndertowClient.connect:(Ljava/net/URI;Lorg/xnio/XnioWorker;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      38: invokeinterface #58,  1           // InterfaceMethod org/xnio/IoFuture.get:()Ljava/lang/Object;
      43: checkcast     #59                 // class io/undertow/client/ClientConnection
      46: astore        4
      48: aload         4
      50: invokeinterface #60,  1           // InterfaceMethod io/undertow/client/ClientConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      55: new           #61                 // class io/undertow/client/http/AjpClientTestCase$3
      58: dup
      59: aload_0
      60: aload         4
      62: aload_2
      63: aload_3
      64: invokespecial #62                 // Method io/undertow/client/http/AjpClientTestCase$3."<init>":(Lio/undertow/client/http/AjpClientTestCase;Lio/undertow/client/ClientConnection;Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)V
      67: invokevirtual #63                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      70: aload_3
      71: ldc2_w        #64                 // long 10l
      74: getstatic     #66                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      77: invokevirtual #67                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      80: pop
      81: ldc2_w        #64                 // long 10l
      84: aload_2
      85: invokeinterface #68,  1           // InterfaceMethod java/util/List.size:()I
      90: i2l
      91: invokestatic  #69                 // Method org/junit/Assert.assertEquals:(JJ)V
      94: aload_2
      95: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     100: astore        5
     102: aload         5
     104: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     109: ifeq          140
     112: aload         5
     114: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #73                 // class io/undertow/client/ClientResponse
     122: astore        6
     124: ldc           #11                 // String Hello World!
     126: aload         6
     128: getstatic     #1                  // Field RESPONSE_BODY:Lio/undertow/util/AttachmentKey;
     131: invokevirtual #74                 // Method io/undertow/client/ClientResponse.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     134: invokestatic  #75                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     137: goto          102
     140: aload         4
     142: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     145: goto          158
     148: astore        7
     150: aload         4
     152: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     155: aload         7
     157: athrow
     158: return
    Exception table:
       from    to  target type
          48   140   148   any
         148   150   148   any

  public void testSendPing() throws java.lang.Exception;
    Code:
       0: invokestatic  #50                 // Method createClient:()Lio/undertow/client/UndertowClient;
       3: astore_1
       4: new           #51                 // class java/util/concurrent/CopyOnWriteArrayList
       7: dup
       8: invokespecial #52                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      11: astore_2
      12: new           #77                 // class org/xnio/FutureResult
      15: dup
      16: invokespecial #78                 // Method org/xnio/FutureResult."<init>":()V
      19: astore_3
      20: new           #53                 // class java/util/concurrent/CountDownLatch
      23: dup
      24: iconst_3
      25: invokespecial #54                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      28: astore        4
      30: aload_1
      31: getstatic     #55                 // Field ADDRESS:Ljava/net/URI;
      34: getstatic     #23                 // Field worker:Lorg/xnio/XnioWorker;
      37: invokestatic  #56                 // Method io/undertow/testutils/DefaultServer.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      40: getstatic     #47                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      43: invokevirtual #57                 // Method io/undertow/client/UndertowClient.connect:(Ljava/net/URI;Lorg/xnio/XnioWorker;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      46: invokeinterface #58,  1           // InterfaceMethod org/xnio/IoFuture.get:()Ljava/lang/Object;
      51: checkcast     #59                 // class io/undertow/client/ClientConnection
      54: astore        5
      56: aload         5
      58: invokeinterface #79,  1           // InterfaceMethod io/undertow/client/ClientConnection.isPingSupported:()Z
      63: invokestatic  #80                 // Method org/junit/Assert.assertTrue:(Z)V
      66: aload         5
      68: invokeinterface #60,  1           // InterfaceMethod io/undertow/client/ClientConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      73: new           #81                 // class io/undertow/client/http/AjpClientTestCase$4
      76: dup
      77: aload_0
      78: aload         5
      80: aload_2
      81: aload         4
      83: aload_3
      84: invokespecial #82                 // Method io/undertow/client/http/AjpClientTestCase$4."<init>":(Lio/undertow/client/http/AjpClientTestCase;Lio/undertow/client/ClientConnection;Ljava/util/List;Ljava/util/concurrent/CountDownLatch;Lorg/xnio/FutureResult;)V
      87: invokevirtual #63                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      90: aload         4
      92: ldc2_w        #64                 // long 10l
      95: getstatic     #66                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      98: invokevirtual #67                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
     101: pop
     102: ldc2_w        #83                 // long 2l
     105: aload_2
     106: invokeinterface #68,  1           // InterfaceMethod java/util/List.size:()I
     111: i2l
     112: invokestatic  #69                 // Method org/junit/Assert.assertEquals:(JJ)V
     115: aload_3
     116: invokevirtual #85                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
     119: invokeinterface #58,  1           // InterfaceMethod org/xnio/IoFuture.get:()Ljava/lang/Object;
     124: checkcast     #86                 // class java/lang/Boolean
     127: invokevirtual #87                 // Method java/lang/Boolean.booleanValue:()Z
     130: invokestatic  #80                 // Method org/junit/Assert.assertTrue:(Z)V
     133: aload_2
     134: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     139: astore        6
     141: aload         6
     143: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     148: ifeq          179
     151: aload         6
     153: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     158: checkcast     #73                 // class io/undertow/client/ClientResponse
     161: astore        7
     163: ldc           #11                 // String Hello World!
     165: aload         7
     167: getstatic     #1                  // Field RESPONSE_BODY:Lio/undertow/util/AttachmentKey;
     170: invokevirtual #74                 // Method io/undertow/client/ClientResponse.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     173: invokestatic  #75                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     176: goto          141
     179: getstatic     #43                 // Field undertow:Lio/undertow/Undertow;
     182: invokevirtual #46                 // Method io/undertow/Undertow.stop:()V
     185: new           #77                 // class org/xnio/FutureResult
     188: dup
     189: invokespecial #78                 // Method org/xnio/FutureResult."<init>":()V
     192: astore        6
     194: aload         5
     196: invokeinterface #60,  1           // InterfaceMethod io/undertow/client/ClientConnection.getIoThread:()Lorg/xnio/XnioIoThread;
     201: new           #88                 // class io/undertow/client/http/AjpClientTestCase$5
     204: dup
     205: aload_0
     206: aload         5
     208: aload         6
     210: invokespecial #89                 // Method io/undertow/client/http/AjpClientTestCase$5."<init>":(Lio/undertow/client/http/AjpClientTestCase;Lio/undertow/client/ClientConnection;Lorg/xnio/FutureResult;)V
     213: invokevirtual #63                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
     216: aload         6
     218: invokevirtual #85                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
     221: invokeinterface #58,  1           // InterfaceMethod org/xnio/IoFuture.get:()Ljava/lang/Object;
     226: pop
     227: ldc           #90                 // String ping should have failed
     229: invokestatic  #91                 // Method org/junit/Assert.fail:(Ljava/lang/String;)V
     232: goto          237
     235: astore        7
     237: getstatic     #43                 // Field undertow:Lio/undertow/Undertow;
     240: invokevirtual #44                 // Method io/undertow/Undertow.start:()V
     243: goto          257
     246: astore        8
     248: getstatic     #43                 // Field undertow:Lio/undertow/Undertow;
     251: invokevirtual #44                 // Method io/undertow/Undertow.start:()V
     254: aload         8
     256: athrow
     257: aload         5
     259: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     262: goto          275
     265: astore        9
     267: aload         5
     269: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     272: aload         9
     274: athrow
     275: return
    Exception table:
       from    to  target type
         216   232   235   Class java/io/IOException
         179   237   246   any
         246   248   246   any
          66   257   265   any
         265   267   265   any

  public void testPostRequest() throws java.lang.Exception;
    Code:
       0: invokestatic  #50                 // Method createClient:()Lio/undertow/client/UndertowClient;
       3: astore_1
       4: ldc           #93                 // String This is a post request
       6: astore_2
       7: new           #51                 // class java/util/concurrent/CopyOnWriteArrayList
      10: dup
      11: invokespecial #52                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      14: astore_3
      15: new           #53                 // class java/util/concurrent/CountDownLatch
      18: dup
      19: bipush        10
      21: invokespecial #54                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      24: astore        4
      26: aload_1
      27: getstatic     #55                 // Field ADDRESS:Ljava/net/URI;
      30: getstatic     #23                 // Field worker:Lorg/xnio/XnioWorker;
      33: invokestatic  #56                 // Method io/undertow/testutils/DefaultServer.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      36: getstatic     #47                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      39: invokevirtual #57                 // Method io/undertow/client/UndertowClient.connect:(Ljava/net/URI;Lorg/xnio/XnioWorker;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      42: invokeinterface #58,  1           // InterfaceMethod org/xnio/IoFuture.get:()Ljava/lang/Object;
      47: checkcast     #59                 // class io/undertow/client/ClientConnection
      50: astore        5
      52: aload         5
      54: invokeinterface #60,  1           // InterfaceMethod io/undertow/client/ClientConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      59: new           #94                 // class io/undertow/client/http/AjpClientTestCase$6
      62: dup
      63: aload_0
      64: aload         5
      66: aload_3
      67: aload         4
      69: invokespecial #95                 // Method io/undertow/client/http/AjpClientTestCase$6."<init>":(Lio/undertow/client/http/AjpClientTestCase;Lio/undertow/client/ClientConnection;Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)V
      72: invokevirtual #63                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      75: aload         4
      77: ldc2_w        #64                 // long 10l
      80: getstatic     #66                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      83: invokevirtual #67                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      86: pop
      87: ldc2_w        #64                 // long 10l
      90: aload_3
      91: invokeinterface #68,  1           // InterfaceMethod java/util/List.size:()I
      96: i2l
      97: invokestatic  #69                 // Method org/junit/Assert.assertEquals:(JJ)V
     100: aload_3
     101: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     106: astore        6
     108: aload         6
     110: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     115: ifeq          140
     118: aload         6
     120: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     125: checkcast     #96                 // class java/lang/String
     128: astore        7
     130: ldc           #93                 // String This is a post request
     132: aload         7
     134: invokestatic  #75                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     137: goto          108
     140: aload         5
     142: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     145: goto          158
     148: astore        8
     150: aload         5
     152: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     155: aload         8
     157: athrow
     158: return
    Exception table:
       from    to  target type
          52   140   148   any
         148   150   148   any

  public void testConnectionClose() throws java.lang.Exception;
    Code:
       0: invokestatic  #50                 // Method createClient:()Lio/undertow/client/UndertowClient;
       3: astore_1
       4: new           #53                 // class java/util/concurrent/CountDownLatch
       7: dup
       8: iconst_1
       9: invokespecial #54                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      12: astore_2
      13: aload_1
      14: getstatic     #55                 // Field ADDRESS:Ljava/net/URI;
      17: getstatic     #23                 // Field worker:Lorg/xnio/XnioWorker;
      20: invokestatic  #56                 // Method io/undertow/testutils/DefaultServer.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      23: getstatic     #47                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      26: invokevirtual #57                 // Method io/undertow/client/UndertowClient.connect:(Ljava/net/URI;Lorg/xnio/XnioWorker;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      29: invokeinterface #58,  1           // InterfaceMethod org/xnio/IoFuture.get:()Ljava/lang/Object;
      34: checkcast     #59                 // class io/undertow/client/ClientConnection
      37: astore_3
      38: new           #97                 // class io/undertow/client/ClientRequest
      41: dup
      42: invokespecial #98                 // Method io/undertow/client/ClientRequest."<init>":()V
      45: ldc           #34                 // String /message
      47: invokevirtual #99                 // Method io/undertow/client/ClientRequest.setPath:(Ljava/lang/String;)Lio/undertow/client/ClientRequest;
      50: getstatic     #100                // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
      53: invokevirtual #101                // Method io/undertow/client/ClientRequest.setMethod:(Lio/undertow/util/HttpString;)Lio/undertow/client/ClientRequest;
      56: astore        4
      58: aload         4
      60: invokevirtual #102                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      63: getstatic     #103                // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
      66: invokestatic  #104                // Method io/undertow/testutils/DefaultServer.getHostAddress:()Ljava/lang/String;
      69: invokevirtual #17                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      72: pop
      73: new           #51                 // class java/util/concurrent/CopyOnWriteArrayList
      76: dup
      77: invokespecial #52                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      80: astore        5
      82: aload         4
      84: invokevirtual #102                // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      87: getstatic     #105                // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
      90: getstatic     #106                // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
      93: invokevirtual #107                // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      96: invokevirtual #108                // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      99: pop
     100: aload_3
     101: aload         4
     103: aload_0
     104: aload         5
     106: aload_2
     107: invokespecial #2                  // Method createClientCallback:(Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)Lio/undertow/client/ClientCallback;
     110: invokeinterface #109,  3          // InterfaceMethod io/undertow/client/ClientConnection.sendRequest:(Lio/undertow/client/ClientRequest;Lio/undertow/client/ClientCallback;)V
     115: aload_2
     116: invokevirtual #110                // Method java/util/concurrent/CountDownLatch.await:()V
     119: aload         5
     121: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     126: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     131: checkcast     #73                 // class io/undertow/client/ClientResponse
     134: astore        6
     136: ldc           #11                 // String Hello World!
     138: aload         6
     140: getstatic     #1                  // Field RESPONSE_BODY:Lio/undertow/util/AttachmentKey;
     143: invokevirtual #74                 // Method io/undertow/client/ClientResponse.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     146: invokestatic  #75                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     149: iconst_0
     150: invokestatic  #111                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     153: aload_3
     154: invokeinterface #112,  1          // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
     159: invokestatic  #111                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     162: invokestatic  #75                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     165: aload_3
     166: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     169: goto          181
     172: astore        7
     174: aload_3
     175: invokestatic  #76                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     178: aload         7
     180: athrow
     181: return
    Exception table:
       from    to  target type
          38   165   172   any
         172   174   172   any

  private io.undertow.client.ClientCallback<io.undertow.client.ClientExchange> createClientCallback(java.util.List<io.undertow.client.ClientResponse>, java.util.concurrent.CountDownLatch);
    Code:
       0: new           #113                // class io/undertow/client/http/AjpClientTestCase$7
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #114                // Method io/undertow/client/http/AjpClientTestCase$7."<init>":(Lio/undertow/client/http/AjpClientTestCase;Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)V
      10: areturn

  static io.undertow.client.ClientCallback access$000(io.undertow.client.http.AjpClientTestCase, java.util.List, java.util.concurrent.CountDownLatch);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method createClientCallback:(Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)Lio/undertow/client/ClientCallback;
       6: areturn

  static io.undertow.util.AttachmentKey access$100();
    Code:
       0: getstatic     #1                  // Field RESPONSE_BODY:Lio/undertow/util/AttachmentKey;
       3: areturn

  static {};
    Code:
       0: invokestatic  #115                // Method io/undertow/testutils/DefaultServer.getHostPort:()I
       3: bipush        10
       5: iadd
       6: putstatic     #29                 // Field AJP_PORT:I
       9: ldc           #96                 // class java/lang/String
      11: invokestatic  #116                // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      14: putstatic     #1                  // Field RESPONSE_BODY:Lio/undertow/util/AttachmentKey;
      17: invokestatic  #117                // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      20: getstatic     #118                // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
      23: bipush        8
      25: invokevirtual #119                // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      28: getstatic     #120                // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      31: iconst_1
      32: invokevirtual #121                // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      35: getstatic     #122                // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
      38: iconst_1
      39: invokevirtual #121                // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      42: getstatic     #123                // Field org/xnio/Options.WORKER_NAME:Lorg/xnio/Option;
      45: ldc           #124                // String Client
      47: invokevirtual #125                // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
      50: astore_0
      51: aload_0
      52: invokevirtual #126                // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      55: putstatic     #21                 // Field DEFAULT_OPTIONS:Lorg/xnio/OptionMap;
      58: new           #127                // class java/net/URI
      61: dup
      62: new           #8                  // class java/lang/StringBuilder
      65: dup
      66: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #128                // String ajp://
      71: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokestatic  #104                // Method io/undertow/testutils/DefaultServer.getHostAddress:()Ljava/lang/String;
      77: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #129                // String :
      82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: getstatic     #29                 // Field AJP_PORT:I
      88: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #130                // Method java/net/URI."<init>":(Ljava/lang/String;)V
      97: putstatic     #55                 // Field ADDRESS:Ljava/net/URI;
     100: goto          113
     103: astore_1
     104: new           #132                // class java/lang/RuntimeException
     107: dup
     108: aload_1
     109: invokespecial #133                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     112: athrow
     113: return
    Exception table:
       from    to  target type
          58   100   103   Class java/net/URISyntaxException
}
