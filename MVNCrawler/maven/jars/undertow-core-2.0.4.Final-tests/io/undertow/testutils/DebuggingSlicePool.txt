Compiled from "DebuggingSlicePool.java"
public class io.undertow.testutils.DebuggingSlicePool implements io.undertow.connector.ByteBufferPool {
  private static final java.lang.ThreadLocal<java.lang.String> ALLOCATION_CONTEXT;

  static final java.util.Set<io.undertow.testutils.DebuggingSlicePool$DebuggingBuffer> BUFFERS;

  static volatile java.lang.String currentLabel;

  private final io.undertow.connector.ByteBufferPool delegate;

  private final io.undertow.connector.ByteBufferPool arrayBacked;

  public io.undertow.testutils.DebuggingSlicePool(io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field delegate:Lio/undertow/connector/ByteBufferPool;
       9: aload_1
      10: invokeinterface #4,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.isDirect:()Z
      15: ifeq          38
      18: aload_0
      19: new           #5                  // class io/undertow/testutils/DebuggingSlicePool
      22: dup
      23: aload_1
      24: invokeinterface #6,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.getArrayBackedPool:()Lio/undertow/connector/ByteBufferPool;
      29: invokespecial #7                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;)V
      32: putfield      #8                  // Field arrayBacked:Lio/undertow/connector/ByteBufferPool;
      35: goto          43
      38: aload_0
      39: aload_0
      40: putfield      #8                  // Field arrayBacked:Lio/undertow/connector/ByteBufferPool;
      43: return

  public static void addContext(java.lang.String);
    Code:
       0: getstatic     #1                  // Field ALLOCATION_CONTEXT:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #9                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public io.undertow.connector.PooledByteBuffer allocate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #10,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       9: astore_1
      10: new           #11                 // class io/undertow/testutils/DebuggingSlicePool$DebuggingBuffer
      13: dup
      14: aload_1
      15: getstatic     #12                 // Field currentLabel:Ljava/lang/String;
      18: invokespecial #13                 // Method io/undertow/testutils/DebuggingSlicePool$DebuggingBuffer."<init>":(Lio/undertow/connector/PooledByteBuffer;Ljava/lang/String;)V
      21: areturn

  public io.undertow.connector.ByteBufferPool getArrayBackedPool();
    Code:
       0: aload_0
       1: getfield      #8                  // Field arrayBacked:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.close:()V
       9: return

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.getBufferSize:()I
       9: ireturn

  public boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #4,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.isDirect:()Z
       9: ireturn

  static java.lang.ThreadLocal access$000();
    Code:
       0: getstatic     #1                  // Field ALLOCATION_CONTEXT:Ljava/lang/ThreadLocal;
       3: areturn

  static {};
    Code:
       0: new           #16                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #17                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #1                  // Field ALLOCATION_CONTEXT:Ljava/lang/ThreadLocal;
      10: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: invokestatic  #20                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      20: putstatic     #21                 // Field BUFFERS:Ljava/util/Set;
      23: return
}
