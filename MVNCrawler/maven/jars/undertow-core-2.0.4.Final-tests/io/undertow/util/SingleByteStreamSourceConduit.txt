Compiled from "SingleByteStreamSourceConduit.java"
public class io.undertow.util.SingleByteStreamSourceConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> {
  private final int singleByteReads;

  private int state;

  public io.undertow.util.SingleByteStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field state:I
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field singleByteReads:I
      15: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteReads:I
       8: if_icmpgt     19
      11: aload_1
      12: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      15: iconst_1
      16: if_icmpne     33
      19: aload_0
      20: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      23: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      26: aload_1
      27: invokeinterface #7,  2            // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      32: ireturn
      33: aload_0
      34: dup
      35: getfield      #2                  // Field state:I
      38: dup_x1
      39: iconst_1
      40: iadd
      41: putfield      #2                  // Field state:I
      44: iconst_2
      45: irem
      46: ifne          55
      49: aload_0
      50: invokespecial #8                  // Method wakeupIfSsl:()V
      53: iconst_0
      54: ireturn
      55: aload_1
      56: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: aload_1
      65: invokevirtual #9                  // Method java/nio/ByteBuffer.limit:()I
      68: istore_2
      69: aload_1
      70: aload_1
      71: invokevirtual #10                 // Method java/nio/ByteBuffer.position:()I
      74: iconst_1
      75: iadd
      76: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      79: pop
      80: aload_0
      81: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      84: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      87: aload_1
      88: invokeinterface #7,  2            // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      93: istore_3
      94: iload_3
      95: iconst_m1
      96: if_icmpeq     103
      99: aload_0
     100: invokespecial #8                  // Method wakeupIfSsl:()V
     103: iload_3
     104: istore        4
     106: aload_1
     107: iload_2
     108: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     111: pop
     112: iload         4
     114: ireturn
     115: astore        5
     117: aload_1
     118: iload_2
     119: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     122: pop
     123: aload         5
     125: athrow
    Exception table:
       from    to  target type
          69   106   115   any
         115   117   115   any

  private void wakeupIfSsl();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isReadResumed:()Z
       4: ifeq          32
       7: aload_0
       8: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      11: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      14: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #14                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      20: ldc           #15                 // String Jsse
      22: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      25: ifeq          32
      28: aload_0
      29: invokevirtual #17                 // Method wakeupReads:()V
      32: return

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteReads:I
       8: if_icmple     27
      11: aload_0
      12: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokeinterface #18,  4           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:([Ljava/nio/ByteBuffer;II)J
      26: lreturn
      27: aload_0
      28: dup
      29: getfield      #2                  // Field state:I
      32: dup_x1
      33: iconst_1
      34: iadd
      35: putfield      #2                  // Field state:I
      38: iconst_2
      39: irem
      40: ifne          45
      43: lconst_0
      44: lreturn
      45: aconst_null
      46: astore        4
      48: iload_2
      49: istore        5
      51: iload         5
      53: iload_2
      54: iload_3
      55: iadd
      56: if_icmpge     84
      59: aload_1
      60: iload         5
      62: aaload
      63: invokevirtual #19                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      66: ifeq          78
      69: aload_1
      70: iload         5
      72: aaload
      73: astore        4
      75: goto          84
      78: iinc          5, 1
      81: goto          51
      84: aload         4
      86: ifnonnull     91
      89: lconst_0
      90: lreturn
      91: aload         4
      93: invokevirtual #9                  // Method java/nio/ByteBuffer.limit:()I
      96: istore        5
      98: aload         4
     100: aload         4
     102: invokevirtual #10                 // Method java/nio/ByteBuffer.position:()I
     105: iconst_1
     106: iadd
     107: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     110: pop
     111: aload_0
     112: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
     115: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
     118: aload         4
     120: invokeinterface #7,  2            // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     125: i2l
     126: lstore        6
     128: aload         4
     130: iload         5
     132: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     135: pop
     136: lload         6
     138: lreturn
     139: astore        8
     141: aload         4
     143: iload         5
     145: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     148: pop
     149: aload         8
     151: athrow
    Exception table:
       from    to  target type
          98   128   139   any
         139   141   139   any

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteReads:I
       8: if_icmple     28
      11: aload_0
      12: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      18: lload_1
      19: lload_3
      20: aload         5
      22: invokeinterface #20,  6           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.transferTo:(JJLjava/nio/channels/FileChannel;)J
      27: lreturn
      28: aload_0
      29: dup
      30: getfield      #2                  // Field state:I
      33: dup_x1
      34: iconst_1
      35: iadd
      36: putfield      #2                  // Field state:I
      39: iconst_2
      40: irem
      41: ifne          46
      44: lconst_0
      45: lreturn
      46: aload_0
      47: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      50: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      53: lload_1
      54: lload_3
      55: lconst_0
      56: lcmp
      57: ifne          64
      60: lconst_0
      61: goto          65
      64: lload_3
      65: aload         5
      67: invokeinterface #20,  6           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.transferTo:(JJLjava/nio/channels/FileChannel;)J
      72: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteReads:I
       8: if_icmple     28
      11: aload_0
      12: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      18: lload_1
      19: aload_3
      20: aload         4
      22: invokeinterface #21,  5           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
      27: lreturn
      28: aload_0
      29: dup
      30: getfield      #2                  // Field state:I
      33: dup_x1
      34: iconst_1
      35: iadd
      36: putfield      #2                  // Field state:I
      39: iconst_2
      40: irem
      41: ifne          55
      44: aload_3
      45: aload_3
      46: invokevirtual #9                  // Method java/nio/ByteBuffer.limit:()I
      49: invokevirtual #22                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      52: pop
      53: lconst_0
      54: lreturn
      55: aload_0
      56: getfield      #5                  // Field next:Lorg/xnio/conduits/Conduit;
      59: checkcast     #6                  // class org/xnio/conduits/StreamSourceConduit
      62: lload_1
      63: lconst_0
      64: lcmp
      65: ifne          72
      68: lconst_0
      69: goto          73
      72: lload_1
      73: aload_3
      74: aload         4
      76: invokeinterface #21,  5           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
      81: lreturn
}
