Compiled from "Route53RecoveryControlConfigMock.scala"
public final class zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfigMock$$anon$2 implements zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfig {
  private final zio.mock.Proxy proxy$3;

  private final zio.Runtime rts$2;

  private final software.amazon.awssdk.services.route53recoverycontrolconfig.Route53RecoveryControlConfigAsyncClient api;

  public zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfigMock$$anon$2(zio.mock.Proxy, zio.Runtime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       5: aload_0
       6: aload_2
       7: putfield      #117                // Field rts$2:Lzio/Runtime;
      10: aload_0
      11: invokespecial #120                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: aconst_null
      16: putfield      #122                // Field api:Lsoftware/amazon/awssdk/services/route53recoverycontrolconfig/Route53RecoveryControlConfigAsyncClient;
      19: return

  public software.amazon.awssdk.services.route53recoverycontrolconfig.Route53RecoveryControlConfigAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #122                // Field api:Lsoftware/amazon/awssdk/services/route53recoverycontrolconfig/Route53RecoveryControlConfigAsyncClient;
       4: areturn

  public zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfig withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: areturn

  public zio.ZIO describeSafetyRule(zio.aws.route53recoverycontrolconfig.model.DescribeSafetyRuleRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #138                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeSafetyRule$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeSafetyRule$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO updateSafetyRule(zio.aws.route53recoverycontrolconfig.model.UpdateSafetyRuleRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #150                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UpdateSafetyRule$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UpdateSafetyRule$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream listControlPanels(zio.aws.route53recoverycontrolconfig.model.ListControlPanelsRequest);
    Code:
       0: getstatic     #158                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #179,  0            // InvokeDynamic #0:apply:(Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$$anon$2;Lzio/aws/route53recoverycontrolconfig/model/ListControlPanelsRequest;)Lscala/Function1;
      10: invokevirtual #183                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #185                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO listControlPanelsPaginated(zio.aws.route53recoverycontrolconfig.model.ListControlPanelsRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #191                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListControlPanelsPaginated$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListControlPanelsPaginated$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO describeControlPanel(zio.aws.route53recoverycontrolconfig.model.DescribeControlPanelRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #196                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeControlPanel$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeControlPanel$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO deleteRoutingControl(zio.aws.route53recoverycontrolconfig.model.DeleteRoutingControlRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #202                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteRoutingControl$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteRoutingControl$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO createRoutingControl(zio.aws.route53recoverycontrolconfig.model.CreateRoutingControlRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #208                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateRoutingControl$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateRoutingControl$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO createCluster(zio.aws.route53recoverycontrolconfig.model.CreateClusterRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #214                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateCluster$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateCluster$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO deleteCluster(zio.aws.route53recoverycontrolconfig.model.DeleteClusterRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #220                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteCluster$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteCluster$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO createSafetyRule(zio.aws.route53recoverycontrolconfig.model.CreateSafetyRuleRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #226                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateSafetyRule$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateSafetyRule$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream listSafetyRules(zio.aws.route53recoverycontrolconfig.model.ListSafetyRulesRequest);
    Code:
       0: getstatic     #158                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #237,  0            // InvokeDynamic #1:apply:(Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$$anon$2;Lzio/aws/route53recoverycontrolconfig/model/ListSafetyRulesRequest;)Lscala/Function1;
      10: invokevirtual #183                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #185                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO listSafetyRulesPaginated(zio.aws.route53recoverycontrolconfig.model.ListSafetyRulesRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #243                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListSafetyRulesPaginated$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListSafetyRulesPaginated$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream listRoutingControls(zio.aws.route53recoverycontrolconfig.model.ListRoutingControlsRequest);
    Code:
       0: getstatic     #158                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #253,  0            // InvokeDynamic #2:apply:(Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$$anon$2;Lzio/aws/route53recoverycontrolconfig/model/ListRoutingControlsRequest;)Lscala/Function1;
      10: invokevirtual #183                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #185                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO listRoutingControlsPaginated(zio.aws.route53recoverycontrolconfig.model.ListRoutingControlsRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #259                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListRoutingControlsPaginated$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListRoutingControlsPaginated$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream listAssociatedRoute53HealthChecks(zio.aws.route53recoverycontrolconfig.model.ListAssociatedRoute53HealthChecksRequest);
    Code:
       0: getstatic     #158                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #269,  0            // InvokeDynamic #3:apply:(Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$$anon$2;Lzio/aws/route53recoverycontrolconfig/model/ListAssociatedRoute53HealthChecksRequest;)Lscala/Function1;
      10: invokevirtual #183                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #185                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO listAssociatedRoute53HealthChecksPaginated(zio.aws.route53recoverycontrolconfig.model.ListAssociatedRoute53HealthChecksRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #275                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListAssociatedRoute53HealthChecksPaginated$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListAssociatedRoute53HealthChecksPaginated$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO untagResource(zio.aws.route53recoverycontrolconfig.model.UntagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #280                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UntagResource$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UntagResource$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO describeRoutingControl(zio.aws.route53recoverycontrolconfig.model.DescribeRoutingControlRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #286                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeRoutingControl$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeRoutingControl$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO describeCluster(zio.aws.route53recoverycontrolconfig.model.DescribeClusterRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #292                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeCluster$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DescribeCluster$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO listTagsForResource(zio.aws.route53recoverycontrolconfig.model.ListTagsForResourceRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #298                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListTagsForResource$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListTagsForResource$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream listClusters(zio.aws.route53recoverycontrolconfig.model.ListClustersRequest);
    Code:
       0: getstatic     #158                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #309,  0            // InvokeDynamic #4:apply:(Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$$anon$2;Lzio/aws/route53recoverycontrolconfig/model/ListClustersRequest;)Lscala/Function1;
      10: invokevirtual #183                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #185                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO listClustersPaginated(zio.aws.route53recoverycontrolconfig.model.ListClustersRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #315                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListClustersPaginated$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListClustersPaginated$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO tagResource(zio.aws.route53recoverycontrolconfig.model.TagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #320                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$TagResource$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$TagResource$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO updateControlPanel(zio.aws.route53recoverycontrolconfig.model.UpdateControlPanelRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #326                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UpdateControlPanel$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UpdateControlPanel$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO createControlPanel(zio.aws.route53recoverycontrolconfig.model.CreateControlPanelRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #332                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateControlPanel$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$CreateControlPanel$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO deleteSafetyRule(zio.aws.route53recoverycontrolconfig.model.DeleteSafetyRuleRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #338                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteSafetyRule$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteSafetyRule$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO deleteControlPanel(zio.aws.route53recoverycontrolconfig.model.DeleteControlPanelRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #344                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteControlPanel$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$DeleteControlPanel$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO updateRoutingControl(zio.aws.route53recoverycontrolconfig.model.UpdateRoutingControlRequest);
    Code:
       0: aload_0
       1: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
       4: getstatic     #350                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UpdateRoutingControl$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$UpdateRoutingControl$;
       7: aload_1
       8: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #354                // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfig;
       6: areturn

  private final zio.stream.ZStream listControlPanels$$anonfun$1(zio.aws.route53recoverycontrolconfig.model.ListControlPanelsRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #117                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #359,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
      13: getstatic     #362                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListControlPanels$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListControlPanels$;
      16: aload_1
      17: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #364                // String zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfigMock.compose.$anon.listControlPanels(Route53RecoveryControlConfigMock.scala:231)
      23: aload_2
      24: invokeinterface #368,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #374,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #185                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream listSafetyRules$$anonfun$1(zio.aws.route53recoverycontrolconfig.model.ListSafetyRulesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #117                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #359,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
      13: getstatic     #379                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListSafetyRules$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListSafetyRules$;
      16: aload_1
      17: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #381                // String zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfigMock.compose.$anon.listSafetyRules(Route53RecoveryControlConfigMock.scala:272)
      23: aload_2
      24: invokeinterface #368,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #374,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #185                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream listRoutingControls$$anonfun$1(zio.aws.route53recoverycontrolconfig.model.ListRoutingControlsRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #117                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #359,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
      13: getstatic     #385                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListRoutingControls$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListRoutingControls$;
      16: aload_1
      17: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #387                // String zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfigMock.compose.$anon.listRoutingControls(Route53RecoveryControlConfigMock.scala:289)
      23: aload_2
      24: invokeinterface #368,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #374,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #185                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream listAssociatedRoute53HealthChecks$$anonfun$1(zio.aws.route53recoverycontrolconfig.model.ListAssociatedRoute53HealthChecksRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #117                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #359,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
      13: getstatic     #391                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListAssociatedRoute53HealthChecks$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListAssociatedRoute53HealthChecks$;
      16: aload_1
      17: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #393                // String zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfigMock.compose.$anon.listAssociatedRoute53HealthChecks(Route53RecoveryControlConfigMock.scala:305)
      23: aload_2
      24: invokeinterface #368,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #374,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #185                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream listClusters$$anonfun$1(zio.aws.route53recoverycontrolconfig.model.ListClustersRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #117                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #359,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #115                // Field proxy$3:Lzio/mock/Proxy;
      13: getstatic     #397                // Field zio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListClusters$.MODULE$:Lzio/aws/route53recoverycontrolconfig/Route53RecoveryControlConfigMock$ListClusters$;
      16: aload_1
      17: invokevirtual #144                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #399                // String zio.aws.route53recoverycontrolconfig.Route53RecoveryControlConfigMock.compose.$anon.listClusters(Route53RecoveryControlConfigMock.scala:338)
      23: aload_2
      24: invokeinterface #368,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #374,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #185                // class zio/stream/ZStream
      38: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #411,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
