Compiled from "ParameterBox.java"
public class org.hortonmachine.hmachine.modules.hydrogeomorphology.peakflow.ParameterBox {
  private double n_idf;

  private double a_idf;

  private double area;

  private double timestep;

  private double diffusionparameter;

  private double vc;

  private double delta;

  private double xres;

  private double yres;

  private double npixel;

  private double size;

  private double[] time;

  private double[] pxl;

  private boolean isSubsuperficial;

  private double delta_sub;

  private double npixel_sub;

  private double area_sub;

  private double v_sub;

  private double resid_time;

  private double[] time_sub;

  private double[] pxl_sub;

  private double vcvv;

  private double phi;

  private int basinstate;

  private boolean isScs;

  private java.lang.String outputFile;

  public org.hortonmachine.hmachine.modules.hydrogeomorphology.peakflow.ParameterBox();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // double -9999.0d
       8: putfield      #4                  // Field n_idf:D
      11: aload_0
      12: ldc2_w        #2                  // double -9999.0d
      15: putfield      #5                  // Field a_idf:D
      18: aload_0
      19: ldc2_w        #2                  // double -9999.0d
      22: putfield      #6                  // Field area:D
      25: aload_0
      26: ldc2_w        #2                  // double -9999.0d
      29: putfield      #7                  // Field timestep:D
      32: aload_0
      33: ldc2_w        #2                  // double -9999.0d
      36: putfield      #8                  // Field diffusionparameter:D
      39: aload_0
      40: ldc2_w        #2                  // double -9999.0d
      43: putfield      #9                  // Field vc:D
      46: aload_0
      47: ldc2_w        #2                  // double -9999.0d
      50: putfield      #10                 // Field delta:D
      53: aload_0
      54: ldc2_w        #2                  // double -9999.0d
      57: putfield      #11                 // Field xres:D
      60: aload_0
      61: ldc2_w        #2                  // double -9999.0d
      64: putfield      #12                 // Field yres:D
      67: aload_0
      68: ldc2_w        #2                  // double -9999.0d
      71: putfield      #13                 // Field npixel:D
      74: aload_0
      75: ldc2_w        #2                  // double -9999.0d
      78: putfield      #14                 // Field size:D
      81: aload_0
      82: aconst_null
      83: putfield      #15                 // Field time:[D
      86: aload_0
      87: aconst_null
      88: putfield      #16                 // Field pxl:[D
      91: aload_0
      92: iconst_0
      93: putfield      #17                 // Field isSubsuperficial:Z
      96: aload_0
      97: ldc2_w        #2                  // double -9999.0d
     100: putfield      #18                 // Field delta_sub:D
     103: aload_0
     104: ldc2_w        #2                  // double -9999.0d
     107: putfield      #19                 // Field npixel_sub:D
     110: aload_0
     111: ldc2_w        #2                  // double -9999.0d
     114: putfield      #20                 // Field area_sub:D
     117: aload_0
     118: ldc2_w        #2                  // double -9999.0d
     121: putfield      #21                 // Field v_sub:D
     124: aload_0
     125: ldc2_w        #2                  // double -9999.0d
     128: putfield      #22                 // Field resid_time:D
     131: aload_0
     132: aconst_null
     133: putfield      #23                 // Field time_sub:[D
     136: aload_0
     137: aconst_null
     138: putfield      #24                 // Field pxl_sub:[D
     141: aload_0
     142: dconst_0
     143: putfield      #25                 // Field vcvv:D
     146: aload_0
     147: dconst_0
     148: putfield      #26                 // Field phi:D
     151: aload_0
     152: iconst_m1
     153: putfield      #27                 // Field basinstate:I
     156: aload_0
     157: iconst_0
     158: putfield      #28                 // Field isScs:Z
     161: aload_0
     162: aconst_null
     163: putfield      #29                 // Field outputFile:Ljava/lang/String;
     166: return

  public boolean isSubsuperficial();
    Code:
       0: aload_0
       1: getfield      #17                 // Field isSubsuperficial:Z
       4: ireturn

  public void setSubsuperficial(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field isSubsuperficial:Z
       5: return

  public boolean a_idfExists();
    Code:
       0: aload_0
       1: getfield      #5                  // Field a_idf:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getA_idf();
    Code:
       0: aload_0
       1: getfield      #5                  // Field a_idf:D
       4: dreturn

  public void setA_idf(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #5                  // Field a_idf:D
       5: return

  public boolean n_idfExists();
    Code:
       0: aload_0
       1: getfield      #4                  // Field n_idf:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getN_idf();
    Code:
       0: aload_0
       1: getfield      #4                  // Field n_idf:D
       4: dreturn

  public void setN_idf(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #4                  // Field n_idf:D
       5: return

  public boolean areaExists();
    Code:
       0: aload_0
       1: getfield      #6                  // Field area:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getArea();
    Code:
       0: aload_0
       1: getfield      #6                  // Field area:D
       4: dreturn

  public void setArea(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #6                  // Field area:D
       5: return

  public boolean area_subExists();
    Code:
       0: aload_0
       1: getfield      #20                 // Field area_sub:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public boolean timestepExists();
    Code:
       0: aload_0
       1: getfield      #7                  // Field timestep:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getTimestep();
    Code:
       0: aload_0
       1: getfield      #7                  // Field timestep:D
       4: dreturn

  public void setTimestep(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #7                  // Field timestep:D
       5: return

  public boolean diffusionparameterExists();
    Code:
       0: aload_0
       1: getfield      #8                  // Field diffusionparameter:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getDiffusionparameter();
    Code:
       0: aload_0
       1: getfield      #8                  // Field diffusionparameter:D
       4: dreturn

  public void setDiffusionparameter(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #8                  // Field diffusionparameter:D
       5: return

  public boolean vcExists();
    Code:
       0: aload_0
       1: getfield      #9                  // Field vc:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getVc();
    Code:
       0: aload_0
       1: getfield      #9                  // Field vc:D
       4: dreturn

  public void setVc(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #9                  // Field vc:D
       5: return

  public boolean deltaExists();
    Code:
       0: aload_0
       1: getfield      #10                 // Field delta:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getDelta();
    Code:
       0: aload_0
       1: getfield      #10                 // Field delta:D
       4: dreturn

  public void setDelta(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #10                 // Field delta:D
       5: return

  public boolean xresExists();
    Code:
       0: aload_0
       1: getfield      #11                 // Field xres:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getXres();
    Code:
       0: aload_0
       1: getfield      #11                 // Field xres:D
       4: dreturn

  public void setXres(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #11                 // Field xres:D
       5: return

  public boolean yresExists();
    Code:
       0: aload_0
       1: getfield      #12                 // Field yres:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getYres();
    Code:
       0: aload_0
       1: getfield      #12                 // Field yres:D
       4: dreturn

  public void setYres(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #12                 // Field yres:D
       5: return

  public boolean npixelExists();
    Code:
       0: aload_0
       1: getfield      #13                 // Field npixel:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getNpixel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field npixel:D
       4: dreturn

  public void setNpixel(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #13                 // Field npixel:D
       5: return

  public boolean sizeExists();
    Code:
       0: aload_0
       1: getfield      #14                 // Field size:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field size:D
       4: dreturn

  public void setSize(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #14                 // Field size:D
       5: return

  public boolean timeExists();
    Code:
       0: aload_0
       1: getfield      #15                 // Field time:[D
       4: ifnull        9
       7: iconst_1
       8: ireturn
       9: iconst_0
      10: ireturn

  public double[] getTime();
    Code:
       0: aload_0
       1: getfield      #15                 // Field time:[D
       4: areturn

  public void setTime(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field time:[D
       5: return

  public boolean pxlExists();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pxl:[D
       4: ifnull        9
       7: iconst_1
       8: ireturn
       9: iconst_0
      10: ireturn

  public double[] getPxl();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pxl:[D
       4: areturn

  public void setPxl(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field pxl:[D
       5: return

  public double getArea_sub();
    Code:
       0: aload_0
       1: getfield      #20                 // Field area_sub:D
       4: dreturn

  public void setArea_sub(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #20                 // Field area_sub:D
       5: return

  public boolean delta_subExists();
    Code:
       0: aload_0
       1: getfield      #18                 // Field delta_sub:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getDelta_sub();
    Code:
       0: aload_0
       1: getfield      #18                 // Field delta_sub:D
       4: dreturn

  public void setDelta_sub(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #18                 // Field delta_sub:D
       5: return

  public boolean npixel_subExists();
    Code:
       0: aload_0
       1: getfield      #19                 // Field npixel_sub:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getNpixel_sub();
    Code:
       0: aload_0
       1: getfield      #19                 // Field npixel_sub:D
       4: dreturn

  public void setNpixel_sub(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #19                 // Field npixel_sub:D
       5: return

  public boolean pxl_subExists();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pxl_sub:[D
       4: ifnull        9
       7: iconst_1
       8: ireturn
       9: iconst_0
      10: ireturn

  public double[] getPxl_sub();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pxl_sub:[D
       4: areturn

  public void setPxl_sub(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field pxl_sub:[D
       5: return

  public boolean resid_timeExists();
    Code:
       0: aload_0
       1: getfield      #22                 // Field resid_time:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getResid_time();
    Code:
       0: aload_0
       1: getfield      #22                 // Field resid_time:D
       4: dreturn

  public void setResid_time(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #22                 // Field resid_time:D
       5: return

  public boolean time_subExists();
    Code:
       0: aload_0
       1: getfield      #23                 // Field time_sub:[D
       4: ifnull        9
       7: iconst_1
       8: ireturn
       9: iconst_0
      10: ireturn

  public double[] getTime_sub();
    Code:
       0: aload_0
       1: getfield      #23                 // Field time_sub:[D
       4: areturn

  public void setTime_sub(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field time_sub:[D
       5: return

  public boolean v_subExists();
    Code:
       0: aload_0
       1: getfield      #21                 // Field v_sub:D
       4: ldc2_w        #2                  // double -9999.0d
       7: dcmpl
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public double getV_sub();
    Code:
       0: aload_0
       1: getfield      #21                 // Field v_sub:D
       4: dreturn

  public void setV_sub(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #21                 // Field v_sub:D
       5: return

  public int getBasinstate();
    Code:
       0: aload_0
       1: getfield      #27                 // Field basinstate:I
       4: ireturn

  public void setBasinstate(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field basinstate:I
       5: return

  public double getVcvv();
    Code:
       0: aload_0
       1: getfield      #25                 // Field vcvv:D
       4: dreturn

  public void setVcvv(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #25                 // Field vcvv:D
       5: return

  public double getPhi();
    Code:
       0: aload_0
       1: getfield      #26                 // Field phi:D
       4: dreturn

  public void setPhi(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #26                 // Field phi:D
       5: return

  public boolean isScs();
    Code:
       0: aload_0
       1: getfield      #28                 // Field isScs:Z
       4: ireturn

  public void setScs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field isScs:Z
       5: return

  public java.lang.String getOutputFile();
    Code:
       0: aload_0
       1: getfield      #29                 // Field outputFile:Ljava/lang/String;
       4: areturn

  public void setOutputFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field outputFile:Ljava/lang/String;
       5: return
}
