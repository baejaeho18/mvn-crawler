Compiled from "Section.java"
public class org.hortonmachine.hmachine.modules.hydrogeomorphology.saintgeo.Section implements java.lang.Comparable<org.hortonmachine.hmachine.modules.hydrogeomorphology.saintgeo.Section> {
  private int id;

  private int numNodes;

  private double progressiveAlongReach;

  private java.util.List<java.lang.Double> sectionProgressive;

  private java.util.List<java.lang.Double> sectionElevation;

  private int startNode;

  private int endNode;

  private java.util.List<java.lang.Double> stricklerCoeff;

  private double minElevation;

  private double maxElevation;

  private java.util.List<java.lang.Integer> qDeltaPointsIds;

  private boolean hasQDeltas;

  public org.hortonmachine.hmachine.modules.hydrogeomorphology.saintgeo.Section(int, double, int, int, java.util.List<java.lang.Double>, java.util.List<java.lang.Double>, java.util.List<java.lang.Double>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field id:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field numNodes:I
      14: aload_0
      15: ldc2_w        #4                  // double -1.0d
      18: putfield      #6                  // Field progressiveAlongReach:D
      21: aload_0
      22: aconst_null
      23: putfield      #7                  // Field sectionProgressive:Ljava/util/List;
      26: aload_0
      27: aconst_null
      28: putfield      #8                  // Field sectionElevation:Ljava/util/List;
      31: aload_0
      32: iconst_m1
      33: putfield      #9                  // Field startNode:I
      36: aload_0
      37: iconst_m1
      38: putfield      #10                 // Field endNode:I
      41: aload_0
      42: aconst_null
      43: putfield      #11                 // Field stricklerCoeff:Ljava/util/List;
      46: aload_0
      47: ldc2_w        #13                 // double 1.7976931348623157E308d
      50: putfield      #15                 // Field minElevation:D
      53: aload_0
      54: ldc2_w        #16                 // double 4.9E-324d
      57: putfield      #18                 // Field maxElevation:D
      60: aload_0
      61: new           #19                 // class java/util/ArrayList
      64: dup
      65: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      68: putfield      #21                 // Field qDeltaPointsIds:Ljava/util/List;
      71: aload_0
      72: iconst_0
      73: putfield      #22                 // Field hasQDeltas:Z
      76: aload_0
      77: iload_1
      78: putfield      #2                  // Field id:I
      81: aload_0
      82: dload_2
      83: putfield      #6                  // Field progressiveAlongReach:D
      86: aload_0
      87: iload         4
      89: putfield      #9                  // Field startNode:I
      92: aload_0
      93: iload         5
      95: putfield      #10                 // Field endNode:I
      98: aload_0
      99: aload         8
     101: putfield      #11                 // Field stricklerCoeff:Ljava/util/List;
     104: aload_0
     105: aload         6
     107: putfield      #7                  // Field sectionProgressive:Ljava/util/List;
     110: aload_0
     111: aload         7
     113: putfield      #8                  // Field sectionElevation:Ljava/util/List;
     116: aload_0
     117: iconst_0
     118: putfield      #3                  // Field numNodes:I
     121: aload         7
     123: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     128: astore        9
     130: aload         9
     132: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     137: ifeq          200
     140: aload         9
     142: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #12                 // class java/lang/Double
     150: invokevirtual #26                 // Method java/lang/Double.doubleValue:()D
     153: dstore        10
     155: aload_0
     156: dup
     157: getfield      #3                  // Field numNodes:I
     160: iconst_1
     161: iadd
     162: putfield      #3                  // Field numNodes:I
     165: dload         10
     167: aload_0
     168: getfield      #18                 // Field maxElevation:D
     171: dcmpl
     172: ifle          181
     175: aload_0
     176: dload         10
     178: putfield      #18                 // Field maxElevation:D
     181: dload         10
     183: aload_0
     184: getfield      #15                 // Field minElevation:D
     187: dcmpg
     188: ifge          197
     191: aload_0
     192: dload         10
     194: putfield      #15                 // Field minElevation:D
     197: goto          130
     200: return

  public int getId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field id:I
       4: ireturn

  public int getNodesNumber();
    Code:
       0: aload_0
       1: getfield      #3                  // Field numNodes:I
       4: ireturn

  public double getProgressiveAlongReach();
    Code:
       0: aload_0
       1: getfield      #6                  // Field progressiveAlongReach:D
       4: dreturn

  public void setProgressiveAlongReach(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #6                  // Field progressiveAlongReach:D
       5: return

  public int getStartNodeIndex();
    Code:
       0: aload_0
       1: getfield      #9                  // Field startNode:I
       4: ireturn

  public int getEndNodeIndex();
    Code:
       0: aload_0
       1: getfield      #10                 // Field endNode:I
       4: ireturn

  public double getStricklerCoeffAt(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field stricklerCoeff:Ljava/util/List;
       4: iload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #12                 // class java/lang/Double
      13: invokevirtual #26                 // Method java/lang/Double.doubleValue:()D
      16: dreturn

  public double getProgressiveAt(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sectionProgressive:Ljava/util/List;
       4: iload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #12                 // class java/lang/Double
      13: invokevirtual #26                 // Method java/lang/Double.doubleValue:()D
      16: dreturn

  public double getElevationAt(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field sectionElevation:Ljava/util/List;
       4: iload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #12                 // class java/lang/Double
      13: invokevirtual #26                 // Method java/lang/Double.doubleValue:()D
      16: dreturn

  public double getMinElevation();
    Code:
       0: aload_0
       1: getfield      #15                 // Field minElevation:D
       4: dreturn

  public double getMaxElevation();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxElevation:D
       4: dreturn

  public void addQDeltaPointId(int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field qDeltaPointsIds:Ljava/util/List;
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: iconst_1
      16: putfield      #22                 // Field hasQDeltas:Z
      19: return

  public java.util.List<java.lang.Integer> getQDeltaPointsIds();
    Code:
       0: aload_0
       1: getfield      #21                 // Field qDeltaPointsIds:Ljava/util/List;
       4: areturn

  public boolean hasQDeltas();
    Code:
       0: aload_0
       1: getfield      #22                 // Field hasQDeltas:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // String Section \n( numNodes =
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field numNodes:I
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #35                 // String \n
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #36                 // String progressiveAlongReach =
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #6                  // Field progressiveAlongReach:D
      33: invokevirtual #37                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      36: ldc           #35                 // String \n
      38: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #38                 // String sectionX[0] =
      43: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #7                  // Field sectionProgressive:Ljava/util/List;
      50: iconst_0
      51: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      56: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #35                 // String \n
      61: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #40                 // String sectionY[0] =
      66: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #8                  // Field sectionElevation:Ljava/util/List;
      73: iconst_0
      74: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      79: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #35                 // String \n
      84: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #41                 // String startNode =
      89: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: getfield      #9                  // Field startNode:I
      96: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      99: ldc           #35                 // String \n
     101: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #42                 // String endNode =
     106: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: getfield      #10                 // Field endNode:I
     113: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     116: ldc           #35                 // String \n
     118: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: ldc           #43                 // String stricklerCoeff[0] =
     123: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: getfield      #11                 // Field stricklerCoeff:Ljava/util/List;
     130: iconst_0
     131: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     136: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: ldc           #35                 // String \n
     141: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #44                 // String minY =
     146: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_0
     150: getfield      #15                 // Field minElevation:D
     153: invokevirtual #37                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     156: ldc           #35                 // String \n
     158: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: ldc           #45                 // String maxY =
     163: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: getfield      #18                 // Field maxElevation:D
     170: invokevirtual #37                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     173: ldc           #35                 // String \n
     175: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: ldc           #46                 // String )
     180: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: astore_1
     187: aload_1
     188: areturn

  public int compareTo(org.hortonmachine.hmachine.modules.hydrogeomorphology.saintgeo.Section);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getProgressiveAlongReach:()D
       4: dstore_2
       5: aload_1
       6: invokevirtual #48                 // Method getProgressiveAlongReach:()D
       9: dstore        4
      11: dload_2
      12: dload         4
      14: dcmpl
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: dload_2
      21: dload         4
      23: dcmpg
      24: ifge          29
      27: iconst_m1
      28: ireturn
      29: dload_2
      30: dload         4
      32: dcmpl
      33: ifle          38
      36: iconst_1
      37: ireturn
      38: iconst_0
      39: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #49                 // class org/hortonmachine/hmachine/modules/hydrogeomorphology/saintgeo/Section
       5: invokevirtual #50                 // Method compareTo:(Lorg/hortonmachine/hmachine/modules/hydrogeomorphology/saintgeo/Section;)I
       8: ireturn
}
