Compiled from "PowerNatBitSet.java"
class de.tum.in.naturals.set.PowerNatBitSet extends java.util.AbstractSet<de.tum.in.naturals.set.NatBitSet> implements it.unimi.dsi.fastutil.Size64 {
  private final de.tum.in.naturals.set.NatBitSet baseSet;

  private final int baseSize;

  static final boolean $assertionsDisabled;

  de.tum.in.naturals.set.PowerNatBitSet(de.tum.in.naturals.set.NatBitSet);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: getstatic     #2                  // Field $assertionsDisabled:Z
       7: ifne          27
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod de/tum/in/naturals/set/NatBitSet.isEmpty:()Z
      16: ifeq          27
      19: new           #4                  // class java/lang/AssertionError
      22: dup
      23: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: aload_1
      29: iconst_1
      30: invokestatic  #6                  // Method de/tum/in/naturals/set/NatBitSets.compact:(Lde/tum/in/naturals/set/NatBitSet;Z)Lde/tum/in/naturals/set/NatBitSet;
      33: putfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
      36: aload_0
      37: aload_0
      38: getfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
      41: invokeinterface #8,  1            // InterfaceMethod de/tum/in/naturals/set/NatBitSet.size:()I
      46: putfield      #9                  // Field baseSize:I
      49: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class it/unimi/dsi/fastutil/ints/IntCollection
       4: ifeq          27
       7: aload_0
       8: getfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
      11: aload_1
      12: checkcast     #10                 // class it/unimi/dsi/fastutil/ints/IntCollection
      15: invokeinterface #11,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.containsAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #12                 // class de/tum/in/naturals/set/PowerNatBitSet
      11: ifeq          31
      14: aload_1
      15: checkcast     #12                 // class de/tum/in/naturals/set/PowerNatBitSet
      18: astore_2
      19: aload_0
      20: getfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
      23: aload_2
      24: getfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
      27: invokevirtual #13                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      30: ireturn
      31: aload_0
      32: aload_1
      33: invokespecial #14                 // Method java/util/AbstractSet.equals:(Ljava/lang/Object;)Z
      36: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
       4: invokevirtual #15                 // Method java/lang/Object.hashCode:()I
       7: invokestatic  #16                 // Method it/unimi/dsi/fastutil/HashCommon.mix:(I)I
      10: ireturn

  public boolean isEmpty();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Iterator<de.tum.in.naturals.set.NatBitSet> iterator();
    Code:
       0: new           #17                 // class de/tum/in/naturals/set/PowerNatBitSetIterator
       3: dup
       4: aload_0
       5: getfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
       8: invokespecial #18                 // Method de/tum/in/naturals/set/PowerNatBitSetIterator."<init>":(Lde/tum/in/naturals/set/NatBitSet;)V
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #9                  // Field baseSize:I
       4: bipush        32
       6: if_icmplt     14
       9: ldc           #20                 // int 2147483647
      11: goto          20
      14: iconst_1
      15: aload_0
      16: getfield      #9                  // Field baseSize:I
      19: ishl
      20: ireturn

  public long size64();
    Code:
       0: lconst_1
       1: aload_0
       2: getfield      #9                  // Field baseSize:I
       5: lshl
       6: lreturn

  public java.lang.String toString();
    Code:
       0: ldc           #21                 // String powerSet(%s)
       2: iconst_1
       3: anewarray     #22                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #7                  // Field baseSet:Lde/tum/in/naturals/set/NatBitSet;
      12: aastore
      13: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: areturn

  static {};
    Code:
       0: ldc           #12                 // class de/tum/in/naturals/set/PowerNatBitSet
       2: invokevirtual #24                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #2                  // Field $assertionsDisabled:Z
      16: return
}
