Compiled from "Nat2IntDenseArrayMap.java"
class de.tum.in.naturals.map.Nat2IntDenseArrayMap$KeySetView extends it.unimi.dsi.fastutil.ints.AbstractIntSet {
  private final de.tum.in.naturals.map.Nat2IntDenseArrayMap map;

  de.tum.in.naturals.map.Nat2IntDenseArrayMap$KeySetView(de.tum.in.naturals.map.Nat2IntDenseArrayMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method it/unimi/dsi/fastutil/ints/AbstractIntSet."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field map:Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;
       9: return

  public de.tum.in.naturals.map.Nat2IntDenseArrayMap$KeySetView clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: areturn

  public void forEach(java.util.function.IntConsumer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;
       4: iconst_0
       5: invokestatic  #3                  // Method de/tum/in/naturals/map/Nat2IntDenseArrayMap.access$000:(Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;I)I
       8: istore_2
       9: iload_2
      10: iflt          34
      13: aload_1
      14: iload_2
      15: invokeinterface #4,  2            // InterfaceMethod java/util/function/IntConsumer.accept:(I)V
      20: aload_0
      21: getfield      #2                  // Field map:Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;
      24: iload_2
      25: iconst_1
      26: iadd
      27: invokestatic  #3                  // Method de/tum/in/naturals/map/Nat2IntDenseArrayMap.access$000:(Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;I)I
      30: istore_2
      31: goto          9
      34: return

  public it.unimi.dsi.fastutil.ints.IntIterator iterator();
    Code:
       0: new           #5                  // class de/tum/in/naturals/map/Nat2IntDenseArrayMap$KeySetIterator
       3: dup
       4: aload_0
       5: getfield      #2                  // Field map:Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;
       8: invokespecial #6                  // Method de/tum/in/naturals/map/Nat2IntDenseArrayMap$KeySetIterator."<init>":(Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;)V
      11: areturn

  public boolean remove(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;
       4: iload_1
       5: invokevirtual #7                  // Method de/tum/in/naturals/map/Nat2IntDenseArrayMap.containsKey:(I)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #2                  // Field map:Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;
      17: iload_1
      18: invokevirtual #8                  // Method de/tum/in/naturals/map/Nat2IntDenseArrayMap.remove:(I)I
      21: pop
      22: iconst_1
      23: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lde/tum/in/naturals/map/Nat2IntDenseArrayMap;
       4: invokevirtual #9                  // Method de/tum/in/naturals/map/Nat2IntDenseArrayMap.size:()I
       7: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method iterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method clone:()Lde/tum/in/naturals/map/Nat2IntDenseArrayMap$KeySetView;
       4: areturn
}
