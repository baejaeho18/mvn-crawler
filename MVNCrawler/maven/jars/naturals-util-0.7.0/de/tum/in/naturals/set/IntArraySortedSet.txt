Compiled from "IntArraySortedSet.java"
public class de.tum.in.naturals.set.IntArraySortedSet extends it.unimi.dsi.fastutil.ints.AbstractIntSet {
  private int[] array;

  private int size;

  static final boolean $assertionsDisabled;

  public de.tum.in.naturals.set.IntArraySortedSet();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method it/unimi/dsi/fastutil/ints/AbstractIntSet."<init>":()V
       4: aload_0
       5: getstatic     #5                  // Field it/unimi/dsi/fastutil/ints/IntArrays.EMPTY_ARRAY:[I
       8: putfield      #2                  // Field array:[I
      11: return

  public de.tum.in.naturals.set.IntArraySortedSet(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method it/unimi/dsi/fastutil/ints/AbstractIntSet."<init>":()V
       4: aload_0
       5: iload_1
       6: newarray       int
       8: putfield      #2                  // Field array:[I
      11: return

  public de.tum.in.naturals.set.IntArraySortedSet(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  1            // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.size:()I
       7: invokespecial #7                  // Method "<init>":(I)V
      10: aload_0
      11: aload_1
      12: invokevirtual #8                  // Method addAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      15: pop
      16: return

  public de.tum.in.naturals.set.IntArraySortedSet(java.util.Collection<? extends java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.size:()I
       7: invokespecial #7                  // Method "<init>":(I)V
      10: aload_0
      11: aload_1
      12: invokevirtual #10                 // Method addAll:(Ljava/util/Collection;)Z
      15: pop
      16: return

  public de.tum.in.naturals.set.IntArraySortedSet(int[], int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method it/unimi/dsi/fastutil/ints/AbstractIntSet."<init>":()V
       4: iload_2
       5: aload_1
       6: arraylength
       7: if_icmple     42
      10: new           #11                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #12                 // String Size %d larger than array %d
      16: iconst_2
      17: anewarray     #13                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: iload_2
      23: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_1
      30: arraylength
      31: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: getstatic     #17                 // Field $assertionsDisabled:Z
      45: ifne          64
      48: aload_1
      49: iload_2
      50: invokestatic  #18                 // Method isSortedUnique:([II)Z
      53: ifne          64
      56: new           #19                 // class java/lang/AssertionError
      59: dup
      60: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      63: athrow
      64: aload_0
      65: aload_1
      66: putfield      #2                  // Field array:[I
      69: aload_0
      70: iload_2
      71: putfield      #3                  // Field size:I
      74: return

  public de.tum.in.naturals.set.IntArraySortedSet(int[]);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method it/unimi/dsi/fastutil/ints/AbstractIntSet."<init>":()V
       4: getstatic     #17                 // Field $assertionsDisabled:Z
       7: ifne          27
      10: aload_1
      11: aload_1
      12: arraylength
      13: invokestatic  #18                 // Method isSortedUnique:([II)Z
      16: ifne          27
      19: new           #19                 // class java/lang/AssertionError
      22: dup
      23: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: aload_1
      29: putfield      #2                  // Field array:[I
      32: aload_0
      33: aload_1
      34: arraylength
      35: putfield      #3                  // Field size:I
      38: return

  private static boolean isSortedUnique(int[], int);
    Code:
       0: getstatic     #17                 // Field $assertionsDisabled:Z
       3: ifne          20
       6: iload_1
       7: aload_0
       8: arraylength
       9: if_icmple     20
      12: new           #19                 // class java/lang/AssertionError
      15: dup
      16: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: arraylength
      22: iconst_1
      23: if_icmpgt     28
      26: iconst_1
      27: ireturn
      28: aload_0
      29: iconst_0
      30: iaload
      31: istore_2
      32: iconst_1
      33: istore_3
      34: iload_3
      35: iload_1
      36: if_icmpge     61
      39: aload_0
      40: iload_3
      41: iaload
      42: istore        4
      44: iload         4
      46: iload_2
      47: if_icmpgt     52
      50: iconst_0
      51: ireturn
      52: iload         4
      54: istore_2
      55: iinc          3, 1
      58: goto          34
      61: iconst_1
      62: ireturn

  public boolean add(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field array:[I
       4: arraylength
       5: ifne          30
       8: aload_0
       9: iconst_2
      10: newarray       int
      12: dup
      13: iconst_0
      14: iload_1
      15: iastore
      16: dup
      17: iconst_1
      18: iconst_0
      19: iastore
      20: putfield      #2                  // Field array:[I
      23: aload_0
      24: iconst_1
      25: putfield      #3                  // Field size:I
      28: iconst_1
      29: ireturn
      30: aload_0
      31: iload_1
      32: invokespecial #21                 // Method keyIndex:(I)I
      35: istore_2
      36: iload_2
      37: iflt          42
      40: iconst_0
      41: ireturn
      42: iload_2
      43: iconst_1
      44: iadd
      45: ineg
      46: istore_3
      47: aload_0
      48: getfield      #3                  // Field size:I
      51: iload_3
      52: isub
      53: istore        4
      55: aload_0
      56: getfield      #3                  // Field size:I
      59: aload_0
      60: getfield      #2                  // Field array:[I
      63: arraylength
      64: if_icmpne     153
      67: aload_0
      68: getfield      #3                  // Field size:I
      71: iconst_2
      72: imul
      73: istore        5
      75: iload_3
      76: aload_0
      77: getfield      #3                  // Field size:I
      80: if_icmpne     106
      83: aload_0
      84: aload_0
      85: getfield      #2                  // Field array:[I
      88: iload         5
      90: invokestatic  #22                 // Method java/util/Arrays.copyOf:([II)[I
      93: putfield      #2                  // Field array:[I
      96: aload_0
      97: getfield      #2                  // Field array:[I
     100: iload_3
     101: iload_1
     102: iastore
     103: goto          150
     106: iload         5
     108: newarray       int
     110: astore        6
     112: aload_0
     113: getfield      #2                  // Field array:[I
     116: iconst_0
     117: aload         6
     119: iconst_0
     120: iload_3
     121: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     124: aload_0
     125: getfield      #2                  // Field array:[I
     128: iload_3
     129: aload         6
     131: iload_3
     132: iconst_1
     133: iadd
     134: iload         4
     136: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     139: aload_0
     140: aload         6
     142: putfield      #2                  // Field array:[I
     145: aload         6
     147: iload_3
     148: iload_1
     149: iastore
     150: goto          198
     153: iload_3
     154: aload_0
     155: getfield      #3                  // Field size:I
     158: if_icmpne     174
     161: aload_0
     162: getfield      #2                  // Field array:[I
     165: aload_0
     166: getfield      #3                  // Field size:I
     169: iload_1
     170: iastore
     171: goto          198
     174: aload_0
     175: getfield      #2                  // Field array:[I
     178: iload_3
     179: aload_0
     180: getfield      #2                  // Field array:[I
     183: iload_3
     184: iconst_1
     185: iadd
     186: iload         4
     188: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     191: aload_0
     192: getfield      #2                  // Field array:[I
     195: iload_3
     196: iload_1
     197: iastore
     198: aload_0
     199: dup
     200: getfield      #3                  // Field size:I
     203: iconst_1
     204: iadd
     205: putfield      #3                  // Field size:I
     208: iconst_1
     209: ireturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field size:I
       5: return

  public de.tum.in.naturals.set.IntArraySortedSet clone();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #25                 // class de/tum/in/naturals/set/IntArraySortedSet
       7: astore_1
       8: goto          21
      11: astore_2
      12: new           #27                 // class java/lang/InternalError
      15: dup
      16: aload_2
      17: invokespecial #28                 // Method java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_1
      22: aload_0
      23: getfield      #2                  // Field array:[I
      26: invokevirtual #29                 // Method "[I".clone:()Ljava/lang/Object;
      29: checkcast     #30                 // class "[I"
      32: putfield      #2                  // Field array:[I
      35: aload_1
      36: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/CloneNotSupportedException

  public boolean contains(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #21                 // Method keyIndex:(I)I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public it.unimi.dsi.fastutil.ints.IntIterator iterator();
    Code:
       0: new           #31                 // class de/tum/in/naturals/set/IntArraySortedSet$Iterator
       3: dup
       4: aload_0
       5: invokespecial #32                 // Method de/tum/in/naturals/set/IntArraySortedSet$Iterator."<init>":(Lde/tum/in/naturals/set/IntArraySortedSet;)V
       8: areturn

  private int keyIndex(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field array:[I
       4: iconst_0
       5: aload_0
       6: getfield      #3                  // Field size:I
       9: iload_1
      10: invokestatic  #33                 // Method java/util/Arrays.binarySearch:([IIII)I
      13: ireturn

  public boolean remove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #21                 // Method keyIndex:(I)I
       5: istore_2
       6: iload_2
       7: ifge          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: iload_2
      14: invokespecial #1                  // Method removeIndex:(I)V
      17: iconst_1
      18: ireturn

  private void removeIndex(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #3                  // Field size:I
       9: if_icmpge     33
      12: aload_0
      13: getfield      #3                  // Field size:I
      16: iload_2
      17: isub
      18: istore_3
      19: aload_0
      20: getfield      #2                  // Field array:[I
      23: iload_2
      24: aload_0
      25: getfield      #2                  // Field array:[I
      28: iload_1
      29: iload_3
      30: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_0
      34: dup
      35: getfield      #3                  // Field size:I
      38: iconst_1
      39: isub
      40: putfield      #3                  // Field size:I
      43: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ireturn

  public void trim();
    Code:
       0: aload_0
       1: getfield      #2                  // Field array:[I
       4: arraylength
       5: aload_0
       6: getfield      #3                  // Field size:I
       9: if_icmpne     13
      12: return
      13: aload_0
      14: aload_0
      15: getfield      #2                  // Field array:[I
      18: aload_0
      19: getfield      #3                  // Field size:I
      22: invokestatic  #22                 // Method java/util/Arrays.copyOf:([II)[I
      25: putfield      #2                  // Field array:[I
      28: return

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method iterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method clone:()Lde/tum/in/naturals/set/IntArraySortedSet;
       4: areturn

  static int access$000(de.tum.in.naturals.set.IntArraySortedSet);
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ireturn

  static int[] access$100(de.tum.in.naturals.set.IntArraySortedSet);
    Code:
       0: aload_0
       1: getfield      #2                  // Field array:[I
       4: areturn

  static void access$200(de.tum.in.naturals.set.IntArraySortedSet, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method removeIndex:(I)V
       5: return

  static {};
    Code:
       0: ldc           #25                 // class de/tum/in/naturals/set/IntArraySortedSet
       2: invokevirtual #36                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #17                 // Field $assertionsDisabled:Z
      16: return
}
