Compiled from "MutableSingletonNatBitSet.java"
class de.tum.in.naturals.set.MutableSingletonNatBitSet extends de.tum.in.naturals.set.AbstractNatBitSet {
  private static final int EMPTY;

  private int element;

  static final boolean $assertionsDisabled;

  de.tum.in.naturals.set.MutableSingletonNatBitSet();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method de/tum/in/naturals/set/AbstractNatBitSet."<init>":()V
       4: aload_0
       5: invokespecial #4                  // Method setEmpty:()V
       8: return

  de.tum.in.naturals.set.MutableSingletonNatBitSet(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method de/tum/in/naturals/set/AbstractNatBitSet."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field element:I
       9: return

  private static void throwOperationUnsupported();
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String Singleton can hold at most one value
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean add(int);
    Code:
       0: iload_1
       1: invokestatic  #8                  // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
       4: iload_1
       5: aload_0
       6: getfield      #2                  // Field element:I
       9: if_icmpne     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: invokevirtual #9                  // Method isEmpty:()Z
      18: ifne          24
      21: invokestatic  #10                 // Method throwOperationUnsupported:()V
      24: aload_0
      25: iload_1
      26: invokespecial #11                 // Method setValue:(I)V
      29: iconst_1
      30: ireturn

  public void clear(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field element:I
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #4                  // Method setEmpty:()V
      12: return

  public void clear(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #12                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkRange:(II)V
       5: aload_0
       6: invokevirtual #9                  // Method isEmpty:()Z
       9: ifeq          13
      12: return
      13: iload_1
      14: aload_0
      15: getfield      #2                  // Field element:I
      18: if_icmpgt     33
      21: aload_0
      22: getfield      #2                  // Field element:I
      25: iload_2
      26: if_icmpge     33
      29: aload_0
      30: invokespecial #4                  // Method setEmpty:()V
      33: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method setEmpty:()V
       4: return

  public de.tum.in.naturals.set.MutableSingletonNatBitSet clone();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method de/tum/in/naturals/set/AbstractNatBitSet.clone:()Lde/tum/in/naturals/set/AbstractNatBitSet;
       4: checkcast     #14                 // class de/tum/in/naturals/set/MutableSingletonNatBitSet
       7: areturn

  public boolean contains(int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isEmpty:()Z
       4: ifne          19
       7: iload_1
       8: aload_0
       9: getfield      #2                  // Field element:I
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public int firstInt();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isEmpty:()Z
       4: ifeq          15
       7: new           #15                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #16                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #2                  // Field element:I
      19: ireturn

  public void flip(int);
    Code:
       0: iload_1
       1: invokestatic  #8                  // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
       4: aload_0
       5: invokevirtual #9                  // Method isEmpty:()Z
       8: ifeq          19
      11: aload_0
      12: iload_1
      13: putfield      #2                  // Field element:I
      16: goto          39
      19: iload_1
      20: aload_0
      21: getfield      #2                  // Field element:I
      24: if_icmpne     36
      27: aload_0
      28: ldc           #17                 // int -2147483648
      30: putfield      #2                  // Field element:I
      33: goto          39
      36: invokestatic  #10                 // Method throwOperationUnsupported:()V
      39: return

  public void flip(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #12                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkRange:(II)V
       5: iload_1
       6: iload_2
       7: if_icmpne     11
      10: return
      11: iload_1
      12: iconst_1
      13: iadd
      14: iload_2
      15: if_icmpeq     21
      18: invokestatic  #10                 // Method throwOperationUnsupported:()V
      21: aload_0
      22: iload_1
      23: invokevirtual #18                 // Method flip:(I)V
      26: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field element:I
       4: ldc           #17                 // int -2147483648
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public it.unimi.dsi.fastutil.ints.IntIterator iterator();
    Code:
       0: new           #19                 // class de/tum/in/naturals/set/MutableSingletonNatBitSet$SingletonSetIterator
       3: dup
       4: aload_0
       5: invokespecial #20                 // Method de/tum/in/naturals/set/MutableSingletonNatBitSet$SingletonSetIterator."<init>":(Lde/tum/in/naturals/set/MutableSingletonNatBitSet;)V
       8: areturn

  public int lastInt();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isEmpty:()Z
       4: ifeq          15
       7: new           #15                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #16                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #2                  // Field element:I
      19: ireturn

  public int nextAbsentIndex(int);
    Code:
       0: iload_1
       1: invokestatic  #8                  // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
       4: aload_0
       5: invokevirtual #9                  // Method isEmpty:()Z
       8: ifne          28
      11: iload_1
      12: aload_0
      13: getfield      #2                  // Field element:I
      16: if_icmpne     28
      19: aload_0
      20: getfield      #2                  // Field element:I
      23: iconst_1
      24: iadd
      25: goto          29
      28: iload_1
      29: ireturn

  public int nextPresentIndex(int);
    Code:
       0: iload_1
       1: invokestatic  #8                  // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
       4: aload_0
       5: invokevirtual #9                  // Method isEmpty:()Z
       8: ifeq          13
      11: iconst_m1
      12: ireturn
      13: iload_1
      14: aload_0
      15: getfield      #2                  // Field element:I
      18: if_icmpgt     28
      21: aload_0
      22: getfield      #2                  // Field element:I
      25: goto          29
      28: iconst_m1
      29: ireturn

  public int previousAbsentIndex(int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isEmpty:()Z
       4: ifne          24
       7: iload_1
       8: aload_0
       9: getfield      #2                  // Field element:I
      12: if_icmpne     24
      15: aload_0
      16: getfield      #2                  // Field element:I
      19: iconst_1
      20: isub
      21: goto          25
      24: iload_1
      25: ireturn

  public int previousPresentIndex(int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isEmpty:()Z
       4: ifne          22
       7: iload_1
       8: aload_0
       9: getfield      #2                  // Field element:I
      12: if_icmplt     22
      15: aload_0
      16: getfield      #2                  // Field element:I
      19: goto          23
      22: iconst_m1
      23: ireturn

  public boolean remove(int);
    Code:
       0: iload_1
       1: invokestatic  #8                  // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
       4: aload_0
       5: invokevirtual #9                  // Method isEmpty:()Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: iload_1
      14: aload_0
      15: getfield      #2                  // Field element:I
      18: if_icmpeq     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: invokespecial #4                  // Method setEmpty:()V
      27: iconst_1
      28: ireturn

  public void set(int);
    Code:
       0: iload_1
       1: invokestatic  #8                  // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
       4: aload_0
       5: invokevirtual #9                  // Method isEmpty:()Z
       8: ifeq          19
      11: aload_0
      12: iload_1
      13: putfield      #2                  // Field element:I
      16: goto          30
      19: iload_1
      20: aload_0
      21: getfield      #2                  // Field element:I
      24: if_icmpeq     30
      27: invokestatic  #10                 // Method throwOperationUnsupported:()V
      30: return

  public void set(int, boolean);
    Code:
       0: iload_1
       1: invokestatic  #8                  // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
       4: aload_0
       5: invokevirtual #9                  // Method isEmpty:()Z
       8: ifeq          23
      11: iload_2
      12: ifeq          43
      15: aload_0
      16: iload_1
      17: invokespecial #11                 // Method setValue:(I)V
      20: goto          43
      23: iload_1
      24: aload_0
      25: getfield      #2                  // Field element:I
      28: if_icmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: iload_2
      37: if_icmpeq     43
      40: invokestatic  #10                 // Method throwOperationUnsupported:()V
      43: return

  public void set(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #12                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkRange:(II)V
       5: iload_1
       6: iload_2
       7: if_icmpne     11
      10: return
      11: iload_1
      12: iconst_1
      13: iadd
      14: iload_2
      15: if_icmpeq     21
      18: invokestatic  #10                 // Method throwOperationUnsupported:()V
      21: aload_0
      22: invokevirtual #9                  // Method isEmpty:()Z
      25: ifeq          36
      28: aload_0
      29: iload_1
      30: invokespecial #11                 // Method setValue:(I)V
      33: goto          47
      36: iload_1
      37: aload_0
      38: getfield      #2                  // Field element:I
      41: if_icmpeq     47
      44: invokestatic  #10                 // Method throwOperationUnsupported:()V
      47: return

  private void setEmpty();
    Code:
       0: aload_0
       1: ldc           #17                 // int -2147483648
       3: putfield      #2                  // Field element:I
       6: return

  private void setValue(int);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: iload_1
       7: iflt          17
      10: aload_0
      11: invokevirtual #9                  // Method isEmpty:()Z
      14: ifne          25
      17: new           #22                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: iload_1
      27: putfield      #2                  // Field element:I
      30: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_0
       8: goto          12
      11: iconst_1
      12: ireturn

  public int[] toIntArray();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isEmpty:()Z
       4: ifeq          13
       7: iconst_0
       8: newarray       int
      10: goto          23
      13: iconst_1
      14: newarray       int
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #2                  // Field element:I
      22: iastore
      23: areturn

  public de.tum.in.naturals.set.AbstractNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method clone:()Lde/tum/in/naturals/set/MutableSingletonNatBitSet;
       4: areturn

  public de.tum.in.naturals.set.NatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method clone:()Lde/tum/in/naturals/set/MutableSingletonNatBitSet;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method iterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method clone:()Lde/tum/in/naturals/set/MutableSingletonNatBitSet;
       4: areturn

  static int access$000(de.tum.in.naturals.set.MutableSingletonNatBitSet);
    Code:
       0: aload_0
       1: getfield      #2                  // Field element:I
       4: ireturn

  static {};
    Code:
       0: ldc           #14                 // class de/tum/in/naturals/set/MutableSingletonNatBitSet
       2: invokevirtual #26                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #21                 // Field $assertionsDisabled:Z
      16: return
}
