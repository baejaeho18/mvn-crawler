Compiled from "SparseBoundedNatBitSet.java"
class de.tum.in.naturals.set.SparseBoundedNatBitSet extends de.tum.in.naturals.set.AbstractBoundedNatBitSet {
  private final de.tum.in.naturals.bitset.SparseBitSet bitSet;

  private final boolean complement;

  private final de.tum.in.naturals.set.SparseBoundedNatBitSet complementView;

  static final boolean $assertionsDisabled;

  private de.tum.in.naturals.set.SparseBoundedNatBitSet(de.tum.in.naturals.set.SparseBoundedNatBitSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method domainSize:()I
       5: invokespecial #2                  // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet."<init>":(I)V
       8: aload_0
       9: aload_1
      10: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      13: putfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      16: aload_0
      17: aload_1
      18: getfield      #4                  // Field complement:Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: putfield      #4                  // Field complement:Z
      32: aload_0
      33: aload_1
      34: putfield      #5                  // Field complementView:Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
      37: getstatic     #6                  // Field $assertionsDisabled:Z
      40: ifne          58
      43: aload_0
      44: invokespecial #7                  // Method checkConsistency:()Z
      47: ifne          58
      50: new           #8                  // class java/lang/AssertionError
      53: dup
      54: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      57: athrow
      58: return

  private de.tum.in.naturals.set.SparseBoundedNatBitSet(de.tum.in.naturals.bitset.SparseBitSet, int, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #2                  // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      10: aload_0
      11: iload_3
      12: putfield      #4                  // Field complement:Z
      15: aload_0
      16: new           #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      19: dup
      20: aload_0
      21: invokespecial #11                 // Method "<init>":(Lde/tum/in/naturals/set/SparseBoundedNatBitSet;)V
      24: putfield      #5                  // Field complementView:Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
      27: getstatic     #6                  // Field $assertionsDisabled:Z
      30: ifne          48
      33: aload_0
      34: invokespecial #7                  // Method checkConsistency:()Z
      37: ifne          48
      40: new           #8                  // class java/lang/AssertionError
      43: dup
      44: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      47: athrow
      48: return

  de.tum.in.naturals.set.SparseBoundedNatBitSet(de.tum.in.naturals.bitset.SparseBitSet, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #12                 // Method "<init>":(Lde/tum/in/naturals/bitset/SparseBitSet;IZ)V
       7: return

  public void and(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          37
      30: aload_0
      31: invokevirtual #14                 // Method clear:()V
      34: goto          180
      37: aload_1
      38: instanceof    #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      41: ifeq          175
      44: aload_1
      45: checkcast     #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      48: astore_2
      49: aload_0
      50: getfield      #4                  // Field complement:Z
      53: ifeq          113
      56: aload_0
      57: invokevirtual #1                  // Method domainSize:()I
      60: istore_3
      61: aload_2
      62: invokevirtual #1                  // Method domainSize:()I
      65: istore        4
      67: aload_0
      68: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      71: iconst_0
      72: iload_3
      73: aload_2
      74: getfield      #4                  // Field complement:Z
      77: ifeq          87
      80: aload_2
      81: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      84: goto          91
      87: aload_2
      88: invokespecial #15                 // Method complementBits:()Lde/tum/in/naturals/bitset/SparseBitSet;
      91: invokevirtual #16                 // Method de/tum/in/naturals/bitset/SparseBitSet.or:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
      94: iload         4
      96: iload_3
      97: if_icmpge     110
     100: aload_0
     101: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     104: iload         4
     106: iload_3
     107: invokevirtual #17                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(II)V
     110: goto          172
     113: aload_2
     114: getfield      #4                  // Field complement:Z
     117: ifeq          161
     120: aload_0
     121: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     124: aload_2
     125: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     128: invokevirtual #18                 // Method de/tum/in/naturals/bitset/SparseBitSet.andNot:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
     131: aload_0
     132: invokevirtual #1                  // Method domainSize:()I
     135: istore_3
     136: aload_2
     137: invokevirtual #1                  // Method domainSize:()I
     140: istore        4
     142: iload         4
     144: iload_3
     145: if_icmpge     158
     148: aload_0
     149: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     152: iload         4
     154: iload_3
     155: invokevirtual #19                 // Method de/tum/in/naturals/bitset/SparseBitSet.clear:(II)V
     158: goto          172
     161: aload_0
     162: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     165: aload_2
     166: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     169: invokevirtual #20                 // Method de/tum/in/naturals/bitset/SparseBitSet.and:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
     172: goto          180
     175: aload_0
     176: aload_1
     177: invokespecial #21                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.and:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     180: getstatic     #6                  // Field $assertionsDisabled:Z
     183: ifne          201
     186: aload_0
     187: invokespecial #7                  // Method checkConsistency:()Z
     190: ifne          201
     193: new           #8                  // class java/lang/AssertionError
     196: dup
     197: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     200: athrow
     201: return

  public void andNot(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          31
      30: return
      31: aload_1
      32: instanceof    #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      35: ifeq          123
      38: aload_1
      39: checkcast     #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      42: astore_2
      43: aload_0
      44: getfield      #4                  // Field complement:Z
      47: ifeq          83
      50: aload_0
      51: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      54: iconst_0
      55: aload_0
      56: invokevirtual #1                  // Method domainSize:()I
      59: aload_2
      60: getfield      #4                  // Field complement:Z
      63: ifeq          73
      66: aload_2
      67: invokespecial #15                 // Method complementBits:()Lde/tum/in/naturals/bitset/SparseBitSet;
      70: goto          77
      73: aload_2
      74: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      77: invokevirtual #16                 // Method de/tum/in/naturals/bitset/SparseBitSet.or:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
      80: goto          120
      83: aload_2
      84: getfield      #4                  // Field complement:Z
      87: ifeq          109
      90: aload_0
      91: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      94: iconst_0
      95: aload_2
      96: invokevirtual #1                  // Method domainSize:()I
      99: aload_2
     100: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     103: invokevirtual #22                 // Method de/tum/in/naturals/bitset/SparseBitSet.and:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
     106: goto          120
     109: aload_0
     110: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     113: aload_2
     114: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     117: invokevirtual #18                 // Method de/tum/in/naturals/bitset/SparseBitSet.andNot:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
     120: goto          128
     123: aload_0
     124: aload_1
     125: invokespecial #23                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.andNot:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     128: getstatic     #6                  // Field $assertionsDisabled:Z
     131: ifne          149
     134: aload_0
     135: invokespecial #7                  // Method checkConsistency:()Z
     138: ifne          149
     141: new           #8                  // class java/lang/AssertionError
     144: dup
     145: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     148: athrow
     149: return

  private boolean checkConsistency();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
       4: invokevirtual #24                 // Method de/tum/in/naturals/bitset/SparseBitSet.length:()I
       7: aload_0
       8: invokevirtual #1                  // Method domainSize:()I
      11: if_icmpgt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void clear(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #25                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      30: iload_1
      31: aload_0
      32: getfield      #4                  // Field complement:Z
      35: invokevirtual #26                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(IZ)V
      38: getstatic     #6                  // Field $assertionsDisabled:Z
      41: ifne          59
      44: aload_0
      45: invokespecial #7                  // Method checkConsistency:()Z
      48: ifne          59
      51: new           #8                  // class java/lang/AssertionError
      54: dup
      55: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      58: athrow
      59: return

  public void clear(int, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #27                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #4                  // Field complement:Z
      31: ifeq          46
      34: aload_0
      35: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      38: iload_1
      39: iload_2
      40: invokevirtual #17                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(II)V
      43: goto          55
      46: aload_0
      47: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      50: iload_1
      51: iload_2
      52: invokevirtual #19                 // Method de/tum/in/naturals/bitset/SparseBitSet.clear:(II)V
      55: getstatic     #6                  // Field $assertionsDisabled:Z
      58: ifne          76
      61: aload_0
      62: invokespecial #7                  // Method checkConsistency:()Z
      65: ifne          76
      68: new           #8                  // class java/lang/AssertionError
      71: dup
      72: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      75: athrow
      76: return

  public de.tum.in.naturals.set.SparseBoundedNatBitSet clone();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: new           #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      24: dup
      25: aload_0
      26: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      29: invokevirtual #28                 // Method de/tum/in/naturals/bitset/SparseBitSet.clone:()Lde/tum/in/naturals/bitset/SparseBitSet;
      32: aload_0
      33: invokevirtual #1                  // Method domainSize:()I
      36: aload_0
      37: getfield      #4                  // Field complement:Z
      40: invokespecial #12                 // Method "<init>":(Lde/tum/in/naturals/bitset/SparseBitSet;IZ)V
      43: areturn

  public de.tum.in.naturals.set.BoundedNatBitSet complement();
    Code:
       0: aload_0
       1: getfield      #5                  // Field complementView:Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
       4: areturn

  private de.tum.in.naturals.bitset.SparseBitSet complementBits();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
       4: invokevirtual #28                 // Method de/tum/in/naturals/bitset/SparseBitSet.clone:()Lde/tum/in/naturals/bitset/SparseBitSet;
       7: astore_1
       8: aload_1
       9: iconst_0
      10: aload_0
      11: invokevirtual #1                  // Method domainSize:()I
      14: invokevirtual #29                 // Method de/tum/in/naturals/bitset/SparseBitSet.flip:(II)V
      17: aload_1
      18: areturn

  public boolean contains(int);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpgt     49
       5: aload_0
       6: getfield      #4                  // Field complement:Z
       9: ifeq          34
      12: iload_1
      13: aload_0
      14: invokevirtual #1                  // Method domainSize:()I
      17: if_icmpge     49
      20: aload_0
      21: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      24: iload_1
      25: invokevirtual #30                 // Method de/tum/in/naturals/bitset/SparseBitSet.get:(I)Z
      28: ifne          49
      31: goto          45
      34: aload_0
      35: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      38: iload_1
      39: invokevirtual #30                 // Method de/tum/in/naturals/bitset/SparseBitSet.get:(I)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public boolean containsAll(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: invokevirtual #31                 // Method isEmpty:()Z
      25: ifeq          35
      28: aload_1
      29: invokeinterface #13,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      34: ireturn
      35: aload_1
      36: invokeinterface #13,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: aload_1
      47: instanceof    #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      50: ifeq          137
      53: aload_1
      54: checkcast     #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      57: astore_2
      58: aload_2
      59: invokevirtual #32                 // Method lastInt:()I
      62: istore_3
      63: aload_0
      64: iload_3
      65: invokevirtual #33                 // Method inDomain:(I)Z
      68: ifeq          79
      71: aload_0
      72: invokevirtual #32                 // Method lastInt:()I
      75: iload_3
      76: if_icmpge     81
      79: iconst_0
      80: ireturn
      81: aload_2
      82: getfield      #4                  // Field complement:Z
      85: ifeq          95
      88: aload_2
      89: invokespecial #15                 // Method complementBits:()Lde/tum/in/naturals/bitset/SparseBitSet;
      92: goto          99
      95: aload_2
      96: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      99: astore        4
     101: aload_0
     102: getfield      #4                  // Field complement:Z
     105: ifeq          115
     108: aload_0
     109: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     112: goto          119
     115: aload_0
     116: invokespecial #15                 // Method complementBits:()Lde/tum/in/naturals/bitset/SparseBitSet;
     119: astore        5
     121: aload         5
     123: aload         4
     125: invokevirtual #34                 // Method de/tum/in/naturals/bitset/SparseBitSet.intersects:(Lde/tum/in/naturals/bitset/SparseBitSet;)Z
     128: ifne          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: ireturn
     137: aload_0
     138: aload_1
     139: invokespecial #35                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.containsAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
     142: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: if_acmpne     28
      26: iconst_1
      27: ireturn
      28: aload_1
      29: instanceof    #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      32: ifeq          318
      35: aload_1
      36: checkcast     #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      39: astore_2
      40: aload_0
      41: invokevirtual #31                 // Method isEmpty:()Z
      44: ifeq          52
      47: aload_2
      48: invokevirtual #31                 // Method isEmpty:()Z
      51: ireturn
      52: aload_0
      53: invokevirtual #1                  // Method domainSize:()I
      56: istore_3
      57: aload_2
      58: invokevirtual #1                  // Method domainSize:()I
      61: istore        4
      63: aload_0
      64: getfield      #4                  // Field complement:Z
      67: ifeq          192
      70: aload_2
      71: getfield      #4                  // Field complement:Z
      74: ifeq          211
      77: iload_3
      78: iload         4
      80: if_icmpne     95
      83: aload_0
      84: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      87: aload_2
      88: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      91: invokevirtual #36                 // Method de/tum/in/naturals/bitset/SparseBitSet.equals:(Ljava/lang/Object;)Z
      94: ireturn
      95: iload_3
      96: iload         4
      98: if_icmpge     117
     101: aload_0
     102: astore        5
     104: aload_2
     105: astore        6
     107: iload_3
     108: istore        7
     110: iload         4
     112: istore        8
     114: goto          130
     117: aload_2
     118: astore        5
     120: aload_0
     121: astore        6
     123: iload         4
     125: istore        7
     127: iload_3
     128: istore        8
     130: aload         6
     132: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     135: iload         7
     137: invokevirtual #37                 // Method de/tum/in/naturals/bitset/SparseBitSet.nextClearBit:(I)I
     140: iload         8
     142: if_icmpge     147
     145: iconst_0
     146: ireturn
     147: aload         5
     149: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     152: iconst_0
     153: iload         7
     155: aload         6
     157: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     160: invokevirtual #38                 // Method de/tum/in/naturals/bitset/SparseBitSet.xor:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
     163: aload         5
     165: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     168: invokevirtual #39                 // Method de/tum/in/naturals/bitset/SparseBitSet.isEmpty:()Z
     171: istore        9
     173: aload         5
     175: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     178: iconst_0
     179: iload         7
     181: aload         6
     183: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     186: invokevirtual #38                 // Method de/tum/in/naturals/bitset/SparseBitSet.xor:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
     189: iload         9
     191: ireturn
     192: aload_2
     193: getfield      #4                  // Field complement:Z
     196: ifne          211
     199: aload_0
     200: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     203: aload_2
     204: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     207: invokevirtual #36                 // Method de/tum/in/naturals/bitset/SparseBitSet.equals:(Ljava/lang/Object;)Z
     210: ireturn
     211: aload_0
     212: getfield      #4                  // Field complement:Z
     215: ifeq          222
     218: iload_3
     219: goto          224
     222: iload         4
     224: istore        5
     226: aload_0
     227: getfield      #4                  // Field complement:Z
     230: ifeq          237
     233: aload_2
     234: goto          238
     237: aload_0
     238: astore        6
     240: getstatic     #6                  // Field $assertionsDisabled:Z
     243: ifne          262
     246: aload         6
     248: getfield      #4                  // Field complement:Z
     251: ifeq          262
     254: new           #8                  // class java/lang/AssertionError
     257: dup
     258: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     261: athrow
     262: aload_0
     263: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     266: aload_2
     267: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     270: invokevirtual #34                 // Method de/tum/in/naturals/bitset/SparseBitSet.intersects:(Lde/tum/in/naturals/bitset/SparseBitSet;)Z
     273: ifne          316
     276: aload_0
     277: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     280: invokevirtual #40                 // Method de/tum/in/naturals/bitset/SparseBitSet.cardinality:()I
     283: aload_2
     284: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     287: invokevirtual #40                 // Method de/tum/in/naturals/bitset/SparseBitSet.cardinality:()I
     290: iadd
     291: iload         5
     293: if_icmpne     316
     296: iload_3
     297: iload         4
     299: if_icmpeq     312
     302: aload         6
     304: invokevirtual #32                 // Method lastInt:()I
     307: iload         5
     309: if_icmpge     316
     312: iconst_1
     313: goto          317
     316: iconst_0
     317: ireturn
     318: aload_0
     319: aload_1
     320: invokespecial #41                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.equals:(Ljava/lang/Object;)Z
     323: ireturn

  public void flip(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #25                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      30: iload_1
      31: invokevirtual #42                 // Method de/tum/in/naturals/bitset/SparseBitSet.flip:(I)V
      34: getstatic     #6                  // Field $assertionsDisabled:Z
      37: ifne          55
      40: aload_0
      41: invokespecial #7                  // Method checkConsistency:()Z
      44: ifne          55
      47: new           #8                  // class java/lang/AssertionError
      50: dup
      51: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      54: athrow
      55: return

  public void flip(int, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #27                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      31: iload_1
      32: iload_2
      33: invokevirtual #29                 // Method de/tum/in/naturals/bitset/SparseBitSet.flip:(II)V
      36: getstatic     #6                  // Field $assertionsDisabled:Z
      39: ifne          57
      42: aload_0
      43: invokespecial #7                  // Method checkConsistency:()Z
      46: ifne          57
      49: new           #8                  // class java/lang/AssertionError
      52: dup
      53: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      56: athrow
      57: return

  de.tum.in.naturals.bitset.SparseBitSet getSparseBitSet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          40
      28: aload_0
      29: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      32: invokevirtual #43                 // Method de/tum/in/naturals/bitset/SparseBitSet.hashCode:()I
      35: iconst_m1
      36: ixor
      37: goto          47
      40: aload_0
      41: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      44: invokevirtual #43                 // Method de/tum/in/naturals/bitset/SparseBitSet.hashCode:()I
      47: aload_0
      48: invokevirtual #1                  // Method domainSize:()I
      51: invokestatic  #44                 // Method it/unimi/dsi/fastutil/HashCommon.mix:(I)I
      54: ixor
      55: ireturn

  boolean isComplement();
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          51
      28: aload_0
      29: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      32: iconst_0
      33: invokevirtual #37                 // Method de/tum/in/naturals/bitset/SparseBitSet.nextClearBit:(I)I
      36: aload_0
      37: invokevirtual #1                  // Method domainSize:()I
      40: if_icmpne     47
      43: iconst_1
      44: goto          58
      47: iconst_0
      48: goto          58
      51: aload_0
      52: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      55: invokevirtual #39                 // Method de/tum/in/naturals/bitset/SparseBitSet.isEmpty:()Z
      58: ireturn

  public it.unimi.dsi.fastutil.ints.IntIterator iterator();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          42
      28: aload_0
      29: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      32: aload_0
      33: invokevirtual #1                  // Method domainSize:()I
      36: invokestatic  #45                 // Method de/tum/in/naturals/bitset/BitSets.complementIterator:(Lde/tum/in/naturals/bitset/SparseBitSet;I)Lit/unimi/dsi/fastutil/ints/IntIterator;
      39: goto          53
      42: aload_0
      43: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      46: aload_0
      47: invokevirtual #1                  // Method domainSize:()I
      50: invokestatic  #46                 // Method de/tum/in/naturals/bitset/BitSets.iterator:(Lde/tum/in/naturals/bitset/SparseBitSet;I)Lit/unimi/dsi/fastutil/ints/IntIterator;
      53: areturn

  public int lastInt();
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      11: aload_0
      12: invokevirtual #1                  // Method domainSize:()I
      15: iconst_1
      16: isub
      17: invokestatic  #47                 // Method de/tum/in/naturals/set/NatBitSets.previousAbsentIndex:(Lde/tum/in/naturals/bitset/SparseBitSet;I)I
      20: goto          32
      23: aload_0
      24: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      27: invokevirtual #24                 // Method de/tum/in/naturals/bitset/SparseBitSet.length:()I
      30: iconst_1
      31: isub
      32: istore_1
      33: getstatic     #6                  // Field $assertionsDisabled:Z
      36: ifne          54
      39: aload_0
      40: invokespecial #7                  // Method checkConsistency:()Z
      43: ifne          54
      46: new           #8                  // class java/lang/AssertionError
      49: dup
      50: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      53: athrow
      54: iload_1
      55: iconst_m1
      56: if_icmpne     67
      59: new           #48                 // class java/util/NoSuchElementException
      62: dup
      63: invokespecial #49                 // Method java/util/NoSuchElementException."<init>":()V
      66: athrow
      67: getstatic     #6                  // Field $assertionsDisabled:Z
      70: ifne          94
      73: iconst_0
      74: iload_1
      75: if_icmpgt     86
      78: iload_1
      79: aload_0
      80: invokevirtual #1                  // Method domainSize:()I
      83: if_icmplt     94
      86: new           #8                  // class java/lang/AssertionError
      89: dup
      90: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      93: athrow
      94: iload_1
      95: ireturn

  public int nextAbsentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #50                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: iload_1
      26: aload_0
      27: invokevirtual #1                  // Method domainSize:()I
      30: if_icmplt     35
      33: iload_1
      34: ireturn
      35: aload_0
      36: getfield      #4                  // Field complement:Z
      39: ifeq          65
      42: aload_0
      43: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      46: iload_1
      47: invokevirtual #51                 // Method de/tum/in/naturals/bitset/SparseBitSet.nextSetBit:(I)I
      50: istore_2
      51: iload_2
      52: iconst_m1
      53: if_icmpne     63
      56: aload_0
      57: invokevirtual #1                  // Method domainSize:()I
      60: goto          64
      63: iload_2
      64: ireturn
      65: aload_0
      66: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      69: iload_1
      70: invokevirtual #37                 // Method de/tum/in/naturals/bitset/SparseBitSet.nextClearBit:(I)I
      73: ireturn

  public int nextPresentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #50                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: iload_1
      26: aload_0
      27: invokevirtual #1                  // Method domainSize:()I
      30: if_icmplt     35
      33: iconst_m1
      34: ireturn
      35: aload_0
      36: getfield      #4                  // Field complement:Z
      39: ifeq          65
      42: aload_0
      43: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      46: iload_1
      47: invokevirtual #37                 // Method de/tum/in/naturals/bitset/SparseBitSet.nextClearBit:(I)I
      50: istore_2
      51: iload_2
      52: aload_0
      53: invokevirtual #1                  // Method domainSize:()I
      56: if_icmplt     63
      59: iconst_m1
      60: goto          64
      63: iload_2
      64: ireturn
      65: aload_0
      66: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      69: iload_1
      70: invokevirtual #51                 // Method de/tum/in/naturals/bitset/SparseBitSet.nextSetBit:(I)I
      73: ireturn

  public void or(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          31
      30: return
      31: aload_1
      32: instanceof    #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      35: ifeq          133
      38: aload_1
      39: checkcast     #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      42: astore_2
      43: aload_0
      44: aload_2
      45: invokevirtual #32                 // Method lastInt:()I
      48: invokevirtual #25                 // Method checkInDomain:(I)V
      51: aload_0
      52: getfield      #4                  // Field complement:Z
      55: ifeq          98
      58: aload_2
      59: getfield      #4                  // Field complement:Z
      62: ifeq          84
      65: aload_0
      66: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      69: iconst_0
      70: aload_2
      71: invokevirtual #1                  // Method domainSize:()I
      74: aload_2
      75: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      78: invokevirtual #22                 // Method de/tum/in/naturals/bitset/SparseBitSet.and:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
      81: goto          130
      84: aload_0
      85: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      88: aload_2
      89: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      92: invokevirtual #18                 // Method de/tum/in/naturals/bitset/SparseBitSet.andNot:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
      95: goto          130
      98: aload_2
      99: getfield      #4                  // Field complement:Z
     102: ifeq          119
     105: aload_0
     106: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     109: aload_2
     110: invokespecial #15                 // Method complementBits:()Lde/tum/in/naturals/bitset/SparseBitSet;
     113: invokevirtual #52                 // Method de/tum/in/naturals/bitset/SparseBitSet.or:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
     116: goto          130
     119: aload_0
     120: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     123: aload_2
     124: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     127: invokevirtual #52                 // Method de/tum/in/naturals/bitset/SparseBitSet.or:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
     130: goto          138
     133: aload_0
     134: aload_1
     135: invokespecial #53                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.or:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     138: getstatic     #6                  // Field $assertionsDisabled:Z
     141: ifne          159
     144: aload_0
     145: invokespecial #7                  // Method checkConsistency:()Z
     148: ifne          159
     151: new           #8                  // class java/lang/AssertionError
     154: dup
     155: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     158: athrow
     159: return

  public void orNot(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          62
      30: aload_0
      31: getfield      #4                  // Field complement:Z
      34: ifeq          47
      37: aload_0
      38: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      41: invokevirtual #54                 // Method de/tum/in/naturals/bitset/SparseBitSet.clear:()V
      44: goto          234
      47: aload_0
      48: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      51: iconst_0
      52: aload_0
      53: invokevirtual #1                  // Method domainSize:()I
      56: invokevirtual #17                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(II)V
      59: goto          234
      62: aload_1
      63: instanceof    #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      66: ifeq          229
      69: aload_1
      70: checkcast     #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      73: astore_2
      74: aload_0
      75: invokevirtual #1                  // Method domainSize:()I
      78: istore_3
      79: aload_2
      80: invokevirtual #1                  // Method domainSize:()I
      83: istore        4
      85: aload_0
      86: getfield      #4                  // Field complement:Z
      89: ifeq          143
      92: aload_2
      93: getfield      #4                  // Field complement:Z
      96: ifeq          129
      99: aload_0
     100: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     103: aload_2
     104: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     107: invokevirtual #18                 // Method de/tum/in/naturals/bitset/SparseBitSet.andNot:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
     110: iload         4
     112: iload_3
     113: if_icmpge     226
     116: aload_0
     117: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     120: iload         4
     122: iload_3
     123: invokevirtual #19                 // Method de/tum/in/naturals/bitset/SparseBitSet.clear:(II)V
     126: goto          226
     129: aload_0
     130: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     133: aload_2
     134: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     137: invokevirtual #20                 // Method de/tum/in/naturals/bitset/SparseBitSet.and:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
     140: goto          226
     143: aload_2
     144: getfield      #4                  // Field complement:Z
     147: ifeq          169
     150: aload_0
     151: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     154: iconst_0
     155: aload_0
     156: invokevirtual #1                  // Method domainSize:()I
     159: aload_2
     160: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     163: invokevirtual #16                 // Method de/tum/in/naturals/bitset/SparseBitSet.or:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
     166: goto          210
     169: iload_3
     170: iload         4
     172: invokestatic  #55                 // Method java/lang/Math.min:(II)I
     175: istore        5
     177: aload_2
     178: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     181: iconst_0
     182: iload         5
     184: invokevirtual #29                 // Method de/tum/in/naturals/bitset/SparseBitSet.flip:(II)V
     187: aload_0
     188: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     191: iconst_0
     192: iload_3
     193: aload_2
     194: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     197: invokevirtual #16                 // Method de/tum/in/naturals/bitset/SparseBitSet.or:(IILde/tum/in/naturals/bitset/SparseBitSet;)V
     200: aload_2
     201: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     204: iconst_0
     205: iload         5
     207: invokevirtual #29                 // Method de/tum/in/naturals/bitset/SparseBitSet.flip:(II)V
     210: iload         4
     212: iload_3
     213: if_icmpge     226
     216: aload_0
     217: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
     220: iload         4
     222: iload_3
     223: invokevirtual #17                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(II)V
     226: goto          234
     229: aload_0
     230: aload_1
     231: invokespecial #56                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.orNot:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     234: getstatic     #6                  // Field $assertionsDisabled:Z
     237: ifne          255
     240: aload_0
     241: invokespecial #7                  // Method checkConsistency:()Z
     244: ifne          255
     247: new           #8                  // class java/lang/AssertionError
     250: dup
     251: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     254: athrow
     255: return

  public int previousAbsentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #50                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: iload_1
      26: aload_0
      27: invokevirtual #1                  // Method domainSize:()I
      30: if_icmplt     35
      33: iload_1
      34: ireturn
      35: aload_0
      36: getfield      #4                  // Field complement:Z
      39: ifeq          53
      42: aload_0
      43: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      46: iload_1
      47: invokestatic  #57                 // Method de/tum/in/naturals/set/NatBitSets.previousPresentIndex:(Lde/tum/in/naturals/bitset/SparseBitSet;I)I
      50: goto          61
      53: aload_0
      54: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      57: iload_1
      58: invokestatic  #47                 // Method de/tum/in/naturals/set/NatBitSets.previousAbsentIndex:(Lde/tum/in/naturals/bitset/SparseBitSet;I)I
      61: ireturn

  public int previousPresentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #50                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: iload_1
      26: aload_0
      27: invokevirtual #1                  // Method domainSize:()I
      30: iconst_1
      31: isub
      32: invokestatic  #55                 // Method java/lang/Math.min:(II)I
      35: istore_2
      36: aload_0
      37: getfield      #4                  // Field complement:Z
      40: ifeq          54
      43: aload_0
      44: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      47: iload_2
      48: invokestatic  #47                 // Method de/tum/in/naturals/set/NatBitSets.previousAbsentIndex:(Lde/tum/in/naturals/bitset/SparseBitSet;I)I
      51: goto          62
      54: aload_0
      55: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      58: iload_2
      59: invokestatic  #57                 // Method de/tum/in/naturals/set/NatBitSets.previousPresentIndex:(Lde/tum/in/naturals/bitset/SparseBitSet;I)I
      62: ireturn

  public void set(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #25                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      30: iload_1
      31: aload_0
      32: getfield      #4                  // Field complement:Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokevirtual #26                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(IZ)V
      46: getstatic     #6                  // Field $assertionsDisabled:Z
      49: ifne          67
      52: aload_0
      53: invokespecial #7                  // Method checkConsistency:()Z
      56: ifne          67
      59: new           #8                  // class java/lang/AssertionError
      62: dup
      63: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: return

  public void set(int, boolean);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #25                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      30: iload_1
      31: iload_2
      32: aload_0
      33: getfield      #4                  // Field complement:Z
      36: ixor
      37: invokevirtual #26                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(IZ)V
      40: getstatic     #6                  // Field $assertionsDisabled:Z
      43: ifne          61
      46: aload_0
      47: invokespecial #7                  // Method checkConsistency:()Z
      50: ifne          61
      53: new           #8                  // class java/lang/AssertionError
      56: dup
      57: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      60: athrow
      61: return

  public void set(int, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #27                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #4                  // Field complement:Z
      31: ifeq          46
      34: aload_0
      35: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      38: iload_1
      39: iload_2
      40: invokevirtual #19                 // Method de/tum/in/naturals/bitset/SparseBitSet.clear:(II)V
      43: goto          55
      46: aload_0
      47: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      50: iload_1
      51: iload_2
      52: invokevirtual #17                 // Method de/tum/in/naturals/bitset/SparseBitSet.set:(II)V
      55: getstatic     #6                  // Field $assertionsDisabled:Z
      58: ifne          76
      61: aload_0
      62: invokespecial #7                  // Method checkConsistency:()Z
      65: ifne          76
      68: new           #8                  // class java/lang/AssertionError
      71: dup
      72: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      75: athrow
      76: return

  public int size();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      25: invokevirtual #40                 // Method de/tum/in/naturals/bitset/SparseBitSet.cardinality:()I
      28: istore_1
      29: aload_0
      30: getfield      #4                  // Field complement:Z
      33: ifeq          45
      36: aload_0
      37: invokevirtual #1                  // Method domainSize:()I
      40: iload_1
      41: isub
      42: goto          46
      45: iload_1
      46: ireturn

  public void xor(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          31
      30: return
      31: aload_1
      32: instanceof    #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      35: ifeq          85
      38: aload_1
      39: checkcast     #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
      42: astore_2
      43: aload_2
      44: invokevirtual #1                  // Method domainSize:()I
      47: istore_3
      48: aload_0
      49: iload_3
      50: iconst_1
      51: isub
      52: invokevirtual #25                 // Method checkInDomain:(I)V
      55: aload_0
      56: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      59: aload_2
      60: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      63: invokevirtual #58                 // Method de/tum/in/naturals/bitset/SparseBitSet.xor:(Lde/tum/in/naturals/bitset/SparseBitSet;)V
      66: aload_2
      67: getfield      #4                  // Field complement:Z
      70: ifeq          82
      73: aload_0
      74: getfield      #3                  // Field bitSet:Lde/tum/in/naturals/bitset/SparseBitSet;
      77: iconst_0
      78: iload_3
      79: invokevirtual #29                 // Method de/tum/in/naturals/bitset/SparseBitSet.flip:(II)V
      82: goto          90
      85: aload_0
      86: aload_1
      87: invokespecial #59                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.xor:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      90: getstatic     #6                  // Field $assertionsDisabled:Z
      93: ifne          111
      96: aload_0
      97: invokespecial #7                  // Method checkConsistency:()Z
     100: ifne          111
     103: new           #8                  // class java/lang/AssertionError
     106: dup
     107: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     110: athrow
     111: return

  public de.tum.in.naturals.set.AbstractBoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method clone:()Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
       4: areturn

  public de.tum.in.naturals.set.BoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method clone:()Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
       4: areturn

  public de.tum.in.naturals.set.NatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method clone:()Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method iterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
       4: areturn

  public de.tum.in.naturals.set.AbstractNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method clone:()Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method clone:()Lde/tum/in/naturals/set/SparseBoundedNatBitSet;
       4: areturn

  static {};
    Code:
       0: ldc           #10                 // class de/tum/in/naturals/set/SparseBoundedNatBitSet
       2: invokevirtual #62                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: return
}
