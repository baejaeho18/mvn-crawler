Compiled from "BoundedWrapper.java"
class de.tum.in.naturals.set.BoundedWrapper extends de.tum.in.naturals.set.AbstractBoundedNatBitSet {
  private final boolean complement;

  private final de.tum.in.naturals.set.BoundedWrapper complementView;

  private final de.tum.in.naturals.set.NatBitSet delegate;

  static final boolean $assertionsDisabled;

  private de.tum.in.naturals.set.BoundedWrapper(de.tum.in.naturals.set.BoundedWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method domainSize:()I
       5: invokespecial #2                  // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet."<init>":(I)V
       8: aload_0
       9: aload_1
      10: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      13: putfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      16: aload_0
      17: aload_1
      18: getfield      #4                  // Field complement:Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: putfield      #4                  // Field complement:Z
      32: aload_0
      33: aload_1
      34: putfield      #5                  // Field complementView:Lde/tum/in/naturals/set/BoundedWrapper;
      37: getstatic     #6                  // Field $assertionsDisabled:Z
      40: ifne          58
      43: aload_0
      44: invokespecial #7                  // Method checkConsistency:()Z
      47: ifne          58
      50: new           #8                  // class java/lang/AssertionError
      53: dup
      54: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      57: athrow
      58: return

  private de.tum.in.naturals.set.BoundedWrapper(de.tum.in.naturals.set.NatBitSet, int, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #2                  // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet."<init>":(I)V
       5: getstatic     #6                  // Field $assertionsDisabled:Z
       8: ifne          26
      11: aload_1
      12: instanceof    #10                 // class de/tum/in/naturals/set/BoundedNatBitSet
      15: ifeq          26
      18: new           #8                  // class java/lang/AssertionError
      21: dup
      22: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: aload_1
      28: putfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      31: aload_0
      32: iload_3
      33: putfield      #4                  // Field complement:Z
      36: aload_0
      37: new           #11                 // class de/tum/in/naturals/set/BoundedWrapper
      40: dup
      41: aload_0
      42: invokespecial #12                 // Method "<init>":(Lde/tum/in/naturals/set/BoundedWrapper;)V
      45: putfield      #5                  // Field complementView:Lde/tum/in/naturals/set/BoundedWrapper;
      48: getstatic     #6                  // Field $assertionsDisabled:Z
      51: ifne          69
      54: aload_0
      55: invokespecial #7                  // Method checkConsistency:()Z
      58: ifne          69
      61: new           #8                  // class java/lang/AssertionError
      64: dup
      65: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      68: athrow
      69: return

  de.tum.in.naturals.set.BoundedWrapper(de.tum.in.naturals.set.NatBitSet, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #13                 // Method "<init>":(Lde/tum/in/naturals/set/NatBitSet;IZ)V
       7: return

  public boolean add(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method checkInDomain:(I)V
       5: aload_0
       6: getfield      #4                  // Field complement:Z
       9: ifeq          25
      12: aload_0
      13: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      16: iload_1
      17: invokeinterface #15,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.remove:(I)Z
      22: goto          35
      25: aload_0
      26: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      29: iload_1
      30: invokeinterface #16,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.add:(I)Z
      35: ireturn

  public void and(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #17                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.and:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      12: goto          25
      15: aload_0
      16: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      19: aload_1
      20: invokeinterface #18,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.and:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      25: return

  public void andNot(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #19                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.andNot:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      12: goto          25
      15: aload_0
      16: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      19: aload_1
      20: invokeinterface #20,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.andNot:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      25: return

  private boolean checkConsistency();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
       4: invokeinterface #21,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.isEmpty:()Z
       9: ifne          28
      12: aload_0
      13: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      16: invokeinterface #22,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.lastInt:()I
      21: aload_0
      22: invokevirtual #1                  // Method domainSize:()I
      25: if_icmpgt     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public void clear(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #14                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #4                  // Field complement:Z
      30: ifeq          46
      33: aload_0
      34: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      37: iload_1
      38: invokeinterface #23,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.set:(I)V
      43: goto          56
      46: aload_0
      47: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      50: iload_1
      51: invokeinterface #24,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.clear:(I)V
      56: getstatic     #6                  // Field $assertionsDisabled:Z
      59: ifne          77
      62: aload_0
      63: invokespecial #7                  // Method checkConsistency:()Z
      66: ifne          77
      69: new           #8                  // class java/lang/AssertionError
      72: dup
      73: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      76: athrow
      77: return

  public void clear(int, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #25                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #4                  // Field complement:Z
      31: ifeq          48
      34: aload_0
      35: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      38: iload_1
      39: iload_2
      40: invokeinterface #26,  3           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.set:(II)V
      45: goto          59
      48: aload_0
      49: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      52: iload_1
      53: iload_2
      54: invokeinterface #27,  3           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.clear:(II)V
      59: getstatic     #6                  // Field $assertionsDisabled:Z
      62: ifne          80
      65: aload_0
      66: invokespecial #7                  // Method checkConsistency:()Z
      69: ifne          80
      72: new           #8                  // class java/lang/AssertionError
      75: dup
      76: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: return

  public de.tum.in.naturals.set.BoundedWrapper clone();
    Code:
       0: new           #11                 // class de/tum/in/naturals/set/BoundedWrapper
       3: dup
       4: aload_0
       5: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
       8: aload_0
       9: invokevirtual #1                  // Method domainSize:()I
      12: invokespecial #28                 // Method "<init>":(Lde/tum/in/naturals/set/NatBitSet;I)V
      15: areturn

  public de.tum.in.naturals.set.BoundedNatBitSet complement();
    Code:
       0: aload_0
       1: getfield      #5                  // Field complementView:Lde/tum/in/naturals/set/BoundedWrapper;
       4: areturn

  public boolean contains(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #29                 // Method inDomain:(I)Z
       5: ifeq          30
       8: aload_0
       9: getfield      #4                  // Field complement:Z
      12: aload_0
      13: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      16: iload_1
      17: invokeinterface #30,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.contains:(I)Z
      22: ixor
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean containsAll(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #31                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.containsAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      17: aload_1
      18: invokeinterface #32,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.containsAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      23: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #11                 // class de/tum/in/naturals/set/BoundedWrapper
      11: ifeq          31
      14: aload_1
      15: checkcast     #11                 // class de/tum/in/naturals/set/BoundedWrapper
      18: astore_2
      19: aload_0
      20: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      23: aload_2
      24: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      27: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      30: ireturn
      31: aload_0
      32: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      35: aload_1
      36: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ireturn

  public int firstInt();
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          27
       7: aload_0
       8: iconst_0
       9: invokevirtual #34                 // Method nextPresentIndex:(I)I
      12: istore_1
      13: iload_1
      14: ifge          25
      17: new           #35                 // class java/util/NoSuchElementException
      20: dup
      21: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":()V
      24: athrow
      25: iload_1
      26: ireturn
      27: aload_0
      28: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      31: invokeinterface #37,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.firstInt:()I
      36: ireturn

  public void flip(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #14                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      30: iload_1
      31: invokeinterface #38,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.flip:(I)V
      36: getstatic     #6                  // Field $assertionsDisabled:Z
      39: ifne          57
      42: aload_0
      43: invokespecial #7                  // Method checkConsistency:()Z
      46: ifne          57
      49: new           #8                  // class java/lang/AssertionError
      52: dup
      53: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      56: athrow
      57: return

  public void flip(int, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #25                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      31: iload_1
      32: iload_2
      33: invokeinterface #39,  3           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.flip:(II)V
      38: getstatic     #6                  // Field $assertionsDisabled:Z
      41: ifne          59
      44: aload_0
      45: invokespecial #7                  // Method checkConsistency:()Z
      48: ifne          59
      51: new           #8                  // class java/lang/AssertionError
      54: dup
      55: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      58: athrow
      59: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
       4: invokevirtual #40                 // Method java/lang/Object.hashCode:()I
       7: invokestatic  #41                 // Method it/unimi/dsi/fastutil/HashCommon.mix:(I)I
      10: ireturn

  public boolean intersects(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #42                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.intersects:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      17: aload_1
      18: invokeinterface #43,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.intersects:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      23: ireturn

  boolean isComplement();
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      25: invokeinterface #44,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.size:()I
      30: aload_0
      31: getfield      #4                  // Field complement:Z
      34: ifeq          44
      37: aload_0
      38: invokevirtual #1                  // Method domainSize:()I
      41: goto          45
      44: iconst_0
      45: if_icmpne     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  public it.unimi.dsi.fastutil.ints.IntIterator iterator();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          42
      28: aload_0
      29: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      32: aload_0
      33: invokevirtual #1                  // Method domainSize:()I
      36: invokestatic  #45                 // Method de/tum/in/naturals/set/NatBitSets.complementIterator:(Lde/tum/in/naturals/set/NatBitSet;I)Lit/unimi/dsi/fastutil/ints/IntIterator;
      39: goto          51
      42: aload_0
      43: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      46: invokeinterface #46,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.iterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
      51: areturn

  public int lastInt();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          59
      28: aload_0
      29: invokevirtual #47                 // Method isEmpty:()Z
      32: ifeq          43
      35: new           #35                 // class java/util/NoSuchElementException
      38: dup
      39: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":()V
      42: athrow
      43: aload_0
      44: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      47: aload_0
      48: invokevirtual #1                  // Method domainSize:()I
      51: iconst_1
      52: isub
      53: invokeinterface #48,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.previousPresentIndex:(I)I
      58: ireturn
      59: aload_0
      60: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      63: invokeinterface #22,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.lastInt:()I
      68: ireturn

  public int nextAbsentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          50
      28: aload_0
      29: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      32: iload_1
      33: invokeinterface #49,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.nextPresentIndex:(I)I
      38: istore_2
      39: iload_2
      40: iconst_m1
      41: if_icmpne     48
      44: iload_1
      45: goto          49
      48: iload_2
      49: ireturn
      50: aload_0
      51: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      54: iload_1
      55: invokeinterface #50,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.nextAbsentIndex:(I)I
      60: ireturn

  public int nextPresentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          53
      28: aload_0
      29: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      32: iload_1
      33: invokeinterface #50,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.nextAbsentIndex:(I)I
      38: istore_2
      39: iload_2
      40: aload_0
      41: invokevirtual #1                  // Method domainSize:()I
      44: if_icmpne     51
      47: iconst_m1
      48: goto          52
      51: iload_2
      52: ireturn
      53: aload_0
      54: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      57: iload_1
      58: invokeinterface #49,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.nextPresentIndex:(I)I
      63: ireturn

  public void or(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #51                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.or:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      12: goto          25
      15: aload_0
      16: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      19: aload_1
      20: invokeinterface #52,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.or:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      25: return

  public void orNot(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_1
       1: instanceof    #10                 // class de/tum/in/naturals/set/BoundedNatBitSet
       4: ifeq          28
       7: aload_0
       8: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      11: aload_1
      12: checkcast     #10                 // class de/tum/in/naturals/set/BoundedNatBitSet
      15: invokeinterface #53,  1           // InterfaceMethod de/tum/in/naturals/set/BoundedNatBitSet.complement:()Lde/tum/in/naturals/set/BoundedNatBitSet;
      20: invokeinterface #52,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.or:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      25: goto          33
      28: aload_0
      29: aload_1
      30: invokespecial #54                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.orNot:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      33: return

  public int previousAbsentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      25: iload_1
      26: invokeinterface #55,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.previousAbsentIndex:(I)I
      31: ireturn

  public int previousPresentIndex(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      25: iload_1
      26: invokeinterface #48,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.previousPresentIndex:(I)I
      31: ireturn

  public boolean remove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method checkInDomain:(I)V
       5: aload_0
       6: getfield      #4                  // Field complement:Z
       9: ifeq          25
      12: aload_0
      13: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      16: iload_1
      17: invokeinterface #16,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.add:(I)Z
      22: goto          35
      25: aload_0
      26: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      29: iload_1
      30: invokeinterface #15,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.remove:(I)Z
      35: ireturn

  public boolean removeAll(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          20
       7: aload_0
       8: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      11: aload_1
      12: invokeinterface #56,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.addAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      17: goto          30
      20: aload_0
      21: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      24: aload_1
      25: invokeinterface #57,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.removeAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      30: ireturn

  public boolean retainAll(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field complement:Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #58                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.retainAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      17: aload_1
      18: invokeinterface #59,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.retainAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      23: ireturn

  public it.unimi.dsi.fastutil.ints.IntIterator reverseIterator();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          42
      28: aload_0
      29: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      32: aload_0
      33: invokevirtual #1                  // Method domainSize:()I
      36: invokestatic  #60                 // Method de/tum/in/naturals/set/NatBitSets.complementReverseIterator:(Lde/tum/in/naturals/set/NatBitSet;I)Lit/unimi/dsi/fastutil/ints/IntIterator;
      39: goto          51
      42: aload_0
      43: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      46: invokeinterface #61,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.reverseIterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
      51: areturn

  public void set(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #14                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #4                  // Field complement:Z
      30: ifeq          46
      33: aload_0
      34: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      37: iload_1
      38: invokeinterface #24,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.clear:(I)V
      43: goto          56
      46: aload_0
      47: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      50: iload_1
      51: invokeinterface #23,  2           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.set:(I)V
      56: getstatic     #6                  // Field $assertionsDisabled:Z
      59: ifne          77
      62: aload_0
      63: invokespecial #7                  // Method checkConsistency:()Z
      66: ifne          77
      69: new           #8                  // class java/lang/AssertionError
      72: dup
      73: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      76: athrow
      77: return

  public void set(int, boolean);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #14                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      30: iload_1
      31: iload_2
      32: aload_0
      33: getfield      #4                  // Field complement:Z
      36: ixor
      37: invokeinterface #62,  3           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.set:(IZ)V
      42: getstatic     #6                  // Field $assertionsDisabled:Z
      45: ifne          63
      48: aload_0
      49: invokespecial #7                  // Method checkConsistency:()Z
      52: ifne          63
      55: new           #8                  // class java/lang/AssertionError
      58: dup
      59: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      62: athrow
      63: return

  public void set(int, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #25                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #4                  // Field complement:Z
      31: ifeq          48
      34: aload_0
      35: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      38: iload_1
      39: iload_2
      40: invokeinterface #27,  3           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.clear:(II)V
      45: goto          59
      48: aload_0
      49: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      52: iload_1
      53: iload_2
      54: invokeinterface #26,  3           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.set:(II)V
      59: getstatic     #6                  // Field $assertionsDisabled:Z
      62: ifne          80
      65: aload_0
      66: invokespecial #7                  // Method checkConsistency:()Z
      69: ifne          80
      72: new           #8                  // class java/lang/AssertionError
      75: dup
      76: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: return

  public int size();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #7                  // Method checkConsistency:()Z
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #4                  // Field complement:Z
      25: ifeq          45
      28: aload_0
      29: invokevirtual #1                  // Method domainSize:()I
      32: aload_0
      33: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      36: invokeinterface #44,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.size:()I
      41: isub
      42: goto          54
      45: aload_0
      46: getfield      #3                  // Field delegate:Lde/tum/in/naturals/set/NatBitSet;
      49: invokeinterface #44,  1           // InterfaceMethod de/tum/in/naturals/set/NatBitSet.size:()I
      54: ireturn

  public de.tum.in.naturals.set.AbstractBoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lde/tum/in/naturals/set/BoundedWrapper;
       4: areturn

  public de.tum.in.naturals.set.BoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lde/tum/in/naturals/set/BoundedWrapper;
       4: areturn

  public de.tum.in.naturals.set.NatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lde/tum/in/naturals/set/BoundedWrapper;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method iterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
       4: areturn

  public de.tum.in.naturals.set.AbstractNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lde/tum/in/naturals/set/BoundedWrapper;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lde/tum/in/naturals/set/BoundedWrapper;
       4: areturn

  static {};
    Code:
       0: ldc           #11                 // class de/tum/in/naturals/set/BoundedWrapper
       2: invokevirtual #65                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: return
}
