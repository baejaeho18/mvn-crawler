Compiled from "AbstractBoundedNatBitSet.java"
public abstract class de.tum.in.naturals.set.AbstractBoundedNatBitSet extends de.tum.in.naturals.set.AbstractNatBitSet implements de.tum.in.naturals.set.BoundedNatBitSet {
  private final int domainSize;

  protected de.tum.in.naturals.set.AbstractBoundedNatBitSet(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method de/tum/in/naturals/set/AbstractNatBitSet."<init>":()V
       4: iload_1
       5: ifge          32
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Invalid domain size %d
      14: iconst_1
      15: anewarray     #4                  // class java/lang/Object
      18: dup
      19: iconst_0
      20: iload_1
      21: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: aastore
      25: invokestatic  #6                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: iload_1
      34: putfield      #8                  // Field domainSize:I
      37: return

  public boolean add(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method checkInDomain:(I)V
       5: aload_0
       6: iload_1
       7: invokespecial #10                 // Method de/tum/in/naturals/set/AbstractNatBitSet.add:(I)Z
      10: ireturn

  protected void checkInDomain(int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field domainSize:I
       4: iload_1
       5: iload_2
       6: invokestatic  #11                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkInDomain:(III)V
       9: return

  protected void checkInDomain(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field domainSize:I
       4: iload_1
       5: invokestatic  #12                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkInDomain:(II)V
       8: return

  public void clearFrom(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method checkInDomain:(I)V
       5: aload_0
       6: iload_1
       7: aload_0
       8: invokevirtual #13                 // Method domainSize:()I
      11: invokevirtual #14                 // Method clear:(II)V
      14: return

  public de.tum.in.naturals.set.AbstractBoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method de/tum/in/naturals/set/AbstractNatBitSet.clone:()Lde/tum/in/naturals/set/AbstractNatBitSet;
       4: checkcast     #16                 // class de/tum/in/naturals/set/AbstractBoundedNatBitSet
       7: areturn

  public int domainSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field domainSize:I
       4: ireturn

  protected boolean inDomain(int);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpgt     17
       5: iload_1
       6: aload_0
       7: getfield      #8                  // Field domainSize:I
      10: if_icmpge     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  abstract boolean isComplement();

  public void orNot(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
       6: ifeq          21
       9: aload_0
      10: iconst_0
      11: aload_0
      12: getfield      #8                  // Field domainSize:I
      15: invokevirtual #18                 // Method set:(II)V
      18: goto          52
      21: iconst_0
      22: istore_2
      23: iload_2
      24: aload_0
      25: invokevirtual #13                 // Method domainSize:()I
      28: if_icmpge     52
      31: aload_1
      32: iload_2
      33: invokeinterface #19,  2           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.contains:(I)Z
      38: ifne          46
      41: aload_0
      42: iload_2
      43: invokevirtual #20                 // Method set:(I)V
      46: iinc          2, 1
      49: goto          23
      52: return

  public boolean remove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method checkInDomain:(I)V
       5: aload_0
       6: iload_1
       7: invokespecial #21                 // Method de/tum/in/naturals/set/AbstractNatBitSet.remove:(I)Z
      10: ireturn

  public de.tum.in.naturals.set.AbstractNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method clone:()Lde/tum/in/naturals/set/AbstractBoundedNatBitSet;
       4: areturn

  public de.tum.in.naturals.set.NatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method clone:()Lde/tum/in/naturals/set/AbstractBoundedNatBitSet;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method clone:()Lde/tum/in/naturals/set/AbstractBoundedNatBitSet;
       4: areturn

  public de.tum.in.naturals.set.BoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method clone:()Lde/tum/in/naturals/set/AbstractBoundedNatBitSet;
       4: areturn
}
