Compiled from "LongBoundedNatBitSet.java"
class de.tum.in.naturals.set.LongBoundedNatBitSet extends de.tum.in.naturals.set.AbstractBoundedNatBitSet {
  private final boolean complement;

  private final de.tum.in.naturals.set.LongBoundedNatBitSet complementView;

  private final long domainMask;

  private final long[] store;

  static final boolean $assertionsDisabled;

  private de.tum.in.naturals.set.LongBoundedNatBitSet(long, int, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #1                  // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet."<init>":(I)V
       5: bipush        64
       7: iload_3
       8: if_icmpge     19
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":()V
      18: athrow
      19: aload_0
      20: iconst_1
      21: newarray       long
      23: dup
      24: iconst_0
      25: lload_1
      26: lastore
      27: putfield      #5                  // Field store:[J
      30: aload_0
      31: iload         4
      33: putfield      #6                  // Field complement:Z
      36: aload_0
      37: aload_0
      38: invokevirtual #7                  // Method domainSize:()I
      41: invokestatic  #8                  // Method de/tum/in/naturals/BitUtil.maskTo:(I)J
      44: putfield      #9                  // Field domainMask:J
      47: aload_0
      48: new           #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      51: dup
      52: aload_0
      53: invokespecial #11                 // Method "<init>":(Lde/tum/in/naturals/set/LongBoundedNatBitSet;)V
      56: putfield      #12                 // Field complementView:Lde/tum/in/naturals/set/LongBoundedNatBitSet;
      59: getstatic     #13                 // Field $assertionsDisabled:Z
      62: ifne          80
      65: aload_0
      66: invokespecial #14                 // Method checkConsistency:()Z
      69: ifne          80
      72: new           #15                 // class java/lang/AssertionError
      75: dup
      76: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: return

  private de.tum.in.naturals.set.LongBoundedNatBitSet(de.tum.in.naturals.set.LongBoundedNatBitSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method domainSize:()I
       5: invokespecial #1                  // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet."<init>":(I)V
       8: aload_0
       9: aload_1
      10: putfield      #12                 // Field complementView:Lde/tum/in/naturals/set/LongBoundedNatBitSet;
      13: aload_0
      14: aload_1
      15: getfield      #6                  // Field complement:Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: putfield      #6                  // Field complement:Z
      29: aload_0
      30: aload_1
      31: getfield      #5                  // Field store:[J
      34: putfield      #5                  // Field store:[J
      37: aload_0
      38: aload_1
      39: getfield      #9                  // Field domainMask:J
      42: putfield      #9                  // Field domainMask:J
      45: return

  de.tum.in.naturals.set.LongBoundedNatBitSet(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iconst_0
       4: invokespecial #17                 // Method "<init>":(JIZ)V
       7: return

  de.tum.in.naturals.set.LongBoundedNatBitSet(int);
    Code:
       0: aload_0
       1: lconst_0
       2: iload_1
       3: iconst_0
       4: invokespecial #17                 // Method "<init>":(JIZ)V
       7: return

  public static int maximalSize();
    Code:
       0: bipush        64
       2: ireturn

  public void and(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #18,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          37
      30: aload_0
      31: invokevirtual #19                 // Method clear:()V
      34: goto          153
      37: aload_1
      38: instanceof    #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      41: ifeq          148
      44: aload_1
      45: checkcast     #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      48: astore_2
      49: aload_0
      50: getfield      #6                  // Field complement:Z
      53: ifeq          116
      56: aload_0
      57: getfield      #5                  // Field store:[J
      60: iconst_0
      61: dup2
      62: laload
      63: aload_2
      64: getfield      #6                  // Field complement:Z
      67: ifeq          88
      70: aload_2
      71: getfield      #5                  // Field store:[J
      74: iconst_0
      75: laload
      76: aload_2
      77: getfield      #9                  // Field domainMask:J
      80: ldc2_w        #20                 // long -1l
      83: lxor
      84: lor
      85: goto          98
      88: aload_2
      89: getfield      #5                  // Field store:[J
      92: iconst_0
      93: laload
      94: ldc2_w        #20                 // long -1l
      97: lxor
      98: lor
      99: lastore
     100: aload_0
     101: getfield      #5                  // Field store:[J
     104: iconst_0
     105: dup2
     106: laload
     107: aload_0
     108: getfield      #9                  // Field domainMask:J
     111: land
     112: lastore
     113: goto          145
     116: aload_0
     117: getfield      #5                  // Field store:[J
     120: iconst_0
     121: dup2
     122: laload
     123: aload_2
     124: getfield      #6                  // Field complement:Z
     127: ifeq          137
     130: aload_2
     131: invokevirtual #22                 // Method complementBits:()J
     134: goto          143
     137: aload_2
     138: getfield      #5                  // Field store:[J
     141: iconst_0
     142: laload
     143: land
     144: lastore
     145: goto          153
     148: aload_0
     149: aload_1
     150: invokespecial #23                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.and:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     153: getstatic     #13                 // Field $assertionsDisabled:Z
     156: ifne          174
     159: aload_0
     160: invokespecial #14                 // Method checkConsistency:()Z
     163: ifne          174
     166: new           #15                 // class java/lang/AssertionError
     169: dup
     170: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     173: athrow
     174: return

  public void andNot(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #18,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          31
      30: return
      31: aload_1
      32: instanceof    #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      35: ifeq          142
      38: aload_1
      39: checkcast     #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      42: astore_2
      43: aload_0
      44: getfield      #6                  // Field complement:Z
      47: ifeq          95
      50: aload_0
      51: getfield      #5                  // Field store:[J
      54: iconst_0
      55: dup2
      56: laload
      57: aload_2
      58: getfield      #6                  // Field complement:Z
      61: ifeq          71
      64: aload_2
      65: invokevirtual #22                 // Method complementBits:()J
      68: goto          77
      71: aload_2
      72: getfield      #5                  // Field store:[J
      75: iconst_0
      76: laload
      77: lor
      78: lastore
      79: aload_0
      80: getfield      #5                  // Field store:[J
      83: iconst_0
      84: dup2
      85: laload
      86: aload_0
      87: getfield      #9                  // Field domainMask:J
      90: land
      91: lastore
      92: goto          139
      95: aload_0
      96: getfield      #5                  // Field store:[J
      99: iconst_0
     100: dup2
     101: laload
     102: aload_2
     103: getfield      #6                  // Field complement:Z
     106: ifeq          127
     109: aload_2
     110: getfield      #5                  // Field store:[J
     113: iconst_0
     114: laload
     115: aload_2
     116: getfield      #9                  // Field domainMask:J
     119: ldc2_w        #20                 // long -1l
     122: lxor
     123: lor
     124: goto          137
     127: aload_2
     128: getfield      #5                  // Field store:[J
     131: iconst_0
     132: laload
     133: ldc2_w        #20                 // long -1l
     136: lxor
     137: land
     138: lastore
     139: goto          147
     142: aload_0
     143: aload_1
     144: invokespecial #24                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.andNot:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     147: getstatic     #13                 // Field $assertionsDisabled:Z
     150: ifne          168
     153: aload_0
     154: invokespecial #14                 // Method checkConsistency:()Z
     157: ifne          168
     160: new           #15                 // class java/lang/AssertionError
     163: dup
     164: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     167: athrow
     168: return

  private boolean checkConsistency();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:[J
       4: iconst_0
       5: laload
       6: aload_0
       7: getfield      #9                  // Field domainMask:J
      10: ldc2_w        #20                 // long -1l
      13: lxor
      14: land
      15: lconst_0
      16: lcmp
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void clear(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #25                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #6                  // Field complement:Z
      30: ifeq          48
      33: aload_0
      34: getfield      #5                  // Field store:[J
      37: iconst_0
      38: dup2
      39: laload
      40: lconst_1
      41: iload_1
      42: lshl
      43: lor
      44: lastore
      45: goto          64
      48: aload_0
      49: getfield      #5                  // Field store:[J
      52: iconst_0
      53: dup2
      54: laload
      55: lconst_1
      56: iload_1
      57: lshl
      58: ldc2_w        #20                 // long -1l
      61: lxor
      62: land
      63: lastore
      64: getstatic     #13                 // Field $assertionsDisabled:Z
      67: ifne          85
      70: aload_0
      71: invokespecial #14                 // Method checkConsistency:()Z
      74: ifne          85
      77: new           #15                 // class java/lang/AssertionError
      80: dup
      81: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      84: athrow
      85: return

  public void clear(int, int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #26                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #6                  // Field complement:Z
      31: ifeq          51
      34: aload_0
      35: getfield      #5                  // Field store:[J
      38: iconst_0
      39: dup2
      40: laload
      41: iload_1
      42: iload_2
      43: invokestatic  #27                 // Method de/tum/in/naturals/BitUtil.mask:(II)J
      46: lor
      47: lastore
      48: goto          69
      51: aload_0
      52: getfield      #5                  // Field store:[J
      55: iconst_0
      56: dup2
      57: laload
      58: iload_1
      59: iload_2
      60: invokestatic  #27                 // Method de/tum/in/naturals/BitUtil.mask:(II)J
      63: ldc2_w        #20                 // long -1l
      66: lxor
      67: land
      68: lastore
      69: getstatic     #13                 // Field $assertionsDisabled:Z
      72: ifne          90
      75: aload_0
      76: invokespecial #14                 // Method checkConsistency:()Z
      79: ifne          90
      82: new           #15                 // class java/lang/AssertionError
      85: dup
      86: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      89: athrow
      90: return

  public void clear();
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #6                  // Field complement:Z
      25: ifeq          41
      28: aload_0
      29: getfield      #5                  // Field store:[J
      32: iconst_0
      33: aload_0
      34: getfield      #9                  // Field domainMask:J
      37: lastore
      38: goto          48
      41: aload_0
      42: getfield      #5                  // Field store:[J
      45: iconst_0
      46: lconst_0
      47: lastore
      48: getstatic     #13                 // Field $assertionsDisabled:Z
      51: ifne          69
      54: aload_0
      55: invokespecial #14                 // Method checkConsistency:()Z
      58: ifne          69
      61: new           #15                 // class java/lang/AssertionError
      64: dup
      65: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      68: athrow
      69: return

  public de.tum.in.naturals.set.LongBoundedNatBitSet clone();
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: new           #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      24: dup
      25: aload_0
      26: getfield      #5                  // Field store:[J
      29: iconst_0
      30: laload
      31: aload_0
      32: invokevirtual #7                  // Method domainSize:()I
      35: aload_0
      36: getfield      #6                  // Field complement:Z
      39: invokespecial #17                 // Method "<init>":(JIZ)V
      42: areturn

  public de.tum.in.naturals.set.BoundedNatBitSet complement();
    Code:
       0: aload_0
       1: getfield      #12                 // Field complementView:Lde/tum/in/naturals/set/LongBoundedNatBitSet;
       4: areturn

  protected long complementBits();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:[J
       4: iconst_0
       5: laload
       6: ldc2_w        #20                 // long -1l
       9: lxor
      10: aload_0
      11: getfield      #9                  // Field domainMask:J
      14: land
      15: lreturn

  public boolean contains(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #28                 // Method inDomain:(I)Z
      26: ifeq          41
      29: aload_0
      30: iload_1
      31: invokespecial #29                 // Method containsIndex:(I)Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public boolean containsAll(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: invokevirtual #30                 // Method isEmpty:()Z
      25: ifeq          35
      28: aload_1
      29: invokeinterface #18,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      34: ireturn
      35: aload_1
      36: invokeinterface #18,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: aload_1
      47: instanceof    #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      50: ifeq          131
      53: aload_1
      54: checkcast     #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      57: astore_2
      58: aload_2
      59: getfield      #6                  // Field complement:Z
      62: ifeq          72
      65: aload_2
      66: invokevirtual #22                 // Method complementBits:()J
      69: goto          78
      72: aload_2
      73: getfield      #5                  // Field store:[J
      76: iconst_0
      77: laload
      78: lstore_3
      79: aload_0
      80: getfield      #6                  // Field complement:Z
      83: ifeq          104
      86: aload_0
      87: getfield      #5                  // Field store:[J
      90: iconst_0
      91: laload
      92: aload_0
      93: getfield      #9                  // Field domainMask:J
      96: ldc2_w        #20                 // long -1l
      99: lxor
     100: lor
     101: goto          114
     104: aload_0
     105: getfield      #5                  // Field store:[J
     108: iconst_0
     109: laload
     110: ldc2_w        #20                 // long -1l
     113: lxor
     114: lstore        5
     116: lload         5
     118: lload_3
     119: land
     120: lconst_0
     121: lcmp
     122: ifne          129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: ireturn
     131: aload_0
     132: aload_1
     133: invokespecial #31                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.containsAll:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
     136: ireturn

  private boolean containsIndex(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:[J
       4: iconst_0
       5: laload
       6: lconst_1
       7: iload_1
       8: lshl
       9: land
      10: lconst_0
      11: lcmp
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: aload_0
      21: getfield      #6                  // Field complement:Z
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public int firstInt();
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: invokevirtual #30                 // Method isEmpty:()Z
      25: ifeq          36
      28: new           #32                 // class java/util/NoSuchElementException
      31: dup
      32: invokespecial #33                 // Method java/util/NoSuchElementException."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #6                  // Field complement:Z
      40: ifeq          56
      43: aload_0
      44: getfield      #5                  // Field store:[J
      47: iconst_0
      48: laload
      49: ldc2_w        #20                 // long -1l
      52: lxor
      53: goto          62
      56: aload_0
      57: getfield      #5                  // Field store:[J
      60: iconst_0
      61: laload
      62: invokestatic  #34                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      65: istore_1
      66: getstatic     #13                 // Field $assertionsDisabled:Z
      69: ifne          94
      72: iload_1
      73: bipush        64
      75: if_icmpge     86
      78: aload_0
      79: iload_1
      80: invokespecial #29                 // Method containsIndex:(I)Z
      83: ifne          94
      86: new           #15                 // class java/lang/AssertionError
      89: dup
      90: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      93: athrow
      94: iload_1
      95: ireturn

  public void flip(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #25                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #5                  // Field store:[J
      30: iconst_0
      31: dup2
      32: laload
      33: lconst_1
      34: iload_1
      35: lshl
      36: lxor
      37: lastore
      38: getstatic     #13                 // Field $assertionsDisabled:Z
      41: ifne          59
      44: aload_0
      45: invokespecial #14                 // Method checkConsistency:()Z
      48: ifne          59
      51: new           #15                 // class java/lang/AssertionError
      54: dup
      55: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      58: athrow
      59: return

  public void flip(int, int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #26                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #5                  // Field store:[J
      31: iconst_0
      32: dup2
      33: laload
      34: iload_1
      35: iload_2
      36: invokestatic  #27                 // Method de/tum/in/naturals/BitUtil.mask:(II)J
      39: lxor
      40: lastore
      41: getstatic     #13                 // Field $assertionsDisabled:Z
      44: ifne          62
      47: aload_0
      48: invokespecial #14                 // Method checkConsistency:()Z
      51: ifne          62
      54: new           #15                 // class java/lang/AssertionError
      57: dup
      58: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      61: athrow
      62: return

  long[] getStore();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:[J
       4: areturn

  public boolean intersects(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: instanceof    #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      25: ifeq          91
      28: aload_1
      29: checkcast     #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      32: astore_2
      33: aload_0
      34: getfield      #6                  // Field complement:Z
      37: ifeq          47
      40: aload_0
      41: invokevirtual #22                 // Method complementBits:()J
      44: goto          53
      47: aload_0
      48: getfield      #5                  // Field store:[J
      51: iconst_0
      52: laload
      53: lstore_3
      54: aload_2
      55: getfield      #6                  // Field complement:Z
      58: ifeq          68
      61: aload_2
      62: invokevirtual #22                 // Method complementBits:()J
      65: goto          74
      68: aload_2
      69: getfield      #5                  // Field store:[J
      72: iconst_0
      73: laload
      74: lstore        5
      76: lload_3
      77: lload         5
      79: land
      80: lconst_0
      81: lcmp
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn
      91: aload_0
      92: aload_1
      93: invokespecial #35                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.intersects:(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z
      96: ireturn

  boolean isComplement();
    Code:
       0: aload_0
       1: getfield      #6                  // Field complement:Z
       4: ireturn

  public boolean isEmpty();
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #5                  // Field store:[J
      25: iconst_0
      26: laload
      27: aload_0
      28: getfield      #6                  // Field complement:Z
      31: ifeq          41
      34: aload_0
      35: getfield      #9                  // Field domainMask:J
      38: goto          42
      41: lconst_0
      42: lcmp
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public it.unimi.dsi.fastutil.ints.IntIterator iterator();
    Code:
       0: new           #36                 // class de/tum/in/naturals/set/NatBitSetIterator
       3: dup
       4: aload_0
       5: invokespecial #37                 // Method de/tum/in/naturals/set/NatBitSetIterator."<init>":(Lde/tum/in/naturals/set/NatBitSet;)V
       8: areturn

  public int lastInt();
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: invokevirtual #30                 // Method isEmpty:()Z
      25: ifeq          36
      28: new           #32                 // class java/util/NoSuchElementException
      31: dup
      32: invokespecial #33                 // Method java/util/NoSuchElementException."<init>":()V
      35: athrow
      36: bipush        64
      38: aload_0
      39: getfield      #6                  // Field complement:Z
      42: ifeq          52
      45: aload_0
      46: invokevirtual #22                 // Method complementBits:()J
      49: goto          58
      52: aload_0
      53: getfield      #5                  // Field store:[J
      56: iconst_0
      57: laload
      58: invokestatic  #38                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      61: isub
      62: iconst_1
      63: isub
      64: istore_1
      65: getstatic     #13                 // Field $assertionsDisabled:Z
      68: ifne          92
      71: iconst_0
      72: iload_1
      73: if_icmpgt     84
      76: aload_0
      77: iload_1
      78: invokespecial #29                 // Method containsIndex:(I)Z
      81: ifne          92
      84: new           #15                 // class java/lang/AssertionError
      87: dup
      88: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      91: athrow
      92: iload_1
      93: ireturn

  public int nextAbsentIndex(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #39                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: iload_1
      26: aload_0
      27: invokevirtual #7                  // Method domainSize:()I
      30: if_icmpge     40
      33: aload_0
      34: invokevirtual #30                 // Method isEmpty:()Z
      37: ifeq          42
      40: iload_1
      41: ireturn
      42: aload_0
      43: getfield      #6                  // Field complement:Z
      46: ifeq          58
      49: aload_0
      50: getfield      #5                  // Field store:[J
      53: iconst_0
      54: laload
      55: goto          62
      58: aload_0
      59: invokevirtual #22                 // Method complementBits:()J
      62: iload_1
      63: invokestatic  #8                  // Method de/tum/in/naturals/BitUtil.maskTo:(I)J
      66: ldc2_w        #20                 // long -1l
      69: lxor
      70: land
      71: lstore_2
      72: lload_2
      73: lconst_0
      74: lcmp
      75: ifne          83
      78: aload_0
      79: invokevirtual #7                  // Method domainSize:()I
      82: ireturn
      83: lload_2
      84: invokestatic  #34                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      87: istore        4
      89: getstatic     #13                 // Field $assertionsDisabled:Z
      92: ifne          121
      95: iload         4
      97: bipush        64
      99: if_icmpge     111
     102: aload_0
     103: iload         4
     105: invokespecial #29                 // Method containsIndex:(I)Z
     108: ifeq          121
     111: new           #15                 // class java/lang/AssertionError
     114: dup
     115: iload         4
     117: invokespecial #40                 // Method java/lang/AssertionError."<init>":(I)V
     120: athrow
     121: iload         4
     123: ireturn

  public int nextPresentIndex(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #39                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: iload_1
      26: aload_0
      27: invokevirtual #7                  // Method domainSize:()I
      30: if_icmpge     40
      33: aload_0
      34: invokevirtual #30                 // Method isEmpty:()Z
      37: ifeq          42
      40: iconst_m1
      41: ireturn
      42: aload_0
      43: getfield      #6                  // Field complement:Z
      46: ifeq          56
      49: aload_0
      50: invokevirtual #22                 // Method complementBits:()J
      53: goto          62
      56: aload_0
      57: getfield      #5                  // Field store:[J
      60: iconst_0
      61: laload
      62: iload_1
      63: invokestatic  #8                  // Method de/tum/in/naturals/BitUtil.maskTo:(I)J
      66: ldc2_w        #20                 // long -1l
      69: lxor
      70: land
      71: lstore_2
      72: lload_2
      73: lconst_0
      74: lcmp
      75: ifne          80
      78: iconst_m1
      79: ireturn
      80: lload_2
      81: invokestatic  #34                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      84: istore        4
      86: getstatic     #13                 // Field $assertionsDisabled:Z
      89: ifne          118
      92: iload         4
      94: bipush        64
      96: if_icmpge     108
      99: aload_0
     100: iload         4
     102: invokespecial #29                 // Method containsIndex:(I)Z
     105: ifne          118
     108: new           #15                 // class java/lang/AssertionError
     111: dup
     112: iload         4
     114: invokespecial #40                 // Method java/lang/AssertionError."<init>":(I)V
     117: athrow
     118: iload         4
     120: ireturn

  public void or(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #18,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          31
      30: return
      31: aload_1
      32: instanceof    #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      35: ifeq          137
      38: aload_1
      39: checkcast     #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      42: astore_2
      43: aload_0
      44: aload_2
      45: invokevirtual #41                 // Method lastInt:()I
      48: invokevirtual #25                 // Method checkInDomain:(I)V
      51: aload_0
      52: getfield      #6                  // Field complement:Z
      55: ifeq          105
      58: aload_0
      59: getfield      #5                  // Field store:[J
      62: iconst_0
      63: dup2
      64: laload
      65: aload_2
      66: getfield      #6                  // Field complement:Z
      69: ifeq          90
      72: aload_2
      73: getfield      #5                  // Field store:[J
      76: iconst_0
      77: laload
      78: aload_2
      79: getfield      #9                  // Field domainMask:J
      82: ldc2_w        #20                 // long -1l
      85: lxor
      86: lor
      87: goto          100
      90: aload_2
      91: getfield      #5                  // Field store:[J
      94: iconst_0
      95: laload
      96: ldc2_w        #20                 // long -1l
      99: lxor
     100: land
     101: lastore
     102: goto          134
     105: aload_0
     106: getfield      #5                  // Field store:[J
     109: iconst_0
     110: dup2
     111: laload
     112: aload_2
     113: getfield      #6                  // Field complement:Z
     116: ifeq          126
     119: aload_2
     120: invokevirtual #22                 // Method complementBits:()J
     123: goto          132
     126: aload_2
     127: getfield      #5                  // Field store:[J
     130: iconst_0
     131: laload
     132: lor
     133: lastore
     134: goto          142
     137: aload_0
     138: aload_1
     139: invokespecial #42                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.or:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     142: getstatic     #13                 // Field $assertionsDisabled:Z
     145: ifne          163
     148: aload_0
     149: invokespecial #14                 // Method checkConsistency:()Z
     152: ifne          163
     155: new           #15                 // class java/lang/AssertionError
     158: dup
     159: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     162: athrow
     163: return

  public void orNot(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #18,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          54
      30: aload_0
      31: getfield      #5                  // Field store:[J
      34: iconst_0
      35: aload_0
      36: getfield      #6                  // Field complement:Z
      39: ifeq          46
      42: lconst_0
      43: goto          50
      46: aload_0
      47: getfield      #9                  // Field domainMask:J
      50: lastore
      51: goto          162
      54: aload_1
      55: instanceof    #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      58: ifeq          157
      61: aload_1
      62: checkcast     #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      65: astore_2
      66: aload_0
      67: getfield      #6                  // Field complement:Z
      70: ifeq          105
      73: aload_0
      74: getfield      #5                  // Field store:[J
      77: iconst_0
      78: dup2
      79: laload
      80: aload_2
      81: getfield      #6                  // Field complement:Z
      84: ifeq          94
      87: aload_2
      88: invokevirtual #22                 // Method complementBits:()J
      91: goto          100
      94: aload_2
      95: getfield      #5                  // Field store:[J
      98: iconst_0
      99: laload
     100: land
     101: lastore
     102: goto          154
     105: aload_0
     106: getfield      #5                  // Field store:[J
     109: iconst_0
     110: dup2
     111: laload
     112: aload_2
     113: getfield      #6                  // Field complement:Z
     116: ifeq          128
     119: aload_2
     120: getfield      #5                  // Field store:[J
     123: iconst_0
     124: laload
     125: goto          138
     128: aload_2
     129: getfield      #5                  // Field store:[J
     132: iconst_0
     133: laload
     134: ldc2_w        #20                 // long -1l
     137: lxor
     138: aload_2
     139: getfield      #9                  // Field domainMask:J
     142: ldc2_w        #20                 // long -1l
     145: lxor
     146: lor
     147: aload_0
     148: getfield      #9                  // Field domainMask:J
     151: land
     152: lor
     153: lastore
     154: goto          162
     157: aload_0
     158: aload_1
     159: invokespecial #43                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.orNot:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
     162: getstatic     #13                 // Field $assertionsDisabled:Z
     165: ifne          183
     168: aload_0
     169: invokespecial #14                 // Method checkConsistency:()Z
     172: ifne          183
     175: new           #15                 // class java/lang/AssertionError
     178: dup
     179: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     182: athrow
     183: return

  public int previousAbsentIndex(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #39                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: iload_1
      26: aload_0
      27: invokevirtual #7                  // Method domainSize:()I
      30: if_icmpge     40
      33: aload_0
      34: invokevirtual #30                 // Method isEmpty:()Z
      37: ifeq          42
      40: iload_1
      41: ireturn
      42: iload_1
      43: iconst_1
      44: iadd
      45: invokestatic  #8                  // Method de/tum/in/naturals/BitUtil.maskTo:(I)J
      48: lstore_2
      49: aload_0
      50: getfield      #6                  // Field complement:Z
      53: ifeq          65
      56: aload_0
      57: getfield      #5                  // Field store:[J
      60: iconst_0
      61: laload
      62: goto          69
      65: aload_0
      66: invokevirtual #22                 // Method complementBits:()J
      69: lload_2
      70: land
      71: lstore        4
      73: lload         4
      75: lconst_0
      76: lcmp
      77: ifne          82
      80: iconst_m1
      81: ireturn
      82: bipush        64
      84: lload         4
      86: invokestatic  #38                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      89: isub
      90: iconst_1
      91: isub
      92: istore        6
      94: getstatic     #13                 // Field $assertionsDisabled:Z
      97: ifne          119
     100: aload_0
     101: iload         6
     103: invokespecial #29                 // Method containsIndex:(I)Z
     106: ifeq          119
     109: new           #15                 // class java/lang/AssertionError
     112: dup
     113: iload         6
     115: invokespecial #40                 // Method java/lang/AssertionError."<init>":(I)V
     118: athrow
     119: iload         6
     121: ireturn

  public int previousPresentIndex(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: invokestatic  #39                 // Method de/tum/in/naturals/set/NatBitSetsUtil.checkNonNegative:(I)V
      25: aload_0
      26: invokevirtual #30                 // Method isEmpty:()Z
      29: ifeq          34
      32: iconst_m1
      33: ireturn
      34: aload_0
      35: getfield      #6                  // Field complement:Z
      38: ifeq          48
      41: aload_0
      42: invokevirtual #22                 // Method complementBits:()J
      45: goto          54
      48: aload_0
      49: getfield      #5                  // Field store:[J
      52: iconst_0
      53: laload
      54: iload_1
      55: iconst_1
      56: iadd
      57: invokestatic  #8                  // Method de/tum/in/naturals/BitUtil.maskTo:(I)J
      60: land
      61: lstore_2
      62: lload_2
      63: lconst_0
      64: lcmp
      65: ifne          70
      68: iconst_m1
      69: ireturn
      70: bipush        64
      72: lload_2
      73: invokestatic  #38                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      76: isub
      77: iconst_1
      78: isub
      79: istore        4
      81: getstatic     #13                 // Field $assertionsDisabled:Z
      84: ifne          106
      87: aload_0
      88: iload         4
      90: invokespecial #29                 // Method containsIndex:(I)Z
      93: ifne          106
      96: new           #15                 // class java/lang/AssertionError
      99: dup
     100: iload         4
     102: invokespecial #40                 // Method java/lang/AssertionError."<init>":(I)V
     105: athrow
     106: iload         4
     108: ireturn

  public void set(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: invokevirtual #25                 // Method checkInDomain:(I)V
      26: aload_0
      27: getfield      #6                  // Field complement:Z
      30: ifeq          52
      33: aload_0
      34: getfield      #5                  // Field store:[J
      37: iconst_0
      38: dup2
      39: laload
      40: lconst_1
      41: iload_1
      42: lshl
      43: ldc2_w        #20                 // long -1l
      46: lxor
      47: land
      48: lastore
      49: goto          64
      52: aload_0
      53: getfield      #5                  // Field store:[J
      56: iconst_0
      57: dup2
      58: laload
      59: lconst_1
      60: iload_1
      61: lshl
      62: lor
      63: lastore
      64: getstatic     #13                 // Field $assertionsDisabled:Z
      67: ifne          85
      70: aload_0
      71: invokespecial #14                 // Method checkConsistency:()Z
      74: ifne          85
      77: new           #15                 // class java/lang/AssertionError
      80: dup
      81: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      84: athrow
      85: return

  public void set(int, boolean);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_2
      22: ifeq          33
      25: aload_0
      26: iload_1
      27: invokevirtual #44                 // Method set:(I)V
      30: goto          38
      33: aload_0
      34: iload_1
      35: invokevirtual #45                 // Method clear:(I)V
      38: getstatic     #13                 // Field $assertionsDisabled:Z
      41: ifne          59
      44: aload_0
      45: invokespecial #14                 // Method checkConsistency:()Z
      48: ifne          59
      51: new           #15                 // class java/lang/AssertionError
      54: dup
      55: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      58: athrow
      59: return

  public void set(int, int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #26                 // Method checkInDomain:(II)V
      27: aload_0
      28: getfield      #6                  // Field complement:Z
      31: ifeq          55
      34: aload_0
      35: getfield      #5                  // Field store:[J
      38: iconst_0
      39: dup2
      40: laload
      41: iload_1
      42: iload_2
      43: invokestatic  #27                 // Method de/tum/in/naturals/BitUtil.mask:(II)J
      46: ldc2_w        #20                 // long -1l
      49: lxor
      50: land
      51: lastore
      52: goto          69
      55: aload_0
      56: getfield      #5                  // Field store:[J
      59: iconst_0
      60: dup2
      61: laload
      62: iload_1
      63: iload_2
      64: invokestatic  #27                 // Method de/tum/in/naturals/BitUtil.mask:(II)J
      67: lor
      68: lastore
      69: getstatic     #13                 // Field $assertionsDisabled:Z
      72: ifne          90
      75: aload_0
      76: invokespecial #14                 // Method checkConsistency:()Z
      79: ifne          90
      82: new           #15                 // class java/lang/AssertionError
      85: dup
      86: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      89: athrow
      90: return

  public int size();
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #5                  // Field store:[J
      25: iconst_0
      26: laload
      27: invokestatic  #46                 // Method java/lang/Long.bitCount:(J)I
      30: istore_1
      31: aload_0
      32: getfield      #6                  // Field complement:Z
      35: ifeq          47
      38: aload_0
      39: invokevirtual #7                  // Method domainSize:()I
      42: iload_1
      43: isub
      44: goto          48
      47: iload_1
      48: ireturn

  public void xor(it.unimi.dsi.fastutil.ints.IntCollection);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #14                 // Method checkConsistency:()Z
      10: ifne          21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #18,  1           // InterfaceMethod it/unimi/dsi/fastutil/ints/IntCollection.isEmpty:()Z
      27: ifeq          31
      30: return
      31: aload_1
      32: instanceof    #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      35: ifeq          91
      38: aload_1
      39: checkcast     #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
      42: astore_2
      43: aload_0
      44: aload_2
      45: invokevirtual #7                  // Method domainSize:()I
      48: iconst_1
      49: isub
      50: invokevirtual #25                 // Method checkInDomain:(I)V
      53: aload_0
      54: getfield      #5                  // Field store:[J
      57: iconst_0
      58: dup2
      59: laload
      60: aload_2
      61: getfield      #5                  // Field store:[J
      64: iconst_0
      65: laload
      66: lxor
      67: lastore
      68: aload_2
      69: getfield      #6                  // Field complement:Z
      72: ifeq          88
      75: aload_0
      76: getfield      #5                  // Field store:[J
      79: iconst_0
      80: dup2
      81: laload
      82: aload_2
      83: getfield      #9                  // Field domainMask:J
      86: lxor
      87: lastore
      88: goto          96
      91: aload_0
      92: aload_1
      93: invokespecial #47                 // Method de/tum/in/naturals/set/AbstractBoundedNatBitSet.xor:(Lit/unimi/dsi/fastutil/ints/IntCollection;)V
      96: getstatic     #13                 // Field $assertionsDisabled:Z
      99: ifne          117
     102: aload_0
     103: invokespecial #14                 // Method checkConsistency:()Z
     106: ifne          117
     109: new           #15                 // class java/lang/AssertionError
     112: dup
     113: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     116: athrow
     117: return

  public de.tum.in.naturals.set.AbstractBoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method clone:()Lde/tum/in/naturals/set/LongBoundedNatBitSet;
       4: areturn

  public de.tum.in.naturals.set.BoundedNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method clone:()Lde/tum/in/naturals/set/LongBoundedNatBitSet;
       4: areturn

  public de.tum.in.naturals.set.NatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method clone:()Lde/tum/in/naturals/set/LongBoundedNatBitSet;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method iterator:()Lit/unimi/dsi/fastutil/ints/IntIterator;
       4: areturn

  public de.tum.in.naturals.set.AbstractNatBitSet clone();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method clone:()Lde/tum/in/naturals/set/LongBoundedNatBitSet;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method clone:()Lde/tum/in/naturals/set/LongBoundedNatBitSet;
       4: areturn

  static {};
    Code:
       0: ldc           #10                 // class de/tum/in/naturals/set/LongBoundedNatBitSet
       2: invokevirtual #50                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #13                 // Field $assertionsDisabled:Z
      16: return
}
