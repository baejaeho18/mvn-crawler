Compiled from "VaultCodec.java"
public class org.smallmind.ansible.VaultCodec {
  public org.smallmind.ansible.VaultCodec();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String encrypt(java.io.InputStream, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException, javax.crypto.NoSuchPaddingException, java.security.spec.InvalidKeySpecException, java.security.InvalidKeyException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #2                  // Method encrypt:(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public static java.lang.String encrypt(java.io.InputStream, java.lang.String, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException, javax.crypto.NoSuchPaddingException, java.security.spec.InvalidKeySpecException, java.security.InvalidKeyException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: new           #5                  // class java/io/ByteArrayOutputStream
      11: dup
      12: invokespecial #6                  // Method java/io/ByteArrayOutputStream."<init>":()V
      15: astore        5
      17: aload_0
      18: invokevirtual #7                  // Method java/io/InputStream.read:()I
      21: dup
      22: istore        6
      24: iflt          37
      27: aload         5
      29: iload         6
      31: invokevirtual #8                  // Method java/io/ByteArrayOutputStream.write:(I)V
      34: goto          17
      37: new           #9                  // class org/smallmind/ansible/VaultTumbler
      40: dup
      41: aload_1
      42: invokespecial #10                 // Method org/smallmind/ansible/VaultTumbler."<init>":(Ljava/lang/String;)V
      45: aload         5
      47: invokevirtual #11                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      50: invokevirtual #12                 // Method org/smallmind/ansible/VaultTumbler.encrypt:([B)Lorg/smallmind/ansible/VaultCake;
      53: astore        4
      55: aload         5
      57: invokevirtual #13                 // Method java/io/ByteArrayOutputStream.close:()V
      60: goto          85
      63: astore        6
      65: aload         5
      67: invokevirtual #13                 // Method java/io/ByteArrayOutputStream.close:()V
      70: goto          82
      73: astore        7
      75: aload         6
      77: aload         7
      79: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      82: aload         6
      84: athrow
      85: aload_3
      86: aload         4
      88: invokevirtual #16                 // Method org/smallmind/ansible/VaultCake.getSalt:()[B
      91: invokestatic  #17                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexEncode:([B)Ljava/lang/String;
      94: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      97: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     100: invokestatic  #17                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexEncode:([B)Ljava/lang/String;
     103: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: pop
     107: aload_3
     108: ldc           #21                 // String 0a
     110: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: pop
     114: aload_3
     115: aload         4
     117: invokevirtual #22                 // Method org/smallmind/ansible/VaultCake.getHmac:()[B
     120: invokestatic  #17                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexEncode:([B)Ljava/lang/String;
     123: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     126: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     129: invokestatic  #17                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexEncode:([B)Ljava/lang/String;
     132: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: pop
     136: aload_3
     137: ldc           #21                 // String 0a
     139: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: pop
     143: aload_3
     144: aload         4
     146: invokevirtual #23                 // Method org/smallmind/ansible/VaultCake.getEncrypted:()[B
     149: invokestatic  #17                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexEncode:([B)Ljava/lang/String;
     152: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     155: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     158: invokestatic  #17                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexEncode:([B)Ljava/lang/String;
     161: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: pop
     165: aload_3
     166: invokevirtual #24                 // Method java/lang/StringBuilder.length:()I
     169: bipush        80
     171: idiv
     172: bipush        80
     174: imul
     175: istore        5
     177: iload         5
     179: ifle          197
     182: aload_3
     183: iload         5
     185: bipush        10
     187: invokevirtual #25                 // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
     190: pop
     191: iinc          5, -80
     194: goto          177
     197: aload_2
     198: ifnull        223
     201: aload_3
     202: iconst_0
     203: bipush        10
     205: invokevirtual #25                 // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
     208: iconst_0
     209: aload_2
     210: invokevirtual #26                 // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
     213: iconst_0
     214: ldc           #27                 // String 1.2;AES256;
     216: invokevirtual #26                 // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
     219: pop
     220: goto          231
     223: aload_3
     224: iconst_0
     225: ldc           #28                 // String 1.1;AES256\n
     227: invokevirtual #26                 // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
     230: pop
     231: aload_3
     232: iconst_0
     233: ldc           #29                 // String $ANSIBLE_VAULT;
     235: invokevirtual #26                 // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
     238: pop
     239: aload_3
     240: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     243: areturn
    Exception table:
       from    to  target type
          17    55    63   Class java/lang/Throwable
          65    70    73   Class java/lang/Throwable

  public static byte[] decrypt(java.io.InputStream, java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException, javax.crypto.NoSuchPaddingException, java.security.spec.InvalidKeySpecException, java.security.InvalidKeyException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, org.smallmind.ansible.VaultCodecException;
    Code:
       0: aload_0
       1: invokestatic  #31                 // Method readLine:(Ljava/io/InputStream;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #32                 // String ;
       8: iconst_m1
       9: invokevirtual #33                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
      12: astore_3
      13: aload_3
      14: arraylength
      15: iconst_3
      16: if_icmplt     123
      19: ldc           #34                 // String $ANSIBLE_VAULT
      21: aload_3
      22: iconst_0
      23: aaload
      24: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          123
      30: ldc           #36                 // String 1.1
      32: aload_3
      33: iconst_1
      34: aaload
      35: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          47
      41: aload_3
      42: arraylength
      43: iconst_3
      44: if_icmpeq     64
      47: ldc           #37                 // String 1.2
      49: aload_3
      50: iconst_1
      51: aaload
      52: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          123
      58: aload_3
      59: arraylength
      60: iconst_4
      61: if_icmpne     123
      64: ldc           #38                 // String AES256
      66: aload_3
      67: iconst_2
      68: aaload
      69: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifne          95
      75: new           #39                 // class org/smallmind/ansible/VaultCodecException
      78: dup
      79: ldc           #40                 // String Unknown cypher(%s)
      81: iconst_1
      82: anewarray     #41                 // class java/lang/Object
      85: dup
      86: iconst_0
      87: aload_3
      88: iconst_2
      89: aaload
      90: aastore
      91: invokespecial #42                 // Method org/smallmind/ansible/VaultCodecException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      94: athrow
      95: new           #9                  // class org/smallmind/ansible/VaultTumbler
      98: dup
      99: aload_1
     100: aload_0
     101: bipush        32
     103: invokestatic  #43                 // Method readBytes:(Ljava/io/InputStream;I)[B
     106: invokespecial #44                 // Method org/smallmind/ansible/VaultTumbler."<init>":(Ljava/lang/String;[B)V
     109: aload_0
     110: bipush        32
     112: invokestatic  #43                 // Method readBytes:(Ljava/io/InputStream;I)[B
     115: aload_0
     116: invokestatic  #45                 // Method readBytes:(Ljava/io/InputStream;)[B
     119: invokevirtual #46                 // Method org/smallmind/ansible/VaultTumbler.decrypt:([B[B)[B
     122: areturn
     123: new           #39                 // class org/smallmind/ansible/VaultCodecException
     126: dup
     127: ldc           #47                 // String Unknown header format(%s)
     129: iconst_1
     130: anewarray     #41                 // class java/lang/Object
     133: dup
     134: iconst_0
     135: aload_2
     136: aastore
     137: invokespecial #42                 // Method org/smallmind/ansible/VaultCodecException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
     140: athrow

  private static void skip0A(java.io.InputStream) throws java.io.IOException, org.smallmind.ansible.VaultCodecException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/io/InputStream.read:()I
       4: bipush        48
       6: if_icmpne     18
       9: aload_0
      10: invokevirtual #7                  // Method java/io/InputStream.read:()I
      13: bipush        97
      15: if_icmpeq     32
      18: new           #39                 // class org/smallmind/ansible/VaultCodecException
      21: dup
      22: ldc           #48                 // String Expected line terminator(0a)
      24: iconst_0
      25: anewarray     #41                 // class java/lang/Object
      28: invokespecial #42                 // Method org/smallmind/ansible/VaultCodecException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      31: athrow
      32: return

  private static byte[] readBytes(java.io.InputStream, int) throws java.io.IOException, org.smallmind.ansible.VaultCodecException;
    Code:
       0: iload_1
       1: iconst_4
       2: imul
       3: istore_2
       4: iconst_0
       5: istore_3
       6: iload_2
       7: newarray       byte
       9: astore        4
      11: aload_0
      12: invokevirtual #7                  // Method java/io/InputStream.read:()I
      15: dup
      16: istore        5
      18: iflt          46
      21: iload         5
      23: bipush        10
      25: if_icmpeq     11
      28: aload         4
      30: iload_3
      31: iinc          3, 1
      34: iload         5
      36: i2b
      37: bastore
      38: iload_3
      39: iload_2
      40: if_icmpne     11
      43: goto          46
      46: iload_3
      47: iload_2
      48: if_icmpge     72
      51: new           #39                 // class org/smallmind/ansible/VaultCodecException
      54: dup
      55: ldc           #49                 // String Unable to read required bytes(%d)
      57: iconst_1
      58: anewarray     #41                 // class java/lang/Object
      61: dup
      62: iconst_0
      63: iload_1
      64: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: aastore
      68: invokespecial #42                 // Method org/smallmind/ansible/VaultCodecException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      71: athrow
      72: aload_0
      73: invokestatic  #51                 // Method skip0A:(Ljava/io/InputStream;)V
      76: aload         4
      78: invokestatic  #52                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexDecode:([B)[B
      81: invokestatic  #52                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexDecode:([B)[B
      84: areturn

  private static byte[] readBytes(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #5                  // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #6                  // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #7                  // Method java/io/InputStream.read:()I
      12: dup
      13: istore_2
      14: iflt          31
      17: iload_2
      18: bipush        10
      20: if_icmpeq     8
      23: aload_1
      24: iload_2
      25: invokevirtual #8                  // Method java/io/ByteArrayOutputStream.write:(I)V
      28: goto          8
      31: aload_1
      32: invokevirtual #11                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      35: invokestatic  #52                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexDecode:([B)[B
      38: invokestatic  #52                 // Method org/smallmind/nutsnbolts/security/HexCodec.hexDecode:([B)[B
      41: astore_3
      42: aload_1
      43: invokevirtual #13                 // Method java/io/ByteArrayOutputStream.close:()V
      46: aload_3
      47: areturn
      48: astore_2
      49: aload_1
      50: invokevirtual #13                 // Method java/io/ByteArrayOutputStream.close:()V
      53: goto          62
      56: astore_3
      57: aload_2
      58: aload_3
      59: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      62: aload_2
      63: athrow
    Exception table:
       from    to  target type
           8    42    48   Class java/lang/Throwable
          49    53    56   Class java/lang/Throwable

  private static java.lang.String readLine(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #5                  // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #6                  // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #7                  // Method java/io/InputStream.read:()I
      12: dup
      13: istore_2
      14: iflt          42
      17: iload_2
      18: bipush        10
      20: if_icmpne     34
      23: aload_1
      24: invokevirtual #53                 // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
      27: astore_3
      28: aload_1
      29: invokevirtual #13                 // Method java/io/ByteArrayOutputStream.close:()V
      32: aload_3
      33: areturn
      34: aload_1
      35: iload_2
      36: invokevirtual #8                  // Method java/io/ByteArrayOutputStream.write:(I)V
      39: goto          8
      42: aload_1
      43: invokevirtual #53                 // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
      46: astore_3
      47: aload_1
      48: invokevirtual #13                 // Method java/io/ByteArrayOutputStream.close:()V
      51: aload_3
      52: areturn
      53: astore_2
      54: aload_1
      55: invokevirtual #13                 // Method java/io/ByteArrayOutputStream.close:()V
      58: goto          67
      61: astore_3
      62: aload_2
      63: aload_3
      64: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      67: aload_2
      68: athrow
    Exception table:
       from    to  target type
           8    28    53   Class java/lang/Throwable
          34    47    53   Class java/lang/Throwable
          54    58    61   Class java/lang/Throwable
}
