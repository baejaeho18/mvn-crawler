Compiled from "WorkSpacesWebMock.scala"
public final class zio.aws.workspacesweb.WorkSpacesWebMock$$anon$2 implements zio.aws.workspacesweb.WorkSpacesWeb {
  private final software.amazon.awssdk.services.workspacesweb.WorkSpacesWebAsyncClient api;

  private final zio.mock.Proxy proxy$1;

  public software.amazon.awssdk.services.workspacesweb.WorkSpacesWebAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #332                // Field api:Lsoftware/amazon/awssdk/services/workspacesweb/WorkSpacesWebAsyncClient;
       4: areturn

  public <R1> zio.aws.workspacesweb.WorkSpacesWeb withAspect(zio.ZIOAspect<scala.runtime.Nothing$, R1, zio.aws.core.AwsError, zio.aws.core.AwsError, scala.runtime.Nothing$, zio.aws.core.aspects.package$Described<?>>, zio.ZEnvironment<R1>);
    Code:
       0: aload_0
       1: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListNetworkSettingsResponse$ReadOnly> listNetworkSettings(zio.aws.workspacesweb.model.ListNetworkSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #351                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListNetworkSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListNetworkSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.CreateIdentityProviderResponse$ReadOnly> createIdentityProvider(zio.aws.workspacesweb.model.CreateIdentityProviderRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #364                // Field zio/aws/workspacesweb/WorkSpacesWebMock$CreateIdentityProvider$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$CreateIdentityProvider$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.CreateBrowserSettingsResponse$ReadOnly> createBrowserSettings(zio.aws.workspacesweb.model.CreateBrowserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #371                // Field zio/aws/workspacesweb/WorkSpacesWebMock$CreateBrowserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$CreateBrowserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.CreatePortalResponse$ReadOnly> createPortal(zio.aws.workspacesweb.model.CreatePortalRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #378                // Field zio/aws/workspacesweb/WorkSpacesWebMock$CreatePortal$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$CreatePortal$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListPortalsResponse$ReadOnly> listPortals(zio.aws.workspacesweb.model.ListPortalsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #385                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListPortals$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListPortals$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.AssociateTrustStoreResponse$ReadOnly> associateTrustStore(zio.aws.workspacesweb.model.AssociateTrustStoreRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #392                // Field zio/aws/workspacesweb/WorkSpacesWebMock$AssociateTrustStore$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$AssociateTrustStore$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListTrustStoresResponse$ReadOnly> listTrustStores(zio.aws.workspacesweb.model.ListTrustStoresRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #399                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListTrustStores$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListTrustStores$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DeletePortalResponse$ReadOnly> deletePortal(zio.aws.workspacesweb.model.DeletePortalRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #406                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DeletePortal$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DeletePortal$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetNetworkSettingsResponse$ReadOnly> getNetworkSettings(zio.aws.workspacesweb.model.GetNetworkSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #413                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetNetworkSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetNetworkSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DisassociateUserSettingsResponse$ReadOnly> disassociateUserSettings(zio.aws.workspacesweb.model.DisassociateUserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #420                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DisassociateUserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DisassociateUserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetTrustStoreCertificateResponse$ReadOnly> getTrustStoreCertificate(zio.aws.workspacesweb.model.GetTrustStoreCertificateRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #427                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetTrustStoreCertificate$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetTrustStoreCertificate$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.CreateTrustStoreResponse$ReadOnly> createTrustStore(zio.aws.workspacesweb.model.CreateTrustStoreRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #434                // Field zio/aws/workspacesweb/WorkSpacesWebMock$CreateTrustStore$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$CreateTrustStore$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetTrustStoreResponse$ReadOnly> getTrustStore(zio.aws.workspacesweb.model.GetTrustStoreRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #441                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetTrustStore$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetTrustStore$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DeleteBrowserSettingsResponse$ReadOnly> deleteBrowserSettings(zio.aws.workspacesweb.model.DeleteBrowserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #448                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DeleteBrowserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DeleteBrowserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.CreateNetworkSettingsResponse$ReadOnly> createNetworkSettings(zio.aws.workspacesweb.model.CreateNetworkSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #455                // Field zio/aws/workspacesweb/WorkSpacesWebMock$CreateNetworkSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$CreateNetworkSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DeleteIdentityProviderResponse$ReadOnly> deleteIdentityProvider(zio.aws.workspacesweb.model.DeleteIdentityProviderRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #462                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DeleteIdentityProvider$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DeleteIdentityProvider$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DisassociateTrustStoreResponse$ReadOnly> disassociateTrustStore(zio.aws.workspacesweb.model.DisassociateTrustStoreRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #469                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DisassociateTrustStore$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DisassociateTrustStore$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.UpdateTrustStoreResponse$ReadOnly> updateTrustStore(zio.aws.workspacesweb.model.UpdateTrustStoreRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #476                // Field zio/aws/workspacesweb/WorkSpacesWebMock$UpdateTrustStore$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$UpdateTrustStore$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetPortalServiceProviderMetadataResponse$ReadOnly> getPortalServiceProviderMetadata(zio.aws.workspacesweb.model.GetPortalServiceProviderMetadataRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #483                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetPortalServiceProviderMetadata$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetPortalServiceProviderMetadata$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetIdentityProviderResponse$ReadOnly> getIdentityProvider(zio.aws.workspacesweb.model.GetIdentityProviderRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #490                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetIdentityProvider$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetIdentityProvider$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListBrowserSettingsResponse$ReadOnly> listBrowserSettings(zio.aws.workspacesweb.model.ListBrowserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #497                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListBrowserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListBrowserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.UpdateIdentityProviderResponse$ReadOnly> updateIdentityProvider(zio.aws.workspacesweb.model.UpdateIdentityProviderRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #504                // Field zio/aws/workspacesweb/WorkSpacesWebMock$UpdateIdentityProvider$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$UpdateIdentityProvider$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetUserSettingsResponse$ReadOnly> getUserSettings(zio.aws.workspacesweb.model.GetUserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #511                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetUserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetUserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListTrustStoreCertificatesResponse$ReadOnly> listTrustStoreCertificates(zio.aws.workspacesweb.model.ListTrustStoreCertificatesRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #518                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListTrustStoreCertificates$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListTrustStoreCertificates$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DisassociateNetworkSettingsResponse$ReadOnly> disassociateNetworkSettings(zio.aws.workspacesweb.model.DisassociateNetworkSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #525                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DisassociateNetworkSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DisassociateNetworkSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListIdentityProvidersResponse$ReadOnly> listIdentityProviders(zio.aws.workspacesweb.model.ListIdentityProvidersRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #532                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListIdentityProviders$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListIdentityProviders$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.UpdateUserSettingsResponse$ReadOnly> updateUserSettings(zio.aws.workspacesweb.model.UpdateUserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #539                // Field zio/aws/workspacesweb/WorkSpacesWebMock$UpdateUserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$UpdateUserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.UpdateBrowserSettingsResponse$ReadOnly> updateBrowserSettings(zio.aws.workspacesweb.model.UpdateBrowserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #546                // Field zio/aws/workspacesweb/WorkSpacesWebMock$UpdateBrowserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$UpdateBrowserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListUserSettingsResponse$ReadOnly> listUserSettings(zio.aws.workspacesweb.model.ListUserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #553                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListUserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListUserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.AssociateNetworkSettingsResponse$ReadOnly> associateNetworkSettings(zio.aws.workspacesweb.model.AssociateNetworkSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #560                // Field zio/aws/workspacesweb/WorkSpacesWebMock$AssociateNetworkSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$AssociateNetworkSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.CreateUserSettingsResponse$ReadOnly> createUserSettings(zio.aws.workspacesweb.model.CreateUserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #567                // Field zio/aws/workspacesweb/WorkSpacesWebMock$CreateUserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$CreateUserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.UntagResourceResponse$ReadOnly> untagResource(zio.aws.workspacesweb.model.UntagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #574                // Field zio/aws/workspacesweb/WorkSpacesWebMock$UntagResource$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$UntagResource$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.AssociateBrowserSettingsResponse$ReadOnly> associateBrowserSettings(zio.aws.workspacesweb.model.AssociateBrowserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #581                // Field zio/aws/workspacesweb/WorkSpacesWebMock$AssociateBrowserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$AssociateBrowserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DeleteTrustStoreResponse$ReadOnly> deleteTrustStore(zio.aws.workspacesweb.model.DeleteTrustStoreRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #588                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DeleteTrustStore$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DeleteTrustStore$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DeleteUserSettingsResponse$ReadOnly> deleteUserSettings(zio.aws.workspacesweb.model.DeleteUserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #595                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DeleteUserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DeleteUserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.UpdatePortalResponse$ReadOnly> updatePortal(zio.aws.workspacesweb.model.UpdatePortalRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #602                // Field zio/aws/workspacesweb/WorkSpacesWebMock$UpdatePortal$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$UpdatePortal$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DeleteNetworkSettingsResponse$ReadOnly> deleteNetworkSettings(zio.aws.workspacesweb.model.DeleteNetworkSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #609                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DeleteNetworkSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DeleteNetworkSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.ListTagsForResourceResponse$ReadOnly> listTagsForResource(zio.aws.workspacesweb.model.ListTagsForResourceRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #616                // Field zio/aws/workspacesweb/WorkSpacesWebMock$ListTagsForResource$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$ListTagsForResource$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetPortalResponse$ReadOnly> getPortal(zio.aws.workspacesweb.model.GetPortalRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #623                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetPortal$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetPortal$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.TagResourceResponse$ReadOnly> tagResource(zio.aws.workspacesweb.model.TagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #630                // Field zio/aws/workspacesweb/WorkSpacesWebMock$TagResource$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$TagResource$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.DisassociateBrowserSettingsResponse$ReadOnly> disassociateBrowserSettings(zio.aws.workspacesweb.model.DisassociateBrowserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #637                // Field zio/aws/workspacesweb/WorkSpacesWebMock$DisassociateBrowserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$DisassociateBrowserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.UpdateNetworkSettingsResponse$ReadOnly> updateNetworkSettings(zio.aws.workspacesweb.model.UpdateNetworkSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #644                // Field zio/aws/workspacesweb/WorkSpacesWebMock$UpdateNetworkSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$UpdateNetworkSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.GetBrowserSettingsResponse$ReadOnly> getBrowserSettings(zio.aws.workspacesweb.model.GetBrowserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #651                // Field zio/aws/workspacesweb/WorkSpacesWebMock$GetBrowserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$GetBrowserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspacesweb.model.AssociateUserSettingsResponse$ReadOnly> associateUserSettings(zio.aws.workspacesweb.model.AssociateUserSettingsRequest);
    Code:
       0: aload_0
       1: getfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #658                // Field zio/aws/workspacesweb/WorkSpacesWebMock$AssociateUserSettings$.MODULE$:Lzio/aws/workspacesweb/WorkSpacesWebMock$AssociateUserSettings$;
       7: aload_1
       8: invokevirtual #357                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #662                // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/workspacesweb/WorkSpacesWeb;
       6: areturn

  public zio.aws.workspacesweb.WorkSpacesWebMock$$anon$2(zio.mock.Proxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #347                // Field proxy$1:Lzio/mock/Proxy;
       5: aload_0
       6: invokespecial #667                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #332                // Field api:Lsoftware/amazon/awssdk/services/workspacesweb/WorkSpacesWebAsyncClient;
      14: return
}
