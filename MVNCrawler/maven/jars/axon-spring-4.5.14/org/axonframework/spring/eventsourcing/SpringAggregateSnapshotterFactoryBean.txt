Compiled from "SpringAggregateSnapshotterFactoryBean.java"
public class org.axonframework.spring.eventsourcing.SpringAggregateSnapshotterFactoryBean implements org.springframework.beans.factory.FactoryBean<org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter>, org.springframework.context.ApplicationContextAware {
  private java.util.concurrent.Executor executor;

  private org.springframework.transaction.PlatformTransactionManager transactionManager;

  private org.springframework.context.ApplicationContext applicationContext;

  private org.springframework.transaction.TransactionDefinition transactionDefinition;

  private org.axonframework.eventsourcing.eventstore.EventStore eventStore;

  private org.axonframework.modelling.command.RepositoryProvider repositoryProvider;

  private org.axonframework.messaging.annotation.ParameterResolverFactory parameterResolverFactory;

  private org.axonframework.messaging.annotation.HandlerDefinition handlerDefinition;

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotterFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/axonframework/common/DirectExecutor.INSTANCE:Lorg/axonframework/common/DirectExecutor;
       8: putfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
      11: aload_0
      12: new           #4                  // class org/springframework/transaction/support/DefaultTransactionDefinition
      15: dup
      16: invokespecial #5                  // Method org/springframework/transaction/support/DefaultTransactionDefinition."<init>":()V
      19: putfield      #6                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      22: return

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter getObject();
    Code:
       0: aload_0
       1: getfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       4: ifnonnull     52
       7: aload_0
       8: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      11: ldc           #9                  // class org/springframework/transaction/PlatformTransactionManager
      13: invokeinterface #10,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBeansOfType:(Ljava/lang/Class;)Ljava/util/Map;
      18: astore_1
      19: aload_1
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Map.size:()I
      25: iconst_1
      26: if_icmpne     52
      29: aload_0
      30: aload_1
      31: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      36: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      41: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #9                  // class org/springframework/transaction/PlatformTransactionManager
      49: putfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      52: aload_0
      53: getfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
      56: ifnonnull     77
      59: aload_0
      60: aload_0
      61: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      64: ldc           #16                 // class org/axonframework/eventsourcing/eventstore/EventStore
      66: invokeinterface #17,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      71: checkcast     #16                 // class org/axonframework/eventsourcing/eventstore/EventStore
      74: putfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
      77: aload_0
      78: getfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
      81: ifnonnull     112
      84: aload_0
      85: aload_0
      86: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      89: ldc           #19                 // class org/axonframework/config/Configuration
      91: invokeinterface #17,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      96: checkcast     #19                 // class org/axonframework/config/Configuration
      99: dup
     100: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     103: pop
     104: invokedynamic #21,  0             // InvokeDynamic #0:repositoryFor:(Lorg/axonframework/config/Configuration;)Lorg/axonframework/modelling/command/RepositoryProvider;
     109: putfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
     112: aload_0
     113: getfield      #22                 // Field parameterResolverFactory:Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     116: ifnonnull     168
     119: aload_0
     120: iconst_3
     121: anewarray     #23                 // class org/axonframework/messaging/annotation/ParameterResolverFactory
     124: dup
     125: iconst_0
     126: aload_0
     127: invokevirtual #24                 // Method getObjectType:()Ljava/lang/Class;
     130: invokestatic  #25                 // Method org/axonframework/messaging/annotation/ClasspathParameterResolverFactory.forClass:(Ljava/lang/Class;)Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     133: aastore
     134: dup
     135: iconst_1
     136: new           #26                 // class org/axonframework/spring/config/annotation/SpringBeanDependencyResolverFactory
     139: dup
     140: aload_0
     141: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     144: invokespecial #27                 // Method org/axonframework/spring/config/annotation/SpringBeanDependencyResolverFactory."<init>":(Lorg/springframework/context/ApplicationContext;)V
     147: aastore
     148: dup
     149: iconst_2
     150: new           #28                 // class org/axonframework/spring/config/annotation/SpringBeanParameterResolverFactory
     153: dup
     154: aload_0
     155: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     158: invokespecial #29                 // Method org/axonframework/spring/config/annotation/SpringBeanParameterResolverFactory."<init>":(Lorg/springframework/context/ApplicationContext;)V
     161: aastore
     162: invokestatic  #30                 // Method org/axonframework/messaging/annotation/MultiParameterResolverFactory.ordered:([Lorg/axonframework/messaging/annotation/ParameterResolverFactory;)Lorg/axonframework/messaging/annotation/MultiParameterResolverFactory;
     165: putfield      #22                 // Field parameterResolverFactory:Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     168: aload_0
     169: getfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
     172: ifnonnull     221
     175: new           #32                 // class org/axonframework/spring/config/annotation/SpringHandlerDefinitionBean
     178: dup
     179: aload_0
     180: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     183: invokespecial #33                 // Method org/axonframework/spring/config/annotation/SpringHandlerDefinitionBean."<init>":(Lorg/springframework/context/ApplicationContext;)V
     186: invokevirtual #34                 // Method org/axonframework/spring/config/annotation/SpringHandlerDefinitionBean.getObject:()Lorg/axonframework/messaging/annotation/HandlerDefinition;
     189: astore_1
     190: new           #35                 // class org/axonframework/spring/config/annotation/SpringHandlerEnhancerDefinitionBean
     193: dup
     194: aload_0
     195: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     198: invokespecial #36                 // Method org/axonframework/spring/config/annotation/SpringHandlerEnhancerDefinitionBean."<init>":(Lorg/springframework/context/ApplicationContext;)V
     201: invokevirtual #37                 // Method org/axonframework/spring/config/annotation/SpringHandlerEnhancerDefinitionBean.getObject:()Lorg/axonframework/messaging/annotation/HandlerEnhancerDefinition;
     204: astore_2
     205: aload_0
     206: aload_2
     207: iconst_1
     208: anewarray     #38                 // class org/axonframework/messaging/annotation/HandlerDefinition
     211: dup
     212: iconst_0
     213: aload_1
     214: aastore
     215: invokestatic  #39                 // Method org/axonframework/messaging/annotation/MultiHandlerDefinition.ordered:(Lorg/axonframework/messaging/annotation/HandlerEnhancerDefinition;[Lorg/axonframework/messaging/annotation/HandlerDefinition;)Lorg/axonframework/messaging/annotation/MultiHandlerDefinition;
     218: putfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
     221: aload_0
     222: getfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
     225: ifnonnull     234
     228: getstatic     #40                 // Field org/axonframework/common/transaction/NoTransactionManager.INSTANCE:Lorg/axonframework/common/transaction/NoTransactionManager;
     231: goto          249
     234: new           #41                 // class org/axonframework/spring/messaging/unitofwork/SpringTransactionManager
     237: dup
     238: aload_0
     239: getfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
     242: aload_0
     243: getfield      #6                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
     246: invokespecial #42                 // Method org/axonframework/spring/messaging/unitofwork/SpringTransactionManager."<init>":(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/TransactionDefinition;)V
     249: astore_1
     250: invokestatic  #43                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter.builder:()Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     253: aload_0
     254: getfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
     257: invokevirtual #44                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.eventStore:(Lorg/axonframework/eventsourcing/eventstore/EventStore;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     260: aload_0
     261: getfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
     264: invokevirtual #45                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.executor:(Ljava/util/concurrent/Executor;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     267: aload_1
     268: invokevirtual #46                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.transactionManager:(Lorg/axonframework/common/transaction/TransactionManager;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     271: aload_0
     272: getfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
     275: invokevirtual #47                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.repositoryProvider:(Lorg/axonframework/modelling/command/RepositoryProvider;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     278: aload_0
     279: getfield      #22                 // Field parameterResolverFactory:Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     282: invokevirtual #48                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.parameterResolverFactory:(Lorg/axonframework/messaging/annotation/ParameterResolverFactory;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     285: aload_0
     286: getfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
     289: invokevirtual #49                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.handlerDefinition:(Lorg/axonframework/messaging/annotation/HandlerDefinition;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     292: invokevirtual #50                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.build:()Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter;
     295: astore_2
     296: aload_2
     297: aload_0
     298: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     301: invokevirtual #51                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter.setApplicationContext:(Lorg/springframework/context/ApplicationContext;)V
     304: aload_2
     305: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: ldc           #52                 // class org/axonframework/eventsourcing/AggregateSnapshotter
       2: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void setTransactionManager(org.springframework.transaction.PlatformTransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       5: return

  public void setTransactionDefinition(org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
       5: return

  public void setEventStore(org.axonframework.eventsourcing.eventstore.EventStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
       5: return

  public void setRepositoryProvider(org.axonframework.modelling.command.RepositoryProvider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
       5: return

  public void setHandlerDefinition(org.axonframework.messaging.annotation.HandlerDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
       5: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public void setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
       5: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getObject:()Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter;
       4: areturn
}
