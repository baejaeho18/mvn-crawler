Compiled from "CheckableHandlerHolder.kt"
public final class dev.inmo.micro_utils.fsm.common.CheckableHandlerHolderKt$holder$1<I extends dev.inmo.micro_utils.fsm.common.State, O extends dev.inmo.micro_utils.fsm.common.State> implements dev.inmo.micro_utils.fsm.common.StatesHandler, kotlin.coroutines.jvm.internal.SuspendFunction {
  final dev.inmo.micro_utils.fsm.common.StatesHandler<I, O> $this_holder;

  public dev.inmo.micro_utils.fsm.common.CheckableHandlerHolderKt$holder$1(dev.inmo.micro_utils.fsm.common.StatesHandler<I, O>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field $this_holder:Ldev/inmo/micro_utils/fsm/common/StatesHandler;
       5: aload_0
       6: invokespecial #19                 // Method java/lang/Object."<init>":()V
       9: return

  public final java.lang.Object handleState(dev.inmo.micro_utils.fsm.common.StatesMachine<? super O>, O, kotlin.coroutines.Continuation<? super O>);
    Code:
       0: aload_3
       1: instanceof    #29                 // class dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1
       4: ifeq          39
       7: aload_3
       8: checkcast     #29                 // class dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1
      11: astore        7
      13: aload         7
      15: getfield      #33                 // Field dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1.label:I
      18: ldc           #34                 // int -2147483648
      20: iand
      21: ifeq          39
      24: aload         7
      26: dup
      27: getfield      #33                 // Field dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1.label:I
      30: ldc           #34                 // int -2147483648
      32: isub
      33: putfield      #33                 // Field dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1.label:I
      36: goto          50
      39: new           #29                 // class dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1
      42: dup
      43: aload_0
      44: aload_3
      45: invokespecial #37                 // Method dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1."<init>":(Ldev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1;Lkotlin/coroutines/Continuation;)V
      48: astore        7
      50: aload         7
      52: getfield      #41                 // Field dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1.result:Ljava/lang/Object;
      55: astore        6
      57: invokestatic  #47                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      60: astore        8
      62: aload         7
      64: getfield      #33                 // Field dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1.label:I
      67: tableswitch   { // 0 to 1
                     0: 88
                     1: 128
               default: 143
          }
      88: aload         6
      90: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #16                 // Field $this_holder:Ldev/inmo/micro_utils/fsm/common/StatesHandler;
      97: astore        4
      99: iconst_0
     100: istore        5
     102: aload         4
     104: aload_1
     105: aload_2
     106: aload         7
     108: aload         7
     110: iconst_1
     111: putfield      #33                 // Field dev/inmo/micro_utils/fsm/common/CheckableHandlerHolderKt$holder$1$handleState$1.label:I
     114: invokeinterface #55,  4           // InterfaceMethod dev/inmo/micro_utils/fsm/common/StatesHandler.handleState:(Ldev/inmo/micro_utils/fsm/common/StatesMachine;Ldev/inmo/micro_utils/fsm/common/State;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     119: dup
     120: aload         8
     122: if_acmpne     138
     125: aload         8
     127: areturn
     128: iconst_0
     129: istore        5
     131: aload         6
     133: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     136: aload         6
     138: checkcast     #57                 // class dev/inmo/micro_utils/fsm/common/State
     141: nop
     142: areturn
     143: new           #59                 // class java/lang/IllegalStateException
     146: dup
     147: ldc           #61                 // String call to \'resume\' before \'invoke\' with coroutine
     149: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     152: athrow
}
