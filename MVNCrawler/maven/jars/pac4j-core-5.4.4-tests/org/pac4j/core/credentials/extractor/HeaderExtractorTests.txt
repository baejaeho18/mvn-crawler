Compiled from "HeaderExtractorTests.java"
public final class org.pac4j.core.credentials.extractor.HeaderExtractorTests implements org.pac4j.core.util.TestsConstants {
  private static final java.lang.String GOOD_HEADER;

  private static final java.lang.String BAD_HEADER;

  private static final java.lang.String GOOD_PREFIX;

  private static final java.lang.String BAD_PREFIX;

  private static final org.pac4j.core.credentials.extractor.HeaderExtractor extractor;

  public org.pac4j.core.credentials.extractor.HeaderExtractorTests();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void testRetrieveHeaderOk();
    Code:
       0: invokestatic  #2                  // Method org/pac4j/core/context/MockWebContext.create:()Lorg/pac4j/core/context/MockWebContext;
       3: ldc           #4                  // String goodHeader
       5: ldc           #6                  // String goodPrefix value
       7: invokevirtual #7                  // Method org/pac4j/core/context/MockWebContext.addRequestHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/pac4j/core/context/MockWebContext;
      10: astore_1
      11: getstatic     #8                  // Field extractor:Lorg/pac4j/core/credentials/extractor/HeaderExtractor;
      14: aload_1
      15: aconst_null
      16: invokevirtual #9                  // Method org/pac4j/core/credentials/extractor/HeaderExtractor.extract:(Lorg/pac4j/core/context/WebContext;Lorg/pac4j/core/context/session/SessionStore;)Ljava/util/Optional;
      19: invokevirtual #10                 // Method java/util/Optional.get:()Ljava/lang/Object;
      22: checkcast     #11                 // class org/pac4j/core/credentials/TokenCredentials
      25: astore_2
      26: ldc           #12                 // String value
      28: aload_2
      29: invokevirtual #13                 // Method org/pac4j/core/credentials/TokenCredentials.getToken:()Ljava/lang/String;
      32: invokestatic  #14                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      35: return

  public void testBadHeader();
    Code:
       0: invokestatic  #2                  // Method org/pac4j/core/context/MockWebContext.create:()Lorg/pac4j/core/context/MockWebContext;
       3: ldc           #15                 // String badHeader
       5: ldc           #6                  // String goodPrefix value
       7: invokevirtual #7                  // Method org/pac4j/core/context/MockWebContext.addRequestHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/pac4j/core/context/MockWebContext;
      10: astore_1
      11: getstatic     #8                  // Field extractor:Lorg/pac4j/core/credentials/extractor/HeaderExtractor;
      14: aload_1
      15: aconst_null
      16: invokevirtual #9                  // Method org/pac4j/core/credentials/extractor/HeaderExtractor.extract:(Lorg/pac4j/core/context/WebContext;Lorg/pac4j/core/context/session/SessionStore;)Ljava/util/Optional;
      19: astore_2
      20: aload_2
      21: invokevirtual #16                 // Method java/util/Optional.isPresent:()Z
      24: invokestatic  #17                 // Method org/junit/Assert.assertFalse:(Z)V
      27: return

  public void testBadPrefix();
    Code:
       0: invokestatic  #2                  // Method org/pac4j/core/context/MockWebContext.create:()Lorg/pac4j/core/context/MockWebContext;
       3: ldc           #4                  // String goodHeader
       5: ldc           #18                 // String badPrefix value
       7: invokevirtual #7                  // Method org/pac4j/core/context/MockWebContext.addRequestHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/pac4j/core/context/MockWebContext;
      10: astore_1
      11: aload_1
      12: invokedynamic #19,  0             // InvokeDynamic #0:execute:(Lorg/pac4j/core/context/MockWebContext;)Lorg/pac4j/core/util/Executable;
      17: ldc           #20                 // class org/pac4j/core/exception/CredentialsException
      19: ldc           #21                 // String Wrong prefix for header: goodHeader
      21: invokestatic  #22                 // Method org/pac4j/core/util/TestsHelper.expectException:(Lorg/pac4j/core/util/Executable;Ljava/lang/Class;Ljava/lang/String;)V
      24: return

  private static void lambda$testBadPrefix$0(org.pac4j.core.context.MockWebContext) throws java.lang.Exception;
    Code:
       0: getstatic     #8                  // Field extractor:Lorg/pac4j/core/credentials/extractor/HeaderExtractor;
       3: aload_0
       4: aconst_null
       5: invokevirtual #9                  // Method org/pac4j/core/credentials/extractor/HeaderExtractor.extract:(Lorg/pac4j/core/context/WebContext;Lorg/pac4j/core/context/session/SessionStore;)Ljava/util/Optional;
       8: pop
       9: return

  static {};
    Code:
       0: new           #23                 // class org/pac4j/core/credentials/extractor/HeaderExtractor
       3: dup
       4: ldc           #4                  // String goodHeader
       6: ldc           #24                 // String goodPrefix
       8: invokespecial #25                 // Method org/pac4j/core/credentials/extractor/HeaderExtractor."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      11: putstatic     #8                  // Field extractor:Lorg/pac4j/core/credentials/extractor/HeaderExtractor;
      14: return
}
