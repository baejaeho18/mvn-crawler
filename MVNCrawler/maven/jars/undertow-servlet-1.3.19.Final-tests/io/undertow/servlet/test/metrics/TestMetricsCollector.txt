Compiled from "TestMetricsCollector.java"
public class io.undertow.servlet.test.metrics.TestMetricsCollector implements io.undertow.servlet.api.MetricsCollector {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.undertow.server.handlers.MetricsHandler> metrics;

  public io.undertow.servlet.test.metrics.TestMetricsCollector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public void registerMetric(java.lang.String, io.undertow.server.handlers.MetricsHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public io.undertow.server.handlers.MetricsHandler$MetricResult getMetrics(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class io/undertow/server/handlers/MetricsHandler
      13: invokevirtual #8                  // Method io/undertow/server/handlers/MetricsHandler.getMetrics:()Lio/undertow/server/handlers/MetricsHandler$MetricResult;
      16: areturn
}
