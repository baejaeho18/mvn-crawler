Compiled from "EarlyCloseClientServlet.java"
public class io.undertow.servlet.test.streams.EarlyCloseClientServlet extends javax.servlet.http.HttpServlet {
  private static volatile boolean exceptionThrown;

  private static volatile boolean completedNormally;

  private static volatile java.util.concurrent.CountDownLatch latch;

  public io.undertow.servlet.test.streams.EarlyCloseClientServlet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/servlet/http/HttpServlet."<init>":()V
       4: return

  protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: new           #2                  // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #3                  // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_3
       8: aload_1
       9: invokeinterface #4,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getInputStream:()Ljavax/servlet/ServletInputStream;
      14: astore        4
      16: sipush        1024
      19: newarray       byte
      21: astore        5
      23: aload         4
      25: aload         5
      27: invokevirtual #5                  // Method javax/servlet/ServletInputStream.read:([B)I
      30: dup
      31: istore        6
      33: iconst_m1
      34: if_icmpeq     49
      37: aload_3
      38: aload         5
      40: iconst_0
      41: iload         6
      43: invokevirtual #6                  // Method java/io/ByteArrayOutputStream.write:([BII)V
      46: goto          23
      49: aload_2
      50: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      55: aload_3
      56: invokevirtual #8                  // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      59: invokevirtual #9                  // Method javax/servlet/ServletOutputStream.write:([B)V
      62: iconst_1
      63: putstatic     #10                 // Field completedNormally:Z
      66: getstatic     #11                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      69: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      72: goto          100
      75: astore_3
      76: iconst_1
      77: putstatic     #14                 // Field exceptionThrown:Z
      80: getstatic     #11                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      83: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      86: goto          100
      89: astore        7
      91: getstatic     #11                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      94: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      97: aload         7
      99: athrow
     100: return
    Exception table:
       from    to  target type
           0    66    75   Class java/io/IOException
           0    66    89   any
          75    80    89   any
          89    91    89   any

  public static void reset();
    Code:
       0: new           #15                 // class java/util/concurrent/CountDownLatch
       3: dup
       4: iconst_1
       5: invokespecial #16                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
       8: putstatic     #11                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      11: iconst_0
      12: putstatic     #10                 // Field completedNormally:Z
      15: iconst_0
      16: putstatic     #14                 // Field exceptionThrown:Z
      19: return

  public static boolean isExceptionThrown();
    Code:
       0: getstatic     #14                 // Field exceptionThrown:Z
       3: ireturn

  public static boolean isCompletedNormally();
    Code:
       0: getstatic     #10                 // Field completedNormally:Z
       3: ireturn

  public static java.util.concurrent.CountDownLatch getLatch();
    Code:
       0: getstatic     #11                 // Field latch:Ljava/util/concurrent/CountDownLatch;
       3: areturn

  static {};
    Code:
       0: new           #15                 // class java/util/concurrent/CountDownLatch
       3: dup
       4: iconst_1
       5: invokespecial #16                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
       8: putstatic     #11                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      11: return
}
