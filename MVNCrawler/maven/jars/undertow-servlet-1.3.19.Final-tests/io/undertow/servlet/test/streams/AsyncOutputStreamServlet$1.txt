Compiled from "AsyncOutputStreamServlet.java"
class io.undertow.servlet.test.streams.AsyncOutputStreamServlet$1 implements javax.servlet.WriteListener {
  final javax.servlet.ServletOutputStream val$outputStream;

  final java.util.concurrent.atomic.AtomicInteger val$count;

  final int val$reps;

  final boolean val$flush;

  final boolean val$close;

  final javax.servlet.AsyncContext val$context;

  final io.undertow.servlet.test.streams.AsyncOutputStreamServlet this$0;

  io.undertow.servlet.test.streams.AsyncOutputStreamServlet$1(io.undertow.servlet.test.streams.AsyncOutputStreamServlet, javax.servlet.ServletOutputStream, java.util.concurrent.atomic.AtomicInteger, int, boolean, boolean, javax.servlet.AsyncContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/servlet/test/streams/AsyncOutputStreamServlet;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$outputStream:Ljavax/servlet/ServletOutputStream;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$count:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field val$reps:I
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field val$flush:Z
      27: aload_0
      28: iload         6
      30: putfield      #6                  // Field val$close:Z
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field val$context:Ljavax/servlet/AsyncContext;
      39: aload_0
      40: invokespecial #8                  // Method java/lang/Object."<init>":()V
      43: return

  public synchronized void onWritePossible() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$outputStream:Ljavax/servlet/ServletOutputStream;
       4: invokevirtual #9                  // Method javax/servlet/ServletOutputStream.isReady:()Z
       7: ifeq          48
      10: aload_0
      11: getfield      #3                  // Field val$count:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: aload_0
      18: getfield      #4                  // Field val$reps:I
      21: if_icmpge     48
      24: aload_0
      25: getfield      #3                  // Field val$count:Ljava/util/concurrent/atomic/AtomicInteger;
      28: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      31: pop
      32: aload_0
      33: getfield      #2                  // Field val$outputStream:Ljavax/servlet/ServletOutputStream;
      36: getstatic     #12                 // Field io/undertow/servlet/test/streams/ServletOutputStreamTestCase.message:Ljava/lang/String;
      39: invokevirtual #13                 // Method java/lang/String.getBytes:()[B
      42: invokevirtual #14                 // Method javax/servlet/ServletOutputStream.write:([B)V
      45: goto          0
      48: aload_0
      49: getfield      #3                  // Field val$count:Ljava/util/concurrent/atomic/AtomicInteger;
      52: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      55: aload_0
      56: getfield      #4                  // Field val$reps:I
      59: if_icmpne     99
      62: aload_0
      63: getfield      #5                  // Field val$flush:Z
      66: ifeq          76
      69: aload_0
      70: getfield      #2                  // Field val$outputStream:Ljavax/servlet/ServletOutputStream;
      73: invokevirtual #15                 // Method javax/servlet/ServletOutputStream.flush:()V
      76: aload_0
      77: getfield      #6                  // Field val$close:Z
      80: ifeq          90
      83: aload_0
      84: getfield      #2                  // Field val$outputStream:Ljavax/servlet/ServletOutputStream;
      87: invokevirtual #16                 // Method javax/servlet/ServletOutputStream.close:()V
      90: aload_0
      91: getfield      #7                  // Field val$context:Ljavax/servlet/AsyncContext;
      94: invokeinterface #17,  1           // InterfaceMethod javax/servlet/AsyncContext.complete:()V
      99: return

  public void onError(java.lang.Throwable);
    Code:
       0: return
}
