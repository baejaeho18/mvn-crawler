Compiled from "LZ4BlockInputStream.java"
public final class net.jpountz.lz4.LZ4BlockInputStream extends java.io.FilterInputStream {
  private final net.jpountz.lz4.LZ4FastDecompressor decompressor;

  private final java.util.zip.Checksum checksum;

  private byte[] buffer;

  private byte[] compressedBuffer;

  private int originalLen;

  private int o;

  private boolean finished;

  static final boolean $assertionsDisabled;

  public net.jpountz.lz4.LZ4BlockInputStream(java.io.InputStream, net.jpountz.lz4.LZ4FastDecompressor, java.util.zip.Checksum);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field decompressor:Lnet/jpountz/lz4/LZ4FastDecompressor;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field checksum:Ljava/util/zip/Checksum;
      15: aload_0
      16: iconst_0
      17: newarray       byte
      19: putfield      #4                  // Field buffer:[B
      22: aload_0
      23: getstatic     #5                  // Field net/jpountz/lz4/LZ4BlockOutputStream.HEADER_LENGTH:I
      26: newarray       byte
      28: putfield      #6                  // Field compressedBuffer:[B
      31: aload_0
      32: aload_0
      33: iconst_0
      34: dup_x1
      35: putfield      #7                  // Field originalLen:I
      38: putfield      #8                  // Field o:I
      41: aload_0
      42: iconst_0
      43: putfield      #9                  // Field finished:Z
      46: return

  public net.jpountz.lz4.LZ4BlockInputStream(java.io.InputStream, net.jpountz.lz4.LZ4FastDecompressor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #10                 // Method net/jpountz/xxhash/XXHashFactory.fastestInstance:()Lnet/jpountz/xxhash/XXHashFactory;
       6: ldc           #11                 // int -1756908916
       8: invokevirtual #12                 // Method net/jpountz/xxhash/XXHashFactory.newStreamingHash32:(I)Lnet/jpountz/xxhash/StreamingXXHash32;
      11: invokevirtual #13                 // Method net/jpountz/xxhash/StreamingXXHash32.asChecksum:()Ljava/util/zip/Checksum;
      14: invokespecial #14                 // Method "<init>":(Ljava/io/InputStream;Lnet/jpountz/lz4/LZ4FastDecompressor;Ljava/util/zip/Checksum;)V
      17: return

  public net.jpountz.lz4.LZ4BlockInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method net/jpountz/lz4/LZ4Factory.fastestInstance:()Lnet/jpountz/lz4/LZ4Factory;
       5: invokevirtual #16                 // Method net/jpountz/lz4/LZ4Factory.fastDecompressor:()Lnet/jpountz/lz4/LZ4FastDecompressor;
       8: invokespecial #17                 // Method "<init>":(Ljava/io/InputStream;Lnet/jpountz/lz4/LZ4FastDecompressor;)V
      11: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field originalLen:I
       4: aload_0
       5: getfield      #8                  // Field o:I
       8: isub
       9: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field finished:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #8                  // Field o:I
      13: aload_0
      14: getfield      #7                  // Field originalLen:I
      17: if_icmpne     24
      20: aload_0
      21: invokespecial #18                 // Method refill:()V
      24: aload_0
      25: getfield      #9                  // Field finished:Z
      28: ifeq          33
      31: iconst_m1
      32: ireturn
      33: aload_0
      34: getfield      #4                  // Field buffer:[B
      37: aload_0
      38: dup
      39: getfield      #8                  // Field o:I
      42: dup_x1
      43: iconst_1
      44: iadd
      45: putfield      #8                  // Field o:I
      48: baload
      49: sipush        255
      52: iand
      53: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #19                 // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
       6: aload_0
       7: getfield      #9                  // Field finished:Z
      10: ifeq          15
      13: iconst_m1
      14: ireturn
      15: aload_0
      16: getfield      #8                  // Field o:I
      19: aload_0
      20: getfield      #7                  // Field originalLen:I
      23: if_icmpne     30
      26: aload_0
      27: invokespecial #18                 // Method refill:()V
      30: aload_0
      31: getfield      #9                  // Field finished:Z
      34: ifeq          39
      37: iconst_m1
      38: ireturn
      39: iload_3
      40: aload_0
      41: getfield      #7                  // Field originalLen:I
      44: aload_0
      45: getfield      #8                  // Field o:I
      48: isub
      49: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      52: istore_3
      53: aload_0
      54: getfield      #4                  // Field buffer:[B
      57: aload_0
      58: getfield      #8                  // Field o:I
      61: aload_1
      62: iload_2
      63: iload_3
      64: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      67: aload_0
      68: dup
      69: getfield      #8                  // Field o:I
      72: iload_3
      73: iadd
      74: putfield      #8                  // Field o:I
      77: iload_3
      78: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #22                 // Method read:([BII)I
       8: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field finished:Z
       4: ifeq          11
       7: ldc2_w        #23                 // long -1l
      10: lreturn
      11: aload_0
      12: getfield      #8                  // Field o:I
      15: aload_0
      16: getfield      #7                  // Field originalLen:I
      19: if_icmpne     26
      22: aload_0
      23: invokespecial #18                 // Method refill:()V
      26: aload_0
      27: getfield      #9                  // Field finished:Z
      30: ifeq          37
      33: ldc2_w        #23                 // long -1l
      36: lreturn
      37: lload_1
      38: aload_0
      39: getfield      #7                  // Field originalLen:I
      42: aload_0
      43: getfield      #8                  // Field o:I
      46: isub
      47: i2l
      48: invokestatic  #25                 // Method java/lang/Math.min:(JJ)J
      51: l2i
      52: istore_3
      53: aload_0
      54: dup
      55: getfield      #8                  // Field o:I
      58: iload_3
      59: iadd
      60: putfield      #8                  // Field o:I
      63: iload_3
      64: i2l
      65: lreturn

  private void refill() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field compressedBuffer:[B
       5: getstatic     #5                  // Field net/jpountz/lz4/LZ4BlockOutputStream.HEADER_LENGTH:I
       8: invokespecial #26                 // Method readFully:([BI)V
      11: iconst_0
      12: istore_1
      13: iload_1
      14: getstatic     #27                 // Field net/jpountz/lz4/LZ4BlockOutputStream.MAGIC_LENGTH:I
      17: if_icmpge     50
      20: aload_0
      21: getfield      #6                  // Field compressedBuffer:[B
      24: iload_1
      25: baload
      26: getstatic     #28                 // Field net/jpountz/lz4/LZ4BlockOutputStream.MAGIC:[B
      29: iload_1
      30: baload
      31: if_icmpeq     44
      34: new           #29                 // class java/io/IOException
      37: dup
      38: ldc           #30                 // String Stream is corrupted
      40: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: iinc          1, 1
      47: goto          13
      50: aload_0
      51: getfield      #6                  // Field compressedBuffer:[B
      54: getstatic     #27                 // Field net/jpountz/lz4/LZ4BlockOutputStream.MAGIC_LENGTH:I
      57: baload
      58: sipush        255
      61: iand
      62: istore_1
      63: iload_1
      64: sipush        240
      67: iand
      68: istore_2
      69: bipush        10
      71: iload_1
      72: bipush        15
      74: iand
      75: iadd
      76: istore_3
      77: iload_2
      78: bipush        16
      80: if_icmpeq     99
      83: iload_2
      84: bipush        32
      86: if_icmpeq     99
      89: new           #29                 // class java/io/IOException
      92: dup
      93: ldc           #30                 // String Stream is corrupted
      95: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: getfield      #6                  // Field compressedBuffer:[B
     103: getstatic     #27                 // Field net/jpountz/lz4/LZ4BlockOutputStream.MAGIC_LENGTH:I
     106: iconst_1
     107: iadd
     108: invokestatic  #32                 // Method net/jpountz/util/SafeUtils.readIntLE:([BI)I
     111: istore        4
     113: aload_0
     114: aload_0
     115: getfield      #6                  // Field compressedBuffer:[B
     118: getstatic     #27                 // Field net/jpountz/lz4/LZ4BlockOutputStream.MAGIC_LENGTH:I
     121: iconst_5
     122: iadd
     123: invokestatic  #32                 // Method net/jpountz/util/SafeUtils.readIntLE:([BI)I
     126: putfield      #7                  // Field originalLen:I
     129: aload_0
     130: getfield      #6                  // Field compressedBuffer:[B
     133: getstatic     #27                 // Field net/jpountz/lz4/LZ4BlockOutputStream.MAGIC_LENGTH:I
     136: bipush        9
     138: iadd
     139: invokestatic  #32                 // Method net/jpountz/util/SafeUtils.readIntLE:([BI)I
     142: istore        5
     144: getstatic     #33                 // Field $assertionsDisabled:Z
     147: ifne          170
     150: getstatic     #5                  // Field net/jpountz/lz4/LZ4BlockOutputStream.HEADER_LENGTH:I
     153: getstatic     #27                 // Field net/jpountz/lz4/LZ4BlockOutputStream.MAGIC_LENGTH:I
     156: bipush        13
     158: iadd
     159: if_icmpeq     170
     162: new           #34                 // class java/lang/AssertionError
     165: dup
     166: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
     169: athrow
     170: aload_0
     171: getfield      #7                  // Field originalLen:I
     174: iconst_1
     175: iload_3
     176: ishl
     177: if_icmpgt     231
     180: aload_0
     181: getfield      #7                  // Field originalLen:I
     184: iflt          231
     187: iload         4
     189: iflt          231
     192: aload_0
     193: getfield      #7                  // Field originalLen:I
     196: ifne          204
     199: iload         4
     201: ifne          231
     204: aload_0
     205: getfield      #7                  // Field originalLen:I
     208: ifeq          216
     211: iload         4
     213: ifeq          231
     216: iload_2
     217: bipush        16
     219: if_icmpne     241
     222: aload_0
     223: getfield      #7                  // Field originalLen:I
     226: iload         4
     228: if_icmpeq     241
     231: new           #29                 // class java/io/IOException
     234: dup
     235: ldc           #30                 // String Stream is corrupted
     237: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     240: athrow
     241: aload_0
     242: getfield      #7                  // Field originalLen:I
     245: ifne          274
     248: iload         4
     250: ifne          274
     253: iload         5
     255: ifeq          268
     258: new           #29                 // class java/io/IOException
     261: dup
     262: ldc           #30                 // String Stream is corrupted
     264: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     267: athrow
     268: aload_0
     269: iconst_1
     270: putfield      #9                  // Field finished:Z
     273: return
     274: aload_0
     275: getfield      #4                  // Field buffer:[B
     278: arraylength
     279: aload_0
     280: getfield      #7                  // Field originalLen:I
     283: if_icmpge     308
     286: aload_0
     287: aload_0
     288: getfield      #7                  // Field originalLen:I
     291: aload_0
     292: getfield      #4                  // Field buffer:[B
     295: arraylength
     296: iconst_3
     297: imul
     298: iconst_2
     299: idiv
     300: invokestatic  #36                 // Method java/lang/Math.max:(II)I
     303: newarray       byte
     305: putfield      #4                  // Field buffer:[B
     308: iload_2
     309: lookupswitch  { // 2
                    16: 336
                    32: 351
               default: 450
          }
     336: aload_0
     337: aload_0
     338: getfield      #4                  // Field buffer:[B
     341: aload_0
     342: getfield      #7                  // Field originalLen:I
     345: invokespecial #26                 // Method readFully:([BI)V
     348: goto          458
     351: aload_0
     352: getfield      #6                  // Field compressedBuffer:[B
     355: arraylength
     356: aload_0
     357: getfield      #7                  // Field originalLen:I
     360: if_icmpge     383
     363: aload_0
     364: iload         4
     366: aload_0
     367: getfield      #6                  // Field compressedBuffer:[B
     370: arraylength
     371: iconst_3
     372: imul
     373: iconst_2
     374: idiv
     375: invokestatic  #36                 // Method java/lang/Math.max:(II)I
     378: newarray       byte
     380: putfield      #6                  // Field compressedBuffer:[B
     383: aload_0
     384: aload_0
     385: getfield      #6                  // Field compressedBuffer:[B
     388: iload         4
     390: invokespecial #26                 // Method readFully:([BI)V
     393: aload_0
     394: getfield      #2                  // Field decompressor:Lnet/jpountz/lz4/LZ4FastDecompressor;
     397: aload_0
     398: getfield      #6                  // Field compressedBuffer:[B
     401: iconst_0
     402: aload_0
     403: getfield      #4                  // Field buffer:[B
     406: iconst_0
     407: aload_0
     408: getfield      #7                  // Field originalLen:I
     411: invokevirtual #37                 // Method net/jpountz/lz4/LZ4FastDecompressor.decompress:([BI[BII)I
     414: istore        6
     416: iload         4
     418: iload         6
     420: if_icmpeq     433
     423: new           #29                 // class java/io/IOException
     426: dup
     427: ldc           #30                 // String Stream is corrupted
     429: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     432: athrow
     433: goto          458
     436: astore        6
     438: new           #29                 // class java/io/IOException
     441: dup
     442: ldc           #30                 // String Stream is corrupted
     444: aload         6
     446: invokespecial #39                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     449: athrow
     450: new           #34                 // class java/lang/AssertionError
     453: dup
     454: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
     457: athrow
     458: aload_0
     459: getfield      #3                  // Field checksum:Ljava/util/zip/Checksum;
     462: invokeinterface #40,  1           // InterfaceMethod java/util/zip/Checksum.reset:()V
     467: aload_0
     468: getfield      #3                  // Field checksum:Ljava/util/zip/Checksum;
     471: aload_0
     472: getfield      #4                  // Field buffer:[B
     475: iconst_0
     476: aload_0
     477: getfield      #7                  // Field originalLen:I
     480: invokeinterface #41,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V
     485: aload_0
     486: getfield      #3                  // Field checksum:Ljava/util/zip/Checksum;
     489: invokeinterface #42,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J
     494: l2i
     495: iload         5
     497: if_icmpeq     510
     500: new           #29                 // class java/io/IOException
     503: dup
     504: ldc           #30                 // String Stream is corrupted
     506: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     509: athrow
     510: aload_0
     511: iconst_0
     512: putfield      #8                  // Field o:I
     515: return
    Exception table:
       from    to  target type
         393   433   436   Class net/jpountz/lz4/LZ4Exception

  private void readFully(byte[], int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     44
       7: aload_0
       8: getfield      #43                 // Field in:Ljava/io/InputStream;
      11: aload_1
      12: iload_3
      13: iload_2
      14: iload_3
      15: isub
      16: invokevirtual #44                 // Method java/io/InputStream.read:([BII)I
      19: istore        4
      21: iload         4
      23: ifge          36
      26: new           #45                 // class java/io/EOFException
      29: dup
      30: ldc           #46                 // String Stream ended prematurely
      32: invokespecial #47                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_3
      37: iload         4
      39: iadd
      40: istore_3
      41: goto          2
      44: getstatic     #33                 // Field $assertionsDisabled:Z
      47: ifne          63
      50: iload_2
      51: iload_3
      52: if_icmpeq     63
      55: new           #34                 // class java/lang/AssertionError
      58: dup
      59: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      62: athrow
      63: return

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public void mark(int);
    Code:
       0: return

  public void reset() throws java.io.IOException;
    Code:
       0: new           #29                 // class java/io/IOException
       3: dup
       4: ldc           #48                 // String mark/reset not supported
       6: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString();
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #51                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #52                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #54                 // String (in=
      19: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #43                 // Field in:Ljava/io/InputStream;
      26: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #56                 // String , decompressor=
      31: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #2                  // Field decompressor:Lnet/jpountz/lz4/LZ4FastDecompressor;
      38: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #57                 // String , checksum=
      43: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #3                  // Field checksum:Ljava/util/zip/Checksum;
      50: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #58                 // String )
      55: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  static {};
    Code:
       0: ldc_w         #60                 // class net/jpountz/lz4/LZ4BlockInputStream
       3: invokevirtual #61                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #33                 // Field $assertionsDisabled:Z
      17: return
}
