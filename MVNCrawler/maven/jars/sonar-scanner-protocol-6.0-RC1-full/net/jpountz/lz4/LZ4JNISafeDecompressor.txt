Compiled from "LZ4JNISafeDecompressor.java"
final class net.jpountz.lz4.LZ4JNISafeDecompressor extends net.jpountz.lz4.LZ4SafeDecompressor {
  public static final net.jpountz.lz4.LZ4JNISafeDecompressor INSTANCE;

  private static net.jpountz.lz4.LZ4SafeDecompressor SAFE_INSTANCE;

  net.jpountz.lz4.LZ4JNISafeDecompressor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/jpountz/lz4/LZ4SafeDecompressor."<init>":()V
       4: return

  public final int decompress(byte[], int, int, byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #2                  // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
       6: aload         4
       8: iload         5
      10: iload         6
      12: invokestatic  #2                  // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
      15: aload_1
      16: aconst_null
      17: iload_2
      18: iload_3
      19: aload         4
      21: aconst_null
      22: iload         5
      24: iload         6
      26: invokestatic  #3                  // Method net/jpountz/lz4/LZ4JNI.LZ4_decompress_safe:([BLjava/nio/ByteBuffer;II[BLjava/nio/ByteBuffer;II)I
      29: istore        7
      31: iload         7
      33: ifge          71
      36: new           #4                  // class net/jpountz/lz4/LZ4Exception
      39: dup
      40: new           #5                  // class java/lang/StringBuilder
      43: dup
      44: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #7                  // String Error decoding offset
      49: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_2
      53: iload         7
      55: isub
      56: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: ldc           #10                 // String  of input buffer
      61: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #12                 // Method net/jpountz/lz4/LZ4Exception."<init>":(Ljava/lang/String;)V
      70: athrow
      71: iload         7
      73: ireturn

  public int decompress(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: aload         4
       2: invokestatic  #13                 // Method net/jpountz/util/ByteBufferUtils.checkNotReadOnly:(Ljava/nio/ByteBuffer;)V
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokestatic  #14                 // Method net/jpountz/util/ByteBufferUtils.checkRange:(Ljava/nio/ByteBuffer;II)V
      11: aload         4
      13: iload         5
      15: iload         6
      17: invokestatic  #14                 // Method net/jpountz/util/ByteBufferUtils.checkRange:(Ljava/nio/ByteBuffer;II)V
      20: aconst_null
      21: astore        7
      23: aconst_null
      24: astore        8
      26: aconst_null
      27: astore        9
      29: aconst_null
      30: astore        10
      32: aload_1
      33: invokevirtual #15                 // Method java/nio/ByteBuffer.hasArray:()Z
      36: ifeq          48
      39: aload_1
      40: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
      43: astore        7
      45: goto          58
      48: aload_1
      49: invokevirtual #17                 // Method java/nio/ByteBuffer.isDirect:()Z
      52: ifeq          58
      55: aload_1
      56: astore        9
      58: aload         4
      60: invokevirtual #15                 // Method java/nio/ByteBuffer.hasArray:()Z
      63: ifeq          76
      66: aload         4
      68: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
      71: astore        8
      73: goto          88
      76: aload         4
      78: invokevirtual #17                 // Method java/nio/ByteBuffer.isDirect:()Z
      81: ifeq          88
      84: aload         4
      86: astore        10
      88: aload         7
      90: ifnonnull     98
      93: aload         9
      95: ifnull        170
      98: aload         8
     100: ifnonnull     108
     103: aload         10
     105: ifnull        170
     108: aload         7
     110: aload         9
     112: iload_2
     113: iload_3
     114: aload         8
     116: aload         10
     118: iload         5
     120: iload         6
     122: invokestatic  #3                  // Method net/jpountz/lz4/LZ4JNI.LZ4_decompress_safe:([BLjava/nio/ByteBuffer;II[BLjava/nio/ByteBuffer;II)I
     125: istore        11
     127: iload         11
     129: ifge          167
     132: new           #4                  // class net/jpountz/lz4/LZ4Exception
     135: dup
     136: new           #5                  // class java/lang/StringBuilder
     139: dup
     140: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #7                  // String Error decoding offset
     145: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: iload_2
     149: iload         11
     151: isub
     152: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     155: ldc           #10                 // String  of input buffer
     157: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokespecial #12                 // Method net/jpountz/lz4/LZ4Exception."<init>":(Ljava/lang/String;)V
     166: athrow
     167: iload         11
     169: ireturn
     170: getstatic     #18                 // Field SAFE_INSTANCE:Lnet/jpountz/lz4/LZ4SafeDecompressor;
     173: astore        11
     175: aload         11
     177: ifnonnull     192
     180: invokestatic  #19                 // Method net/jpountz/lz4/LZ4Factory.safeInstance:()Lnet/jpountz/lz4/LZ4Factory;
     183: invokevirtual #20                 // Method net/jpountz/lz4/LZ4Factory.safeDecompressor:()Lnet/jpountz/lz4/LZ4SafeDecompressor;
     186: dup
     187: putstatic     #18                 // Field SAFE_INSTANCE:Lnet/jpountz/lz4/LZ4SafeDecompressor;
     190: astore        11
     192: aload         11
     194: aload_1
     195: iload_2
     196: iload_3
     197: aload         4
     199: iload         5
     201: iload         6
     203: invokevirtual #21                 // Method net/jpountz/lz4/LZ4SafeDecompressor.decompress:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
     206: ireturn

  static {};
    Code:
       0: new           #22                 // class net/jpountz/lz4/LZ4JNISafeDecompressor
       3: dup
       4: invokespecial #23                 // Method "<init>":()V
       7: putstatic     #24                 // Field INSTANCE:Lnet/jpountz/lz4/LZ4JNISafeDecompressor;
      10: return
}
