Compiled from "LZ4HCJNICompressor.java"
final class net.jpountz.lz4.LZ4HCJNICompressor extends net.jpountz.lz4.LZ4Compressor {
  public static final net.jpountz.lz4.LZ4HCJNICompressor INSTANCE;

  private static net.jpountz.lz4.LZ4Compressor SAFE_INSTANCE;

  private final int compressionLevel;

  net.jpountz.lz4.LZ4HCJNICompressor();
    Code:
       0: aload_0
       1: bipush        9
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  net.jpountz.lz4.LZ4HCJNICompressor(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method net/jpountz/lz4/LZ4Compressor."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field compressionLevel:I
       9: return

  public int compress(byte[], int, int, byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #4                  // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
       6: aload         4
       8: iload         5
      10: iload         6
      12: invokestatic  #4                  // Method net/jpountz/util/SafeUtils.checkRange:([BII)V
      15: aload_1
      16: aconst_null
      17: iload_2
      18: iload_3
      19: aload         4
      21: aconst_null
      22: iload         5
      24: iload         6
      26: aload_0
      27: getfield      #3                  // Field compressionLevel:I
      30: invokestatic  #5                  // Method net/jpountz/lz4/LZ4JNI.LZ4_compressHC:([BLjava/nio/ByteBuffer;II[BLjava/nio/ByteBuffer;III)I
      33: istore        7
      35: iload         7
      37: ifgt          48
      40: new           #6                  // class net/jpountz/lz4/LZ4Exception
      43: dup
      44: invokespecial #7                  // Method net/jpountz/lz4/LZ4Exception."<init>":()V
      47: athrow
      48: iload         7
      50: ireturn

  public int compress(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: aload         4
       2: invokestatic  #8                  // Method net/jpountz/util/ByteBufferUtils.checkNotReadOnly:(Ljava/nio/ByteBuffer;)V
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokestatic  #9                  // Method net/jpountz/util/ByteBufferUtils.checkRange:(Ljava/nio/ByteBuffer;II)V
      11: aload         4
      13: iload         5
      15: iload         6
      17: invokestatic  #9                  // Method net/jpountz/util/ByteBufferUtils.checkRange:(Ljava/nio/ByteBuffer;II)V
      20: aconst_null
      21: astore        7
      23: aconst_null
      24: astore        8
      26: aconst_null
      27: astore        9
      29: aconst_null
      30: astore        10
      32: aload_1
      33: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
      36: ifeq          48
      39: aload_1
      40: invokevirtual #11                 // Method java/nio/ByteBuffer.array:()[B
      43: astore        7
      45: goto          58
      48: aload_1
      49: invokevirtual #12                 // Method java/nio/ByteBuffer.isDirect:()Z
      52: ifeq          58
      55: aload_1
      56: astore        9
      58: aload         4
      60: invokevirtual #10                 // Method java/nio/ByteBuffer.hasArray:()Z
      63: ifeq          76
      66: aload         4
      68: invokevirtual #11                 // Method java/nio/ByteBuffer.array:()[B
      71: astore        8
      73: goto          88
      76: aload         4
      78: invokevirtual #12                 // Method java/nio/ByteBuffer.isDirect:()Z
      81: ifeq          88
      84: aload         4
      86: astore        10
      88: aload         7
      90: ifnonnull     98
      93: aload         9
      95: ifnull        147
      98: aload         8
     100: ifnonnull     108
     103: aload         10
     105: ifnull        147
     108: aload         7
     110: aload         9
     112: iload_2
     113: iload_3
     114: aload         8
     116: aload         10
     118: iload         5
     120: iload         6
     122: aload_0
     123: getfield      #3                  // Field compressionLevel:I
     126: invokestatic  #5                  // Method net/jpountz/lz4/LZ4JNI.LZ4_compressHC:([BLjava/nio/ByteBuffer;II[BLjava/nio/ByteBuffer;III)I
     129: istore        11
     131: iload         11
     133: ifgt          144
     136: new           #6                  // class net/jpountz/lz4/LZ4Exception
     139: dup
     140: invokespecial #7                  // Method net/jpountz/lz4/LZ4Exception."<init>":()V
     143: athrow
     144: iload         11
     146: ireturn
     147: getstatic     #13                 // Field SAFE_INSTANCE:Lnet/jpountz/lz4/LZ4Compressor;
     150: astore        11
     152: aload         11
     154: ifnonnull     173
     157: invokestatic  #14                 // Method net/jpountz/lz4/LZ4Factory.safeInstance:()Lnet/jpountz/lz4/LZ4Factory;
     160: aload_0
     161: getfield      #3                  // Field compressionLevel:I
     164: invokevirtual #15                 // Method net/jpountz/lz4/LZ4Factory.highCompressor:(I)Lnet/jpountz/lz4/LZ4Compressor;
     167: dup
     168: putstatic     #13                 // Field SAFE_INSTANCE:Lnet/jpountz/lz4/LZ4Compressor;
     171: astore        11
     173: aload         11
     175: aload_1
     176: iload_2
     177: iload_3
     178: aload         4
     180: iload         5
     182: iload         6
     184: invokevirtual #16                 // Method net/jpountz/lz4/LZ4Compressor.compress:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
     187: ireturn

  static {};
    Code:
       0: new           #17                 // class net/jpountz/lz4/LZ4HCJNICompressor
       3: dup
       4: invokespecial #18                 // Method "<init>":()V
       7: putstatic     #19                 // Field INSTANCE:Lnet/jpountz/lz4/LZ4HCJNICompressor;
      10: return
}
