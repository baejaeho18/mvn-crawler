Compiled from "LZ4UnsafeUtils.java"
final class net.jpountz.lz4.LZ4UnsafeUtils extends java.lang.Enum<net.jpountz.lz4.LZ4UnsafeUtils> {
  private static final net.jpountz.lz4.LZ4UnsafeUtils[] $VALUES;

  static final boolean $assertionsDisabled;

  public static net.jpountz.lz4.LZ4UnsafeUtils[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/jpountz/lz4/LZ4UnsafeUtils;
       3: invokevirtual #2                  // Method "[Lnet/jpountz/lz4/LZ4UnsafeUtils;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/jpountz/lz4/LZ4UnsafeUtils;"
       9: areturn

  public static net.jpountz.lz4.LZ4UnsafeUtils valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class net/jpountz/lz4/LZ4UnsafeUtils
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class net/jpountz/lz4/LZ4UnsafeUtils
      10: areturn

  private net.jpountz.lz4.LZ4UnsafeUtils();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static void safeArraycopy(byte[], int, byte[], int, int);
    Code:
       0: iload         4
       2: bipush        -8
       4: iand
       5: istore        5
       7: aload_0
       8: iload_1
       9: aload_2
      10: iload_3
      11: iload         5
      13: invokestatic  #7                  // Method wildArraycopy:([BI[BII)V
      16: iconst_0
      17: istore        6
      19: iload         4
      21: bipush        7
      23: iand
      24: istore        7
      26: iload         6
      28: iload         7
      30: if_icmpge     61
      33: aload_2
      34: iload_3
      35: iload         5
      37: iadd
      38: iload         6
      40: iadd
      41: aload_0
      42: iload_1
      43: iload         5
      45: iadd
      46: iload         6
      48: iadd
      49: invokestatic  #8                  // Method net/jpountz/util/UnsafeUtils.readByte:([BI)B
      52: invokestatic  #9                  // Method net/jpountz/util/UnsafeUtils.writeByte:([BIB)V
      55: iinc          6, 1
      58: goto          26
      61: return

  static void wildArraycopy(byte[], int, byte[], int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload         4
       7: if_icmpge     32
      10: aload_2
      11: iload_3
      12: iload         5
      14: iadd
      15: aload_0
      16: iload_1
      17: iload         5
      19: iadd
      20: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
      23: invokestatic  #11                 // Method net/jpountz/util/UnsafeUtils.writeLong:([BIJ)V
      26: iinc          5, 8
      29: goto          3
      32: return

  static void wildIncrementalCopy(byte[], int, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: iconst_4
       4: if_icmpge     180
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iconst_4
      13: if_icmpge     38
      16: aload_0
      17: iload_2
      18: iload         4
      20: iadd
      21: aload_0
      22: iload_1
      23: iload         4
      25: iadd
      26: invokestatic  #8                  // Method net/jpountz/util/UnsafeUtils.readByte:([BI)B
      29: invokestatic  #9                  // Method net/jpountz/util/UnsafeUtils.writeByte:([BIB)V
      32: iinc          4, 1
      35: goto          10
      38: iinc          2, 4
      41: iinc          1, 4
      44: iconst_0
      45: istore        4
      47: getstatic     #12                 // Field $assertionsDisabled:Z
      50: ifne          74
      53: iload_2
      54: iload_1
      55: if_icmplt     66
      58: iload_2
      59: iload_1
      60: isub
      61: bipush        8
      63: if_icmplt     74
      66: new           #13                 // class java/lang/AssertionError
      69: dup
      70: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      73: athrow
      74: iload_2
      75: iload_1
      76: isub
      77: tableswitch   { // 1 to 7
                     1: 120
                     2: 126
                     3: 132
                     4: 159
                     5: 141
                     6: 147
                     7: 153
               default: 159
          }
     120: iinc          1, -3
     123: goto          159
     126: iinc          1, -2
     129: goto          159
     132: iinc          1, -3
     135: iconst_m1
     136: istore        4
     138: goto          159
     141: iconst_1
     142: istore        4
     144: goto          159
     147: iconst_2
     148: istore        4
     150: goto          159
     153: iconst_3
     154: istore        4
     156: goto          159
     159: aload_0
     160: iload_2
     161: aload_0
     162: iload_1
     163: invokestatic  #15                 // Method net/jpountz/util/UnsafeUtils.readInt:([BI)I
     166: invokestatic  #16                 // Method net/jpountz/util/UnsafeUtils.writeInt:([BII)V
     169: iinc          2, 4
     172: iload_1
     173: iload         4
     175: isub
     176: istore_1
     177: goto          204
     180: iload_2
     181: iload_1
     182: isub
     183: bipush        8
     185: if_icmpge     204
     188: aload_0
     189: iload_2
     190: aload_0
     191: iload_1
     192: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
     195: invokestatic  #11                 // Method net/jpountz/util/UnsafeUtils.writeLong:([BIJ)V
     198: iload_2
     199: iload_2
     200: iload_1
     201: isub
     202: iadd
     203: istore_2
     204: iload_2
     205: iload_3
     206: if_icmpge     228
     209: aload_0
     210: iload_2
     211: aload_0
     212: iload_1
     213: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
     216: invokestatic  #11                 // Method net/jpountz/util/UnsafeUtils.writeLong:([BIJ)V
     219: iinc          2, 8
     222: iinc          1, 8
     225: goto          204
     228: return

  static void safeIncrementalCopy(byte[], int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     43
       9: aload_0
      10: iload_2
      11: iload         4
      13: iadd
      14: aload_0
      15: iload_1
      16: iload         4
      18: iadd
      19: baload
      20: bastore
      21: aload_0
      22: iload_2
      23: iload         4
      25: iadd
      26: aload_0
      27: iload_1
      28: iload         4
      30: iadd
      31: invokestatic  #8                  // Method net/jpountz/util/UnsafeUtils.readByte:([BI)B
      34: invokestatic  #9                  // Method net/jpountz/util/UnsafeUtils.writeByte:([BIB)V
      37: iinc          4, 1
      40: goto          3
      43: return

  static int readShortLittleEndian(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #17                 // Method net/jpountz/util/UnsafeUtils.readShort:([BI)S
       5: istore_2
       6: getstatic     #18                 // Field net/jpountz/util/Utils.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
       9: getstatic     #19                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      12: if_acmpne     20
      15: iload_2
      16: invokestatic  #20                 // Method java/lang/Short.reverseBytes:(S)S
      19: istore_2
      20: iload_2
      21: ldc           #21                 // int 65535
      23: iand
      24: ireturn

  static void writeShortLittleEndian(byte[], int, int);
    Code:
       0: iload_2
       1: i2s
       2: istore_3
       3: getstatic     #18                 // Field net/jpountz/util/Utils.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
       6: getstatic     #19                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       9: if_acmpne     17
      12: iload_3
      13: invokestatic  #20                 // Method java/lang/Short.reverseBytes:(S)S
      16: istore_3
      17: aload_0
      18: iload_1
      19: iload_3
      20: invokestatic  #22                 // Method net/jpountz/util/UnsafeUtils.writeShort:([BIS)V
      23: return

  static boolean readIntEquals(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #15                 // Method net/jpountz/util/UnsafeUtils.readInt:([BI)I
       5: aload_0
       6: iload_2
       7: invokestatic  #15                 // Method net/jpountz/util/UnsafeUtils.readInt:([BI)I
      10: if_icmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  static int commonBytes(byte[], int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload_2
       4: iload_3
       5: bipush        8
       7: isub
       8: if_icmpgt     89
      11: aload_0
      12: iload_2
      13: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
      16: aload_0
      17: iload_1
      18: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
      21: lcmp
      22: ifne          37
      25: iinc          4, 8
      28: iinc          1, 8
      31: iinc          2, 8
      34: goto          3
      37: getstatic     #18                 // Field net/jpountz/util/Utils.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      40: getstatic     #19                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      43: if_acmpne     65
      46: aload_0
      47: iload_2
      48: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
      51: aload_0
      52: iload_1
      53: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
      56: lxor
      57: invokestatic  #23                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      60: istore        5
      62: goto          81
      65: aload_0
      66: iload_2
      67: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
      70: aload_0
      71: iload_1
      72: invokestatic  #10                 // Method net/jpountz/util/UnsafeUtils.readLong:([BI)J
      75: lxor
      76: invokestatic  #24                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      79: istore        5
      81: iload         4
      83: iload         5
      85: iconst_3
      86: iushr
      87: iadd
      88: ireturn
      89: iload_2
      90: iload_3
      91: if_icmpge     119
      94: aload_0
      95: iload_1
      96: iinc          1, 1
      99: invokestatic  #8                  // Method net/jpountz/util/UnsafeUtils.readByte:([BI)B
     102: aload_0
     103: iload_2
     104: iinc          2, 1
     107: invokestatic  #8                  // Method net/jpountz/util/UnsafeUtils.readByte:([BI)B
     110: if_icmpne     119
     113: iinc          4, 1
     116: goto          89
     119: iload         4
     121: ireturn

  static int writeLen(int, byte[], int);
    Code:
       0: iload_0
       1: sipush        255
       4: if_icmplt     27
       7: aload_1
       8: iload_2
       9: iinc          2, 1
      12: sipush        255
      15: invokestatic  #25                 // Method net/jpountz/util/UnsafeUtils.writeByte:([BII)V
      18: iinc_w        0, -255
      24: goto          0
      27: aload_1
      28: iload_2
      29: iinc          2, 1
      32: iload_0
      33: invokestatic  #25                 // Method net/jpountz/util/UnsafeUtils.writeByte:([BII)V
      36: iload_2
      37: ireturn

  static int encodeSequence(byte[], int, int, int, int, byte[], int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore        8
       5: iload         6
       7: iinc          6, 1
      10: istore        9
      12: iload         8
      14: bipush        15
      16: if_icmplt     40
      19: bipush        -16
      21: istore        10
      23: iload         8
      25: bipush        15
      27: isub
      28: aload         5
      30: iload         6
      32: invokestatic  #26                 // Method writeLen:(I[BI)I
      35: istore        6
      37: goto          46
      40: iload         8
      42: iconst_4
      43: ishl
      44: istore        10
      46: aload_0
      47: iload_1
      48: aload         5
      50: iload         6
      52: iload         8
      54: invokestatic  #7                  // Method wildArraycopy:([BI[BII)V
      57: iload         6
      59: iload         8
      61: iadd
      62: istore        6
      64: iload_2
      65: iload_3
      66: isub
      67: istore        11
      69: aload         5
      71: iload         6
      73: iinc          6, 1
      76: iload         11
      78: i2b
      79: bastore
      80: aload         5
      82: iload         6
      84: iinc          6, 1
      87: iload         11
      89: bipush        8
      91: iushr
      92: i2b
      93: bastore
      94: iinc          4, -4
      97: iload         6
      99: bipush        6
     101: iadd
     102: iload         4
     104: bipush        8
     106: iushr
     107: iadd
     108: iload         7
     110: if_icmple     123
     113: new           #27                 // class net/jpountz/lz4/LZ4Exception
     116: dup
     117: ldc           #28                 // String maxDestLen is too small
     119: invokespecial #29                 // Method net/jpountz/lz4/LZ4Exception."<init>":(Ljava/lang/String;)V
     122: athrow
     123: iload         4
     125: bipush        15
     127: if_icmplt     154
     130: iload         10
     132: bipush        15
     134: ior
     135: istore        10
     137: iload         4
     139: bipush        15
     141: isub
     142: aload         5
     144: iload         6
     146: invokestatic  #26                 // Method writeLen:(I[BI)I
     149: istore        6
     151: goto          161
     154: iload         10
     156: iload         4
     158: ior
     159: istore        10
     161: aload         5
     163: iload         9
     165: iload         10
     167: i2b
     168: bastore
     169: iload         6
     171: ireturn

  static int commonBytesBackward(byte[], int, int, int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload_1
       4: iload_3
       5: if_icmple     39
       8: iload_2
       9: iload         4
      11: if_icmple     39
      14: aload_0
      15: iinc          1, -1
      18: iload_1
      19: invokestatic  #8                  // Method net/jpountz/util/UnsafeUtils.readByte:([BI)B
      22: aload_0
      23: iinc          2, -1
      26: iload_2
      27: invokestatic  #8                  // Method net/jpountz/util/UnsafeUtils.readByte:([BI)B
      30: if_icmpne     39
      33: iinc          5, 1
      36: goto          3
      39: iload         5
      41: ireturn

  static int lastLiterals(byte[], int, int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: invokestatic  #30                 // Method net/jpountz/lz4/LZ4SafeUtils.lastLiterals:([BII[BII)I
      11: ireturn

  static {};
    Code:
       0: ldc_w         #4                  // class net/jpountz/lz4/LZ4UnsafeUtils
       3: invokevirtual #31                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #12                 // Field $assertionsDisabled:Z
      17: iconst_0
      18: anewarray     #4                  // class net/jpountz/lz4/LZ4UnsafeUtils
      21: putstatic     #1                  // Field $VALUES:[Lnet/jpountz/lz4/LZ4UnsafeUtils;
      24: return
}
