Compiled from "LZ4Compressor.java"
public abstract class net.jpountz.lz4.LZ4Compressor {
  public net.jpountz.lz4.LZ4Compressor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public final int maxCompressedLength(int);
    Code:
       0: iload_1
       1: invokestatic  #2                  // Method net/jpountz/lz4/LZ4Utils.maxCompressedLength:(I)I
       4: ireturn

  public abstract int compress(byte[], int, int, byte[], int, int);

  public abstract int compress(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);

  public final int compress(byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: iload         5
       8: aload         4
      10: arraylength
      11: iload         5
      13: isub
      14: invokevirtual #3                  // Method compress:([BII[BII)I
      17: ireturn

  public final int compress(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aload_2
       6: iconst_0
       7: invokevirtual #4                  // Method compress:([BII[BI)I
      10: ireturn

  public final byte[] compress(byte[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #5                  // Method maxCompressedLength:(I)I
       5: istore        4
       7: iload         4
       9: newarray       byte
      11: astore        5
      13: aload_0
      14: aload_1
      15: iload_2
      16: iload_3
      17: aload         5
      19: iconst_0
      20: invokevirtual #4                  // Method compress:([BII[BI)I
      23: istore        6
      25: aload         5
      27: iload         6
      29: invokestatic  #6                  // Method java/util/Arrays.copyOf:([BI)[B
      32: areturn

  public final byte[] compress(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #7                  // Method compress:([BII)[B
       8: areturn

  public final void compress(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
       6: aload_1
       7: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      10: aload_2
      11: aload_2
      12: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      15: aload_2
      16: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      19: invokevirtual #10                 // Method compress:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
      22: istore_3
      23: aload_1
      24: aload_1
      25: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:()I
      28: invokevirtual #12                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      31: pop
      32: aload_2
      33: aload_2
      34: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      37: iload_3
      38: iadd
      39: invokevirtual #12                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      42: pop
      43: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #14                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn
}
