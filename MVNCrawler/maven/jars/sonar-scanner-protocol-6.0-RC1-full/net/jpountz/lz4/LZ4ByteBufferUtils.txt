Compiled from "LZ4ByteBufferUtils.java"
final class net.jpountz.lz4.LZ4ByteBufferUtils extends java.lang.Enum<net.jpountz.lz4.LZ4ByteBufferUtils> {
  private static final net.jpountz.lz4.LZ4ByteBufferUtils[] $VALUES;

  static final boolean $assertionsDisabled;

  public static net.jpountz.lz4.LZ4ByteBufferUtils[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/jpountz/lz4/LZ4ByteBufferUtils;
       3: invokevirtual #2                  // Method "[Lnet/jpountz/lz4/LZ4ByteBufferUtils;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/jpountz/lz4/LZ4ByteBufferUtils;"
       9: areturn

  public static net.jpountz.lz4.LZ4ByteBufferUtils valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class net/jpountz/lz4/LZ4ByteBufferUtils
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class net/jpountz/lz4/LZ4ByteBufferUtils
      10: areturn

  private net.jpountz.lz4.LZ4ByteBufferUtils();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static int hash(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #7                  // Method net/jpountz/util/ByteBufferUtils.readInt:(Ljava/nio/ByteBuffer;I)I
       5: invokestatic  #8                  // Method net/jpountz/lz4/LZ4Utils.hash:(I)I
       8: ireturn

  static int hash64k(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #7                  // Method net/jpountz/util/ByteBufferUtils.readInt:(Ljava/nio/ByteBuffer;I)I
       5: invokestatic  #9                  // Method net/jpountz/lz4/LZ4Utils.hash64k:(I)I
       8: ireturn

  static boolean readIntEquals(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:(I)I
       5: aload_0
       6: iload_2
       7: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:(I)I
      10: if_icmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  static void safeIncrementalCopy(java.nio.ByteBuffer, int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     32
       9: aload_0
      10: iload_2
      11: iload         4
      13: iadd
      14: aload_0
      15: iload_1
      16: iload         4
      18: iadd
      19: invokevirtual #11                 // Method java/nio/ByteBuffer.get:(I)B
      22: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      25: pop
      26: iinc          4, 1
      29: goto          3
      32: return

  static void wildIncrementalCopy(java.nio.ByteBuffer, int, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: iconst_4
       4: if_icmpge     180
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iconst_4
      13: if_icmpge     38
      16: aload_0
      17: iload_2
      18: iload         4
      20: iadd
      21: aload_0
      22: iload_1
      23: iload         4
      25: iadd
      26: invokestatic  #13                 // Method net/jpountz/util/ByteBufferUtils.readByte:(Ljava/nio/ByteBuffer;I)B
      29: invokestatic  #14                 // Method net/jpountz/util/ByteBufferUtils.writeByte:(Ljava/nio/ByteBuffer;II)V
      32: iinc          4, 1
      35: goto          10
      38: iinc          2, 4
      41: iinc          1, 4
      44: iconst_0
      45: istore        4
      47: getstatic     #15                 // Field $assertionsDisabled:Z
      50: ifne          74
      53: iload_2
      54: iload_1
      55: if_icmplt     66
      58: iload_2
      59: iload_1
      60: isub
      61: bipush        8
      63: if_icmplt     74
      66: new           #16                 // class java/lang/AssertionError
      69: dup
      70: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      73: athrow
      74: iload_2
      75: iload_1
      76: isub
      77: tableswitch   { // 1 to 7
                     1: 120
                     2: 126
                     3: 132
                     4: 159
                     5: 141
                     6: 147
                     7: 153
               default: 159
          }
     120: iinc          1, -3
     123: goto          159
     126: iinc          1, -2
     129: goto          159
     132: iinc          1, -3
     135: iconst_m1
     136: istore        4
     138: goto          159
     141: iconst_1
     142: istore        4
     144: goto          159
     147: iconst_2
     148: istore        4
     150: goto          159
     153: iconst_3
     154: istore        4
     156: goto          159
     159: aload_0
     160: iload_2
     161: aload_0
     162: iload_1
     163: invokestatic  #7                  // Method net/jpountz/util/ByteBufferUtils.readInt:(Ljava/nio/ByteBuffer;I)I
     166: invokestatic  #18                 // Method net/jpountz/util/ByteBufferUtils.writeInt:(Ljava/nio/ByteBuffer;II)V
     169: iinc          2, 4
     172: iload_1
     173: iload         4
     175: isub
     176: istore_1
     177: goto          204
     180: iload_2
     181: iload_1
     182: isub
     183: bipush        8
     185: if_icmpge     204
     188: aload_0
     189: iload_2
     190: aload_0
     191: iload_1
     192: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
     195: invokestatic  #20                 // Method net/jpountz/util/ByteBufferUtils.writeLong:(Ljava/nio/ByteBuffer;IJ)V
     198: iload_2
     199: iload_2
     200: iload_1
     201: isub
     202: iadd
     203: istore_2
     204: iload_2
     205: iload_3
     206: if_icmpge     228
     209: aload_0
     210: iload_2
     211: aload_0
     212: iload_1
     213: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
     216: invokestatic  #20                 // Method net/jpountz/util/ByteBufferUtils.writeLong:(Ljava/nio/ByteBuffer;IJ)V
     219: iinc          2, 8
     222: iinc          1, 8
     225: goto          204
     228: return

  static int commonBytes(java.nio.ByteBuffer, int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload_2
       4: iload_3
       5: bipush        8
       7: isub
       8: if_icmpgt     90
      11: aload_0
      12: iload_2
      13: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
      16: aload_0
      17: iload_1
      18: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
      21: lcmp
      22: ifne          37
      25: iinc          4, 8
      28: iinc          1, 8
      31: iinc          2, 8
      34: goto          3
      37: aload_0
      38: invokevirtual #21                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      41: getstatic     #22                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      44: if_acmpne     66
      47: aload_0
      48: iload_2
      49: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
      52: aload_0
      53: iload_1
      54: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
      57: lxor
      58: invokestatic  #23                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      61: istore        5
      63: goto          82
      66: aload_0
      67: iload_2
      68: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
      71: aload_0
      72: iload_1
      73: invokestatic  #19                 // Method net/jpountz/util/ByteBufferUtils.readLong:(Ljava/nio/ByteBuffer;I)J
      76: lxor
      77: invokestatic  #24                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      80: istore        5
      82: iload         4
      84: iload         5
      86: iconst_3
      87: iushr
      88: iadd
      89: ireturn
      90: iload_2
      91: iload_3
      92: if_icmpge     120
      95: aload_0
      96: iload_1
      97: iinc          1, 1
     100: invokestatic  #13                 // Method net/jpountz/util/ByteBufferUtils.readByte:(Ljava/nio/ByteBuffer;I)B
     103: aload_0
     104: iload_2
     105: iinc          2, 1
     108: invokestatic  #13                 // Method net/jpountz/util/ByteBufferUtils.readByte:(Ljava/nio/ByteBuffer;I)B
     111: if_icmpne     120
     114: iinc          4, 1
     117: goto          90
     120: iload         4
     122: ireturn

  static int commonBytesBackward(java.nio.ByteBuffer, int, int, int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload_1
       4: iload_3
       5: if_icmple     39
       8: iload_2
       9: iload         4
      11: if_icmple     39
      14: aload_0
      15: iinc          1, -1
      18: iload_1
      19: invokevirtual #11                 // Method java/nio/ByteBuffer.get:(I)B
      22: aload_0
      23: iinc          2, -1
      26: iload_2
      27: invokevirtual #11                 // Method java/nio/ByteBuffer.get:(I)B
      30: if_icmpne     39
      33: iinc          5, 1
      36: goto          3
      39: iload         5
      41: ireturn

  static void safeArraycopy(java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload         4
       7: if_icmpge     33
      10: aload_2
      11: iload_3
      12: iload         5
      14: iadd
      15: aload_0
      16: iload_1
      17: iload         5
      19: iadd
      20: invokevirtual #11                 // Method java/nio/ByteBuffer.get:(I)B
      23: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      26: pop
      27: iinc          5, 1
      30: goto          3
      33: return

  static void wildArraycopy(java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #15                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: invokevirtual #21                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      10: aload_2
      11: invokevirtual #21                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      14: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifne          28
      20: new           #16                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     61
      38: aload_2
      39: iload_3
      40: iload         5
      42: iadd
      43: aload_0
      44: iload_1
      45: iload         5
      47: iadd
      48: invokevirtual #26                 // Method java/nio/ByteBuffer.getLong:(I)J
      51: invokevirtual #27                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
      54: pop
      55: iinc          5, 8
      58: goto          31
      61: goto          93
      64: astore        5
      66: new           #29                 // class net/jpountz/lz4/LZ4Exception
      69: dup
      70: new           #30                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #32                 // String Malformed input at offset
      79: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: iload_1
      83: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #36                 // Method net/jpountz/lz4/LZ4Exception."<init>":(Ljava/lang/String;)V
      92: athrow
      93: return
    Exception table:
       from    to  target type
          28    61    64   Class java/lang/IndexOutOfBoundsException

  static int encodeSequence(java.nio.ByteBuffer, int, int, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore        8
       5: iload         6
       7: iinc          6, 1
      10: istore        9
      12: iload         6
      14: iload         8
      16: iadd
      17: bipush        8
      19: iadd
      20: iload         8
      22: bipush        8
      24: iushr
      25: iadd
      26: iload         7
      28: if_icmple     41
      31: new           #29                 // class net/jpountz/lz4/LZ4Exception
      34: dup
      35: ldc           #37                 // String maxDestLen is too small
      37: invokespecial #36                 // Method net/jpountz/lz4/LZ4Exception."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iload         8
      43: bipush        15
      45: if_icmplt     69
      48: bipush        -16
      50: istore        10
      52: iload         8
      54: bipush        15
      56: isub
      57: aload         5
      59: iload         6
      61: invokestatic  #38                 // Method writeLen:(ILjava/nio/ByteBuffer;I)I
      64: istore        6
      66: goto          75
      69: iload         8
      71: iconst_4
      72: ishl
      73: istore        10
      75: aload_0
      76: iload_1
      77: aload         5
      79: iload         6
      81: iload         8
      83: invokestatic  #39                 // Method wildArraycopy:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V
      86: iload         6
      88: iload         8
      90: iadd
      91: istore        6
      93: iload_2
      94: iload_3
      95: isub
      96: istore        11
      98: aload         5
     100: iload         6
     102: iinc          6, 1
     105: iload         11
     107: i2b
     108: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     111: pop
     112: aload         5
     114: iload         6
     116: iinc          6, 1
     119: iload         11
     121: bipush        8
     123: iushr
     124: i2b
     125: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     128: pop
     129: iinc          4, -4
     132: iload         6
     134: bipush        6
     136: iadd
     137: iload         4
     139: bipush        8
     141: iushr
     142: iadd
     143: iload         7
     145: if_icmple     158
     148: new           #29                 // class net/jpountz/lz4/LZ4Exception
     151: dup
     152: ldc           #37                 // String maxDestLen is too small
     154: invokespecial #36                 // Method net/jpountz/lz4/LZ4Exception."<init>":(Ljava/lang/String;)V
     157: athrow
     158: iload         4
     160: bipush        15
     162: if_icmplt     189
     165: iload         10
     167: bipush        15
     169: ior
     170: istore        10
     172: iload         4
     174: bipush        15
     176: isub
     177: aload         5
     179: iload         6
     181: invokestatic  #38                 // Method writeLen:(ILjava/nio/ByteBuffer;I)I
     184: istore        6
     186: goto          196
     189: iload         10
     191: iload         4
     193: ior
     194: istore        10
     196: aload         5
     198: iload         9
     200: iload         10
     202: i2b
     203: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     206: pop
     207: iload         6
     209: ireturn

  static int lastLiterals(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: istore        6
       3: iload         4
       5: iload         6
       7: iadd
       8: iconst_1
       9: iadd
      10: iload         6
      12: sipush        255
      15: iadd
      16: bipush        15
      18: isub
      19: sipush        255
      22: idiv
      23: iadd
      24: iload         5
      26: if_icmple     37
      29: new           #29                 // class net/jpountz/lz4/LZ4Exception
      32: dup
      33: invokespecial #40                 // Method net/jpountz/lz4/LZ4Exception."<init>":()V
      36: athrow
      37: iload         6
      39: bipush        15
      41: if_icmplt     72
      44: aload_3
      45: iload         4
      47: iinc          4, 1
      50: bipush        -16
      52: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      55: pop
      56: iload         6
      58: bipush        15
      60: isub
      61: aload_3
      62: iload         4
      64: invokestatic  #38                 // Method writeLen:(ILjava/nio/ByteBuffer;I)I
      67: istore        4
      69: goto          87
      72: aload_3
      73: iload         4
      75: iinc          4, 1
      78: iload         6
      80: iconst_4
      81: ishl
      82: i2b
      83: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      86: pop
      87: aload_0
      88: iload_1
      89: aload_3
      90: iload         4
      92: iload         6
      94: invokestatic  #41                 // Method safeArraycopy:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V
      97: iload         4
      99: iload         6
     101: iadd
     102: istore        4
     104: iload         4
     106: ireturn

  static int writeLen(int, java.nio.ByteBuffer, int);
    Code:
       0: iload_0
       1: sipush        255
       4: if_icmplt     26
       7: aload_1
       8: iload_2
       9: iinc          2, 1
      12: iconst_m1
      13: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      16: pop
      17: iinc_w        0, -255
      23: goto          0
      26: aload_1
      27: iload_2
      28: iinc          2, 1
      31: iload_0
      32: i2b
      33: invokevirtual #12                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      36: pop
      37: iload_2
      38: ireturn

  static void copyTo(net.jpountz.lz4.LZ4ByteBufferUtils$Match, net.jpountz.lz4.LZ4ByteBufferUtils$Match);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #42                 // Field net/jpountz/lz4/LZ4ByteBufferUtils$Match.len:I
       5: putfield      #42                 // Field net/jpountz/lz4/LZ4ByteBufferUtils$Match.len:I
       8: aload_1
       9: aload_0
      10: getfield      #43                 // Field net/jpountz/lz4/LZ4ByteBufferUtils$Match.start:I
      13: putfield      #43                 // Field net/jpountz/lz4/LZ4ByteBufferUtils$Match.start:I
      16: aload_1
      17: aload_0
      18: getfield      #44                 // Field net/jpountz/lz4/LZ4ByteBufferUtils$Match.ref:I
      21: putfield      #44                 // Field net/jpountz/lz4/LZ4ByteBufferUtils$Match.ref:I
      24: return

  static {};
    Code:
       0: ldc_w         #4                  // class net/jpountz/lz4/LZ4ByteBufferUtils
       3: invokevirtual #45                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #15                 // Field $assertionsDisabled:Z
      17: iconst_0
      18: anewarray     #4                  // class net/jpountz/lz4/LZ4ByteBufferUtils
      21: putstatic     #1                  // Field $VALUES:[Lnet/jpountz/lz4/LZ4ByteBufferUtils;
      24: return
}
