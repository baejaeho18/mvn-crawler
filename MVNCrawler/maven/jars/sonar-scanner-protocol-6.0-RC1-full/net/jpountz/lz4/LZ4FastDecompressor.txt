Compiled from "LZ4FastDecompressor.java"
public abstract class net.jpountz.lz4.LZ4FastDecompressor implements net.jpountz.lz4.LZ4Decompressor {
  public net.jpountz.lz4.LZ4FastDecompressor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract int decompress(byte[], int, byte[], int, int);

  public abstract int decompress(java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, int);

  public final int decompress(byte[], byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: iconst_0
       5: iload_3
       6: invokevirtual #2                  // Method decompress:([BI[BII)I
       9: ireturn

  public final int decompress(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: arraylength
       5: invokevirtual #3                  // Method decompress:([B[BI)I
       8: ireturn

  public final byte[] decompress(byte[], int, int);
    Code:
       0: iload_3
       1: newarray       byte
       3: astore        4
       5: aload_0
       6: aload_1
       7: iload_2
       8: aload         4
      10: iconst_0
      11: iload_3
      12: invokevirtual #2                  // Method decompress:([BI[BII)I
      15: pop
      16: aload         4
      18: areturn

  public final byte[] decompress(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iload_2
       4: invokevirtual #4                  // Method decompress:([BII)[B
       7: areturn

  public final void decompress(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
       6: aload_2
       7: aload_2
       8: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      11: aload_2
      12: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      15: invokevirtual #7                  // Method decompress:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)I
      18: istore_3
      19: aload_2
      20: aload_2
      21: invokevirtual #8                  // Method java/nio/ByteBuffer.limit:()I
      24: invokevirtual #9                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      27: pop
      28: aload_1
      29: aload_1
      30: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      33: iload_3
      34: iadd
      35: invokevirtual #9                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      38: pop
      39: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #11                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn
}
