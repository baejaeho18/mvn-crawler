Compiled from "SourceCode.java"
public abstract class net.sourceforge.pmd.cpd.SourceCode$CodeLoader {
  private java.lang.ref.SoftReference<java.util.List<java.lang.String>> code;

  public net.sourceforge.pmd.cpd.SourceCode$CodeLoader();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: return

  public java.util.List<java.lang.String> getCode();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #21                 // Field code:Ljava/lang/ref/SoftReference;
       6: ifnull        20
       9: aload_0
      10: getfield      #21                 // Field code:Ljava/lang/ref/SoftReference;
      13: invokevirtual #27                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      16: checkcast     #29                 // class java/util/List
      19: astore_1
      20: aload_1
      21: ifnull        26
      24: aload_1
      25: areturn
      26: aload_0
      27: new           #23                 // class java/lang/ref/SoftReference
      30: dup
      31: aload_0
      32: invokevirtual #32                 // Method load:()Ljava/util/List;
      35: invokespecial #35                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      38: putfield      #21                 // Field code:Ljava/lang/ref/SoftReference;
      41: aload_0
      42: getfield      #21                 // Field code:Ljava/lang/ref/SoftReference;
      45: invokevirtual #27                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      48: checkcast     #29                 // class java/util/List
      51: areturn

  public abstract java.lang.String getFileName();

  protected abstract java.io.Reader getReader() throws java.lang.Exception;

  protected java.util.List<java.lang.String> load();
    Code:
       0: new           #48                 // class java/io/LineNumberReader
       3: dup
       4: aload_0
       5: invokevirtual #50                 // Method getReader:()Ljava/io/Reader;
       8: invokespecial #53                 // Method java/io/LineNumberReader."<init>":(Ljava/io/Reader;)V
      11: astore_1
      12: aconst_null
      13: astore_2
      14: new           #55                 // class java/util/ArrayList
      17: dup
      18: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
      21: astore_3
      22: aload_1
      23: invokevirtual #59                 // Method java/io/LineNumberReader.readLine:()Ljava/lang/String;
      26: dup
      27: astore        4
      29: ifnull        44
      32: aload_3
      33: aload         4
      35: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: goto          22
      44: aload_3
      45: astore        5
      47: aload_1
      48: ifnull        77
      51: aload_2
      52: ifnull        73
      55: aload_1
      56: invokevirtual #68                 // Method java/io/LineNumberReader.close:()V
      59: goto          77
      62: astore        6
      64: aload_2
      65: aload         6
      67: invokevirtual #72                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      70: goto          77
      73: aload_1
      74: invokevirtual #68                 // Method java/io/LineNumberReader.close:()V
      77: aload         5
      79: areturn
      80: astore_3
      81: aload_3
      82: astore_2
      83: aload_3
      84: athrow
      85: astore        7
      87: aload_1
      88: ifnull        117
      91: aload_2
      92: ifnull        113
      95: aload_1
      96: invokevirtual #68                 // Method java/io/LineNumberReader.close:()V
      99: goto          117
     102: astore        8
     104: aload_2
     105: aload         8
     107: invokevirtual #72                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     110: goto          117
     113: aload_1
     114: invokevirtual #68                 // Method java/io/LineNumberReader.close:()V
     117: aload         7
     119: athrow
     120: astore_1
     121: new           #74                 // class java/lang/IllegalStateException
     124: dup
     125: new           #76                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #79                 // String Problem while reading
     134: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_0
     138: invokevirtual #85                 // Method getFileName:()Ljava/lang/String;
     141: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #87                 // String :
     146: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_1
     150: invokevirtual #90                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     153: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: aload_1
     160: invokespecial #96                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     163: athrow
    Exception table:
       from    to  target type
          55    59    62   Class java/lang/Throwable
          14    47    80   Class java/lang/Throwable
          14    47    85   any
          95    99   102   Class java/lang/Throwable
          80    87    85   any
           0    77   120   Class java/lang/Exception
          80   120   120   Class java/lang/Exception
}
