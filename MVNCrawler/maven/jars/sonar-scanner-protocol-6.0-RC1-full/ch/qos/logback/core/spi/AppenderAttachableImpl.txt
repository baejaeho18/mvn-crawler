Compiled from "AppenderAttachableImpl.java"
public class ch.qos.logback.core.spi.AppenderAttachableImpl<E> implements ch.qos.logback.core.spi.AppenderAttachable<E> {
  private final java.util.concurrent.CopyOnWriteArrayList<ch.qos.logback.core.Appender<E>> appenderList;

  static final long START;

  public ch.qos.logback.core.spi.AppenderAttachableImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      15: return

  public void addAppender(ch.qos.logback.core.Appender<E>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #6                  // String Null argument disallowed
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      18: aload_1
      19: invokevirtual #8                  // Method java/util/concurrent/CopyOnWriteArrayList.addIfAbsent:(Ljava/lang/Object;)Z
      22: pop
      23: return

  public int appendLoopOnAppenders(E);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
       6: invokevirtual #9                  // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          44
      19: aload_3
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class ch/qos/logback/core/Appender
      28: astore        4
      30: aload         4
      32: aload_1
      33: invokeinterface #13,  2           // InterfaceMethod ch/qos/logback/core/Appender.doAppend:(Ljava/lang/Object;)V
      38: iinc          2, 1
      41: goto          10
      44: iload_2
      45: ireturn

  public java.util.Iterator<ch.qos.logback.core.Appender<E>> iteratorForAppenders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #14                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: areturn

  public ch.qos.logback.core.Appender<E> getAppender(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aconst_null
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      12: invokevirtual #9                  // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          56
      25: aload_3
      26: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #12                 // class ch/qos/logback/core/Appender
      34: astore        4
      36: aload_1
      37: aload         4
      39: invokeinterface #15,  1           // InterfaceMethod ch/qos/logback/core/Appender.getName:()Ljava/lang/String;
      44: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          53
      50: aload         4
      52: areturn
      53: goto          16
      56: aconst_null
      57: areturn

  public boolean isAttached(ch.qos.logback.core.Appender<E>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      10: invokevirtual #9                  // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          43
      23: aload_2
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #12                 // class ch/qos/logback/core/Appender
      32: astore_3
      33: aload_3
      34: aload_1
      35: if_acmpne     40
      38: iconst_1
      39: ireturn
      40: goto          14
      43: iconst_0
      44: ireturn

  public void detachAndStopAllAppenders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #9                  // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #12                 // class ch/qos/logback/core/Appender
      26: astore_2
      27: aload_2
      28: invokeinterface #17,  1           // InterfaceMethod ch/qos/logback/core/Appender.stop:()V
      33: goto          8
      36: aload_0
      37: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      40: invokevirtual #18                 // Method java/util/concurrent/CopyOnWriteArrayList.clear:()V
      43: return

  public boolean detachAppender(ch.qos.logback.core.Appender<E>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      10: aload_1
      11: invokevirtual #19                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      14: istore_2
      15: iload_2
      16: ireturn

  public boolean detachAppender(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_2
       8: aload_0
       9: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      12: invokevirtual #9                  // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          66
      25: aload_3
      26: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #12                 // class ch/qos/logback/core/Appender
      34: astore        4
      36: aload_1
      37: aload         4
      39: invokeinterface #15,  1           // InterfaceMethod ch/qos/logback/core/Appender.getName:()Ljava/lang/String;
      44: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          63
      50: aload_0
      51: getfield      #4                  // Field appenderList:Ljava/util/concurrent/CopyOnWriteArrayList;
      54: aload         4
      56: invokevirtual #19                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      59: istore_2
      60: goto          66
      63: goto          16
      66: iload_2
      67: ireturn

  static {};
    Code:
       0: invokestatic  #20                 // Method java/lang/System.currentTimeMillis:()J
       3: putstatic     #21                 // Field START:J
       6: return
}
