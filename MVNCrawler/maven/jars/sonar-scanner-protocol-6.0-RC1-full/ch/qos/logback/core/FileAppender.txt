Compiled from "FileAppender.java"
public class ch.qos.logback.core.FileAppender<E> extends ch.qos.logback.core.OutputStreamAppender<E> {
  protected boolean append;

  protected java.lang.String fileName;

  private boolean prudent;

  public ch.qos.logback.core.FileAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/OutputStreamAppender."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field append:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fileName:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field prudent:Z
      19: return

  public void setFile(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field fileName:Ljava/lang/String;
       9: goto          20
      12: aload_0
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      17: putfield      #3                  // Field fileName:Ljava/lang/String;
      20: return

  public boolean isAppend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field append:Z
       4: ireturn

  public final java.lang.String rawFileProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: areturn

  public java.lang.String getFile();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #6                  // Method getFile:()Ljava/lang/String;
       6: ifnull        127
       9: aload_0
      10: new           #7                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #9                  // String File property is set to [
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #3                  // Field fileName:Ljava/lang/String;
      26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #11                 // String ]
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #13                 // Method addInfo:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #4                  // Field prudent:Z
      44: ifeq          65
      47: aload_0
      48: invokevirtual #14                 // Method isAppend:()Z
      51: ifne          65
      54: aload_0
      55: iconst_1
      56: invokevirtual #15                 // Method setAppend:(Z)V
      59: aload_0
      60: ldc           #16                 // String Setting \"Append\" property to true on account of \"Prudent\" mode
      62: invokevirtual #17                 // Method addWarn:(Ljava/lang/String;)V
      65: aload_0
      66: aload_0
      67: invokevirtual #6                  // Method getFile:()Ljava/lang/String;
      70: invokevirtual #18                 // Method openFile:(Ljava/lang/String;)V
      73: goto          161
      76: astore_2
      77: iinc          1, 1
      80: aload_0
      81: new           #7                  // class java/lang/StringBuilder
      84: dup
      85: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #20                 // String openFile(
      90: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #3                  // Field fileName:Ljava/lang/String;
      97: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #21                 // String ,
     102: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #2                  // Field append:Z
     109: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     112: ldc           #23                 // String ) call failed.
     114: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: aload_2
     121: invokevirtual #24                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     124: goto          161
     127: iinc          1, 1
     130: aload_0
     131: new           #7                  // class java/lang/StringBuilder
     134: dup
     135: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #25                 // String \"File\" property not set for appender named [
     140: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_0
     144: getfield      #26                 // Field name:Ljava/lang/String;
     147: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: ldc           #27                 // String ].
     152: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokevirtual #28                 // Method addError:(Ljava/lang/String;)V
     161: iload_1
     162: ifne          169
     165: aload_0
     166: invokespecial #29                 // Method ch/qos/logback/core/OutputStreamAppender.start:()V
     169: return
    Exception table:
       from    to  target type
          65    73    76   Class java/io/IOException

  public void openFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #31                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: new           #32                 // class java/io/File
      10: dup
      11: aload_1
      12: invokespecial #33                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      15: astore_2
      16: aload_2
      17: invokestatic  #34                 // Method ch/qos/logback/core/util/FileUtil.createMissingParentDirectories:(Ljava/io/File;)Z
      20: istore_3
      21: iload_3
      22: ifne          56
      25: aload_0
      26: new           #7                  // class java/lang/StringBuilder
      29: dup
      30: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #35                 // String Failed to create parent directories for [
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #36                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      42: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #11                 // String ]
      47: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #28                 // Method addError:(Ljava/lang/String;)V
      56: new           #37                 // class ch/qos/logback/core/recovery/ResilientFileOutputStream
      59: dup
      60: aload_2
      61: aload_0
      62: getfield      #2                  // Field append:Z
      65: invokespecial #38                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream."<init>":(Ljava/io/File;Z)V
      68: astore        4
      70: aload         4
      72: aload_0
      73: getfield      #39                 // Field context:Lch/qos/logback/core/Context;
      76: invokevirtual #40                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.setContext:(Lch/qos/logback/core/Context;)V
      79: aload_0
      80: aload         4
      82: invokevirtual #41                 // Method setOutputStream:(Ljava/io/OutputStream;)V
      85: aload_0
      86: getfield      #30                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      89: invokevirtual #42                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      92: goto          107
      95: astore        5
      97: aload_0
      98: getfield      #30                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     101: invokevirtual #42                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     104: aload         5
     106: athrow
     107: return
    Exception table:
       from    to  target type
           7    85    95   any
          95    97    95   any

  public boolean isPrudent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field prudent:Z
       4: ireturn

  public void setPrudent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field prudent:Z
       5: return

  public void setAppend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field append:Z
       5: return

  private void safeWrite(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getOutputStream:()Ljava/io/OutputStream;
       4: checkcast     #37                 // class ch/qos/logback/core/recovery/ResilientFileOutputStream
       7: astore_2
       8: aload_2
       9: invokevirtual #44                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
      12: astore_3
      13: aload_3
      14: ifnonnull     18
      17: return
      18: invokestatic  #45                 // Method java/lang/Thread.interrupted:()Z
      21: istore        4
      23: aconst_null
      24: astore        5
      26: aload_3
      27: invokevirtual #46                 // Method java/nio/channels/FileChannel.lock:()Ljava/nio/channels/FileLock;
      30: astore        5
      32: aload_3
      33: invokevirtual #47                 // Method java/nio/channels/FileChannel.position:()J
      36: lstore        6
      38: aload_3
      39: invokevirtual #48                 // Method java/nio/channels/FileChannel.size:()J
      42: lstore        8
      44: lload         8
      46: lload         6
      48: lcmp
      49: ifeq          59
      52: aload_3
      53: lload         8
      55: invokevirtual #49                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      58: pop
      59: aload_0
      60: aload_1
      61: invokespecial #50                 // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      64: aload         5
      66: ifnull        82
      69: aload         5
      71: invokevirtual #51                 // Method java/nio/channels/FileLock.isValid:()Z
      74: ifeq          82
      77: aload         5
      79: invokevirtual #52                 // Method java/nio/channels/FileLock.release:()V
      82: iload         4
      84: ifeq          170
      87: invokestatic  #53                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      90: invokevirtual #54                 // Method java/lang/Thread.interrupt:()V
      93: goto          170
      96: astore        6
      98: aload_2
      99: aload         6
     101: invokevirtual #55                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.postIOFailure:(Ljava/io/IOException;)V
     104: aload         5
     106: ifnull        122
     109: aload         5
     111: invokevirtual #51                 // Method java/nio/channels/FileLock.isValid:()Z
     114: ifeq          122
     117: aload         5
     119: invokevirtual #52                 // Method java/nio/channels/FileLock.release:()V
     122: iload         4
     124: ifeq          170
     127: invokestatic  #53                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     130: invokevirtual #54                 // Method java/lang/Thread.interrupt:()V
     133: goto          170
     136: astore        10
     138: aload         5
     140: ifnull        156
     143: aload         5
     145: invokevirtual #51                 // Method java/nio/channels/FileLock.isValid:()Z
     148: ifeq          156
     151: aload         5
     153: invokevirtual #52                 // Method java/nio/channels/FileLock.release:()V
     156: iload         4
     158: ifeq          167
     161: invokestatic  #53                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     164: invokevirtual #54                 // Method java/lang/Thread.interrupt:()V
     167: aload         10
     169: athrow
     170: return
    Exception table:
       from    to  target type
          26    64    96   Class java/io/IOException
          26    64   136   any
          96   104   136   any
         136   138   136   any

  protected void writeOut(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field prudent:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #56                 // Method safeWrite:(Ljava/lang/Object;)V
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokespecial #50                 // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      20: return
}
