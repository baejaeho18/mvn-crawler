Compiled from "AsyncAppender.java"
public class ch.qos.logback.classic.AsyncAppender extends ch.qos.logback.core.AsyncAppenderBase<ch.qos.logback.classic.spi.ILoggingEvent> {
  boolean includeCallerData;

  public ch.qos.logback.classic.AsyncAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/AsyncAppenderBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field includeCallerData:Z
       9: return

  protected boolean isDiscardable(ch.qos.logback.classic.spi.ILoggingEvent);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLevel:()Lch/qos/logback/classic/Level;
       6: astore_2
       7: aload_2
       8: invokevirtual #4                  // Method ch/qos/logback/classic/Level.toInt:()I
      11: sipush        20000
      14: if_icmpgt     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  protected void preprocess(ch.qos.logback.classic.spi.ILoggingEvent);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.prepareForDeferredProcessing:()V
       6: aload_0
       7: getfield      #2                  // Field includeCallerData:Z
      10: ifeq          20
      13: aload_1
      14: invokeinterface #6,  1            // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getCallerData:()[Ljava/lang/StackTraceElement;
      19: pop
      20: return

  public boolean isIncludeCallerData();
    Code:
       0: aload_0
       1: getfield      #2                  // Field includeCallerData:Z
       4: ireturn

  public void setIncludeCallerData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field includeCallerData:Z
       5: return

  protected void preprocess(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class ch/qos/logback/classic/spi/ILoggingEvent
       5: invokevirtual #8                  // Method preprocess:(Lch/qos/logback/classic/spi/ILoggingEvent;)V
       8: return

  protected boolean isDiscardable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class ch/qos/logback/classic/spi/ILoggingEvent
       5: invokevirtual #9                  // Method isDiscardable:(Lch/qos/logback/classic/spi/ILoggingEvent;)Z
       8: ireturn
}
