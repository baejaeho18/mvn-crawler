Compiled from "SyslogAppender.java"
public class ch.qos.logback.classic.net.SyslogAppender extends ch.qos.logback.core.net.SyslogAppenderBase<ch.qos.logback.classic.spi.ILoggingEvent> {
  public static final java.lang.String DEFAULT_SUFFIX_PATTERN;

  public static final java.lang.String DEFAULT_STACKTRACE_PATTERN;

  ch.qos.logback.classic.PatternLayout stackTraceLayout;

  java.lang.String stackTracePattern;

  boolean throwableExcluded;

  public ch.qos.logback.classic.net.SyslogAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/net/SyslogAppenderBase."<init>":()V
       4: aload_0
       5: new           #2                  // class ch/qos/logback/classic/PatternLayout
       8: dup
       9: invokespecial #3                  // Method ch/qos/logback/classic/PatternLayout."<init>":()V
      12: putfield      #4                  // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      15: aload_0
      16: ldc           #5                  // String \t
      18: putfield      #6                  // Field stackTracePattern:Ljava/lang/String;
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field throwableExcluded:Z
      26: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method ch/qos/logback/core/net/SyslogAppenderBase.start:()V
       4: aload_0
       5: invokespecial #9                  // Method setupStackTraceLayout:()V
       8: return

  java.lang.String getPrefixPattern();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String %syslogStart{
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #14                 // Method getFacility:()Ljava/lang/String;
      16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #15                 // String }%nopex{}
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public ch.qos.logback.core.net.SyslogOutputStream createOutputStream() throws java.net.SocketException, java.net.UnknownHostException;
    Code:
       0: new           #17                 // class ch/qos/logback/core/net/SyslogOutputStream
       3: dup
       4: aload_0
       5: invokevirtual #18                 // Method getSyslogHost:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #19                 // Method getPort:()I
      12: invokespecial #20                 // Method ch/qos/logback/core/net/SyslogOutputStream."<init>":(Ljava/lang/String;I)V
      15: areturn

  public int getSeverityForEvent(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #21                 // class ch/qos/logback/classic/spi/ILoggingEvent
       4: astore_2
       5: aload_2
       6: invokestatic  #22                 // Method ch/qos/logback/classic/util/LevelToSyslogSeverity.convert:(Lch/qos/logback/classic/spi/ILoggingEvent;)I
       9: ireturn

  protected void postProcess(java.lang.Object, java.io.OutputStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field throwableExcluded:Z
       4: ifeq          8
       7: return
       8: aload_1
       9: checkcast     #21                 // class ch/qos/logback/classic/spi/ILoggingEvent
      12: astore_3
      13: aload_3
      14: invokeinterface #23,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThrowableProxy:()Lch/qos/logback/classic/spi/IThrowableProxy;
      19: astore        4
      21: aload         4
      23: ifnonnull     27
      26: return
      27: aload_0
      28: getfield      #4                  // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      31: aload_3
      32: invokevirtual #24                 // Method ch/qos/logback/classic/PatternLayout.doLayout:(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/lang/String;
      35: astore        5
      37: iconst_1
      38: istore        6
      40: aload         4
      42: ifnull        158
      45: aload         4
      47: invokeinterface #25,  1           // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getStackTraceElementProxyArray:()[Lch/qos/logback/classic/spi/StackTraceElementProxy;
      52: astore        7
      54: aload_0
      55: aload_2
      56: aload         4
      58: aload         5
      60: iload         6
      62: invokespecial #26                 // Method handleThrowableFirstLine:(Ljava/io/OutputStream;Lch/qos/logback/classic/spi/IThrowableProxy;Ljava/lang/String;Z)V
      65: iconst_0
      66: istore        6
      68: aload         7
      70: astore        8
      72: aload         8
      74: arraylength
      75: istore        9
      77: iconst_0
      78: istore        10
      80: iload         10
      82: iload         9
      84: if_icmpge     138
      87: aload         8
      89: iload         10
      91: aaload
      92: astore        11
      94: new           #10                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     101: astore        12
     103: aload         12
     105: aload         5
     107: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload         11
     112: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: pop
     116: aload_2
     117: aload         12
     119: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokevirtual #28                 // Method java/lang/String.getBytes:()[B
     125: invokevirtual #29                 // Method java/io/OutputStream.write:([B)V
     128: aload_2
     129: invokevirtual #30                 // Method java/io/OutputStream.flush:()V
     132: iinc          10, 1
     135: goto          80
     138: goto          146
     141: astore        8
     143: goto          158
     146: aload         4
     148: invokeinterface #32,  1           // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getCause:()Lch/qos/logback/classic/spi/IThrowableProxy;
     153: astore        4
     155: goto          40
     158: return
    Exception table:
       from    to  target type
          54   138   141   Class java/io/IOException

  private void handleThrowableFirstLine(java.io.OutputStream, ch.qos.logback.classic.spi.IThrowableProxy, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_3
       8: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: astore        5
      13: iload         4
      15: ifne          26
      18: aload         5
      20: ldc           #33                 // String Caused by:
      22: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload         5
      28: aload_2
      29: invokeinterface #34,  1           // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getClassName:()Ljava/lang/String;
      34: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #35                 // String :
      39: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokeinterface #36,  1           // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getMessage:()Ljava/lang/String;
      48: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: aload         5
      55: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokevirtual #28                 // Method java/lang/String.getBytes:()[B
      61: invokevirtual #29                 // Method java/io/OutputStream.write:([B)V
      64: aload_1
      65: invokevirtual #30                 // Method java/io/OutputStream.flush:()V
      68: return

  boolean stackTraceHeaderLine(java.lang.StringBuilder, boolean);
    Code:
       0: iconst_0
       1: ireturn

  public ch.qos.logback.core.Layout<ch.qos.logback.classic.spi.ILoggingEvent> buildLayout();
    Code:
       0: new           #2                  // class ch/qos/logback/classic/PatternLayout
       3: dup
       4: invokespecial #3                  // Method ch/qos/logback/classic/PatternLayout."<init>":()V
       7: astore_1
       8: aload_1
       9: invokevirtual #37                 // Method ch/qos/logback/classic/PatternLayout.getInstanceConverterMap:()Ljava/util/Map;
      12: ldc           #38                 // String syslogStart
      14: ldc_w         #39                 // class ch/qos/logback/classic/pattern/SyslogStartConverter
      17: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: getfield      #42                 // Field suffixPattern:Ljava/lang/String;
      30: ifnonnull     39
      33: aload_0
      34: ldc           #43                 // String [%thread] %logger %msg
      36: putfield      #42                 // Field suffixPattern:Ljava/lang/String;
      39: aload_1
      40: new           #10                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_0
      48: invokevirtual #44                 // Method getPrefixPattern:()Ljava/lang/String;
      51: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #42                 // Field suffixPattern:Ljava/lang/String;
      58: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokevirtual #45                 // Method ch/qos/logback/classic/PatternLayout.setPattern:(Ljava/lang/String;)V
      67: aload_1
      68: aload_0
      69: invokevirtual #46                 // Method getContext:()Lch/qos/logback/core/Context;
      72: invokevirtual #47                 // Method ch/qos/logback/classic/PatternLayout.setContext:(Lch/qos/logback/core/Context;)V
      75: aload_1
      76: invokevirtual #48                 // Method ch/qos/logback/classic/PatternLayout.start:()V
      79: aload_1
      80: areturn

  private void setupStackTraceLayout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
       4: invokevirtual #37                 // Method ch/qos/logback/classic/PatternLayout.getInstanceConverterMap:()Ljava/util/Map;
       7: ldc           #38                 // String syslogStart
       9: ldc_w         #39                 // class ch/qos/logback/classic/pattern/SyslogStartConverter
      12: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      15: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: getfield      #4                  // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      25: new           #10                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      32: aload_0
      33: invokevirtual #44                 // Method getPrefixPattern:()Ljava/lang/String;
      36: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #6                  // Field stackTracePattern:Ljava/lang/String;
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokevirtual #45                 // Method ch/qos/logback/classic/PatternLayout.setPattern:(Ljava/lang/String;)V
      52: aload_0
      53: getfield      #4                  // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      56: aload_0
      57: invokevirtual #46                 // Method getContext:()Lch/qos/logback/core/Context;
      60: invokevirtual #47                 // Method ch/qos/logback/classic/PatternLayout.setContext:(Lch/qos/logback/core/Context;)V
      63: aload_0
      64: getfield      #4                  // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      67: invokevirtual #48                 // Method ch/qos/logback/classic/PatternLayout.start:()V
      70: return

  public boolean isThrowableExcluded();
    Code:
       0: aload_0
       1: getfield      #7                  // Field throwableExcluded:Z
       4: ireturn

  public void setThrowableExcluded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field throwableExcluded:Z
       5: return

  public java.lang.String getStackTracePattern();
    Code:
       0: aload_0
       1: getfield      #6                  // Field stackTracePattern:Ljava/lang/String;
       4: areturn

  public void setStackTracePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field stackTracePattern:Ljava/lang/String;
       5: return
}
