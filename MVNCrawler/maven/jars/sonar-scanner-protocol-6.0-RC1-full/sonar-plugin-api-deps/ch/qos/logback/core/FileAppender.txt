Compiled from "FileAppender.java"
public class ch.qos.logback.core.FileAppender<E> extends ch.qos.logback.core.OutputStreamAppender<E> {
  protected boolean append;

  protected java.lang.String fileName;

  private boolean prudent;

  public ch.qos.logback.core.FileAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/OutputStreamAppender."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field append:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fileName:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field prudent:Z
      19: return

  public void setFile(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field fileName:Ljava/lang/String;
       9: goto          20
      12: aload_0
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      17: putfield      #3                  // Field fileName:Ljava/lang/String;
      20: return

  public boolean isAppend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field append:Z
       4: ireturn

  public final java.lang.String rawFileProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: areturn

  public java.lang.String getFile();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #6                  // Method getFile:()Ljava/lang/String;
       6: ifnull        127
       9: aload_0
      10: new           #7                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #9                  // String File property is set to [
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #3                  // Field fileName:Ljava/lang/String;
      26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #11                 // String ]
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #13                 // Method addInfo:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #4                  // Field prudent:Z
      44: ifeq          65
      47: aload_0
      48: invokevirtual #14                 // Method isAppend:()Z
      51: ifne          65
      54: aload_0
      55: iconst_1
      56: invokevirtual #15                 // Method setAppend:(Z)V
      59: aload_0
      60: ldc           #16                 // String Setting \"Append\" property to true on account of \"Prudent\" mode
      62: invokevirtual #17                 // Method addWarn:(Ljava/lang/String;)V
      65: aload_0
      66: aload_0
      67: invokevirtual #6                  // Method getFile:()Ljava/lang/String;
      70: invokevirtual #18                 // Method openFile:(Ljava/lang/String;)V
      73: goto          161
      76: astore_2
      77: iinc          1, 1
      80: aload_0
      81: new           #7                  // class java/lang/StringBuilder
      84: dup
      85: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #20                 // String openFile(
      90: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #3                  // Field fileName:Ljava/lang/String;
      97: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #21                 // String ,
     102: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #2                  // Field append:Z
     109: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     112: ldc           #23                 // String ) call failed.
     114: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: aload_2
     121: invokevirtual #24                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     124: goto          161
     127: iinc          1, 1
     130: aload_0
     131: new           #7                  // class java/lang/StringBuilder
     134: dup
     135: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #25                 // String \"File\" property not set for appender named [
     140: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_0
     144: getfield      #26                 // Field name:Ljava/lang/String;
     147: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: ldc           #27                 // String ].
     152: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokevirtual #28                 // Method addError:(Ljava/lang/String;)V
     161: iload_1
     162: ifne          169
     165: aload_0
     166: invokespecial #29                 // Method ch/qos/logback/core/OutputStreamAppender.start:()V
     169: return
    Exception table:
       from    to  target type
          65    73    76   Class java/io/IOException

  public void openFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #31                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: new           #32                 // class java/io/File
      10: dup
      11: aload_1
      12: invokespecial #33                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      15: astore_2
      16: aload_2
      17: invokestatic  #34                 // Method ch/qos/logback/core/util/FileUtil.isParentDirectoryCreationRequired:(Ljava/io/File;)Z
      20: ifeq          63
      23: aload_2
      24: invokestatic  #35                 // Method ch/qos/logback/core/util/FileUtil.createMissingParentDirectories:(Ljava/io/File;)Z
      27: istore_3
      28: iload_3
      29: ifne          63
      32: aload_0
      33: new           #7                  // class java/lang/StringBuilder
      36: dup
      37: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #36                 // String Failed to create parent directories for [
      42: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #37                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      49: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #11                 // String ]
      54: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokevirtual #28                 // Method addError:(Ljava/lang/String;)V
      63: new           #38                 // class ch/qos/logback/core/recovery/ResilientFileOutputStream
      66: dup
      67: aload_2
      68: aload_0
      69: getfield      #2                  // Field append:Z
      72: invokespecial #39                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream."<init>":(Ljava/io/File;Z)V
      75: astore_3
      76: aload_3
      77: aload_0
      78: getfield      #40                 // Field context:Lch/qos/logback/core/Context;
      81: invokevirtual #41                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.setContext:(Lch/qos/logback/core/Context;)V
      84: aload_0
      85: aload_3
      86: invokevirtual #42                 // Method setOutputStream:(Ljava/io/OutputStream;)V
      89: aload_0
      90: getfield      #30                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      93: invokevirtual #43                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      96: goto          111
      99: astore        4
     101: aload_0
     102: getfield      #30                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     105: invokevirtual #43                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     108: aload         4
     110: athrow
     111: return
    Exception table:
       from    to  target type
           7    89    99   any
          99   101    99   any

  public boolean isPrudent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field prudent:Z
       4: ireturn

  public void setPrudent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field prudent:Z
       5: return

  public void setAppend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field append:Z
       5: return

  private void safeWrite(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getOutputStream:()Ljava/io/OutputStream;
       4: checkcast     #38                 // class ch/qos/logback/core/recovery/ResilientFileOutputStream
       7: astore_2
       8: aload_2
       9: invokevirtual #45                 // Method ch/qos/logback/core/recovery/ResilientFileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
      12: astore_3
      13: aload_3
      14: ifnonnull     18
      17: return
      18: aconst_null
      19: astore        4
      21: aload_3
      22: invokevirtual #46                 // Method java/nio/channels/FileChannel.lock:()Ljava/nio/channels/FileLock;
      25: astore        4
      27: aload_3
      28: invokevirtual #47                 // Method java/nio/channels/FileChannel.position:()J
      31: lstore        5
      33: aload_3
      34: invokevirtual #48                 // Method java/nio/channels/FileChannel.size:()J
      37: lstore        7
      39: lload         7
      41: lload         5
      43: lcmp
      44: ifeq          54
      47: aload_3
      48: lload         7
      50: invokevirtual #49                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      53: pop
      54: aload_0
      55: aload_1
      56: invokespecial #50                 // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      59: aload         4
      61: ifnull        87
      64: aload         4
      66: invokevirtual #51                 // Method java/nio/channels/FileLock.release:()V
      69: goto          87
      72: astore        9
      74: aload         4
      76: ifnull        84
      79: aload         4
      81: invokevirtual #51                 // Method java/nio/channels/FileLock.release:()V
      84: aload         9
      86: athrow
      87: return
    Exception table:
       from    to  target type
          21    59    72   any
          72    74    72   any

  protected void writeOut(E) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field prudent:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #52                 // Method safeWrite:(Ljava/lang/Object;)V
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokespecial #50                 // Method ch/qos/logback/core/OutputStreamAppender.writeOut:(Ljava/lang/Object;)V
      20: return
}
