Compiled from "Node.java"
public interface org.dom4j.Node extends java.lang.Cloneable {
  public static final short ANY_NODE;

  public static final short ELEMENT_NODE;

  public static final short ATTRIBUTE_NODE;

  public static final short TEXT_NODE;

  public static final short CDATA_SECTION_NODE;

  public static final short ENTITY_REFERENCE_NODE;

  public static final short PROCESSING_INSTRUCTION_NODE;

  public static final short COMMENT_NODE;

  public static final short DOCUMENT_NODE;

  public static final short DOCUMENT_TYPE_NODE;

  public static final short NAMESPACE_NODE;

  public static final short UNKNOWN_NODE;

  public static final short MAX_NODE_TYPE;

  public abstract boolean supportsParent();

  public abstract org.dom4j.Element getParent();

  public abstract void setParent(org.dom4j.Element);

  public abstract org.dom4j.Document getDocument();

  public abstract void setDocument(org.dom4j.Document);

  public abstract boolean isReadOnly();

  public abstract boolean hasContent();

  public abstract java.lang.String getName();

  public abstract void setName(java.lang.String);

  public abstract java.lang.String getText();

  public abstract void setText(java.lang.String);

  public abstract java.lang.String getStringValue();

  public abstract java.lang.String getPath();

  public abstract java.lang.String getPath(org.dom4j.Element);

  public abstract java.lang.String getUniquePath();

  public abstract java.lang.String getUniquePath(org.dom4j.Element);

  public abstract java.lang.String asXML();

  public abstract void write(java.io.Writer) throws java.io.IOException;

  public abstract short getNodeType();

  public abstract java.lang.String getNodeTypeName();

  public abstract org.dom4j.Node detach();

  public abstract java.util.List selectNodes(java.lang.String);

  public abstract java.lang.Object selectObject(java.lang.String);

  public abstract java.util.List selectNodes(java.lang.String, java.lang.String);

  public abstract java.util.List selectNodes(java.lang.String, java.lang.String, boolean);

  public abstract org.dom4j.Node selectSingleNode(java.lang.String);

  public abstract java.lang.String valueOf(java.lang.String);

  public abstract java.lang.Number numberValueOf(java.lang.String);

  public abstract boolean matches(java.lang.String);

  public abstract org.dom4j.XPath createXPath(java.lang.String) throws org.dom4j.InvalidXPathException;

  public abstract org.dom4j.Node asXPathResult(org.dom4j.Element);

  public abstract void accept(org.dom4j.Visitor);

  public abstract java.lang.Object clone();
}
