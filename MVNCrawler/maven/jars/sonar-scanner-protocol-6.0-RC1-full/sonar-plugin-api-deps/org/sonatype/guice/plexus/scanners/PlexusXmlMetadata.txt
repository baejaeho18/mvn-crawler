Compiled from "PlexusXmlMetadata.java"
final class org.sonatype.guice.plexus.scanners.PlexusXmlMetadata implements org.sonatype.guice.plexus.config.PlexusBeanMetadata {
  private java.util.Map<java.lang.String, org.codehaus.plexus.component.annotations.Configuration> configurationMap;

  private java.util.Map<java.lang.String, org.codehaus.plexus.component.annotations.Requirement> requirementMap;

  org.sonatype.guice.plexus.scanners.PlexusXmlMetadata(java.util.Map<java.lang.String, org.codehaus.plexus.component.annotations.Configuration>, java.util.Map<java.lang.String, org.codehaus.plexus.component.annotations.Requirement>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #3                  // Field configurationMap:Ljava/util/Map;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      15: putfield      #4                  // Field requirementMap:Ljava/util/Map;
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #5                  // Method merge:(Ljava/util/Map;Ljava/util/Map;)V
      24: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field configurationMap:Ljava/util/Map;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          28
      12: aload_0
      13: getfield      #4                  // Field requirementMap:Ljava/util/Map;
      16: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public org.codehaus.plexus.component.annotations.Configuration getConfiguration(org.sonatype.guice.bean.reflect.BeanProperty<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field configurationMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod org/sonatype/guice/bean/reflect/BeanProperty.getName:()Ljava/lang/String;
      10: invokeinterface #8,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #9                  // class org/codehaus/plexus/component/annotations/Configuration
      18: areturn

  public org.codehaus.plexus.component.annotations.Requirement getRequirement(org.sonatype.guice.bean.reflect.BeanProperty<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requirementMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod org/sonatype/guice/bean/reflect/BeanProperty.getName:()Ljava/lang/String;
      10: invokeinterface #8,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #10                 // class org/codehaus/plexus/component/annotations/Requirement
      18: astore_2
      19: aconst_null
      20: aload_2
      21: if_acmpne     49
      24: aload_0
      25: getfield      #4                  // Field requirementMap:Ljava/util/Map;
      28: aload_1
      29: invokeinterface #11,  1           // InterfaceMethod org/sonatype/guice/bean/reflect/BeanProperty.getType:()Lcom/google/inject/TypeLiteral;
      34: invokevirtual #12                 // Method com/google/inject/TypeLiteral.getRawType:()Ljava/lang/Class;
      37: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      40: invokeinterface #8,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #10                 // class org/codehaus/plexus/component/annotations/Requirement
      48: astore_2
      49: aload_2
      50: areturn

  void merge(java.util.Map<java.lang.String, org.codehaus.plexus.component.annotations.Configuration>, java.util.Map<java.lang.String, org.codehaus.plexus.component.annotations.Requirement>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field configurationMap:Ljava/util/Map;
       5: aload_1
       6: invokestatic  #14                 // Method addIfMissing:(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
       9: putfield      #3                  // Field configurationMap:Ljava/util/Map;
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field requirementMap:Ljava/util/Map;
      17: aload_2
      18: invokestatic  #14                 // Method addIfMissing:(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
      21: putfield      #4                  // Field requirementMap:Ljava/util/Map;
      24: return

  private static <K, V> java.util.Map<K, V> addIfMissing(java.util.Map<K, V>, java.util.Map<K, V>);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          11
       9: aload_0
      10: areturn
      11: aload_0
      12: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      17: ifeq          22
      20: aload_1
      21: areturn
      22: new           #15                 // class java/util/HashMap
      25: dup
      26: aload_1
      27: invokespecial #16                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      30: astore_2
      31: aload_2
      32: aload_0
      33: invokeinterface #17,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      38: aload_2
      39: areturn
}
