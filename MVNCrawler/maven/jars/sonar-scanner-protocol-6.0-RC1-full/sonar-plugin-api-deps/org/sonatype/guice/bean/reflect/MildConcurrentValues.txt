Compiled from "MildValues.java"
final class org.sonatype.guice.bean.reflect.MildConcurrentValues<K, V> extends org.sonatype.guice.bean.reflect.MildValues<K, V> implements java.util.concurrent.ConcurrentMap<K, V> {
  private final java.util.concurrent.ConcurrentMap<K, java.lang.ref.Reference<V>> concurrentMap;

  org.sonatype.guice.bean.reflect.MildConcurrentValues(java.util.concurrent.ConcurrentMap<K, java.lang.ref.Reference<V>>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/sonatype/guice/bean/reflect/MildValues."<init>":(Ljava/util/Map;Z)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
      11: return

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #4                  // Method mildValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
      10: astore_3
      11: aload_0
      12: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
      15: aload_1
      16: aload_3
      17: invokeinterface #5,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #6                  // class java/lang/ref/Reference
      25: dup
      26: astore        4
      28: ifnull        63
      31: aload         4
      33: invokevirtual #7                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      36: astore        5
      38: aconst_null
      39: aload         5
      41: if_acmpeq     47
      44: aload         5
      46: areturn
      47: aload_0
      48: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
      51: aload_1
      52: aload         4
      54: invokeinterface #8,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: pop
      60: goto          11
      63: aconst_null
      64: areturn

  public V replace(K, V);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #4                  // Method mildValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
      15: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #6                  // class java/lang/ref/Reference
      23: astore_3
      24: aconst_null
      25: aload_3
      26: if_acmpeq     36
      29: aload_3
      30: invokevirtual #7                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      33: goto          37
      36: aconst_null
      37: areturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: aload_0
      10: aconst_null
      11: aload_2
      12: invokevirtual #4                  // Method mildValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
      15: aload_0
      16: aload_1
      17: aload_3
      18: invokevirtual #4                  // Method mildValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
      21: invokeinterface #10,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ireturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: aload_2
      10: invokestatic  #11                 // Method tempValue:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      13: invokeinterface #8,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ireturn

  void compact();
    Code:
       0: aload_0
       1: getfield      #12                 // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #13                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: dup
       8: astore_1
       9: ifnull        35
      12: aload_0
      13: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
      16: aload_1
      17: checkcast     #14                 // class org/sonatype/guice/bean/reflect/MildValues$InverseMapping
      20: invokeinterface #15,  1           // InterfaceMethod org/sonatype/guice/bean/reflect/MildValues$InverseMapping.key:()Ljava/lang/Object;
      25: aload_1
      26: invokeinterface #8,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: pop
      32: goto          0
      35: return
}
