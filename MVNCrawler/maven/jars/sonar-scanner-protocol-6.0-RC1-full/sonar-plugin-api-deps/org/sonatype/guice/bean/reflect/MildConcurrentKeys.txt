Compiled from "MildKeys.java"
final class org.sonatype.guice.bean.reflect.MildConcurrentKeys<K, V> extends org.sonatype.guice.bean.reflect.MildKeys<K, V> implements java.util.concurrent.ConcurrentMap<K, V> {
  private final java.util.concurrent.ConcurrentMap<java.lang.ref.Reference<K>, V> concurrentMap;

  org.sonatype.guice.bean.reflect.MildConcurrentKeys(java.util.concurrent.ConcurrentMap<java.lang.ref.Reference<K>, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/sonatype/guice/bean/reflect/MildKeys."<init>":(Ljava/util/Map;Z)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
      11: return

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
       8: aload_0
       9: aload_1
      10: invokevirtual #4                  // Method mildKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      13: aload_2
      14: invokeinterface #5,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public V replace(K, V);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
       8: aload_0
       9: aload_1
      10: invokevirtual #4                  // Method mildKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      13: aload_2
      14: invokeinterface #6,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
       8: aload_0
       9: aload_1
      10: invokevirtual #4                  // Method mildKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      13: aload_2
      14: aload_3
      15: invokeinterface #7,  4            // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      20: ireturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method compact:()V
       4: aload_0
       5: getfield      #2                  // Field concurrentMap:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: invokestatic  #8                  // Method tempKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      12: aload_2
      13: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ireturn
}
