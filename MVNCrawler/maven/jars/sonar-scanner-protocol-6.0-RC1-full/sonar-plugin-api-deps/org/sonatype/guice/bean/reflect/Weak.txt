Compiled from "Weak.java"
public final class org.sonatype.guice.bean.reflect.Weak {
  private org.sonatype.guice.bean.reflect.Weak();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.util.Collection<T> elements();
    Code:
       0: bipush        10
       2: invokestatic  #2                  // Method elements:(I)Ljava/util/Collection;
       5: areturn

  public static <T> java.util.Collection<T> elements(int);
    Code:
       0: new           #3                  // class org/sonatype/guice/bean/reflect/MildElements
       3: dup
       4: new           #4                  // class java/util/ArrayList
       7: dup
       8: iload_0
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":(I)V
      12: iconst_0
      13: invokespecial #6                  // Method org/sonatype/guice/bean/reflect/MildElements."<init>":(Ljava/util/List;Z)V
      16: areturn

  public static <K, V> java.util.Map<K, V> keys();
    Code:
       0: bipush        16
       2: invokestatic  #7                  // Method keys:(I)Ljava/util/Map;
       5: areturn

  public static <K, V> java.util.Map<K, V> keys(int);
    Code:
       0: new           #8                  // class org/sonatype/guice/bean/reflect/MildKeys
       3: dup
       4: new           #9                  // class java/util/HashMap
       7: dup
       8: iload_0
       9: invokespecial #10                 // Method java/util/HashMap."<init>":(I)V
      12: iconst_0
      13: invokespecial #11                 // Method org/sonatype/guice/bean/reflect/MildKeys."<init>":(Ljava/util/Map;Z)V
      16: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> concurrentKeys();
    Code:
       0: bipush        16
       2: iconst_4
       3: invokestatic  #12                 // Method concurrentKeys:(II)Ljava/util/concurrent/ConcurrentMap;
       6: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> concurrentKeys(int, int);
    Code:
       0: new           #13                 // class org/sonatype/guice/bean/reflect/MildConcurrentKeys
       3: dup
       4: new           #14                 // class java/util/concurrent/ConcurrentHashMap
       7: dup
       8: iload_0
       9: ldc           #15                 // float 0.75f
      11: iload_1
      12: invokespecial #16                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      15: iconst_0
      16: invokespecial #17                 // Method org/sonatype/guice/bean/reflect/MildConcurrentKeys."<init>":(Ljava/util/concurrent/ConcurrentMap;Z)V
      19: areturn

  public static <K, V> java.util.Map<K, V> values();
    Code:
       0: bipush        16
       2: invokestatic  #18                 // Method values:(I)Ljava/util/Map;
       5: areturn

  public static <K, V> java.util.Map<K, V> values(int);
    Code:
       0: new           #19                 // class org/sonatype/guice/bean/reflect/MildValues
       3: dup
       4: new           #9                  // class java/util/HashMap
       7: dup
       8: iload_0
       9: invokespecial #10                 // Method java/util/HashMap."<init>":(I)V
      12: iconst_0
      13: invokespecial #20                 // Method org/sonatype/guice/bean/reflect/MildValues."<init>":(Ljava/util/Map;Z)V
      16: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> concurrentValues();
    Code:
       0: bipush        16
       2: iconst_4
       3: invokestatic  #21                 // Method concurrentValues:(II)Ljava/util/concurrent/ConcurrentMap;
       6: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> concurrentValues(int, int);
    Code:
       0: new           #22                 // class org/sonatype/guice/bean/reflect/MildConcurrentValues
       3: dup
       4: new           #14                 // class java/util/concurrent/ConcurrentHashMap
       7: dup
       8: iload_0
       9: ldc           #15                 // float 0.75f
      11: iload_1
      12: invokespecial #16                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      15: iconst_0
      16: invokespecial #23                 // Method org/sonatype/guice/bean/reflect/MildConcurrentValues."<init>":(Ljava/util/concurrent/ConcurrentMap;Z)V
      19: areturn
}
