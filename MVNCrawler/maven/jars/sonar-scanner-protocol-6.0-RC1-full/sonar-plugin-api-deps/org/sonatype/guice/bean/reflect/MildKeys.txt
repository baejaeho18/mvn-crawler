Compiled from "MildKeys.java"
class org.sonatype.guice.bean.reflect.MildKeys<K, V> implements java.util.Map<K, V> {
  private final java.lang.ref.ReferenceQueue<K> queue;

  private final java.util.Map<java.lang.ref.Reference<K>, V> map;

  private final boolean soft;

  org.sonatype.guice.bean.reflect.MildKeys(java.util.Map<java.lang.ref.Reference<K>, V>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field map:Ljava/util/Map;
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field soft:Z
      25: return

  public final boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #7                  // Method tempKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
       8: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ireturn

  public final boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public final V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #7                  // Method tempKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
       8: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public final V put(K, V);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: aload_0
       9: aload_1
      10: invokevirtual #12                 // Method mildKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      13: aload_2
      14: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public final void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: aload_1
       5: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          64
      25: aload_2
      26: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #18                 // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: getfield      #5                  // Field map:Ljava/util/Map;
      39: aload_0
      40: aload_3
      41: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: invokevirtual #12                 // Method mildKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      49: aload_3
      50: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: goto          16
      64: return

  public final V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokestatic  #7                  // Method tempKey:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      12: invokeinterface #21,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public final void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: invokevirtual #11                 // Method compact:()V
      13: return

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #23,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      13: ireturn

  public final int size();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #24,  1           // InterfaceMethod java/util/Map.size:()I
      13: ireturn

  public final java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: new           #25                 // class java/util/HashSet
       7: dup
       8: invokespecial #26                 // Method java/util/HashSet."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #5                  // Field map:Ljava/util/Map;
      16: invokeinterface #27,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      21: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          70
      36: aload_2
      37: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #28                 // class java/lang/ref/Reference
      45: astore_3
      46: aload_3
      47: invokevirtual #29                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      50: astore        4
      52: aconst_null
      53: aload         4
      55: if_acmpeq     67
      58: aload_1
      59: aload         4
      61: invokeinterface #30,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          27
      70: aload_1
      71: areturn

  public final java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #31,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: areturn

  public final java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method compact:()V
       4: new           #32                 // class java/util/HashMap
       7: dup
       8: invokespecial #33                 // Method java/util/HashMap."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #5                  // Field map:Ljava/util/Map;
      16: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      21: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          84
      36: aload_2
      37: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #18                 // class java/util/Map$Entry
      45: astore_3
      46: aload_3
      47: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: checkcast     #28                 // class java/lang/ref/Reference
      55: invokevirtual #29                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      58: astore        4
      60: aconst_null
      61: aload         4
      63: if_acmpeq     81
      66: aload_1
      67: aload         4
      69: aload_3
      70: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          27
      84: aload_1
      85: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      90: areturn

  final java.lang.ref.Reference<K> mildKey(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field soft:Z
       4: ifeq          22
       7: new           #34                 // class org/sonatype/guice/bean/reflect/MildKeys$Soft
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      16: invokespecial #35                 // Method org/sonatype/guice/bean/reflect/MildKeys$Soft."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      19: goto          34
      22: new           #36                 // class org/sonatype/guice/bean/reflect/MildKeys$Weak
      25: dup
      26: aload_1
      27: aload_0
      28: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      31: invokespecial #37                 // Method org/sonatype/guice/bean/reflect/MildKeys$Weak."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      34: areturn

  static final java.lang.ref.Reference<?> tempKey(java.lang.Object);
    Code:
       0: new           #36                 // class org/sonatype/guice/bean/reflect/MildKeys$Weak
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #37                 // Method org/sonatype/guice/bean/reflect/MildKeys$Weak."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       9: areturn

  final void compact();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #38                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: dup
       8: astore_1
       9: ifnull        26
      12: aload_0
      13: getfield      #5                  // Field map:Ljava/util/Map;
      16: aload_1
      17: invokeinterface #21,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: goto          0
      26: return
}
