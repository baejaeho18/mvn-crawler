Compiled from "MildValues.java"
class org.sonatype.guice.bean.reflect.MildValues<K, V> implements java.util.Map<K, V> {
  final java.lang.ref.ReferenceQueue<V> queue;

  private final java.util.Map<K, java.lang.ref.Reference<V>> map;

  private final boolean soft;

  org.sonatype.guice.bean.reflect.MildValues(java.util.Map<K, java.lang.ref.Reference<V>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field map:Ljava/util/Map;
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field soft:Z
      25: return

  public final boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public final boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #8                  // Method tempValue:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
       8: invokeinterface #9,  2            // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      13: ireturn

  public final V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/lang/ref/Reference
      13: astore_2
      14: aconst_null
      15: aload_2
      16: if_acmpeq     26
      19: aload_2
      20: invokevirtual #12                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      23: goto          27
      26: aconst_null
      27: areturn

  public final V put(K, V);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: aload_1
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #14                 // Method mildValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
      15: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #11                 // class java/lang/ref/Reference
      23: astore_3
      24: aconst_null
      25: aload_3
      26: if_acmpeq     36
      29: aload_3
      30: invokevirtual #12                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      33: goto          37
      36: aconst_null
      37: areturn

  public final void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: aload_1
       5: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          70
      25: aload_2
      26: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #20                 // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: getfield      #5                  // Field map:Ljava/util/Map;
      39: aload_3
      40: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      45: aload_0
      46: aload_3
      47: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: aload_3
      53: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: invokevirtual #14                 // Method mildValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
      61: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: goto          16
      70: return

  public final V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #11                 // class java/lang/ref/Reference
      17: astore_2
      18: aconst_null
      19: aload_2
      20: if_acmpeq     30
      23: aload_2
      24: invokevirtual #12                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      27: goto          31
      30: aconst_null
      31: areturn

  public final void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: invokevirtual #13                 // Method compact:()V
      13: return

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #25,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      13: ireturn

  public final int size();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #26,  1           // InterfaceMethod java/util/Map.size:()I
      13: ireturn

  public final java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #27,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: areturn

  public final java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: new           #28                 // class java/util/ArrayList
       7: dup
       8: invokespecial #29                 // Method java/util/ArrayList."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #5                  // Field map:Ljava/util/Map;
      16: invokeinterface #30,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      21: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          70
      36: aload_2
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #11                 // class java/lang/ref/Reference
      45: astore_3
      46: aload_3
      47: invokevirtual #12                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      50: astore        4
      52: aconst_null
      53: aload         4
      55: if_acmpeq     67
      58: aload_1
      59: aload         4
      61: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          27
      70: aload_1
      71: areturn

  public final java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method compact:()V
       4: new           #33                 // class java/util/HashMap
       7: dup
       8: invokespecial #34                 // Method java/util/HashMap."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #5                  // Field map:Ljava/util/Map;
      16: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          84
      36: aload_2
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #20                 // class java/util/Map$Entry
      45: astore_3
      46: aload_3
      47: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: checkcast     #11                 // class java/lang/ref/Reference
      55: invokevirtual #12                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      58: astore        4
      60: aconst_null
      61: aload         4
      63: if_acmpeq     81
      66: aload_1
      67: aload_3
      68: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      73: aload         4
      75: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          27
      84: aload_1
      85: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      90: areturn

  final java.lang.ref.Reference<V> mildValue(K, V);
    Code:
       0: aload_0
       1: getfield      #6                  // Field soft:Z
       4: ifeq          23
       7: new           #35                 // class org/sonatype/guice/bean/reflect/MildValues$Soft
      10: dup
      11: aload_1
      12: aload_2
      13: aload_0
      14: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      17: invokespecial #36                 // Method org/sonatype/guice/bean/reflect/MildValues$Soft."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      20: goto          36
      23: new           #37                 // class org/sonatype/guice/bean/reflect/MildValues$Weak
      26: dup
      27: aload_1
      28: aload_2
      29: aload_0
      30: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      33: invokespecial #38                 // Method org/sonatype/guice/bean/reflect/MildValues$Weak."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      36: areturn

  static final java.lang.ref.Reference<?> tempValue(java.lang.Object);
    Code:
       0: new           #37                 // class org/sonatype/guice/bean/reflect/MildValues$Weak
       3: dup
       4: aconst_null
       5: aload_0
       6: aconst_null
       7: invokespecial #38                 // Method org/sonatype/guice/bean/reflect/MildValues$Weak."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      10: areturn

  void compact();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #39                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: dup
       8: astore_1
       9: ifnull        50
      12: aload_1
      13: checkcast     #40                 // class org/sonatype/guice/bean/reflect/MildValues$InverseMapping
      16: invokeinterface #41,  1           // InterfaceMethod org/sonatype/guice/bean/reflect/MildValues$InverseMapping.key:()Ljava/lang/Object;
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field map:Ljava/util/Map;
      26: aload_2
      27: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: aload_1
      33: if_acmpne     47
      36: aload_0
      37: getfield      #5                  // Field map:Ljava/util/Map;
      40: aload_2
      41: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: goto          0
      50: return
}
