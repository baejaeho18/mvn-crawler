Compiled from "DefaultFileProcessor.java"
public class org.sonatype.aether.impl.internal.DefaultFileProcessor implements org.sonatype.aether.spi.io.FileProcessor {
  public org.sonatype.aether.impl.internal.DefaultFileProcessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static void close(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #2,  1            // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_1
      14: return
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  public boolean mkdirs(java.io.File);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #4                  // Method java/io/File.exists:()Z
      10: ifeq          15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: invokevirtual #5                  // Method java/io/File.mkdir:()Z
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: aconst_null
      25: astore_2
      26: aload_1
      27: invokevirtual #6                  // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      30: astore_2
      31: goto          37
      34: astore_3
      35: iconst_0
      36: ireturn
      37: aload_2
      38: invokevirtual #7                  // Method java/io/File.getParentFile:()Ljava/io/File;
      41: astore_3
      42: aload_3
      43: ifnull        72
      46: aload_0
      47: aload_3
      48: invokevirtual #8                  // Method mkdirs:(Ljava/io/File;)Z
      51: ifne          61
      54: aload_3
      55: invokevirtual #4                  // Method java/io/File.exists:()Z
      58: ifeq          72
      61: aload_2
      62: invokevirtual #5                  // Method java/io/File.mkdir:()Z
      65: ifeq          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: ireturn
    Exception table:
       from    to  target type
          26    31    34   Class java/io/IOException

  public void write(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method java/io/File.getParentFile:()Ljava/io/File;
       5: invokevirtual #8                  // Method mkdirs:(Ljava/io/File;)Z
       8: pop
       9: aconst_null
      10: astore_3
      11: new           #9                  // class java/io/FileOutputStream
      14: dup
      15: aload_1
      16: invokespecial #10                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      19: astore_3
      20: aload_2
      21: ifnull        34
      24: aload_3
      25: aload_2
      26: ldc           #11                 // String UTF-8
      28: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      31: invokevirtual #13                 // Method java/io/FileOutputStream.write:([B)V
      34: aload_3
      35: invokestatic  #14                 // Method close:(Ljava/io/Closeable;)V
      38: goto          50
      41: astore        4
      43: aload_3
      44: invokestatic  #14                 // Method close:(Ljava/io/Closeable;)V
      47: aload         4
      49: athrow
      50: return
    Exception table:
       from    to  target type
          11    34    41   any
          41    43    41   any

  public long copy(java.io.File, java.io.File, org.sonatype.aether.spi.io.FileProcessor$ProgressListener) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore        4
       3: aconst_null
       4: astore        6
       6: aconst_null
       7: astore        7
       9: new           #15                 // class java/io/FileInputStream
      12: dup
      13: aload_1
      14: invokespecial #16                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      17: astore        6
      19: aload_0
      20: aload_2
      21: invokevirtual #7                  // Method java/io/File.getParentFile:()Ljava/io/File;
      24: invokevirtual #8                  // Method mkdirs:(Ljava/io/File;)Z
      27: pop
      28: new           #17                 // class java/io/BufferedOutputStream
      31: dup
      32: new           #9                  // class java/io/FileOutputStream
      35: dup
      36: aload_2
      37: invokespecial #10                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      40: invokespecial #18                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      43: astore        7
      45: ldc           #19                 // int 32768
      47: invokestatic  #20                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      50: astore        8
      52: aload         8
      54: invokevirtual #21                 // Method java/nio/ByteBuffer.array:()[B
      57: astore        9
      59: aload         6
      61: aload         9
      63: invokevirtual #22                 // Method java/io/FileInputStream.read:([B)I
      66: istore        10
      68: iload         10
      70: ifge          76
      73: goto          133
      76: aload         7
      78: aload         9
      80: iconst_0
      81: iload         10
      83: invokevirtual #23                 // Method java/io/OutputStream.write:([BII)V
      86: lload         4
      88: iload         10
      90: i2l
      91: ladd
      92: lstore        4
      94: aload_3
      95: ifnull        130
      98: iload         10
     100: ifle          130
     103: aload         8
     105: invokevirtual #24                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     108: pop
     109: aload         8
     111: iload         10
     113: invokevirtual #25                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     116: pop
     117: aload_3
     118: aload         8
     120: invokeinterface #26,  2           // InterfaceMethod org/sonatype/aether/spi/io/FileProcessor$ProgressListener.progressed:(Ljava/nio/ByteBuffer;)V
     125: goto          130
     128: astore        11
     130: goto          59
     133: aload         6
     135: invokestatic  #14                 // Method close:(Ljava/io/Closeable;)V
     138: aload         7
     140: invokestatic  #14                 // Method close:(Ljava/io/Closeable;)V
     143: goto          161
     146: astore        12
     148: aload         6
     150: invokestatic  #14                 // Method close:(Ljava/io/Closeable;)V
     153: aload         7
     155: invokestatic  #14                 // Method close:(Ljava/io/Closeable;)V
     158: aload         12
     160: athrow
     161: lload         4
     163: lreturn
    Exception table:
       from    to  target type
         103   125   128   Class java/lang/Exception
           9   133   146   any
         146   148   146   any

  public void move(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #28                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
       5: ifne          30
       8: aload_0
       9: aload_1
      10: aload_2
      11: aconst_null
      12: invokevirtual #29                 // Method copy:(Ljava/io/File;Ljava/io/File;Lorg/sonatype/aether/spi/io/FileProcessor$ProgressListener;)J
      15: pop2
      16: aload_2
      17: aload_1
      18: invokevirtual #30                 // Method java/io/File.lastModified:()J
      21: invokevirtual #31                 // Method java/io/File.setLastModified:(J)Z
      24: pop
      25: aload_1
      26: invokevirtual #32                 // Method java/io/File.delete:()Z
      29: pop
      30: return
}
