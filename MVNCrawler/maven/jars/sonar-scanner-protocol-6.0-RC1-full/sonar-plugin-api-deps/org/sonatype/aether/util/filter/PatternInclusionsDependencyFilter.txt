Compiled from "PatternInclusionsDependencyFilter.java"
public class org.sonatype.aether.util.filter.PatternInclusionsDependencyFilter implements org.sonatype.aether.graph.DependencyFilter {
  private final java.util.Collection<java.lang.String> patterns;

  private final org.sonatype.aether.version.VersionScheme versionScheme;

  public org.sonatype.aether.util.filter.PatternInclusionsDependencyFilter(java.lang.String...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #1                  // Method "<init>":(Lorg/sonatype/aether/version/VersionScheme;[Ljava/lang/String;)V
       6: return

  public org.sonatype.aether.util.filter.PatternInclusionsDependencyFilter(org.sonatype.aether.version.VersionScheme, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ifnonnull     10
       6: aconst_null
       7: goto          14
      10: aload_2
      11: invokestatic  #2                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokespecial #3                  // Method "<init>":(Lorg/sonatype/aether/version/VersionScheme;Ljava/util/Collection;)V
      17: return

  public org.sonatype.aether.util.filter.PatternInclusionsDependencyFilter(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #3                  // Method "<init>":(Lorg/sonatype/aether/version/VersionScheme;Ljava/util/Collection;)V
       6: return

  public org.sonatype.aether.util.filter.PatternInclusionsDependencyFilter(org.sonatype.aether.version.VersionScheme, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/HashSet
       8: dup
       9: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      12: putfield      #7                  // Field patterns:Ljava/util/Collection;
      15: aload_2
      16: ifnull        30
      19: aload_0
      20: getfield      #7                  // Field patterns:Ljava/util/Collection;
      23: aload_2
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_0
      31: aload_1
      32: putfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      35: return

  public boolean accept(org.sonatype.aether.graph.DependencyNode, java.util.List<org.sonatype.aether.graph.DependencyNode>);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/sonatype/aether/graph/DependencyNode.getDependency:()Lorg/sonatype/aether/graph/Dependency;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: iconst_1
      12: ireturn
      13: aload_3
      14: invokevirtual #11                 // Method org/sonatype/aether/graph/Dependency.getArtifact:()Lorg/sonatype/aether/artifact/Artifact;
      17: astore        4
      19: aload_0
      20: getfield      #7                  // Field patterns:Ljava/util/Collection;
      23: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          72
      40: aload         5
      42: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #15                 // class java/lang/String
      50: astore        6
      52: aload_0
      53: aload         4
      55: aload         6
      57: invokespecial #16                 // Method accept:(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;)Z
      60: istore        7
      62: iload         7
      64: ifeq          69
      67: iconst_1
      68: ireturn
      69: goto          30
      72: iconst_0
      73: ireturn

  private boolean accept(org.sonatype.aether.artifact.Artifact, java.lang.String);
    Code:
       0: iconst_4
       1: anewarray     #15                 // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_1
       7: invokeinterface #17,  1           // InterfaceMethod org/sonatype/aether/artifact/Artifact.getGroupId:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod org/sonatype/aether/artifact/Artifact.getArtifactId:()Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_2
      24: aload_1
      25: invokeinterface #19,  1           // InterfaceMethod org/sonatype/aether/artifact/Artifact.getExtension:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_3
      33: aload_1
      34: invokeinterface #20,  1           // InterfaceMethod org/sonatype/aether/artifact/Artifact.getBaseVersion:()Ljava/lang/String;
      39: aastore
      40: astore_3
      41: aload_2
      42: ldc           #21                 // String :
      44: invokevirtual #22                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      47: astore        4
      49: aload         4
      51: arraylength
      52: aload_3
      53: arraylength
      54: if_icmpgt     61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: istore        5
      64: iconst_0
      65: istore        6
      67: iload         5
      69: ifeq          101
      72: iload         6
      74: aload         4
      76: arraylength
      77: if_icmpge     101
      80: aload_0
      81: aload_3
      82: iload         6
      84: aaload
      85: aload         4
      87: iload         6
      89: aaload
      90: invokespecial #23                 // Method matches:(Ljava/lang/String;Ljava/lang/String;)Z
      93: istore        5
      95: iinc          6, 1
      98: goto          67
     101: iload         5
     103: ireturn

  private boolean matches(java.lang.String, java.lang.String);
    Code:
       0: ldc           #24                 // String *
       2: aload_2
       3: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          16
       9: aload_2
      10: invokevirtual #26                 // Method java/lang/String.length:()I
      13: ifne          21
      16: iconst_1
      17: istore_3
      18: goto          167
      21: aload_2
      22: ldc           #24                 // String *
      24: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      27: ifeq          71
      30: aload_2
      31: ldc           #24                 // String *
      33: invokevirtual #28                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      36: ifeq          71
      39: aload_2
      40: iconst_1
      41: aload_2
      42: invokevirtual #26                 // Method java/lang/String.length:()I
      45: iconst_1
      46: isub
      47: invokevirtual #29                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      50: astore        4
      52: aload_1
      53: aload         4
      55: invokevirtual #30                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      58: iconst_m1
      59: if_icmpeq     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: istore_3
      68: goto          167
      71: aload_2
      72: ldc           #24                 // String *
      74: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      77: ifeq          101
      80: aload_2
      81: iconst_1
      82: aload_2
      83: invokevirtual #26                 // Method java/lang/String.length:()I
      86: invokevirtual #29                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: astore        4
      91: aload_1
      92: aload         4
      94: invokevirtual #28                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      97: istore_3
      98: goto          167
     101: aload_2
     102: ldc           #24                 // String *
     104: invokevirtual #28                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     107: ifeq          133
     110: aload_2
     111: iconst_0
     112: aload_2
     113: invokevirtual #26                 // Method java/lang/String.length:()I
     116: iconst_1
     117: isub
     118: invokevirtual #29                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     121: astore        4
     123: aload_1
     124: aload         4
     126: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     129: istore_3
     130: goto          167
     133: aload_2
     134: ldc           #31                 // String [
     136: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     139: ifne          151
     142: aload_2
     143: ldc           #32                 // String (
     145: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     148: ifeq          161
     151: aload_0
     152: aload_1
     153: aload_2
     154: invokespecial #33                 // Method isVersionIncludedInRange:(Ljava/lang/String;Ljava/lang/String;)Z
     157: istore_3
     158: goto          167
     161: aload_1
     162: aload_2
     163: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     166: istore_3
     167: iload_3
     168: ireturn

  private boolean isVersionIncludedInRange(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      13: aload_1
      14: invokeinterface #34,  2           // InterfaceMethod org/sonatype/aether/version/VersionScheme.parseVersion:(Ljava/lang/String;)Lorg/sonatype/aether/version/Version;
      19: astore_3
      20: aload_0
      21: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      24: aload_2
      25: invokeinterface #35,  2           // InterfaceMethod org/sonatype/aether/version/VersionScheme.parseVersionRange:(Ljava/lang/String;)Lorg/sonatype/aether/version/VersionRange;
      30: astore        4
      32: aload         4
      34: aload_3
      35: invokeinterface #36,  2           // InterfaceMethod org/sonatype/aether/version/VersionRange.containsVersion:(Lorg/sonatype/aether/version/Version;)Z
      40: ireturn
      41: astore_3
      42: iconst_0
      43: ireturn
    Exception table:
       from    to  target type
           9    40    41   Class org/sonatype/aether/version/InvalidVersionSpecificationException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        25
      11: aload_0
      12: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #39                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_1
      28: checkcast     #40                 // class org/sonatype/aether/util/filter/PatternInclusionsDependencyFilter
      31: astore_2
      32: aload_0
      33: getfield      #7                  // Field patterns:Ljava/util/Collection;
      36: aload_2
      37: getfield      #7                  // Field patterns:Ljava/util/Collection;
      40: invokevirtual #39                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          81
      46: aload_0
      47: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      50: ifnonnull     63
      53: aload_2
      54: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      57: ifnonnull     81
      60: goto          77
      63: aload_0
      64: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      67: aload_2
      68: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      71: invokevirtual #39                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #7                  // Field patterns:Ljava/util/Collection;
      11: invokevirtual #41                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: istore_1
      16: iload_1
      17: bipush        31
      19: imul
      20: aload_0
      21: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      24: ifnonnull     31
      27: iconst_0
      28: goto          38
      31: aload_0
      32: getfield      #9                  // Field versionScheme:Lorg/sonatype/aether/version/VersionScheme;
      35: invokevirtual #41                 // Method java/lang/Object.hashCode:()I
      38: iadd
      39: istore_1
      40: iload_1
      41: ireturn
}
