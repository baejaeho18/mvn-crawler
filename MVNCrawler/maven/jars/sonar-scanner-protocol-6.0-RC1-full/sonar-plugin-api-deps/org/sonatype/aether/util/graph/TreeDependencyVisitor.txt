Compiled from "TreeDependencyVisitor.java"
public class org.sonatype.aether.util.graph.TreeDependencyVisitor implements org.sonatype.aether.graph.DependencyVisitor {
  private final java.util.Map<org.sonatype.aether.graph.DependencyNode, java.lang.Object> visitedNodes;

  private final org.sonatype.aether.graph.DependencyVisitor visitor;

  private final org.sonatype.aether.util.graph.Stack<java.lang.Boolean> visits;

  public org.sonatype.aether.util.graph.TreeDependencyVisitor(org.sonatype.aether.graph.DependencyVisitor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String no visitor delegate specified
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field visitor:Lorg/sonatype/aether/graph/DependencyVisitor;
      23: aload_0
      24: new           #6                  // class java/util/IdentityHashMap
      27: dup
      28: sipush        512
      31: invokespecial #7                  // Method java/util/IdentityHashMap."<init>":(I)V
      34: putfield      #8                  // Field visitedNodes:Ljava/util/Map;
      37: aload_0
      38: new           #9                  // class org/sonatype/aether/util/graph/Stack
      41: dup
      42: invokespecial #10                 // Method org/sonatype/aether/util/graph/Stack."<init>":()V
      45: putfield      #11                 // Field visits:Lorg/sonatype/aether/util/graph/Stack;
      48: return

  public boolean visitEnter(org.sonatype.aether.graph.DependencyNode);
    Code:
       0: aload_0
       1: getfield      #8                  // Field visitedNodes:Ljava/util/Map;
       4: aload_1
       5: getstatic     #12                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       8: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: aload_0
      23: getfield      #11                 // Field visits:Lorg/sonatype/aether/util/graph/Stack;
      26: iload_2
      27: invokestatic  #14                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      30: invokevirtual #15                 // Method org/sonatype/aether/util/graph/Stack.push:(Ljava/lang/Object;)V
      33: iload_2
      34: ifeq          39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: getfield      #5                  // Field visitor:Lorg/sonatype/aether/graph/DependencyVisitor;
      43: aload_1
      44: invokeinterface #16,  2           // InterfaceMethod org/sonatype/aether/graph/DependencyVisitor.visitEnter:(Lorg/sonatype/aether/graph/DependencyNode;)Z
      49: ireturn

  public boolean visitLeave(org.sonatype.aether.graph.DependencyNode);
    Code:
       0: aload_0
       1: getfield      #11                 // Field visits:Lorg/sonatype/aether/util/graph/Stack;
       4: invokevirtual #17                 // Method org/sonatype/aether/util/graph/Stack.pop:()Ljava/lang/Object;
       7: checkcast     #18                 // class java/lang/Boolean
      10: astore_2
      11: aload_2
      12: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      15: ifeq          20
      18: iconst_1
      19: ireturn
      20: aload_0
      21: getfield      #5                  // Field visitor:Lorg/sonatype/aether/graph/DependencyVisitor;
      24: aload_1
      25: invokeinterface #20,  2           // InterfaceMethod org/sonatype/aether/graph/DependencyVisitor.visitLeave:(Lorg/sonatype/aether/graph/DependencyNode;)Z
      30: ireturn
}
