Compiled from "Dependency.java"
public final class org.sonatype.aether.graph.Dependency {
  private final org.sonatype.aether.artifact.Artifact artifact;

  private final java.lang.String scope;

  private final boolean optional;

  private final java.util.Set<org.sonatype.aether.graph.Exclusion> exclusions;

  public org.sonatype.aether.graph.Dependency(org.sonatype.aether.artifact.Artifact, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #1                  // Method "<init>":(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;Z)V
       7: return

  public org.sonatype.aether.graph.Dependency(org.sonatype.aether.artifact.Artifact, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;ZLjava/util/Collection;)V
       8: return

  public org.sonatype.aether.graph.Dependency(org.sonatype.aether.artifact.Artifact, java.lang.String, boolean, java.util.Collection<org.sonatype.aether.graph.Exclusion>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: invokestatic  #3                  // Method org/sonatype/aether/graph/Dependency$Exclusions.copy:(Ljava/util/Collection;)Ljava/util/Set;
       8: iload_3
       9: invokespecial #4                  // Method "<init>":(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;Ljava/util/Set;Z)V
      12: return

  private org.sonatype.aether.graph.Dependency(org.sonatype.aether.artifact.Artifact, java.lang.String, java.util.Set<org.sonatype.aether.graph.Exclusion>, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #6                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #7                  // String no artifact specified for dependency
      14: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
      23: aload_0
      24: aload_2
      25: ifnull        32
      28: aload_2
      29: goto          34
      32: ldc           #10                 // String
      34: putfield      #11                 // Field scope:Ljava/lang/String;
      37: aload_0
      38: iload         4
      40: putfield      #12                 // Field optional:Z
      43: aload_0
      44: aload_3
      45: putfield      #13                 // Field exclusions:Ljava/util/Set;
      48: return

  public org.sonatype.aether.artifact.Artifact getArtifact();
    Code:
       0: aload_0
       1: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
       4: areturn

  public org.sonatype.aether.graph.Dependency setArtifact(org.sonatype.aether.artifact.Artifact);
    Code:
       0: aload_0
       1: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
       4: aload_1
       5: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ifeq          13
      11: aload_0
      12: areturn
      13: new           #15                 // class org/sonatype/aether/graph/Dependency
      16: dup
      17: aload_1
      18: aload_0
      19: getfield      #11                 // Field scope:Ljava/lang/String;
      22: aload_0
      23: getfield      #13                 // Field exclusions:Ljava/util/Set;
      26: aload_0
      27: getfield      #12                 // Field optional:Z
      30: invokespecial #4                  // Method "<init>":(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;Ljava/util/Set;Z)V
      33: areturn

  public java.lang.String getScope();
    Code:
       0: aload_0
       1: getfield      #11                 // Field scope:Ljava/lang/String;
       4: areturn

  public org.sonatype.aether.graph.Dependency setScope(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field scope:Ljava/lang/String;
       4: aload_1
       5: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifne          25
      11: aload_1
      12: ifnonnull     27
      15: aload_0
      16: getfield      #11                 // Field scope:Ljava/lang/String;
      19: invokevirtual #17                 // Method java/lang/String.length:()I
      22: ifgt          27
      25: aload_0
      26: areturn
      27: new           #15                 // class org/sonatype/aether/graph/Dependency
      30: dup
      31: aload_0
      32: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
      35: aload_1
      36: aload_0
      37: getfield      #13                 // Field exclusions:Ljava/util/Set;
      40: aload_0
      41: getfield      #12                 // Field optional:Z
      44: invokespecial #4                  // Method "<init>":(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;Ljava/util/Set;Z)V
      47: areturn

  public boolean isOptional();
    Code:
       0: aload_0
       1: getfield      #12                 // Field optional:Z
       4: ireturn

  public org.sonatype.aether.graph.Dependency setOptional(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field optional:Z
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #15                 // class org/sonatype/aether/graph/Dependency
      13: dup
      14: aload_0
      15: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
      18: aload_0
      19: getfield      #11                 // Field scope:Ljava/lang/String;
      22: aload_0
      23: getfield      #13                 // Field exclusions:Ljava/util/Set;
      26: iload_1
      27: invokespecial #4                  // Method "<init>":(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;Ljava/util/Set;Z)V
      30: areturn

  public java.util.Collection<org.sonatype.aether.graph.Exclusion> getExclusions();
    Code:
       0: aload_0
       1: getfield      #13                 // Field exclusions:Ljava/util/Set;
       4: areturn

  public org.sonatype.aether.graph.Dependency setExclusions(java.util.Collection<org.sonatype.aether.graph.Exclusion>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method hasEquivalentExclusions:(Ljava/util/Collection;)Z
       5: ifeq          10
       8: aload_0
       9: areturn
      10: new           #15                 // class org/sonatype/aether/graph/Dependency
      13: dup
      14: aload_0
      15: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
      18: aload_0
      19: getfield      #11                 // Field scope:Ljava/lang/String;
      22: aload_0
      23: getfield      #12                 // Field optional:Z
      26: aload_1
      27: invokespecial #2                  // Method "<init>":(Lorg/sonatype/aether/artifact/Artifact;Ljava/lang/String;ZLjava/util/Collection;)V
      30: areturn

  private boolean hasEquivalentExclusions(java.util.Collection<org.sonatype.aether.graph.Exclusion>);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          23
      13: aload_0
      14: getfield      #13                 // Field exclusions:Ljava/util/Set;
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      22: ireturn
      23: aload_1
      24: instanceof    #21                 // class java/util/Set
      27: ifeq          39
      30: aload_0
      31: getfield      #13                 // Field exclusions:Ljava/util/Set;
      34: aload_1
      35: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ireturn
      39: aload_1
      40: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.size:()I
      45: aload_0
      46: getfield      #13                 // Field exclusions:Ljava/util/Set;
      49: invokeinterface #23,  1           // InterfaceMethod java/util/Set.size:()I
      54: if_icmplt     87
      57: aload_0
      58: getfield      #13                 // Field exclusions:Ljava/util/Set;
      61: aload_1
      62: invokeinterface #24,  2           // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      67: ifeq          87
      70: aload_1
      71: aload_0
      72: getfield      #13                 // Field exclusions:Ljava/util/Set;
      75: invokeinterface #25,  2           // InterfaceMethod java/util/Collection.containsAll:(Ljava/util/Collection;)Z
      80: ifeq          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: ireturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #28                 // Method getArtifact:()Lorg/sonatype/aether/artifact/Artifact;
      11: invokestatic  #29                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #31                 // String  (
      19: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #32                 // Method getScope:()Ljava/lang/String;
      26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #33                 // Method isOptional:()Z
      33: ifeq          41
      36: ldc           #34                 // String ?
      38: goto          43
      41: ldc           #10                 // String
      43: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #35                 // String )
      48: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        25
      11: aload_0
      12: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_1
      28: checkcast     #15                 // class org/sonatype/aether/graph/Dependency
      31: astore_2
      32: aload_0
      33: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
      36: aload_2
      37: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
      40: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          89
      46: aload_0
      47: getfield      #11                 // Field scope:Ljava/lang/String;
      50: aload_2
      51: getfield      #11                 // Field scope:Ljava/lang/String;
      54: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          89
      60: aload_0
      61: getfield      #12                 // Field optional:Z
      64: aload_2
      65: getfield      #12                 // Field optional:Z
      68: if_icmpne     89
      71: aload_0
      72: getfield      #13                 // Field exclusions:Ljava/util/Set;
      75: aload_2
      76: getfield      #13                 // Field exclusions:Ljava/util/Set;
      79: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #9                  // Field artifact:Lorg/sonatype/aether/artifact/Artifact;
      11: invokevirtual #38                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: istore_1
      16: iload_1
      17: bipush        31
      19: imul
      20: aload_0
      21: getfield      #11                 // Field scope:Ljava/lang/String;
      24: invokevirtual #39                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_1
      29: iload_1
      30: bipush        31
      32: imul
      33: aload_0
      34: getfield      #12                 // Field optional:Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: getfield      #13                 // Field exclusions:Ljava/util/Set;
      55: invokeinterface #23,  1           // InterfaceMethod java/util/Set.size:()I
      60: iadd
      61: istore_1
      62: iload_1
      63: ireturn
}
