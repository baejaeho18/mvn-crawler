Compiled from "MutableByte.java"
public class org.apache.commons.lang.mutable.MutableByte extends java.lang.Number implements java.lang.Comparable,org.apache.commons.lang.mutable.Mutable {
  private static final long serialVersionUID;

  private byte value;

  public org.apache.commons.lang.mutable.MutableByte();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: return

  public org.apache.commons.lang.mutable.MutableByte(byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field value:B
       9: return

  public org.apache.commons.lang.mutable.MutableByte(java.lang.Number);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/Number.byteValue:()B
       9: putfield      #2                  // Field value:B
      12: return

  public org.apache.commons.lang.mutable.MutableByte(java.lang.String) throws java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B
       9: putfield      #2                  // Field value:B
      12: return

  public java.lang.Object getValue();
    Code:
       0: new           #5                  // class java/lang/Byte
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:B
       8: invokespecial #6                  // Method java/lang/Byte."<init>":(B)V
      11: areturn

  public void setValue(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field value:B
       5: return

  public void setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/Number
       5: invokevirtual #3                  // Method java/lang/Number.byteValue:()B
       8: invokevirtual #8                  // Method setValue:(B)V
      11: return

  public void increment();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:B
       5: iconst_1
       6: iadd
       7: i2b
       8: putfield      #2                  // Field value:B
      11: return

  public void decrement();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:B
       5: iconst_1
       6: isub
       7: i2b
       8: putfield      #2                  // Field value:B
      11: return

  public void add(byte);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:B
       5: iload_1
       6: iadd
       7: i2b
       8: putfield      #2                  // Field value:B
      11: return

  public void add(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:B
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/Number.byteValue:()B
       9: iadd
      10: i2b
      11: putfield      #2                  // Field value:B
      14: return

  public void subtract(byte);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:B
       5: iload_1
       6: isub
       7: i2b
       8: putfield      #2                  // Field value:B
      11: return

  public void subtract(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:B
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/Number.byteValue:()B
       9: isub
      10: i2b
      11: putfield      #2                  // Field value:B
      14: return

  public byte byteValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: ireturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: i2l
       5: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: i2f
       5: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: i2d
       5: dreturn

  public java.lang.Byte toByte();
    Code:
       0: new           #5                  // class java/lang/Byte
       3: dup
       4: aload_0
       5: invokevirtual #9                  // Method byteValue:()B
       8: invokespecial #6                  // Method java/lang/Byte."<init>":(B)V
      11: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/apache/commons/lang/mutable/MutableByte
       4: ifeq          27
       7: aload_0
       8: getfield      #2                  // Field value:B
      11: aload_1
      12: checkcast     #10                 // class org/apache/commons/lang/mutable/MutableByte
      15: invokevirtual #9                  // Method byteValue:()B
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: iconst_0
      28: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #10                 // class org/apache/commons/lang/mutable/MutableByte
       4: astore_2
       5: aload_2
       6: getfield      #2                  // Field value:B
       9: istore_3
      10: aload_0
      11: getfield      #2                  // Field value:B
      14: iload_3
      15: if_icmpge     22
      18: iconst_m1
      19: goto          35
      22: aload_0
      23: getfield      #2                  // Field value:B
      26: iload_3
      27: if_icmpne     34
      30: iconst_0
      31: goto          35
      34: iconst_1
      35: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: invokestatic  #11                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       7: areturn
}
