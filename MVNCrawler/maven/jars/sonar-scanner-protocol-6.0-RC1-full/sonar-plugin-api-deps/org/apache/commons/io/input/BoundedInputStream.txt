Compiled from "BoundedInputStream.java"
public class org.apache.commons.io.input.BoundedInputStream extends java.io.InputStream {
  private final java.io.InputStream in;

  private final long max;

  private long pos;

  private long mark;

  private boolean propagateClose;

  public org.apache.commons.io.input.BoundedInputStream(java.io.InputStream, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field pos:J
       9: aload_0
      10: ldc2_w        #3                  // long -1l
      13: putfield      #5                  // Field mark:J
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field propagateClose:Z
      21: aload_0
      22: lload_2
      23: putfield      #7                  // Field max:J
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field in:Ljava/io/InputStream;
      31: return

  public org.apache.commons.io.input.BoundedInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #3                  // long -1l
       5: invokespecial #9                  // Method "<init>":(Ljava/io/InputStream;J)V
       8: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:J
       4: lconst_0
       5: lcmp
       6: iflt          23
       9: aload_0
      10: getfield      #2                  // Field pos:J
      13: aload_0
      14: getfield      #7                  // Field max:J
      17: lcmp
      18: iflt          23
      21: iconst_m1
      22: ireturn
      23: aload_0
      24: getfield      #8                  // Field in:Ljava/io/InputStream;
      27: invokevirtual #10                 // Method java/io/InputStream.read:()I
      30: istore_1
      31: aload_0
      32: dup
      33: getfield      #2                  // Field pos:J
      36: lconst_1
      37: ladd
      38: putfield      #2                  // Field pos:J
      41: iload_1
      42: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #11                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:J
       4: lconst_0
       5: lcmp
       6: iflt          23
       9: aload_0
      10: getfield      #2                  // Field pos:J
      13: aload_0
      14: getfield      #7                  // Field max:J
      17: lcmp
      18: iflt          23
      21: iconst_m1
      22: ireturn
      23: aload_0
      24: getfield      #7                  // Field max:J
      27: lconst_0
      28: lcmp
      29: iflt          49
      32: iload_3
      33: i2l
      34: aload_0
      35: getfield      #7                  // Field max:J
      38: aload_0
      39: getfield      #2                  // Field pos:J
      42: lsub
      43: invokestatic  #12                 // Method java/lang/Math.min:(JJ)J
      46: goto          51
      49: iload_3
      50: i2l
      51: lstore        4
      53: aload_0
      54: getfield      #8                  // Field in:Ljava/io/InputStream;
      57: aload_1
      58: iload_2
      59: lload         4
      61: l2i
      62: invokevirtual #13                 // Method java/io/InputStream.read:([BII)I
      65: istore        6
      67: iload         6
      69: iconst_m1
      70: if_icmpne     75
      73: iconst_m1
      74: ireturn
      75: aload_0
      76: dup
      77: getfield      #2                  // Field pos:J
      80: iload         6
      82: i2l
      83: ladd
      84: putfield      #2                  // Field pos:J
      87: iload         6
      89: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:J
       4: lconst_0
       5: lcmp
       6: iflt          25
       9: lload_1
      10: aload_0
      11: getfield      #7                  // Field max:J
      14: aload_0
      15: getfield      #2                  // Field pos:J
      18: lsub
      19: invokestatic  #12                 // Method java/lang/Math.min:(JJ)J
      22: goto          26
      25: lload_1
      26: lstore_3
      27: aload_0
      28: getfield      #8                  // Field in:Ljava/io/InputStream;
      31: lload_3
      32: invokevirtual #14                 // Method java/io/InputStream.skip:(J)J
      35: lstore        5
      37: aload_0
      38: dup
      39: getfield      #2                  // Field pos:J
      42: lload         5
      44: ladd
      45: putfield      #2                  // Field pos:J
      48: lload         5
      50: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:J
       4: lconst_0
       5: lcmp
       6: iflt          23
       9: aload_0
      10: getfield      #2                  // Field pos:J
      13: aload_0
      14: getfield      #7                  // Field max:J
      17: lcmp
      18: iflt          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #8                  // Field in:Ljava/io/InputStream;
      27: invokevirtual #15                 // Method java/io/InputStream.available:()I
      30: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field propagateClose:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field in:Ljava/io/InputStream;
      11: invokevirtual #17                 // Method java/io/InputStream.close:()V
      14: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #18                 // Method java/io/InputStream.reset:()V
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field mark:J
      12: putfield      #2                  // Field pos:J
      15: return

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field in:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #19                 // Method java/io/InputStream.mark:(I)V
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field pos:J
      13: putfield      #5                  // Field mark:J
      16: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #8                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #20                 // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  public boolean isPropagateClose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field propagateClose:Z
       4: ireturn

  public void setPropagateClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field propagateClose:Z
       5: return
}
