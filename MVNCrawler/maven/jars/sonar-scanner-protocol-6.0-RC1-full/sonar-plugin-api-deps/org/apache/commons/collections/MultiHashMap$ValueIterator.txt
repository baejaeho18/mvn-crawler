Compiled from "MultiHashMap.java"
class org.apache.commons.collections.MultiHashMap$ValueIterator implements java.util.Iterator {
  private java.util.Iterator backedIterator;

  private java.util.Iterator tempIterator;

  private final org.apache.commons.collections.MultiHashMap this$0;

  private org.apache.commons.collections.MultiHashMap$ValueIterator(org.apache.commons.collections.MultiHashMap);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field this$0:Lorg/apache/commons/collections/MultiHashMap;
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method org/apache/commons/collections/MultiHashMap.superValuesIterator:()Ljava/util/Iterator;
      14: putfield      #5                  // Field backedIterator:Ljava/util/Iterator;
      17: return

  private boolean searchNextIterator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tempIterator:Ljava/util/Iterator;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field tempIterator:Ljava/util/Iterator;
      11: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifne          57
      19: aload_0
      20: getfield      #5                  // Field backedIterator:Ljava/util/Iterator;
      23: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: aload_0
      35: getfield      #5                  // Field backedIterator:Ljava/util/Iterator;
      38: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #9                  // class java/util/Collection
      46: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      51: putfield      #6                  // Field tempIterator:Ljava/util/Iterator;
      54: goto          0
      57: iconst_1
      58: ireturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method searchNextIterator:()Z
       4: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method searchNextIterator:()Z
       4: ifne          15
       7: new           #12                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #13                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #6                  // Field tempIterator:Ljava/util/Iterator;
      19: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tempIterator:Ljava/util/Iterator;
       4: ifnonnull     15
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #6                  // Field tempIterator:Ljava/util/Iterator;
      19: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.remove:()V
      24: return

  org.apache.commons.collections.MultiHashMap$ValueIterator(org.apache.commons.collections.MultiHashMap, org.apache.commons.collections.MultiHashMap$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/collections/MultiHashMap;)V
       5: return
}
