Compiled from "SingletonMap.java"
public class org.apache.commons.collections.map.SingletonMap implements org.apache.commons.collections.OrderedMap,org.apache.commons.collections.BoundedMap,org.apache.commons.collections.KeyValue,java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  private final java.lang.Object key;

  private java.lang.Object value;

  public org.apache.commons.collections.map.SingletonMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field key:Ljava/lang/Object;
       9: return

  public org.apache.commons.collections.map.SingletonMap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field key:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field value:Ljava/lang/Object;
      14: return

  public org.apache.commons.collections.map.SingletonMap(org.apache.commons.collections.KeyValue);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/collections/KeyValue.getKey:()Ljava/lang/Object;
      11: putfield      #2                  // Field key:Ljava/lang/Object;
      14: aload_0
      15: aload_1
      16: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/collections/KeyValue.getValue:()Ljava/lang/Object;
      21: putfield      #3                  // Field value:Ljava/lang/Object;
      24: return

  public org.apache.commons.collections.map.SingletonMap(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      11: putfield      #2                  // Field key:Ljava/lang/Object;
      14: aload_0
      15: aload_1
      16: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      21: putfield      #3                  // Field value:Ljava/lang/Object;
      24: return

  public org.apache.commons.collections.map.SingletonMap(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      10: iconst_1
      11: if_icmpeq     24
      14: new           #9                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #10                 // String The map size must be 1
      20: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_1
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      30: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #15                 // class java/util/Map$Entry
      43: astore_2
      44: aload_0
      45: aload_2
      46: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: putfield      #2                  // Field key:Ljava/lang/Object;
      54: aload_0
      55: aload_2
      56: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      61: putfield      #3                  // Field value:Ljava/lang/Object;
      64: return

  public java.lang.Object getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:Ljava/lang/Object;
       4: areturn

  public java.lang.Object setValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #3                  // Field value:Ljava/lang/Object;
      10: aload_2
      11: areturn

  public boolean isFull();
    Code:
       0: iconst_1
       1: ireturn

  public int maxSize();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method isEqualKey:(Ljava/lang/Object;)Z
       5: ifeq          13
       8: aload_0
       9: getfield      #3                  // Field value:Ljava/lang/Object;
      12: areturn
      13: aconst_null
      14: areturn

  public int size();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isEmpty();
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method isEqualKey:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method isEqualValue:(Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method isEqualKey:(Ljava/lang/Object;)Z
       5: ifeq          14
       8: aload_0
       9: aload_2
      10: invokevirtual #18                 // Method setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
      14: new           #9                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #19                 // String Cannot put new key/value pair - Map is fixed size singleton
      20: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow

  public void putAll(java.util.Map);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
       6: lookupswitch  { // 2
                     0: 32
                     1: 33
               default: 71
          }
      32: return
      33: aload_1
      34: invokeinterface #12,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      39: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      44: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #15                 // class java/util/Map$Entry
      52: astore_2
      53: aload_0
      54: aload_2
      55: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: aload_2
      61: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      66: invokevirtual #20                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: return
      71: new           #9                  // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #21                 // String The map size must be 0 or 1
      77: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: new           #22                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void clear();
    Code:
       0: new           #22                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.util.Set entrySet();
    Code:
       0: new           #24                 // class org/apache/commons/collections/keyvalue/TiedMapEntry
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
       9: invokespecial #26                 // Method org/apache/commons/collections/keyvalue/TiedMapEntry."<init>":(Ljava/util/Map;Ljava/lang/Object;)V
      12: astore_1
      13: aload_1
      14: invokestatic  #27                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      17: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: invokestatic  #27                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       7: areturn

  public java.util.Collection values();
    Code:
       0: new           #28                 // class org/apache/commons/collections/map/SingletonMap$SingletonValues
       3: dup
       4: aload_0
       5: invokespecial #29                 // Method org/apache/commons/collections/map/SingletonMap$SingletonValues."<init>":(Lorg/apache/commons/collections/map/SingletonMap;)V
       8: areturn

  public org.apache.commons.collections.MapIterator mapIterator();
    Code:
       0: new           #30                 // class org/apache/commons/collections/map/SingletonMap$SingletonMapIterator
       3: dup
       4: aload_0
       5: invokespecial #31                 // Method org/apache/commons/collections/map/SingletonMap$SingletonMapIterator."<init>":(Lorg/apache/commons/collections/map/SingletonMap;)V
       8: areturn

  public org.apache.commons.collections.OrderedMapIterator orderedMapIterator();
    Code:
       0: new           #30                 // class org/apache/commons/collections/map/SingletonMap$SingletonMapIterator
       3: dup
       4: aload_0
       5: invokespecial #31                 // Method org/apache/commons/collections/map/SingletonMap$SingletonMapIterator."<init>":(Lorg/apache/commons/collections/map/SingletonMap;)V
       8: areturn

  public java.lang.Object firstKey();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
       4: areturn

  public java.lang.Object lastKey();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
       4: areturn

  public java.lang.Object nextKey(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object previousKey(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  protected boolean isEqualKey(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     19
       4: aload_0
       5: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
       8: ifnonnull     15
      11: iconst_1
      12: goto          27
      15: iconst_0
      16: goto          27
      19: aload_1
      20: aload_0
      21: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
      24: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ireturn

  protected boolean isEqualValue(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     19
       4: aload_0
       5: invokevirtual #33                 // Method getValue:()Ljava/lang/Object;
       8: ifnonnull     15
      11: iconst_1
      12: goto          27
      15: iconst_0
      16: goto          27
      19: aload_1
      20: aload_0
      21: invokevirtual #33                 // Method getValue:()Ljava/lang/Object;
      24: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #35                 // class org/apache/commons/collections/map/SingletonMap
       7: astore_1
       8: aload_1
       9: areturn
      10: astore_1
      11: new           #37                 // class java/lang/InternalError
      14: dup
      15: invokespecial #38                 // Method java/lang/InternalError."<init>":()V
      18: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/CloneNotSupportedException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #39                 // class java/util/Map
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #39                 // class java/util/Map
      20: astore_2
      21: aload_2
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Map.size:()I
      27: iconst_1
      28: if_icmpeq     33
      31: iconst_0
      32: ireturn
      33: aload_2
      34: invokeinterface #12,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      39: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      44: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #15                 // class java/util/Map$Entry
      52: astore_3
      53: aload_0
      54: aload_3
      55: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: invokevirtual #16                 // Method isEqualKey:(Ljava/lang/Object;)Z
      63: ifeq          83
      66: aload_0
      67: aload_3
      68: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: invokevirtual #17                 // Method isEqualValue:(Ljava/lang/Object;)Z
      76: ifeq          83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
      15: invokevirtual #40                 // Method java/lang/Object.hashCode:()I
      18: aload_0
      19: invokevirtual #33                 // Method getValue:()Ljava/lang/Object;
      22: ifnonnull     29
      25: iconst_0
      26: goto          36
      29: aload_0
      30: invokevirtual #33                 // Method getValue:()Ljava/lang/Object;
      33: invokevirtual #40                 // Method java/lang/Object.hashCode:()I
      36: ixor
      37: ireturn

  public java.lang.String toString();
    Code:
       0: new           #41                 // class java/lang/StringBuffer
       3: dup
       4: sipush        128
       7: invokespecial #42                 // Method java/lang/StringBuffer."<init>":(I)V
      10: bipush        123
      12: invokevirtual #43                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      15: aload_0
      16: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
      19: aload_0
      20: if_acmpne     28
      23: ldc           #44                 // String (this Map)
      25: goto          32
      28: aload_0
      29: invokevirtual #25                 // Method getKey:()Ljava/lang/Object;
      32: invokevirtual #45                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      35: bipush        61
      37: invokevirtual #43                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      40: aload_0
      41: invokevirtual #33                 // Method getValue:()Ljava/lang/Object;
      44: aload_0
      45: if_acmpne     53
      48: ldc           #44                 // String (this Map)
      50: goto          57
      53: aload_0
      54: invokevirtual #33                 // Method getValue:()Ljava/lang/Object;
      57: invokevirtual #45                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      60: bipush        125
      62: invokevirtual #43                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      65: invokevirtual #46                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      68: areturn
}
