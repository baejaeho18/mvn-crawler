Compiled from "DefaultPluginDescriptorCache.java"
public class org.apache.maven.plugin.DefaultPluginDescriptorCache implements org.apache.maven.plugin.PluginDescriptorCache {
  private java.util.Map<org.apache.maven.plugin.PluginDescriptorCache$Key, org.apache.maven.plugin.descriptor.PluginDescriptor> descriptors;

  public org.apache.maven.plugin.DefaultPluginDescriptorCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: sipush        128
      12: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
      15: putfield      #4                  // Field descriptors:Ljava/util/Map;
      18: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #4                  // Field descriptors:Ljava/util/Map;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Map.clear:()V
       9: return

  public org.apache.maven.plugin.PluginDescriptorCache$Key createKey(org.apache.maven.model.Plugin, java.util.List<org.sonatype.aether.repository.RemoteRepository>, org.sonatype.aether.RepositorySystemSession);
    Code:
       0: new           #6                  // class org/apache/maven/plugin/DefaultPluginDescriptorCache$CacheKey
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #7                  // Method org/apache/maven/plugin/DefaultPluginDescriptorCache$CacheKey."<init>":(Lorg/apache/maven/model/Plugin;Ljava/util/List;Lorg/sonatype/aether/RepositorySystemSession;)V
      10: areturn

  public org.apache.maven.plugin.descriptor.PluginDescriptor get(org.apache.maven.plugin.PluginDescriptorCache$Key);
    Code:
       0: aload_0
       1: getfield      #4                  // Field descriptors:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/apache/maven/plugin/descriptor/PluginDescriptor
      13: invokestatic  #10                 // Method clone:(Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)Lorg/apache/maven/plugin/descriptor/PluginDescriptor;
      16: areturn

  public void put(org.apache.maven.plugin.PluginDescriptorCache$Key, org.apache.maven.plugin.descriptor.PluginDescriptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field descriptors:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokestatic  #10                 // Method clone:(Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)Lorg/apache/maven/plugin/descriptor/PluginDescriptor;
       9: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  protected static org.apache.maven.plugin.descriptor.PluginDescriptor clone(org.apache.maven.plugin.descriptor.PluginDescriptor);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: ifnull        125
       6: new           #9                  // class org/apache/maven/plugin/descriptor/PluginDescriptor
       9: dup
      10: invokespecial #12                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor."<init>":()V
      13: astore_1
      14: aload_1
      15: aload_0
      16: invokevirtual #13                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getGroupId:()Ljava/lang/String;
      19: invokevirtual #14                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setGroupId:(Ljava/lang/String;)V
      22: aload_1
      23: aload_0
      24: invokevirtual #15                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getArtifactId:()Ljava/lang/String;
      27: invokevirtual #16                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setArtifactId:(Ljava/lang/String;)V
      30: aload_1
      31: aload_0
      32: invokevirtual #17                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getVersion:()Ljava/lang/String;
      35: invokevirtual #18                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setVersion:(Ljava/lang/String;)V
      38: aload_1
      39: aload_0
      40: invokevirtual #19                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getGoalPrefix:()Ljava/lang/String;
      43: invokevirtual #20                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setGoalPrefix:(Ljava/lang/String;)V
      46: aload_1
      47: aload_0
      48: invokevirtual #21                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.isInheritedByDefault:()Z
      51: invokevirtual #22                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setInheritedByDefault:(Z)V
      54: aload_1
      55: aload_0
      56: invokevirtual #23                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getName:()Ljava/lang/String;
      59: invokevirtual #24                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setName:(Ljava/lang/String;)V
      62: aload_1
      63: aload_0
      64: invokevirtual #25                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getDescription:()Ljava/lang/String;
      67: invokevirtual #26                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setDescription:(Ljava/lang/String;)V
      70: aload_1
      71: aload_0
      72: invokevirtual #27                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getRequiredMavenVersion:()Ljava/lang/String;
      75: invokevirtual #28                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setRequiredMavenVersion:(Ljava/lang/String;)V
      78: aload_1
      79: aload_0
      80: invokevirtual #29                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getPluginArtifact:()Lorg/apache/maven/artifact/Artifact;
      83: invokestatic  #30                 // Method org/apache/maven/artifact/ArtifactUtils.copyArtifactSafe:(Lorg/apache/maven/artifact/Artifact;)Lorg/apache/maven/artifact/Artifact;
      86: invokevirtual #31                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setPluginArtifact:(Lorg/apache/maven/artifact/Artifact;)V
      89: aload_1
      90: aload_0
      91: invokevirtual #32                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getMojos:()Ljava/util/List;
      94: aload_1
      95: invokestatic  #33                 // Method clone:(Ljava/util/List;Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)Ljava/util/List;
      98: invokevirtual #34                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setComponents:(Ljava/util/List;)V
     101: aload_1
     102: aload_0
     103: invokevirtual #35                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getId:()Ljava/lang/String;
     106: invokevirtual #36                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setId:(Ljava/lang/String;)V
     109: aload_1
     110: aload_0
     111: invokevirtual #37                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.isIsolatedRealm:()Z
     114: invokevirtual #38                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setIsolatedRealm:(Z)V
     117: aload_1
     118: aload_0
     119: invokevirtual #39                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getSource:()Ljava/lang/String;
     122: invokevirtual #40                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.setSource:(Ljava/lang/String;)V
     125: aload_1
     126: areturn

  private static java.util.List<org.codehaus.plexus.component.repository.ComponentDescriptor<?>> clone(java.util.List<org.apache.maven.plugin.descriptor.MojoDescriptor>, org.apache.maven.plugin.descriptor.PluginDescriptor);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: ifnull        72
       6: new           #41                 // class java/util/ArrayList
       9: dup
      10: aload_0
      11: invokeinterface #42,  1           // InterfaceMethod java/util/List.size:()I
      16: invokespecial #43                 // Method java/util/ArrayList."<init>":(I)V
      19: astore_2
      20: aload_0
      21: invokeinterface #44,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          72
      36: aload_3
      37: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #47                 // class org/apache/maven/plugin/descriptor/MojoDescriptor
      45: astore        4
      47: aload         4
      49: invokevirtual #48                 // Method org/apache/maven/plugin/descriptor/MojoDescriptor.clone:()Lorg/apache/maven/plugin/descriptor/MojoDescriptor;
      52: astore        5
      54: aload         5
      56: aload_1
      57: invokevirtual #49                 // Method org/apache/maven/plugin/descriptor/MojoDescriptor.setPluginDescriptor:(Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)V
      60: aload_2
      61: aload         5
      63: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: goto          27
      72: aload_2
      73: areturn
}
