Compiled from "ReactorManager.java"
public class org.apache.maven.execution.ReactorManager {
  public static final java.lang.String FAIL_FAST;

  public static final java.lang.String FAIL_AT_END;

  public static final java.lang.String FAIL_NEVER;

  public static final java.lang.String MAKE_MODE;

  public static final java.lang.String MAKE_DEPENDENTS_MODE;

  public static final java.lang.String MAKE_BOTH_MODE;

  private java.util.List blackList;

  private java.util.Map buildFailuresByProject;

  private java.util.Map pluginContextsByProjectAndPluginKey;

  private java.lang.String failureBehavior;

  private final org.apache.maven.project.ProjectSorter sorter;

  private java.util.Map buildSuccessesByProject;

  public org.apache.maven.execution.ReactorManager(java.util.List) throws org.codehaus.plexus.util.dag.CycleDetectedException, org.apache.maven.project.DuplicateProjectException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field blackList:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field buildFailuresByProject:Ljava/util/Map;
      26: aload_0
      27: new           #5                  // class java/util/HashMap
      30: dup
      31: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      34: putfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
      37: aload_0
      38: ldc           #9                  // String fail-fast
      40: putfield      #10                 // Field failureBehavior:Ljava/lang/String;
      43: aload_0
      44: new           #5                  // class java/util/HashMap
      47: dup
      48: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      51: putfield      #11                 // Field buildSuccessesByProject:Ljava/util/Map;
      54: aload_0
      55: new           #12                 // class org/apache/maven/project/ProjectSorter
      58: dup
      59: aload_1
      60: invokespecial #13                 // Method org/apache/maven/project/ProjectSorter."<init>":(Ljava/util/List;)V
      63: putfield      #14                 // Field sorter:Lorg/apache/maven/project/ProjectSorter;
      66: return

  public java.util.Map getPluginContext(org.apache.maven.plugin.descriptor.PluginDescriptor, org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: getfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
       4: aload_2
       5: invokevirtual #15                 // Method org/apache/maven/project/MavenProject.getId:()Ljava/lang/String;
       8: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #17                 // class java/util/Map
      16: astore_3
      17: aload_3
      18: ifnonnull     44
      21: new           #5                  // class java/util/HashMap
      24: dup
      25: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      28: astore_3
      29: aload_0
      30: getfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
      33: aload_2
      34: invokevirtual #15                 // Method org/apache/maven/project/MavenProject.getId:()Ljava/lang/String;
      37: aload_3
      38: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_3
      45: aload_1
      46: invokevirtual #19                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getPluginLookupKey:()Ljava/lang/String;
      49: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #17                 // class java/util/Map
      57: astore        4
      59: aload         4
      61: ifnonnull     86
      64: new           #5                  // class java/util/HashMap
      67: dup
      68: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      71: astore        4
      73: aload_3
      74: aload_1
      75: invokevirtual #19                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getPluginLookupKey:()Ljava/lang/String;
      78: aload         4
      80: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload         4
      88: areturn

  public void setFailureBehavior(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: ldc           #9                  // String fail-fast
       7: putfield      #10                 // Field failureBehavior:Ljava/lang/String;
      10: return
      11: ldc           #9                  // String fail-fast
      13: aload_1
      14: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifne          38
      20: ldc           #21                 // String fail-at-end
      22: aload_1
      23: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifne          38
      29: ldc           #22                 // String fail-never
      31: aload_1
      32: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          46
      38: aload_0
      39: aload_1
      40: putfield      #10                 // Field failureBehavior:Ljava/lang/String;
      43: goto          56
      46: new           #23                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc           #24                 // String Invalid failure behavior (must be one of: \'fail-fast\', \'fail-at-end\', \'fail-never\').
      52: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: return

  public java.lang.String getFailureBehavior();
    Code:
       0: aload_0
       1: getfield      #10                 // Field failureBehavior:Ljava/lang/String;
       4: areturn

  public void blackList(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       5: invokespecial #27                 // Method blackList:(Ljava/lang/String;)V
       8: return

  private void blackList(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field blackList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          110
      13: aload_0
      14: getfield      #4                  // Field blackList:Ljava/util/List;
      17: aload_1
      18: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: getfield      #14                 // Field sorter:Lorg/apache/maven/project/ProjectSorter;
      28: aload_1
      29: invokevirtual #30                 // Method org/apache/maven/project/ProjectSorter.getDependents:(Ljava/lang/String;)Ljava/util/List;
      32: astore_2
      33: aload_2
      34: ifnull        110
      37: aload_2
      38: invokeinterface #31,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      43: ifne          110
      46: aload_2
      47: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_3
      53: aload_3
      54: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          110
      62: aload_3
      63: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #35                 // class java/lang/String
      71: astore        4
      73: aload_0
      74: getfield      #11                 // Field buildSuccessesByProject:Ljava/util/Map;
      77: aload         4
      79: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      84: ifne          107
      87: aload_0
      88: getfield      #7                  // Field buildFailuresByProject:Ljava/util/Map;
      91: aload         4
      93: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      98: ifne          107
     101: aload_0
     102: aload         4
     104: invokespecial #27                 // Method blackList:(Ljava/lang/String;)V
     107: goto          53
     110: return

  public boolean isBlackListed(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: getfield      #4                  // Field blackList:Ljava/util/List;
       4: aload_1
       5: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       8: invokeinterface #28,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      13: ireturn

  private static java.lang.String getProjectKey(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method org/apache/maven/project/MavenProject.getGroupId:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #38                 // Method org/apache/maven/project/MavenProject.getArtifactId:()Ljava/lang/String;
       8: invokestatic  #39                 // Method org/apache/maven/artifact/ArtifactUtils.versionlessKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: areturn

  public void registerBuildFailure(org.apache.maven.project.MavenProject, java.lang.Exception, java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buildFailuresByProject:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       8: new           #40                 // class org/apache/maven/execution/BuildFailure
      11: dup
      12: aload_1
      13: lload         4
      15: aload_2
      16: invokespecial #41                 // Method org/apache/maven/execution/BuildFailure."<init>":(Lorg/apache/maven/project/MavenProject;JLjava/lang/Throwable;)V
      19: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: return

  public boolean hasBuildFailures();
    Code:
       0: aload_0
       1: getfield      #7                  // Field buildFailuresByProject:Ljava/util/Map;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean hasBuildFailure(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buildFailuresByProject:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       8: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ireturn

  public boolean hasMultipleProjects();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sorter:Lorg/apache/maven/project/ProjectSorter;
       4: invokevirtual #43                 // Method org/apache/maven/project/ProjectSorter.hasMultipleProjects:()Z
       7: ireturn

  public java.util.List<org.apache.maven.project.MavenProject> getSortedProjects();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sorter:Lorg/apache/maven/project/ProjectSorter;
       4: invokevirtual #44                 // Method org/apache/maven/project/ProjectSorter.getSortedProjects:()Ljava/util/List;
       7: areturn

  public org.apache.maven.project.MavenProject getTopLevelProject();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sorter:Lorg/apache/maven/project/ProjectSorter;
       4: invokevirtual #45                 // Method org/apache/maven/project/ProjectSorter.getTopLevelProject:()Lorg/apache/maven/project/MavenProject;
       7: areturn

  public boolean hasBuildSuccess(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: getfield      #11                 // Field buildSuccessesByProject:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       8: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ireturn

  public void registerBuildSuccess(org.apache.maven.project.MavenProject, long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field buildSuccessesByProject:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       8: new           #46                 // class org/apache/maven/execution/BuildSuccess
      11: dup
      12: aload_1
      13: lload_2
      14: invokespecial #47                 // Method org/apache/maven/execution/BuildSuccess."<init>":(Lorg/apache/maven/project/MavenProject;J)V
      17: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return

  public org.apache.maven.execution.BuildFailure getBuildFailure(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buildFailuresByProject:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       8: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #40                 // class org/apache/maven/execution/BuildFailure
      16: areturn

  public org.apache.maven.execution.BuildSuccess getBuildSuccess(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: getfield      #11                 // Field buildSuccessesByProject:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #26                 // Method getProjectKey:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
       8: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #46                 // class org/apache/maven/execution/BuildSuccess
      16: areturn

  public boolean executedMultipleProjects();
    Code:
       0: aload_0
       1: getfield      #7                  // Field buildFailuresByProject:Ljava/util/Map;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Map.size:()I
       9: aload_0
      10: getfield      #11                 // Field buildSuccessesByProject:Ljava/util/Map;
      13: invokeinterface #48,  1           // InterfaceMethod java/util/Map.size:()I
      18: iadd
      19: iconst_1
      20: if_icmple     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
}
