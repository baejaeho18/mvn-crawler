Compiled from "FilteredProjectDependencyGraph.java"
class org.apache.maven.FilteredProjectDependencyGraph implements org.apache.maven.execution.ProjectDependencyGraph {
  private org.apache.maven.execution.ProjectDependencyGraph projectDependencyGraph;

  private java.util.Map<org.apache.maven.project.MavenProject, ?> whiteList;

  private java.util.List<org.apache.maven.project.MavenProject> sortedProjects;

  public org.apache.maven.FilteredProjectDependencyGraph(org.apache.maven.execution.ProjectDependencyGraph, java.util.Collection<? extends org.apache.maven.project.MavenProject>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String project dependency graph missing
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field projectDependencyGraph:Lorg/apache/maven/execution/ProjectDependencyGraph;
      23: aload_0
      24: new           #6                  // class java/util/IdentityHashMap
      27: dup
      28: invokespecial #7                  // Method java/util/IdentityHashMap."<init>":()V
      31: putfield      #8                  // Field whiteList:Ljava/util/Map;
      34: aload_2
      35: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          77
      50: aload_3
      51: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #12                 // class org/apache/maven/project/MavenProject
      59: astore        4
      61: aload_0
      62: getfield      #8                  // Field whiteList:Ljava/util/Map;
      65: aload         4
      67: aconst_null
      68: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          41
      77: return

  public java.util.List<org.apache.maven.project.MavenProject> getSortedProjects();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sortedProjects:Ljava/util/List;
       4: ifnonnull     24
       7: aload_0
       8: aload_0
       9: aload_0
      10: getfield      #5                  // Field projectDependencyGraph:Lorg/apache/maven/execution/ProjectDependencyGraph;
      13: invokeinterface #15,  1           // InterfaceMethod org/apache/maven/execution/ProjectDependencyGraph.getSortedProjects:()Ljava/util/List;
      18: invokespecial #16                 // Method applyFilter:(Ljava/util/Collection;)Ljava/util/List;
      21: putfield      #14                 // Field sortedProjects:Ljava/util/List;
      24: new           #17                 // class java/util/ArrayList
      27: dup
      28: aload_0
      29: getfield      #14                 // Field sortedProjects:Ljava/util/List;
      32: invokespecial #18                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      35: areturn

  public java.util.List<org.apache.maven.project.MavenProject> getDownstreamProjects(org.apache.maven.project.MavenProject, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field projectDependencyGraph:Lorg/apache/maven/execution/ProjectDependencyGraph;
       5: aload_1
       6: iload_2
       7: invokeinterface #19,  3           // InterfaceMethod org/apache/maven/execution/ProjectDependencyGraph.getDownstreamProjects:(Lorg/apache/maven/project/MavenProject;Z)Ljava/util/List;
      12: invokespecial #16                 // Method applyFilter:(Ljava/util/Collection;)Ljava/util/List;
      15: areturn

  public java.util.List<org.apache.maven.project.MavenProject> getUpstreamProjects(org.apache.maven.project.MavenProject, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field projectDependencyGraph:Lorg/apache/maven/execution/ProjectDependencyGraph;
       5: aload_1
       6: iload_2
       7: invokeinterface #20,  3           // InterfaceMethod org/apache/maven/execution/ProjectDependencyGraph.getUpstreamProjects:(Lorg/apache/maven/project/MavenProject;Z)Ljava/util/List;
      12: invokespecial #16                 // Method applyFilter:(Ljava/util/Collection;)Ljava/util/List;
      15: areturn

  private java.util.List<org.apache.maven.project.MavenProject> applyFilter(java.util.Collection<? extends org.apache.maven.project.MavenProject>);
    Code:
       0: new           #17                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.size:()I
      10: invokespecial #22                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          67
      30: aload_3
      31: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #12                 // class org/apache/maven/project/MavenProject
      39: astore        4
      41: aload_0
      42: getfield      #8                  // Field whiteList:Ljava/util/Map;
      45: aload         4
      47: invokeinterface #23,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      52: ifeq          64
      55: aload_2
      56: aload         4
      58: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          21
      67: aload_2
      68: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getSortedProjects:()Ljava/util/List;
       4: invokevirtual #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn
}
