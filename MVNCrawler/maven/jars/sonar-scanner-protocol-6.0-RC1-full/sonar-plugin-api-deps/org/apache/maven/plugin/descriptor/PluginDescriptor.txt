Compiled from "PluginDescriptor.java"
public class org.apache.maven.plugin.descriptor.PluginDescriptor extends org.codehaus.plexus.component.repository.ComponentSetDescriptor implements java.lang.Cloneable {
  private static final java.lang.String LIFECYCLE_DESCRIPTOR;

  private java.lang.String groupId;

  private java.lang.String artifactId;

  private java.lang.String version;

  private java.lang.String goalPrefix;

  private java.lang.String source;

  private boolean inheritedByDefault;

  private java.util.List<org.apache.maven.artifact.Artifact> artifacts;

  private org.codehaus.plexus.classworlds.realm.ClassRealm classRealm;

  private java.util.Map<java.lang.String, org.apache.maven.artifact.Artifact> artifactMap;

  private java.util.Set<org.apache.maven.artifact.Artifact> introducedDependencyArtifacts;

  private java.lang.String name;

  private java.lang.String description;

  private java.lang.String requiredMavenVersion;

  private org.apache.maven.model.Plugin plugin;

  private org.apache.maven.artifact.Artifact pluginArtifact;

  private java.util.Map<java.lang.String, org.apache.maven.plugin.lifecycle.Lifecycle> lifecycleMappings;

  public org.apache.maven.plugin.descriptor.PluginDescriptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/plexus/component/repository/ComponentSetDescriptor."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field inheritedByDefault:Z
       9: return

  public java.util.List<org.apache.maven.plugin.descriptor.MojoDescriptor> getMojos();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getComponents:()Ljava/util/List;
       4: areturn

  public void addMojo(org.apache.maven.plugin.descriptor.MojoDescriptor) throws org.apache.maven.plugin.descriptor.DuplicateMojoDescriptorException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #4                  // Method getMojos:()Ljava/util/List;
       6: astore_3
       7: aload_3
       8: ifnull        42
      11: aload_3
      12: aload_1
      13: invokeinterface #5,  2            // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      18: ifeq          42
      21: aload_3
      22: aload_1
      23: invokeinterface #6,  2            // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      28: istore        4
      30: aload_3
      31: iload         4
      33: invokeinterface #7,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      38: checkcast     #8                  // class org/apache/maven/plugin/descriptor/MojoDescriptor
      41: astore_2
      42: aload_2
      43: ifnull        70
      46: new           #9                  // class org/apache/maven/plugin/descriptor/DuplicateMojoDescriptorException
      49: dup
      50: aload_0
      51: invokevirtual #10                 // Method getGoalPrefix:()Ljava/lang/String;
      54: aload_1
      55: invokevirtual #11                 // Method org/apache/maven/plugin/descriptor/MojoDescriptor.getGoal:()Ljava/lang/String;
      58: aload_2
      59: invokevirtual #12                 // Method org/apache/maven/plugin/descriptor/MojoDescriptor.getImplementation:()Ljava/lang/String;
      62: aload_1
      63: invokevirtual #12                 // Method org/apache/maven/plugin/descriptor/MojoDescriptor.getImplementation:()Ljava/lang/String;
      66: invokespecial #13                 // Method org/apache/maven/plugin/descriptor/DuplicateMojoDescriptorException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: aload_1
      72: invokevirtual #14                 // Method addComponentDescriptor:(Lorg/codehaus/plexus/component/repository/ComponentDescriptor;)V
      75: return

  public java.lang.String getGroupId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field groupId:Ljava/lang/String;
       4: areturn

  public void setGroupId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field groupId:Ljava/lang/String;
       5: return

  public java.lang.String getArtifactId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field artifactId:Ljava/lang/String;
       4: areturn

  public void setArtifactId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field artifactId:Ljava/lang/String;
       5: return

  public static java.lang.String constructPluginKey(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #20                 // String :
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #20                 // String :
      22: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public java.lang.String getPluginLookupKey();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #15                 // Field groupId:Ljava/lang/String;
      11: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #20                 // String :
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #16                 // Field artifactId:Ljava/lang/String;
      23: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field groupId:Ljava/lang/String;
       4: aload_0
       5: getfield      #16                 // Field artifactId:Ljava/lang/String;
       8: aload_0
       9: getfield      #22                 // Field version:Ljava/lang/String;
      12: invokestatic  #23                 // Method constructPluginKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: areturn

  public static java.lang.String getDefaultPluginArtifactId(java.lang.String);
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #24                 // String maven-
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #25                 // String -plugin
      18: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public static java.lang.String getDefaultPluginGroupId();
    Code:
       0: ldc           #26                 // String org.apache.maven.plugins
       2: areturn

  public static java.lang.String getGoalPrefixFromArtifactId(java.lang.String);
    Code:
       0: ldc           #27                 // String maven-plugin-plugin
       2: aload_0
       3: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          12
       9: ldc           #29                 // String plugin
      11: areturn
      12: aload_0
      13: ldc           #30                 // String -?maven-?
      15: ldc           #31                 // String
      17: invokevirtual #32                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      20: ldc           #33                 // String -?plugin-?
      22: ldc           #31                 // String
      24: invokevirtual #32                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: areturn

  public java.lang.String getGoalPrefix();
    Code:
       0: aload_0
       1: getfield      #34                 // Field goalPrefix:Ljava/lang/String;
       4: areturn

  public void setGoalPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field goalPrefix:Ljava/lang/String;
       5: return

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field version:Ljava/lang/String;
       5: return

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #22                 // Field version:Ljava/lang/String;
       4: areturn

  public void setSource(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field source:Ljava/lang/String;
       5: return

  public java.lang.String getSource();
    Code:
       0: aload_0
       1: getfield      #35                 // Field source:Ljava/lang/String;
       4: areturn

  public boolean isInheritedByDefault();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inheritedByDefault:Z
       4: ireturn

  public void setInheritedByDefault(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field inheritedByDefault:Z
       5: return

  public java.util.List<org.apache.maven.artifact.Artifact> getArtifacts();
    Code:
       0: aload_0
       1: getfield      #36                 // Field artifacts:Ljava/util/List;
       4: areturn

  public void setArtifacts(java.util.List<org.apache.maven.artifact.Artifact>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field artifacts:Ljava/util/List;
       5: aload_0
       6: aconst_null
       7: putfield      #37                 // Field artifactMap:Ljava/util/Map;
      10: return

  public java.util.Map<java.lang.String, org.apache.maven.artifact.Artifact> getArtifactMap();
    Code:
       0: aload_0
       1: getfield      #37                 // Field artifactMap:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: invokevirtual #38                 // Method getArtifacts:()Ljava/util/List;
      12: invokestatic  #39                 // Method org/apache/maven/artifact/ArtifactUtils.artifactMapByVersionlessId:(Ljava/util/Collection;)Ljava/util/Map;
      15: putfield      #37                 // Field artifactMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #37                 // Field artifactMap:Ljava/util/Map;
      22: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokevirtual #40                 // Method getId:()Ljava/lang/String;
      11: aload_1
      12: checkcast     #41                 // class org/apache/maven/plugin/descriptor/PluginDescriptor
      15: invokevirtual #40                 // Method getId:()Ljava/lang/String;
      18: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ireturn

  public int hashCode();
    Code:
       0: bipush        10
       2: aload_0
       3: invokevirtual #40                 // Method getId:()Ljava/lang/String;
       6: invokevirtual #42                 // Method java/lang/String.hashCode:()I
       9: iadd
      10: ireturn

  public org.apache.maven.plugin.descriptor.MojoDescriptor getMojo(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getMojos:()Ljava/util/List;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokevirtual #4                  // Method getMojos:()Ljava/util/List;
      13: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          54
      28: aload_2
      29: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #8                  // class org/apache/maven/plugin/descriptor/MojoDescriptor
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokevirtual #11                 // Method org/apache/maven/plugin/descriptor/MojoDescriptor.getGoal:()Ljava/lang/String;
      43: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          51
      49: aload_3
      50: areturn
      51: goto          19
      54: aconst_null
      55: areturn

  public void setClassRealm(org.codehaus.plexus.classworlds.realm.ClassRealm);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field classRealm:Lorg/codehaus/plexus/classworlds/realm/ClassRealm;
       5: return

  public org.codehaus.plexus.classworlds.realm.ClassRealm getClassRealm();
    Code:
       0: aload_0
       1: getfield      #46                 // Field classRealm:Lorg/codehaus/plexus/classworlds/realm/ClassRealm;
       4: areturn

  public void setIntroducedDependencyArtifacts(java.util.Set<org.apache.maven.artifact.Artifact>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field introducedDependencyArtifacts:Ljava/util/Set;
       5: return

  public java.util.Set<org.apache.maven.artifact.Artifact> getIntroducedDependencyArtifacts();
    Code:
       0: aload_0
       1: getfield      #47                 // Field introducedDependencyArtifacts:Ljava/util/Set;
       4: ifnull        14
       7: aload_0
       8: getfield      #47                 // Field introducedDependencyArtifacts:Ljava/util/Set;
      11: goto          17
      14: invokestatic  #48                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      17: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #49                 // Field name:Ljava/lang/String;
       4: areturn

  public void setDescription(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field description:Ljava/lang/String;
       5: return

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #50                 // Field description:Ljava/lang/String;
       4: areturn

  public void setRequiredMavenVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field requiredMavenVersion:Ljava/lang/String;
       5: return

  public java.lang.String getRequiredMavenVersion();
    Code:
       0: aload_0
       1: getfield      #51                 // Field requiredMavenVersion:Ljava/lang/String;
       4: areturn

  public void setPlugin(org.apache.maven.model.Plugin);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field plugin:Lorg/apache/maven/model/Plugin;
       5: return

  public org.apache.maven.model.Plugin getPlugin();
    Code:
       0: aload_0
       1: getfield      #52                 // Field plugin:Lorg/apache/maven/model/Plugin;
       4: areturn

  public org.apache.maven.artifact.Artifact getPluginArtifact();
    Code:
       0: aload_0
       1: getfield      #53                 // Field pluginArtifact:Lorg/apache/maven/artifact/Artifact;
       4: areturn

  public void setPluginArtifact(org.apache.maven.artifact.Artifact);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field pluginArtifact:Lorg/apache/maven/artifact/Artifact;
       5: return

  public org.apache.maven.plugin.lifecycle.Lifecycle getLifecycleMapping(java.lang.String) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException;
    Code:
       0: aload_0
       1: getfield      #54                 // Field lifecycleMappings:Ljava/util/Map;
       4: ifnonnull     111
       7: aconst_null
       8: astore_3
       9: aload_0
      10: ldc           #55                 // String META-INF/maven/lifecycle.xml
      12: invokespecial #56                 // Method getDescriptorStream:(Ljava/lang/String;)Ljava/io/InputStream;
      15: invokestatic  #57                 // Method org/codehaus/plexus/util/ReaderFactory.newXmlReader:(Ljava/io/InputStream;)Lorg/codehaus/plexus/util/xml/XmlStreamReader;
      18: astore_3
      19: new           #58                 // class org/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Reader
      22: dup
      23: invokespecial #59                 // Method org/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Reader."<init>":()V
      26: aload_3
      27: invokevirtual #60                 // Method org/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Reader.read:(Ljava/io/Reader;)Lorg/apache/maven/plugin/lifecycle/LifecycleConfiguration;
      30: astore_2
      31: aload_3
      32: invokestatic  #61                 // Method org/codehaus/plexus/util/IOUtil.close:(Ljava/io/Reader;)V
      35: goto          47
      38: astore        4
      40: aload_3
      41: invokestatic  #61                 // Method org/codehaus/plexus/util/IOUtil.close:(Ljava/io/Reader;)V
      44: aload         4
      46: athrow
      47: aload_0
      48: new           #62                 // class java/util/HashMap
      51: dup
      52: invokespecial #63                 // Method java/util/HashMap."<init>":()V
      55: putfield      #54                 // Field lifecycleMappings:Ljava/util/Map;
      58: aload_2
      59: invokevirtual #64                 // Method org/apache/maven/plugin/lifecycle/LifecycleConfiguration.getLifecycles:()Ljava/util/List;
      62: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      67: astore        4
      69: aload         4
      71: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          111
      79: aload         4
      81: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #65                 // class org/apache/maven/plugin/lifecycle/Lifecycle
      89: astore        5
      91: aload_0
      92: getfield      #54                 // Field lifecycleMappings:Ljava/util/Map;
      95: aload         5
      97: invokevirtual #66                 // Method org/apache/maven/plugin/lifecycle/Lifecycle.getId:()Ljava/lang/String;
     100: aload         5
     102: invokeinterface #67,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: goto          69
     111: aload_0
     112: getfield      #54                 // Field lifecycleMappings:Ljava/util/Map;
     115: aload_1
     116: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     121: checkcast     #65                 // class org/apache/maven/plugin/lifecycle/Lifecycle
     124: areturn
    Exception table:
       from    to  target type
           9    31    38   any
          38    40    38   any

  private java.io.InputStream getDescriptorStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #53                 // Field pluginArtifact:Lorg/apache/maven/artifact/Artifact;
       4: ifnull        19
       7: aload_0
       8: getfield      #53                 // Field pluginArtifact:Lorg/apache/maven/artifact/Artifact;
      11: invokeinterface #69,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getFile:()Ljava/io/File;
      16: goto          20
      19: aconst_null
      20: astore_2
      21: aload_2
      22: ifnonnull     55
      25: new           #70                 // class java/lang/IllegalStateException
      28: dup
      29: new           #17                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #71                 // String plugin main artifact has not been resolved for
      38: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #40                 // Method getId:()Ljava/lang/String;
      45: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_2
      56: invokevirtual #73                 // Method java/io/File.isFile:()Z
      59: ifeq          114
      62: new           #74                 // class java/net/URL
      65: dup
      66: new           #17                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #75                 // String jar:
      75: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_2
      79: invokevirtual #76                 // Method java/io/File.toURI:()Ljava/net/URI;
      82: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #78                 // String !/
      87: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #79                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
     100: invokevirtual #80                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
     103: areturn
     104: astore_3
     105: new           #70                 // class java/lang/IllegalStateException
     108: dup
     109: aload_3
     110: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     113: athrow
     114: new           #83                 // class java/io/FileInputStream
     117: dup
     118: new           #84                 // class java/io/File
     121: dup
     122: aload_2
     123: aload_1
     124: invokespecial #85                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     127: invokespecial #86                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
     130: areturn
    Exception table:
       from    to  target type
          62   103   104   Class java/net/MalformedURLException

  public org.apache.maven.plugin.descriptor.PluginDescriptor clone();
    Code:
       0: aload_0
       1: invokespecial #87                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #41                 // class org/apache/maven/plugin/descriptor/PluginDescriptor
       7: areturn
       8: astore_1
       9: new           #89                 // class java/lang/UnsupportedOperationException
      12: dup
      13: aload_1
      14: invokespecial #90                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method clone:()Lorg/apache/maven/plugin/descriptor/PluginDescriptor;
       4: areturn
}
