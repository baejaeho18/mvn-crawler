Compiled from "RepositorySystem.java"
public interface org.apache.maven.repository.RepositorySystem {
  public static final java.lang.String DEFAULT_LOCAL_REPO_ID;

  public static final java.lang.String userHome;

  public static final java.io.File userMavenConfigurationHome;

  public static final java.io.File defaultUserLocalRepository;

  public static final java.lang.String DEFAULT_REMOTE_REPO_ID;

  public static final java.lang.String DEFAULT_REMOTE_REPO_URL;

  public abstract org.apache.maven.artifact.Artifact createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract org.apache.maven.artifact.Artifact createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract org.apache.maven.artifact.Artifact createProjectArtifact(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.apache.maven.artifact.Artifact createArtifactWithClassifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract org.apache.maven.artifact.Artifact createPluginArtifact(org.apache.maven.model.Plugin);

  public abstract org.apache.maven.artifact.Artifact createDependencyArtifact(org.apache.maven.model.Dependency);

  public abstract org.apache.maven.artifact.repository.ArtifactRepository buildArtifactRepository(org.apache.maven.model.Repository) throws org.apache.maven.artifact.InvalidRepositoryException;

  public abstract org.apache.maven.artifact.repository.ArtifactRepository createDefaultRemoteRepository() throws org.apache.maven.artifact.InvalidRepositoryException;

  public abstract org.apache.maven.artifact.repository.ArtifactRepository createDefaultLocalRepository() throws org.apache.maven.artifact.InvalidRepositoryException;

  public abstract org.apache.maven.artifact.repository.ArtifactRepository createLocalRepository(java.io.File) throws org.apache.maven.artifact.InvalidRepositoryException;

  public abstract org.apache.maven.artifact.repository.ArtifactRepository createArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy);

  public abstract java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> getEffectiveRepositories(java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>);

  public abstract org.apache.maven.settings.Mirror getMirror(org.apache.maven.artifact.repository.ArtifactRepository, java.util.List<org.apache.maven.settings.Mirror>);

  public abstract void injectMirror(java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>, java.util.List<org.apache.maven.settings.Mirror>);

  public abstract void injectProxy(java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>, java.util.List<org.apache.maven.settings.Proxy>);

  public abstract void injectAuthentication(java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>, java.util.List<org.apache.maven.settings.Server>);

  public abstract void injectMirror(org.sonatype.aether.RepositorySystemSession, java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>);

  public abstract void injectProxy(org.sonatype.aether.RepositorySystemSession, java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>);

  public abstract void injectAuthentication(org.sonatype.aether.RepositorySystemSession, java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>);

  public abstract org.apache.maven.artifact.resolver.ArtifactResolutionResult resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest);

  public abstract void publish(org.apache.maven.artifact.repository.ArtifactRepository, java.io.File, java.lang.String, org.apache.maven.repository.ArtifactTransferListener) throws org.apache.maven.repository.ArtifactTransferFailedException;

  public abstract void retrieve(org.apache.maven.artifact.repository.ArtifactRepository, java.io.File, java.lang.String, org.apache.maven.repository.ArtifactTransferListener) throws org.apache.maven.repository.ArtifactTransferFailedException, org.apache.maven.repository.ArtifactDoesNotExistException;

  static {};
    Code:
       0: ldc           #1                  // String user.home
       2: invokestatic  #2                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: putstatic     #3                  // Field userHome:Ljava/lang/String;
       8: new           #4                  // class java/io/File
      11: dup
      12: getstatic     #3                  // Field userHome:Ljava/lang/String;
      15: ldc           #5                  // String .m2
      17: invokespecial #6                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: putstatic     #7                  // Field userMavenConfigurationHome:Ljava/io/File;
      23: new           #4                  // class java/io/File
      26: dup
      27: getstatic     #7                  // Field userMavenConfigurationHome:Ljava/io/File;
      30: ldc           #8                  // String repository
      32: invokespecial #9                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      35: putstatic     #10                 // Field defaultUserLocalRepository:Ljava/io/File;
      38: return
}
