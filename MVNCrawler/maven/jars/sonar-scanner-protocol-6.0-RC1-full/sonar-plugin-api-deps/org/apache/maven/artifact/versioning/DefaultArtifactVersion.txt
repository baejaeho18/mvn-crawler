Compiled from "DefaultArtifactVersion.java"
public class org.apache.maven.artifact.versioning.DefaultArtifactVersion implements org.apache.maven.artifact.versioning.ArtifactVersion {
  private java.lang.Integer majorVersion;

  private java.lang.Integer minorVersion;

  private java.lang.Integer incrementalVersion;

  private java.lang.Integer buildNumber;

  private java.lang.String qualifier;

  private org.apache.maven.artifact.versioning.ComparableVersion comparable;

  public org.apache.maven.artifact.versioning.DefaultArtifactVersion(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method parseVersion:(Ljava/lang/String;)V
       9: return

  public int hashCode();
    Code:
       0: bipush        11
       2: aload_0
       3: getfield      #3                  // Field comparable:Lorg/apache/maven/artifact/versioning/ComparableVersion;
       6: invokevirtual #4                  // Method org/apache/maven/artifact/versioning/ComparableVersion.hashCode:()I
       9: iadd
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class org/apache/maven/artifact/versioning/ArtifactVersion
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_1
      18: checkcast     #5                  // class org/apache/maven/artifact/versioning/ArtifactVersion
      21: invokevirtual #6                  // Method compareTo:(Lorg/apache/maven/artifact/versioning/ArtifactVersion;)I
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public int compareTo(org.apache.maven.artifact.versioning.ArtifactVersion);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/apache/maven/artifact/versioning/DefaultArtifactVersion
       4: ifeq          22
       7: aload_0
       8: getfield      #3                  // Field comparable:Lorg/apache/maven/artifact/versioning/ComparableVersion;
      11: aload_1
      12: checkcast     #7                  // class org/apache/maven/artifact/versioning/DefaultArtifactVersion
      15: getfield      #3                  // Field comparable:Lorg/apache/maven/artifact/versioning/ComparableVersion;
      18: invokevirtual #8                  // Method org/apache/maven/artifact/versioning/ComparableVersion.compareTo:(Lorg/apache/maven/artifact/versioning/ComparableVersion;)I
      21: ireturn
      22: aload_0
      23: new           #7                  // class org/apache/maven/artifact/versioning/DefaultArtifactVersion
      26: dup
      27: aload_1
      28: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #10                 // Method "<init>":(Ljava/lang/String;)V
      34: invokevirtual #6                  // Method compareTo:(Lorg/apache/maven/artifact/versioning/ArtifactVersion;)I
      37: ireturn

  public int getMajorVersion();
    Code:
       0: aload_0
       1: getfield      #11                 // Field majorVersion:Ljava/lang/Integer;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field majorVersion:Ljava/lang/Integer;
      11: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getMinorVersion();
    Code:
       0: aload_0
       1: getfield      #13                 // Field minorVersion:Ljava/lang/Integer;
       4: ifnull        17
       7: aload_0
       8: getfield      #13                 // Field minorVersion:Ljava/lang/Integer;
      11: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getIncrementalVersion();
    Code:
       0: aload_0
       1: getfield      #14                 // Field incrementalVersion:Ljava/lang/Integer;
       4: ifnull        17
       7: aload_0
       8: getfield      #14                 // Field incrementalVersion:Ljava/lang/Integer;
      11: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getBuildNumber();
    Code:
       0: aload_0
       1: getfield      #15                 // Field buildNumber:Ljava/lang/Integer;
       4: ifnull        17
       7: aload_0
       8: getfield      #15                 // Field buildNumber:Ljava/lang/Integer;
      11: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public java.lang.String getQualifier();
    Code:
       0: aload_0
       1: getfield      #16                 // Field qualifier:Ljava/lang/String;
       4: areturn

  public final void parseVersion(java.lang.String);
    Code:
       0: aload_0
       1: new           #17                 // class org/apache/maven/artifact/versioning/ComparableVersion
       4: dup
       5: aload_1
       6: invokespecial #18                 // Method org/apache/maven/artifact/versioning/ComparableVersion."<init>":(Ljava/lang/String;)V
       9: putfield      #3                  // Field comparable:Lorg/apache/maven/artifact/versioning/ComparableVersion;
      12: aload_1
      13: ldc           #19                 // String -
      15: invokevirtual #20                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      18: istore_2
      19: aconst_null
      20: astore        4
      22: iload_2
      23: ifge          31
      26: aload_1
      27: astore_3
      28: goto          47
      31: aload_1
      32: iconst_0
      33: iload_2
      34: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: astore_3
      38: aload_1
      39: iload_2
      40: iconst_1
      41: iadd
      42: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: astore        4
      47: aload         4
      49: ifnull        100
      52: aload         4
      54: invokevirtual #23                 // Method java/lang/String.length:()I
      57: iconst_1
      58: if_icmpeq     71
      61: aload         4
      63: ldc           #24                 // String 0
      65: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      68: ifne          83
      71: aload_0
      72: aload         4
      74: invokestatic  #26                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      77: putfield      #15                 // Field buildNumber:Ljava/lang/Integer;
      80: goto          89
      83: aload_0
      84: aload         4
      86: putfield      #16                 // Field qualifier:Ljava/lang/String;
      89: goto          100
      92: astore        5
      94: aload_0
      95: aload         4
      97: putfield      #16                 // Field qualifier:Ljava/lang/String;
     100: aload_3
     101: ldc           #28                 // String .
     103: invokevirtual #20                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     106: ifge          144
     109: aload_3
     110: ldc           #24                 // String 0
     112: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     115: ifne          144
     118: aload_0
     119: aload_3
     120: invokestatic  #26                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     123: putfield      #11                 // Field majorVersion:Ljava/lang/Integer;
     126: goto          281
     129: astore        5
     131: aload_0
     132: aload_1
     133: putfield      #16                 // Field qualifier:Ljava/lang/String;
     136: aload_0
     137: aconst_null
     138: putfield      #15                 // Field buildNumber:Ljava/lang/Integer;
     141: goto          281
     144: iconst_0
     145: istore        5
     147: new           #29                 // class java/util/StringTokenizer
     150: dup
     151: aload_3
     152: ldc           #28                 // String .
     154: invokespecial #30                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     157: astore        6
     159: aload_0
     160: aload         6
     162: invokestatic  #31                 // Method getNextIntegerToken:(Ljava/util/StringTokenizer;)Ljava/lang/Integer;
     165: putfield      #11                 // Field majorVersion:Ljava/lang/Integer;
     168: aload         6
     170: invokevirtual #32                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
     173: ifeq          185
     176: aload_0
     177: aload         6
     179: invokestatic  #31                 // Method getNextIntegerToken:(Ljava/util/StringTokenizer;)Ljava/lang/Integer;
     182: putfield      #13                 // Field minorVersion:Ljava/lang/Integer;
     185: aload         6
     187: invokevirtual #32                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
     190: ifeq          202
     193: aload_0
     194: aload         6
     196: invokestatic  #31                 // Method getNextIntegerToken:(Ljava/util/StringTokenizer;)Ljava/lang/Integer;
     199: putfield      #14                 // Field incrementalVersion:Ljava/lang/Integer;
     202: aload         6
     204: invokevirtual #32                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
     207: ifeq          213
     210: iconst_1
     211: istore        5
     213: aload_3
     214: ldc           #33                 // String ..
     216: invokevirtual #20                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     219: ifge          240
     222: aload_3
     223: ldc           #28                 // String .
     225: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     228: ifne          240
     231: aload_3
     232: ldc           #28                 // String .
     234: invokevirtual #34                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     237: ifeq          243
     240: iconst_1
     241: istore        5
     243: goto          251
     246: astore        7
     248: iconst_1
     249: istore        5
     251: iload         5
     253: ifeq          281
     256: aload_0
     257: aload_1
     258: putfield      #16                 // Field qualifier:Ljava/lang/String;
     261: aload_0
     262: aconst_null
     263: putfield      #11                 // Field majorVersion:Ljava/lang/Integer;
     266: aload_0
     267: aconst_null
     268: putfield      #13                 // Field minorVersion:Ljava/lang/Integer;
     271: aload_0
     272: aconst_null
     273: putfield      #14                 // Field incrementalVersion:Ljava/lang/Integer;
     276: aload_0
     277: aconst_null
     278: putfield      #15                 // Field buildNumber:Ljava/lang/Integer;
     281: return
    Exception table:
       from    to  target type
          52    89    92   Class java/lang/NumberFormatException
         118   126   129   Class java/lang/NumberFormatException
         159   243   246   Class java/lang/NumberFormatException

  private static java.lang.Integer getNextIntegerToken(java.util.StringTokenizer);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: invokevirtual #23                 // Method java/lang/String.length:()I
       9: iconst_1
      10: if_icmple     54
      13: aload_1
      14: ldc           #24                 // String 0
      16: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          54
      22: new           #27                 // class java/lang/NumberFormatException
      25: dup
      26: new           #36                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #38                 // String Number part has a leading 0: \'
      35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #40                 // String \'
      44: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #42                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_1
      55: invokestatic  #26                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      58: areturn

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #11                 // Field majorVersion:Ljava/lang/Integer;
      12: ifnull        24
      15: aload_1
      16: aload_0
      17: getfield      #11                 // Field majorVersion:Ljava/lang/Integer;
      20: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: getfield      #13                 // Field minorVersion:Ljava/lang/Integer;
      28: ifnull        47
      31: aload_1
      32: ldc           #28                 // String .
      34: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #13                 // Field minorVersion:Ljava/lang/Integer;
      43: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_0
      48: getfield      #14                 // Field incrementalVersion:Ljava/lang/Integer;
      51: ifnull        70
      54: aload_1
      55: ldc           #28                 // String .
      57: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: aload_0
      63: getfield      #14                 // Field incrementalVersion:Ljava/lang/Integer;
      66: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: pop
      70: aload_0
      71: getfield      #15                 // Field buildNumber:Ljava/lang/Integer;
      74: ifnull        96
      77: aload_1
      78: ldc           #19                 // String -
      80: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: aload_0
      86: getfield      #15                 // Field buildNumber:Ljava/lang/Integer;
      89: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: pop
      93: goto          126
      96: aload_0
      97: getfield      #16                 // Field qualifier:Ljava/lang/String;
     100: ifnull        126
     103: aload_1
     104: invokevirtual #44                 // Method java/lang/StringBuilder.length:()I
     107: ifle          117
     110: aload_1
     111: ldc           #19                 // String -
     113: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: pop
     117: aload_1
     118: aload_0
     119: getfield      #16                 // Field qualifier:Ljava/lang/String;
     122: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: pop
     126: aload_1
     127: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class org/apache/maven/artifact/versioning/ArtifactVersion
       5: invokevirtual #6                  // Method compareTo:(Lorg/apache/maven/artifact/versioning/ArtifactVersion;)I
       8: ireturn
}
