Compiled from "Artifact.java"
public interface org.apache.maven.artifact.Artifact extends java.lang.Comparable<org.apache.maven.artifact.Artifact> {
  public static final java.lang.String RELEASE_VERSION;

  public static final java.lang.String LATEST_VERSION;

  public static final java.lang.String SNAPSHOT_VERSION;

  public static final java.util.regex.Pattern VERSION_FILE_PATTERN;

  public static final java.lang.String SCOPE_COMPILE;

  public static final java.lang.String SCOPE_COMPILE_PLUS_RUNTIME;

  public static final java.lang.String SCOPE_TEST;

  public static final java.lang.String SCOPE_RUNTIME;

  public static final java.lang.String SCOPE_RUNTIME_PLUS_SYSTEM;

  public static final java.lang.String SCOPE_PROVIDED;

  public static final java.lang.String SCOPE_SYSTEM;

  public static final java.lang.String SCOPE_IMPORT;

  public abstract java.lang.String getGroupId();

  public abstract java.lang.String getArtifactId();

  public abstract java.lang.String getVersion();

  public abstract void setVersion(java.lang.String);

  public abstract java.lang.String getScope();

  public abstract java.lang.String getType();

  public abstract java.lang.String getClassifier();

  public abstract boolean hasClassifier();

  public abstract java.io.File getFile();

  public abstract void setFile(java.io.File);

  public abstract java.lang.String getBaseVersion();

  public abstract void setBaseVersion(java.lang.String);

  public abstract java.lang.String getId();

  public abstract java.lang.String getDependencyConflictId();

  public abstract void addMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata);

  public abstract java.util.Collection<org.apache.maven.artifact.metadata.ArtifactMetadata> getMetadataList();

  public abstract void setRepository(org.apache.maven.artifact.repository.ArtifactRepository);

  public abstract org.apache.maven.artifact.repository.ArtifactRepository getRepository();

  public abstract void updateVersion(java.lang.String, org.apache.maven.artifact.repository.ArtifactRepository);

  public abstract java.lang.String getDownloadUrl();

  public abstract void setDownloadUrl(java.lang.String);

  public abstract org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter();

  public abstract void setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter);

  public abstract org.apache.maven.artifact.handler.ArtifactHandler getArtifactHandler();

  public abstract java.util.List<java.lang.String> getDependencyTrail();

  public abstract void setDependencyTrail(java.util.List<java.lang.String>);

  public abstract void setScope(java.lang.String);

  public abstract org.apache.maven.artifact.versioning.VersionRange getVersionRange();

  public abstract void setVersionRange(org.apache.maven.artifact.versioning.VersionRange);

  public abstract void selectVersion(java.lang.String);

  public abstract void setGroupId(java.lang.String);

  public abstract void setArtifactId(java.lang.String);

  public abstract boolean isSnapshot();

  public abstract void setResolved(boolean);

  public abstract boolean isResolved();

  public abstract void setResolvedVersion(java.lang.String);

  public abstract void setArtifactHandler(org.apache.maven.artifact.handler.ArtifactHandler);

  public abstract boolean isRelease();

  public abstract void setRelease(boolean);

  public abstract java.util.List<org.apache.maven.artifact.versioning.ArtifactVersion> getAvailableVersions();

  public abstract void setAvailableVersions(java.util.List<org.apache.maven.artifact.versioning.ArtifactVersion>);

  public abstract boolean isOptional();

  public abstract void setOptional(boolean);

  public abstract org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException;

  public abstract boolean isSelectedVersionKnown() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException;

  static {};
    Code:
       0: ldc           #1                  // String ^(.*)-([0-9]{8}.[0-9]{6})-([0-9]+)$
       2: invokestatic  #2                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #3                  // Field VERSION_FILE_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
