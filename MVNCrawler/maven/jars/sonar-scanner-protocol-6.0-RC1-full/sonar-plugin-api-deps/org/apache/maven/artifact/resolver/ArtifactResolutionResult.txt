Compiled from "ArtifactResolutionResult.java"
public class org.apache.maven.artifact.resolver.ArtifactResolutionResult {
  private org.apache.maven.artifact.Artifact originatingArtifact;

  private java.util.List<org.apache.maven.artifact.Artifact> missingArtifacts;

  private java.util.List<java.lang.Exception> exceptions;

  private java.util.List<java.lang.Exception> versionRangeViolations;

  private java.util.List<org.apache.maven.artifact.resolver.ArtifactResolutionException> metadataResolutionExceptions;

  private java.util.List<org.apache.maven.artifact.resolver.CyclicDependencyException> circularDependencyExceptions;

  private java.util.List<org.apache.maven.artifact.resolver.ArtifactResolutionException> errorArtifactExceptions;

  private java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> repositories;

  private java.util.Set<org.apache.maven.artifact.Artifact> artifacts;

  private java.util.Set<org.apache.maven.artifact.resolver.ResolutionNode> resolutionNodes;

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.maven.artifact.Artifact getOriginatingArtifact();
    Code:
       0: aload_0
       1: getfield      #2                  // Field originatingArtifact:Lorg/apache/maven/artifact/Artifact;
       4: areturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult setOriginatingArtifact(org.apache.maven.artifact.Artifact);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field originatingArtifact:Lorg/apache/maven/artifact/Artifact;
       5: aload_0
       6: areturn

  public void addArtifact(org.apache.maven.artifact.Artifact);
    Code:
       0: aload_0
       1: getfield      #3                  // Field artifacts:Ljava/util/Set;
       4: ifnonnull     18
       7: aload_0
       8: new           #4                  // class java/util/LinkedHashSet
      11: dup
      12: invokespecial #5                  // Method java/util/LinkedHashSet."<init>":()V
      15: putfield      #3                  // Field artifacts:Ljava/util/Set;
      18: aload_0
      19: getfield      #3                  // Field artifacts:Ljava/util/Set;
      22: aload_1
      23: invokeinterface #6,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public java.util.Set<org.apache.maven.artifact.Artifact> getArtifacts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field artifacts:Ljava/util/Set;
       4: ifnonnull     18
       7: aload_0
       8: new           #4                  // class java/util/LinkedHashSet
      11: dup
      12: invokespecial #5                  // Method java/util/LinkedHashSet."<init>":()V
      15: putfield      #3                  // Field artifacts:Ljava/util/Set;
      18: aload_0
      19: getfield      #3                  // Field artifacts:Ljava/util/Set;
      22: areturn

  public void setArtifacts(java.util.Set<org.apache.maven.artifact.Artifact>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field artifacts:Ljava/util/Set;
       5: return

  public java.util.Set<org.apache.maven.artifact.resolver.ResolutionNode> getArtifactResolutionNodes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field resolutionNodes:Ljava/util/Set;
       4: ifnonnull     18
       7: aload_0
       8: new           #4                  // class java/util/LinkedHashSet
      11: dup
      12: invokespecial #5                  // Method java/util/LinkedHashSet."<init>":()V
      15: putfield      #7                  // Field resolutionNodes:Ljava/util/Set;
      18: aload_0
      19: getfield      #7                  // Field resolutionNodes:Ljava/util/Set;
      22: areturn

  public void setArtifactResolutionNodes(java.util.Set<org.apache.maven.artifact.resolver.ResolutionNode>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field resolutionNodes:Ljava/util/Set;
       5: return

  public boolean hasMissingArtifacts();
    Code:
       0: aload_0
       1: getfield      #8                  // Field missingArtifacts:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #8                  // Field missingArtifacts:Ljava/util/List;
      11: invokeinterface #9,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.util.List<org.apache.maven.artifact.Artifact> getMissingArtifacts();
    Code:
       0: aload_0
       1: getfield      #8                  // Field missingArtifacts:Ljava/util/List;
       4: ifnonnull     13
       7: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: goto          17
      13: aload_0
      14: getfield      #8                  // Field missingArtifacts:Ljava/util/List;
      17: areturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult addMissingArtifact(org.apache.maven.artifact.Artifact);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #8                  // Field missingArtifacts:Ljava/util/List;
       6: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
       9: putfield      #8                  // Field missingArtifacts:Ljava/util/List;
      12: aload_0
      13: getfield      #8                  // Field missingArtifacts:Ljava/util/List;
      16: aload_1
      17: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: areturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult setUnresolvedArtifacts(java.util.List<org.apache.maven.artifact.Artifact>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field missingArtifacts:Ljava/util/List;
       5: aload_0
       6: areturn

  public boolean isSuccess();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method hasMissingArtifacts:()Z
       4: ifne          18
       7: aload_0
       8: invokevirtual #14                 // Method hasExceptions:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean hasExceptions();
    Code:
       0: aload_0
       1: getfield      #15                 // Field exceptions:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #15                 // Field exceptions:Ljava/util/List;
      11: invokeinterface #9,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.util.List<java.lang.Exception> getExceptions();
    Code:
       0: aload_0
       1: getfield      #15                 // Field exceptions:Ljava/util/List;
       4: ifnonnull     13
       7: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: goto          17
      13: aload_0
      14: getfield      #15                 // Field exceptions:Ljava/util/List;
      17: areturn

  public boolean hasVersionRangeViolations();
    Code:
       0: aload_0
       1: getfield      #16                 // Field versionRangeViolations:Ljava/util/List;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult addVersionRangeViolation(java.lang.Exception);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #16                 // Field versionRangeViolations:Ljava/util/List;
       6: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
       9: putfield      #16                 // Field versionRangeViolations:Ljava/util/List;
      12: aload_0
      13: getfield      #16                 // Field versionRangeViolations:Ljava/util/List;
      16: aload_1
      17: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: aload_0
      25: aload_0
      26: getfield      #15                 // Field exceptions:Ljava/util/List;
      29: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
      32: putfield      #15                 // Field exceptions:Ljava/util/List;
      35: aload_0
      36: getfield      #15                 // Field exceptions:Ljava/util/List;
      39: aload_1
      40: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_0
      47: areturn

  public org.apache.maven.artifact.versioning.OverConstrainedVersionException getVersionRangeViolation(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field versionRangeViolations:Ljava/util/List;
       4: iload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #18                 // class org/apache/maven/artifact/versioning/OverConstrainedVersionException
      13: areturn

  public java.util.List<java.lang.Exception> getVersionRangeViolations();
    Code:
       0: aload_0
       1: getfield      #16                 // Field versionRangeViolations:Ljava/util/List;
       4: ifnonnull     13
       7: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: goto          17
      13: aload_0
      14: getfield      #16                 // Field versionRangeViolations:Ljava/util/List;
      17: areturn

  public boolean hasMetadataResolutionExceptions();
    Code:
       0: aload_0
       1: getfield      #19                 // Field metadataResolutionExceptions:Ljava/util/List;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult addMetadataResolutionException(org.apache.maven.artifact.resolver.ArtifactResolutionException);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #19                 // Field metadataResolutionExceptions:Ljava/util/List;
       6: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
       9: putfield      #19                 // Field metadataResolutionExceptions:Ljava/util/List;
      12: aload_0
      13: getfield      #19                 // Field metadataResolutionExceptions:Ljava/util/List;
      16: aload_1
      17: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: aload_0
      25: aload_0
      26: getfield      #15                 // Field exceptions:Ljava/util/List;
      29: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
      32: putfield      #15                 // Field exceptions:Ljava/util/List;
      35: aload_0
      36: getfield      #15                 // Field exceptions:Ljava/util/List;
      39: aload_1
      40: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_0
      47: areturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionException getMetadataResolutionException(int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field metadataResolutionExceptions:Ljava/util/List;
       4: iload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #20                 // class org/apache/maven/artifact/resolver/ArtifactResolutionException
      13: areturn

  public java.util.List<org.apache.maven.artifact.resolver.ArtifactResolutionException> getMetadataResolutionExceptions();
    Code:
       0: aload_0
       1: getfield      #19                 // Field metadataResolutionExceptions:Ljava/util/List;
       4: ifnonnull     13
       7: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: goto          17
      13: aload_0
      14: getfield      #19                 // Field metadataResolutionExceptions:Ljava/util/List;
      17: areturn

  public boolean hasErrorArtifactExceptions();
    Code:
       0: aload_0
       1: getfield      #21                 // Field errorArtifactExceptions:Ljava/util/List;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult addErrorArtifactException(org.apache.maven.artifact.resolver.ArtifactResolutionException);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #21                 // Field errorArtifactExceptions:Ljava/util/List;
       6: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
       9: putfield      #21                 // Field errorArtifactExceptions:Ljava/util/List;
      12: aload_0
      13: getfield      #21                 // Field errorArtifactExceptions:Ljava/util/List;
      16: aload_1
      17: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: aload_0
      25: aload_0
      26: getfield      #15                 // Field exceptions:Ljava/util/List;
      29: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
      32: putfield      #15                 // Field exceptions:Ljava/util/List;
      35: aload_0
      36: getfield      #15                 // Field exceptions:Ljava/util/List;
      39: aload_1
      40: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_0
      47: areturn

  public java.util.List<org.apache.maven.artifact.resolver.ArtifactResolutionException> getErrorArtifactExceptions();
    Code:
       0: aload_0
       1: getfield      #21                 // Field errorArtifactExceptions:Ljava/util/List;
       4: ifnonnull     11
       7: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #21                 // Field errorArtifactExceptions:Ljava/util/List;
      15: areturn

  public boolean hasCircularDependencyExceptions();
    Code:
       0: aload_0
       1: getfield      #22                 // Field circularDependencyExceptions:Ljava/util/List;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult addCircularDependencyException(org.apache.maven.artifact.resolver.CyclicDependencyException);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #22                 // Field circularDependencyExceptions:Ljava/util/List;
       6: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
       9: putfield      #22                 // Field circularDependencyExceptions:Ljava/util/List;
      12: aload_0
      13: getfield      #22                 // Field circularDependencyExceptions:Ljava/util/List;
      16: aload_1
      17: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: aload_0
      25: aload_0
      26: getfield      #15                 // Field exceptions:Ljava/util/List;
      29: invokespecial #11                 // Method initList:(Ljava/util/List;)Ljava/util/List;
      32: putfield      #15                 // Field exceptions:Ljava/util/List;
      35: aload_0
      36: getfield      #15                 // Field exceptions:Ljava/util/List;
      39: aload_1
      40: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_0
      47: areturn

  public org.apache.maven.artifact.resolver.CyclicDependencyException getCircularDependencyException(int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field circularDependencyExceptions:Ljava/util/List;
       4: iload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #23                 // class org/apache/maven/artifact/resolver/CyclicDependencyException
      13: areturn

  public java.util.List<org.apache.maven.artifact.resolver.CyclicDependencyException> getCircularDependencyExceptions();
    Code:
       0: aload_0
       1: getfield      #22                 // Field circularDependencyExceptions:Ljava/util/List;
       4: ifnonnull     11
       7: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #22                 // Field circularDependencyExceptions:Ljava/util/List;
      15: areturn

  public java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> getRepositories();
    Code:
       0: aload_0
       1: getfield      #24                 // Field repositories:Ljava/util/List;
       4: ifnonnull     11
       7: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #24                 // Field repositories:Ljava/util/List;
      15: areturn

  public org.apache.maven.artifact.resolver.ArtifactResolutionResult setRepositories(java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field repositories:Ljava/util/List;
       5: aload_0
       6: areturn

  private <T> java.util.List<T> initList(java.util.List<T>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #25                 // class java/util/ArrayList
       7: dup
       8: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      11: areturn
      12: aload_1
      13: areturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field artifacts:Ljava/util/Set;
      12: ifnull        117
      15: iconst_1
      16: istore_2
      17: aload_1
      18: ldc           #29                 // String ---------
      20: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #31                 // String \n
      25: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: aload_0
      31: getfield      #3                  // Field artifacts:Ljava/util/Set;
      34: invokeinterface #32,  1           // InterfaceMethod java/util/Set.size:()I
      39: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #31                 // String \n
      44: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_0
      49: getfield      #3                  // Field artifacts:Ljava/util/Set;
      52: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          105
      67: aload_3
      68: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #37                 // class org/apache/maven/artifact/Artifact
      76: astore        4
      78: aload_1
      79: iload_2
      80: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: ldc           #38                 // String
      85: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         4
      90: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #31                 // String \n
      95: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: iinc          2, 1
     102: goto          58
     105: aload_1
     106: ldc           #29                 // String ---------
     108: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: ldc           #31                 // String \n
     113: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: pop
     117: aload_1
     118: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: areturn
}
