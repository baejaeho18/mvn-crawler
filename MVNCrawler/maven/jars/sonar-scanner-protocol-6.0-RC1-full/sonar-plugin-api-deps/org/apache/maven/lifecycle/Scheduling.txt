Compiled from "Scheduling.java"
public class org.apache.maven.lifecycle.Scheduling {
  private java.lang.String lifecycle;

  private java.util.List<org.apache.maven.lifecycle.Schedule> schedules;

  public org.apache.maven.lifecycle.Scheduling();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.maven.lifecycle.Scheduling(java.lang.String, java.util.List<org.apache.maven.lifecycle.Schedule>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field lifecycle:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field schedules:Ljava/util/List;
      14: return

  public java.lang.String getLifecycle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field lifecycle:Ljava/lang/String;
       4: areturn

  public void setLifecycle(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field lifecycle:Ljava/lang/String;
       5: return

  public java.util.List<org.apache.maven.lifecycle.Schedule> getSchedules();
    Code:
       0: aload_0
       1: getfield      #3                  // Field schedules:Ljava/util/List;
       4: areturn

  public org.apache.maven.lifecycle.Schedule getSchedule(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        49
       4: aload_0
       5: getfield      #3                  // Field schedules:Ljava/util/List;
       8: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          49
      23: aload_2
      24: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #7                  // class org/apache/maven/lifecycle/Schedule
      32: astore_3
      33: aload_1
      34: aload_3
      35: invokevirtual #8                  // Method org/apache/maven/lifecycle/Schedule.getPhase:()Ljava/lang/String;
      38: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          46
      44: aload_3
      45: areturn
      46: goto          14
      49: aconst_null
      50: areturn

  public org.apache.maven.lifecycle.Schedule getSchedule(org.apache.maven.plugin.MojoExecution);
    Code:
       0: aload_1
       1: ifnull        46
       4: aload_0
       5: getfield      #3                  // Field schedules:Ljava/util/List;
       8: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          46
      23: aload_2
      24: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #7                  // class org/apache/maven/lifecycle/Schedule
      32: astore_3
      33: aload_3
      34: aload_1
      35: invokevirtual #10                 // Method org/apache/maven/lifecycle/Schedule.appliesTo:(Lorg/apache/maven/plugin/MojoExecution;)Z
      38: ifeq          43
      41: aload_3
      42: areturn
      43: goto          14
      46: aconst_null
      47: areturn

  public void setSchedules(java.util.List<org.apache.maven.lifecycle.Schedule>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field schedules:Ljava/util/List;
       5: return
}
