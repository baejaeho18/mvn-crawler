Compiled from "MavenSession.java"
public class org.apache.maven.execution.MavenSession implements java.lang.Cloneable {
  private org.codehaus.plexus.PlexusContainer container;

  private org.apache.maven.execution.MavenExecutionRequest request;

  private org.apache.maven.execution.MavenExecutionResult result;

  private org.sonatype.aether.RepositorySystemSession repositorySession;

  private final org.apache.maven.settings.Settings settings;

  private java.util.Properties executionProperties;

  private org.apache.maven.project.MavenProject currentProject;

  private java.util.List<org.apache.maven.project.MavenProject> projects;

  private org.apache.maven.project.MavenProject topLevelProject;

  private org.apache.maven.execution.ProjectDependencyGraph projectDependencyGraph;

  private boolean parallel;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>> pluginContextsByProjectAndPluginKey;

  public org.apache.maven.execution.MavenSession(org.codehaus.plexus.PlexusContainer, org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.execution.MavenExecutionResult, org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: anewarray     #1                  // class org/apache/maven/project/MavenProject
       8: dup
       9: iconst_0
      10: aload         4
      12: aastore
      13: invokestatic  #2                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      16: invokespecial #3                  // Method "<init>":(Lorg/codehaus/plexus/PlexusContainer;Lorg/apache/maven/execution/MavenExecutionRequest;Lorg/apache/maven/execution/MavenExecutionResult;Ljava/util/List;)V
      19: return

  public org.apache.maven.execution.MavenSession(org.codehaus.plexus.PlexusContainer, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.monitor.event.EventDispatcher, org.apache.maven.execution.ReactorManager, java.util.List<java.lang.String>, java.lang.String, java.util.Properties, java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aconst_null
      15: aload         9
      17: invokespecial #4                  // Method "<init>":(Lorg/codehaus/plexus/PlexusContainer;Lorg/apache/maven/settings/Settings;Lorg/apache/maven/artifact/repository/ArtifactRepository;Lorg/apache/maven/monitor/event/EventDispatcher;Lorg/apache/maven/execution/ReactorManager;Ljava/util/List;Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;Ljava/util/Date;)V
      20: return

  public org.apache.maven.execution.MavenSession(org.codehaus.plexus.PlexusContainer, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.monitor.event.EventDispatcher, org.apache.maven.execution.ReactorManager, java.util.List<java.lang.String>, java.lang.String, java.util.Properties, java.util.Properties, java.util.Date);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
      20: aload_0
      21: aload_2
      22: putfield      #10                 // Field settings:Lorg/apache/maven/settings/Settings;
      25: aload_0
      26: aload         8
      28: putfield      #11                 // Field executionProperties:Ljava/util/Properties;
      31: aload_0
      32: new           #12                 // class org/apache/maven/execution/DefaultMavenExecutionRequest
      35: dup
      36: invokespecial #13                 // Method org/apache/maven/execution/DefaultMavenExecutionRequest."<init>":()V
      39: putfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      42: aload_0
      43: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      46: aload         9
      48: invokeinterface #15,  2           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.setUserProperties:(Ljava/util/Properties;)Lorg/apache/maven/execution/MavenExecutionRequest;
      53: pop
      54: aload_0
      55: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      58: aload_3
      59: invokeinterface #16,  2           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.setLocalRepository:(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Lorg/apache/maven/execution/MavenExecutionRequest;
      64: pop
      65: aload_0
      66: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      69: aload         6
      71: invokeinterface #17,  2           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.setGoals:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
      76: pop
      77: aload_0
      78: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      81: aload         7
      83: ifnull        98
      86: new           #18                 // class java/io/File
      89: dup
      90: aload         7
      92: invokespecial #19                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      95: goto          99
      98: aconst_null
      99: invokeinterface #20,  2           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.setBaseDirectory:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
     104: pop
     105: aload_0
     106: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
     109: aload         10
     111: invokeinterface #21,  2           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.setStartTime:(Ljava/util/Date;)Lorg/apache/maven/execution/MavenExecutionRequest;
     116: pop
     117: return

  public org.apache.maven.execution.MavenSession(org.codehaus.plexus.PlexusContainer, org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.execution.MavenExecutionResult, java.util.List<org.apache.maven.project.MavenProject>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
      20: aload_0
      21: aload_2
      22: putfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      25: aload_0
      26: aload_3
      27: putfield      #22                 // Field result:Lorg/apache/maven/execution/MavenExecutionResult;
      30: aload_0
      31: new           #23                 // class org/apache/maven/execution/SettingsAdapter
      34: dup
      35: aload_2
      36: invokespecial #24                 // Method org/apache/maven/execution/SettingsAdapter."<init>":(Lorg/apache/maven/execution/MavenExecutionRequest;)V
      39: putfield      #10                 // Field settings:Lorg/apache/maven/settings/Settings;
      42: aload_0
      43: aload         4
      45: invokevirtual #25                 // Method setProjects:(Ljava/util/List;)V
      48: return

  public org.apache.maven.execution.MavenSession(org.codehaus.plexus.PlexusContainer, org.sonatype.aether.RepositorySystemSession, org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.execution.MavenExecutionResult);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
      20: aload_0
      21: aload_3
      22: putfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      25: aload_0
      26: aload         4
      28: putfield      #22                 // Field result:Lorg/apache/maven/execution/MavenExecutionResult;
      31: aload_0
      32: new           #23                 // class org/apache/maven/execution/SettingsAdapter
      35: dup
      36: aload_3
      37: invokespecial #24                 // Method org/apache/maven/execution/SettingsAdapter."<init>":(Lorg/apache/maven/execution/MavenExecutionRequest;)V
      40: putfield      #10                 // Field settings:Lorg/apache/maven/settings/Settings;
      43: aload_0
      44: aload_2
      45: putfield      #26                 // Field repositorySession:Lorg/sonatype/aether/RepositorySystemSession;
      48: return

  public void setProjects(java.util.List<org.apache.maven.project.MavenProject>);
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifne          78
       9: aload_0
      10: aload_1
      11: iconst_0
      12: invokeinterface #28,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #1                  // class org/apache/maven/project/MavenProject
      20: putfield      #29                 // Field currentProject:Lorg/apache/maven/project/MavenProject;
      23: aload_0
      24: aload_0
      25: getfield      #29                 // Field currentProject:Lorg/apache/maven/project/MavenProject;
      28: putfield      #30                 // Field topLevelProject:Lorg/apache/maven/project/MavenProject;
      31: aload_1
      32: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore_2
      38: aload_2
      39: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          75
      47: aload_2
      48: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #1                  // class org/apache/maven/project/MavenProject
      56: astore_3
      57: aload_3
      58: invokevirtual #34                 // Method org/apache/maven/project/MavenProject.isExecutionRoot:()Z
      61: ifeq          72
      64: aload_0
      65: aload_3
      66: putfield      #30                 // Field topLevelProject:Lorg/apache/maven/project/MavenProject;
      69: goto          75
      72: goto          38
      75: goto          88
      78: aload_0
      79: aconst_null
      80: putfield      #29                 // Field currentProject:Lorg/apache/maven/project/MavenProject;
      83: aload_0
      84: aconst_null
      85: putfield      #30                 // Field topLevelProject:Lorg/apache/maven/project/MavenProject;
      88: aload_0
      89: aload_1
      90: putfield      #35                 // Field projects:Ljava/util/List;
      93: return

  public org.codehaus.plexus.PlexusContainer getContainer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
       4: areturn

  public java.lang.Object lookup(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object lookup(java.lang.String, java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: aload_2
       6: invokeinterface #37,  3           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookup:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      11: areturn

  public java.util.List<java.lang.Object> lookupList(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookupList:(Ljava/lang/String;)Ljava/util/List;
      10: areturn

  public java.util.Map<java.lang.String, java.lang.Object> lookupMap(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field container:Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookupMap:(Ljava/lang/String;)Ljava/util/Map;
      10: areturn

  public org.apache.maven.artifact.repository.RepositoryCache getRepositoryCache();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #40,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getLocalRepository:()Lorg/apache/maven/artifact/repository/ArtifactRepository;
       9: areturn

  public java.util.List<java.lang.String> getGoals();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #41,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getGoals:()Ljava/util/List;
       9: areturn

  public java.util.Properties getUserProperties();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getUserProperties:()Ljava/util/Properties;
       9: areturn

  public java.util.Properties getSystemProperties();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #43,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getSystemProperties:()Ljava/util/Properties;
       9: areturn

  public java.util.Properties getExecutionProperties();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executionProperties:Ljava/util/Properties;
       4: ifnonnull     50
       7: aload_0
       8: new           #44                 // class java/util/Properties
      11: dup
      12: invokespecial #45                 // Method java/util/Properties."<init>":()V
      15: putfield      #11                 // Field executionProperties:Ljava/util/Properties;
      18: aload_0
      19: getfield      #11                 // Field executionProperties:Ljava/util/Properties;
      22: aload_0
      23: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      26: invokeinterface #43,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getSystemProperties:()Ljava/util/Properties;
      31: invokevirtual #46                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      34: aload_0
      35: getfield      #11                 // Field executionProperties:Ljava/util/Properties;
      38: aload_0
      39: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
      42: invokeinterface #42,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getUserProperties:()Ljava/util/Properties;
      47: invokevirtual #46                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      50: aload_0
      51: getfield      #11                 // Field executionProperties:Ljava/util/Properties;
      54: areturn

  public org.apache.maven.settings.Settings getSettings();
    Code:
       0: aload_0
       1: getfield      #10                 // Field settings:Lorg/apache/maven/settings/Settings;
       4: areturn

  public java.util.List<org.apache.maven.project.MavenProject> getProjects();
    Code:
       0: aload_0
       1: getfield      #35                 // Field projects:Ljava/util/List;
       4: areturn

  public java.util.List<org.apache.maven.project.MavenProject> getSortedProjects();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getProjects:()Ljava/util/List;
       4: areturn

  public java.lang.String getExecutionRootDirectory();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #48,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getBaseDirectory:()Ljava/lang/String;
       9: areturn

  public boolean isUsingPOMsFromFilesystem();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #49,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isProjectPresent:()Z
       9: ireturn

  public org.apache.maven.execution.MavenExecutionRequest getRequest();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: areturn

  public void setCurrentProject(org.apache.maven.project.MavenProject);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field currentProject:Lorg/apache/maven/project/MavenProject;
       5: return

  public org.apache.maven.project.MavenProject getCurrentProject();
    Code:
       0: aload_0
       1: getfield      #29                 // Field currentProject:Lorg/apache/maven/project/MavenProject;
       4: areturn

  public org.apache.maven.project.ProjectBuildingRequest getProjectBuildingRequest();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #50,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getProjectBuildingRequest:()Lorg/apache/maven/project/ProjectBuildingRequest;
       9: aload_0
      10: invokevirtual #51                 // Method getRepositorySession:()Lorg/sonatype/aether/RepositorySystemSession;
      13: invokeinterface #52,  2           // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setRepositorySession:(Lorg/sonatype/aether/RepositorySystemSession;)Lorg/apache/maven/project/ProjectBuildingRequest;
      18: areturn

  public java.util.List<java.lang.String> getPluginGroups();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #53,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getPluginGroups:()Ljava/util/List;
       9: areturn

  public boolean isOffline();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #54,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isOffline:()Z
       9: ireturn

  public org.apache.maven.project.MavenProject getTopLevelProject();
    Code:
       0: aload_0
       1: getfield      #30                 // Field topLevelProject:Lorg/apache/maven/project/MavenProject;
       4: areturn

  public org.apache.maven.execution.MavenExecutionResult getResult();
    Code:
       0: aload_0
       1: getfield      #22                 // Field result:Lorg/apache/maven/execution/MavenExecutionResult;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getPluginContext(org.apache.maven.plugin.descriptor.PluginDescriptor, org.apache.maven.project.MavenProject);
    Code:
       0: aload_2
       1: invokevirtual #55                 // Method org/apache/maven/project/MavenProject.getId:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
       9: aload_3
      10: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #57                 // class java/util/Map
      18: astore        4
      20: aload         4
      22: ifnonnull     47
      25: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      28: dup
      29: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      32: astore        4
      34: aload_0
      35: getfield      #8                  // Field pluginContextsByProjectAndPluginKey:Ljava/util/Map;
      38: aload_3
      39: aload         4
      41: invokeinterface #58,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_1
      48: invokevirtual #59                 // Method org/apache/maven/plugin/descriptor/PluginDescriptor.getPluginLookupKey:()Ljava/lang/String;
      51: astore        5
      53: aload         4
      55: aload         5
      57: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #57                 // class java/util/Map
      65: astore        6
      67: aload         6
      69: ifnonnull     93
      72: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      75: dup
      76: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      79: astore        6
      81: aload         4
      83: aload         5
      85: aload         6
      87: invokeinterface #58,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload         6
      95: areturn

  public org.apache.maven.execution.ProjectDependencyGraph getProjectDependencyGraph();
    Code:
       0: aload_0
       1: getfield      #60                 // Field projectDependencyGraph:Lorg/apache/maven/execution/ProjectDependencyGraph;
       4: areturn

  public void setProjectDependencyGraph(org.apache.maven.execution.ProjectDependencyGraph);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field projectDependencyGraph:Lorg/apache/maven/execution/ProjectDependencyGraph;
       5: return

  public java.lang.String getReactorFailureBehavior();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #61,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getReactorFailureBehavior:()Ljava/lang/String;
       9: areturn

  public org.apache.maven.execution.MavenSession clone();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #63                 // class org/apache/maven/execution/MavenSession
       7: areturn
       8: astore_1
       9: new           #65                 // class java/lang/RuntimeException
      12: dup
      13: ldc           #66                 // String Bug
      15: aload_1
      16: invokespecial #67                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  private java.lang.String getId(org.apache.maven.project.MavenProject);
    Code:
       0: new           #68                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #69                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #70                 // Method org/apache/maven/project/MavenProject.getGroupId:()Ljava/lang/String;
      11: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: bipush        58
      16: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/maven/project/MavenProject.getArtifactId:()Ljava/lang/String;
      23: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        58
      28: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #74                 // Method org/apache/maven/project/MavenProject.getVersion:()Ljava/lang/String;
      35: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public org.apache.maven.monitor.event.EventDispatcher getEventDispatcher();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Date getStartTime();
    Code:
       0: aload_0
       1: getfield      #14                 // Field request:Lorg/apache/maven/execution/MavenExecutionRequest;
       4: invokeinterface #76,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getStartTime:()Ljava/util/Date;
       9: areturn

  public boolean isParallel();
    Code:
       0: aload_0
       1: getfield      #77                 // Field parallel:Z
       4: ireturn

  public void setParallel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field parallel:Z
       5: return

  public org.sonatype.aether.RepositorySystemSession getRepositorySession();
    Code:
       0: aload_0
       1: getfield      #26                 // Field repositorySession:Lorg/sonatype/aether/RepositorySystemSession;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method clone:()Lorg/apache/maven/execution/MavenSession;
       4: areturn
}
