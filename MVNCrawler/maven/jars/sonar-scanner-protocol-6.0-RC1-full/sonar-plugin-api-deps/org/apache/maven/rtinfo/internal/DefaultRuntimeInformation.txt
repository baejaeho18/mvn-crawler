Compiled from "DefaultRuntimeInformation.java"
public class org.apache.maven.rtinfo.internal.DefaultRuntimeInformation implements org.apache.maven.rtinfo.RuntimeInformation {
  private org.codehaus.plexus.logging.Logger logger;

  private java.lang.String mavenVersion;

  public org.apache.maven.rtinfo.internal.DefaultRuntimeInformation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getMavenVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mavenVersion:Ljava/lang/String;
       4: ifnonnull     217
       7: new           #3                  // class java/util/Properties
      10: dup
      11: invokespecial #4                  // Method java/util/Properties."<init>":()V
      14: astore_1
      15: ldc           #5                  // String META-INF/maven/org.apache.maven/maven-core/pom.properties
      17: astore_2
      18: ldc_w         #6                  // class org/apache/maven/rtinfo/internal/DefaultRuntimeInformation
      21: new           #7                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #9                  // String /
      30: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #12                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      43: astore_3
      44: aload_3
      45: ifnull        146
      48: aload_1
      49: aload_3
      50: invokevirtual #13                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      53: aload_3
      54: invokestatic  #14                 // Method org/codehaus/plexus/util/IOUtil.close:(Ljava/io/InputStream;)V
      57: goto          143
      60: astore        4
      62: new           #7                  // class java/lang/StringBuilder
      65: dup
      66: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #16                 // String Could not parse
      71: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_2
      75: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #17                 // String , Maven runtime information not available
      80: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: astore        5
      88: aload_0
      89: getfield      #18                 // Field logger:Lorg/codehaus/plexus/logging/Logger;
      92: invokeinterface #19,  1           // InterfaceMethod org/codehaus/plexus/logging/Logger.isDebugEnabled:()Z
      97: ifeq          116
     100: aload_0
     101: getfield      #18                 // Field logger:Lorg/codehaus/plexus/logging/Logger;
     104: aload         5
     106: aload         4
     108: invokeinterface #20,  3           // InterfaceMethod org/codehaus/plexus/logging/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     113: goto          127
     116: aload_0
     117: getfield      #18                 // Field logger:Lorg/codehaus/plexus/logging/Logger;
     120: aload         5
     122: invokeinterface #21,  2           // InterfaceMethod org/codehaus/plexus/logging/Logger.warn:(Ljava/lang/String;)V
     127: aload_3
     128: invokestatic  #14                 // Method org/codehaus/plexus/util/IOUtil.close:(Ljava/io/InputStream;)V
     131: goto          143
     134: astore        6
     136: aload_3
     137: invokestatic  #14                 // Method org/codehaus/plexus/util/IOUtil.close:(Ljava/io/InputStream;)V
     140: aload         6
     142: athrow
     143: goto          179
     146: aload_0
     147: getfield      #18                 // Field logger:Lorg/codehaus/plexus/logging/Logger;
     150: new           #7                  // class java/lang/StringBuilder
     153: dup
     154: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     157: ldc           #22                 // String Could not locate
     159: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload_2
     163: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: ldc           #23                 // String  on classpath, Maven runtime information not available
     168: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: invokeinterface #21,  2           // InterfaceMethod org/codehaus/plexus/logging/Logger.warn:(Ljava/lang/String;)V
     179: aload_1
     180: ldc           #24                 // String version
     182: ldc           #25                 // String
     184: invokevirtual #26                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     187: invokevirtual #27                 // Method java/lang/String.trim:()Ljava/lang/String;
     190: astore        4
     192: aload         4
     194: ldc           #28                 // String ${
     196: invokevirtual #29                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     199: ifne          211
     202: aload_0
     203: aload         4
     205: putfield      #2                  // Field mavenVersion:Ljava/lang/String;
     208: goto          217
     211: aload_0
     212: ldc           #25                 // String
     214: putfield      #2                  // Field mavenVersion:Ljava/lang/String;
     217: aload_0
     218: getfield      #2                  // Field mavenVersion:Ljava/lang/String;
     221: areturn
    Exception table:
       from    to  target type
          48    53    60   Class java/io/IOException
          48    53   134   any
          60   127   134   any
         134   136   134   any

  public boolean isMavenVersion(java.lang.String);
    Code:
       0: new           #30                 // class org/sonatype/aether/util/version/GenericVersionScheme
       3: dup
       4: invokespecial #31                 // Method org/sonatype/aether/util/version/GenericVersionScheme."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnonnull     22
      12: new           #32                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #33                 // String Version range must not be null
      18: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: invokestatic  #35                 // Method org/codehaus/plexus/util/StringUtils.isBlank:(Ljava/lang/String;)Z
      26: ifeq          39
      29: new           #32                 // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #36                 // String Version range must not be empty
      35: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_2
      40: aload_1
      41: invokeinterface #37,  2           // InterfaceMethod org/sonatype/aether/version/VersionScheme.parseVersionConstraint:(Ljava/lang/String;)Lorg/sonatype/aether/version/VersionConstraint;
      46: astore_3
      47: goto          67
      50: astore        4
      52: new           #32                 // class java/lang/IllegalArgumentException
      55: dup
      56: aload         4
      58: invokevirtual #39                 // Method org/sonatype/aether/version/InvalidVersionSpecificationException.getMessage:()Ljava/lang/String;
      61: aload         4
      63: invokespecial #40                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      66: athrow
      67: aload_0
      68: invokevirtual #41                 // Method getMavenVersion:()Ljava/lang/String;
      71: astore        5
      73: aload         5
      75: invokevirtual #42                 // Method java/lang/String.length:()I
      78: ifgt          91
      81: new           #43                 // class java/lang/IllegalStateException
      84: dup
      85: ldc           #44                 // String Could not determine current Maven version
      87: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload_2
      92: aload         5
      94: invokeinterface #46,  2           // InterfaceMethod org/sonatype/aether/version/VersionScheme.parseVersion:(Ljava/lang/String;)Lorg/sonatype/aether/version/Version;
      99: astore        4
     101: goto          139
     104: astore        5
     106: new           #43                 // class java/lang/IllegalStateException
     109: dup
     110: new           #7                  // class java/lang/StringBuilder
     113: dup
     114: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #47                 // String Could not parse current Maven version:
     119: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         5
     124: invokevirtual #39                 // Method org/sonatype/aether/version/InvalidVersionSpecificationException.getMessage:()Ljava/lang/String;
     127: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: aload         5
     135: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     138: athrow
     139: aload_3
     140: invokeinterface #49,  1           // InterfaceMethod org/sonatype/aether/version/VersionConstraint.getRanges:()Ljava/util/Collection;
     145: invokeinterface #50,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     150: ifeq          175
     153: aload_3
     154: invokeinterface #51,  1           // InterfaceMethod org/sonatype/aether/version/VersionConstraint.getVersion:()Lorg/sonatype/aether/version/Version;
     159: aload         4
     161: invokeinterface #52,  2           // InterfaceMethod org/sonatype/aether/version/Version.compareTo:(Ljava/lang/Object;)I
     166: ifgt          173
     169: iconst_1
     170: goto          174
     173: iconst_0
     174: ireturn
     175: aload_3
     176: aload         4
     178: invokeinterface #53,  2           // InterfaceMethod org/sonatype/aether/version/VersionConstraint.containsVersion:(Lorg/sonatype/aether/version/Version;)Z
     183: ireturn
    Exception table:
       from    to  target type
          39    47    50   Class org/sonatype/aether/version/InvalidVersionSpecificationException
          67   101   104   Class org/sonatype/aether/version/InvalidVersionSpecificationException
}
