Compiled from "DefaultProjectDependencyGraph.java"
class org.apache.maven.DefaultProjectDependencyGraph implements org.apache.maven.execution.ProjectDependencyGraph {
  private org.apache.maven.project.ProjectSorter sorter;

  public org.apache.maven.DefaultProjectDependencyGraph(org.apache.maven.project.ProjectSorter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String project sorter missing
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field sorter:Lorg/apache/maven/project/ProjectSorter;
      23: return

  public java.util.List<org.apache.maven.project.MavenProject> getSortedProjects();
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #5                  // Field sorter:Lorg/apache/maven/project/ProjectSorter;
       8: invokevirtual #7                  // Method org/apache/maven/project/ProjectSorter.getSortedProjects:()Ljava/util/List;
      11: invokespecial #8                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.List<org.apache.maven.project.MavenProject> getDownstreamProjects(org.apache.maven.project.MavenProject, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #9                  // String project missing
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #10                 // class java/util/HashSet
      17: dup
      18: invokespecial #11                 // Method java/util/HashSet."<init>":()V
      21: astore_3
      22: aload_0
      23: aload_1
      24: invokestatic  #12                 // Method org/apache/maven/project/ProjectSorter.getId:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
      27: aload_3
      28: iload_2
      29: invokespecial #13                 // Method getDownstreamProjects:(Ljava/lang/String;Ljava/util/Collection;Z)V
      32: aload_0
      33: aload_3
      34: invokespecial #14                 // Method getProjects:(Ljava/util/Collection;)Ljava/util/List;
      37: areturn

  private void getDownstreamProjects(java.lang.String, java.util.Collection<java.lang.String>, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sorter:Lorg/apache/maven/project/ProjectSorter;
       4: aload_1
       5: invokevirtual #15                 // Method org/apache/maven/project/ProjectSorter.getDependents:(Ljava/lang/String;)Ljava/util/List;
       8: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          63
      25: aload         4
      27: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #19                 // class java/lang/String
      35: astore        5
      37: aload_2
      38: aload         5
      40: invokeinterface #20,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      45: ifeq          60
      48: iload_3
      49: ifeq          60
      52: aload_0
      53: aload         5
      55: aload_2
      56: iload_3
      57: invokespecial #13                 // Method getDownstreamProjects:(Ljava/lang/String;Ljava/util/Collection;Z)V
      60: goto          15
      63: return

  public java.util.List<org.apache.maven.project.MavenProject> getUpstreamProjects(org.apache.maven.project.MavenProject, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #9                  // String project missing
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #10                 // class java/util/HashSet
      17: dup
      18: invokespecial #11                 // Method java/util/HashSet."<init>":()V
      21: astore_3
      22: aload_0
      23: aload_1
      24: invokestatic  #12                 // Method org/apache/maven/project/ProjectSorter.getId:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
      27: aload_3
      28: iload_2
      29: invokespecial #21                 // Method getUpstreamProjects:(Ljava/lang/String;Ljava/util/Collection;Z)V
      32: aload_0
      33: aload_3
      34: invokespecial #14                 // Method getProjects:(Ljava/util/Collection;)Ljava/util/List;
      37: areturn

  private void getUpstreamProjects(java.lang.String, java.util.Collection<java.lang.String>, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sorter:Lorg/apache/maven/project/ProjectSorter;
       4: aload_1
       5: invokevirtual #22                 // Method org/apache/maven/project/ProjectSorter.getDependencies:(Ljava/lang/String;)Ljava/util/List;
       8: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          63
      25: aload         4
      27: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #19                 // class java/lang/String
      35: astore        5
      37: aload_2
      38: aload         5
      40: invokeinterface #20,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      45: ifeq          60
      48: iload_3
      49: ifeq          60
      52: aload_0
      53: aload         5
      55: aload_2
      56: iload_3
      57: invokespecial #21                 // Method getUpstreamProjects:(Ljava/lang/String;Ljava/util/Collection;Z)V
      60: goto          15
      63: return

  private java.util.List<org.apache.maven.project.MavenProject> getProjects(java.util.Collection<java.lang.String>);
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field sorter:Lorg/apache/maven/project/ProjectSorter;
      12: invokevirtual #7                  // Method org/apache/maven/project/ProjectSorter.getSortedProjects:()Ljava/util/List;
      15: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          67
      30: aload_3
      31: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #24                 // class org/apache/maven/project/MavenProject
      39: astore        4
      41: aload_1
      42: aload         4
      44: invokestatic  #12                 // Method org/apache/maven/project/ProjectSorter.getId:(Lorg/apache/maven/project/MavenProject;)Ljava/lang/String;
      47: invokeinterface #25,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      52: ifeq          64
      55: aload_2
      56: aload         4
      58: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          21
      67: aload_2
      68: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sorter:Lorg/apache/maven/project/ProjectSorter;
       4: invokevirtual #7                  // Method org/apache/maven/project/ProjectSorter.getSortedProjects:()Ljava/util/List;
       7: invokevirtual #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
      10: areturn
}
