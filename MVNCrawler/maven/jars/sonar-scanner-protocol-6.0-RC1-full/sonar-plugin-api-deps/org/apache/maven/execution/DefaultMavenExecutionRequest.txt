Compiled from "DefaultMavenExecutionRequest.java"
public class org.apache.maven.execution.DefaultMavenExecutionRequest implements org.apache.maven.execution.MavenExecutionRequest {
  private org.sonatype.aether.RepositoryCache repositoryCache;

  private org.sonatype.aether.repository.WorkspaceReader workspaceReader;

  private org.apache.maven.artifact.repository.ArtifactRepository localRepository;

  private java.io.File localRepositoryPath;

  private boolean offline;

  private boolean interactiveMode;

  private boolean cacheTransferError;

  private boolean cacheNotFound;

  private java.util.List<org.apache.maven.settings.Proxy> proxies;

  private java.util.List<org.apache.maven.settings.Server> servers;

  private java.util.List<org.apache.maven.settings.Mirror> mirrors;

  private java.util.List<org.apache.maven.model.Profile> profiles;

  private java.util.List<java.lang.String> pluginGroups;

  private boolean isProjectPresent;

  private java.io.File userSettingsFile;

  private java.io.File globalSettingsFile;

  private java.io.File userToolchainsFile;

  private java.io.File basedir;

  private java.util.List<java.lang.String> goals;

  private boolean useReactor;

  private boolean recursive;

  private java.io.File pom;

  private java.lang.String reactorFailureBehavior;

  private java.util.List<java.lang.String> selectedProjects;

  private java.lang.String resumeFrom;

  private java.lang.String makeBehavior;

  private java.util.Properties systemProperties;

  private java.util.Properties userProperties;

  private java.util.Date startTime;

  private boolean showErrors;

  private java.util.List<java.lang.String> activeProfiles;

  private java.util.List<java.lang.String> inactiveProfiles;

  private org.sonatype.aether.transfer.TransferListener transferListener;

  private int loggingLevel;

  private java.lang.String globalChecksumPolicy;

  private boolean updateSnapshots;

  private java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> remoteRepositories;

  private java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> pluginArtifactRepositories;

  private org.apache.maven.execution.ExecutionListener executionListener;

  private java.lang.String threadCount;

  private boolean perCoreThreadCount;

  private boolean noSnapshotUpdates;

  private org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest;

  public org.apache.maven.execution.DefaultMavenExecutionRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/sonatype/aether/util/DefaultRepositoryCache
       8: dup
       9: invokespecial #3                  // Method org/sonatype/aether/util/DefaultRepositoryCache."<init>":()V
      12: putfield      #4                  // Field repositoryCache:Lorg/sonatype/aether/RepositoryCache;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field offline:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field interactiveMode:Z
      25: aload_0
      26: iconst_1
      27: putfield      #7                  // Field isProjectPresent:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field useReactor:Z
      35: aload_0
      36: iconst_1
      37: putfield      #9                  // Field recursive:Z
      40: aload_0
      41: ldc           #10                 // String FAIL_FAST
      43: putfield      #11                 // Field reactorFailureBehavior:Ljava/lang/String;
      46: aload_0
      47: iconst_0
      48: putfield      #12                 // Field showErrors:Z
      51: aload_0
      52: iconst_1
      53: putfield      #13                 // Field loggingLevel:I
      56: aload_0
      57: iconst_0
      58: putfield      #14                 // Field updateSnapshots:Z
      61: return

  public static org.apache.maven.execution.MavenExecutionRequest copy(org.apache.maven.execution.MavenExecutionRequest);
    Code:
       0: new           #15                 // class org/apache/maven/execution/DefaultMavenExecutionRequest
       3: dup
       4: invokespecial #16                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokeinterface #17,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getLocalRepository:()Lorg/apache/maven/artifact/repository/ArtifactRepository;
      15: invokevirtual #18                 // Method setLocalRepository:(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Lorg/apache/maven/execution/MavenExecutionRequest;
      18: pop
      19: aload_1
      20: aload_0
      21: invokeinterface #19,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getLocalRepositoryPath:()Ljava/io/File;
      26: invokevirtual #20                 // Method setLocalRepositoryPath:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
      29: pop
      30: aload_1
      31: aload_0
      32: invokeinterface #21,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isOffline:()Z
      37: invokevirtual #22                 // Method setOffline:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
      40: pop
      41: aload_1
      42: aload_0
      43: invokeinterface #23,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isInteractiveMode:()Z
      48: invokevirtual #24                 // Method setInteractiveMode:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
      51: pop
      52: aload_1
      53: aload_0
      54: invokeinterface #25,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isCacheNotFound:()Z
      59: invokevirtual #26                 // Method setCacheNotFound:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
      62: pop
      63: aload_1
      64: aload_0
      65: invokeinterface #27,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isCacheTransferError:()Z
      70: invokevirtual #28                 // Method setCacheTransferError:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
      73: pop
      74: aload_1
      75: aload_0
      76: invokeinterface #29,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getProxies:()Ljava/util/List;
      81: invokevirtual #30                 // Method setProxies:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
      84: pop
      85: aload_1
      86: aload_0
      87: invokeinterface #31,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getServers:()Ljava/util/List;
      92: invokevirtual #32                 // Method setServers:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
      95: pop
      96: aload_1
      97: aload_0
      98: invokeinterface #33,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getMirrors:()Ljava/util/List;
     103: invokevirtual #34                 // Method setMirrors:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     106: pop
     107: aload_1
     108: aload_0
     109: invokeinterface #35,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getProfiles:()Ljava/util/List;
     114: invokevirtual #36                 // Method setProfiles:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     117: pop
     118: aload_1
     119: aload_0
     120: invokeinterface #37,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getPluginGroups:()Ljava/util/List;
     125: invokevirtual #38                 // Method setPluginGroups:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     128: pop
     129: aload_1
     130: aload_0
     131: invokeinterface #39,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isProjectPresent:()Z
     136: invokevirtual #40                 // Method setProjectPresent:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
     139: pop
     140: aload_1
     141: aload_0
     142: invokeinterface #41,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getUserSettingsFile:()Ljava/io/File;
     147: invokevirtual #42                 // Method setUserSettingsFile:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
     150: pop
     151: aload_1
     152: aload_0
     153: invokeinterface #43,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getGlobalSettingsFile:()Ljava/io/File;
     158: invokevirtual #44                 // Method setGlobalSettingsFile:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
     161: pop
     162: aload_1
     163: aload_0
     164: invokeinterface #45,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getUserToolchainsFile:()Ljava/io/File;
     169: invokevirtual #46                 // Method setUserToolchainsFile:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
     172: pop
     173: aload_1
     174: aload_0
     175: invokeinterface #47,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getBaseDirectory:()Ljava/lang/String;
     180: ifnull        199
     183: new           #48                 // class java/io/File
     186: dup
     187: aload_0
     188: invokeinterface #47,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getBaseDirectory:()Ljava/lang/String;
     193: invokespecial #49                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     196: goto          200
     199: aconst_null
     200: invokevirtual #50                 // Method setBaseDirectory:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
     203: pop
     204: aload_1
     205: aload_0
     206: invokeinterface #51,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getGoals:()Ljava/util/List;
     211: invokevirtual #52                 // Method setGoals:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     214: pop
     215: aload_1
     216: aload_0
     217: invokeinterface #53,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isRecursive:()Z
     222: invokevirtual #54                 // Method setRecursive:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
     225: pop
     226: aload_1
     227: aload_0
     228: invokeinterface #55,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getPom:()Ljava/io/File;
     233: invokevirtual #56                 // Method setPom:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
     236: pop
     237: aload_1
     238: aload_0
     239: invokeinterface #57,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getSystemProperties:()Ljava/util/Properties;
     244: invokevirtual #58                 // Method setSystemProperties:(Ljava/util/Properties;)Lorg/apache/maven/execution/MavenExecutionRequest;
     247: pop
     248: aload_1
     249: aload_0
     250: invokeinterface #59,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getUserProperties:()Ljava/util/Properties;
     255: invokevirtual #60                 // Method setUserProperties:(Ljava/util/Properties;)Lorg/apache/maven/execution/MavenExecutionRequest;
     258: pop
     259: aload_1
     260: aload_0
     261: invokeinterface #61,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isShowErrors:()Z
     266: invokevirtual #62                 // Method setShowErrors:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
     269: pop
     270: aload_1
     271: aload_0
     272: invokeinterface #63,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getActiveProfiles:()Ljava/util/List;
     277: invokevirtual #64                 // Method setActiveProfiles:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     280: pop
     281: aload_1
     282: aload_0
     283: invokeinterface #65,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getInactiveProfiles:()Ljava/util/List;
     288: invokevirtual #66                 // Method setInactiveProfiles:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     291: pop
     292: aload_1
     293: aload_0
     294: invokeinterface #67,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getTransferListener:()Lorg/sonatype/aether/transfer/TransferListener;
     299: invokevirtual #68                 // Method setTransferListener:(Lorg/sonatype/aether/transfer/TransferListener;)Lorg/apache/maven/execution/MavenExecutionRequest;
     302: pop
     303: aload_1
     304: aload_0
     305: invokeinterface #69,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getLoggingLevel:()I
     310: invokevirtual #70                 // Method setLoggingLevel:(I)Lorg/apache/maven/execution/MavenExecutionRequest;
     313: pop
     314: aload_1
     315: aload_0
     316: invokeinterface #71,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getGlobalChecksumPolicy:()Ljava/lang/String;
     321: invokevirtual #72                 // Method setGlobalChecksumPolicy:(Ljava/lang/String;)Lorg/apache/maven/execution/MavenExecutionRequest;
     324: pop
     325: aload_1
     326: aload_0
     327: invokeinterface #73,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isUpdateSnapshots:()Z
     332: invokevirtual #74                 // Method setUpdateSnapshots:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
     335: pop
     336: aload_1
     337: aload_0
     338: invokeinterface #75,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getRemoteRepositories:()Ljava/util/List;
     343: invokevirtual #76                 // Method setRemoteRepositories:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     346: pop
     347: aload_1
     348: aload_0
     349: invokeinterface #77,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getPluginArtifactRepositories:()Ljava/util/List;
     354: invokevirtual #78                 // Method setPluginArtifactRepositories:(Ljava/util/List;)Lorg/apache/maven/execution/MavenExecutionRequest;
     357: pop
     358: aload_1
     359: aload_0
     360: invokeinterface #79,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getRepositoryCache:()Lorg/sonatype/aether/RepositoryCache;
     365: invokevirtual #80                 // Method setRepositoryCache:(Lorg/sonatype/aether/RepositoryCache;)Lorg/apache/maven/execution/MavenExecutionRequest;
     368: pop
     369: aload_1
     370: aload_0
     371: invokeinterface #81,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getWorkspaceReader:()Lorg/sonatype/aether/repository/WorkspaceReader;
     376: invokevirtual #82                 // Method setWorkspaceReader:(Lorg/sonatype/aether/repository/WorkspaceReader;)Lorg/apache/maven/execution/MavenExecutionRequest;
     379: pop
     380: aload_1
     381: aload_0
     382: invokeinterface #83,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.isNoSnapshotUpdates:()Z
     387: invokevirtual #84                 // Method setNoSnapshotUpdates:(Z)Lorg/apache/maven/execution/MavenExecutionRequest;
     390: pop
     391: aload_1
     392: aload_0
     393: invokeinterface #85,  1           // InterfaceMethod org/apache/maven/execution/MavenExecutionRequest.getExecutionListener:()Lorg/apache/maven/execution/ExecutionListener;
     398: invokevirtual #86                 // Method setExecutionListener:(Lorg/apache/maven/execution/ExecutionListener;)Lorg/apache/maven/execution/MavenExecutionRequest;
     401: pop
     402: aload_1
     403: areturn

  public java.lang.String getBaseDirectory();
    Code:
       0: aload_0
       1: getfield      #87                 // Field basedir:Ljava/io/File;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #87                 // Field basedir:Ljava/io/File;
      13: invokevirtual #88                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      16: areturn

  public org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository();
    Code:
       0: aload_0
       1: getfield      #89                 // Field localRepository:Lorg/apache/maven/artifact/repository/ArtifactRepository;
       4: areturn

  public java.io.File getLocalRepositoryPath();
    Code:
       0: aload_0
       1: getfield      #90                 // Field localRepositoryPath:Ljava/io/File;
       4: areturn

  public java.util.List<java.lang.String> getGoals();
    Code:
       0: aload_0
       1: getfield      #91                 // Field goals:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #91                 // Field goals:Ljava/util/List;
      18: aload_0
      19: getfield      #91                 // Field goals:Ljava/util/List;
      22: areturn

  public java.util.Properties getSystemProperties();
    Code:
       0: aload_0
       1: getfield      #94                 // Field systemProperties:Ljava/util/Properties;
       4: ifnonnull     18
       7: aload_0
       8: new           #95                 // class java/util/Properties
      11: dup
      12: invokespecial #96                 // Method java/util/Properties."<init>":()V
      15: putfield      #94                 // Field systemProperties:Ljava/util/Properties;
      18: aload_0
      19: getfield      #94                 // Field systemProperties:Ljava/util/Properties;
      22: areturn

  public java.util.Properties getUserProperties();
    Code:
       0: aload_0
       1: getfield      #97                 // Field userProperties:Ljava/util/Properties;
       4: ifnonnull     18
       7: aload_0
       8: new           #95                 // class java/util/Properties
      11: dup
      12: invokespecial #96                 // Method java/util/Properties."<init>":()V
      15: putfield      #97                 // Field userProperties:Ljava/util/Properties;
      18: aload_0
      19: getfield      #97                 // Field userProperties:Ljava/util/Properties;
      22: areturn

  public java.io.File getPom();
    Code:
       0: aload_0
       1: getfield      #98                 // Field pom:Ljava/io/File;
       4: areturn

  public java.lang.String getReactorFailureBehavior();
    Code:
       0: aload_0
       1: getfield      #11                 // Field reactorFailureBehavior:Ljava/lang/String;
       4: areturn

  public java.util.List<java.lang.String> getSelectedProjects();
    Code:
       0: aload_0
       1: getfield      #99                 // Field selectedProjects:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #99                 // Field selectedProjects:Ljava/util/List;
      18: aload_0
      19: getfield      #99                 // Field selectedProjects:Ljava/util/List;
      22: areturn

  public java.lang.String getResumeFrom();
    Code:
       0: aload_0
       1: getfield      #100                // Field resumeFrom:Ljava/lang/String;
       4: areturn

  public java.lang.String getMakeBehavior();
    Code:
       0: aload_0
       1: getfield      #101                // Field makeBehavior:Ljava/lang/String;
       4: areturn

  public java.util.Date getStartTime();
    Code:
       0: aload_0
       1: getfield      #102                // Field startTime:Ljava/util/Date;
       4: areturn

  public boolean isShowErrors();
    Code:
       0: aload_0
       1: getfield      #12                 // Field showErrors:Z
       4: ireturn

  public boolean isInteractiveMode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field interactiveMode:Z
       4: ireturn

  public org.apache.maven.execution.MavenExecutionRequest setActiveProfiles(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #104                // Field activeProfiles:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #104                // Field activeProfiles:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest setInactiveProfiles(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #105                // Field inactiveProfiles:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #105                // Field inactiveProfiles:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest setRemoteRepositories(java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #106                // Field remoteRepositories:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #106                // Field remoteRepositories:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest setPluginArtifactRepositories(java.util.List<org.apache.maven.artifact.repository.ArtifactRepository>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #107                // Field pluginArtifactRepositories:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #107                // Field pluginArtifactRepositories:Ljava/util/List;
      24: aload_0
      25: areturn

  public void setProjectBuildingConfiguration(org.apache.maven.project.ProjectBuildingRequest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
       5: return

  public java.util.List<java.lang.String> getActiveProfiles();
    Code:
       0: aload_0
       1: getfield      #104                // Field activeProfiles:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #104                // Field activeProfiles:Ljava/util/List;
      18: aload_0
      19: getfield      #104                // Field activeProfiles:Ljava/util/List;
      22: areturn

  public java.util.List<java.lang.String> getInactiveProfiles();
    Code:
       0: aload_0
       1: getfield      #105                // Field inactiveProfiles:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #105                // Field inactiveProfiles:Ljava/util/List;
      18: aload_0
      19: getfield      #105                // Field inactiveProfiles:Ljava/util/List;
      22: areturn

  public org.sonatype.aether.transfer.TransferListener getTransferListener();
    Code:
       0: aload_0
       1: getfield      #109                // Field transferListener:Lorg/sonatype/aether/transfer/TransferListener;
       4: areturn

  public int getLoggingLevel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field loggingLevel:I
       4: ireturn

  public boolean isOffline();
    Code:
       0: aload_0
       1: getfield      #5                  // Field offline:Z
       4: ireturn

  public boolean isUpdateSnapshots();
    Code:
       0: aload_0
       1: getfield      #14                 // Field updateSnapshots:Z
       4: ireturn

  public boolean isNoSnapshotUpdates();
    Code:
       0: aload_0
       1: getfield      #110                // Field noSnapshotUpdates:Z
       4: ireturn

  public java.lang.String getGlobalChecksumPolicy();
    Code:
       0: aload_0
       1: getfield      #111                // Field globalChecksumPolicy:Ljava/lang/String;
       4: areturn

  public boolean isRecursive();
    Code:
       0: aload_0
       1: getfield      #9                  // Field recursive:Z
       4: ireturn

  public org.apache.maven.execution.MavenExecutionRequest setBaseDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field basedir:Ljava/io/File;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setStartTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #102                // Field startTime:Ljava/util/Date;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setShowErrors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field showErrors:Z
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setGoals(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #91                 // Field goals:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #91                 // Field goals:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field localRepository:Lorg/apache/maven/artifact/repository/ArtifactRepository;
       5: aload_1
       6: ifnull        30
       9: aload_0
      10: new           #48                 // class java/io/File
      13: dup
      14: aload_1
      15: invokeinterface #112,  1          // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getBasedir:()Ljava/lang/String;
      20: invokespecial #49                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      23: invokevirtual #113                // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      26: invokevirtual #20                 // Method setLocalRepositoryPath:(Ljava/io/File;)Lorg/apache/maven/execution/MavenExecutionRequest;
      29: pop
      30: aload_0
      31: areturn

  public org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field localRepositoryPath:Ljava/io/File;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        16
       5: new           #48                 // class java/io/File
       8: dup
       9: aload_1
      10: invokespecial #49                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      13: goto          17
      16: aconst_null
      17: putfield      #90                 // Field localRepositoryPath:Ljava/io/File;
      20: aload_0
      21: areturn

  public org.apache.maven.execution.MavenExecutionRequest setSystemProperties(java.util.Properties);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_0
       5: new           #95                 // class java/util/Properties
       8: dup
       9: invokespecial #96                 // Method java/util/Properties."<init>":()V
      12: putfield      #94                 // Field systemProperties:Ljava/util/Properties;
      15: aload_0
      16: getfield      #94                 // Field systemProperties:Ljava/util/Properties;
      19: aload_1
      20: invokevirtual #114                // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      23: goto          31
      26: aload_0
      27: aconst_null
      28: putfield      #94                 // Field systemProperties:Ljava/util/Properties;
      31: aload_0
      32: areturn

  public org.apache.maven.execution.MavenExecutionRequest setUserProperties(java.util.Properties);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_0
       5: new           #95                 // class java/util/Properties
       8: dup
       9: invokespecial #96                 // Method java/util/Properties."<init>":()V
      12: putfield      #97                 // Field userProperties:Ljava/util/Properties;
      15: aload_0
      16: getfield      #97                 // Field userProperties:Ljava/util/Properties;
      19: aload_1
      20: invokevirtual #114                // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      23: goto          31
      26: aload_0
      27: aconst_null
      28: putfield      #97                 // Field userProperties:Ljava/util/Properties;
      31: aload_0
      32: areturn

  public org.apache.maven.execution.MavenExecutionRequest setReactorFailureBehavior(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field reactorFailureBehavior:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setSelectedProjects(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #99                 // Field selectedProjects:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #99                 // Field selectedProjects:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest setResumeFrom(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field resumeFrom:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setMakeBehavior(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #101                // Field makeBehavior:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest addActiveProfile(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method getActiveProfiles:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #116,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          24
      13: aload_0
      14: invokevirtual #115                // Method getActiveProfiles:()Ljava/util/List;
      17: aload_1
      18: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest addInactiveProfile(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getInactiveProfiles:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #116,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          24
      13: aload_0
      14: invokevirtual #118                // Method getInactiveProfiles:()Ljava/util/List;
      17: aload_1
      18: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest addActiveProfiles(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #122                // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #123                // Method addActiveProfile:(Ljava/lang/String;)Lorg/apache/maven/execution/MavenExecutionRequest;
      31: pop
      32: goto          7
      35: aload_0
      36: areturn

  public org.apache.maven.execution.MavenExecutionRequest addInactiveProfiles(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #122                // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #124                // Method addInactiveProfile:(Ljava/lang/String;)Lorg/apache/maven/execution/MavenExecutionRequest;
      31: pop
      32: goto          7
      35: aload_0
      36: areturn

  public org.apache.maven.execution.MavenExecutionRequest setUseReactor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field useReactor:Z
       5: aload_0
       6: areturn

  public boolean useReactor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field useReactor:Z
       4: ireturn

  public org.apache.maven.execution.MavenExecutionRequest setPomFile(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: new           #48                 // class java/io/File
       8: dup
       9: aload_1
      10: invokespecial #49                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      13: putfield      #98                 // Field pom:Ljava/io/File;
      16: aload_0
      17: areturn

  public org.apache.maven.execution.MavenExecutionRequest setPom(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field pom:Ljava/io/File;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setInteractiveMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field interactiveMode:Z
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setTransferListener(org.sonatype.aether.transfer.TransferListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field transferListener:Lorg/sonatype/aether/transfer/TransferListener;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setLoggingLevel(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field loggingLevel:I
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setOffline(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field offline:Z
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setUpdateSnapshots(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field updateSnapshots:Z
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setNoSnapshotUpdates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #110                // Field noSnapshotUpdates:Z
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest setGlobalChecksumPolicy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field globalChecksumPolicy:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.util.List<org.apache.maven.settings.Proxy> getProxies();
    Code:
       0: aload_0
       1: getfield      #125                // Field proxies:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #125                // Field proxies:Ljava/util/List;
      18: aload_0
      19: getfield      #125                // Field proxies:Ljava/util/List;
      22: areturn

  public org.apache.maven.execution.MavenExecutionRequest setProxies(java.util.List<org.apache.maven.settings.Proxy>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #125                // Field proxies:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #125                // Field proxies:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest addProxy(org.apache.maven.settings.Proxy);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #126                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #127                // String proxy missing
      10: invokespecial #128                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #129                // Method getProxies:()Ljava/util/List;
      18: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          69
      33: aload_2
      34: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #130                // class org/apache/maven/settings/Proxy
      42: astore_3
      43: aload_3
      44: invokevirtual #131                // Method org/apache/maven/settings/Proxy.getId:()Ljava/lang/String;
      47: ifnull        66
      50: aload_3
      51: invokevirtual #131                // Method org/apache/maven/settings/Proxy.getId:()Ljava/lang/String;
      54: aload_1
      55: invokevirtual #131                // Method org/apache/maven/settings/Proxy.getId:()Ljava/lang/String;
      58: invokevirtual #132                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifeq          66
      64: aload_0
      65: areturn
      66: goto          24
      69: aload_0
      70: invokevirtual #129                // Method getProxies:()Ljava/util/List;
      73: aload_1
      74: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload_0
      81: areturn

  public java.util.List<org.apache.maven.settings.Server> getServers();
    Code:
       0: aload_0
       1: getfield      #133                // Field servers:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #133                // Field servers:Ljava/util/List;
      18: aload_0
      19: getfield      #133                // Field servers:Ljava/util/List;
      22: areturn

  public org.apache.maven.execution.MavenExecutionRequest setServers(java.util.List<org.apache.maven.settings.Server>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #133                // Field servers:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #133                // Field servers:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest addServer(org.apache.maven.settings.Server);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #126                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #134                // String server missing
      10: invokespecial #128                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #135                // Method getServers:()Ljava/util/List;
      18: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          69
      33: aload_2
      34: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #136                // class org/apache/maven/settings/Server
      42: astore_3
      43: aload_3
      44: invokevirtual #137                // Method org/apache/maven/settings/Server.getId:()Ljava/lang/String;
      47: ifnull        66
      50: aload_3
      51: invokevirtual #137                // Method org/apache/maven/settings/Server.getId:()Ljava/lang/String;
      54: aload_1
      55: invokevirtual #137                // Method org/apache/maven/settings/Server.getId:()Ljava/lang/String;
      58: invokevirtual #132                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifeq          66
      64: aload_0
      65: areturn
      66: goto          24
      69: aload_0
      70: invokevirtual #135                // Method getServers:()Ljava/util/List;
      73: aload_1
      74: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload_0
      81: areturn

  public java.util.List<org.apache.maven.settings.Mirror> getMirrors();
    Code:
       0: aload_0
       1: getfield      #138                // Field mirrors:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #138                // Field mirrors:Ljava/util/List;
      18: aload_0
      19: getfield      #138                // Field mirrors:Ljava/util/List;
      22: areturn

  public org.apache.maven.execution.MavenExecutionRequest setMirrors(java.util.List<org.apache.maven.settings.Mirror>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #138                // Field mirrors:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #138                // Field mirrors:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest addMirror(org.apache.maven.settings.Mirror);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #126                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #139                // String mirror missing
      10: invokespecial #128                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #140                // Method getMirrors:()Ljava/util/List;
      18: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          69
      33: aload_2
      34: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #141                // class org/apache/maven/settings/Mirror
      42: astore_3
      43: aload_3
      44: invokevirtual #142                // Method org/apache/maven/settings/Mirror.getId:()Ljava/lang/String;
      47: ifnull        66
      50: aload_3
      51: invokevirtual #142                // Method org/apache/maven/settings/Mirror.getId:()Ljava/lang/String;
      54: aload_1
      55: invokevirtual #142                // Method org/apache/maven/settings/Mirror.getId:()Ljava/lang/String;
      58: invokevirtual #132                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifeq          66
      64: aload_0
      65: areturn
      66: goto          24
      69: aload_0
      70: invokevirtual #140                // Method getMirrors:()Ljava/util/List;
      73: aload_1
      74: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload_0
      81: areturn

  public java.util.List<org.apache.maven.model.Profile> getProfiles();
    Code:
       0: aload_0
       1: getfield      #143                // Field profiles:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #143                // Field profiles:Ljava/util/List;
      18: aload_0
      19: getfield      #143                // Field profiles:Ljava/util/List;
      22: areturn

  public org.apache.maven.execution.MavenExecutionRequest setProfiles(java.util.List<org.apache.maven.model.Profile>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #143                // Field profiles:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #143                // Field profiles:Ljava/util/List;
      24: aload_0
      25: areturn

  public java.util.List<java.lang.String> getPluginGroups();
    Code:
       0: aload_0
       1: getfield      #144                // Field pluginGroups:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #144                // Field pluginGroups:Ljava/util/List;
      18: aload_0
      19: getfield      #144                // Field pluginGroups:Ljava/util/List;
      22: areturn

  public org.apache.maven.execution.MavenExecutionRequest setPluginGroups(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: new           #92                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #103                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #144                // Field pluginGroups:Ljava/util/List;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #144                // Field pluginGroups:Ljava/util/List;
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest addPluginGroup(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getPluginGroups:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #116,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          24
      13: aload_0
      14: invokevirtual #145                // Method getPluginGroups:()Ljava/util/List;
      17: aload_1
      18: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: areturn

  public org.apache.maven.execution.MavenExecutionRequest addPluginGroups(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #122                // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #146                // Method addPluginGroup:(Ljava/lang/String;)Lorg/apache/maven/execution/MavenExecutionRequest;
      31: pop
      32: goto          7
      35: aload_0
      36: areturn

  public org.apache.maven.execution.MavenExecutionRequest setRecursive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field recursive:Z
       5: aload_0
       6: areturn

  public boolean isProjectPresent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isProjectPresent:Z
       4: ireturn

  public org.apache.maven.execution.MavenExecutionRequest setProjectPresent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field isProjectPresent:Z
       5: aload_0
       6: areturn

  public java.io.File getUserSettingsFile();
    Code:
       0: aload_0
       1: getfield      #147                // Field userSettingsFile:Ljava/io/File;
       4: areturn

  public org.apache.maven.execution.MavenExecutionRequest setUserSettingsFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #147                // Field userSettingsFile:Ljava/io/File;
       5: aload_0
       6: areturn

  public java.io.File getGlobalSettingsFile();
    Code:
       0: aload_0
       1: getfield      #148                // Field globalSettingsFile:Ljava/io/File;
       4: areturn

  public org.apache.maven.execution.MavenExecutionRequest setGlobalSettingsFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #148                // Field globalSettingsFile:Ljava/io/File;
       5: aload_0
       6: areturn

  public java.io.File getUserToolchainsFile();
    Code:
       0: aload_0
       1: getfield      #149                // Field userToolchainsFile:Ljava/io/File;
       4: areturn

  public org.apache.maven.execution.MavenExecutionRequest setUserToolchainsFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field userToolchainsFile:Ljava/io/File;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.MavenExecutionRequest addRemoteRepository(org.apache.maven.artifact.repository.ArtifactRepository);
    Code:
       0: aload_0
       1: invokevirtual #150                // Method getRemoteRepositories:()Ljava/util/List;
       4: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          61
      19: aload_2
      20: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #151                // class org/apache/maven/artifact/repository/ArtifactRepository
      28: astore_3
      29: aload_3
      30: invokeinterface #152,  1          // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getId:()Ljava/lang/String;
      35: ifnull        58
      38: aload_3
      39: invokeinterface #152,  1          // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getId:()Ljava/lang/String;
      44: aload_1
      45: invokeinterface #152,  1          // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getId:()Ljava/lang/String;
      50: invokevirtual #132                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifeq          58
      56: aload_0
      57: areturn
      58: goto          10
      61: aload_0
      62: invokevirtual #150                // Method getRemoteRepositories:()Ljava/util/List;
      65: aload_1
      66: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: areturn

  public java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> getRemoteRepositories();
    Code:
       0: aload_0
       1: getfield      #106                // Field remoteRepositories:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #106                // Field remoteRepositories:Ljava/util/List;
      18: aload_0
      19: getfield      #106                // Field remoteRepositories:Ljava/util/List;
      22: areturn

  public org.apache.maven.execution.MavenExecutionRequest addPluginArtifactRepository(org.apache.maven.artifact.repository.ArtifactRepository);
    Code:
       0: aload_0
       1: invokevirtual #153                // Method getPluginArtifactRepositories:()Ljava/util/List;
       4: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          61
      19: aload_2
      20: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #151                // class org/apache/maven/artifact/repository/ArtifactRepository
      28: astore_3
      29: aload_3
      30: invokeinterface #152,  1          // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getId:()Ljava/lang/String;
      35: ifnull        58
      38: aload_3
      39: invokeinterface #152,  1          // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getId:()Ljava/lang/String;
      44: aload_1
      45: invokeinterface #152,  1          // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getId:()Ljava/lang/String;
      50: invokevirtual #132                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifeq          58
      56: aload_0
      57: areturn
      58: goto          10
      61: aload_0
      62: invokevirtual #153                // Method getPluginArtifactRepositories:()Ljava/util/List;
      65: aload_1
      66: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: areturn

  public java.util.List<org.apache.maven.artifact.repository.ArtifactRepository> getPluginArtifactRepositories();
    Code:
       0: aload_0
       1: getfield      #107                // Field pluginArtifactRepositories:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #92                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #107                // Field pluginArtifactRepositories:Ljava/util/List;
      18: aload_0
      19: getfield      #107                // Field pluginArtifactRepositories:Ljava/util/List;
      22: areturn

  public org.apache.maven.project.ProjectBuildingRequest getProjectBuildingRequest();
    Code:
       0: aload_0
       1: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
       4: ifnonnull     151
       7: aload_0
       8: new           #154                // class org/apache/maven/project/DefaultProjectBuildingRequest
      11: dup
      12: invokespecial #155                // Method org/apache/maven/project/DefaultProjectBuildingRequest."<init>":()V
      15: putfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
      18: aload_0
      19: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
      22: aload_0
      23: invokevirtual #156                // Method getLocalRepository:()Lorg/apache/maven/artifact/repository/ArtifactRepository;
      26: invokeinterface #157,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setLocalRepository:(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Lorg/apache/maven/project/ProjectBuildingRequest;
      31: pop
      32: aload_0
      33: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
      36: aload_0
      37: invokevirtual #158                // Method getSystemProperties:()Ljava/util/Properties;
      40: invokeinterface #159,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setSystemProperties:(Ljava/util/Properties;)Lorg/apache/maven/project/ProjectBuildingRequest;
      45: pop
      46: aload_0
      47: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
      50: aload_0
      51: invokevirtual #160                // Method getUserProperties:()Ljava/util/Properties;
      54: invokeinterface #161,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setUserProperties:(Ljava/util/Properties;)Lorg/apache/maven/project/ProjectBuildingRequest;
      59: pop
      60: aload_0
      61: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
      64: aload_0
      65: invokevirtual #150                // Method getRemoteRepositories:()Ljava/util/List;
      68: invokeinterface #162,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setRemoteRepositories:(Ljava/util/List;)Lorg/apache/maven/project/ProjectBuildingRequest;
      73: pop
      74: aload_0
      75: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
      78: aload_0
      79: invokevirtual #153                // Method getPluginArtifactRepositories:()Ljava/util/List;
      82: invokeinterface #163,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setPluginArtifactRepositories:(Ljava/util/List;)Lorg/apache/maven/project/ProjectBuildingRequest;
      87: pop
      88: aload_0
      89: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
      92: aload_0
      93: invokevirtual #115                // Method getActiveProfiles:()Ljava/util/List;
      96: invokeinterface #164,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setActiveProfileIds:(Ljava/util/List;)V
     101: aload_0
     102: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
     105: aload_0
     106: invokevirtual #118                // Method getInactiveProfiles:()Ljava/util/List;
     109: invokeinterface #165,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setInactiveProfileIds:(Ljava/util/List;)V
     114: aload_0
     115: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
     118: aload_0
     119: invokevirtual #166                // Method getProfiles:()Ljava/util/List;
     122: invokeinterface #167,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setProfiles:(Ljava/util/List;)V
     127: aload_0
     128: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
     131: iconst_1
     132: invokeinterface #168,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setProcessPlugins:(Z)Lorg/apache/maven/project/ProjectBuildingRequest;
     137: pop
     138: aload_0
     139: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
     142: aload_0
     143: invokevirtual #169                // Method getStartTime:()Ljava/util/Date;
     146: invokeinterface #170,  2          // InterfaceMethod org/apache/maven/project/ProjectBuildingRequest.setBuildStartTime:(Ljava/util/Date;)V
     151: aload_0
     152: getfield      #108                // Field projectBuildingRequest:Lorg/apache/maven/project/ProjectBuildingRequest;
     155: areturn

  public org.apache.maven.execution.MavenExecutionRequest addProfile(org.apache.maven.model.Profile);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #126                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #171                // String profile missing
      10: invokespecial #128                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #166                // Method getProfiles:()Ljava/util/List;
      18: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          69
      33: aload_2
      34: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #172                // class org/apache/maven/model/Profile
      42: astore_3
      43: aload_3
      44: invokevirtual #173                // Method org/apache/maven/model/Profile.getId:()Ljava/lang/String;
      47: ifnull        66
      50: aload_3
      51: invokevirtual #173                // Method org/apache/maven/model/Profile.getId:()Ljava/lang/String;
      54: aload_1
      55: invokevirtual #173                // Method org/apache/maven/model/Profile.getId:()Ljava/lang/String;
      58: invokevirtual #132                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifeq          66
      64: aload_0
      65: areturn
      66: goto          24
      69: aload_0
      70: invokevirtual #166                // Method getProfiles:()Ljava/util/List;
      73: aload_1
      74: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload_0
      81: areturn

  public org.sonatype.aether.RepositoryCache getRepositoryCache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field repositoryCache:Lorg/sonatype/aether/RepositoryCache;
       4: areturn

  public org.apache.maven.execution.MavenExecutionRequest setRepositoryCache(org.sonatype.aether.RepositoryCache);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field repositoryCache:Lorg/sonatype/aether/RepositoryCache;
       5: aload_0
       6: areturn

  public org.apache.maven.execution.ExecutionListener getExecutionListener();
    Code:
       0: aload_0
       1: getfield      #174                // Field executionListener:Lorg/apache/maven/execution/ExecutionListener;
       4: areturn

  public org.apache.maven.execution.MavenExecutionRequest setExecutionListener(org.apache.maven.execution.ExecutionListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #174                // Field executionListener:Lorg/apache/maven/execution/ExecutionListener;
       5: aload_0
       6: areturn

  public java.lang.String getThreadCount();
    Code:
       0: aload_0
       1: getfield      #175                // Field threadCount:Ljava/lang/String;
       4: areturn

  public void setThreadCount(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #175                // Field threadCount:Ljava/lang/String;
       5: return

  public boolean isThreadConfigurationPresent();
    Code:
       0: aload_0
       1: invokevirtual #176                // Method getThreadCount:()Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isPerCoreThreadCount();
    Code:
       0: aload_0
       1: getfield      #177                // Field perCoreThreadCount:Z
       4: ireturn

  public void setPerCoreThreadCount(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #177                // Field perCoreThreadCount:Z
       5: return

  public org.sonatype.aether.repository.WorkspaceReader getWorkspaceReader();
    Code:
       0: aload_0
       1: getfield      #178                // Field workspaceReader:Lorg/sonatype/aether/repository/WorkspaceReader;
       4: areturn

  public org.apache.maven.execution.MavenExecutionRequest setWorkspaceReader(org.sonatype.aether.repository.WorkspaceReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #178                // Field workspaceReader:Lorg/sonatype/aether/repository/WorkspaceReader;
       5: aload_0
       6: areturn

  public boolean isCacheTransferError();
    Code:
       0: aload_0
       1: getfield      #179                // Field cacheTransferError:Z
       4: ireturn

  public org.apache.maven.execution.MavenExecutionRequest setCacheTransferError(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #179                // Field cacheTransferError:Z
       5: aload_0
       6: areturn

  public boolean isCacheNotFound();
    Code:
       0: aload_0
       1: getfield      #180                // Field cacheNotFound:Z
       4: ireturn

  public org.apache.maven.execution.MavenExecutionRequest setCacheNotFound(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #180                // Field cacheNotFound:Z
       5: aload_0
       6: areturn
}
