Compiled from "DefaultArtifact.java"
public class org.apache.maven.artifact.DefaultArtifact implements org.apache.maven.artifact.Artifact {
  private java.lang.String groupId;

  private java.lang.String artifactId;

  private java.lang.String baseVersion;

  private final java.lang.String type;

  private final java.lang.String classifier;

  private volatile java.lang.String scope;

  private volatile java.io.File file;

  private org.apache.maven.artifact.repository.ArtifactRepository repository;

  private java.lang.String downloadUrl;

  private org.apache.maven.artifact.resolver.filter.ArtifactFilter dependencyFilter;

  private org.apache.maven.artifact.handler.ArtifactHandler artifactHandler;

  private java.util.List<java.lang.String> dependencyTrail;

  private volatile java.lang.String version;

  private org.apache.maven.artifact.versioning.VersionRange versionRange;

  private volatile boolean resolved;

  private boolean release;

  private java.util.List<org.apache.maven.artifact.versioning.ArtifactVersion> availableVersions;

  private java.util.Map<java.lang.Object, org.apache.maven.artifact.metadata.ArtifactMetadata> metadataMap;

  private boolean optional;

  public org.apache.maven.artifact.DefaultArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.handler.ArtifactHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method org/apache/maven/artifact/versioning/VersionRange.createFromVersion:(Ljava/lang/String;)Lorg/apache/maven/artifact/versioning/VersionRange;
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: iconst_0
      16: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/maven/artifact/versioning/VersionRange;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/maven/artifact/handler/ArtifactHandler;Z)V
      19: return

  public org.apache.maven.artifact.DefaultArtifact(java.lang.String, java.lang.String, org.apache.maven.artifact.versioning.VersionRange, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.handler.ArtifactHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: iconst_0
      13: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/maven/artifact/versioning/VersionRange;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/maven/artifact/handler/ArtifactHandler;Z)V
      16: return

  public org.apache.maven.artifact.DefaultArtifact(java.lang.String, java.lang.String, org.apache.maven.artifact.versioning.VersionRange, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.handler.ArtifactHandler, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field groupId:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field artifactId:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
      19: aload_0
      20: invokespecial #7                  // Method selectVersionFromNewRangeIfAvailable:()V
      23: aload_0
      24: aload         7
      26: putfield      #8                  // Field artifactHandler:Lorg/apache/maven/artifact/handler/ArtifactHandler;
      29: aload_0
      30: aload         4
      32: putfield      #9                  // Field scope:Ljava/lang/String;
      35: aload_0
      36: aload         5
      38: putfield      #10                 // Field type:Ljava/lang/String;
      41: aload         6
      43: ifnonnull     55
      46: aload         7
      48: invokeinterface #11,  1           // InterfaceMethod org/apache/maven/artifact/handler/ArtifactHandler.getClassifier:()Ljava/lang/String;
      53: astore        6
      55: aload_0
      56: aload         6
      58: putfield      #12                 // Field classifier:Ljava/lang/String;
      61: aload_0
      62: iload         8
      64: putfield      #13                 // Field optional:Z
      67: aload_0
      68: invokespecial #14                 // Method validateIdentity:()V
      71: return

  private void validateIdentity();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field groupId:Ljava/lang/String;
       5: invokespecial #15                 // Method empty:(Ljava/lang/String;)Z
       8: ifeq          37
      11: new           #16                 // class org/apache/maven/artifact/InvalidArtifactRTException
      14: dup
      15: aload_0
      16: getfield      #4                  // Field groupId:Ljava/lang/String;
      19: aload_0
      20: getfield      #5                  // Field artifactId:Ljava/lang/String;
      23: aload_0
      24: invokevirtual #17                 // Method getVersion:()Ljava/lang/String;
      27: aload_0
      28: getfield      #10                 // Field type:Ljava/lang/String;
      31: ldc           #18                 // String The groupId cannot be empty.
      33: invokespecial #19                 // Method org/apache/maven/artifact/InvalidArtifactRTException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #5                  // Field artifactId:Ljava/lang/String;
      41: ifnonnull     70
      44: new           #16                 // class org/apache/maven/artifact/InvalidArtifactRTException
      47: dup
      48: aload_0
      49: getfield      #4                  // Field groupId:Ljava/lang/String;
      52: aload_0
      53: getfield      #5                  // Field artifactId:Ljava/lang/String;
      56: aload_0
      57: invokevirtual #17                 // Method getVersion:()Ljava/lang/String;
      60: aload_0
      61: getfield      #10                 // Field type:Ljava/lang/String;
      64: ldc           #20                 // String The artifactId cannot be empty.
      66: invokespecial #19                 // Method org/apache/maven/artifact/InvalidArtifactRTException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: getfield      #10                 // Field type:Ljava/lang/String;
      74: ifnonnull     103
      77: new           #16                 // class org/apache/maven/artifact/InvalidArtifactRTException
      80: dup
      81: aload_0
      82: getfield      #4                  // Field groupId:Ljava/lang/String;
      85: aload_0
      86: getfield      #5                  // Field artifactId:Ljava/lang/String;
      89: aload_0
      90: invokevirtual #17                 // Method getVersion:()Ljava/lang/String;
      93: aload_0
      94: getfield      #10                 // Field type:Ljava/lang/String;
      97: ldc           #21                 // String The type cannot be empty.
      99: invokespecial #19                 // Method org/apache/maven/artifact/InvalidArtifactRTException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     102: athrow
     103: aload_0
     104: getfield      #22                 // Field version:Ljava/lang/String;
     107: ifnonnull     143
     110: aload_0
     111: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
     114: ifnonnull     143
     117: new           #16                 // class org/apache/maven/artifact/InvalidArtifactRTException
     120: dup
     121: aload_0
     122: getfield      #4                  // Field groupId:Ljava/lang/String;
     125: aload_0
     126: getfield      #5                  // Field artifactId:Ljava/lang/String;
     129: aload_0
     130: invokevirtual #17                 // Method getVersion:()Ljava/lang/String;
     133: aload_0
     134: getfield      #10                 // Field type:Ljava/lang/String;
     137: ldc           #23                 // String The version cannot be empty.
     139: invokespecial #19                 // Method org/apache/maven/artifact/InvalidArtifactRTException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     142: athrow
     143: return

  private boolean empty(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #25                 // Method java/lang/String.length:()I
      11: iconst_1
      12: if_icmpge     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public java.lang.String getClassifier();
    Code:
       0: aload_0
       1: getfield      #12                 // Field classifier:Ljava/lang/String;
       4: areturn

  public boolean hasClassifier();
    Code:
       0: aload_0
       1: getfield      #12                 // Field classifier:Ljava/lang/String;
       4: invokestatic  #26                 // Method org/codehaus/plexus/util/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
       7: ireturn

  public java.lang.String getScope();
    Code:
       0: aload_0
       1: getfield      #9                  // Field scope:Ljava/lang/String;
       4: areturn

  public java.lang.String getGroupId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field groupId:Ljava/lang/String;
       4: areturn

  public java.lang.String getArtifactId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field artifactId:Ljava/lang/String;
       4: areturn

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #22                 // Field version:Ljava/lang/String;
       4: areturn

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field version:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokevirtual #27                 // Method setBaseVersionInternal:(Ljava/lang/String;)V
      10: aload_0
      11: aconst_null
      12: putfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
      15: return

  public java.lang.String getType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field type:Ljava/lang/String;
       4: areturn

  public void setFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field file:Ljava/io/File;
       5: return

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #28                 // Field file:Ljava/io/File;
       4: areturn

  public org.apache.maven.artifact.repository.ArtifactRepository getRepository();
    Code:
       0: aload_0
       1: getfield      #29                 // Field repository:Lorg/apache/maven/artifact/repository/ArtifactRepository;
       4: areturn

  public void setRepository(org.apache.maven.artifact.repository.ArtifactRepository);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field repository:Lorg/apache/maven/artifact/repository/ArtifactRepository;
       5: return

  public java.lang.String getId();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #32                 // Method getDependencyConflictId:()Ljava/lang/String;
      11: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #34                 // String :
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #35                 // Method getBaseVersion:()Ljava/lang/String;
      23: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.String getDependencyConflictId();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: sipush        128
       7: invokespecial #37                 // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_1
      11: aload_1
      12: aload_0
      13: invokevirtual #38                 // Method getGroupId:()Ljava/lang/String;
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_1
      21: ldc           #34                 // String :
      23: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_0
      28: aload_1
      29: invokespecial #39                 // Method appendArtifactTypeClassifierString:(Ljava/lang/StringBuilder;)V
      32: aload_1
      33: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  private void appendArtifactTypeClassifierString(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #40                 // Method getArtifactId:()Ljava/lang/String;
       5: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       8: pop
       9: aload_1
      10: ldc           #34                 // String :
      12: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload_1
      17: aload_0
      18: invokevirtual #41                 // Method getType:()Ljava/lang/String;
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: invokevirtual #42                 // Method hasClassifier:()Z
      29: ifeq          48
      32: aload_1
      33: ldc           #34                 // String :
      35: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_1
      40: aload_0
      41: invokevirtual #43                 // Method getClassifier:()Ljava/lang/String;
      44: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: return

  public void addMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata);
    Code:
       0: aload_0
       1: getfield      #44                 // Field metadataMap:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #45                 // class java/util/HashMap
      11: dup
      12: invokespecial #46                 // Method java/util/HashMap."<init>":()V
      15: putfield      #44                 // Field metadataMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #44                 // Field metadataMap:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #47,  1           // InterfaceMethod org/apache/maven/artifact/metadata/ArtifactMetadata.getKey:()Ljava/lang/Object;
      28: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #49                 // class org/apache/maven/artifact/metadata/ArtifactMetadata
      36: astore_2
      37: aload_2
      38: ifnull        51
      41: aload_2
      42: aload_1
      43: invokeinterface #50,  2           // InterfaceMethod org/apache/maven/artifact/metadata/ArtifactMetadata.merge:(Lorg/apache/maven/artifact/metadata/ArtifactMetadata;)V
      48: goto          68
      51: aload_0
      52: getfield      #44                 // Field metadataMap:Ljava/util/Map;
      55: aload_1
      56: invokeinterface #47,  1           // InterfaceMethod org/apache/maven/artifact/metadata/ArtifactMetadata.getKey:()Ljava/lang/Object;
      61: aload_1
      62: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: return

  public java.util.Collection<org.apache.maven.artifact.metadata.ArtifactMetadata> getMetadataList();
    Code:
       0: aload_0
       1: getfield      #44                 // Field metadataMap:Ljava/util/Map;
       4: ifnonnull     11
       7: invokestatic  #52                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #44                 // Field metadataMap:Ljava/util/Map;
      15: invokeinterface #53,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      20: areturn

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #38                 // Method getGroupId:()Ljava/lang/String;
      12: ifnull        31
      15: aload_1
      16: aload_0
      17: invokevirtual #38                 // Method getGroupId:()Ljava/lang/String;
      20: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #34                 // String :
      27: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_0
      32: aload_1
      33: invokespecial #39                 // Method appendArtifactTypeClassifierString:(Ljava/lang/StringBuilder;)V
      36: aload_1
      37: ldc           #34                 // String :
      39: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_0
      44: invokevirtual #54                 // Method getBaseVersionInternal:()Ljava/lang/String;
      47: ifnull        62
      50: aload_1
      51: aload_0
      52: invokevirtual #54                 // Method getBaseVersionInternal:()Ljava/lang/String;
      55: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: pop
      59: goto          74
      62: aload_1
      63: aload_0
      64: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
      67: invokevirtual #55                 // Method org/apache/maven/artifact/versioning/VersionRange.toString:()Ljava/lang/String;
      70: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_0
      75: getfield      #9                  // Field scope:Ljava/lang/String;
      78: ifnull        97
      81: aload_1
      82: ldc           #34                 // String :
      84: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_1
      89: aload_0
      90: getfield      #9                  // Field scope:Ljava/lang/String;
      93: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: aload_1
      98: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: areturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #4                  // Field groupId:Ljava/lang/String;
      11: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      14: iadd
      15: istore_1
      16: bipush        37
      18: iload_1
      19: imul
      20: aload_0
      21: getfield      #5                  // Field artifactId:Ljava/lang/String;
      24: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_1
      29: bipush        37
      31: iload_1
      32: imul
      33: aload_0
      34: getfield      #10                 // Field type:Ljava/lang/String;
      37: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      40: iadd
      41: istore_1
      42: aload_0
      43: getfield      #22                 // Field version:Ljava/lang/String;
      46: ifnull        62
      49: bipush        37
      51: iload_1
      52: imul
      53: aload_0
      54: getfield      #22                 // Field version:Ljava/lang/String;
      57: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      60: iadd
      61: istore_1
      62: bipush        37
      64: iload_1
      65: imul
      66: aload_0
      67: getfield      #12                 // Field classifier:Ljava/lang/String;
      70: ifnull        83
      73: aload_0
      74: getfield      #12                 // Field classifier:Ljava/lang/String;
      77: invokevirtual #56                 // Method java/lang/String.hashCode:()I
      80: goto          84
      83: iconst_0
      84: iadd
      85: istore_1
      86: iload_1
      87: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #57                 // class org/apache/maven/artifact/Artifact
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #57                 // class org/apache/maven/artifact/Artifact
      20: astore_2
      21: aload_2
      22: invokeinterface #58,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getGroupId:()Ljava/lang/String;
      27: aload_0
      28: getfield      #4                  // Field groupId:Ljava/lang/String;
      31: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifne          39
      37: iconst_0
      38: ireturn
      39: aload_2
      40: invokeinterface #60,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getArtifactId:()Ljava/lang/String;
      45: aload_0
      46: getfield      #5                  // Field artifactId:Ljava/lang/String;
      49: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokeinterface #61,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getVersion:()Ljava/lang/String;
      63: aload_0
      64: getfield      #22                 // Field version:Ljava/lang/String;
      67: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifne          75
      73: iconst_0
      74: ireturn
      75: aload_2
      76: invokeinterface #62,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getType:()Ljava/lang/String;
      81: aload_0
      82: getfield      #10                 // Field type:Ljava/lang/String;
      85: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      88: ifne          93
      91: iconst_0
      92: ireturn
      93: aload_2
      94: invokeinterface #63,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getClassifier:()Ljava/lang/String;
      99: ifnonnull     112
     102: aload_0
     103: getfield      #12                 // Field classifier:Ljava/lang/String;
     106: ifnull        130
     109: goto          128
     112: aload_2
     113: invokeinterface #63,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getClassifier:()Ljava/lang/String;
     118: aload_0
     119: getfield      #12                 // Field classifier:Ljava/lang/String;
     122: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifne          130
     128: iconst_0
     129: ireturn
     130: iconst_1
     131: ireturn

  public java.lang.String getBaseVersion();
    Code:
       0: aload_0
       1: getfield      #64                 // Field baseVersion:Ljava/lang/String;
       4: ifnonnull     22
       7: aload_0
       8: getfield      #22                 // Field version:Ljava/lang/String;
      11: ifnull        22
      14: aload_0
      15: aload_0
      16: getfield      #22                 // Field version:Ljava/lang/String;
      19: invokevirtual #27                 // Method setBaseVersionInternal:(Ljava/lang/String;)V
      22: aload_0
      23: getfield      #64                 // Field baseVersion:Ljava/lang/String;
      26: areturn

  protected java.lang.String getBaseVersionInternal();
    Code:
       0: aload_0
       1: getfield      #64                 // Field baseVersion:Ljava/lang/String;
       4: ifnonnull     22
       7: aload_0
       8: getfield      #22                 // Field version:Ljava/lang/String;
      11: ifnull        22
      14: aload_0
      15: aload_0
      16: getfield      #22                 // Field version:Ljava/lang/String;
      19: invokevirtual #27                 // Method setBaseVersionInternal:(Ljava/lang/String;)V
      22: aload_0
      23: getfield      #64                 // Field baseVersion:Ljava/lang/String;
      26: areturn

  public void setBaseVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method setBaseVersionInternal:(Ljava/lang/String;)V
       5: return

  protected void setBaseVersionInternal(java.lang.String);
    Code:
       0: getstatic     #65                 // Field VERSION_FILE_PATTERN:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #66                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #67                 // Method java/util/regex/Matcher.matches:()Z
      12: ifeq          50
      15: aload_0
      16: new           #30                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_2
      24: iconst_1
      25: invokevirtual #68                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #69                 // String -
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #70                 // String SNAPSHOT
      38: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: putfield      #64                 // Field baseVersion:Ljava/lang/String;
      47: goto          55
      50: aload_0
      51: aload_1
      52: putfield      #64                 // Field baseVersion:Ljava/lang/String;
      55: return

  public int compareTo(org.apache.maven.artifact.Artifact);
    Code:
       0: aload_0
       1: getfield      #4                  // Field groupId:Ljava/lang/String;
       4: aload_1
       5: invokeinterface #58,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getGroupId:()Ljava/lang/String;
      10: invokevirtual #71                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      13: istore_2
      14: iload_2
      15: ifne          135
      18: aload_0
      19: getfield      #5                  // Field artifactId:Ljava/lang/String;
      22: aload_1
      23: invokeinterface #60,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getArtifactId:()Ljava/lang/String;
      28: invokevirtual #71                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      31: istore_2
      32: iload_2
      33: ifne          135
      36: aload_0
      37: getfield      #10                 // Field type:Ljava/lang/String;
      40: aload_1
      41: invokeinterface #62,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getType:()Ljava/lang/String;
      46: invokevirtual #71                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      49: istore_2
      50: iload_2
      51: ifne          135
      54: aload_0
      55: getfield      #12                 // Field classifier:Ljava/lang/String;
      58: ifnonnull     75
      61: aload_1
      62: invokeinterface #63,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getClassifier:()Ljava/lang/String;
      67: ifnull        103
      70: iconst_1
      71: istore_2
      72: goto          103
      75: aload_1
      76: invokeinterface #63,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getClassifier:()Ljava/lang/String;
      81: ifnull        101
      84: aload_0
      85: getfield      #12                 // Field classifier:Ljava/lang/String;
      88: aload_1
      89: invokeinterface #63,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getClassifier:()Ljava/lang/String;
      94: invokevirtual #71                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      97: istore_2
      98: goto          103
     101: iconst_m1
     102: istore_2
     103: iload_2
     104: ifne          135
     107: new           #72                 // class org/apache/maven/artifact/versioning/DefaultArtifactVersion
     110: dup
     111: aload_0
     112: getfield      #22                 // Field version:Ljava/lang/String;
     115: invokespecial #73                 // Method org/apache/maven/artifact/versioning/DefaultArtifactVersion."<init>":(Ljava/lang/String;)V
     118: new           #72                 // class org/apache/maven/artifact/versioning/DefaultArtifactVersion
     121: dup
     122: aload_1
     123: invokeinterface #61,  1           // InterfaceMethod org/apache/maven/artifact/Artifact.getVersion:()Ljava/lang/String;
     128: invokespecial #73                 // Method org/apache/maven/artifact/versioning/DefaultArtifactVersion."<init>":(Ljava/lang/String;)V
     131: invokevirtual #74                 // Method org/apache/maven/artifact/versioning/DefaultArtifactVersion.compareTo:(Lorg/apache/maven/artifact/versioning/ArtifactVersion;)I
     134: istore_2
     135: iload_2
     136: ireturn

  public void updateVersion(java.lang.String, org.apache.maven.artifact.repository.ArtifactRepository);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method setResolvedVersion:(Ljava/lang/String;)V
       5: aload_0
       6: new           #76                 // class java/io/File
       9: dup
      10: aload_2
      11: invokeinterface #77,  1           // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.getBasedir:()Ljava/lang/String;
      16: aload_2
      17: aload_0
      18: invokeinterface #78,  2           // InterfaceMethod org/apache/maven/artifact/repository/ArtifactRepository.pathOf:(Lorg/apache/maven/artifact/Artifact;)Ljava/lang/String;
      23: invokespecial #79                 // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      26: invokevirtual #80                 // Method setFile:(Ljava/io/File;)V
      29: return

  public java.lang.String getDownloadUrl();
    Code:
       0: aload_0
       1: getfield      #81                 // Field downloadUrl:Ljava/lang/String;
       4: areturn

  public void setDownloadUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field downloadUrl:Ljava/lang/String;
       5: return

  public org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter();
    Code:
       0: aload_0
       1: getfield      #82                 // Field dependencyFilter:Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;
       4: areturn

  public void setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field dependencyFilter:Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;
       5: return

  public org.apache.maven.artifact.handler.ArtifactHandler getArtifactHandler();
    Code:
       0: aload_0
       1: getfield      #8                  // Field artifactHandler:Lorg/apache/maven/artifact/handler/ArtifactHandler;
       4: areturn

  public java.util.List<java.lang.String> getDependencyTrail();
    Code:
       0: aload_0
       1: getfield      #83                 // Field dependencyTrail:Ljava/util/List;
       4: areturn

  public void setDependencyTrail(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field dependencyTrail:Ljava/util/List;
       5: return

  public void setScope(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field scope:Ljava/lang/String;
       5: return

  public org.apache.maven.artifact.versioning.VersionRange getVersionRange();
    Code:
       0: aload_0
       1: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
       4: areturn

  public void setVersionRange(org.apache.maven.artifact.versioning.VersionRange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
       5: aload_0
       6: invokespecial #7                  // Method selectVersionFromNewRangeIfAvailable:()V
       9: return

  private void selectVersionFromNewRangeIfAvailable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
       4: ifnull        34
       7: aload_0
       8: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
      11: invokevirtual #84                 // Method org/apache/maven/artifact/versioning/VersionRange.getRecommendedVersion:()Lorg/apache/maven/artifact/versioning/ArtifactVersion;
      14: ifnull        34
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
      22: invokevirtual #84                 // Method org/apache/maven/artifact/versioning/VersionRange.getRecommendedVersion:()Lorg/apache/maven/artifact/versioning/ArtifactVersion;
      25: invokevirtual #85                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokevirtual #86                 // Method selectVersion:(Ljava/lang/String;)V
      31: goto          44
      34: aload_0
      35: aconst_null
      36: putfield      #22                 // Field version:Ljava/lang/String;
      39: aload_0
      40: aconst_null
      41: putfield      #64                 // Field baseVersion:Ljava/lang/String;
      44: return

  public void selectVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field version:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokevirtual #27                 // Method setBaseVersionInternal:(Ljava/lang/String;)V
      10: return

  public void setGroupId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field groupId:Ljava/lang/String;
       5: return

  public void setArtifactId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field artifactId:Ljava/lang/String;
       5: return

  public boolean isSnapshot();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getBaseVersion:()Ljava/lang/String;
       4: ifnull        35
       7: aload_0
       8: invokevirtual #35                 // Method getBaseVersion:()Ljava/lang/String;
      11: ldc           #70                 // String SNAPSHOT
      13: invokevirtual #87                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      16: ifne          31
      19: aload_0
      20: invokevirtual #35                 // Method getBaseVersion:()Ljava/lang/String;
      23: ldc           #88                 // String LATEST
      25: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public void setResolved(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #89                 // Field resolved:Z
       5: return

  public boolean isResolved();
    Code:
       0: aload_0
       1: getfield      #89                 // Field resolved:Z
       4: ireturn

  public void setResolvedVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field version:Ljava/lang/String;
       5: return

  public void setArtifactHandler(org.apache.maven.artifact.handler.ArtifactHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field artifactHandler:Lorg/apache/maven/artifact/handler/ArtifactHandler;
       5: return

  public void setRelease(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #90                 // Field release:Z
       5: return

  public boolean isRelease();
    Code:
       0: aload_0
       1: getfield      #90                 // Field release:Z
       4: ireturn

  public java.util.List<org.apache.maven.artifact.versioning.ArtifactVersion> getAvailableVersions();
    Code:
       0: aload_0
       1: getfield      #91                 // Field availableVersions:Ljava/util/List;
       4: areturn

  public void setAvailableVersions(java.util.List<org.apache.maven.artifact.versioning.ArtifactVersion>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field availableVersions:Ljava/util/List;
       5: return

  public boolean isOptional();
    Code:
       0: aload_0
       1: getfield      #13                 // Field optional:Z
       4: ireturn

  public org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
       4: aload_0
       5: invokevirtual #92                 // Method org/apache/maven/artifact/versioning/VersionRange.getSelectedVersion:(Lorg/apache/maven/artifact/Artifact;)Lorg/apache/maven/artifact/versioning/ArtifactVersion;
       8: areturn

  public boolean isSelectedVersionKnown() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field versionRange:Lorg/apache/maven/artifact/versioning/VersionRange;
       4: aload_0
       5: invokevirtual #93                 // Method org/apache/maven/artifact/versioning/VersionRange.isSelectedVersionKnown:(Lorg/apache/maven/artifact/Artifact;)Z
       8: ireturn

  public void setOptional(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field optional:Z
       5: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #57                 // class org/apache/maven/artifact/Artifact
       5: invokevirtual #94                 // Method compareTo:(Lorg/apache/maven/artifact/Artifact;)I
       8: ireturn
}
