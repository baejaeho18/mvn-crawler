Compiled from "DefaultLifecycleBindingsInjector.java"
class org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector$LifecycleBindingsMerger extends org.apache.maven.model.merge.MavenModelMerger {
  private static final java.lang.String PLUGIN_MANAGEMENT;

  private org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector$LifecycleBindingsMerger();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/maven/model/merge/MavenModelMerger."<init>":()V
       4: return

  public void merge(org.apache.maven.model.Model, org.apache.maven.model.Model);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/apache/maven/model/Model.getBuild:()Lorg/apache/maven/model/Build;
       4: ifnonnull     18
       7: aload_1
       8: new           #4                  // class org/apache/maven/model/Build
      11: dup
      12: invokespecial #5                  // Method org/apache/maven/model/Build."<init>":()V
      15: invokevirtual #6                  // Method org/apache/maven/model/Model.setBuild:(Lorg/apache/maven/model/Build;)V
      18: ldc           #7                  // String plugin-management
      20: aload_1
      21: invokevirtual #3                  // Method org/apache/maven/model/Model.getBuild:()Lorg/apache/maven/model/Build;
      24: invokevirtual #8                  // Method org/apache/maven/model/Build.getPluginManagement:()Lorg/apache/maven/model/PluginManagement;
      27: invokestatic  #9                  // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      30: astore_3
      31: aload_0
      32: aload_1
      33: invokevirtual #3                  // Method org/apache/maven/model/Model.getBuild:()Lorg/apache/maven/model/Build;
      36: aload_2
      37: invokevirtual #3                  // Method org/apache/maven/model/Model.getBuild:()Lorg/apache/maven/model/Build;
      40: iconst_0
      41: aload_3
      42: invokevirtual #10                 // Method mergePluginContainer_Plugins:(Lorg/apache/maven/model/PluginContainer;Lorg/apache/maven/model/PluginContainer;ZLjava/util/Map;)V
      45: return

  protected void mergePluginContainer_Plugins(org.apache.maven.model.PluginContainer, org.apache.maven.model.PluginContainer, boolean, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_2
       1: invokevirtual #11                 // Method org/apache/maven/model/PluginContainer.getPlugins:()Ljava/util/List;
       4: astore        5
       6: aload         5
       8: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      13: ifne          356
      16: aload_1
      17: invokevirtual #11                 // Method org/apache/maven/model/PluginContainer.getPlugins:()Ljava/util/List;
      20: astore        6
      22: new           #13                 // class java/util/LinkedHashMap
      25: dup
      26: aload         5
      28: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      33: aload         6
      35: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      40: iadd
      41: iconst_2
      42: imul
      43: invokespecial #15                 // Method java/util/LinkedHashMap."<init>":(I)V
      46: astore        7
      48: aload         6
      50: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: astore        8
      57: aload         8
      59: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          102
      67: aload         8
      69: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #19                 // class org/apache/maven/model/Plugin
      77: astore        9
      79: aload_0
      80: aload         9
      82: invokevirtual #20                 // Method getPluginKey:(Lorg/apache/maven/model/Plugin;)Ljava/lang/Object;
      85: astore        10
      87: aload         7
      89: aload         10
      91: aload         9
      93: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: goto          57
     102: new           #13                 // class java/util/LinkedHashMap
     105: dup
     106: invokespecial #22                 // Method java/util/LinkedHashMap."<init>":()V
     109: astore        8
     111: aload         5
     113: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     118: astore        9
     120: aload         9
     122: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          210
     130: aload         9
     132: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #19                 // class org/apache/maven/model/Plugin
     140: astore        10
     142: aload_0
     143: aload         10
     145: invokevirtual #20                 // Method getPluginKey:(Lorg/apache/maven/model/Plugin;)Ljava/lang/Object;
     148: astore        11
     150: aload         7
     152: aload         11
     154: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     159: checkcast     #19                 // class org/apache/maven/model/Plugin
     162: astore        12
     164: aload         12
     166: ifnull        183
     169: aload_0
     170: aload         12
     172: aload         10
     174: iload_3
     175: aload         4
     177: invokevirtual #24                 // Method mergePlugin:(Lorg/apache/maven/model/Plugin;Lorg/apache/maven/model/Plugin;ZLjava/util/Map;)V
     180: goto          207
     183: aload         7
     185: aload         11
     187: aload         10
     189: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: pop
     195: aload         8
     197: aload         11
     199: aload         10
     201: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: pop
     207: goto          120
     210: aload         8
     212: invokeinterface #25,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     217: ifne          334
     220: aload         4
     222: ldc           #7                  // String plugin-management
     224: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     229: checkcast     #26                 // class org/apache/maven/model/PluginManagement
     232: astore        9
     234: aload         9
     236: ifnull        334
     239: aload         9
     241: invokevirtual #27                 // Method org/apache/maven/model/PluginManagement.getPlugins:()Ljava/util/List;
     244: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     249: astore        10
     251: aload         10
     253: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     258: ifeq          334
     261: aload         10
     263: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     268: checkcast     #19                 // class org/apache/maven/model/Plugin
     271: astore        11
     273: aload_0
     274: aload         11
     276: invokevirtual #20                 // Method getPluginKey:(Lorg/apache/maven/model/Plugin;)Ljava/lang/Object;
     279: astore        12
     281: aload         8
     283: aload         12
     285: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     290: checkcast     #19                 // class org/apache/maven/model/Plugin
     293: astore        13
     295: aload         13
     297: ifnull        331
     300: aload         11
     302: invokevirtual #28                 // Method org/apache/maven/model/Plugin.clone:()Lorg/apache/maven/model/Plugin;
     305: astore        14
     307: aload_0
     308: aload         14
     310: aload         13
     312: iload_3
     313: invokestatic  #29                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     316: invokevirtual #24                 // Method mergePlugin:(Lorg/apache/maven/model/Plugin;Lorg/apache/maven/model/Plugin;ZLjava/util/Map;)V
     319: aload         7
     321: aload         12
     323: aload         14
     325: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     330: pop
     331: goto          251
     334: new           #30                 // class java/util/ArrayList
     337: dup
     338: aload         7
     340: invokeinterface #31,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     345: invokespecial #32                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     348: astore        9
     350: aload_1
     351: aload         9
     353: invokevirtual #33                 // Method org/apache/maven/model/PluginContainer.setPlugins:(Ljava/util/List;)V
     356: return

  protected void mergePluginExecution(org.apache.maven.model.PluginExecution, org.apache.maven.model.PluginExecution, boolean, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokespecial #34                 // Method org/apache/maven/model/merge/MavenModelMerger.mergePluginExecution:(Lorg/apache/maven/model/PluginExecution;Lorg/apache/maven/model/PluginExecution;ZLjava/util/Map;)V
       9: aload_1
      10: aload_1
      11: invokevirtual #35                 // Method org/apache/maven/model/PluginExecution.getPriority:()I
      14: aload_2
      15: invokevirtual #35                 // Method org/apache/maven/model/PluginExecution.getPriority:()I
      18: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      21: invokevirtual #37                 // Method org/apache/maven/model/PluginExecution.setPriority:(I)V
      24: return

  org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector$LifecycleBindingsMerger(org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
