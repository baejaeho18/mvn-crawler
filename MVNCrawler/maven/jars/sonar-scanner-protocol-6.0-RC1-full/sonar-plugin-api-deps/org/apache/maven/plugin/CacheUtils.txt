Compiled from "CacheUtils.java"
class org.apache.maven.plugin.CacheUtils {
  org.apache.maven.plugin.CacheUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> boolean eq(T, T);
    Code:
       0: aload_0
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: goto          21
      12: aload_1
      13: ifnonnull     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static int hash(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #3                  // Method java/lang/Object.hashCode:()I
       8: goto          12
      11: iconst_0
      12: ireturn

  public static int repositoriesHashCode(java.util.List<org.sonatype.aether.repository.RemoteRepository>);
    Code:
       0: bipush        17
       2: istore_1
       3: aload_0
       4: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #7                  // class org/sonatype/aether/repository/RemoteRepository
      28: astore_3
      29: bipush        31
      31: iload_1
      32: imul
      33: aload_3
      34: invokestatic  #8                  // Method repositoryHashCode:(Lorg/sonatype/aether/repository/RemoteRepository;)I
      37: iadd
      38: istore_1
      39: goto          10
      42: iload_1
      43: ireturn

  private static int repositoryHashCode(org.sonatype.aether.repository.RemoteRepository);
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        31
       5: iload_1
       6: imul
       7: aload_0
       8: invokevirtual #9                  // Method org/sonatype/aether/repository/RemoteRepository.getUrl:()Ljava/lang/String;
      11: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
      14: iadd
      15: istore_1
      16: iload_1
      17: ireturn

  private static boolean repositoryEquals(org.sonatype.aether.repository.RemoteRepository, org.sonatype.aether.repository.RemoteRepository);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokevirtual #11                 // Method org/sonatype/aether/repository/RemoteRepository.getId:()Ljava/lang/String;
      11: aload_1
      12: invokevirtual #11                 // Method org/sonatype/aether/repository/RemoteRepository.getId:()Ljava/lang/String;
      15: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          71
      21: aload_0
      22: invokevirtual #9                  // Method org/sonatype/aether/repository/RemoteRepository.getUrl:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #9                  // Method org/sonatype/aether/repository/RemoteRepository.getUrl:()Ljava/lang/String;
      29: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          71
      35: aload_0
      36: iconst_0
      37: invokevirtual #13                 // Method org/sonatype/aether/repository/RemoteRepository.getPolicy:(Z)Lorg/sonatype/aether/repository/RepositoryPolicy;
      40: aload_1
      41: iconst_0
      42: invokevirtual #13                 // Method org/sonatype/aether/repository/RemoteRepository.getPolicy:(Z)Lorg/sonatype/aether/repository/RepositoryPolicy;
      45: invokestatic  #14                 // Method policyEquals:(Lorg/sonatype/aether/repository/RepositoryPolicy;Lorg/sonatype/aether/repository/RepositoryPolicy;)Z
      48: ifeq          71
      51: aload_0
      52: iconst_1
      53: invokevirtual #13                 // Method org/sonatype/aether/repository/RemoteRepository.getPolicy:(Z)Lorg/sonatype/aether/repository/RepositoryPolicy;
      56: aload_1
      57: iconst_1
      58: invokevirtual #13                 // Method org/sonatype/aether/repository/RemoteRepository.getPolicy:(Z)Lorg/sonatype/aether/repository/RepositoryPolicy;
      61: invokestatic  #14                 // Method policyEquals:(Lorg/sonatype/aether/repository/RepositoryPolicy;Lorg/sonatype/aether/repository/RepositoryPolicy;)Z
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn

  private static boolean policyEquals(org.sonatype.aether.repository.RepositoryPolicy, org.sonatype.aether.repository.RepositoryPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokevirtual #15                 // Method org/sonatype/aether/repository/RepositoryPolicy.isEnabled:()Z
      11: aload_1
      12: invokevirtual #15                 // Method org/sonatype/aether/repository/RepositoryPolicy.isEnabled:()Z
      15: if_icmpne     36
      18: aload_0
      19: invokevirtual #16                 // Method org/sonatype/aether/repository/RepositoryPolicy.getChecksumPolicy:()Ljava/lang/String;
      22: aload_1
      23: invokevirtual #16                 // Method org/sonatype/aether/repository/RepositoryPolicy.getChecksumPolicy:()Ljava/lang/String;
      26: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public static boolean repositoriesEquals(java.util.List<org.sonatype.aether.repository.RemoteRepository>, java.util.List<org.sonatype.aether.repository.RemoteRepository>);
    Code:
       0: aload_0
       1: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
       6: aload_1
       7: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_1
      25: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore_3
      31: aload_2
      32: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          66
      40: aload_2
      41: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #7                  // class org/sonatype/aether/repository/RemoteRepository
      49: aload_3
      50: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #7                  // class org/sonatype/aether/repository/RemoteRepository
      58: invokestatic  #19                 // Method repositoryEquals:(Lorg/sonatype/aether/repository/RemoteRepository;Lorg/sonatype/aether/repository/RemoteRepository;)Z
      61: ifne          31
      64: iconst_0
      65: ireturn
      66: iconst_1
      67: ireturn

  public static int pluginHashCode(org.apache.maven.model.Plugin);
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        31
       6: imul
       7: aload_0
       8: invokevirtual #20                 // Method org/apache/maven/model/Plugin.getGroupId:()Ljava/lang/String;
      11: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
      14: iadd
      15: istore_1
      16: iload_1
      17: bipush        31
      19: imul
      20: aload_0
      21: invokevirtual #21                 // Method org/apache/maven/model/Plugin.getArtifactId:()Ljava/lang/String;
      24: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
      27: iadd
      28: istore_1
      29: iload_1
      30: bipush        31
      32: imul
      33: aload_0
      34: invokevirtual #22                 // Method org/apache/maven/model/Plugin.getVersion:()Ljava/lang/String;
      37: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
      40: iadd
      41: istore_1
      42: iload_1
      43: bipush        31
      45: imul
      46: aload_0
      47: invokevirtual #23                 // Method org/apache/maven/model/Plugin.isExtensions:()Z
      50: ifeq          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: iadd
      59: istore_1
      60: aload_0
      61: invokevirtual #24                 // Method org/apache/maven/model/Plugin.getDependencies:()Ljava/util/List;
      64: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      69: astore_2
      70: aload_2
      71: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          234
      79: aload_2
      80: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #25                 // class org/apache/maven/model/Dependency
      88: astore_3
      89: iload_1
      90: bipush        31
      92: imul
      93: aload_3
      94: invokevirtual #26                 // Method org/apache/maven/model/Dependency.getGroupId:()Ljava/lang/String;
      97: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     100: iadd
     101: istore_1
     102: iload_1
     103: bipush        31
     105: imul
     106: aload_3
     107: invokevirtual #27                 // Method org/apache/maven/model/Dependency.getArtifactId:()Ljava/lang/String;
     110: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     113: iadd
     114: istore_1
     115: iload_1
     116: bipush        31
     118: imul
     119: aload_3
     120: invokevirtual #28                 // Method org/apache/maven/model/Dependency.getVersion:()Ljava/lang/String;
     123: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     126: iadd
     127: istore_1
     128: iload_1
     129: bipush        31
     131: imul
     132: aload_3
     133: invokevirtual #29                 // Method org/apache/maven/model/Dependency.getType:()Ljava/lang/String;
     136: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     139: iadd
     140: istore_1
     141: iload_1
     142: bipush        31
     144: imul
     145: aload_3
     146: invokevirtual #30                 // Method org/apache/maven/model/Dependency.getClassifier:()Ljava/lang/String;
     149: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     152: iadd
     153: istore_1
     154: iload_1
     155: bipush        31
     157: imul
     158: aload_3
     159: invokevirtual #31                 // Method org/apache/maven/model/Dependency.getScope:()Ljava/lang/String;
     162: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     165: iadd
     166: istore_1
     167: aload_3
     168: invokevirtual #32                 // Method org/apache/maven/model/Dependency.getExclusions:()Ljava/util/List;
     171: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     176: astore        4
     178: aload         4
     180: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     185: ifeq          231
     188: aload         4
     190: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     195: checkcast     #33                 // class org/apache/maven/model/Exclusion
     198: astore        5
     200: iload_1
     201: bipush        31
     203: imul
     204: aload         5
     206: invokevirtual #34                 // Method org/apache/maven/model/Exclusion.getGroupId:()Ljava/lang/String;
     209: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     212: iadd
     213: istore_1
     214: iload_1
     215: bipush        31
     217: imul
     218: aload         5
     220: invokevirtual #35                 // Method org/apache/maven/model/Exclusion.getArtifactId:()Ljava/lang/String;
     223: invokestatic  #10                 // Method hash:(Ljava/lang/Object;)I
     226: iadd
     227: istore_1
     228: goto          178
     231: goto          70
     234: iload_1
     235: ireturn

  public static boolean pluginEquals(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method org/apache/maven/model/Plugin.getArtifactId:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #21                 // Method org/apache/maven/model/Plugin.getArtifactId:()Ljava/lang/String;
       8: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ifeq          71
      14: aload_0
      15: invokevirtual #20                 // Method org/apache/maven/model/Plugin.getGroupId:()Ljava/lang/String;
      18: aload_1
      19: invokevirtual #20                 // Method org/apache/maven/model/Plugin.getGroupId:()Ljava/lang/String;
      22: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          71
      28: aload_0
      29: invokevirtual #22                 // Method org/apache/maven/model/Plugin.getVersion:()Ljava/lang/String;
      32: aload_1
      33: invokevirtual #22                 // Method org/apache/maven/model/Plugin.getVersion:()Ljava/lang/String;
      36: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          71
      42: aload_0
      43: invokevirtual #23                 // Method org/apache/maven/model/Plugin.isExtensions:()Z
      46: aload_1
      47: invokevirtual #23                 // Method org/apache/maven/model/Plugin.isExtensions:()Z
      50: if_icmpne     71
      53: aload_0
      54: invokevirtual #24                 // Method org/apache/maven/model/Plugin.getDependencies:()Ljava/util/List;
      57: aload_1
      58: invokevirtual #24                 // Method org/apache/maven/model/Plugin.getDependencies:()Ljava/util/List;
      61: invokestatic  #36                 // Method dependenciesEquals:(Ljava/util/List;Ljava/util/List;)Z
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn

  private static boolean dependenciesEquals(java.util.List<org.apache.maven.model.Dependency>, java.util.List<org.apache.maven.model.Dependency>);
    Code:
       0: aload_0
       1: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
       6: aload_1
       7: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_1
      25: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore_3
      31: aload_2
      32: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          193
      40: aload_2
      41: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #25                 // class org/apache/maven/model/Dependency
      49: astore        4
      51: aload_3
      52: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #25                 // class org/apache/maven/model/Dependency
      60: astore        5
      62: aload         4
      64: invokevirtual #26                 // Method org/apache/maven/model/Dependency.getGroupId:()Ljava/lang/String;
      67: aload         5
      69: invokevirtual #26                 // Method org/apache/maven/model/Dependency.getGroupId:()Ljava/lang/String;
      72: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      75: ifeq          162
      78: aload         4
      80: invokevirtual #27                 // Method org/apache/maven/model/Dependency.getArtifactId:()Ljava/lang/String;
      83: aload         5
      85: invokevirtual #27                 // Method org/apache/maven/model/Dependency.getArtifactId:()Ljava/lang/String;
      88: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      91: ifeq          162
      94: aload         4
      96: invokevirtual #28                 // Method org/apache/maven/model/Dependency.getVersion:()Ljava/lang/String;
      99: aload         5
     101: invokevirtual #28                 // Method org/apache/maven/model/Dependency.getVersion:()Ljava/lang/String;
     104: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
     107: ifeq          162
     110: aload         4
     112: invokevirtual #29                 // Method org/apache/maven/model/Dependency.getType:()Ljava/lang/String;
     115: aload         5
     117: invokevirtual #29                 // Method org/apache/maven/model/Dependency.getType:()Ljava/lang/String;
     120: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
     123: ifeq          162
     126: aload         4
     128: invokevirtual #30                 // Method org/apache/maven/model/Dependency.getClassifier:()Ljava/lang/String;
     131: aload         5
     133: invokevirtual #30                 // Method org/apache/maven/model/Dependency.getClassifier:()Ljava/lang/String;
     136: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
     139: ifeq          162
     142: aload         4
     144: invokevirtual #31                 // Method org/apache/maven/model/Dependency.getScope:()Ljava/lang/String;
     147: aload         5
     149: invokevirtual #31                 // Method org/apache/maven/model/Dependency.getScope:()Ljava/lang/String;
     152: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
     155: ifeq          162
     158: iconst_1
     159: goto          163
     162: iconst_0
     163: istore        6
     165: iload         6
     167: aload         4
     169: invokevirtual #32                 // Method org/apache/maven/model/Dependency.getExclusions:()Ljava/util/List;
     172: aload         5
     174: invokevirtual #32                 // Method org/apache/maven/model/Dependency.getExclusions:()Ljava/util/List;
     177: invokestatic  #37                 // Method exclusionsEquals:(Ljava/util/List;Ljava/util/List;)Z
     180: iand
     181: istore        6
     183: iload         6
     185: ifne          190
     188: iconst_0
     189: ireturn
     190: goto          31
     193: iconst_1
     194: ireturn

  private static boolean exclusionsEquals(java.util.List<org.apache.maven.model.Exclusion>, java.util.List<org.apache.maven.model.Exclusion>);
    Code:
       0: aload_0
       1: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
       6: aload_1
       7: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_1
      25: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore_3
      31: aload_2
      32: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          111
      40: aload_2
      41: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #33                 // class org/apache/maven/model/Exclusion
      49: astore        4
      51: aload_3
      52: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #33                 // class org/apache/maven/model/Exclusion
      60: astore        5
      62: aload         4
      64: invokevirtual #34                 // Method org/apache/maven/model/Exclusion.getGroupId:()Ljava/lang/String;
      67: aload         5
      69: invokevirtual #34                 // Method org/apache/maven/model/Exclusion.getGroupId:()Ljava/lang/String;
      72: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      75: ifeq          98
      78: aload         4
      80: invokevirtual #35                 // Method org/apache/maven/model/Exclusion.getArtifactId:()Ljava/lang/String;
      83: aload         5
      85: invokevirtual #35                 // Method org/apache/maven/model/Exclusion.getArtifactId:()Ljava/lang/String;
      88: invokestatic  #12                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      91: ifeq          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: istore        6
     101: iload         6
     103: ifne          108
     106: iconst_0
     107: ireturn
     108: goto          31
     111: iconst_1
     112: ireturn

  public static org.sonatype.aether.repository.WorkspaceRepository getWorkspace(org.sonatype.aether.RepositorySystemSession);
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod org/sonatype/aether/RepositorySystemSession.getWorkspaceReader:()Lorg/sonatype/aether/repository/WorkspaceReader;
       6: astore_1
       7: aload_1
       8: ifnull        20
      11: aload_1
      12: invokeinterface #39,  1           // InterfaceMethod org/sonatype/aether/repository/WorkspaceReader.getRepository:()Lorg/sonatype/aether/repository/WorkspaceRepository;
      17: goto          21
      20: aconst_null
      21: areturn
}
