Compiled from "DirectoryWalker.java"
public class org.codehaus.plexus.util.DirectoryWalker {
  private java.io.File baseDir;

  private int baseDirOffset;

  private java.util.Stack dirStack;

  private java.util.List excludes;

  private java.util.List includes;

  private boolean isCaseSensitive;

  private java.util.List listeners;

  private boolean debugEnabled;

  public org.codehaus.plexus.util.DirectoryWalker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field isCaseSensitive:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field debugEnabled:Z
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field includes:Ljava/util/List;
      25: aload_0
      26: new           #4                  // class java/util/ArrayList
      29: dup
      30: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #7                  // Field excludes:Ljava/util/List;
      36: aload_0
      37: new           #4                  // class java/util/ArrayList
      40: dup
      41: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      44: putfield      #8                  // Field listeners:Ljava/util/List;
      47: return

  public void addDirectoryWalkListener(org.codehaus.plexus.util.DirectoryWalkListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addExclude(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field excludes:Ljava/util/List;
       4: aload_0
       5: aload_1
       6: invokespecial #10                 // Method fixPattern:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void addInclude(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field includes:Ljava/util/List;
       4: aload_0
       5: aload_1
       6: invokespecial #10                 // Method fixPattern:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void addSCMExcludes();
    Code:
       0: getstatic     #11                 // Field org/codehaus/plexus/util/DirectoryScanner.DEFAULTEXCLUDES:[Ljava/lang/String;
       3: astore_1
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_1
       8: arraylength
       9: if_icmpge     25
      12: aload_0
      13: aload_1
      14: iload_2
      15: aaload
      16: invokevirtual #12                 // Method addExclude:(Ljava/lang/String;)V
      19: iinc          2, 1
      22: goto          6
      25: return

  private void fireStep(java.io.File);
    Code:
       0: aload_0
       1: getfield      #13                 // Field dirStack:Ljava/util/Stack;
       4: invokevirtual #14                 // Method java/util/Stack.peek:()Ljava/lang/Object;
       7: checkcast     #15                 // class org/codehaus/plexus/util/DirectoryWalker$DirStackEntry
      10: astore_2
      11: aload_2
      12: invokevirtual #16                 // Method org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.getPercentage:()I
      15: istore_3
      16: aload_0
      17: getfield      #8                  // Field listeners:Ljava/util/List;
      20: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          61
      37: aload         4
      39: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #20                 // class org/codehaus/plexus/util/DirectoryWalkListener
      47: astore        5
      49: aload         5
      51: iload_3
      52: aload_1
      53: invokeinterface #21,  3           // InterfaceMethod org/codehaus/plexus/util/DirectoryWalkListener.directoryWalkStep:(ILjava/io/File;)V
      58: goto          27
      61: return

  private void fireWalkFinished();
    Code:
       0: aload_0
       1: getfield      #8                  // Field listeners:Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          38
      19: aload_1
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #20                 // class org/codehaus/plexus/util/DirectoryWalkListener
      28: astore_2
      29: aload_2
      30: invokeinterface #22,  1           // InterfaceMethod org/codehaus/plexus/util/DirectoryWalkListener.directoryWalkFinished:()V
      35: goto          10
      38: return

  private void fireWalkStarting();
    Code:
       0: aload_0
       1: getfield      #8                  // Field listeners:Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_1
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #20                 // class org/codehaus/plexus/util/DirectoryWalkListener
      28: astore_2
      29: aload_2
      30: aload_0
      31: getfield      #23                 // Field baseDir:Ljava/io/File;
      34: invokeinterface #24,  2           // InterfaceMethod org/codehaus/plexus/util/DirectoryWalkListener.directoryWalkStarting:(Ljava/io/File;)V
      39: goto          10
      42: return

  private void fireDebugMessage(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field listeners:Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #20                 // class org/codehaus/plexus/util/DirectoryWalkListener
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #25,  2           // InterfaceMethod org/codehaus/plexus/util/DirectoryWalkListener.debug:(Ljava/lang/String;)V
      36: goto          10
      39: return

  private java.lang.String fixPattern(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: getstatic     #26                 // Field java/io/File.separatorChar:C
       5: bipush        47
       7: if_icmpeq     20
      10: aload_2
      11: bipush        47
      13: getstatic     #26                 // Field java/io/File.separatorChar:C
      16: invokevirtual #27                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      19: astore_2
      20: getstatic     #26                 // Field java/io/File.separatorChar:C
      23: bipush        92
      25: if_icmpeq     38
      28: aload_2
      29: bipush        92
      31: getstatic     #26                 // Field java/io/File.separatorChar:C
      34: invokevirtual #27                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      37: astore_2
      38: aload_2
      39: areturn

  public void setDebugMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field debugEnabled:Z
       5: return

  public java.io.File getBaseDir();
    Code:
       0: aload_0
       1: getfield      #23                 // Field baseDir:Ljava/io/File;
       4: areturn

  public java.util.List getExcludes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field excludes:Ljava/util/List;
       4: areturn

  public java.util.List getIncludes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field includes:Ljava/util/List;
       4: areturn

  private boolean isExcluded(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field excludes:Ljava/util/List;
       5: aload_1
       6: invokespecial #28                 // Method isMatch:(Ljava/util/List;Ljava/lang/String;)Z
       9: ireturn

  private boolean isIncluded(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field includes:Ljava/util/List;
       5: aload_1
       6: invokespecial #28                 // Method isMatch:(Ljava/util/List;Ljava/lang/String;)Z
       9: ireturn

  private boolean isMatch(java.util.List, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          45
      16: aload_3
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #29                 // class java/lang/String
      25: astore        4
      27: aload         4
      29: aload_2
      30: aload_0
      31: getfield      #2                  // Field isCaseSensitive:Z
      34: invokestatic  #30                 // Method org/codehaus/plexus/util/SelectorUtils.matchPath:(Ljava/lang/String;Ljava/lang/String;Z)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: goto          7
      45: iconst_0
      46: ireturn

  private java.lang.String relativeToBaseDir(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       4: aload_0
       5: getfield      #32                 // Field baseDirOffset:I
       8: iconst_1
       9: iadd
      10: invokevirtual #33                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      13: areturn

  public void removeDirectoryWalkListener(org.codehaus.plexus.util.DirectoryWalkListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void scan();
    Code:
       0: aload_0
       1: getfield      #23                 // Field baseDir:Ljava/io/File;
       4: ifnonnull     17
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #36                 // String Scan Failure.  BaseDir not specified.
      13: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #23                 // Field baseDir:Ljava/io/File;
      21: invokevirtual #38                 // Method java/io/File.exists:()Z
      24: ifne          37
      27: new           #35                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #39                 // String Scan Failure.  BaseDir does not exist.
      33: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #23                 // Field baseDir:Ljava/io/File;
      41: invokevirtual #40                 // Method java/io/File.isDirectory:()Z
      44: ifne          57
      47: new           #35                 // class java/lang/IllegalStateException
      50: dup
      51: ldc           #41                 // String Scan Failure.  BaseDir is not a directory.
      53: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: getfield      #6                  // Field includes:Ljava/util/List;
      61: invokeinterface #42,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      66: ifeq          75
      69: aload_0
      70: ldc           #43                 // String **
      72: invokevirtual #44                 // Method addInclude:(Ljava/lang/String;)V
      75: aload_0
      76: getfield      #3                  // Field debugEnabled:Z
      79: ifeq          232
      82: new           #45                 // class java/lang/StringBuffer
      85: dup
      86: invokespecial #46                 // Method java/lang/StringBuffer."<init>":()V
      89: astore_2
      90: aload_2
      91: ldc           #47                 // String DirectoryWalker Scan
      93: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      96: pop
      97: aload_2
      98: ldc           #49                 // String \n  Base Dir:
     100: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     103: aload_0
     104: getfield      #23                 // Field baseDir:Ljava/io/File;
     107: invokevirtual #31                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     110: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     113: pop
     114: aload_2
     115: ldc           #50                 // String \n  Includes:
     117: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     120: pop
     121: aload_0
     122: getfield      #6                  // Field includes:Ljava/util/List;
     125: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     130: astore_1
     131: aload_1
     132: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     137: ifeq          169
     140: aload_1
     141: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     146: checkcast     #29                 // class java/lang/String
     149: astore_3
     150: aload_2
     151: ldc           #51                 // String \n    - \"
     153: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     156: aload_3
     157: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     160: ldc           #52                 // String \"
     162: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     165: pop
     166: goto          131
     169: aload_2
     170: ldc           #53                 // String \n  Excludes:
     172: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     175: pop
     176: aload_0
     177: getfield      #7                  // Field excludes:Ljava/util/List;
     180: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     185: astore_1
     186: aload_1
     187: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     192: ifeq          224
     195: aload_1
     196: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     201: checkcast     #29                 // class java/lang/String
     204: astore_3
     205: aload_2
     206: ldc           #51                 // String \n    - \"
     208: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     211: aload_3
     212: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     215: ldc           #52                 // String \"
     217: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     220: pop
     221: goto          186
     224: aload_0
     225: aload_2
     226: invokevirtual #54                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     229: invokespecial #55                 // Method fireDebugMessage:(Ljava/lang/String;)V
     232: aload_0
     233: invokespecial #56                 // Method fireWalkStarting:()V
     236: aload_0
     237: new           #57                 // class java/util/Stack
     240: dup
     241: invokespecial #58                 // Method java/util/Stack."<init>":()V
     244: putfield      #13                 // Field dirStack:Ljava/util/Stack;
     247: aload_0
     248: aload_0
     249: getfield      #23                 // Field baseDir:Ljava/io/File;
     252: invokespecial #59                 // Method scanDir:(Ljava/io/File;)V
     255: aload_0
     256: invokespecial #60                 // Method fireWalkFinished:()V
     259: return

  private void scanDir(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method java/io/File.listFiles:()[Ljava/io/File;
       4: astore_2
       5: aload_2
       6: ifnonnull     10
       9: return
      10: new           #15                 // class org/codehaus/plexus/util/DirectoryWalker$DirStackEntry
      13: dup
      14: aload_0
      15: aload_1
      16: aload_2
      17: arraylength
      18: invokespecial #62                 // Method org/codehaus/plexus/util/DirectoryWalker$DirStackEntry."<init>":(Lorg/codehaus/plexus/util/DirectoryWalker;Ljava/io/File;I)V
      21: astore_3
      22: aload_0
      23: getfield      #13                 // Field dirStack:Ljava/util/Stack;
      26: invokevirtual #63                 // Method java/util/Stack.isEmpty:()Z
      29: ifeq          47
      32: aload_3
      33: dconst_0
      34: putfield      #64                 // Field org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.percentageOffset:D
      37: aload_3
      38: ldc2_w        #65                 // double 100.0d
      41: putfield      #67                 // Field org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.percentageSize:D
      44: goto          77
      47: aload_0
      48: getfield      #13                 // Field dirStack:Ljava/util/Stack;
      51: invokevirtual #14                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      54: checkcast     #15                 // class org/codehaus/plexus/util/DirectoryWalker$DirStackEntry
      57: astore        4
      59: aload_3
      60: aload         4
      62: invokevirtual #68                 // Method org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.getNextPercentageOffset:()D
      65: putfield      #64                 // Field org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.percentageOffset:D
      68: aload_3
      69: aload         4
      71: invokevirtual #69                 // Method org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.getNextPercentageSize:()D
      74: putfield      #67                 // Field org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.percentageSize:D
      77: aload_0
      78: getfield      #13                 // Field dirStack:Ljava/util/Stack;
      81: aload_3
      82: invokevirtual #70                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: iconst_0
      87: istore        4
      89: iload         4
      91: aload_2
      92: arraylength
      93: if_icmpge     192
      96: aload_3
      97: iload         4
      99: putfield      #71                 // Field org/codehaus/plexus/util/DirectoryWalker$DirStackEntry.index:I
     102: aload_0
     103: aload_2
     104: iload         4
     106: aaload
     107: invokespecial #72                 // Method relativeToBaseDir:(Ljava/io/File;)Ljava/lang/String;
     110: astore        5
     112: aload_0
     113: aload         5
     115: invokespecial #73                 // Method isExcluded:(Ljava/lang/String;)Z
     118: ifeq          148
     121: aload_0
     122: new           #45                 // class java/lang/StringBuffer
     125: dup
     126: invokespecial #46                 // Method java/lang/StringBuffer."<init>":()V
     129: aload         5
     131: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     134: ldc           #74                 // String  is excluded.
     136: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     139: invokevirtual #54                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     142: invokespecial #55                 // Method fireDebugMessage:(Ljava/lang/String;)V
     145: goto          186
     148: aload_2
     149: iload         4
     151: aaload
     152: invokevirtual #40                 // Method java/io/File.isDirectory:()Z
     155: ifeq          169
     158: aload_0
     159: aload_2
     160: iload         4
     162: aaload
     163: invokespecial #59                 // Method scanDir:(Ljava/io/File;)V
     166: goto          186
     169: aload_0
     170: aload         5
     172: invokespecial #75                 // Method isIncluded:(Ljava/lang/String;)Z
     175: ifeq          186
     178: aload_0
     179: aload_2
     180: iload         4
     182: aaload
     183: invokespecial #76                 // Method fireStep:(Ljava/io/File;)V
     186: iinc          4, 1
     189: goto          89
     192: aload_0
     193: getfield      #13                 // Field dirStack:Ljava/util/Stack;
     196: invokevirtual #77                 // Method java/util/Stack.pop:()Ljava/lang/Object;
     199: pop
     200: return

  public void setBaseDir(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field baseDir:Ljava/io/File;
       5: aload_0
       6: aload_1
       7: invokevirtual #31                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      10: invokevirtual #78                 // Method java/lang/String.length:()I
      13: putfield      #32                 // Field baseDirOffset:I
      16: return

  public void setExcludes(java.util.List);
    Code:
       0: aload_0
       1: getfield      #7                  // Field excludes:Ljava/util/List;
       4: invokeinterface #79,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        57
      13: aload_1
      14: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          57
      29: aload_2
      30: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #29                 // class java/lang/String
      38: astore_3
      39: aload_0
      40: getfield      #7                  // Field excludes:Ljava/util/List;
      43: aload_0
      44: aload_3
      45: invokespecial #10                 // Method fixPattern:(Ljava/lang/String;)Ljava/lang/String;
      48: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          20
      57: return

  public void setIncludes(java.util.List);
    Code:
       0: aload_0
       1: getfield      #6                  // Field includes:Ljava/util/List;
       4: invokeinterface #79,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        57
      13: aload_1
      14: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          57
      29: aload_2
      30: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #29                 // class java/lang/String
      38: astore_3
      39: aload_0
      40: getfield      #6                  // Field includes:Ljava/util/List;
      43: aload_0
      44: aload_3
      45: invokespecial #10                 // Method fixPattern:(Ljava/lang/String;)Ljava/lang/String;
      48: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          20
      57: return
}
