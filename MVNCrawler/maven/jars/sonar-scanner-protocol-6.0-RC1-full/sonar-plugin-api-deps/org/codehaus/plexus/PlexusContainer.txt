Compiled from "PlexusContainer.java"
public interface org.codehaus.plexus.PlexusContainer {
  public abstract org.codehaus.plexus.context.Context getContext();

  public abstract java.lang.Object lookup(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract java.lang.Object lookup(java.lang.String, java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract <T> T lookup(java.lang.Class<T>) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract <T> T lookup(java.lang.Class<T>, java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract <T> T lookup(java.lang.Class<T>, java.lang.String, java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract java.util.List<java.lang.Object> lookupList(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract <T> java.util.List<T> lookupList(java.lang.Class<T>) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract java.util.Map<java.lang.String, java.lang.Object> lookupMap(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract <T> java.util.Map<java.lang.String, T> lookupMap(java.lang.Class<T>) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException;

  public abstract boolean hasComponent(java.lang.String);

  public abstract boolean hasComponent(java.lang.String, java.lang.String);

  public abstract boolean hasComponent(java.lang.Class<?>);

  public abstract boolean hasComponent(java.lang.Class<?>, java.lang.String);

  public abstract boolean hasComponent(java.lang.Class<?>, java.lang.String, java.lang.String);

  public abstract void addComponent(java.lang.Object, java.lang.String);

  public abstract <T> void addComponent(T, java.lang.Class<?>, java.lang.String);

  public abstract <T> void addComponentDescriptor(org.codehaus.plexus.component.repository.ComponentDescriptor<T>) throws org.codehaus.plexus.component.composition.CycleDetectedInComponentGraphException;

  public abstract org.codehaus.plexus.component.repository.ComponentDescriptor<?> getComponentDescriptor(java.lang.String, java.lang.String);

  public abstract <T> org.codehaus.plexus.component.repository.ComponentDescriptor<T> getComponentDescriptor(java.lang.Class<T>, java.lang.String, java.lang.String);

  public abstract java.util.List<org.codehaus.plexus.component.repository.ComponentDescriptor<?>> getComponentDescriptorList(java.lang.String);

  public abstract <T> java.util.List<org.codehaus.plexus.component.repository.ComponentDescriptor<T>> getComponentDescriptorList(java.lang.Class<T>, java.lang.String);

  public abstract java.util.Map<java.lang.String, org.codehaus.plexus.component.repository.ComponentDescriptor<?>> getComponentDescriptorMap(java.lang.String);

  public abstract <T> java.util.Map<java.lang.String, org.codehaus.plexus.component.repository.ComponentDescriptor<T>> getComponentDescriptorMap(java.lang.Class<T>, java.lang.String);

  public abstract java.util.List<org.codehaus.plexus.component.repository.ComponentDescriptor<?>> discoverComponents(org.codehaus.plexus.classworlds.realm.ClassRealm) throws org.codehaus.plexus.configuration.PlexusConfigurationException;

  public abstract org.codehaus.plexus.classworlds.realm.ClassRealm getContainerRealm();

  public abstract org.codehaus.plexus.classworlds.realm.ClassRealm setLookupRealm(org.codehaus.plexus.classworlds.realm.ClassRealm);

  public abstract org.codehaus.plexus.classworlds.realm.ClassRealm getLookupRealm();

  public abstract org.codehaus.plexus.classworlds.realm.ClassRealm createChildRealm(java.lang.String);

  public abstract void release(java.lang.Object) throws org.codehaus.plexus.component.repository.exception.ComponentLifecycleException;

  public abstract void releaseAll(java.util.Map<java.lang.String, ?>) throws org.codehaus.plexus.component.repository.exception.ComponentLifecycleException;

  public abstract void releaseAll(java.util.List<?>) throws org.codehaus.plexus.component.repository.exception.ComponentLifecycleException;

  public abstract void dispose();
}
