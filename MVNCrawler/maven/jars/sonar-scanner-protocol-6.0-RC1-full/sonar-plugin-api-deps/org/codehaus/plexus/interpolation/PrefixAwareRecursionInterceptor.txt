Compiled from "PrefixAwareRecursionInterceptor.java"
public class org.codehaus.plexus.interpolation.PrefixAwareRecursionInterceptor implements org.codehaus.plexus.interpolation.RecursionInterceptor {
  public static final java.lang.String DEFAULT_START_TOKEN;

  public static final java.lang.String DEFAULT_END_TOKEN;

  private java.util.Stack nakedExpressions;

  private final java.util.Collection possiblePrefixes;

  private boolean watchUnprefixedExpressions;

  public org.codehaus.plexus.interpolation.PrefixAwareRecursionInterceptor(java.util.Collection, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Stack
       8: dup
       9: invokespecial #3                  // Method java/util/Stack."<init>":()V
      12: putfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field watchUnprefixedExpressions:Z
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field possiblePrefixes:Ljava/util/Collection;
      25: aload_0
      26: iload_2
      27: putfield      #5                  // Field watchUnprefixedExpressions:Z
      30: return

  public org.codehaus.plexus.interpolation.PrefixAwareRecursionInterceptor(java.util.Collection);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Stack
       8: dup
       9: invokespecial #3                  // Method java/util/Stack."<init>":()V
      12: putfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field watchUnprefixedExpressions:Z
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field possiblePrefixes:Ljava/util/Collection;
      25: return

  public boolean hasRecursiveExpression(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field possiblePrefixes:Ljava/util/Collection;
       5: aload_0
       6: getfield      #5                  // Field watchUnprefixedExpressions:Z
       9: invokestatic  #7                  // Method org/codehaus/plexus/interpolation/util/ValueSourceUtils.trimPrefix:(Ljava/lang/String;Ljava/util/Collection;Z)Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnull        26
      17: aload_0
      18: getfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
      21: aload_2
      22: invokevirtual #8                  // Method java/util/Stack.contains:(Ljava/lang/Object;)Z
      25: ireturn
      26: iconst_0
      27: ireturn

  public void expressionResolutionFinished(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
       4: invokevirtual #9                  // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: pop
       8: return

  public void expressionResolutionStarted(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field possiblePrefixes:Ljava/util/Collection;
       5: aload_0
       6: getfield      #5                  // Field watchUnprefixedExpressions:Z
       9: invokestatic  #7                  // Method org/codehaus/plexus/interpolation/util/ValueSourceUtils.trimPrefix:(Ljava/lang/String;Ljava/util/Collection;Z)Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: getfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
      17: aload_2
      18: invokevirtual #10                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  public java.util.List getExpressionCycle(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field possiblePrefixes:Ljava/util/Collection;
       5: aload_0
       6: getfield      #5                  // Field watchUnprefixedExpressions:Z
       9: invokestatic  #7                  // Method org/codehaus/plexus/interpolation/util/ValueSourceUtils.trimPrefix:(Ljava/lang/String;Ljava/util/Collection;Z)Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnonnull     21
      17: getstatic     #11                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      20: areturn
      21: aload_0
      22: getfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
      25: aload_2
      26: invokevirtual #12                 // Method java/util/Stack.indexOf:(Ljava/lang/Object;)I
      29: istore_3
      30: iload_3
      31: ifge          38
      34: getstatic     #11                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      37: areturn
      38: aload_0
      39: getfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
      42: iload_3
      43: aload_0
      44: getfield      #4                  // Field nakedExpressions:Ljava/util/Stack;
      47: invokevirtual #13                 // Method java/util/Stack.size:()I
      50: invokevirtual #14                 // Method java/util/Stack.subList:(II)Ljava/util/List;
      53: areturn
}
