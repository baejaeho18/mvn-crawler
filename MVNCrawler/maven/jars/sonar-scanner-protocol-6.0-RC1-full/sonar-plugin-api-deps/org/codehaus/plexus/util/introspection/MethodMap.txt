Compiled from "MethodMap.java"
public class org.codehaus.plexus.util.introspection.MethodMap {
  private static final int MORE_SPECIFIC;

  private static final int LESS_SPECIFIC;

  private static final int INCOMPARABLE;

  java.util.Map methodByNameMap;

  static java.lang.Class class$java$lang$Boolean;

  static java.lang.Class class$java$lang$Character;

  static java.lang.Class class$java$lang$Byte;

  static java.lang.Class class$java$lang$Short;

  static java.lang.Class class$java$lang$Integer;

  static java.lang.Class class$java$lang$Long;

  static java.lang.Class class$java$lang$Float;

  static java.lang.Class class$java$lang$Double;

  public org.codehaus.plexus.util.introspection.MethodMap();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/Hashtable
       8: dup
       9: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      12: putfield      #9                  // Field methodByNameMap:Ljava/util/Map;
      15: return

  public void add(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #11                 // Method get:(Ljava/lang/String;)Ljava/util/List;
      10: astore_3
      11: aload_3
      12: ifnonnull     35
      15: new           #12                 // class java/util/ArrayList
      18: dup
      19: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      22: astore_3
      23: aload_0
      24: getfield      #9                  // Field methodByNameMap:Ljava/util/Map;
      27: aload_2
      28: aload_3
      29: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_3
      36: aload_1
      37: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: return

  public java.util.List get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field methodByNameMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class java/util/List
      13: areturn

  public java.lang.reflect.Method find(java.lang.String, java.lang.Object[]) throws org.codehaus.plexus.util.introspection.MethodMap$AmbiguousException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method get:(Ljava/lang/String;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: arraylength
      14: istore        4
      16: iload         4
      18: anewarray     #18                 // class java/lang/Class
      21: astore        5
      23: iconst_0
      24: istore        6
      26: iload         6
      28: iload         4
      30: if_icmpge     64
      33: aload_2
      34: iload         6
      36: aaload
      37: astore        7
      39: aload         5
      41: iload         6
      43: aload         7
      45: ifnonnull     52
      48: aconst_null
      49: goto          57
      52: aload         7
      54: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      57: aastore
      58: iinc          6, 1
      61: goto          26
      64: aload_3
      65: aload         5
      67: invokestatic  #20                 // Method getMostSpecific:(Ljava/util/List;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      70: areturn

  private static java.lang.reflect.Method getMostSpecific(java.util.List, java.lang.Class[]) throws org.codehaus.plexus.util.introspection.MethodMap$AmbiguousException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method getApplicables:(Ljava/util/List;[Ljava/lang/Class;)Ljava/util/LinkedList;
       5: astore_2
       6: aload_2
       7: invokevirtual #22                 // Method java/util/LinkedList.isEmpty:()Z
      10: ifeq          15
      13: aconst_null
      14: areturn
      15: aload_2
      16: invokevirtual #23                 // Method java/util/LinkedList.size:()I
      19: iconst_1
      20: if_icmpne     31
      23: aload_2
      24: invokevirtual #24                 // Method java/util/LinkedList.getFirst:()Ljava/lang/Object;
      27: checkcast     #25                 // class java/lang/reflect/Method
      30: areturn
      31: new           #26                 // class java/util/LinkedList
      34: dup
      35: invokespecial #27                 // Method java/util/LinkedList."<init>":()V
      38: astore_3
      39: aload_2
      40: invokevirtual #28                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      43: astore        4
      45: aload         4
      47: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          178
      55: aload         4
      57: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #25                 // class java/lang/reflect/Method
      65: astore        5
      67: aload         5
      69: invokevirtual #31                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      72: astore        6
      74: iconst_0
      75: istore        7
      77: aload_3
      78: invokevirtual #28                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      81: astore        8
      83: iload         7
      85: ifne          164
      88: aload         8
      90: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          164
      98: aload         8
     100: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #25                 // class java/lang/reflect/Method
     108: astore        9
     110: aload         6
     112: aload         9
     114: invokevirtual #31                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
     117: invokestatic  #32                 // Method moreSpecific:([Ljava/lang/Class;[Ljava/lang/Class;)I
     120: lookupswitch  { // 2
                     0: 148
                     1: 158
               default: 161
          }
     148: aload         8
     150: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.remove:()V
     155: goto          161
     158: iconst_1
     159: istore        7
     161: goto          83
     164: iload         7
     166: ifne          175
     169: aload_3
     170: aload         5
     172: invokevirtual #34                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
     175: goto          45
     178: aload_3
     179: invokevirtual #23                 // Method java/util/LinkedList.size:()I
     182: iconst_1
     183: if_icmple     194
     186: new           #35                 // class org/codehaus/plexus/util/introspection/MethodMap$AmbiguousException
     189: dup
     190: invokespecial #36                 // Method org/codehaus/plexus/util/introspection/MethodMap$AmbiguousException."<init>":()V
     193: athrow
     194: aload_3
     195: invokevirtual #24                 // Method java/util/LinkedList.getFirst:()Ljava/lang/Object;
     198: checkcast     #25                 // class java/lang/reflect/Method
     201: areturn

  private static int moreSpecific(java.lang.Class[], java.lang.Class[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: aload_0
      10: arraylength
      11: if_icmpge     79
      14: aload_0
      15: iload         4
      17: aaload
      18: aload_1
      19: iload         4
      21: aaload
      22: if_acmpeq     73
      25: iload_2
      26: ifne          43
      29: aload_1
      30: iload         4
      32: aaload
      33: aload_0
      34: iload         4
      36: aaload
      37: invokestatic  #37                 // Method isStrictMethodInvocationConvertible:(Ljava/lang/Class;Ljava/lang/Class;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: istore_2
      49: iload_3
      50: ifne          67
      53: aload_0
      54: iload         4
      56: aaload
      57: aload_1
      58: iload         4
      60: aaload
      61: invokestatic  #37                 // Method isStrictMethodInvocationConvertible:(Ljava/lang/Class;Ljava/lang/Class;)Z
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: istore_3
      73: iinc          4, 1
      76: goto          7
      79: iload_2
      80: ifeq          91
      83: iload_3
      84: ifeq          89
      87: iconst_2
      88: ireturn
      89: iconst_0
      90: ireturn
      91: iload_3
      92: ifeq          97
      95: iconst_1
      96: ireturn
      97: iconst_2
      98: ireturn

  private static java.util.LinkedList getApplicables(java.util.List, java.lang.Class[]);
    Code:
       0: new           #26                 // class java/util/LinkedList
       3: dup
       4: invokespecial #27                 // Method java/util/LinkedList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          54
      24: aload_3
      25: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #25                 // class java/lang/reflect/Method
      33: astore        4
      35: aload         4
      37: aload_1
      38: invokestatic  #39                 // Method isApplicable:(Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z
      41: ifeq          51
      44: aload_2
      45: aload         4
      47: invokevirtual #40                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          15
      54: aload_2
      55: areturn

  private static boolean isApplicable(java.lang.reflect.Method, java.lang.Class[]);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_1
       8: arraylength
       9: if_icmpeq     14
      12: iconst_0
      13: ireturn
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_1
      18: arraylength
      19: if_icmpge     42
      22: aload_2
      23: iload_3
      24: aaload
      25: aload_1
      26: iload_3
      27: aaload
      28: invokestatic  #41                 // Method isMethodInvocationConvertible:(Ljava/lang/Class;Ljava/lang/Class;)Z
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: iinc          3, 1
      39: goto          16
      42: iconst_1
      43: ireturn

  private static boolean isMethodInvocationConvertible(java.lang.Class, java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: invokevirtual #42                 // Method java/lang/Class.isPrimitive:()Z
       8: ifne          13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: ifnull        27
      17: aload_0
      18: aload_1
      19: invokevirtual #43                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: aload_0
      28: invokevirtual #42                 // Method java/lang/Class.isPrimitive:()Z
      31: ifeq          681
      34: aload_0
      35: getstatic     #44                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      38: if_acmpne     68
      41: aload_1
      42: getstatic     #45                 // Field class$java$lang$Boolean:Ljava/lang/Class;
      45: ifnonnull     60
      48: ldc           #46                 // String java.lang.Boolean
      50: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      53: dup
      54: putstatic     #45                 // Field class$java$lang$Boolean:Ljava/lang/Class;
      57: goto          63
      60: getstatic     #45                 // Field class$java$lang$Boolean:Ljava/lang/Class;
      63: if_acmpne     68
      66: iconst_1
      67: ireturn
      68: aload_0
      69: getstatic     #48                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      72: if_acmpne     102
      75: aload_1
      76: getstatic     #49                 // Field class$java$lang$Character:Ljava/lang/Class;
      79: ifnonnull     94
      82: ldc           #50                 // String java.lang.Character
      84: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      87: dup
      88: putstatic     #49                 // Field class$java$lang$Character:Ljava/lang/Class;
      91: goto          97
      94: getstatic     #49                 // Field class$java$lang$Character:Ljava/lang/Class;
      97: if_acmpne     102
     100: iconst_1
     101: ireturn
     102: aload_0
     103: getstatic     #51                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     106: if_acmpne     136
     109: aload_1
     110: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     113: ifnonnull     128
     116: ldc           #53                 // String java.lang.Byte
     118: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     121: dup
     122: putstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     125: goto          131
     128: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     131: if_acmpne     136
     134: iconst_1
     135: ireturn
     136: aload_0
     137: getstatic     #54                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
     140: if_acmpne     195
     143: aload_1
     144: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     147: ifnonnull     162
     150: ldc           #56                 // String java.lang.Short
     152: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     155: dup
     156: putstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     159: goto          165
     162: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     165: if_acmpeq     193
     168: aload_1
     169: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     172: ifnonnull     187
     175: ldc           #53                 // String java.lang.Byte
     177: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     180: dup
     181: putstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     184: goto          190
     187: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     190: if_acmpne     195
     193: iconst_1
     194: ireturn
     195: aload_0
     196: getstatic     #57                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     199: if_acmpne     279
     202: aload_1
     203: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     206: ifnonnull     221
     209: ldc           #59                 // String java.lang.Integer
     211: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     214: dup
     215: putstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     218: goto          224
     221: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     224: if_acmpeq     277
     227: aload_1
     228: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     231: ifnonnull     246
     234: ldc           #56                 // String java.lang.Short
     236: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     239: dup
     240: putstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     243: goto          249
     246: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     249: if_acmpeq     277
     252: aload_1
     253: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     256: ifnonnull     271
     259: ldc           #53                 // String java.lang.Byte
     261: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     264: dup
     265: putstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     268: goto          274
     271: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     274: if_acmpne     279
     277: iconst_1
     278: ireturn
     279: aload_0
     280: getstatic     #60                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     283: if_acmpne     388
     286: aload_1
     287: getstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     290: ifnonnull     305
     293: ldc           #62                 // String java.lang.Long
     295: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     298: dup
     299: putstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     302: goto          308
     305: getstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     308: if_acmpeq     386
     311: aload_1
     312: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     315: ifnonnull     330
     318: ldc           #59                 // String java.lang.Integer
     320: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     323: dup
     324: putstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     327: goto          333
     330: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     333: if_acmpeq     386
     336: aload_1
     337: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     340: ifnonnull     355
     343: ldc           #56                 // String java.lang.Short
     345: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     348: dup
     349: putstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     352: goto          358
     355: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     358: if_acmpeq     386
     361: aload_1
     362: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     365: ifnonnull     380
     368: ldc           #53                 // String java.lang.Byte
     370: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     373: dup
     374: putstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     377: goto          383
     380: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     383: if_acmpne     388
     386: iconst_1
     387: ireturn
     388: aload_0
     389: getstatic     #63                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     392: if_acmpne     522
     395: aload_1
     396: getstatic     #64                 // Field class$java$lang$Float:Ljava/lang/Class;
     399: ifnonnull     414
     402: ldc           #65                 // String java.lang.Float
     404: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     407: dup
     408: putstatic     #64                 // Field class$java$lang$Float:Ljava/lang/Class;
     411: goto          417
     414: getstatic     #64                 // Field class$java$lang$Float:Ljava/lang/Class;
     417: if_acmpeq     520
     420: aload_1
     421: getstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     424: ifnonnull     439
     427: ldc           #62                 // String java.lang.Long
     429: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     432: dup
     433: putstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     436: goto          442
     439: getstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     442: if_acmpeq     520
     445: aload_1
     446: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     449: ifnonnull     464
     452: ldc           #59                 // String java.lang.Integer
     454: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     457: dup
     458: putstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     461: goto          467
     464: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     467: if_acmpeq     520
     470: aload_1
     471: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     474: ifnonnull     489
     477: ldc           #56                 // String java.lang.Short
     479: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     482: dup
     483: putstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     486: goto          492
     489: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     492: if_acmpeq     520
     495: aload_1
     496: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     499: ifnonnull     514
     502: ldc           #53                 // String java.lang.Byte
     504: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     507: dup
     508: putstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     511: goto          517
     514: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     517: if_acmpne     522
     520: iconst_1
     521: ireturn
     522: aload_0
     523: getstatic     #66                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     526: if_acmpne     681
     529: aload_1
     530: getstatic     #67                 // Field class$java$lang$Double:Ljava/lang/Class;
     533: ifnonnull     548
     536: ldc           #68                 // String java.lang.Double
     538: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     541: dup
     542: putstatic     #67                 // Field class$java$lang$Double:Ljava/lang/Class;
     545: goto          551
     548: getstatic     #67                 // Field class$java$lang$Double:Ljava/lang/Class;
     551: if_acmpeq     679
     554: aload_1
     555: getstatic     #64                 // Field class$java$lang$Float:Ljava/lang/Class;
     558: ifnonnull     573
     561: ldc           #65                 // String java.lang.Float
     563: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     566: dup
     567: putstatic     #64                 // Field class$java$lang$Float:Ljava/lang/Class;
     570: goto          576
     573: getstatic     #64                 // Field class$java$lang$Float:Ljava/lang/Class;
     576: if_acmpeq     679
     579: aload_1
     580: getstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     583: ifnonnull     598
     586: ldc           #62                 // String java.lang.Long
     588: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     591: dup
     592: putstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     595: goto          601
     598: getstatic     #61                 // Field class$java$lang$Long:Ljava/lang/Class;
     601: if_acmpeq     679
     604: aload_1
     605: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     608: ifnonnull     623
     611: ldc           #59                 // String java.lang.Integer
     613: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     616: dup
     617: putstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     620: goto          626
     623: getstatic     #58                 // Field class$java$lang$Integer:Ljava/lang/Class;
     626: if_acmpeq     679
     629: aload_1
     630: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     633: ifnonnull     648
     636: ldc           #56                 // String java.lang.Short
     638: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     641: dup
     642: putstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     645: goto          651
     648: getstatic     #55                 // Field class$java$lang$Short:Ljava/lang/Class;
     651: if_acmpeq     679
     654: aload_1
     655: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     658: ifnonnull     673
     661: ldc           #53                 // String java.lang.Byte
     663: invokestatic  #47                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     666: dup
     667: putstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     670: goto          676
     673: getstatic     #52                 // Field class$java$lang$Byte:Ljava/lang/Class;
     676: if_acmpne     681
     679: iconst_1
     680: ireturn
     681: iconst_0
     682: ireturn

  private static boolean isStrictMethodInvocationConvertible(java.lang.Class, java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: invokevirtual #42                 // Method java/lang/Class.isPrimitive:()Z
       8: ifne          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: aload_1
      15: invokevirtual #43                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: aload_0
      24: invokevirtual #42                 // Method java/lang/Class.isPrimitive:()Z
      27: ifeq          180
      30: aload_0
      31: getstatic     #54                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      34: if_acmpne     46
      37: aload_1
      38: getstatic     #51                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      41: if_acmpne     46
      44: iconst_1
      45: ireturn
      46: aload_0
      47: getstatic     #57                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      50: if_acmpne     69
      53: aload_1
      54: getstatic     #54                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      57: if_acmpeq     67
      60: aload_1
      61: getstatic     #51                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      64: if_acmpne     69
      67: iconst_1
      68: ireturn
      69: aload_0
      70: getstatic     #60                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      73: if_acmpne     99
      76: aload_1
      77: getstatic     #57                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      80: if_acmpeq     97
      83: aload_1
      84: getstatic     #54                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      87: if_acmpeq     97
      90: aload_1
      91: getstatic     #51                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      94: if_acmpne     99
      97: iconst_1
      98: ireturn
      99: aload_0
     100: getstatic     #63                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     103: if_acmpne     136
     106: aload_1
     107: getstatic     #60                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     110: if_acmpeq     134
     113: aload_1
     114: getstatic     #57                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     117: if_acmpeq     134
     120: aload_1
     121: getstatic     #54                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
     124: if_acmpeq     134
     127: aload_1
     128: getstatic     #51                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     131: if_acmpne     136
     134: iconst_1
     135: ireturn
     136: aload_0
     137: getstatic     #66                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     140: if_acmpne     180
     143: aload_1
     144: getstatic     #63                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     147: if_acmpeq     178
     150: aload_1
     151: getstatic     #60                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     154: if_acmpeq     178
     157: aload_1
     158: getstatic     #57                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     161: if_acmpeq     178
     164: aload_1
     165: getstatic     #54                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
     168: if_acmpeq     178
     171: aload_1
     172: getstatic     #51                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     175: if_acmpne     180
     178: iconst_1
     179: ireturn
     180: iconst_0
     181: ireturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: invokespecial #4                  // Method java/lang/NoClassDefFoundError."<init>":()V
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/NoClassDefFoundError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException
}
