Compiled from "BaseLoggerManager.java"
public abstract class org.codehaus.plexus.logging.BaseLoggerManager extends org.codehaus.plexus.logging.AbstractLoggerManager implements org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable {
  private final java.util.Map<java.lang.String, org.codehaus.plexus.logging.Logger> activeLoggers;

  java.lang.String threshold;

  private int currentThreshold;

  public org.codehaus.plexus.logging.BaseLoggerManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/plexus/logging/AbstractLoggerManager."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/sonatype/guice/bean/reflect/Weak.values:()Ljava/util/Map;
       8: putfield      #3                  // Field activeLoggers:Ljava/util/Map;
      11: aload_0
      12: ldc           #4                  // String INFO
      14: putfield      #5                  // Field threshold:Ljava/lang/String;
      17: return

  public final void initialize();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field threshold:Ljava/lang/String;
       5: invokestatic  #6                  // Method parseThreshold:(Ljava/lang/String;)I
       8: putfield      #7                  // Field currentThreshold:I
      11: return

  public final synchronized org.codehaus.plexus.logging.Logger getLoggerForComponent(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #8                  // Method org/sonatype/guice/plexus/config/Roles.canonicalRoleHint:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_0
       7: getfield      #3                  // Field activeLoggers:Ljava/util/Map;
      10: aload_3
      11: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #10                 // class org/codehaus/plexus/logging/Logger
      19: astore        4
      21: aconst_null
      22: aload         4
      24: if_acmpne     58
      27: aload_0
      28: aload_3
      29: invokevirtual #11                 // Method createLogger:(Ljava/lang/String;)Lorg/codehaus/plexus/logging/Logger;
      32: astore        4
      34: aload         4
      36: aload_0
      37: getfield      #7                  // Field currentThreshold:I
      40: invokeinterface #12,  2           // InterfaceMethod org/codehaus/plexus/logging/Logger.setThreshold:(I)V
      45: aload_0
      46: getfield      #3                  // Field activeLoggers:Ljava/util/Map;
      49: aload_3
      50: aload         4
      52: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload         4
      60: areturn

  public final synchronized void returnComponentLogger(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLoggers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokestatic  #8                  // Method org/sonatype/guice/plexus/config/Roles.canonicalRoleHint:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public final int getThreshold();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentThreshold:I
       4: ireturn

  public final void setThreshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field currentThreshold:I
       5: return

  public final synchronized void setThresholds(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field currentThreshold:I
       5: aload_0
       6: getfield      #3                  // Field activeLoggers:Ljava/util/Map;
       9: invokeinterface #15,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      14: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          49
      29: aload_2
      30: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #10                 // class org/codehaus/plexus/logging/Logger
      38: astore_3
      39: aload_3
      40: iload_1
      41: invokeinterface #12,  2           // InterfaceMethod org/codehaus/plexus/logging/Logger.setThreshold:(I)V
      46: goto          20
      49: return

  public static final int parseThreshold(java.lang.String);
    Code:
       0: ldc           #19                 // String DEBUG
       2: aload_0
       3: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          11
       9: iconst_0
      10: ireturn
      11: ldc           #4                  // String INFO
      13: aload_0
      14: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: ldc           #21                 // String WARN
      24: aload_0
      25: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      28: ifeq          33
      31: iconst_2
      32: ireturn
      33: ldc           #22                 // String ERROR
      35: aload_0
      36: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifeq          44
      42: iconst_3
      43: ireturn
      44: ldc           #23                 // String FATAL
      46: aload_0
      47: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      50: ifeq          55
      53: iconst_4
      54: ireturn
      55: ldc           #24                 // String DISABLED
      57: aload_0
      58: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      61: ifeq          66
      64: iconst_5
      65: ireturn
      66: iconst_0
      67: ireturn

  public final synchronized int getActiveLoggerCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLoggers:Ljava/util/Map;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  protected abstract org.codehaus.plexus.logging.Logger createLogger(java.lang.String);
}
