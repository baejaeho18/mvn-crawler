Compiled from "PlexusTestCase.java"
public abstract class org.codehaus.plexus.PlexusTestCase extends junit.framework.TestCase {
  private org.codehaus.plexus.PlexusContainer container;

  private static java.lang.String basedir;

  public org.codehaus.plexus.PlexusTestCase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method junit/framework/TestCase."<init>":()V
       4: return

  protected void setUp() throws java.lang.Exception;
    Code:
       0: invokestatic  #2                  // Method getBasedir:()Ljava/lang/String;
       3: putstatic     #3                  // Field basedir:Ljava/lang/String;
       6: return

  protected void setupContainer();
    Code:
       0: new           #4                  // class org/codehaus/plexus/context/DefaultContext
       3: dup
       4: invokespecial #5                  // Method org/codehaus/plexus/context/DefaultContext."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #6                  // String basedir
      11: invokestatic  #2                  // Method getBasedir:()Ljava/lang/String;
      14: invokevirtual #7                  // Method org/codehaus/plexus/context/DefaultContext.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: invokevirtual #8                  // Method customizeContext:(Lorg/codehaus/plexus/context/Context;)V
      22: aload_1
      23: ldc           #9                  // String plexus.home
      25: invokevirtual #10                 // Method org/codehaus/plexus/context/DefaultContext.contains:(Ljava/lang/Object;)Z
      28: istore_2
      29: iload_2
      30: ifne          61
      33: ldc           #11                 // String target/plexus-home
      35: invokestatic  #12                 // Method getTestFile:(Ljava/lang/String;)Ljava/io/File;
      38: astore_3
      39: aload_3
      40: invokevirtual #13                 // Method java/io/File.isDirectory:()Z
      43: ifne          51
      46: aload_3
      47: invokevirtual #14                 // Method java/io/File.mkdir:()Z
      50: pop
      51: aload_1
      52: ldc           #9                  // String plexus.home
      54: aload_3
      55: invokevirtual #15                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      58: invokevirtual #7                  // Method org/codehaus/plexus/context/DefaultContext.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      61: aload_0
      62: invokevirtual #16                 // Method getCustomConfigurationName:()Ljava/lang/String;
      65: astore_3
      66: new           #17                 // class org/codehaus/plexus/DefaultContainerConfiguration
      69: dup
      70: invokespecial #18                 // Method org/codehaus/plexus/DefaultContainerConfiguration."<init>":()V
      73: ldc           #19                 // String test
      75: invokevirtual #20                 // Method org/codehaus/plexus/DefaultContainerConfiguration.setName:(Ljava/lang/String;)Lorg/codehaus/plexus/ContainerConfiguration;
      78: aload_1
      79: invokevirtual #21                 // Method org/codehaus/plexus/context/DefaultContext.getContextData:()Ljava/util/Map;
      82: invokeinterface #22,  2           // InterfaceMethod org/codehaus/plexus/ContainerConfiguration.setContext:(Ljava/util/Map;)Lorg/codehaus/plexus/ContainerConfiguration;
      87: astore        4
      89: aload_3
      90: ifnull        105
      93: aload         4
      95: aload_3
      96: invokeinterface #23,  2           // InterfaceMethod org/codehaus/plexus/ContainerConfiguration.setContainerConfiguration:(Ljava/lang/String;)Lorg/codehaus/plexus/ContainerConfiguration;
     101: pop
     102: goto          122
     105: aload_0
     106: aconst_null
     107: invokevirtual #24                 // Method getConfigurationName:(Ljava/lang/String;)Ljava/lang/String;
     110: astore        5
     112: aload         4
     114: aload         5
     116: invokeinterface #23,  2           // InterfaceMethod org/codehaus/plexus/ContainerConfiguration.setContainerConfiguration:(Ljava/lang/String;)Lorg/codehaus/plexus/ContainerConfiguration;
     121: pop
     122: aload_0
     123: aload         4
     125: invokevirtual #25                 // Method customizeContainerConfiguration:(Lorg/codehaus/plexus/ContainerConfiguration;)V
     128: aload_0
     129: new           #26                 // class org/codehaus/plexus/DefaultPlexusContainer
     132: dup
     133: aload         4
     135: invokespecial #27                 // Method org/codehaus/plexus/DefaultPlexusContainer."<init>":(Lorg/codehaus/plexus/ContainerConfiguration;)V
     138: putfield      #28                 // Field container:Lorg/codehaus/plexus/PlexusContainer;
     141: goto          156
     144: astore        5
     146: aload         5
     148: invokevirtual #30                 // Method org/codehaus/plexus/PlexusContainerException.printStackTrace:()V
     151: ldc           #31                 // String Failed to create plexus container.
     153: invokestatic  #32                 // Method fail:(Ljava/lang/String;)V
     156: return
    Exception table:
       from    to  target type
         128   141   144   Class org/codehaus/plexus/PlexusContainerException

  protected void customizeContainerConfiguration(org.codehaus.plexus.ContainerConfiguration);
    Code:
       0: return

  protected void customizeContext(org.codehaus.plexus.context.Context);
    Code:
       0: return

  protected org.codehaus.plexus.configuration.PlexusConfiguration customizeComponentConfiguration();
    Code:
       0: aconst_null
       1: areturn

  protected void tearDown() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #28                 // Field container:Lorg/codehaus/plexus/PlexusContainer;
       4: ifnull        21
       7: aload_0
       8: getfield      #28                 // Field container:Lorg/codehaus/plexus/PlexusContainer;
      11: invokeinterface #33,  1           // InterfaceMethod org/codehaus/plexus/PlexusContainer.dispose:()V
      16: aload_0
      17: aconst_null
      18: putfield      #28                 // Field container:Lorg/codehaus/plexus/PlexusContainer;
      21: return

  protected org.codehaus.plexus.PlexusContainer getContainer();
    Code:
       0: aload_0
       1: getfield      #28                 // Field container:Lorg/codehaus/plexus/PlexusContainer;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #34                 // Method setupContainer:()V
      11: aload_0
      12: getfield      #28                 // Field container:Lorg/codehaus/plexus/PlexusContainer;
      15: areturn

  protected java.io.InputStream getConfiguration() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #35                 // Method getConfiguration:(Ljava/lang/String;)Ljava/io/InputStream;
       5: areturn

  protected java.io.InputStream getConfiguration(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #24                 // Method getConfigurationName:(Ljava/lang/String;)Ljava/lang/String;
       6: invokevirtual #36                 // Method getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       9: areturn

  protected java.lang.String getCustomConfigurationName();
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.String getConfigurationName(java.lang.String);
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: bipush        46
      16: bipush        47
      18: invokevirtual #41                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      21: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #43                 // String .xml
      26: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  protected java.io.InputStream getResourceAsStream(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #45                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       8: areturn

  protected java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #46                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: areturn

  protected java.lang.Object lookup(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getContainer:()Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      10: areturn

  protected java.lang.Object lookup(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getContainer:()Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: aload_2
       6: invokeinterface #49,  3           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookup:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      11: areturn

  protected <T> T lookup(java.lang.Class<T>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getContainer:()Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: invokeinterface #50,  2           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookup:(Ljava/lang/Class;)Ljava/lang/Object;
      10: areturn

  protected <T> T lookup(java.lang.Class<T>, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getContainer:()Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: aload_2
       6: invokeinterface #51,  3           // InterfaceMethod org/codehaus/plexus/PlexusContainer.lookup:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      11: areturn

  protected void release(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getContainer:()Lorg/codehaus/plexus/PlexusContainer;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod org/codehaus/plexus/PlexusContainer.release:(Ljava/lang/Object;)V
      10: return

  public static java.io.File getTestFile(java.lang.String);
    Code:
       0: new           #53                 // class java/io/File
       3: dup
       4: invokestatic  #2                  // Method getBasedir:()Ljava/lang/String;
       7: aload_0
       8: invokespecial #54                 // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      11: areturn

  public static java.io.File getTestFile(java.lang.String, java.lang.String);
    Code:
       0: new           #53                 // class java/io/File
       3: dup
       4: aload_0
       5: invokespecial #55                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aload_2
      10: invokevirtual #56                 // Method java/io/File.isAbsolute:()Z
      13: ifne          21
      16: aload_0
      17: invokestatic  #12                 // Method getTestFile:(Ljava/lang/String;)Ljava/io/File;
      20: astore_2
      21: new           #53                 // class java/io/File
      24: dup
      25: aload_2
      26: aload_1
      27: invokespecial #57                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      30: areturn

  public static java.lang.String getTestPath(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method getTestFile:(Ljava/lang/String;)Ljava/io/File;
       4: invokevirtual #15                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       7: areturn

  public static java.lang.String getTestPath(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method getTestFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
       5: invokevirtual #15                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       8: areturn

  public static java.lang.String getBasedir();
    Code:
       0: getstatic     #3                  // Field basedir:Ljava/lang/String;
       3: ifnull        10
       6: getstatic     #3                  // Field basedir:Ljava/lang/String;
       9: areturn
      10: ldc           #6                  // String basedir
      12: invokestatic  #59                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      15: putstatic     #3                  // Field basedir:Ljava/lang/String;
      18: getstatic     #3                  // Field basedir:Ljava/lang/String;
      21: ifnonnull     39
      24: new           #53                 // class java/io/File
      27: dup
      28: ldc           #60                 // String
      30: invokespecial #55                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      33: invokevirtual #15                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      36: putstatic     #3                  // Field basedir:Ljava/lang/String;
      39: getstatic     #3                  // Field basedir:Ljava/lang/String;
      42: areturn

  public java.lang.String getTestConfiguration();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #61                 // Method getTestConfiguration:(Ljava/lang/Class;)Ljava/lang/String;
       7: areturn

  public static java.lang.String getTestConfiguration(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: bipush        46
       6: bipush        47
       8: invokevirtual #41                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      11: astore_1
      12: new           #37                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_1
      20: iconst_0
      21: aload_1
      22: ldc           #62                 // String $
      24: invokevirtual #63                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      27: invokevirtual #64                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      30: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #43                 // String .xml
      35: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn
}
