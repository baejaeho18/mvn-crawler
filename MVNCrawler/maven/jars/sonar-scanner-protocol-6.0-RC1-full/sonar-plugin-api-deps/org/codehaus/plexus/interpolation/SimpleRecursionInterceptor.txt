Compiled from "SimpleRecursionInterceptor.java"
public class org.codehaus.plexus.interpolation.SimpleRecursionInterceptor implements org.codehaus.plexus.interpolation.RecursionInterceptor {
  private java.util.Stack expressions;

  public org.codehaus.plexus.interpolation.SimpleRecursionInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Stack
       8: dup
       9: invokespecial #3                  // Method java/util/Stack."<init>":()V
      12: putfield      #4                  // Field expressions:Ljava/util/Stack;
      15: return

  public void expressionResolutionFinished(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expressions:Ljava/util/Stack;
       4: invokevirtual #5                  // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: pop
       8: return

  public void expressionResolutionStarted(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expressions:Ljava/util/Stack;
       4: aload_1
       5: invokevirtual #6                  // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public boolean hasRecursiveExpression(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expressions:Ljava/util/Stack;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Stack.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public java.util.List getExpressionCycle(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expressions:Ljava/util/Stack;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/Stack.indexOf:(Ljava/lang/Object;)I
       8: istore_2
       9: iload_2
      10: ifge          17
      13: getstatic     #9                  // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      16: areturn
      17: aload_0
      18: getfield      #4                  // Field expressions:Ljava/util/Stack;
      21: iload_2
      22: aload_0
      23: getfield      #4                  // Field expressions:Ljava/util/Stack;
      26: invokevirtual #10                 // Method java/util/Stack.size:()I
      29: invokevirtual #11                 // Method java/util/Stack.subList:(II)Ljava/util/List;
      32: areturn
}
