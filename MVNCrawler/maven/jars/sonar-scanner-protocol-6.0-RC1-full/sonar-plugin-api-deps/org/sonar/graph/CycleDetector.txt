Compiled from "CycleDetector.java"
public class org.sonar.graph.CycleDetector<V> {
  private java.util.Set<V> vertices;

  private org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge> graph;

  private java.util.Set<V> analyzedVertices;

  private java.util.Set<org.sonar.graph.Cycle> cycles;

  private java.util.Set<org.sonar.graph.Edge> edgesToExclude;

  private long searchCyclesCalls;

  private int maxSearchDepth;

  private boolean maxSearchDepthActivated;

  private int maxCyclesToFound;

  public org.sonar.graph.CycleDetector(org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge>, java.util.Collection<V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #4                  // Field cycles:Ljava/util/Set;
      15: aload_0
      16: lconst_0
      17: putfield      #5                  // Field searchCyclesCalls:J
      20: aload_0
      21: iconst_m1
      22: putfield      #6                  // Field maxSearchDepth:I
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field maxSearchDepthActivated:Z
      30: aload_0
      31: ldc           #8                  // int 2147483647
      33: putfield      #9                  // Field maxCyclesToFound:I
      36: aload_0
      37: aload_1
      38: aload_2
      39: new           #2                  // class java/util/LinkedHashSet
      42: dup
      43: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      46: invokespecial #10                 // Method init:(Lorg/sonar/graph/DirectedGraphAccessor;Ljava/util/Collection;Ljava/util/Set;)V
      49: return

  public org.sonar.graph.CycleDetector(org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge>, java.util.Collection<V>, java.util.Set<org.sonar.graph.Edge>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #4                  // Field cycles:Ljava/util/Set;
      15: aload_0
      16: lconst_0
      17: putfield      #5                  // Field searchCyclesCalls:J
      20: aload_0
      21: iconst_m1
      22: putfield      #6                  // Field maxSearchDepth:I
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field maxSearchDepthActivated:Z
      30: aload_0
      31: ldc           #8                  // int 2147483647
      33: putfield      #9                  // Field maxCyclesToFound:I
      36: aload_0
      37: aload_1
      38: aload_2
      39: aload_3
      40: invokespecial #10                 // Method init:(Lorg/sonar/graph/DirectedGraphAccessor;Ljava/util/Collection;Ljava/util/Set;)V
      43: return

  public org.sonar.graph.CycleDetector(org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #4                  // Field cycles:Ljava/util/Set;
      15: aload_0
      16: lconst_0
      17: putfield      #5                  // Field searchCyclesCalls:J
      20: aload_0
      21: iconst_m1
      22: putfield      #6                  // Field maxSearchDepth:I
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field maxSearchDepthActivated:Z
      30: aload_0
      31: ldc           #8                  // int 2147483647
      33: putfield      #9                  // Field maxCyclesToFound:I
      36: aload_0
      37: aload_1
      38: aload_1
      39: invokeinterface #11,  1           // InterfaceMethod org/sonar/graph/DirectedGraphAccessor.getVertices:()Ljava/util/Set;
      44: new           #2                  // class java/util/LinkedHashSet
      47: dup
      48: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      51: invokespecial #10                 // Method init:(Lorg/sonar/graph/DirectedGraphAccessor;Ljava/util/Collection;Ljava/util/Set;)V
      54: return

  public org.sonar.graph.CycleDetector(org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge>, java.util.Set<org.sonar.graph.Edge>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #4                  // Field cycles:Ljava/util/Set;
      15: aload_0
      16: lconst_0
      17: putfield      #5                  // Field searchCyclesCalls:J
      20: aload_0
      21: iconst_m1
      22: putfield      #6                  // Field maxSearchDepth:I
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field maxSearchDepthActivated:Z
      30: aload_0
      31: ldc           #8                  // int 2147483647
      33: putfield      #9                  // Field maxCyclesToFound:I
      36: aload_0
      37: aload_1
      38: aload_1
      39: invokeinterface #11,  1           // InterfaceMethod org/sonar/graph/DirectedGraphAccessor.getVertices:()Ljava/util/Set;
      44: aload_2
      45: invokespecial #10                 // Method init:(Lorg/sonar/graph/DirectedGraphAccessor;Ljava/util/Collection;Ljava/util/Set;)V
      48: return

  private void init(org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge>, java.util.Collection<V>, java.util.Set<org.sonar.graph.Edge>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field graph:Lorg/sonar/graph/DirectedGraphAccessor;
       5: aload_0
       6: new           #2                  // class java/util/LinkedHashSet
       9: dup
      10: aload_2
      11: invokespecial #13                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      14: putfield      #14                 // Field vertices:Ljava/util/Set;
      17: aload_0
      18: new           #2                  // class java/util/LinkedHashSet
      21: dup
      22: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      25: putfield      #15                 // Field analyzedVertices:Ljava/util/Set;
      28: aload_0
      29: aload_3
      30: putfield      #16                 // Field edgesToExclude:Ljava/util/Set;
      33: return

  public java.util.Set<org.sonar.graph.Cycle> detectCycles();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method run:()V
       4: aload_0
       5: invokevirtual #18                 // Method getCycles:()Ljava/util/Set;
       8: areturn

  public java.util.Set<org.sonar.graph.Cycle> detectCyclesWithUpperLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field maxCyclesToFound:I
       5: aload_0
       6: invokespecial #17                 // Method run:()V
       9: aload_0
      10: invokevirtual #18                 // Method getCycles:()Ljava/util/Set;
      13: areturn

  public java.util.Set<org.sonar.graph.Cycle> detectCyclesWithMaxSearchDepth(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmple     15
       5: aload_0
       6: iconst_1
       7: putfield      #7                  // Field maxSearchDepthActivated:Z
      10: aload_0
      11: iload_1
      12: putfield      #6                  // Field maxSearchDepth:I
      15: aload_0
      16: invokespecial #17                 // Method run:()V
      19: aload_0
      20: invokevirtual #18                 // Method getCycles:()Ljava/util/Set;
      23: areturn

  private void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cycles:Ljava/util/Set;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
       9: ifne          22
      12: new           #20                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #21                 // String Cycle detection can\'t be executed twice on the same CycleDetector object.
      18: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #14                 // Field vertices:Ljava/util/Set;
      26: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_1
      32: aload_1
      33: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          103
      41: aload_1
      42: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: astore_2
      48: aload_0
      49: getfield      #7                  // Field maxSearchDepthActivated:Z
      52: ifne          68
      55: aload_0
      56: getfield      #15                 // Field analyzedVertices:Ljava/util/Set;
      59: aload_2
      60: invokeinterface #26,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      65: ifne          100
      68: new           #2                  // class java/util/LinkedHashSet
      71: dup
      72: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      75: astore_3
      76: aload_0
      77: aload_2
      78: new           #27                 // class java/util/ArrayList
      81: dup
      82: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      85: aload_3
      86: invokespecial #29                 // Method searchCycles:(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)V
      89: aload_0
      90: getfield      #15                 // Field analyzedVertices:Ljava/util/Set;
      93: aload_3
      94: invokeinterface #30,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      99: pop
     100: goto          32
     103: goto          107
     106: astore_1
     107: return
    Exception table:
       from    to  target type
          22   103   106   Class org/sonar/graph/MaximumCyclesToFoundException

  private void searchCycles(V, java.util.List<V>, java.util.Set<V>);
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field searchCyclesCalls:J
       5: lconst_1
       6: ladd
       7: putfield      #5                  // Field searchCyclesCalls:J
      10: aload_2
      11: aload_1
      12: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_3
      19: aload_1
      20: invokeinterface #33,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: getfield      #12                 // Field graph:Lorg/sonar/graph/DirectedGraphAccessor;
      30: aload_1
      31: invokeinterface #34,  2           // InterfaceMethod org/sonar/graph/DirectedGraphAccessor.getOutgoingEdges:(Ljava/lang/Object;)Ljava/util/Collection;
      36: invokeinterface #35,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      41: astore        4
      43: aload         4
      45: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          265
      53: aload         4
      55: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #36                 // class org/sonar/graph/Edge
      63: astore        5
      65: aload         5
      67: invokeinterface #37,  1           // InterfaceMethod org/sonar/graph/Edge.getTo:()Ljava/lang/Object;
      72: astore        6
      74: aload_0
      75: getfield      #16                 // Field edgesToExclude:Ljava/util/Set;
      78: aload         5
      80: invokeinterface #26,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      85: ifne          262
      88: aload_0
      89: getfield      #14                 // Field vertices:Ljava/util/Set;
      92: aload         6
      94: invokeinterface #26,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      99: ifeq          262
     102: aload_0
     103: getfield      #7                  // Field maxSearchDepthActivated:Z
     106: ifne          123
     109: aload_0
     110: getfield      #15                 // Field analyzedVertices:Ljava/util/Set;
     113: aload         6
     115: invokeinterface #26,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     120: ifne          262
     123: aload_2
     124: aload         6
     126: invokeinterface #38,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     131: ifeq          227
     134: aload_2
     135: aload         6
     137: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     142: pop
     143: aload_2
     144: aload_2
     145: aload         6
     147: invokeinterface #39,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
     152: aload_2
     153: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I
     158: invokeinterface #41,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
     163: astore        7
     165: aload_0
     166: aload         7
     168: invokespecial #42                 // Method convertListOfVerticesToCycle:(Ljava/util/List;)Lorg/sonar/graph/Cycle;
     171: astore        8
     173: aload_0
     174: getfield      #4                  // Field cycles:Ljava/util/Set;
     177: aload         8
     179: invokeinterface #33,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     184: pop
     185: aload_0
     186: getfield      #4                  // Field cycles:Ljava/util/Set;
     189: invokeinterface #43,  1           // InterfaceMethod java/util/Set.size:()I
     194: aload_0
     195: getfield      #9                  // Field maxCyclesToFound:I
     198: if_icmplt     209
     201: new           #31                 // class org/sonar/graph/MaximumCyclesToFoundException
     204: dup
     205: invokespecial #44                 // Method org/sonar/graph/MaximumCyclesToFoundException."<init>":()V
     208: athrow
     209: aload_2
     210: aload_2
     211: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I
     216: iconst_1
     217: isub
     218: invokeinterface #45,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     223: pop
     224: goto          262
     227: aload_0
     228: getfield      #7                  // Field maxSearchDepthActivated:Z
     231: ifeq          254
     234: aload_0
     235: getfield      #7                  // Field maxSearchDepthActivated:Z
     238: ifeq          262
     241: aload_2
     242: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I
     247: aload_0
     248: getfield      #6                  // Field maxSearchDepth:I
     251: if_icmpge     262
     254: aload_0
     255: aload         6
     257: aload_2
     258: aload_3
     259: invokespecial #29                 // Method searchCycles:(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)V
     262: goto          43
     265: aload_2
     266: aload_2
     267: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I
     272: iconst_1
     273: isub
     274: invokeinterface #45,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     279: pop
     280: return

  private org.sonar.graph.Cycle convertListOfVerticesToCycle(java.util.List<V>);
    Code:
       0: new           #27                 // class java/util/ArrayList
       3: dup
       4: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: iconst_0
      10: invokeinterface #46,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      15: astore_3
      16: aload_3
      17: astore        4
      19: iconst_1
      20: istore        5
      22: iload         5
      24: aload_1
      25: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I
      30: if_icmpge     73
      33: aload_1
      34: iload         5
      36: invokeinterface #46,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      41: astore        6
      43: aload_2
      44: aload_0
      45: getfield      #12                 // Field graph:Lorg/sonar/graph/DirectedGraphAccessor;
      48: aload         4
      50: aload         6
      52: invokeinterface #47,  3           // InterfaceMethod org/sonar/graph/DirectedGraphAccessor.getEdge:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/sonar/graph/Edge;
      57: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: aload         6
      65: astore        4
      67: iinc          5, 1
      70: goto          22
      73: new           #48                 // class org/sonar/graph/Cycle
      76: dup
      77: aload_2
      78: invokespecial #49                 // Method org/sonar/graph/Cycle."<init>":(Ljava/util/List;)V
      81: areturn

  public java.util.Set<org.sonar.graph.Cycle> getCycles();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cycles:Ljava/util/Set;
       4: areturn

  public boolean isAcyclicGraph();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cycles:Ljava/util/Set;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
       9: ireturn

  public long getSearchCyclesCalls();
    Code:
       0: aload_0
       1: getfield      #5                  // Field searchCyclesCalls:J
       4: lreturn
}
