Compiled from "IncrementalCyclesAndFESSolver.java"
public class org.sonar.graph.IncrementalCyclesAndFESSolver<V> {
  private java.util.Set<org.sonar.graph.Cycle> cycles;

  private long searchCyclesCalls;

  private static final int DEFAULT_MAX_SEARCH_DEPTH_AT_FIRST;

  private static final int DEFAULT_MAX_CYCLES_TO_FOUND_BY_ITERATION;

  private org.sonar.graph.MinimumFeedbackEdgeSetSolver solver;

  private int iterations;

  public org.sonar.graph.IncrementalCyclesAndFESSolver(org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge>, java.util.Collection<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_3
       4: bipush        100
       6: invokespecial #1                  // Method "<init>":(Lorg/sonar/graph/DirectedGraphAccessor;Ljava/util/Collection;II)V
       9: return

  public org.sonar.graph.IncrementalCyclesAndFESSolver(org.sonar.graph.DirectedGraphAccessor<V, ? extends org.sonar.graph.Edge>, java.util.Collection<V>, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #5                  // Field cycles:Ljava/util/Set;
      15: aload_0
      16: lconst_0
      17: putfield      #6                  // Field searchCyclesCalls:J
      20: aload_0
      21: iconst_0
      22: putfield      #7                  // Field iterations:I
      25: aload_0
      26: dup
      27: getfield      #7                  // Field iterations:I
      30: iconst_1
      31: iadd
      32: putfield      #7                  // Field iterations:I
      35: new           #8                  // class org/sonar/graph/CycleDetector
      38: dup
      39: aload_1
      40: aload_2
      41: invokespecial #9                  // Method org/sonar/graph/CycleDetector."<init>":(Lorg/sonar/graph/DirectedGraphAccessor;Ljava/util/Collection;)V
      44: astore        5
      46: aload         5
      48: iload_3
      49: invokevirtual #10                 // Method org/sonar/graph/CycleDetector.detectCyclesWithMaxSearchDepth:(I)Ljava/util/Set;
      52: pop
      53: aload_0
      54: dup
      55: getfield      #6                  // Field searchCyclesCalls:J
      58: aload         5
      60: invokevirtual #11                 // Method org/sonar/graph/CycleDetector.getSearchCyclesCalls:()J
      63: ladd
      64: putfield      #6                  // Field searchCyclesCalls:J
      67: aload_0
      68: getfield      #5                  // Field cycles:Ljava/util/Set;
      71: aload         5
      73: invokevirtual #12                 // Method org/sonar/graph/CycleDetector.getCycles:()Ljava/util/Set;
      76: invokeinterface #13,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      81: pop
      82: aload_0
      83: new           #14                 // class org/sonar/graph/MinimumFeedbackEdgeSetSolver
      86: dup
      87: aload_0
      88: getfield      #5                  // Field cycles:Ljava/util/Set;
      91: invokespecial #15                 // Method org/sonar/graph/MinimumFeedbackEdgeSetSolver."<init>":(Ljava/util/Set;)V
      94: putfield      #16                 // Field solver:Lorg/sonar/graph/MinimumFeedbackEdgeSetSolver;
      97: aload_0
      98: getfield      #16                 // Field solver:Lorg/sonar/graph/MinimumFeedbackEdgeSetSolver;
     101: invokevirtual #17                 // Method org/sonar/graph/MinimumFeedbackEdgeSetSolver.getEdges:()Ljava/util/Set;
     104: astore        6
     106: aload_0
     107: dup
     108: getfield      #7                  // Field iterations:I
     111: iconst_1
     112: iadd
     113: putfield      #7                  // Field iterations:I
     116: new           #8                  // class org/sonar/graph/CycleDetector
     119: dup
     120: aload_1
     121: aload_2
     122: aload         6
     124: invokespecial #18                 // Method org/sonar/graph/CycleDetector."<init>":(Lorg/sonar/graph/DirectedGraphAccessor;Ljava/util/Collection;Ljava/util/Set;)V
     127: astore        5
     129: aload         5
     131: iload         4
     133: invokevirtual #19                 // Method org/sonar/graph/CycleDetector.detectCyclesWithUpperLimit:(I)Ljava/util/Set;
     136: pop
     137: aload_0
     138: dup
     139: getfield      #6                  // Field searchCyclesCalls:J
     142: aload         5
     144: invokevirtual #11                 // Method org/sonar/graph/CycleDetector.getSearchCyclesCalls:()J
     147: ladd
     148: putfield      #6                  // Field searchCyclesCalls:J
     151: aload_0
     152: getfield      #5                  // Field cycles:Ljava/util/Set;
     155: aload         5
     157: invokevirtual #12                 // Method org/sonar/graph/CycleDetector.getCycles:()Ljava/util/Set;
     160: invokeinterface #13,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     165: pop
     166: aload_0
     167: new           #14                 // class org/sonar/graph/MinimumFeedbackEdgeSetSolver
     170: dup
     171: aload_0
     172: getfield      #5                  // Field cycles:Ljava/util/Set;
     175: invokespecial #15                 // Method org/sonar/graph/MinimumFeedbackEdgeSetSolver."<init>":(Ljava/util/Set;)V
     178: putfield      #16                 // Field solver:Lorg/sonar/graph/MinimumFeedbackEdgeSetSolver;
     181: aload_0
     182: getfield      #16                 // Field solver:Lorg/sonar/graph/MinimumFeedbackEdgeSetSolver;
     185: invokevirtual #17                 // Method org/sonar/graph/MinimumFeedbackEdgeSetSolver.getEdges:()Ljava/util/Set;
     188: astore        6
     190: aload         5
     192: invokevirtual #12                 // Method org/sonar/graph/CycleDetector.getCycles:()Ljava/util/Set;
     195: invokeinterface #20,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     200: ifeq          106
     203: return

  public int getWeightOfFeedbackEdgeSet();
    Code:
       0: aload_0
       1: getfield      #16                 // Field solver:Lorg/sonar/graph/MinimumFeedbackEdgeSetSolver;
       4: invokevirtual #21                 // Method org/sonar/graph/MinimumFeedbackEdgeSetSolver.getWeightOfFeedbackEdgeSet:()I
       7: ireturn

  public int getNumberOfLoops();
    Code:
       0: aload_0
       1: getfield      #16                 // Field solver:Lorg/sonar/graph/MinimumFeedbackEdgeSetSolver;
       4: invokevirtual #22                 // Method org/sonar/graph/MinimumFeedbackEdgeSetSolver.getNumberOfLoops:()I
       7: ireturn

  public java.util.Set<org.sonar.graph.Edge> getFeedbackEdgeSet();
    Code:
       0: aload_0
       1: getfield      #16                 // Field solver:Lorg/sonar/graph/MinimumFeedbackEdgeSetSolver;
       4: invokevirtual #17                 // Method org/sonar/graph/MinimumFeedbackEdgeSetSolver.getEdges:()Ljava/util/Set;
       7: areturn

  public java.util.Set<org.sonar.graph.Cycle> getCycles();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cycles:Ljava/util/Set;
       4: areturn

  public boolean isAcyclicGraph();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cycles:Ljava/util/Set;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
       9: ireturn

  public long getSearchCyclesCalls();
    Code:
       0: aload_0
       1: getfield      #6                  // Field searchCyclesCalls:J
       4: lreturn

  public int getIterations();
    Code:
       0: aload_0
       1: getfield      #7                  // Field iterations:I
       4: ireturn
}
