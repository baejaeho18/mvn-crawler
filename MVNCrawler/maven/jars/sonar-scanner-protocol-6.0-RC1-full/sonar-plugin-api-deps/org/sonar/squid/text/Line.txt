Compiled from "Line.java"
class org.sonar.squid.text.Line implements org.sonar.squid.measures.Measurable<org.sonar.squid.measures.Metric> {
  private static final java.lang.String NOSONAR_TAG;

  private final int lineIndex;

  private int blankLine;

  private int line;

  private int lineOfCode;

  private int commentLine;

  private int headerCommentLine;

  private int commentBlankLine;

  private int commentedOutCodeLine;

  private java.lang.String comment;

  private java.lang.StringBuilder stringLine;

  private boolean isBlank;

  private boolean isThereJavadoc;

  private boolean isThereLicenseHeaderComment;

  org.sonar.squid.text.Line();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field blankLine:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field line:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field lineOfCode:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field commentLine:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field headerCommentLine:I
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field commentBlankLine:I
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field commentedOutCodeLine:I
      39: aload_0
      40: aconst_null
      41: putfield      #9                  // Field comment:Ljava/lang/String;
      44: aload_0
      45: iconst_0
      46: putfield      #10                 // Field lineIndex:I
      49: return

  org.sonar.squid.text.Line(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method "<init>":()V
       4: aload_0
       5: new           #12                 // class java/lang/StringBuilder
       8: dup
       9: aload_1
      10: invokespecial #13                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      13: invokevirtual #14                 // Method setString:(Ljava/lang/StringBuilder;)V
      16: return

  org.sonar.squid.text.Line(int, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method "<init>":(I)V
       5: aload_0
       6: aload_2
       7: invokevirtual #14                 // Method setString:(Ljava/lang/StringBuilder;)V
      10: return

  org.sonar.squid.text.Line(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field blankLine:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field line:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field lineOfCode:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field commentLine:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field headerCommentLine:I
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field commentBlankLine:I
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field commentedOutCodeLine:I
      39: aload_0
      40: aconst_null
      41: putfield      #9                  // Field comment:Ljava/lang/String;
      44: aload_0
      45: iload_1
      46: putfield      #10                 // Field lineIndex:I
      49: return

  final void setString(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
       5: aload_0
       6: aload_0
       7: invokespecial #17                 // Method isBlankLine:()Z
      10: putfield      #18                 // Field isBlank:Z
      13: return

  private boolean isBlankLine();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
       7: invokevirtual #19                 // Method java/lang/StringBuilder.length:()I
      10: if_icmpge     35
      13: aload_0
      14: getfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
      17: iload_1
      18: invokevirtual #20                 // Method java/lang/StringBuilder.charAt:(I)C
      21: invokestatic  #21                 // Method java/lang/Character.isWhitespace:(C)Z
      24: ifne          29
      27: iconst_0
      28: ireturn
      29: iinc          1, 1
      32: goto          2
      35: iconst_1
      36: ireturn

  public double getDouble(org.sonar.squid.measures.Metric);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method getInt:(Lorg/sonar/squid/measures/Metric;)I
       5: i2d
       6: dreturn

  public int getInt(org.sonar.squid.measures.Metric);
    Code:
       0: getstatic     #23                 // Field org/sonar/squid/text/Line$1.$SwitchMap$org$sonar$squid$measures$Metric:[I
       3: aload_1
       4: invokevirtual #24                 // Method org/sonar/squid/measures/Metric.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 7
                     1: 52
                     2: 57
                     3: 62
                     4: 67
                     5: 72
                     6: 77
                     7: 82
               default: 87
          }
      52: aload_0
      53: getfield      #2                  // Field blankLine:I
      56: ireturn
      57: aload_0
      58: getfield      #3                  // Field line:I
      61: ireturn
      62: aload_0
      63: getfield      #4                  // Field lineOfCode:I
      66: ireturn
      67: aload_0
      68: getfield      #5                  // Field commentLine:I
      71: ireturn
      72: aload_0
      73: getfield      #8                  // Field commentedOutCodeLine:I
      76: ireturn
      77: aload_0
      78: getfield      #7                  // Field commentBlankLine:I
      81: ireturn
      82: aload_0
      83: getfield      #6                  // Field headerCommentLine:I
      86: ireturn
      87: new           #25                 // class java/lang/IllegalStateException
      90: dup
      91: new           #12                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #27                 // String Metric
     100: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_1
     104: invokevirtual #29                 // Method org/sonar/squid/measures/Metric.name:()Ljava/lang/String;
     107: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc           #30                 // String  is not available on Line object.
     112: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     121: athrow

  public void setMeasure(org.sonar.squid.measures.Metric, double);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: d2i
       4: invokevirtual #33                 // Method setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
       7: return

  public void setMeasure(org.sonar.squid.measures.Metric, int);
    Code:
       0: getstatic     #23                 // Field org/sonar/squid/text/Line$1.$SwitchMap$org$sonar$squid$measures$Metric:[I
       3: aload_1
       4: invokevirtual #24                 // Method org/sonar/squid/measures/Metric.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 7
                     1: 52
                     2: 100
                     3: 60
                     4: 68
                     5: 76
                     6: 84
                     7: 92
               default: 110
          }
      52: aload_0
      53: iload_2
      54: putfield      #2                  // Field blankLine:I
      57: goto          145
      60: aload_0
      61: iload_2
      62: putfield      #4                  // Field lineOfCode:I
      65: goto          145
      68: aload_0
      69: iload_2
      70: putfield      #5                  // Field commentLine:I
      73: goto          145
      76: aload_0
      77: iload_2
      78: putfield      #8                  // Field commentedOutCodeLine:I
      81: goto          145
      84: aload_0
      85: iload_2
      86: putfield      #7                  // Field commentBlankLine:I
      89: goto          145
      92: aload_0
      93: iload_2
      94: putfield      #6                  // Field headerCommentLine:I
      97: goto          145
     100: new           #25                 // class java/lang/IllegalStateException
     103: dup
     104: ldc           #34                 // String Metric LINES always equals 1 on a Line and you are not permitted to change this value.
     106: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: new           #25                 // class java/lang/IllegalStateException
     113: dup
     114: new           #12                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #27                 // String Metric
     123: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_1
     127: invokevirtual #29                 // Method org/sonar/squid/measures/Metric.name:()Ljava/lang/String;
     130: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #35                 // String  is not suitable for Line object.
     135: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: return

  void setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field comment:Ljava/lang/String;
       5: return

  void setComment(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setComment:(Ljava/lang/String;)V
       5: aload_0
       6: iload_2
       7: putfield      #37                 // Field isThereJavadoc:Z
      10: return

  void setComment(java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #38                 // Method setComment:(Ljava/lang/String;Z)V
       6: aload_0
       7: iload_3
       8: putfield      #39                 // Field isThereLicenseHeaderComment:Z
      11: return

  java.lang.String getString();
    Code:
       0: aload_0
       1: getfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
       4: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       7: areturn

  boolean isBlank();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isThereComment:()Z
       4: ifne          18
       7: aload_0
       8: getfield      #18                 // Field isBlank:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  boolean isThereCode();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method isBlank:()Z
       4: ifne          16
       7: aload_0
       8: invokevirtual #40                 // Method isThereComment:()Z
      11: ifne          16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: invokevirtual #40                 // Method isThereComment:()Z
      20: ifeq          32
      23: aload_0
      24: invokespecial #42                 // Method isThereCodeBeforeOrAfterComment:()Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: iconst_0
      33: ireturn

  private boolean isThereCodeBeforeOrAfterComment();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isThereComment:()Z
       4: ifne          17
       7: new           #25                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #43                 // String You can\'t call this method when there isn\'t any comment
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_0
      18: istore_1
      19: iconst_0
      20: istore_2
      21: aload_0
      22: getfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #9                  // Field comment:Ljava/lang/String;
      29: invokevirtual #44                 // Method java/lang/StringBuilder.indexOf:(Ljava/lang/String;)I
      32: istore_3
      33: iload_3
      34: aload_0
      35: getfield      #9                  // Field comment:Ljava/lang/String;
      38: invokevirtual #45                 // Method java/lang/String.length:()I
      41: iadd
      42: iconst_1
      43: isub
      44: istore        4
      46: iload_3
      47: ifle          73
      50: aload_0
      51: getfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
      54: iconst_0
      55: iload_3
      56: iconst_1
      57: isub
      58: invokevirtual #46                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
      61: invokestatic  #47                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      64: ifne          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: istore_1
      73: iload         4
      75: ifle          115
      78: iload         4
      80: aload_0
      81: getfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
      84: invokevirtual #19                 // Method java/lang/StringBuilder.length:()I
      87: iconst_1
      88: isub
      89: if_icmpeq     115
      92: aload_0
      93: getfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
      96: iload         4
      98: iconst_1
      99: iadd
     100: invokevirtual #48                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
     103: invokestatic  #47                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
     106: ifne          113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: istore_2
     115: iload_1
     116: ifne          123
     119: iload_2
     120: ifeq          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: ireturn

  boolean isThereComment();
    Code:
       0: aload_0
       1: getfield      #9                  // Field comment:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  java.lang.String getComment();
    Code:
       0: aload_0
       1: getfield      #9                  // Field comment:Ljava/lang/String;
       4: areturn

  boolean isThereBlankComment();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isThereComment:()Z
       4: ifeq          58
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #9                  // Field comment:Ljava/lang/String;
      14: invokevirtual #45                 // Method java/lang/String.length:()I
      17: if_icmpge     56
      20: aload_0
      21: getfield      #9                  // Field comment:Ljava/lang/String;
      24: iload_1
      25: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      28: istore_2
      29: iload_2
      30: invokestatic  #21                 // Method java/lang/Character.isWhitespace:(C)Z
      33: ifne          50
      36: iload_2
      37: bipush        42
      39: if_icmpeq     50
      42: iload_2
      43: bipush        47
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: iinc          1, 1
      53: goto          9
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  boolean isThereJavadoc();
    Code:
       0: aload_0
       1: getfield      #37                 // Field isThereJavadoc:Z
       4: ireturn

  boolean isThereLicenseHeaderComment();
    Code:
       0: aload_0
       1: getfield      #39                 // Field isThereLicenseHeaderComment:Z
       4: ireturn

  boolean isThereNoSonarTag();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isThereComment:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #9                  // Field comment:Ljava/lang/String;
      11: ldc           #50                 // String NOSONAR
      13: invokevirtual #51                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  int getLineIndex();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lineIndex:I
       4: ireturn

  void deleteLineContent();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #9                  // Field comment:Ljava/lang/String;
       5: aload_0
       6: aconst_null
       7: putfield      #16                 // Field stringLine:Ljava/lang/StringBuilder;
      10: return

  public void setMeasure(org.sonar.squid.measures.MetricDef, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #52                 // class org/sonar/squid/measures/Metric
       5: iload_2
       6: invokevirtual #33                 // Method setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
       9: return

  public void setMeasure(org.sonar.squid.measures.MetricDef, double);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #52                 // class org/sonar/squid/measures/Metric
       5: dload_2
       6: invokevirtual #53                 // Method setMeasure:(Lorg/sonar/squid/measures/Metric;D)V
       9: return

  public int getInt(org.sonar.squid.measures.MetricDef);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #52                 // class org/sonar/squid/measures/Metric
       5: invokevirtual #22                 // Method getInt:(Lorg/sonar/squid/measures/Metric;)I
       8: ireturn

  public double getDouble(org.sonar.squid.measures.MetricDef);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #52                 // class org/sonar/squid/measures/Metric
       5: invokevirtual #54                 // Method getDouble:(Lorg/sonar/squid/measures/Metric;)D
       8: dreturn
}
