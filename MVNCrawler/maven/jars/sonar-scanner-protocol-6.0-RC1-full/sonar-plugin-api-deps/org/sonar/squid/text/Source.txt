Compiled from "Source.java"
public class org.sonar.squid.text.Source {
  private java.util.List<org.sonar.squid.text.Line> lines;

  private org.sonar.squid.recognizer.CodeRecognizer codeRecognizer;

  private java.util.Set<java.lang.Integer> noSonarTagLines;

  public org.sonar.squid.text.Source(java.io.Reader, org.sonar.squid.recognizer.CodeRecognizer, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field lines:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: putfield      #7                  // Field noSonarTagLines:Ljava/util/Set;
      26: aload_0
      27: aload_2
      28: putfield      #8                  // Field codeRecognizer:Lorg/sonar/squid/recognizer/CodeRecognizer;
      31: new           #9                  // class org/sonar/squid/text/LinesFactory
      34: dup
      35: aload_1
      36: aload_3
      37: invokespecial #10                 // Method org/sonar/squid/text/LinesFactory."<init>":(Ljava/io/Reader;[Ljava/lang/String;)V
      40: astore        4
      42: aload_0
      43: aload         4
      45: invokevirtual #11                 // Method org/sonar/squid/text/LinesFactory.getLines:()Ljava/util/List;
      48: putfield      #4                  // Field lines:Ljava/util/List;
      51: aload_0
      52: invokespecial #12                 // Method processLines:()V
      55: return

  public org.sonar.squid.text.Source(java.lang.String[], org.sonar.squid.recognizer.CodeRecognizer);
    Code:
       0: aload_0
       1: new           #13                 // class org/sonar/squid/text/StringArrayReader
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method org/sonar/squid/text/StringArrayReader."<init>":([Ljava/lang/String;)V
       9: aload_2
      10: iconst_0
      11: anewarray     #15                 // class java/lang/String
      14: invokespecial #16                 // Method "<init>":(Ljava/io/Reader;Lorg/sonar/squid/recognizer/CodeRecognizer;[Ljava/lang/String;)V
      17: return

  private void processLines();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          66
      19: aload_1
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #20                 // class org/sonar/squid/text/Line
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokespecial #21                 // Method computeBlankLine:(Lorg/sonar/squid/text/Line;)V
      34: aload_0
      35: aload_2
      36: invokespecial #22                 // Method computeHeaderCommentLine:(Lorg/sonar/squid/text/Line;)V
      39: aload_0
      40: aload_2
      41: invokespecial #23                 // Method computeCommentLine:(Lorg/sonar/squid/text/Line;)V
      44: aload_0
      45: aload_2
      46: invokespecial #24                 // Method computeCommentBlankLine:(Lorg/sonar/squid/text/Line;)V
      49: aload_0
      50: aload_2
      51: invokespecial #25                 // Method computeLineOfCode:(Lorg/sonar/squid/text/Line;)V
      54: aload_0
      55: aload_2
      56: invokespecial #26                 // Method computeNoSonarTag:(Lorg/sonar/squid/text/Line;)V
      59: aload_2
      60: invokevirtual #27                 // Method org/sonar/squid/text/Line.deleteLineContent:()V
      63: goto          10
      66: return

  private void computeNoSonarTag(org.sonar.squid.text.Line);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/sonar/squid/text/Line.isThereNoSonarTag:()Z
       4: ifeq          24
       7: aload_0
       8: getfield      #7                  // Field noSonarTagLines:Ljava/util/Set;
      11: aload_1
      12: invokevirtual #29                 // Method org/sonar/squid/text/Line.getLineIndex:()I
      15: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokeinterface #31,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  private void computeLineOfCode(org.sonar.squid.text.Line);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method org/sonar/squid/text/Line.isThereCode:()Z
       4: ifeq          15
       7: aload_1
       8: getstatic     #33                 // Field org/sonar/squid/measures/Metric.LINES_OF_CODE:Lorg/sonar/squid/measures/Metric;
      11: iconst_1
      12: invokevirtual #34                 // Method org/sonar/squid/text/Line.setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
      15: return

  private void computeHeaderCommentLine(org.sonar.squid.text.Line);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/sonar/squid/text/Line.isThereComment:()Z
       4: ifeq          29
       7: aload_1
       8: invokevirtual #36                 // Method org/sonar/squid/text/Line.isThereBlankComment:()Z
      11: ifne          29
      14: aload_1
      15: invokevirtual #37                 // Method org/sonar/squid/text/Line.isThereLicenseHeaderComment:()Z
      18: ifeq          29
      21: aload_1
      22: getstatic     #38                 // Field org/sonar/squid/measures/Metric.HEADER_COMMENT_LINES:Lorg/sonar/squid/measures/Metric;
      25: iconst_1
      26: invokevirtual #34                 // Method org/sonar/squid/text/Line.setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
      29: return

  private void computeCommentLine(org.sonar.squid.text.Line);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/sonar/squid/text/Line.isThereComment:()Z
       4: ifeq          72
       7: aload_1
       8: invokevirtual #36                 // Method org/sonar/squid/text/Line.isThereBlankComment:()Z
      11: ifne          72
      14: aload_1
      15: invokevirtual #39                 // Method org/sonar/squid/text/Line.isThereJavadoc:()Z
      18: ifne          28
      21: aload_1
      22: invokevirtual #37                 // Method org/sonar/squid/text/Line.isThereLicenseHeaderComment:()Z
      25: ifeq          37
      28: aload_1
      29: getstatic     #40                 // Field org/sonar/squid/measures/Metric.COMMENT_LINES:Lorg/sonar/squid/measures/Metric;
      32: iconst_1
      33: invokevirtual #34                 // Method org/sonar/squid/text/Line.setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
      36: return
      37: aload_0
      38: getfield      #8                  // Field codeRecognizer:Lorg/sonar/squid/recognizer/CodeRecognizer;
      41: aload_1
      42: invokevirtual #41                 // Method org/sonar/squid/text/Line.getComment:()Ljava/lang/String;
      45: invokevirtual #42                 // Method org/sonar/squid/recognizer/CodeRecognizer.isLineOfCode:(Ljava/lang/String;)Z
      48: istore_2
      49: iload_2
      50: ifne          64
      53: aload_1
      54: getstatic     #40                 // Field org/sonar/squid/measures/Metric.COMMENT_LINES:Lorg/sonar/squid/measures/Metric;
      57: iconst_1
      58: invokevirtual #34                 // Method org/sonar/squid/text/Line.setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
      61: goto          72
      64: aload_1
      65: getstatic     #43                 // Field org/sonar/squid/measures/Metric.COMMENTED_OUT_CODE_LINES:Lorg/sonar/squid/measures/Metric;
      68: iconst_1
      69: invokevirtual #34                 // Method org/sonar/squid/text/Line.setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
      72: return

  private void computeBlankLine(org.sonar.squid.text.Line);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method org/sonar/squid/text/Line.isBlank:()Z
       4: ifeq          15
       7: aload_1
       8: getstatic     #45                 // Field org/sonar/squid/measures/Metric.BLANK_LINES:Lorg/sonar/squid/measures/Metric;
      11: iconst_1
      12: invokevirtual #34                 // Method org/sonar/squid/text/Line.setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
      15: return

  private void computeCommentBlankLine(org.sonar.squid.text.Line);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/sonar/squid/text/Line.isThereBlankComment:()Z
       4: ifeq          15
       7: aload_1
       8: getstatic     #46                 // Field org/sonar/squid/measures/Metric.COMMENT_BLANK_LINES:Lorg/sonar/squid/measures/Metric;
      11: iconst_1
      12: invokevirtual #34                 // Method org/sonar/squid/text/Line.setMeasure:(Lorg/sonar/squid/measures/Metric;I)V
      15: return

  public int getMeasure(org.sonar.squid.measures.Metric);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_0
       4: getfield      #4                  // Field lines:Ljava/util/List;
       7: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      12: invokevirtual #48                 // Method getMeasure:(Lorg/sonar/squid/measures/Metric;II)I
      15: ireturn

  public int getMeasure(org.sonar.squid.measures.Metric, int, int);
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #4                  // Field lines:Ljava/util/List;
       5: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      10: if_icmple     57
      13: new           #49                 // class java/lang/IllegalStateException
      16: dup
      17: new           #50                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #52                 // String There are only
      26: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #4                  // Field lines:Ljava/util/List;
      33: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      38: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #55                 // String  lines in the file and you\'re trying to reach line
      43: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_3
      47: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iload_2
      58: iconst_1
      59: if_icmpge     89
      62: new           #49                 // class java/lang/IllegalStateException
      65: dup
      66: new           #50                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #58                 // String Line index starts from 1 and not from
      75: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: iload_2
      79: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: iconst_0
      90: istore        4
      92: iload_2
      93: istore        5
      95: iload         5
      97: iload_3
      98: iconst_1
      99: iadd
     100: if_icmpge     134
     103: iload         4
     105: aload_0
     106: getfield      #4                  // Field lines:Ljava/util/List;
     109: iload         5
     111: iconst_1
     112: isub
     113: invokeinterface #59,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     118: checkcast     #20                 // class org/sonar/squid/text/Line
     121: aload_1
     122: invokevirtual #60                 // Method org/sonar/squid/text/Line.getInt:(Lorg/sonar/squid/measures/Metric;)I
     125: iadd
     126: istore        4
     128: iinc          5, 1
     131: goto          95
     134: iload         4
     136: ireturn

  public java.util.Set<java.lang.Integer> getNoSonarTagLines();
    Code:
       0: aload_0
       1: getfield      #7                  // Field noSonarTagLines:Ljava/util/Set;
       4: areturn

  public int getNumberOfLines();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lines:Ljava/util/List;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn
}
