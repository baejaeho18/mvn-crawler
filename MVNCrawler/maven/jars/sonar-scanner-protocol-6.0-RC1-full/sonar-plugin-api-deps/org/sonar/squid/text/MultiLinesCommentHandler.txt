Compiled from "MultiLinesCommentHandler.java"
public class org.sonar.squid.text.MultiLinesCommentHandler extends org.sonar.squid.text.LineContextHandler {
  private java.lang.StringBuilder currentLineComment;

  private boolean isFirstLineOfComment;

  private boolean isJavadoc;

  private boolean isLicenseHeader;

  private boolean commentStarted;

  private static final java.lang.String START_COMMENT_TAG;

  private static final java.lang.String START_JAVADOC_TAG;

  private static final java.lang.String START_GWT_NATIVE_CODE_TAG;

  private static final java.lang.String END_COMMENT_TAG;

  public org.sonar.squid.text.MultiLinesCommentHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/sonar/squid/text/LineContextHandler."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isFirstLineOfComment:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isJavadoc:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field isLicenseHeader:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field commentStarted:Z
      24: return

  boolean matchToEnd(org.sonar.squid.text.Line, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field commentStarted:Z
       4: ifne          39
       7: new           #6                  // class java/lang/IllegalStateException
      10: dup
      11: new           #7                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #9                  // String Method doContextBegin(StringBuilder pendingLine) has not been called first (line = \'
      20: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #12                 // String \').
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      43: aload_2
      44: invokestatic  #16                 // Method getLastCharacter:(Ljava/lang/StringBuilder;)C
      47: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      50: pop
      51: aload_0
      52: invokespecial #18                 // Method isJavaDoc:()Z
      55: ifeq          63
      58: aload_0
      59: iconst_1
      60: putfield      #3                  // Field isJavadoc:Z
      63: aload_0
      64: invokespecial #19                 // Method isGwtNativeCode:()Z
      67: ifeq          76
      70: aload_0
      71: invokespecial #20                 // Method initProperties:()V
      74: iconst_1
      75: ireturn
      76: aload_2
      77: ldc           #21                 // String */
      79: invokestatic  #22                 // Method matchEndOfString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Z
      82: istore_3
      83: iload_3
      84: ifeq          122
      87: aload_0
      88: getfield      #2                  // Field isFirstLineOfComment:Z
      91: ifeq          111
      94: aload_2
      95: ldc           #23                 // String /*
      97: invokevirtual #24                 // Method java/lang/StringBuilder.indexOf:(Ljava/lang/String;)I
     100: iconst_1
     101: iadd
     102: aload_2
     103: ldc           #21                 // String */
     105: invokevirtual #24                 // Method java/lang/StringBuilder.indexOf:(Ljava/lang/String;)I
     108: if_icmpeq     122
     111: aload_0
     112: aload_1
     113: invokespecial #25                 // Method endOfCommentLine:(Lorg/sonar/squid/text/Line;)V
     116: aload_0
     117: invokespecial #20                 // Method initProperties:()V
     120: iconst_1
     121: ireturn
     122: iconst_0
     123: ireturn

  private boolean isGwtNativeCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isFirstLineOfComment:Z
       4: ifeq          41
       7: aload_0
       8: getfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      11: invokevirtual #26                 // Method java/lang/StringBuilder.length:()I
      14: ldc           #27                 // String /*-{
      16: invokevirtual #28                 // Method java/lang/String.length:()I
      19: if_icmpne     41
      22: aload_0
      23: getfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: ldc           #27                 // String /*-{
      31: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean isJavaDoc();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isFirstLineOfComment:Z
       4: ifeq          41
       7: aload_0
       8: getfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      11: invokevirtual #26                 // Method java/lang/StringBuilder.length:()I
      14: ldc           #30                 // String /**
      16: invokevirtual #28                 // Method java/lang/String.length:()I
      19: if_icmpne     41
      22: aload_0
      23: getfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: ldc           #30                 // String /**
      31: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  boolean matchToBegin(org.sonar.squid.text.Line, java.lang.StringBuilder);
    Code:
       0: aload_2
       1: ldc           #23                 // String /*
       3: invokestatic  #22                 // Method matchEndOfString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Z
       6: istore_3
       7: iload_3
       8: ifeq          51
      11: aload_0
      12: iconst_1
      13: putfield      #2                  // Field isFirstLineOfComment:Z
      16: aload_0
      17: iconst_1
      18: putfield      #5                  // Field commentStarted:Z
      21: aload_0
      22: new           #7                  // class java/lang/StringBuilder
      25: dup
      26: ldc           #23                 // String /*
      28: invokespecial #31                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      31: putfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      34: aload_0
      35: aload_1
      36: invokevirtual #32                 // Method org/sonar/squid/text/Line.getLineIndex:()I
      39: iconst_1
      40: if_icmpne     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: putfield      #4                  // Field isLicenseHeader:Z
      51: iload_3
      52: ireturn

  boolean matchWithEndOfLine(org.sonar.squid.text.Line, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method endOfCommentLine:(Lorg/sonar/squid/text/Line;)V
       5: iconst_0
       6: ireturn

  private void endOfCommentLine(org.sonar.squid.text.Line);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
       5: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       8: aload_0
       9: getfield      #3                  // Field isJavadoc:Z
      12: aload_0
      13: getfield      #4                  // Field isLicenseHeader:Z
      16: invokevirtual #33                 // Method org/sonar/squid/text/Line.setComment:(Ljava/lang/String;ZZ)V
      19: aload_0
      20: new           #7                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      27: putfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      30: aload_0
      31: iconst_0
      32: putfield      #2                  // Field isFirstLineOfComment:Z
      35: return

  private void initProperties();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field commentStarted:Z
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field isJavadoc:Z
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field isLicenseHeader:Z
      15: aload_0
      16: new           #7                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      23: putfield      #15                 // Field currentLineComment:Ljava/lang/StringBuilder;
      26: aload_0
      27: iconst_0
      28: putfield      #2                  // Field isFirstLineOfComment:Z
      31: return
}
