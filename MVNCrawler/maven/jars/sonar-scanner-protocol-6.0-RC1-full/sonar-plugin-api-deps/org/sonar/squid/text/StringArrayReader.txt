Compiled from "StringArrayReader.java"
public class org.sonar.squid.text.StringArrayReader extends java.io.Reader {
  private final java.io.StringReader stringReader;

  public org.sonar.squid.text.StringArrayReader(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/sonar/squid/text/StringArrayReader$EndOfLineDelimiter.LF:Lorg/sonar/squid/text/StringArrayReader$EndOfLineDelimiter;
       5: invokespecial #2                  // Method "<init>":([Ljava/lang/String;Lorg/sonar/squid/text/StringArrayReader$EndOfLineDelimiter;)V
       8: return

  public org.sonar.squid.text.StringArrayReader(java.lang.String[], org.sonar.squid.text.StringArrayReader$EndOfLineDelimiter);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/io/Reader."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #4                  // class java/lang/IllegalStateException
      11: dup
      12: ldc           #5                  // String lines object can\'t be null.
      14: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #7                  // Method convertArrayToStringAndAppendEndOfLine:([Ljava/lang/String;Lorg/sonar/squid/text/StringArrayReader$EndOfLineDelimiter;)Ljava/lang/String;
      24: astore_3
      25: aload_0
      26: new           #8                  // class java/io/StringReader
      29: dup
      30: aload_3
      31: invokespecial #9                  // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      34: putfield      #10                 // Field stringReader:Ljava/io/StringReader;
      37: return

  private java.lang.String convertArrayToStringAndAppendEndOfLine(java.lang.String[], org.sonar.squid.text.StringArrayReader$EndOfLineDelimiter);
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: aload_1
      14: arraylength
      15: if_icmpge     116
      18: aload_3
      19: aload_1
      20: iload         4
      22: aaload
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: iload         4
      29: aload_1
      30: arraylength
      31: iconst_1
      32: isub
      33: if_icmpeq     110
      36: getstatic     #14                 // Field org/sonar/squid/text/StringArrayReader$1.$SwitchMap$org$sonar$squid$text$StringArrayReader$EndOfLineDelimiter:[I
      39: aload_2
      40: invokevirtual #15                 // Method org/sonar/squid/text/StringArrayReader$EndOfLineDelimiter.ordinal:()I
      43: iaload
      44: tableswitch   { // 1 to 3
                     1: 72
                     2: 82
                     3: 92
               default: 102
          }
      72: aload_3
      73: bipush        10
      75: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      78: pop
      79: goto          110
      82: aload_3
      83: bipush        13
      85: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: goto          110
      92: aload_3
      93: ldc           #17                 // String \r\n
      95: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: goto          110
     102: new           #4                  // class java/lang/IllegalStateException
     105: dup
     106: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":()V
     109: athrow
     110: iinc          4, 1
     113: goto          11
     116: aload_3
     117: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field stringReader:Ljava/io/StringReader;
       4: invokevirtual #20                 // Method java/io/StringReader.close:()V
       7: return

  public boolean ready() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field stringReader:Ljava/io/StringReader;
       4: invokevirtual #21                 // Method java/io/StringReader.ready:()Z
       7: ireturn

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #10                 // Field stringReader:Ljava/io/StringReader;
       4: invokevirtual #22                 // Method java/io/StringReader.markSupported:()Z
       7: ireturn

  public void mark(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field stringReader:Ljava/io/StringReader;
       4: iload_1
       5: invokevirtual #23                 // Method java/io/StringReader.mark:(I)V
       8: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field stringReader:Ljava/io/StringReader;
       4: invokevirtual #24                 // Method java/io/StringReader.reset:()V
       7: return

  public int read(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field stringReader:Ljava/io/StringReader;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #25                 // Method java/io/StringReader.read:([CII)I
      10: ireturn
}
