Compiled from "JsonReader.java"
public class com.google.gson.stream.JsonReader implements java.io.Closeable {
  private static final char[] NON_EXECUTE_PREFIX;

  private static final long MIN_INCOMPLETE_INTEGER;

  private static final int PEEKED_NONE;

  private static final int PEEKED_BEGIN_OBJECT;

  private static final int PEEKED_END_OBJECT;

  private static final int PEEKED_BEGIN_ARRAY;

  private static final int PEEKED_END_ARRAY;

  private static final int PEEKED_TRUE;

  private static final int PEEKED_FALSE;

  private static final int PEEKED_NULL;

  private static final int PEEKED_SINGLE_QUOTED;

  private static final int PEEKED_DOUBLE_QUOTED;

  private static final int PEEKED_UNQUOTED;

  private static final int PEEKED_BUFFERED;

  private static final int PEEKED_SINGLE_QUOTED_NAME;

  private static final int PEEKED_DOUBLE_QUOTED_NAME;

  private static final int PEEKED_UNQUOTED_NAME;

  private static final int PEEKED_LONG;

  private static final int PEEKED_NUMBER;

  private static final int PEEKED_EOF;

  private static final int NUMBER_CHAR_NONE;

  private static final int NUMBER_CHAR_SIGN;

  private static final int NUMBER_CHAR_DIGIT;

  private static final int NUMBER_CHAR_DECIMAL;

  private static final int NUMBER_CHAR_FRACTION_DIGIT;

  private static final int NUMBER_CHAR_EXP_E;

  private static final int NUMBER_CHAR_EXP_SIGN;

  private static final int NUMBER_CHAR_EXP_DIGIT;

  private final java.io.Reader in;

  private boolean lenient;

  private final char[] buffer;

  private int pos;

  private int limit;

  private int lineNumber;

  private int lineStart;

  private int peeked;

  private long peekedLong;

  private int peekedNumberLength;

  private java.lang.String peekedString;

  private int[] stack;

  private int stackSize;

  private java.lang.String[] pathNames;

  private int[] pathIndices;

  public com.google.gson.stream.JsonReader(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field lenient:Z
       9: aload_0
      10: sipush        1024
      13: newarray       char
      15: putfield      #7                  // Field buffer:[C
      18: aload_0
      19: iconst_0
      20: putfield      #8                  // Field pos:I
      23: aload_0
      24: iconst_0
      25: putfield      #9                  // Field limit:I
      28: aload_0
      29: iconst_0
      30: putfield      #10                 // Field lineNumber:I
      33: aload_0
      34: iconst_0
      35: putfield      #11                 // Field lineStart:I
      38: aload_0
      39: iconst_0
      40: putfield      #4                  // Field peeked:I
      43: aload_0
      44: bipush        32
      46: newarray       int
      48: putfield      #12                 // Field stack:[I
      51: aload_0
      52: iconst_0
      53: putfield      #13                 // Field stackSize:I
      56: aload_0
      57: getfield      #12                 // Field stack:[I
      60: aload_0
      61: dup
      62: getfield      #13                 // Field stackSize:I
      65: dup_x1
      66: iconst_1
      67: iadd
      68: putfield      #13                 // Field stackSize:I
      71: bipush        6
      73: iastore
      74: aload_0
      75: bipush        32
      77: anewarray     #14                 // class java/lang/String
      80: putfield      #15                 // Field pathNames:[Ljava/lang/String;
      83: aload_0
      84: bipush        32
      86: newarray       int
      88: putfield      #16                 // Field pathIndices:[I
      91: aload_1
      92: ifnonnull     105
      95: new           #17                 // class java/lang/NullPointerException
      98: dup
      99: ldc           #18                 // String in == null
     101: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: aload_1
     107: putfield      #20                 // Field in:Ljava/io/Reader;
     110: return

  public final void setLenient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field lenient:Z
       5: return

  public final boolean isLenient();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lenient:Z
       4: ireturn

  public void beginArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_3
      16: if_icmpne     44
      19: aload_0
      20: iconst_1
      21: invokespecial #21                 // Method push:(I)V
      24: aload_0
      25: getfield      #16                 // Field pathIndices:[I
      28: aload_0
      29: getfield      #13                 // Field stackSize:I
      32: iconst_1
      33: isub
      34: iconst_0
      35: iastore
      36: aload_0
      37: iconst_0
      38: putfield      #4                  // Field peeked:I
      41: goto          110
      44: new           #22                 // class java/lang/IllegalStateException
      47: dup
      48: new           #23                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #25                 // String Expected BEGIN_ARRAY but was
      57: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      64: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #29                 // String  at line
      69: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokespecial #2                  // Method getLineNumber:()I
      76: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #31                 // String  column
      81: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokespecial #1                  // Method getColumnNumber:()I
      88: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: ldc           #32                 // String  path
      93: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     100: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: return

  public void endArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_4
      16: if_icmpne     52
      19: aload_0
      20: dup
      21: getfield      #13                 // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #13                 // Field stackSize:I
      29: aload_0
      30: getfield      #16                 // Field pathIndices:[I
      33: aload_0
      34: getfield      #13                 // Field stackSize:I
      37: iconst_1
      38: isub
      39: dup2
      40: iaload
      41: iconst_1
      42: iadd
      43: iastore
      44: aload_0
      45: iconst_0
      46: putfield      #4                  // Field peeked:I
      49: goto          118
      52: new           #22                 // class java/lang/IllegalStateException
      55: dup
      56: new           #23                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #36                 // String Expected END_ARRAY but was
      65: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      72: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: ldc           #29                 // String  at line
      77: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokespecial #2                  // Method getLineNumber:()I
      84: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #31                 // String  column
      89: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: invokespecial #1                  // Method getColumnNumber:()I
      96: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      99: ldc           #32                 // String  path
     101: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     108: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: return

  public void beginObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_1
      16: if_icmpne     32
      19: aload_0
      20: iconst_3
      21: invokespecial #21                 // Method push:(I)V
      24: aload_0
      25: iconst_0
      26: putfield      #4                  // Field peeked:I
      29: goto          98
      32: new           #22                 // class java/lang/IllegalStateException
      35: dup
      36: new           #23                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #37                 // String Expected BEGIN_OBJECT but was
      45: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      52: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #29                 // String  at line
      57: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokespecial #2                  // Method getLineNumber:()I
      64: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #31                 // String  column
      69: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokespecial #1                  // Method getColumnNumber:()I
      76: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #32                 // String  path
      81: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
      88: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: return

  public void endObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpne     62
      19: aload_0
      20: dup
      21: getfield      #13                 // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #13                 // Field stackSize:I
      29: aload_0
      30: getfield      #15                 // Field pathNames:[Ljava/lang/String;
      33: aload_0
      34: getfield      #13                 // Field stackSize:I
      37: aconst_null
      38: aastore
      39: aload_0
      40: getfield      #16                 // Field pathIndices:[I
      43: aload_0
      44: getfield      #13                 // Field stackSize:I
      47: iconst_1
      48: isub
      49: dup2
      50: iaload
      51: iconst_1
      52: iadd
      53: iastore
      54: aload_0
      55: iconst_0
      56: putfield      #4                  // Field peeked:I
      59: goto          128
      62: new           #22                 // class java/lang/IllegalStateException
      65: dup
      66: new           #23                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #38                 // String Expected END_OBJECT but was
      75: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      82: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #29                 // String  at line
      87: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: invokespecial #2                  // Method getLineNumber:()I
      94: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #31                 // String  column
      99: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: invokespecial #1                  // Method getColumnNumber:()I
     106: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     109: ldc           #32                 // String  path
     111: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     118: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: return

  public boolean hasNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpeq     28
      19: iload_1
      20: iconst_4
      21: if_icmpeq     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public com.google.gson.stream.JsonToken peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: tableswitch   { // 1 to 17
                     1: 96
                     2: 100
                     3: 104
                     4: 108
                     5: 116
                     6: 116
                     7: 120
                     8: 124
                     9: 124
                    10: 124
                    11: 124
                    12: 112
                    13: 112
                    14: 112
                    15: 128
                    16: 128
                    17: 132
               default: 136
          }
      96: getstatic     #39                 // Field com/google/gson/stream/JsonToken.BEGIN_OBJECT:Lcom/google/gson/stream/JsonToken;
      99: areturn
     100: getstatic     #40                 // Field com/google/gson/stream/JsonToken.END_OBJECT:Lcom/google/gson/stream/JsonToken;
     103: areturn
     104: getstatic     #41                 // Field com/google/gson/stream/JsonToken.BEGIN_ARRAY:Lcom/google/gson/stream/JsonToken;
     107: areturn
     108: getstatic     #42                 // Field com/google/gson/stream/JsonToken.END_ARRAY:Lcom/google/gson/stream/JsonToken;
     111: areturn
     112: getstatic     #43                 // Field com/google/gson/stream/JsonToken.NAME:Lcom/google/gson/stream/JsonToken;
     115: areturn
     116: getstatic     #44                 // Field com/google/gson/stream/JsonToken.BOOLEAN:Lcom/google/gson/stream/JsonToken;
     119: areturn
     120: getstatic     #45                 // Field com/google/gson/stream/JsonToken.NULL:Lcom/google/gson/stream/JsonToken;
     123: areturn
     124: getstatic     #46                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
     127: areturn
     128: getstatic     #47                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
     131: areturn
     132: getstatic     #48                 // Field com/google/gson/stream/JsonToken.END_DOCUMENT:Lcom/google/gson/stream/JsonToken;
     135: areturn
     136: new           #49                 // class java/lang/AssertionError
     139: dup
     140: invokespecial #50                 // Method java/lang/AssertionError."<init>":()V
     143: athrow

  private int doPeek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field stack:[I
       4: aload_0
       5: getfield      #13                 // Field stackSize:I
       8: iconst_1
       9: isub
      10: iaload
      11: istore_1
      12: iload_1
      13: iconst_1
      14: if_icmpne     32
      17: aload_0
      18: getfield      #12                 // Field stack:[I
      21: aload_0
      22: getfield      #13                 // Field stackSize:I
      25: iconst_1
      26: isub
      27: iconst_2
      28: iastore
      29: goto          518
      32: iload_1
      33: iconst_2
      34: if_icmpne     104
      37: aload_0
      38: iconst_1
      39: invokespecial #51                 // Method nextNonWhitespace:(Z)I
      42: istore_2
      43: iload_2
      44: lookupswitch  { // 3
                    44: 91
                    59: 87
                    93: 80
               default: 94
          }
      80: aload_0
      81: iconst_4
      82: dup_x1
      83: putfield      #4                  // Field peeked:I
      86: ireturn
      87: aload_0
      88: invokespecial #52                 // Method checkLenient:()V
      91: goto          101
      94: aload_0
      95: ldc           #53                 // String Unterminated array
      97: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     100: athrow
     101: goto          518
     104: iload_1
     105: iconst_3
     106: if_icmpeq     114
     109: iload_1
     110: iconst_5
     111: if_icmpne     313
     114: aload_0
     115: getfield      #12                 // Field stack:[I
     118: aload_0
     119: getfield      #13                 // Field stackSize:I
     122: iconst_1
     123: isub
     124: iconst_4
     125: iastore
     126: iload_1
     127: iconst_5
     128: if_icmpne     193
     131: aload_0
     132: iconst_1
     133: invokespecial #51                 // Method nextNonWhitespace:(Z)I
     136: istore_2
     137: iload_2
     138: lookupswitch  { // 3
                    44: 183
                    59: 179
                   125: 172
               default: 186
          }
     172: aload_0
     173: iconst_2
     174: dup_x1
     175: putfield      #4                  // Field peeked:I
     178: ireturn
     179: aload_0
     180: invokespecial #52                 // Method checkLenient:()V
     183: goto          193
     186: aload_0
     187: ldc           #55                 // String Unterminated object
     189: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     192: athrow
     193: aload_0
     194: iconst_1
     195: invokespecial #51                 // Method nextNonWhitespace:(Z)I
     198: istore_2
     199: iload_2
     200: lookupswitch  { // 3
                    34: 236
                    39: 244
                   125: 256
               default: 275
          }
     236: aload_0
     237: bipush        13
     239: dup_x1
     240: putfield      #4                  // Field peeked:I
     243: ireturn
     244: aload_0
     245: invokespecial #52                 // Method checkLenient:()V
     248: aload_0
     249: bipush        12
     251: dup_x1
     252: putfield      #4                  // Field peeked:I
     255: ireturn
     256: iload_1
     257: iconst_5
     258: if_icmpeq     268
     261: aload_0
     262: iconst_2
     263: dup_x1
     264: putfield      #4                  // Field peeked:I
     267: ireturn
     268: aload_0
     269: ldc           #56                 // String Expected name
     271: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     274: athrow
     275: aload_0
     276: invokespecial #52                 // Method checkLenient:()V
     279: aload_0
     280: dup
     281: getfield      #8                  // Field pos:I
     284: iconst_1
     285: isub
     286: putfield      #8                  // Field pos:I
     289: aload_0
     290: iload_2
     291: i2c
     292: invokespecial #57                 // Method isLiteral:(C)Z
     295: ifeq          306
     298: aload_0
     299: bipush        14
     301: dup_x1
     302: putfield      #4                  // Field peeked:I
     305: ireturn
     306: aload_0
     307: ldc           #56                 // String Expected name
     309: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     312: athrow
     313: iload_1
     314: iconst_4
     315: if_icmpne     427
     318: aload_0
     319: getfield      #12                 // Field stack:[I
     322: aload_0
     323: getfield      #13                 // Field stackSize:I
     326: iconst_1
     327: isub
     328: iconst_5
     329: iastore
     330: aload_0
     331: iconst_1
     332: invokespecial #51                 // Method nextNonWhitespace:(Z)I
     335: istore_2
     336: iload_2
     337: lookupswitch  { // 2
                    58: 364
                    61: 367
               default: 417
          }
     364: goto          424
     367: aload_0
     368: invokespecial #52                 // Method checkLenient:()V
     371: aload_0
     372: getfield      #8                  // Field pos:I
     375: aload_0
     376: getfield      #9                  // Field limit:I
     379: if_icmplt     390
     382: aload_0
     383: iconst_1
     384: invokespecial #58                 // Method fillBuffer:(I)Z
     387: ifeq          424
     390: aload_0
     391: getfield      #7                  // Field buffer:[C
     394: aload_0
     395: getfield      #8                  // Field pos:I
     398: caload
     399: bipush        62
     401: if_icmpne     424
     404: aload_0
     405: dup
     406: getfield      #8                  // Field pos:I
     409: iconst_1
     410: iadd
     411: putfield      #8                  // Field pos:I
     414: goto          424
     417: aload_0
     418: ldc           #59                 // String Expected \':\'
     420: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     423: athrow
     424: goto          518
     427: iload_1
     428: bipush        6
     430: if_icmpne     460
     433: aload_0
     434: getfield      #6                  // Field lenient:Z
     437: ifeq          444
     440: aload_0
     441: invokespecial #60                 // Method consumeNonExecutePrefix:()V
     444: aload_0
     445: getfield      #12                 // Field stack:[I
     448: aload_0
     449: getfield      #13                 // Field stackSize:I
     452: iconst_1
     453: isub
     454: bipush        7
     456: iastore
     457: goto          518
     460: iload_1
     461: bipush        7
     463: if_icmpne     502
     466: aload_0
     467: iconst_0
     468: invokespecial #51                 // Method nextNonWhitespace:(Z)I
     471: istore_2
     472: iload_2
     473: iconst_m1
     474: if_icmpne     485
     477: aload_0
     478: bipush        17
     480: dup_x1
     481: putfield      #4                  // Field peeked:I
     484: ireturn
     485: aload_0
     486: invokespecial #52                 // Method checkLenient:()V
     489: aload_0
     490: dup
     491: getfield      #8                  // Field pos:I
     494: iconst_1
     495: isub
     496: putfield      #8                  // Field pos:I
     499: goto          518
     502: iload_1
     503: bipush        8
     505: if_icmpne     518
     508: new           #22                 // class java/lang/IllegalStateException
     511: dup
     512: ldc           #61                 // String JsonReader is closed
     514: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     517: athrow
     518: aload_0
     519: iconst_1
     520: invokespecial #51                 // Method nextNonWhitespace:(Z)I
     523: istore_2
     524: iload_2
     525: lookupswitch  { // 7
                    34: 655
                    39: 643
                    44: 604
                    59: 604
                    91: 675
                    93: 592
                   123: 682
               default: 689
          }
     592: iload_1
     593: iconst_1
     594: if_icmpne     604
     597: aload_0
     598: iconst_4
     599: dup_x1
     600: putfield      #4                  // Field peeked:I
     603: ireturn
     604: iload_1
     605: iconst_1
     606: if_icmpeq     614
     609: iload_1
     610: iconst_2
     611: if_icmpne     636
     614: aload_0
     615: invokespecial #52                 // Method checkLenient:()V
     618: aload_0
     619: dup
     620: getfield      #8                  // Field pos:I
     623: iconst_1
     624: isub
     625: putfield      #8                  // Field pos:I
     628: aload_0
     629: bipush        7
     631: dup_x1
     632: putfield      #4                  // Field peeked:I
     635: ireturn
     636: aload_0
     637: ldc           #62                 // String Unexpected value
     639: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     642: athrow
     643: aload_0
     644: invokespecial #52                 // Method checkLenient:()V
     647: aload_0
     648: bipush        8
     650: dup_x1
     651: putfield      #4                  // Field peeked:I
     654: ireturn
     655: aload_0
     656: getfield      #13                 // Field stackSize:I
     659: iconst_1
     660: if_icmpne     667
     663: aload_0
     664: invokespecial #52                 // Method checkLenient:()V
     667: aload_0
     668: bipush        9
     670: dup_x1
     671: putfield      #4                  // Field peeked:I
     674: ireturn
     675: aload_0
     676: iconst_3
     677: dup_x1
     678: putfield      #4                  // Field peeked:I
     681: ireturn
     682: aload_0
     683: iconst_1
     684: dup_x1
     685: putfield      #4                  // Field peeked:I
     688: ireturn
     689: aload_0
     690: dup
     691: getfield      #8                  // Field pos:I
     694: iconst_1
     695: isub
     696: putfield      #8                  // Field pos:I
     699: aload_0
     700: getfield      #13                 // Field stackSize:I
     703: iconst_1
     704: if_icmpne     711
     707: aload_0
     708: invokespecial #52                 // Method checkLenient:()V
     711: aload_0
     712: invokespecial #63                 // Method peekKeyword:()I
     715: istore_3
     716: iload_3
     717: ifeq          722
     720: iload_3
     721: ireturn
     722: aload_0
     723: invokespecial #64                 // Method peekNumber:()I
     726: istore_3
     727: iload_3
     728: ifeq          733
     731: iload_3
     732: ireturn
     733: aload_0
     734: aload_0
     735: getfield      #7                  // Field buffer:[C
     738: aload_0
     739: getfield      #8                  // Field pos:I
     742: caload
     743: invokespecial #57                 // Method isLiteral:(C)Z
     746: ifne          756
     749: aload_0
     750: ldc           #65                 // String Expected value
     752: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     755: athrow
     756: aload_0
     757: invokespecial #52                 // Method checkLenient:()V
     760: aload_0
     761: bipush        10
     763: dup_x1
     764: putfield      #4                  // Field peeked:I
     767: ireturn

  private int peekKeyword() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[C
       4: aload_0
       5: getfield      #8                  // Field pos:I
       8: caload
       9: istore_1
      10: iload_1
      11: bipush        116
      13: if_icmpeq     22
      16: iload_1
      17: bipush        84
      19: if_icmpne     34
      22: ldc           #66                 // String true
      24: astore_2
      25: ldc           #67                 // String TRUE
      27: astore_3
      28: iconst_5
      29: istore        4
      31: goto          86
      34: iload_1
      35: bipush        102
      37: if_icmpeq     46
      40: iload_1
      41: bipush        70
      43: if_icmpne     59
      46: ldc           #68                 // String false
      48: astore_2
      49: ldc           #69                 // String FALSE
      51: astore_3
      52: bipush        6
      54: istore        4
      56: goto          86
      59: iload_1
      60: bipush        110
      62: if_icmpeq     71
      65: iload_1
      66: bipush        78
      68: if_icmpne     84
      71: ldc           #70                 // String null
      73: astore_2
      74: ldc           #71                 // String NULL
      76: astore_3
      77: bipush        7
      79: istore        4
      81: goto          86
      84: iconst_0
      85: ireturn
      86: aload_2
      87: invokevirtual #72                 // Method java/lang/String.length:()I
      90: istore        5
      92: iconst_1
      93: istore        6
      95: iload         6
      97: iload         5
      99: if_icmpge     170
     102: aload_0
     103: getfield      #8                  // Field pos:I
     106: iload         6
     108: iadd
     109: aload_0
     110: getfield      #9                  // Field limit:I
     113: if_icmplt     129
     116: aload_0
     117: iload         6
     119: iconst_1
     120: iadd
     121: invokespecial #58                 // Method fillBuffer:(I)Z
     124: ifne          129
     127: iconst_0
     128: ireturn
     129: aload_0
     130: getfield      #7                  // Field buffer:[C
     133: aload_0
     134: getfield      #8                  // Field pos:I
     137: iload         6
     139: iadd
     140: caload
     141: istore_1
     142: iload_1
     143: aload_2
     144: iload         6
     146: invokevirtual #73                 // Method java/lang/String.charAt:(I)C
     149: if_icmpeq     164
     152: iload_1
     153: aload_3
     154: iload         6
     156: invokevirtual #73                 // Method java/lang/String.charAt:(I)C
     159: if_icmpeq     164
     162: iconst_0
     163: ireturn
     164: iinc          6, 1
     167: goto          95
     170: aload_0
     171: getfield      #8                  // Field pos:I
     174: iload         5
     176: iadd
     177: aload_0
     178: getfield      #9                  // Field limit:I
     181: if_icmplt     195
     184: aload_0
     185: iload         5
     187: iconst_1
     188: iadd
     189: invokespecial #58                 // Method fillBuffer:(I)Z
     192: ifeq          216
     195: aload_0
     196: aload_0
     197: getfield      #7                  // Field buffer:[C
     200: aload_0
     201: getfield      #8                  // Field pos:I
     204: iload         5
     206: iadd
     207: caload
     208: invokespecial #57                 // Method isLiteral:(C)Z
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_0
     217: dup
     218: getfield      #8                  // Field pos:I
     221: iload         5
     223: iadd
     224: putfield      #8                  // Field pos:I
     227: aload_0
     228: iload         4
     230: dup_x1
     231: putfield      #4                  // Field peeked:I
     234: ireturn

  private int peekNumber() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[C
       4: astore_1
       5: aload_0
       6: getfield      #8                  // Field pos:I
       9: istore_2
      10: aload_0
      11: getfield      #9                  // Field limit:I
      14: istore_3
      15: lconst_0
      16: lstore        4
      18: iconst_0
      19: istore        6
      21: iconst_1
      22: istore        7
      24: iconst_0
      25: istore        8
      27: iconst_0
      28: istore        9
      30: iload_2
      31: iload         9
      33: iadd
      34: iload_3
      35: if_icmpne     71
      38: iload         9
      40: aload_1
      41: arraylength
      42: if_icmpne     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: iload         9
      50: iconst_1
      51: iadd
      52: invokespecial #58                 // Method fillBuffer:(I)Z
      55: ifne          61
      58: goto          372
      61: aload_0
      62: getfield      #8                  // Field pos:I
      65: istore_2
      66: aload_0
      67: getfield      #9                  // Field limit:I
      70: istore_3
      71: aload_1
      72: iload_2
      73: iload         9
      75: iadd
      76: caload
      77: istore        10
      79: iload         10
      81: lookupswitch  { // 5
                    43: 161
                    45: 132
                    46: 196
                    69: 176
                   101: 176
               default: 210
          }
     132: iload         8
     134: ifne          146
     137: iconst_1
     138: istore        6
     140: iconst_1
     141: istore        8
     143: goto          366
     146: iload         8
     148: iconst_5
     149: if_icmpne     159
     152: bipush        6
     154: istore        8
     156: goto          366
     159: iconst_0
     160: ireturn
     161: iload         8
     163: iconst_5
     164: if_icmpne     174
     167: bipush        6
     169: istore        8
     171: goto          366
     174: iconst_0
     175: ireturn
     176: iload         8
     178: iconst_2
     179: if_icmpeq     188
     182: iload         8
     184: iconst_4
     185: if_icmpne     194
     188: iconst_5
     189: istore        8
     191: goto          366
     194: iconst_0
     195: ireturn
     196: iload         8
     198: iconst_2
     199: if_icmpne     208
     202: iconst_3
     203: istore        8
     205: goto          366
     208: iconst_0
     209: ireturn
     210: iload         10
     212: bipush        48
     214: if_icmplt     224
     217: iload         10
     219: bipush        57
     221: if_icmple     238
     224: aload_0
     225: iload         10
     227: invokespecial #57                 // Method isLiteral:(C)Z
     230: ifne          236
     233: goto          372
     236: iconst_0
     237: ireturn
     238: iload         8
     240: iconst_1
     241: if_icmpeq     249
     244: iload         8
     246: ifne          264
     249: iload         10
     251: bipush        48
     253: isub
     254: ineg
     255: i2l
     256: lstore        4
     258: iconst_2
     259: istore        8
     261: goto          366
     264: iload         8
     266: iconst_2
     267: if_icmpne     337
     270: lload         4
     272: lconst_0
     273: lcmp
     274: ifne          279
     277: iconst_0
     278: ireturn
     279: lload         4
     281: ldc2_w        #74                 // long 10l
     284: lmul
     285: iload         10
     287: bipush        48
     289: isub
     290: i2l
     291: lsub
     292: lstore        11
     294: iload         7
     296: lload         4
     298: ldc2_w        #76                 // long -922337203685477580l
     301: lcmp
     302: ifgt          322
     305: lload         4
     307: ldc2_w        #76                 // long -922337203685477580l
     310: lcmp
     311: ifne          326
     314: lload         11
     316: lload         4
     318: lcmp
     319: ifge          326
     322: iconst_1
     323: goto          327
     326: iconst_0
     327: iand
     328: istore        7
     330: lload         11
     332: lstore        4
     334: goto          366
     337: iload         8
     339: iconst_3
     340: if_icmpne     349
     343: iconst_4
     344: istore        8
     346: goto          366
     349: iload         8
     351: iconst_5
     352: if_icmpeq     362
     355: iload         8
     357: bipush        6
     359: if_icmpne     366
     362: bipush        7
     364: istore        8
     366: iinc          9, 1
     369: goto          30
     372: iload         8
     374: iconst_2
     375: if_icmpne     433
     378: iload         7
     380: ifeq          433
     383: lload         4
     385: ldc2_w        #78                 // long -9223372036854775808l
     388: lcmp
     389: ifne          397
     392: iload         6
     394: ifeq          433
     397: aload_0
     398: iload         6
     400: ifeq          408
     403: lload         4
     405: goto          411
     408: lload         4
     410: lneg
     411: putfield      #80                 // Field peekedLong:J
     414: aload_0
     415: dup
     416: getfield      #8                  // Field pos:I
     419: iload         9
     421: iadd
     422: putfield      #8                  // Field pos:I
     425: aload_0
     426: bipush        15
     428: dup_x1
     429: putfield      #4                  // Field peeked:I
     432: ireturn
     433: iload         8
     435: iconst_2
     436: if_icmpeq     452
     439: iload         8
     441: iconst_4
     442: if_icmpeq     452
     445: iload         8
     447: bipush        7
     449: if_icmpne     466
     452: aload_0
     453: iload         9
     455: putfield      #81                 // Field peekedNumberLength:I
     458: aload_0
     459: bipush        16
     461: dup_x1
     462: putfield      #4                  // Field peeked:I
     465: ireturn
     466: iconst_0
     467: ireturn

  private boolean isLiteral(char) throws java.io.IOException;
    Code:
       0: iload_1
       1: lookupswitch  { // 16
                     9: 144
                    10: 144
                    12: 144
                    13: 144
                    32: 144
                    35: 140
                    44: 144
                    47: 140
                    58: 144
                    59: 140
                    61: 140
                    91: 144
                    92: 140
                    93: 144
                   123: 144
                   125: 144
               default: 146
          }
     140: aload_0
     141: invokespecial #52                 // Method checkLenient:()V
     144: iconst_0
     145: ireturn
     146: iconst_1
     147: ireturn

  public java.lang.String nextName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        14
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #82                 // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          126
      28: iload_1
      29: bipush        12
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #83                 // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          126
      44: iload_1
      45: bipush        13
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #83                 // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          126
      60: new           #22                 // class java/lang/IllegalStateException
      63: dup
      64: new           #23                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #84                 // String Expected a name but was
      73: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      80: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: ldc           #29                 // String  at line
      85: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: invokespecial #2                  // Method getLineNumber:()I
      92: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      95: ldc           #31                 // String  column
      97: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_0
     101: invokespecial #1                  // Method getColumnNumber:()I
     104: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     107: ldc           #32                 // String  path
     109: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     116: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: aload_0
     127: iconst_0
     128: putfield      #4                  // Field peeked:I
     131: aload_0
     132: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     135: aload_0
     136: getfield      #13                 // Field stackSize:I
     139: iconst_1
     140: isub
     141: aload_2
     142: aastore
     143: aload_2
     144: areturn

  public java.lang.String nextString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        10
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #82                 // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          204
      28: iload_1
      29: bipush        8
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #83                 // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          204
      44: iload_1
      45: bipush        9
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #83                 // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          204
      60: iload_1
      61: bipush        11
      63: if_icmpne     79
      66: aload_0
      67: getfield      #85                 // Field peekedString:Ljava/lang/String;
      70: astore_2
      71: aload_0
      72: aconst_null
      73: putfield      #85                 // Field peekedString:Ljava/lang/String;
      76: goto          204
      79: iload_1
      80: bipush        15
      82: if_icmpne     96
      85: aload_0
      86: getfield      #80                 // Field peekedLong:J
      89: invokestatic  #86                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      92: astore_2
      93: goto          204
      96: iload_1
      97: bipush        16
      99: if_icmpne     138
     102: new           #14                 // class java/lang/String
     105: dup
     106: aload_0
     107: getfield      #7                  // Field buffer:[C
     110: aload_0
     111: getfield      #8                  // Field pos:I
     114: aload_0
     115: getfield      #81                 // Field peekedNumberLength:I
     118: invokespecial #87                 // Method java/lang/String."<init>":([CII)V
     121: astore_2
     122: aload_0
     123: dup
     124: getfield      #8                  // Field pos:I
     127: aload_0
     128: getfield      #81                 // Field peekedNumberLength:I
     131: iadd
     132: putfield      #8                  // Field pos:I
     135: goto          204
     138: new           #22                 // class java/lang/IllegalStateException
     141: dup
     142: new           #23                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     149: ldc           #88                 // String Expected a string but was
     151: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload_0
     155: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     158: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     161: ldc           #29                 // String  at line
     163: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: invokespecial #2                  // Method getLineNumber:()I
     170: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     173: ldc           #31                 // String  column
     175: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: aload_0
     179: invokespecial #1                  // Method getColumnNumber:()I
     182: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     185: ldc           #32                 // String  path
     187: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     194: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     203: athrow
     204: aload_0
     205: iconst_0
     206: putfield      #4                  // Field peeked:I
     209: aload_0
     210: getfield      #16                 // Field pathIndices:[I
     213: aload_0
     214: getfield      #13                 // Field stackSize:I
     217: iconst_1
     218: isub
     219: dup2
     220: iaload
     221: iconst_1
     222: iadd
     223: iastore
     224: aload_2
     225: areturn

  public boolean nextBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_5
      16: if_icmpne     41
      19: aload_0
      20: iconst_0
      21: putfield      #4                  // Field peeked:I
      24: aload_0
      25: getfield      #16                 // Field pathIndices:[I
      28: aload_0
      29: getfield      #13                 // Field stackSize:I
      32: iconst_1
      33: isub
      34: dup2
      35: iaload
      36: iconst_1
      37: iadd
      38: iastore
      39: iconst_1
      40: ireturn
      41: iload_1
      42: bipush        6
      44: if_icmpne     69
      47: aload_0
      48: iconst_0
      49: putfield      #4                  // Field peeked:I
      52: aload_0
      53: getfield      #16                 // Field pathIndices:[I
      56: aload_0
      57: getfield      #13                 // Field stackSize:I
      60: iconst_1
      61: isub
      62: dup2
      63: iaload
      64: iconst_1
      65: iadd
      66: iastore
      67: iconst_0
      68: ireturn
      69: new           #22                 // class java/lang/IllegalStateException
      72: dup
      73: new           #23                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #89                 // String Expected a boolean but was
      82: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      89: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: ldc           #29                 // String  at line
      94: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: invokespecial #2                  // Method getLineNumber:()I
     101: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: ldc           #31                 // String  column
     106: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: invokespecial #1                  // Method getColumnNumber:()I
     113: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     116: ldc           #32                 // String  path
     118: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     125: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     134: athrow

  public void nextNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        7
      17: if_icmpne     43
      20: aload_0
      21: iconst_0
      22: putfield      #4                  // Field peeked:I
      25: aload_0
      26: getfield      #16                 // Field pathIndices:[I
      29: aload_0
      30: getfield      #13                 // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: goto          109
      43: new           #22                 // class java/lang/IllegalStateException
      46: dup
      47: new           #23                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #90                 // String Expected null but was
      56: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      63: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #29                 // String  at line
      68: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: invokespecial #2                  // Method getLineNumber:()I
      75: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: ldc           #31                 // String  column
      80: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: invokespecial #1                  // Method getColumnNumber:()I
      87: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: ldc           #32                 // String  path
      92: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
      99: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: return

  public double nextDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     46
      20: aload_0
      21: iconst_0
      22: putfield      #4                  // Field peeked:I
      25: aload_0
      26: getfield      #16                 // Field pathIndices:[I
      29: aload_0
      30: getfield      #13                 // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #80                 // Field peekedLong:J
      44: l2d
      45: dreturn
      46: iload_1
      47: bipush        16
      49: if_icmpne     91
      52: aload_0
      53: new           #14                 // class java/lang/String
      56: dup
      57: aload_0
      58: getfield      #7                  // Field buffer:[C
      61: aload_0
      62: getfield      #8                  // Field pos:I
      65: aload_0
      66: getfield      #81                 // Field peekedNumberLength:I
      69: invokespecial #87                 // Method java/lang/String."<init>":([CII)V
      72: putfield      #85                 // Field peekedString:Ljava/lang/String;
      75: aload_0
      76: dup
      77: getfield      #8                  // Field pos:I
      80: aload_0
      81: getfield      #81                 // Field peekedNumberLength:I
      84: iadd
      85: putfield      #8                  // Field pos:I
      88: goto          216
      91: iload_1
      92: bipush        8
      94: if_icmpeq     103
      97: iload_1
      98: bipush        9
     100: if_icmpne     127
     103: aload_0
     104: aload_0
     105: iload_1
     106: bipush        8
     108: if_icmpne     116
     111: bipush        39
     113: goto          118
     116: bipush        34
     118: invokespecial #83                 // Method nextQuotedValue:(C)Ljava/lang/String;
     121: putfield      #85                 // Field peekedString:Ljava/lang/String;
     124: goto          216
     127: iload_1
     128: bipush        10
     130: if_icmpne     144
     133: aload_0
     134: aload_0
     135: invokespecial #82                 // Method nextUnquotedValue:()Ljava/lang/String;
     138: putfield      #85                 // Field peekedString:Ljava/lang/String;
     141: goto          216
     144: iload_1
     145: bipush        11
     147: if_icmpeq     216
     150: new           #22                 // class java/lang/IllegalStateException
     153: dup
     154: new           #23                 // class java/lang/StringBuilder
     157: dup
     158: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     161: ldc           #91                 // String Expected a double but was
     163: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     170: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     173: ldc           #29                 // String  at line
     175: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: aload_0
     179: invokespecial #2                  // Method getLineNumber:()I
     182: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     185: ldc           #31                 // String  column
     187: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: invokespecial #1                  // Method getColumnNumber:()I
     194: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     197: ldc           #32                 // String  path
     199: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: aload_0
     203: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     206: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     215: athrow
     216: aload_0
     217: bipush        11
     219: putfield      #4                  // Field peeked:I
     222: aload_0
     223: getfield      #85                 // Field peekedString:Ljava/lang/String;
     226: invokestatic  #92                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     229: dstore_2
     230: aload_0
     231: getfield      #6                  // Field lenient:Z
     234: ifne          314
     237: dload_2
     238: invokestatic  #93                 // Method java/lang/Double.isNaN:(D)Z
     241: ifne          251
     244: dload_2
     245: invokestatic  #94                 // Method java/lang/Double.isInfinite:(D)Z
     248: ifeq          314
     251: new           #95                 // class com/google/gson/stream/MalformedJsonException
     254: dup
     255: new           #23                 // class java/lang/StringBuilder
     258: dup
     259: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     262: ldc           #96                 // String JSON forbids NaN and infinities:
     264: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     267: dload_2
     268: invokevirtual #97                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     271: ldc           #29                 // String  at line
     273: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: aload_0
     277: invokespecial #2                  // Method getLineNumber:()I
     280: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     283: ldc           #31                 // String  column
     285: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     288: aload_0
     289: invokespecial #1                  // Method getColumnNumber:()I
     292: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     295: ldc           #32                 // String  path
     297: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     300: aload_0
     301: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     304: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     310: invokespecial #98                 // Method com/google/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
     313: athrow
     314: aload_0
     315: aconst_null
     316: putfield      #85                 // Field peekedString:Ljava/lang/String;
     319: aload_0
     320: iconst_0
     321: putfield      #4                  // Field peeked:I
     324: aload_0
     325: getfield      #16                 // Field pathIndices:[I
     328: aload_0
     329: getfield      #13                 // Field stackSize:I
     332: iconst_1
     333: isub
     334: dup2
     335: iaload
     336: iconst_1
     337: iadd
     338: iastore
     339: dload_2
     340: dreturn

  public long nextLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     45
      20: aload_0
      21: iconst_0
      22: putfield      #4                  // Field peeked:I
      25: aload_0
      26: getfield      #16                 // Field pathIndices:[I
      29: aload_0
      30: getfield      #13                 // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #80                 // Field peekedLong:J
      44: lreturn
      45: iload_1
      46: bipush        16
      48: if_icmpne     90
      51: aload_0
      52: new           #14                 // class java/lang/String
      55: dup
      56: aload_0
      57: getfield      #7                  // Field buffer:[C
      60: aload_0
      61: getfield      #8                  // Field pos:I
      64: aload_0
      65: getfield      #81                 // Field peekedNumberLength:I
      68: invokespecial #87                 // Method java/lang/String."<init>":([CII)V
      71: putfield      #85                 // Field peekedString:Ljava/lang/String;
      74: aload_0
      75: dup
      76: getfield      #8                  // Field pos:I
      79: aload_0
      80: getfield      #81                 // Field peekedNumberLength:I
      83: iadd
      84: putfield      #8                  // Field pos:I
      87: goto          223
      90: iload_1
      91: bipush        8
      93: if_icmpeq     102
      96: iload_1
      97: bipush        9
      99: if_icmpne     157
     102: aload_0
     103: aload_0
     104: iload_1
     105: bipush        8
     107: if_icmpne     115
     110: bipush        39
     112: goto          117
     115: bipush        34
     117: invokespecial #83                 // Method nextQuotedValue:(C)Ljava/lang/String;
     120: putfield      #85                 // Field peekedString:Ljava/lang/String;
     123: aload_0
     124: getfield      #85                 // Field peekedString:Ljava/lang/String;
     127: invokestatic  #99                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     130: lstore_2
     131: aload_0
     132: iconst_0
     133: putfield      #4                  // Field peeked:I
     136: aload_0
     137: getfield      #16                 // Field pathIndices:[I
     140: aload_0
     141: getfield      #13                 // Field stackSize:I
     144: iconst_1
     145: isub
     146: dup2
     147: iaload
     148: iconst_1
     149: iadd
     150: iastore
     151: lload_2
     152: lreturn
     153: astore_2
     154: goto          223
     157: new           #22                 // class java/lang/IllegalStateException
     160: dup
     161: new           #23                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     168: ldc           #101                // String Expected a long but was
     170: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_0
     174: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     177: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     180: ldc           #29                 // String  at line
     182: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_0
     186: invokespecial #2                  // Method getLineNumber:()I
     189: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     192: ldc           #31                 // String  column
     194: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_0
     198: invokespecial #1                  // Method getColumnNumber:()I
     201: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     204: ldc           #32                 // String  path
     206: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: aload_0
     210: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     213: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     219: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     222: athrow
     223: aload_0
     224: bipush        11
     226: putfield      #4                  // Field peeked:I
     229: aload_0
     230: getfield      #85                 // Field peekedString:Ljava/lang/String;
     233: invokestatic  #92                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     236: dstore_2
     237: dload_2
     238: d2l
     239: lstore        4
     241: lload         4
     243: l2d
     244: dload_2
     245: dcmpl
     246: ifeq          315
     249: new           #100                // class java/lang/NumberFormatException
     252: dup
     253: new           #23                 // class java/lang/StringBuilder
     256: dup
     257: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     260: ldc           #101                // String Expected a long but was
     262: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: aload_0
     266: getfield      #85                 // Field peekedString:Ljava/lang/String;
     269: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: ldc           #29                 // String  at line
     274: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: aload_0
     278: invokespecial #2                  // Method getLineNumber:()I
     281: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     284: ldc           #31                 // String  column
     286: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: aload_0
     290: invokespecial #1                  // Method getColumnNumber:()I
     293: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     296: ldc           #32                 // String  path
     298: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     301: aload_0
     302: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     305: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     311: invokespecial #102                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     314: athrow
     315: aload_0
     316: aconst_null
     317: putfield      #85                 // Field peekedString:Ljava/lang/String;
     320: aload_0
     321: iconst_0
     322: putfield      #4                  // Field peeked:I
     325: aload_0
     326: getfield      #16                 // Field pathIndices:[I
     329: aload_0
     330: getfield      #13                 // Field stackSize:I
     333: iconst_1
     334: isub
     335: dup2
     336: iaload
     337: iconst_1
     338: iadd
     339: iastore
     340: lload         4
     342: lreturn
    Exception table:
       from    to  target type
         123   152   153   Class java/lang/NumberFormatException

  private java.lang.String nextQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[C
       4: astore_2
       5: new           #23                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      12: astore_3
      13: aload_0
      14: getfield      #8                  // Field pos:I
      17: istore        4
      19: aload_0
      20: getfield      #9                  // Field limit:I
      23: istore        5
      25: iload         4
      27: istore        6
      29: iload         4
      31: iload         5
      33: if_icmpge     159
      36: aload_2
      37: iload         4
      39: iinc          4, 1
      42: caload
      43: istore        7
      45: iload         7
      47: iload_1
      48: if_icmpne     77
      51: aload_0
      52: iload         4
      54: putfield      #8                  // Field pos:I
      57: aload_3
      58: aload_2
      59: iload         6
      61: iload         4
      63: iload         6
      65: isub
      66: iconst_1
      67: isub
      68: invokevirtual #103                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      71: pop
      72: aload_3
      73: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: areturn
      77: iload         7
      79: bipush        92
      81: if_icmpne     133
      84: aload_0
      85: iload         4
      87: putfield      #8                  // Field pos:I
      90: aload_3
      91: aload_2
      92: iload         6
      94: iload         4
      96: iload         6
      98: isub
      99: iconst_1
     100: isub
     101: invokevirtual #103                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     104: pop
     105: aload_3
     106: aload_0
     107: invokespecial #104                // Method readEscapeCharacter:()C
     110: invokevirtual #105                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     113: pop
     114: aload_0
     115: getfield      #8                  // Field pos:I
     118: istore        4
     120: aload_0
     121: getfield      #9                  // Field limit:I
     124: istore        5
     126: iload         4
     128: istore        6
     130: goto          156
     133: iload         7
     135: bipush        10
     137: if_icmpne     156
     140: aload_0
     141: dup
     142: getfield      #10                 // Field lineNumber:I
     145: iconst_1
     146: iadd
     147: putfield      #10                 // Field lineNumber:I
     150: aload_0
     151: iload         4
     153: putfield      #11                 // Field lineStart:I
     156: goto          29
     159: aload_3
     160: aload_2
     161: iload         6
     163: iload         4
     165: iload         6
     167: isub
     168: invokevirtual #103                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     171: pop
     172: aload_0
     173: iload         4
     175: putfield      #8                  // Field pos:I
     178: aload_0
     179: iconst_1
     180: invokespecial #58                 // Method fillBuffer:(I)Z
     183: ifne          193
     186: aload_0
     187: ldc           #106                // String Unterminated string
     189: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     192: athrow
     193: goto          13

  private java.lang.String nextUnquotedValue() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #8                  // Field pos:I
       8: iload_2
       9: iadd
      10: aload_0
      11: getfield      #9                  // Field limit:I
      14: if_icmpge     181
      17: aload_0
      18: getfield      #7                  // Field buffer:[C
      21: aload_0
      22: getfield      #8                  // Field pos:I
      25: iload_2
      26: iadd
      27: caload
      28: lookupswitch  { // 16
                     9: 172
                    10: 172
                    12: 172
                    13: 172
                    32: 172
                    35: 168
                    44: 172
                    47: 168
                    58: 172
                    59: 168
                    61: 168
                    91: 172
                    92: 168
                    93: 172
                   123: 172
                   125: 172
               default: 175
          }
     168: aload_0
     169: invokespecial #52                 // Method checkLenient:()V
     172: goto          252
     175: iinc          2, 1
     178: goto          4
     181: iload_2
     182: aload_0
     183: getfield      #7                  // Field buffer:[C
     186: arraylength
     187: if_icmpge     203
     190: aload_0
     191: iload_2
     192: iconst_1
     193: iadd
     194: invokespecial #58                 // Method fillBuffer:(I)Z
     197: ifeq          252
     200: goto          4
     203: aload_1
     204: ifnonnull     215
     207: new           #23                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     214: astore_1
     215: aload_1
     216: aload_0
     217: getfield      #7                  // Field buffer:[C
     220: aload_0
     221: getfield      #8                  // Field pos:I
     224: iload_2
     225: invokevirtual #103                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     228: pop
     229: aload_0
     230: dup
     231: getfield      #8                  // Field pos:I
     234: iload_2
     235: iadd
     236: putfield      #8                  // Field pos:I
     239: iconst_0
     240: istore_2
     241: aload_0
     242: iconst_1
     243: invokespecial #58                 // Method fillBuffer:(I)Z
     246: ifne          4
     249: goto          252
     252: aload_1
     253: ifnonnull     276
     256: new           #14                 // class java/lang/String
     259: dup
     260: aload_0
     261: getfield      #7                  // Field buffer:[C
     264: aload_0
     265: getfield      #8                  // Field pos:I
     268: iload_2
     269: invokespecial #87                 // Method java/lang/String."<init>":([CII)V
     272: astore_3
     273: goto          295
     276: aload_1
     277: aload_0
     278: getfield      #7                  // Field buffer:[C
     281: aload_0
     282: getfield      #8                  // Field pos:I
     285: iload_2
     286: invokevirtual #103                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     289: pop
     290: aload_1
     291: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     294: astore_3
     295: aload_0
     296: dup
     297: getfield      #8                  // Field pos:I
     300: iload_2
     301: iadd
     302: putfield      #8                  // Field pos:I
     305: aload_3
     306: areturn

  private void skipQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #8                  // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #9                  // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpge     98
      22: aload_2
      23: iload_3
      24: iinc          3, 1
      27: caload
      28: istore        5
      30: iload         5
      32: iload_1
      33: if_icmpne     42
      36: aload_0
      37: iload_3
      38: putfield      #8                  // Field pos:I
      41: return
      42: iload         5
      44: bipush        92
      46: if_icmpne     73
      49: aload_0
      50: iload_3
      51: putfield      #8                  // Field pos:I
      54: aload_0
      55: invokespecial #104                // Method readEscapeCharacter:()C
      58: pop
      59: aload_0
      60: getfield      #8                  // Field pos:I
      63: istore_3
      64: aload_0
      65: getfield      #9                  // Field limit:I
      68: istore        4
      70: goto          95
      73: iload         5
      75: bipush        10
      77: if_icmpne     95
      80: aload_0
      81: dup
      82: getfield      #10                 // Field lineNumber:I
      85: iconst_1
      86: iadd
      87: putfield      #10                 // Field lineNumber:I
      90: aload_0
      91: iload_3
      92: putfield      #11                 // Field lineStart:I
      95: goto          16
      98: aload_0
      99: iload_3
     100: putfield      #8                  // Field pos:I
     103: aload_0
     104: iconst_1
     105: invokespecial #58                 // Method fillBuffer:(I)Z
     108: ifne          5
     111: aload_0
     112: ldc           #106                // String Unterminated string
     114: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     117: athrow

  private void skipUnquotedValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #8                  // Field pos:I
       6: iload_1
       7: iadd
       8: aload_0
       9: getfield      #9                  // Field limit:I
      12: if_icmpge     185
      15: aload_0
      16: getfield      #7                  // Field buffer:[C
      19: aload_0
      20: getfield      #8                  // Field pos:I
      23: iload_1
      24: iadd
      25: caload
      26: lookupswitch  { // 16
                     9: 168
                    10: 168
                    12: 168
                    13: 168
                    32: 168
                    35: 164
                    44: 168
                    47: 164
                    58: 168
                    59: 164
                    61: 164
                    91: 168
                    92: 164
                    93: 168
                   123: 168
                   125: 168
               default: 179
          }
     164: aload_0
     165: invokespecial #52                 // Method checkLenient:()V
     168: aload_0
     169: dup
     170: getfield      #8                  // Field pos:I
     173: iload_1
     174: iadd
     175: putfield      #8                  // Field pos:I
     178: return
     179: iinc          1, 1
     182: goto          2
     185: aload_0
     186: dup
     187: getfield      #8                  // Field pos:I
     190: iload_1
     191: iadd
     192: putfield      #8                  // Field pos:I
     195: aload_0
     196: iconst_1
     197: invokespecial #58                 // Method fillBuffer:(I)Z
     200: ifne          0
     203: return

  public int nextInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #3                  // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     124
      20: aload_0
      21: getfield      #80                 // Field peekedLong:J
      24: l2i
      25: istore_2
      26: aload_0
      27: getfield      #80                 // Field peekedLong:J
      30: iload_2
      31: i2l
      32: lcmp
      33: ifeq          102
      36: new           #100                // class java/lang/NumberFormatException
      39: dup
      40: new           #23                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #107                // String Expected an int but was
      49: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #80                 // Field peekedLong:J
      56: invokevirtual #108                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      59: ldc           #29                 // String  at line
      61: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: invokespecial #2                  // Method getLineNumber:()I
      68: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      71: ldc           #31                 // String  column
      73: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: invokespecial #1                  // Method getColumnNumber:()I
      80: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: ldc           #32                 // String  path
      85: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
      92: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #102                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_0
     103: iconst_0
     104: putfield      #4                  // Field peeked:I
     107: aload_0
     108: getfield      #16                 // Field pathIndices:[I
     111: aload_0
     112: getfield      #13                 // Field stackSize:I
     115: iconst_1
     116: isub
     117: dup2
     118: iaload
     119: iconst_1
     120: iadd
     121: iastore
     122: iload_2
     123: ireturn
     124: iload_1
     125: bipush        16
     127: if_icmpne     169
     130: aload_0
     131: new           #14                 // class java/lang/String
     134: dup
     135: aload_0
     136: getfield      #7                  // Field buffer:[C
     139: aload_0
     140: getfield      #8                  // Field pos:I
     143: aload_0
     144: getfield      #81                 // Field peekedNumberLength:I
     147: invokespecial #87                 // Method java/lang/String."<init>":([CII)V
     150: putfield      #85                 // Field peekedString:Ljava/lang/String;
     153: aload_0
     154: dup
     155: getfield      #8                  // Field pos:I
     158: aload_0
     159: getfield      #81                 // Field peekedNumberLength:I
     162: iadd
     163: putfield      #8                  // Field pos:I
     166: goto          302
     169: iload_1
     170: bipush        8
     172: if_icmpeq     181
     175: iload_1
     176: bipush        9
     178: if_icmpne     236
     181: aload_0
     182: aload_0
     183: iload_1
     184: bipush        8
     186: if_icmpne     194
     189: bipush        39
     191: goto          196
     194: bipush        34
     196: invokespecial #83                 // Method nextQuotedValue:(C)Ljava/lang/String;
     199: putfield      #85                 // Field peekedString:Ljava/lang/String;
     202: aload_0
     203: getfield      #85                 // Field peekedString:Ljava/lang/String;
     206: invokestatic  #109                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     209: istore_2
     210: aload_0
     211: iconst_0
     212: putfield      #4                  // Field peeked:I
     215: aload_0
     216: getfield      #16                 // Field pathIndices:[I
     219: aload_0
     220: getfield      #13                 // Field stackSize:I
     223: iconst_1
     224: isub
     225: dup2
     226: iaload
     227: iconst_1
     228: iadd
     229: iastore
     230: iload_2
     231: ireturn
     232: astore_3
     233: goto          302
     236: new           #22                 // class java/lang/IllegalStateException
     239: dup
     240: new           #23                 // class java/lang/StringBuilder
     243: dup
     244: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     247: ldc           #107                // String Expected an int but was
     249: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: aload_0
     253: invokevirtual #27                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     256: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     259: ldc           #29                 // String  at line
     261: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: aload_0
     265: invokespecial #2                  // Method getLineNumber:()I
     268: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     271: ldc           #31                 // String  column
     273: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: aload_0
     277: invokespecial #1                  // Method getColumnNumber:()I
     280: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     283: ldc           #32                 // String  path
     285: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     288: aload_0
     289: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     292: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     301: athrow
     302: aload_0
     303: bipush        11
     305: putfield      #4                  // Field peeked:I
     308: aload_0
     309: getfield      #85                 // Field peekedString:Ljava/lang/String;
     312: invokestatic  #92                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     315: dstore_3
     316: dload_3
     317: d2i
     318: istore_2
     319: iload_2
     320: i2d
     321: dload_3
     322: dcmpl
     323: ifeq          392
     326: new           #100                // class java/lang/NumberFormatException
     329: dup
     330: new           #23                 // class java/lang/StringBuilder
     333: dup
     334: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     337: ldc           #107                // String Expected an int but was
     339: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     342: aload_0
     343: getfield      #85                 // Field peekedString:Ljava/lang/String;
     346: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     349: ldc           #29                 // String  at line
     351: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: aload_0
     355: invokespecial #2                  // Method getLineNumber:()I
     358: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     361: ldc           #31                 // String  column
     363: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     366: aload_0
     367: invokespecial #1                  // Method getColumnNumber:()I
     370: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     373: ldc           #32                 // String  path
     375: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     378: aload_0
     379: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
     382: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     385: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     388: invokespecial #102                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     391: athrow
     392: aload_0
     393: aconst_null
     394: putfield      #85                 // Field peekedString:Ljava/lang/String;
     397: aload_0
     398: iconst_0
     399: putfield      #4                  // Field peeked:I
     402: aload_0
     403: getfield      #16                 // Field pathIndices:[I
     406: aload_0
     407: getfield      #13                 // Field stackSize:I
     410: iconst_1
     411: isub
     412: dup2
     413: iaload
     414: iconst_1
     415: iadd
     416: iastore
     417: iload_2
     418: ireturn
    Exception table:
       from    to  target type
         202   231   232   Class java/lang/NumberFormatException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field peeked:I
       5: aload_0
       6: getfield      #12                 // Field stack:[I
       9: iconst_0
      10: bipush        8
      12: iastore
      13: aload_0
      14: iconst_1
      15: putfield      #13                 // Field stackSize:I
      18: aload_0
      19: getfield      #20                 // Field in:Ljava/io/Reader;
      22: invokevirtual #110                // Method java/io/Reader.close:()V
      25: return

  public void skipValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field peeked:I
       6: istore_2
       7: iload_2
       8: ifne          16
      11: aload_0
      12: invokespecial #3                  // Method doPeek:()I
      15: istore_2
      16: iload_2
      17: iconst_3
      18: if_icmpne     32
      21: aload_0
      22: iconst_1
      23: invokespecial #21                 // Method push:(I)V
      26: iinc          1, 1
      29: goto          170
      32: iload_2
      33: iconst_1
      34: if_icmpne     48
      37: aload_0
      38: iconst_3
      39: invokespecial #21                 // Method push:(I)V
      42: iinc          1, 1
      45: goto          170
      48: iload_2
      49: iconst_4
      50: if_icmpne     69
      53: aload_0
      54: dup
      55: getfield      #13                 // Field stackSize:I
      58: iconst_1
      59: isub
      60: putfield      #13                 // Field stackSize:I
      63: iinc          1, -1
      66: goto          170
      69: iload_2
      70: iconst_2
      71: if_icmpne     90
      74: aload_0
      75: dup
      76: getfield      #13                 // Field stackSize:I
      79: iconst_1
      80: isub
      81: putfield      #13                 // Field stackSize:I
      84: iinc          1, -1
      87: goto          170
      90: iload_2
      91: bipush        14
      93: if_icmpeq     102
      96: iload_2
      97: bipush        10
      99: if_icmpne     109
     102: aload_0
     103: invokespecial #111                // Method skipUnquotedValue:()V
     106: goto          170
     109: iload_2
     110: bipush        8
     112: if_icmpeq     121
     115: iload_2
     116: bipush        12
     118: if_icmpne     130
     121: aload_0
     122: bipush        39
     124: invokespecial #112                // Method skipQuotedValue:(C)V
     127: goto          170
     130: iload_2
     131: bipush        9
     133: if_icmpeq     142
     136: iload_2
     137: bipush        13
     139: if_icmpne     151
     142: aload_0
     143: bipush        34
     145: invokespecial #112                // Method skipQuotedValue:(C)V
     148: goto          170
     151: iload_2
     152: bipush        16
     154: if_icmpne     170
     157: aload_0
     158: dup
     159: getfield      #8                  // Field pos:I
     162: aload_0
     163: getfield      #81                 // Field peekedNumberLength:I
     166: iadd
     167: putfield      #8                  // Field pos:I
     170: aload_0
     171: iconst_0
     172: putfield      #4                  // Field peeked:I
     175: iload_1
     176: ifne          2
     179: aload_0
     180: getfield      #16                 // Field pathIndices:[I
     183: aload_0
     184: getfield      #13                 // Field stackSize:I
     187: iconst_1
     188: isub
     189: dup2
     190: iaload
     191: iconst_1
     192: iadd
     193: iastore
     194: aload_0
     195: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     198: aload_0
     199: getfield      #13                 // Field stackSize:I
     202: iconst_1
     203: isub
     204: ldc           #70                 // String null
     206: aastore
     207: return

  private void push(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stackSize:I
       4: aload_0
       5: getfield      #12                 // Field stack:[I
       8: arraylength
       9: if_icmpne     100
      12: aload_0
      13: getfield      #13                 // Field stackSize:I
      16: iconst_2
      17: imul
      18: newarray       int
      20: astore_2
      21: aload_0
      22: getfield      #13                 // Field stackSize:I
      25: iconst_2
      26: imul
      27: newarray       int
      29: astore_3
      30: aload_0
      31: getfield      #13                 // Field stackSize:I
      34: iconst_2
      35: imul
      36: anewarray     #14                 // class java/lang/String
      39: astore        4
      41: aload_0
      42: getfield      #12                 // Field stack:[I
      45: iconst_0
      46: aload_2
      47: iconst_0
      48: aload_0
      49: getfield      #13                 // Field stackSize:I
      52: invokestatic  #113                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: aload_0
      56: getfield      #16                 // Field pathIndices:[I
      59: iconst_0
      60: aload_3
      61: iconst_0
      62: aload_0
      63: getfield      #13                 // Field stackSize:I
      66: invokestatic  #113                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload_0
      70: getfield      #15                 // Field pathNames:[Ljava/lang/String;
      73: iconst_0
      74: aload         4
      76: iconst_0
      77: aload_0
      78: getfield      #13                 // Field stackSize:I
      81: invokestatic  #113                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      84: aload_0
      85: aload_2
      86: putfield      #12                 // Field stack:[I
      89: aload_0
      90: aload_3
      91: putfield      #16                 // Field pathIndices:[I
      94: aload_0
      95: aload         4
      97: putfield      #15                 // Field pathNames:[Ljava/lang/String;
     100: aload_0
     101: getfield      #12                 // Field stack:[I
     104: aload_0
     105: dup
     106: getfield      #13                 // Field stackSize:I
     109: dup_x1
     110: iconst_1
     111: iadd
     112: putfield      #13                 // Field stackSize:I
     115: iload_1
     116: iastore
     117: return

  private boolean fillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[C
       4: astore_2
       5: aload_0
       6: dup
       7: getfield      #11                 // Field lineStart:I
      10: aload_0
      11: getfield      #8                  // Field pos:I
      14: isub
      15: putfield      #11                 // Field lineStart:I
      18: aload_0
      19: getfield      #9                  // Field limit:I
      22: aload_0
      23: getfield      #8                  // Field pos:I
      26: if_icmpeq     59
      29: aload_0
      30: dup
      31: getfield      #9                  // Field limit:I
      34: aload_0
      35: getfield      #8                  // Field pos:I
      38: isub
      39: putfield      #9                  // Field limit:I
      42: aload_2
      43: aload_0
      44: getfield      #8                  // Field pos:I
      47: aload_2
      48: iconst_0
      49: aload_0
      50: getfield      #9                  // Field limit:I
      53: invokestatic  #113                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: goto          64
      59: aload_0
      60: iconst_0
      61: putfield      #9                  // Field limit:I
      64: aload_0
      65: iconst_0
      66: putfield      #8                  // Field pos:I
      69: aload_0
      70: getfield      #20                 // Field in:Ljava/io/Reader;
      73: aload_2
      74: aload_0
      75: getfield      #9                  // Field limit:I
      78: aload_2
      79: arraylength
      80: aload_0
      81: getfield      #9                  // Field limit:I
      84: isub
      85: invokevirtual #114                // Method java/io/Reader.read:([CII)I
      88: dup
      89: istore_3
      90: iconst_m1
      91: if_icmpeq     166
      94: aload_0
      95: dup
      96: getfield      #9                  // Field limit:I
      99: iload_3
     100: iadd
     101: putfield      #9                  // Field limit:I
     104: aload_0
     105: getfield      #10                 // Field lineNumber:I
     108: ifne          156
     111: aload_0
     112: getfield      #11                 // Field lineStart:I
     115: ifne          156
     118: aload_0
     119: getfield      #9                  // Field limit:I
     122: ifle          156
     125: aload_2
     126: iconst_0
     127: caload
     128: ldc           #115                // int 65279
     130: if_icmpne     156
     133: aload_0
     134: dup
     135: getfield      #8                  // Field pos:I
     138: iconst_1
     139: iadd
     140: putfield      #8                  // Field pos:I
     143: aload_0
     144: dup
     145: getfield      #11                 // Field lineStart:I
     148: iconst_1
     149: iadd
     150: putfield      #11                 // Field lineStart:I
     153: iinc          1, 1
     156: aload_0
     157: getfield      #9                  // Field limit:I
     160: iload_1
     161: if_icmplt     69
     164: iconst_1
     165: ireturn
     166: iconst_0
     167: ireturn

  private int getLineNumber();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lineNumber:I
       4: iconst_1
       5: iadd
       6: ireturn

  private int getColumnNumber();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pos:I
       4: aload_0
       5: getfield      #11                 // Field lineStart:I
       8: isub
       9: iconst_1
      10: iadd
      11: ireturn

  private int nextNonWhitespace(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #8                  // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #9                  // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpne     49
      22: aload_0
      23: iload_3
      24: putfield      #8                  // Field pos:I
      27: aload_0
      28: iconst_1
      29: invokespecial #58                 // Method fillBuffer:(I)Z
      32: ifne          38
      35: goto          318
      38: aload_0
      39: getfield      #8                  // Field pos:I
      42: istore_3
      43: aload_0
      44: getfield      #9                  // Field limit:I
      47: istore        4
      49: aload_2
      50: iload_3
      51: iinc          3, 1
      54: caload
      55: istore        5
      57: iload         5
      59: bipush        10
      61: if_icmpne     82
      64: aload_0
      65: dup
      66: getfield      #10                 // Field lineNumber:I
      69: iconst_1
      70: iadd
      71: putfield      #10                 // Field lineNumber:I
      74: aload_0
      75: iload_3
      76: putfield      #11                 // Field lineStart:I
      79: goto          16
      82: iload         5
      84: bipush        32
      86: if_icmpeq     16
      89: iload         5
      91: bipush        13
      93: if_icmpeq     16
      96: iload         5
      98: bipush        9
     100: if_icmpne     106
     103: goto          16
     106: iload         5
     108: bipush        47
     110: if_icmpne     273
     113: aload_0
     114: iload_3
     115: putfield      #8                  // Field pos:I
     118: iload_3
     119: iload         4
     121: if_icmpne     159
     124: aload_0
     125: dup
     126: getfield      #8                  // Field pos:I
     129: iconst_1
     130: isub
     131: putfield      #8                  // Field pos:I
     134: aload_0
     135: iconst_2
     136: invokespecial #58                 // Method fillBuffer:(I)Z
     139: istore        6
     141: aload_0
     142: dup
     143: getfield      #8                  // Field pos:I
     146: iconst_1
     147: iadd
     148: putfield      #8                  // Field pos:I
     151: iload         6
     153: ifne          159
     156: iload         5
     158: ireturn
     159: aload_0
     160: invokespecial #52                 // Method checkLenient:()V
     163: aload_2
     164: aload_0
     165: getfield      #8                  // Field pos:I
     168: caload
     169: istore        6
     171: iload         6
     173: lookupswitch  { // 2
                    42: 200
                    47: 242
               default: 270
          }
     200: aload_0
     201: dup
     202: getfield      #8                  // Field pos:I
     205: iconst_1
     206: iadd
     207: putfield      #8                  // Field pos:I
     210: aload_0
     211: ldc           #116                // String */
     213: invokespecial #117                // Method skipTo:(Ljava/lang/String;)Z
     216: ifne          226
     219: aload_0
     220: ldc           #118                // String Unterminated comment
     222: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     225: athrow
     226: aload_0
     227: getfield      #8                  // Field pos:I
     230: iconst_2
     231: iadd
     232: istore_3
     233: aload_0
     234: getfield      #9                  // Field limit:I
     237: istore        4
     239: goto          16
     242: aload_0
     243: dup
     244: getfield      #8                  // Field pos:I
     247: iconst_1
     248: iadd
     249: putfield      #8                  // Field pos:I
     252: aload_0
     253: invokespecial #119                // Method skipToEndOfLine:()V
     256: aload_0
     257: getfield      #8                  // Field pos:I
     260: istore_3
     261: aload_0
     262: getfield      #9                  // Field limit:I
     265: istore        4
     267: goto          16
     270: iload         5
     272: ireturn
     273: iload         5
     275: bipush        35
     277: if_icmpne     307
     280: aload_0
     281: iload_3
     282: putfield      #8                  // Field pos:I
     285: aload_0
     286: invokespecial #52                 // Method checkLenient:()V
     289: aload_0
     290: invokespecial #119                // Method skipToEndOfLine:()V
     293: aload_0
     294: getfield      #8                  // Field pos:I
     297: istore_3
     298: aload_0
     299: getfield      #9                  // Field limit:I
     302: istore        4
     304: goto          315
     307: aload_0
     308: iload_3
     309: putfield      #8                  // Field pos:I
     312: iload         5
     314: ireturn
     315: goto          16
     318: iload_1
     319: ifeq          364
     322: new           #120                // class java/io/EOFException
     325: dup
     326: new           #23                 // class java/lang/StringBuilder
     329: dup
     330: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     333: ldc           #121                // String End of input at line
     335: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     338: aload_0
     339: invokespecial #2                  // Method getLineNumber:()I
     342: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     345: ldc           #31                 // String  column
     347: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     350: aload_0
     351: invokespecial #1                  // Method getColumnNumber:()I
     354: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     357: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     360: invokespecial #122                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     363: athrow
     364: iconst_m1
     365: ireturn

  private void checkLenient() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lenient:Z
       4: ifne          14
       7: aload_0
       8: ldc           #123                // String Use JsonReader.setLenient(true) to accept malformed JSON
      10: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      13: athrow
      14: return

  private void skipToEndOfLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field pos:I
       4: aload_0
       5: getfield      #9                  // Field limit:I
       8: if_icmplt     19
      11: aload_0
      12: iconst_1
      13: invokespecial #58                 // Method fillBuffer:(I)Z
      16: ifeq          75
      19: aload_0
      20: getfield      #7                  // Field buffer:[C
      23: aload_0
      24: dup
      25: getfield      #8                  // Field pos:I
      28: dup_x1
      29: iconst_1
      30: iadd
      31: putfield      #8                  // Field pos:I
      34: caload
      35: istore_1
      36: iload_1
      37: bipush        10
      39: if_icmpne     63
      42: aload_0
      43: dup
      44: getfield      #10                 // Field lineNumber:I
      47: iconst_1
      48: iadd
      49: putfield      #10                 // Field lineNumber:I
      52: aload_0
      53: aload_0
      54: getfield      #8                  // Field pos:I
      57: putfield      #11                 // Field lineStart:I
      60: goto          75
      63: iload_1
      64: bipush        13
      66: if_icmpne     72
      69: goto          75
      72: goto          0
      75: return

  private boolean skipTo(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field pos:I
       4: aload_1
       5: invokevirtual #72                 // Method java/lang/String.length:()I
       8: iadd
       9: aload_0
      10: getfield      #9                  // Field limit:I
      13: if_icmple     27
      16: aload_0
      17: aload_1
      18: invokevirtual #72                 // Method java/lang/String.length:()I
      21: invokespecial #58                 // Method fillBuffer:(I)Z
      24: ifeq          117
      27: aload_0
      28: getfield      #7                  // Field buffer:[C
      31: aload_0
      32: getfield      #8                  // Field pos:I
      35: caload
      36: bipush        10
      38: if_icmpne     64
      41: aload_0
      42: dup
      43: getfield      #10                 // Field lineNumber:I
      46: iconst_1
      47: iadd
      48: putfield      #10                 // Field lineNumber:I
      51: aload_0
      52: aload_0
      53: getfield      #8                  // Field pos:I
      56: iconst_1
      57: iadd
      58: putfield      #11                 // Field lineStart:I
      61: goto          104
      64: iconst_0
      65: istore_2
      66: iload_2
      67: aload_1
      68: invokevirtual #72                 // Method java/lang/String.length:()I
      71: if_icmpge     102
      74: aload_0
      75: getfield      #7                  // Field buffer:[C
      78: aload_0
      79: getfield      #8                  // Field pos:I
      82: iload_2
      83: iadd
      84: caload
      85: aload_1
      86: iload_2
      87: invokevirtual #73                 // Method java/lang/String.charAt:(I)C
      90: if_icmpeq     96
      93: goto          104
      96: iinc          2, 1
      99: goto          66
     102: iconst_1
     103: ireturn
     104: aload_0
     105: dup
     106: getfield      #8                  // Field pos:I
     109: iconst_1
     110: iadd
     111: putfield      #8                  // Field pos:I
     114: goto          0
     117: iconst_0
     118: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #124                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #125                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #29                 // String  at line
      19: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokespecial #2                  // Method getLineNumber:()I
      26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #31                 // String  column
      31: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokespecial #1                  // Method getColumnNumber:()I
      38: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  public java.lang.String getPath();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: bipush        36
       9: invokevirtual #105                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: astore_1
      13: iconst_0
      14: istore_2
      15: aload_0
      16: getfield      #13                 // Field stackSize:I
      19: istore_3
      20: iload_2
      21: iload_3
      22: if_icmpge     136
      25: aload_0
      26: getfield      #12                 // Field stack:[I
      29: iload_2
      30: iaload
      31: tableswitch   { // 1 to 8
                     1: 76
                     2: 76
                     3: 100
                     4: 100
                     5: 100
                     6: 130
                     7: 130
                     8: 130
               default: 130
          }
      76: aload_1
      77: bipush        91
      79: invokevirtual #105                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #16                 // Field pathIndices:[I
      86: iload_2
      87: iaload
      88: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: bipush        93
      93: invokevirtual #105                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      96: pop
      97: goto          130
     100: aload_1
     101: bipush        46
     103: invokevirtual #105                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: pop
     107: aload_0
     108: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     111: iload_2
     112: aaload
     113: ifnull        130
     116: aload_1
     117: aload_0
     118: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     121: iload_2
     122: aaload
     123: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: goto          130
     130: iinc          2, 1
     133: goto          20
     136: aload_1
     137: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: areturn

  private char readEscapeCharacter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field pos:I
       4: aload_0
       5: getfield      #9                  // Field limit:I
       8: if_icmpne     26
      11: aload_0
      12: iconst_1
      13: invokespecial #58                 // Method fillBuffer:(I)Z
      16: ifne          26
      19: aload_0
      20: ldc           #126                // String Unterminated escape sequence
      22: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      25: athrow
      26: aload_0
      27: getfield      #7                  // Field buffer:[C
      30: aload_0
      31: dup
      32: getfield      #8                  // Field pos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #8                  // Field pos:I
      41: caload
      42: istore_1
      43: iload_1
      44: lookupswitch  { // 10
                    10: 354
                    34: 372
                    39: 372
                    92: 372
                    98: 342
                   102: 351
                   110: 345
                   114: 348
                   116: 339
                   117: 136
               default: 372
          }
     136: aload_0
     137: getfield      #8                  // Field pos:I
     140: iconst_4
     141: iadd
     142: aload_0
     143: getfield      #9                  // Field limit:I
     146: if_icmple     164
     149: aload_0
     150: iconst_4
     151: invokespecial #58                 // Method fillBuffer:(I)Z
     154: ifne          164
     157: aload_0
     158: ldc           #126                // String Unterminated escape sequence
     160: invokespecial #54                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     163: athrow
     164: iconst_0
     165: istore_2
     166: aload_0
     167: getfield      #8                  // Field pos:I
     170: istore_3
     171: iload_3
     172: iconst_4
     173: iadd
     174: istore        4
     176: iload_3
     177: iload         4
     179: if_icmpge     327
     182: aload_0
     183: getfield      #7                  // Field buffer:[C
     186: iload_3
     187: caload
     188: istore        5
     190: iload_2
     191: iconst_4
     192: ishl
     193: i2c
     194: istore_2
     195: iload         5
     197: bipush        48
     199: if_icmplt     221
     202: iload         5
     204: bipush        57
     206: if_icmpgt     221
     209: iload_2
     210: iload         5
     212: bipush        48
     214: isub
     215: iadd
     216: i2c
     217: istore_2
     218: goto          321
     221: iload         5
     223: bipush        97
     225: if_icmplt     250
     228: iload         5
     230: bipush        102
     232: if_icmpgt     250
     235: iload_2
     236: iload         5
     238: bipush        97
     240: isub
     241: bipush        10
     243: iadd
     244: iadd
     245: i2c
     246: istore_2
     247: goto          321
     250: iload         5
     252: bipush        65
     254: if_icmplt     279
     257: iload         5
     259: bipush        70
     261: if_icmpgt     279
     264: iload_2
     265: iload         5
     267: bipush        65
     269: isub
     270: bipush        10
     272: iadd
     273: iadd
     274: i2c
     275: istore_2
     276: goto          321
     279: new           #100                // class java/lang/NumberFormatException
     282: dup
     283: new           #23                 // class java/lang/StringBuilder
     286: dup
     287: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     290: ldc           #127                // String \\u
     292: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: new           #14                 // class java/lang/String
     298: dup
     299: aload_0
     300: getfield      #7                  // Field buffer:[C
     303: aload_0
     304: getfield      #8                  // Field pos:I
     307: iconst_4
     308: invokespecial #87                 // Method java/lang/String."<init>":([CII)V
     311: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     317: invokespecial #102                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     320: athrow
     321: iinc          3, 1
     324: goto          176
     327: aload_0
     328: dup
     329: getfield      #8                  // Field pos:I
     332: iconst_4
     333: iadd
     334: putfield      #8                  // Field pos:I
     337: iload_2
     338: ireturn
     339: bipush        9
     341: ireturn
     342: bipush        8
     344: ireturn
     345: bipush        10
     347: ireturn
     348: bipush        13
     350: ireturn
     351: bipush        12
     353: ireturn
     354: aload_0
     355: dup
     356: getfield      #10                 // Field lineNumber:I
     359: iconst_1
     360: iadd
     361: putfield      #10                 // Field lineNumber:I
     364: aload_0
     365: aload_0
     366: getfield      #8                  // Field pos:I
     369: putfield      #11                 // Field lineStart:I
     372: iload_1
     373: ireturn

  private java.io.IOException syntaxError(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #95                 // class com/google/gson/stream/MalformedJsonException
       3: dup
       4: new           #23                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #29                 // String  at line
      17: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: invokespecial #2                  // Method getLineNumber:()I
      24: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: ldc           #31                 // String  column
      29: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokespecial #1                  // Method getColumnNumber:()I
      36: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #32                 // String  path
      41: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #33                 // Method getPath:()Ljava/lang/String;
      48: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #98                 // Method com/google/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
      57: athrow

  private void consumeNonExecutePrefix() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #51                 // Method nextNonWhitespace:(Z)I
       5: pop
       6: aload_0
       7: dup
       8: getfield      #8                  // Field pos:I
      11: iconst_1
      12: isub
      13: putfield      #8                  // Field pos:I
      16: aload_0
      17: getfield      #8                  // Field pos:I
      20: getstatic     #128                // Field NON_EXECUTE_PREFIX:[C
      23: arraylength
      24: iadd
      25: aload_0
      26: getfield      #9                  // Field limit:I
      29: if_icmple     44
      32: aload_0
      33: getstatic     #128                // Field NON_EXECUTE_PREFIX:[C
      36: arraylength
      37: invokespecial #58                 // Method fillBuffer:(I)Z
      40: ifne          44
      43: return
      44: iconst_0
      45: istore_1
      46: iload_1
      47: getstatic     #128                // Field NON_EXECUTE_PREFIX:[C
      50: arraylength
      51: if_icmpge     80
      54: aload_0
      55: getfield      #7                  // Field buffer:[C
      58: aload_0
      59: getfield      #8                  // Field pos:I
      62: iload_1
      63: iadd
      64: caload
      65: getstatic     #128                // Field NON_EXECUTE_PREFIX:[C
      68: iload_1
      69: caload
      70: if_icmpeq     74
      73: return
      74: iinc          1, 1
      77: goto          46
      80: aload_0
      81: dup
      82: getfield      #8                  // Field pos:I
      85: getstatic     #128                // Field NON_EXECUTE_PREFIX:[C
      88: arraylength
      89: iadd
      90: putfield      #8                  // Field pos:I
      93: return

  static int access$000(com.google.gson.stream.JsonReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field peeked:I
       4: ireturn

  static int access$100(com.google.gson.stream.JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method doPeek:()I
       4: ireturn

  static int access$002(com.google.gson.stream.JsonReader, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field peeked:I
       6: ireturn

  static int access$200(com.google.gson.stream.JsonReader);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method getLineNumber:()I
       4: ireturn

  static int access$300(com.google.gson.stream.JsonReader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getColumnNumber:()I
       4: ireturn

  static {};
    Code:
       0: ldc           #129                // String )]}\'\n
       2: invokevirtual #130                // Method java/lang/String.toCharArray:()[C
       5: putstatic     #128                // Field NON_EXECUTE_PREFIX:[C
       8: new           #131                // class com/google/gson/stream/JsonReader$1
      11: dup
      12: invokespecial #132                // Method com/google/gson/stream/JsonReader$1."<init>":()V
      15: putstatic     #133                // Field com/google/gson/internal/JsonReaderInternalAccess.INSTANCE:Lcom/google/gson/internal/JsonReaderInternalAccess;
      18: return
}
