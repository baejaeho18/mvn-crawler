Compiled from "Maps.java"
public final class com.google.common.collect.Maps {
  static final com.google.common.base.Joiner$MapJoiner STANDARD_JOINER;

  private com.google.common.collect.Maps();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static <K, V> java.util.HashMap<K, V> newHashMap();
    Code:
       0: new           #4                  // class java/util/HashMap
       3: dup
       4: invokespecial #5                  // Method java/util/HashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMapWithExpectedSize(int);
    Code:
       0: new           #4                  // class java/util/HashMap
       3: dup
       4: iload_0
       5: invokestatic  #6                  // Method capacity:(I)I
       8: invokespecial #7                  // Method java/util/HashMap."<init>":(I)V
      11: areturn

  static int capacity(int);
    Code:
       0: iload_0
       1: iconst_3
       2: if_icmpge     21
       5: iload_0
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      17: iload_0
      18: iconst_1
      19: iadd
      20: ireturn
      21: iload_0
      22: ldc           #9                  // int 1073741824
      24: if_icmpge     33
      27: iload_0
      28: iload_0
      29: iconst_3
      30: idiv
      31: iadd
      32: ireturn
      33: ldc           #10                 // int 2147483647
      35: ireturn

  public static <K, V> java.util.HashMap<K, V> newHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #4                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap();
    Code:
       0: new           #12                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #13                 // Method java/util/LinkedHashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #12                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> newConcurrentMap();
    Code:
       0: new           #15                 // class com/google/common/collect/MapMaker
       3: dup
       4: invokespecial #16                 // Method com/google/common/collect/MapMaker."<init>":()V
       7: invokevirtual #17                 // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      10: areturn

  public static <K extends java.lang.Comparable, V> java.util.TreeMap<K, V> newTreeMap();
    Code:
       0: new           #18                 // class java/util/TreeMap
       3: dup
       4: invokespecial #19                 // Method java/util/TreeMap."<init>":()V
       7: areturn

  public static <K, V> java.util.TreeMap<K, V> newTreeMap(java.util.SortedMap<K, ? extends V>);
    Code:
       0: new           #18                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #20                 // Method java/util/TreeMap."<init>":(Ljava/util/SortedMap;)V
       8: areturn

  public static <C, K extends C, V> java.util.TreeMap<K, V> newTreeMap(java.util.Comparator<C>);
    Code:
       0: new           #18                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #21                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
       8: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.lang.Class<K>);
    Code:
       0: new           #22                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #24                 // class java/lang/Class
      11: invokespecial #25                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      14: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: new           #22                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.IdentityHashMap<K, V> newIdentityHashMap();
    Code:
       0: new           #27                 // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #28                 // Method java/util/IdentityHashMap."<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> synchronizedBiMap(com.google.common.collect.BiMap<K, V>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #29                 // Method com/google/common/collect/Synchronized.biMap:(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Lcom/google/common/collect/BiMap;
       5: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #30                 // Method com/google/common/base/Equivalences.equals:()Lcom/google/common/base/Equivalence;
       5: invokestatic  #31                 // Method difference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;)Lcom/google/common/collect/MapDifference;
       8: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>);
    Code:
       0: aload_2
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #32                 // Method newHashMap:()Ljava/util/HashMap;
       8: astore_3
       9: new           #4                  // class java/util/HashMap
      12: dup
      13: aload_1
      14: invokespecial #11                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      17: astore        4
      19: invokestatic  #32                 // Method newHashMap:()Ljava/util/HashMap;
      22: astore        5
      24: invokestatic  #32                 // Method newHashMap:()Ljava/util/HashMap;
      27: astore        6
      29: iconst_1
      30: istore        7
      32: aload_0
      33: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore        8
      45: aload         8
      47: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          173
      55: aload         8
      57: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #37                 // class java/util/Map$Entry
      65: astore        9
      67: aload         9
      69: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: astore        10
      76: aload         9
      78: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: astore        11
      85: aload_1
      86: aload         10
      88: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      93: ifeq          156
      96: aload         4
      98: aload         10
     100: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     105: astore        12
     107: aload_2
     108: aload         11
     110: aload         12
     112: invokevirtual #42                 // Method com/google/common/base/Equivalence.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
     115: ifeq          133
     118: aload         5
     120: aload         10
     122: aload         11
     124: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: goto          153
     133: iconst_0
     134: istore        7
     136: aload         6
     138: aload         10
     140: aload         11
     142: aload         12
     144: invokestatic  #44                 // Method com/google/common/collect/Maps$ValueDifferenceImpl.create:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/MapDifference$ValueDifference;
     147: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: goto          170
     156: iconst_0
     157: istore        7
     159: aload_3
     160: aload         10
     162: aload         11
     164: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     169: pop
     170: goto          45
     173: iload         7
     175: ifeq          192
     178: aload         4
     180: invokeinterface #45,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     185: ifeq          192
     188: iconst_1
     189: goto          193
     192: iconst_0
     193: istore        8
     195: iload         8
     197: aload_3
     198: aload         4
     200: aload         5
     202: aload         6
     204: invokestatic  #46                 // Method mapDifference:(ZLjava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lcom/google/common/collect/MapDifference;
     207: areturn

  private static <K, V> com.google.common.collect.MapDifference<K, V> mapDifference(boolean, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, com.google.common.collect.MapDifference$ValueDifference<V>>);
    Code:
       0: new           #47                 // class com/google/common/collect/Maps$MapDifferenceImpl
       3: dup
       4: iload_0
       5: aload_1
       6: invokestatic  #48                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       9: aload_2
      10: invokestatic  #48                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      13: aload_3
      14: invokestatic  #48                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      17: aload         4
      19: invokestatic  #48                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      22: invokespecial #49                 // Method com/google/common/collect/Maps$MapDifferenceImpl."<init>":(ZLjava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      25: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.lang.Iterable<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_0
       1: invokeinterface #50,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #51                 // Method uniqueIndex:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      10: areturn

  public static <K, V, I extends java.lang.Iterable<V> & java.util.Iterator<V>> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(I, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #52                 // class java/lang/Iterable
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokestatic  #53                 // Method uniqueIndex:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      13: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.util.Iterator<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #54                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       8: astore_2
       9: aload_0
      10: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_0
      19: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_2
      26: aload_1
      27: aload_3
      28: invokeinterface #55,  2           // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_3
      34: invokevirtual #56                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      37: pop
      38: goto          9
      41: aload_2
      42: invokevirtual #57                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      45: areturn

  public static com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> fromProperties(java.util.Properties);
    Code:
       0: invokestatic  #54                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       3: astore_1
       4: aload_0
       5: invokevirtual #58                 // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
       8: astore_2
       9: aload_2
      10: invokeinterface #59,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          42
      18: aload_2
      19: invokeinterface #60,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: checkcast     #61                 // class java/lang/String
      27: astore_3
      28: aload_1
      29: aload_3
      30: aload_0
      31: aload_3
      32: invokevirtual #62                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #56                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      38: pop
      39: goto          9
      42: aload_1
      43: invokevirtual #57                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      46: areturn

  public static <K, V> java.util.Map$Entry<K, V> immutableEntry(K, V);
    Code:
       0: new           #63                 // class com/google/common/collect/ImmutableEntry
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #64                 // Method com/google/common/collect/ImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  static <K, V> java.util.Set<java.util.Map$Entry<K, V>> unmodifiableEntrySet(java.util.Set<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #65                 // class com/google/common/collect/Maps$UnmodifiableEntrySet
       3: dup
       4: aload_0
       5: invokestatic  #66                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       8: invokespecial #67                 // Method com/google/common/collect/Maps$UnmodifiableEntrySet."<init>":(Ljava/util/Set;)V
      11: areturn

  static <K, V> java.util.Map$Entry<K, V> unmodifiableEntry(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #68                 // class com/google/common/collect/Maps$1
       8: dup
       9: aload_0
      10: invokespecial #69                 // Method com/google/common/collect/Maps$1."<init>":(Ljava/util/Map$Entry;)V
      13: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> unmodifiableBiMap(com.google.common.collect.BiMap<? extends K, ? extends V>);
    Code:
       0: new           #70                 // class com/google/common/collect/Maps$UnmodifiableBiMap
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #71                 // Method com/google/common/collect/Maps$UnmodifiableBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/collect/BiMap;)V
       9: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformValues(java.util.Map<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #72                 // class com/google/common/collect/Maps$2
       8: dup
       9: aload_1
      10: invokespecial #73                 // Method com/google/common/collect/Maps$2."<init>":(Lcom/google/common/base/Function;)V
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokestatic  #74                 // Method transformEntries:(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/Map;
      19: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformEntries(java.util.Map<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #75                 // class com/google/common/collect/Maps$TransformedEntriesMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #76                 // Method com/google/common/collect/Maps$TransformedEntriesMap."<init>":(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  public static <K, V> java.util.Map<K, V> filterKeys(java.util.Map<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #77                 // class com/google/common/collect/Maps$3
       8: dup
       9: aload_1
      10: invokespecial #78                 // Method com/google/common/collect/Maps$3."<init>":(Lcom/google/common/base/Predicate;)V
      13: astore_2
      14: aload_0
      15: instanceof    #79                 // class com/google/common/collect/Maps$AbstractFilteredMap
      18: ifeq          32
      21: aload_0
      22: checkcast     #79                 // class com/google/common/collect/Maps$AbstractFilteredMap
      25: aload_2
      26: invokestatic  #80                 // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      29: goto          48
      32: new           #81                 // class com/google/common/collect/Maps$FilteredKeyMap
      35: dup
      36: aload_0
      37: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #82                 // class java/util/Map
      43: aload_1
      44: aload_2
      45: invokespecial #83                 // Method com/google/common/collect/Maps$FilteredKeyMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)V
      48: areturn

  public static <K, V> java.util.Map<K, V> filterValues(java.util.Map<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #84                 // class com/google/common/collect/Maps$4
       8: dup
       9: aload_1
      10: invokespecial #85                 // Method com/google/common/collect/Maps$4."<init>":(Lcom/google/common/base/Predicate;)V
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokestatic  #86                 // Method filterEntries:(Ljava/util/Map;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      19: areturn

  public static <K, V> java.util.Map<K, V> filterEntries(java.util.Map<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #79                 // class com/google/common/collect/Maps$AbstractFilteredMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #79                 // class com/google/common/collect/Maps$AbstractFilteredMap
      16: aload_1
      17: invokestatic  #80                 // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      20: goto          38
      23: new           #87                 // class com/google/common/collect/Maps$FilteredEntryMap
      26: dup
      27: aload_0
      28: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #82                 // class java/util/Map
      34: aload_1
      35: invokespecial #88                 // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      38: areturn

  private static <K, V> java.util.Map<K, V> filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #89                 // Field com/google/common/collect/Maps$AbstractFilteredMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #90                 // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #87                 // class com/google/common/collect/Maps$FilteredEntryMap
      12: dup
      13: aload_0
      14: getfield      #91                 // Field com/google/common/collect/Maps$AbstractFilteredMap.unfiltered:Ljava/util/Map;
      17: aload_2
      18: invokespecial #88                 // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      21: areturn

  static <V> V safeGet(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #92,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn
       8: astore_2
       9: aconst_null
      10: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException

  static boolean safeContainsKey(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       7: ireturn
       8: astore_2
       9: iconst_0
      10: ireturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException

  static <K, V> boolean containsEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #37                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #37                 // class java/util/Map$Entry
      14: invokestatic  #94                 // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #95,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      22: ireturn

  static <K, V> boolean removeEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #37                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #37                 // class java/util/Map$Entry
      14: invokestatic  #94                 // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #96,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      22: ireturn

  static boolean equalsImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #82                 // class java/util/Map
      11: ifeq          35
      14: aload_1
      15: checkcast     #82                 // class java/util/Map
      18: astore_2
      19: aload_0
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      25: aload_2
      26: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokevirtual #97                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ireturn
      35: iconst_0
      36: ireturn

  static int hashCodeImpl(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokestatic  #98                 // Method com/google/common/collect/Sets.hashCodeImpl:(Ljava/util/Set;)I
       9: ireturn

  static java.lang.String toStringImpl(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #99,  1           // InterfaceMethod java/util/Map.size:()I
       6: invokestatic  #100                // Method com/google/common/collect/Collections2.newStringBuilderForCollection:(I)Ljava/lang/StringBuilder;
       9: bipush        123
      11: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: astore_1
      15: getstatic     #102                // Field STANDARD_JOINER:Lcom/google/common/base/Joiner$MapJoiner;
      18: aload_1
      19: aload_0
      20: invokevirtual #103                // Method com/google/common/base/Joiner$MapJoiner.appendTo:(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: bipush        125
      27: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  static <K, V> void putAllImpl(java.util.Map<K, V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #37                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: goto          12
      53: return

  static boolean containsKeyImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          49
      21: aload_2
      22: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #37                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: aload_1
      38: invokestatic  #105                // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: goto          12
      49: iconst_0
      50: ireturn

  static boolean containsValueImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          49
      21: aload_2
      22: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #37                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: aload_1
      38: invokestatic  #105                // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: goto          12
      49: iconst_0
      50: ireturn

  static {};
    Code:
       0: getstatic     #106                // Field com/google/common/collect/Collections2.STANDARD_JOINER:Lcom/google/common/base/Joiner;
       3: ldc           #107                // String =
       5: invokevirtual #108                // Method com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;
       8: putstatic     #102                // Field STANDARD_JOINER:Lcom/google/common/base/Joiner$MapJoiner;
      11: return
}
