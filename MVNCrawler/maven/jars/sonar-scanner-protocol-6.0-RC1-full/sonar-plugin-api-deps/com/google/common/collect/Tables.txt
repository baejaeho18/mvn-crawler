Compiled from "Tables.java"
public final class com.google.common.collect.Tables {
  private com.google.common.collect.Tables();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <R, C, V> com.google.common.collect.Table$Cell<R, C, V> immutableCell(R, C, V);
    Code:
       0: new           #2                  // class com/google/common/collect/Tables$ImmutableCell
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #3                  // Method com/google/common/collect/Tables$ImmutableCell."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      10: areturn

  public static <R, C, V> com.google.common.collect.Table<C, R, V> transpose(com.google.common.collect.Table<R, C, V>);
    Code:
       0: aload_0
       1: instanceof    #4                  // class com/google/common/collect/Tables$TransposeTable
       4: ifeq          17
       7: aload_0
       8: checkcast     #4                  // class com/google/common/collect/Tables$TransposeTable
      11: getfield      #5                  // Field com/google/common/collect/Tables$TransposeTable.original:Lcom/google/common/collect/Table;
      14: goto          25
      17: new           #4                  // class com/google/common/collect/Tables$TransposeTable
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method com/google/common/collect/Tables$TransposeTable."<init>":(Lcom/google/common/collect/Table;)V
      25: areturn

  public static <R, C, V> com.google.common.collect.Table<R, C, V> newCustomTable(java.util.Map<R, java.util.Map<C, V>>, com.google.common.base.Supplier<? extends java.util.Map<C, V>>);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       6: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       9: aload_1
      10: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: new           #10                 // class com/google/common/collect/StandardTable
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #11                 // Method com/google/common/collect/StandardTable."<init>":(Ljava/util/Map;Lcom/google/common/base/Supplier;)V
      23: areturn

  public static <R, C, V1, V2> com.google.common.collect.Table<R, C, V2> transformValues(com.google.common.collect.Table<R, C, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: new           #12                 // class com/google/common/collect/Tables$TransformedTable
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #13                 // Method com/google/common/collect/Tables$TransformedTable."<init>":(Lcom/google/common/collect/Table;Lcom/google/common/base/Function;)V
       9: areturn
}
