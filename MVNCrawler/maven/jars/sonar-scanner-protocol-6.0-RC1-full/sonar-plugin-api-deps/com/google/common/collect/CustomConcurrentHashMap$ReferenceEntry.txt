Compiled from "CustomConcurrentHashMap.java"
interface com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> {
  public abstract com.google.common.collect.CustomConcurrentHashMap$ValueReference<K, V> getValueReference();

  public abstract void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference<K, V>);

  public abstract com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getNext();

  public abstract int getHash();

  public abstract K getKey();

  public abstract long getExpirationTime();

  public abstract void setExpirationTime(long);

  public abstract com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getNextExpirable();

  public abstract void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);

  public abstract com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getPreviousExpirable();

  public abstract void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);

  public abstract com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getNextEvictable();

  public abstract void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);

  public abstract com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getPreviousEvictable();

  public abstract void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
}
