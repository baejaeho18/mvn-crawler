Compiled from "ComputingConcurrentHashMap.java"
final class com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference<K, V> implements com.google.common.collect.CustomConcurrentHashMap$ValueReference<K, V> {
  final com.google.common.base.Function<? super K, ? extends V> computingFunction;

  volatile com.google.common.collect.CustomConcurrentHashMap$ValueReference<K, V> computedReference;

  public com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference(com.google.common.base.Function<? super K, ? extends V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/CustomConcurrentHashMap.unset:()Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
       8: putfield      #3                  // Field computedReference:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field computingFunction:Lcom/google/common/base/Function;
      16: return

  public V get();
    Code:
       0: aconst_null
       1: areturn

  public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getEntry();
    Code:
       0: aconst_null
       1: areturn

  public com.google.common.collect.CustomConcurrentHashMap$ValueReference<K, V> copyFor(java.lang.ref.ReferenceQueue<V>, com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: areturn

  public boolean isComputingReference();
    Code:
       0: iconst_1
       1: ireturn

  public V waitForValue() throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field computedReference:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
       4: getstatic     #5                  // Field com/google/common/collect/CustomConcurrentHashMap.UNSET:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
       7: if_acmpne     79
      10: iconst_0
      11: istore_1
      12: aload_0
      13: dup
      14: astore_2
      15: monitorenter
      16: aload_0
      17: getfield      #3                  // Field computedReference:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
      20: getstatic     #5                  // Field com/google/common/collect/CustomConcurrentHashMap.UNSET:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
      23: if_acmpne     39
      26: aload_0
      27: invokevirtual #6                  // Method java/lang/Object.wait:()V
      30: goto          16
      33: astore_3
      34: iconst_1
      35: istore_1
      36: goto          16
      39: aload_2
      40: monitorexit
      41: goto          51
      44: astore        4
      46: aload_2
      47: monitorexit
      48: aload         4
      50: athrow
      51: iload_1
      52: ifeq          79
      55: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      58: invokevirtual #9                  // Method java/lang/Thread.interrupt:()V
      61: goto          79
      64: astore        5
      66: iload_1
      67: ifeq          76
      70: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      73: invokevirtual #9                  // Method java/lang/Thread.interrupt:()V
      76: aload         5
      78: athrow
      79: aload_0
      80: getfield      #3                  // Field computedReference:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
      83: invokeinterface #10,  1           // InterfaceMethod com/google/common/collect/CustomConcurrentHashMap$ValueReference.waitForValue:()Ljava/lang/Object;
      88: areturn
    Exception table:
       from    to  target type
          26    30    33   Class java/lang/InterruptedException
          16    41    44   any
          44    48    44   any
          12    51    64   any
          64    66    64   any

  public void clear(com.google.common.collect.CustomConcurrentHashMap$ValueReference<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setValueReference:(Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;)V
       5: return

  V compute(K, int) throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field computingFunction:Lcom/google/common/base/Function;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: goto          39
      14: astore        4
      16: aload_0
      17: new           #14                 // class com/google/common/collect/ComputingConcurrentHashMap$ComputationExceptionReference
      20: dup
      21: aload         4
      23: invokespecial #15                 // Method com/google/common/collect/ComputingConcurrentHashMap$ComputationExceptionReference."<init>":(Ljava/lang/Throwable;)V
      26: invokevirtual #11                 // Method setValueReference:(Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;)V
      29: new           #16                 // class java/util/concurrent/ExecutionException
      32: dup
      33: aload         4
      35: invokespecial #17                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
      39: aload_0
      40: new           #18                 // class com/google/common/collect/ComputingConcurrentHashMap$ComputedReference
      43: dup
      44: aload_3
      45: invokespecial #19                 // Method com/google/common/collect/ComputingConcurrentHashMap$ComputedReference."<init>":(Ljava/lang/Object;)V
      48: invokevirtual #11                 // Method setValueReference:(Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;)V
      51: aload_3
      52: areturn
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/Throwable

  void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference<K, V>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #3                  // Field computedReference:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
       8: getstatic     #5                  // Field com/google/common/collect/CustomConcurrentHashMap.UNSET:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
      11: if_acmpne     23
      14: aload_0
      15: aload_1
      16: putfield      #3                  // Field computedReference:Lcom/google/common/collect/CustomConcurrentHashMap$ValueReference;
      19: aload_0
      20: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
      23: aload_2
      24: monitorexit
      25: goto          33
      28: astore_3
      29: aload_2
      30: monitorexit
      31: aload_3
      32: athrow
      33: return
    Exception table:
       from    to  target type
           4    25    28   any
          28    31    28   any
}
