Compiled from "Joiner.java"
public class com.google.common.base.Joiner {
  private final java.lang.String separator;

  public static com.google.common.base.Joiner on(java.lang.String);
    Code:
       0: new           #3                  // class com/google/common/base/Joiner
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public static com.google.common.base.Joiner on(char);
    Code:
       0: new           #3                  // class com/google/common/base/Joiner
       3: dup
       4: iload_0
       5: invokestatic  #5                  // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       8: invokespecial #4                  // Method "<init>":(Ljava/lang/String;)V
      11: areturn

  private com.google.common.base.Joiner(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #8                  // class java/lang/String
      12: putfield      #1                  // Field separator:Ljava/lang/String;
      15: return

  private com.google.common.base.Joiner(com.google.common.base.Joiner);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #1                  // Field separator:Ljava/lang/String;
       9: putfield      #1                  // Field separator:Ljava/lang/String;
      12: return

  public <A extends java.lang.Appendable> A appendTo(A, java.lang.Iterable<?>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          78
      21: aload_1
      22: aload_0
      23: aload_3
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: invokevirtual #12                 // Method toString:(Ljava/lang/Object;)Ljava/lang/CharSequence;
      32: invokeinterface #13,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      37: pop
      38: aload_3
      39: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          78
      47: aload_1
      48: aload_0
      49: getfield      #1                  // Field separator:Ljava/lang/String;
      52: invokeinterface #13,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      57: pop
      58: aload_1
      59: aload_0
      60: aload_3
      61: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: invokevirtual #12                 // Method toString:(Ljava/lang/Object;)Ljava/lang/CharSequence;
      69: invokeinterface #13,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      74: pop
      75: goto          38
      78: aload_1
      79: areturn

  public final <A extends java.lang.Appendable> A appendTo(A, java.lang.Object[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #14                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: invokevirtual #15                 // Method appendTo:(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;
       9: areturn

  public final <A extends java.lang.Appendable> A appendTo(A, java.lang.Object, java.lang.Object, java.lang.Object...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #16                 // Method iterable:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Iterable;
       9: invokevirtual #15                 // Method appendTo:(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;
      12: areturn

  public final java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #15                 // Method appendTo:(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;
       6: pop
       7: goto          20
      10: astore_3
      11: new           #18                 // class java/lang/AssertionError
      14: dup
      15: aload_3
      16: invokespecial #19                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      19: athrow
      20: aload_1
      21: areturn
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  public final java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #14                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: invokevirtual #20                 // Method appendTo:(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
       9: areturn

  public final java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #16                 // Method iterable:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Iterable;
       9: invokevirtual #20                 // Method appendTo:(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
      12: areturn

  public final java.lang.String join(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: new           #21                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_1
       9: invokevirtual #20                 // Method appendTo:(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
      12: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      15: areturn

  public final java.lang.String join(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #24                 // Method join:(Ljava/lang/Iterable;)Ljava/lang/String;
       8: areturn

  public final java.lang.String join(java.lang.Object, java.lang.Object, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #16                 // Method iterable:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Iterable;
       7: invokevirtual #24                 // Method join:(Ljava/lang/Iterable;)Ljava/lang/String;
      10: areturn

  public com.google.common.base.Joiner useForNull(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #25                 // class com/google/common/base/Joiner$1
       8: dup
       9: aload_0
      10: aload_0
      11: aload_1
      12: invokespecial #26                 // Method com/google/common/base/Joiner$1."<init>":(Lcom/google/common/base/Joiner;Lcom/google/common/base/Joiner;Ljava/lang/String;)V
      15: areturn

  public com.google.common.base.Joiner skipNulls();
    Code:
       0: new           #27                 // class com/google/common/base/Joiner$2
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #28                 // Method com/google/common/base/Joiner$2."<init>":(Lcom/google/common/base/Joiner;Lcom/google/common/base/Joiner;)V
       9: areturn

  public com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String);
    Code:
       0: new           #29                 // class com/google/common/base/Joiner$MapJoiner
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #30                 // Method com/google/common/base/Joiner$MapJoiner."<init>":(Lcom/google/common/base/Joiner;Ljava/lang/String;Lcom/google/common/base/Joiner$1;)V
      10: areturn

  java.lang.CharSequence toString(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: instanceof    #31                 // class java/lang/CharSequence
       9: ifeq          19
      12: aload_1
      13: checkcast     #31                 // class java/lang/CharSequence
      16: goto          23
      19: aload_1
      20: invokevirtual #32                 // Method java/lang/Object.toString:()Ljava/lang/String;
      23: areturn

  private static java.lang.Iterable<java.lang.Object> iterable(java.lang.Object, java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_2
       1: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #33                 // class com/google/common/base/Joiner$3
       8: dup
       9: aload_2
      10: aload_0
      11: aload_1
      12: invokespecial #34                 // Method com/google/common/base/Joiner$3."<init>":([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  com.google.common.base.Joiner(com.google.common.base.Joiner, com.google.common.base.Joiner$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lcom/google/common/base/Joiner;)V
       5: return

  static java.lang.String access$100(com.google.common.base.Joiner);
    Code:
       0: aload_0
       1: getfield      #1                  // Field separator:Ljava/lang/String;
       4: areturn
}
