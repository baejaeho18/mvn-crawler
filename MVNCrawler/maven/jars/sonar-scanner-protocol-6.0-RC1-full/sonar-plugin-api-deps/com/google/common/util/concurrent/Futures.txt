Compiled from "Futures.java"
public final class com.google.common.util.concurrent.Futures {
  private static final com.google.common.collect.Ordering<java.lang.reflect.Constructor<?>> WITH_STRING_PARAM_FIRST;

  private com.google.common.util.concurrent.Futures();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <V> com.google.common.util.concurrent.UninterruptibleFuture<V> makeUninterruptible(java.util.concurrent.Future<V>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #3                  // class com/google/common/util/concurrent/UninterruptibleFuture
       9: ifeq          17
      12: aload_0
      13: checkcast     #3                  // class com/google/common/util/concurrent/UninterruptibleFuture
      16: areturn
      17: new           #4                  // class com/google/common/util/concurrent/Futures$1
      20: dup
      21: aload_0
      22: invokespecial #5                  // Method com/google/common/util/concurrent/Futures$1."<init>":(Ljava/util/concurrent/Future;)V
      25: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> makeListenable(java.util.concurrent.Future<V>);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method com/google/common/util/concurrent/JdkFutureAdapters.listenInPoolThread:(Ljava/util/concurrent/Future;)Lcom/google/common/util/concurrent/ListenableFuture;
       4: areturn

  public static <V, X extends java.lang.Exception> com.google.common.util.concurrent.CheckedFuture<V, X> makeChecked(java.util.concurrent.Future<V>, com.google.common.base.Function<java.lang.Exception, X>);
    Code:
       0: new           #7                  // class com/google/common/util/concurrent/Futures$MappingCheckedFuture
       3: dup
       4: aload_0
       5: invokestatic  #8                  // Method makeListenable:(Ljava/util/concurrent/Future;)Lcom/google/common/util/concurrent/ListenableFuture;
       8: aload_1
       9: invokespecial #9                  // Method com/google/common/util/concurrent/Futures$MappingCheckedFuture."<init>":(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;)V
      12: areturn

  public static <V, X extends java.lang.Exception> com.google.common.util.concurrent.CheckedFuture<V, X> makeChecked(com.google.common.util.concurrent.ListenableFuture<V>, com.google.common.base.Function<java.lang.Exception, X>);
    Code:
       0: new           #7                  // class com/google/common/util/concurrent/Futures$MappingCheckedFuture
       3: dup
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class com/google/common/util/concurrent/ListenableFuture
      11: aload_1
      12: invokespecial #9                  // Method com/google/common/util/concurrent/Futures$MappingCheckedFuture."<init>":(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;)V
      15: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> immediateFuture(V);
    Code:
       0: invokestatic  #11                 // Method com/google/common/util/concurrent/SettableFuture.create:()Lcom/google/common/util/concurrent/SettableFuture;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #12                 // Method com/google/common/util/concurrent/SettableFuture.set:(Ljava/lang/Object;)Z
       9: pop
      10: aload_1
      11: areturn

  public static <V, X extends java.lang.Exception> com.google.common.util.concurrent.CheckedFuture<V, X> immediateCheckedFuture(V);
    Code:
       0: invokestatic  #11                 // Method com/google/common/util/concurrent/SettableFuture.create:()Lcom/google/common/util/concurrent/SettableFuture;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #12                 // Method com/google/common/util/concurrent/SettableFuture.set:(Ljava/lang/Object;)Z
       9: pop
      10: aload_1
      11: new           #13                 // class com/google/common/util/concurrent/Futures$2
      14: dup
      15: invokespecial #14                 // Method com/google/common/util/concurrent/Futures$2."<init>":()V
      18: invokestatic  #15                 // Method makeChecked:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;)Lcom/google/common/util/concurrent/CheckedFuture;
      21: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> immediateFailedFuture(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #11                 // Method com/google/common/util/concurrent/SettableFuture.create:()Lcom/google/common/util/concurrent/SettableFuture;
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #16                 // Method com/google/common/util/concurrent/SettableFuture.setException:(Ljava/lang/Throwable;)Z
      14: pop
      15: aload_1
      16: areturn

  public static <V, X extends java.lang.Exception> com.google.common.util.concurrent.CheckedFuture<V, X> immediateFailedCheckedFuture(X);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokestatic  #17                 // Method immediateFailedFuture:(Ljava/lang/Throwable;)Lcom/google/common/util/concurrent/ListenableFuture;
       9: new           #18                 // class com/google/common/util/concurrent/Futures$3
      12: dup
      13: aload_0
      14: invokespecial #19                 // Method com/google/common/util/concurrent/Futures$3."<init>":(Ljava/lang/Exception;)V
      17: invokestatic  #15                 // Method makeChecked:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;)Lcom/google/common/util/concurrent/CheckedFuture;
      20: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> chain(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.base.Function<? super I, ? extends com.google.common.util.concurrent.ListenableFuture<? extends O>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method com/google/common/util/concurrent/MoreExecutors.sameThreadExecutor:()Lcom/google/common/util/concurrent/ListeningExecutorService;
       5: invokestatic  #21                 // Method chain:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
       8: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> chain(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.base.Function<? super I, ? extends com.google.common.util.concurrent.ListenableFuture<? extends O>>, java.util.concurrent.Executor);
    Code:
       0: new           #22                 // class com/google/common/util/concurrent/Futures$ChainingListenableFuture
       3: dup
       4: aload_1
       5: aload_0
       6: aconst_null
       7: invokespecial #23                 // Method com/google/common/util/concurrent/Futures$ChainingListenableFuture."<init>":(Lcom/google/common/base/Function;Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/Futures$1;)V
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_2
      14: invokeinterface #24,  3           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      19: aload_3
      20: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> transform(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.base.Function<? super I, ? extends O>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method com/google/common/util/concurrent/MoreExecutors.sameThreadExecutor:()Lcom/google/common/util/concurrent/ListeningExecutorService;
       5: invokestatic  #25                 // Method transform:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
       8: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> transform(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.base.Function<? super I, ? extends O>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #26                 // class com/google/common/util/concurrent/Futures$4
       8: dup
       9: aload_1
      10: invokespecial #27                 // Method com/google/common/util/concurrent/Futures$4."<init>":(Lcom/google/common/base/Function;)V
      13: astore_3
      14: aload_0
      15: aload_3
      16: aload_2
      17: invokestatic  #21                 // Method chain:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
      20: areturn

  public static <I, O> java.util.concurrent.Future<O> lazyTransform(java.util.concurrent.Future<I>, com.google.common.base.Function<? super I, ? extends O>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #28                 // class com/google/common/util/concurrent/Futures$5
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #29                 // Method com/google/common/util/concurrent/Futures$5."<init>":(Ljava/util/concurrent/Future;Lcom/google/common/base/Function;)V
      19: areturn

  public static <I, O> java.util.concurrent.Future<O> transform(java.util.concurrent.Future<I>, com.google.common.base.Function<? super I, ? extends O>);
    Code:
       0: aload_0
       1: instanceof    #10                 // class com/google/common/util/concurrent/ListenableFuture
       4: ifeq          16
       7: aload_0
       8: checkcast     #10                 // class com/google/common/util/concurrent/ListenableFuture
      11: aload_1
      12: invokestatic  #30                 // Method transform:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;)Lcom/google/common/util/concurrent/ListenableFuture;
      15: areturn
      16: aload_0
      17: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_1
      22: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: new           #31                 // class com/google/common/util/concurrent/Futures$6
      29: dup
      30: aload_0
      31: aload_1
      32: invokespecial #32                 // Method com/google/common/util/concurrent/Futures$6."<init>":(Ljava/util/concurrent/Future;Lcom/google/common/base/Function;)V
      35: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>...);
    Code:
       0: new           #33                 // class com/google/common/util/concurrent/Futures$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #34                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       8: iconst_1
       9: invokestatic  #20                 // Method com/google/common/util/concurrent/MoreExecutors.sameThreadExecutor:()Lcom/google/common/util/concurrent/ListeningExecutorService;
      12: invokespecial #35                 // Method com/google/common/util/concurrent/Futures$ListFuture."<init>":(Lcom/google/common/collect/ImmutableList;ZLjava/util/concurrent/Executor;)V
      15: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> allAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>);
    Code:
       0: new           #33                 // class com/google/common/util/concurrent/Futures$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #36                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       8: iconst_1
       9: invokestatic  #20                 // Method com/google/common/util/concurrent/MoreExecutors.sameThreadExecutor:()Lcom/google/common/util/concurrent/ListeningExecutorService;
      12: invokespecial #35                 // Method com/google/common/util/concurrent/Futures$ListFuture."<init>":(Lcom/google/common/collect/ImmutableList;ZLjava/util/concurrent/Executor;)V
      15: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> successfulAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>...);
    Code:
       0: new           #33                 // class com/google/common/util/concurrent/Futures$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #34                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       8: iconst_0
       9: invokestatic  #20                 // Method com/google/common/util/concurrent/MoreExecutors.sameThreadExecutor:()Lcom/google/common/util/concurrent/ListeningExecutorService;
      12: invokespecial #35                 // Method com/google/common/util/concurrent/Futures$ListFuture."<init>":(Lcom/google/common/collect/ImmutableList;ZLjava/util/concurrent/Executor;)V
      15: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>);
    Code:
       0: new           #33                 // class com/google/common/util/concurrent/Futures$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #36                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       8: iconst_0
       9: invokestatic  #20                 // Method com/google/common/util/concurrent/MoreExecutors.sameThreadExecutor:()Lcom/google/common/util/concurrent/ListeningExecutorService;
      12: invokespecial #35                 // Method com/google/common/util/concurrent/Futures$ListFuture."<init>":(Lcom/google/common/collect/ImmutableList;ZLjava/util/concurrent/Executor;)V
      15: areturn

  public static <V> void addCallback(com.google.common.util.concurrent.ListenableFuture<V>, com.google.common.util.concurrent.FutureCallback<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method com/google/common/util/concurrent/MoreExecutors.sameThreadExecutor:()Lcom/google/common/util/concurrent/ListeningExecutorService;
       5: invokestatic  #37                 // Method addCallback:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/FutureCallback;Ljava/util/concurrent/Executor;)V
       8: return

  public static <V> void addCallback(com.google.common.util.concurrent.ListenableFuture<V>, com.google.common.util.concurrent.FutureCallback<? super V>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #38                 // class com/google/common/util/concurrent/Futures$7
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #39                 // Method com/google/common/util/concurrent/Futures$7."<init>":(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/FutureCallback;)V
      14: astore_3
      15: aload_0
      16: aload_3
      17: aload_2
      18: invokeinterface #24,  3           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      23: return

  public static <V, X extends java.lang.Exception> V get(java.util.concurrent.Future<V>, java.lang.Class<X>) throws X;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: ldc_w         #40                 // class java/lang/RuntimeException
       8: aload_1
       9: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #42                 // String Futures.get exception type (%s) must not be a RuntimeException
      22: iconst_1
      23: anewarray     #43                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_1
      29: aastore
      30: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      33: aload_0
      34: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      39: areturn
      40: astore_2
      41: invokestatic  #47                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      44: invokevirtual #48                 // Method java/lang/Thread.interrupt:()V
      47: aload_1
      48: aload_2
      49: invokestatic  #49                 // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      52: athrow
      53: astore_2
      54: aload_2
      55: invokevirtual #51                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      58: aload_1
      59: invokestatic  #52                 // Method wrapAndThrowExceptionOrError:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      62: new           #53                 // class java/lang/AssertionError
      65: dup
      66: invokespecial #54                 // Method java/lang/AssertionError."<init>":()V
      69: athrow
    Exception table:
       from    to  target type
          33    39    40   Class java/lang/InterruptedException
          33    39    53   Class java/util/concurrent/ExecutionException

  public static <V, X extends java.lang.Exception> V get(java.util.concurrent.Future<V>, long, java.util.concurrent.TimeUnit, java.lang.Class<X>) throws X;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_3
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: ldc_w         #40                 // class java/lang/RuntimeException
      13: aload         4
      15: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #42                 // String Futures.get exception type (%s) must not be a RuntimeException
      28: iconst_1
      29: anewarray     #43                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload         4
      36: aastore
      37: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      40: aload_0
      41: lload_1
      42: aload_3
      43: invokeinterface #55,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      48: areturn
      49: astore        5
      51: invokestatic  #47                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      54: invokevirtual #48                 // Method java/lang/Thread.interrupt:()V
      57: aload         4
      59: aload         5
      61: invokestatic  #49                 // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      64: athrow
      65: astore        5
      67: aload         4
      69: aload         5
      71: invokestatic  #49                 // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      74: athrow
      75: astore        5
      77: aload         5
      79: invokevirtual #51                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      82: aload         4
      84: invokestatic  #52                 // Method wrapAndThrowExceptionOrError:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      87: new           #53                 // class java/lang/AssertionError
      90: dup
      91: invokespecial #54                 // Method java/lang/AssertionError."<init>":()V
      94: athrow
    Exception table:
       from    to  target type
          40    48    49   Class java/lang/InterruptedException
          40    48    65   Class java/util/concurrent/TimeoutException
          40    48    75   Class java/util/concurrent/ExecutionException

  private static <X extends java.lang.Exception> void wrapAndThrowExceptionOrError(java.lang.Throwable, java.lang.Class<X>) throws X;
    Code:
       0: aload_0
       1: instanceof    #57                 // class java/lang/Error
       4: ifeq          19
       7: new           #58                 // class com/google/common/util/concurrent/ExecutionError
      10: dup
      11: aload_0
      12: checkcast     #57                 // class java/lang/Error
      15: invokespecial #59                 // Method com/google/common/util/concurrent/ExecutionError."<init>":(Ljava/lang/Error;)V
      18: athrow
      19: aload_0
      20: instanceof    #40                 // class java/lang/RuntimeException
      23: ifeq          35
      26: new           #60                 // class com/google/common/util/concurrent/UncheckedExecutionException
      29: dup
      30: aload_0
      31: invokespecial #61                 // Method com/google/common/util/concurrent/UncheckedExecutionException."<init>":(Ljava/lang/Throwable;)V
      34: athrow
      35: aload_1
      36: aload_0
      37: invokestatic  #49                 // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      40: athrow

  public static <V> V getUnchecked(java.util.concurrent.Future<V>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokestatic  #62                 // Method com/google/common/util/concurrent/Uninterruptibles.getUninterruptibly:(Ljava/util/concurrent/Future;)Ljava/lang/Object;
       9: areturn
      10: astore_1
      11: aload_1
      12: invokevirtual #51                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      15: invokestatic  #63                 // Method wrapAndThrowUnchecked:(Ljava/lang/Throwable;)V
      18: new           #53                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #54                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
    Exception table:
       from    to  target type
           5     9    10   Class java/util/concurrent/ExecutionException

  private static void wrapAndThrowUnchecked(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #57                 // class java/lang/Error
       4: ifeq          19
       7: new           #58                 // class com/google/common/util/concurrent/ExecutionError
      10: dup
      11: aload_0
      12: checkcast     #57                 // class java/lang/Error
      15: invokespecial #59                 // Method com/google/common/util/concurrent/ExecutionError."<init>":(Ljava/lang/Error;)V
      18: athrow
      19: new           #60                 // class com/google/common/util/concurrent/UncheckedExecutionException
      22: dup
      23: aload_0
      24: invokespecial #61                 // Method com/google/common/util/concurrent/UncheckedExecutionException."<init>":(Ljava/lang/Throwable;)V
      27: athrow

  private static <X extends java.lang.Exception> X newWithCause(java.lang.Class<X>, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method java/lang/Class.getConstructors:()[Ljava/lang/reflect/Constructor;
       4: invokestatic  #65                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokestatic  #66                 // Method preferringStrings:(Ljava/util/List;)Ljava/util/List;
      12: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          75
      27: aload_3
      28: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #70                 // class java/lang/reflect/Constructor
      36: astore        4
      38: aload         4
      40: aload_1
      41: invokestatic  #71                 // Method newFromConstructor:(Ljava/lang/reflect/Constructor;Ljava/lang/Throwable;)Ljava/lang/Object;
      44: checkcast     #72                 // class java/lang/Exception
      47: astore        5
      49: aload         5
      51: ifnull        72
      54: aload         5
      56: invokevirtual #73                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
      59: ifnonnull     69
      62: aload         5
      64: aload_1
      65: invokevirtual #74                 // Method java/lang/Exception.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      68: pop
      69: aload         5
      71: areturn
      72: goto          18
      75: new           #75                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #76                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #78                 // String No appropriate constructor for exception of type
      88: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: ldc           #81                 // String  in response to chained exception
      97: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aload_1
     104: invokespecial #83                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     107: athrow

  private static <X extends java.lang.Exception> java.util.List<java.lang.reflect.Constructor<X>> preferringStrings(java.util.List<java.lang.reflect.Constructor<X>>);
    Code:
       0: getstatic     #84                 // Field WITH_STRING_PARAM_FIRST:Lcom/google/common/collect/Ordering;
       3: aload_0
       4: invokevirtual #85                 // Method com/google/common/collect/Ordering.sortedCopy:(Ljava/lang/Iterable;)Ljava/util/List;
       7: areturn

  private static <X> X newFromConstructor(java.lang.reflect.Constructor<X>, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: arraylength
       7: anewarray     #43                 // class java/lang/Object
      10: astore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: aload_2
      17: arraylength
      18: if_icmpge     76
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload         5
      29: ldc_w         #87                 // class java/lang/String
      32: invokevirtual #88                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          49
      38: aload_3
      39: iload         4
      41: aload_1
      42: invokevirtual #89                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
      45: aastore
      46: goto          70
      49: aload         5
      51: ldc_w         #90                 // class java/lang/Throwable
      54: invokevirtual #88                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      57: ifeq          68
      60: aload_3
      61: iload         4
      63: aload_1
      64: aastore
      65: goto          70
      68: aconst_null
      69: areturn
      70: iinc          4, 1
      73: goto          14
      76: aload_0
      77: aload_3
      78: invokevirtual #91                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      81: areturn
      82: astore        4
      84: aconst_null
      85: areturn
      86: astore        4
      88: aconst_null
      89: areturn
      90: astore        4
      92: aconst_null
      93: areturn
      94: astore        4
      96: aconst_null
      97: areturn
    Exception table:
       from    to  target type
          76    81    82   Class java/lang/IllegalArgumentException
          76    81    86   Class java/lang/InstantiationException
          76    81    90   Class java/lang/IllegalAccessException
          76    81    94   Class java/lang/reflect/InvocationTargetException

  static {};
    Code:
       0: invokestatic  #95                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       3: new           #96                 // class com/google/common/util/concurrent/Futures$8
       6: dup
       7: invokespecial #97                 // Method com/google/common/util/concurrent/Futures$8."<init>":()V
      10: invokevirtual #98                 // Method com/google/common/collect/Ordering.onResultOf:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Ordering;
      13: invokevirtual #99                 // Method com/google/common/collect/Ordering.reverse:()Lcom/google/common/collect/Ordering;
      16: putstatic     #84                 // Field WITH_STRING_PARAM_FIRST:Lcom/google/common/collect/Ordering;
      19: return
}
