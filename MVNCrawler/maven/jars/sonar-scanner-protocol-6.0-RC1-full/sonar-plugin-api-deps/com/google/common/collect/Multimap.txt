Compiled from "Multimap.java"
public interface com.google.common.collect.Multimap<K, V> {
  public abstract int size();

  public abstract boolean isEmpty();

  public abstract boolean containsKey(java.lang.Object);

  public abstract boolean containsValue(java.lang.Object);

  public abstract boolean containsEntry(java.lang.Object, java.lang.Object);

  public abstract boolean put(K, V);

  public abstract boolean remove(java.lang.Object, java.lang.Object);

  public abstract boolean putAll(K, java.lang.Iterable<? extends V>);

  public abstract boolean putAll(com.google.common.collect.Multimap<? extends K, ? extends V>);

  public abstract java.util.Collection<V> replaceValues(K, java.lang.Iterable<? extends V>);

  public abstract java.util.Collection<V> removeAll(java.lang.Object);

  public abstract void clear();

  public abstract java.util.Collection<V> get(K);

  public abstract java.util.Set<K> keySet();

  public abstract com.google.common.collect.Multiset<K> keys();

  public abstract java.util.Collection<V> values();

  public abstract java.util.Collection<java.util.Map$Entry<K, V>> entries();

  public abstract java.util.Map<K, java.util.Collection<V>> asMap();

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();
}
