Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.collect.CustomConcurrentHashMap$SoftExpirableEvictableEntry<K, V> extends com.google.common.collect.CustomConcurrentHashMap$SoftEntry<K, V> implements com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> {
  volatile long time;

  com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> nextExpirable;

  com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> previousExpirable;

  com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> nextEvictable;

  com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> previousEvictable;

  com.google.common.collect.CustomConcurrentHashMap$SoftExpirableEvictableEntry(java.lang.ref.ReferenceQueue<K>, K, int, com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokespecial #2                  // Method com/google/common/collect/CustomConcurrentHashMap$SoftEntry."<init>":(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;)V
       9: aload_0
      10: ldc2_w        #3                  // long 9223372036854775807l
      13: putfield      #5                  // Field time:J
      16: aload_0
      17: invokestatic  #6                  // Method com/google/common/collect/CustomConcurrentHashMap.nullEntry:()Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      20: putfield      #7                  // Field nextExpirable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      23: aload_0
      24: invokestatic  #6                  // Method com/google/common/collect/CustomConcurrentHashMap.nullEntry:()Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      27: putfield      #8                  // Field previousExpirable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      30: aload_0
      31: invokestatic  #6                  // Method com/google/common/collect/CustomConcurrentHashMap.nullEntry:()Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      34: putfield      #9                  // Field nextEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      37: aload_0
      38: invokestatic  #6                  // Method com/google/common/collect/CustomConcurrentHashMap.nullEntry:()Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      41: putfield      #10                 // Field previousEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      44: return

  public long getExpirationTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field time:J
       4: lreturn

  public void setExpirationTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field time:J
       5: return

  public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getNextExpirable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nextExpirable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       4: areturn

  public void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field nextExpirable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       5: return

  public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getPreviousExpirable();
    Code:
       0: aload_0
       1: getfield      #8                  // Field previousExpirable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       4: areturn

  public void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field previousExpirable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       5: return

  public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getNextEvictable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field nextEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       4: areturn

  public void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field nextEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       5: return

  public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getPreviousEvictable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field previousEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       4: areturn

  public void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field previousEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       5: return
}
