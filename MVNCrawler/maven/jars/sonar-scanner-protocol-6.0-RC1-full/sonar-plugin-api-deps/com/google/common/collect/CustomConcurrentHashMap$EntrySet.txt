Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.collect.CustomConcurrentHashMap$EntrySet extends java.util.AbstractSet<java.util.Map$Entry<K, V>> {
  final com.google.common.collect.CustomConcurrentHashMap this$0;

  com.google.common.collect.CustomConcurrentHashMap$EntrySet(com.google.common.collect.CustomConcurrentHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: new           #3                  // class com/google/common/collect/CustomConcurrentHashMap$EntryIterator
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
       8: invokespecial #4                  // Method com/google/common/collect/CustomConcurrentHashMap$EntryIterator."<init>":(Lcom/google/common/collect/CustomConcurrentHashMap;)V
      11: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #5                  // class java/util/Map$Entry
      13: astore_2
      14: aload_2
      15: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: astore_3
      21: aload_3
      22: ifnonnull     27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
      31: aload_3
      32: invokevirtual #7                  // Method com/google/common/collect/CustomConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        4
      37: aload         4
      39: ifnull        67
      42: aload_0
      43: getfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
      46: getfield      #8                  // Field com/google/common/collect/CustomConcurrentHashMap.valueEquivalence:Lcom/google/common/base/Equivalence;
      49: aload_2
      50: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: aload         4
      57: invokevirtual #10                 // Method com/google/common/base/Equivalence.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #5                  // class java/util/Map$Entry
      13: astore_2
      14: aload_2
      15: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: astore_3
      21: aload_3
      22: ifnull        46
      25: aload_0
      26: getfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
      29: aload_3
      30: aload_2
      31: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      36: invokevirtual #11                 // Method com/google/common/collect/CustomConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
       4: invokevirtual #12                 // Method com/google/common/collect/CustomConcurrentHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
       4: invokevirtual #13                 // Method com/google/common/collect/CustomConcurrentHashMap.isEmpty:()Z
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/CustomConcurrentHashMap;
       4: invokevirtual #14                 // Method com/google/common/collect/CustomConcurrentHashMap.clear:()V
       7: return
}
