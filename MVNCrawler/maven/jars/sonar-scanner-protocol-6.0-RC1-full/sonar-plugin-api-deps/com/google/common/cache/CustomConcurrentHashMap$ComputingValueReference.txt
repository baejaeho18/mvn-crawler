Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.cache.CustomConcurrentHashMap$ComputingValueReference<K, V> implements com.google.common.cache.CustomConcurrentHashMap$ValueReference<K, V> {
  final com.google.common.cache.CacheLoader<? super K, V> loader;

  volatile com.google.common.cache.CustomConcurrentHashMap$ComputedValue<V> computedValue;

  public com.google.common.cache.CustomConcurrentHashMap$ComputingValueReference(com.google.common.cache.CacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field computedValue:Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field loader:Lcom/google/common/cache/CacheLoader;
      14: return

  public boolean isComputingReference();
    Code:
       0: iconst_1
       1: ireturn

  public V waitForValue() throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field computedValue:Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;
       4: ifnonnull     73
       7: iconst_0
       8: istore_1
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #2                  // Field computedValue:Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;
      17: ifnonnull     33
      20: aload_0
      21: invokevirtual #4                  // Method java/lang/Object.wait:()V
      24: goto          13
      27: astore_3
      28: iconst_1
      29: istore_1
      30: goto          13
      33: aload_2
      34: monitorexit
      35: goto          45
      38: astore        4
      40: aload_2
      41: monitorexit
      42: aload         4
      44: athrow
      45: iload_1
      46: ifeq          73
      49: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      52: invokevirtual #7                  // Method java/lang/Thread.interrupt:()V
      55: goto          73
      58: astore        5
      60: iload_1
      61: ifeq          70
      64: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      67: invokevirtual #7                  // Method java/lang/Thread.interrupt:()V
      70: aload         5
      72: athrow
      73: aload_0
      74: getfield      #2                  // Field computedValue:Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;
      77: invokeinterface #8,  1            // InterfaceMethod com/google/common/cache/CustomConcurrentHashMap$ComputedValue.get:()Ljava/lang/Object;
      82: areturn
    Exception table:
       from    to  target type
          20    24    27   Class java/lang/InterruptedException
          13    35    38   any
          38    42    38   any
           9    45    58   any
          58    60    58   any

  public void notifyNewValue(V);
    Code:
       0: aload_0
       1: new           #9                  // class com/google/common/cache/CustomConcurrentHashMap$ComputedReference
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method com/google/common/cache/CustomConcurrentHashMap$ComputedReference."<init>":(Ljava/lang/Object;)V
       9: invokevirtual #11                 // Method setComputedValue:(Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;)V
      12: return

  V compute(K, int) throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field loader:Lcom/google/common/cache/CacheLoader;
       4: aload_1
       5: invokevirtual #12                 // Method com/google/common/cache/CacheLoader.load:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore        4
      10: aload         4
      12: ifnonnull     31
      15: new           #13                 // class com/google/common/cache/CustomConcurrentHashMap$ComputedNull
      18: dup
      19: aload_0
      20: getfield      #3                  // Field loader:Lcom/google/common/cache/CacheLoader;
      23: aload_1
      24: invokespecial #14                 // Method com/google/common/cache/CustomConcurrentHashMap$ComputedNull."<init>":(Lcom/google/common/cache/CacheLoader;Ljava/lang/Object;)V
      27: astore_3
      28: goto          41
      31: new           #9                  // class com/google/common/cache/CustomConcurrentHashMap$ComputedReference
      34: dup
      35: aload         4
      37: invokespecial #10                 // Method com/google/common/cache/CustomConcurrentHashMap$ComputedReference."<init>":(Ljava/lang/Object;)V
      40: astore_3
      41: goto          86
      44: astore        4
      46: new           #16                 // class com/google/common/cache/CustomConcurrentHashMap$ComputedUncheckedException
      49: dup
      50: aload         4
      52: invokespecial #17                 // Method com/google/common/cache/CustomConcurrentHashMap$ComputedUncheckedException."<init>":(Ljava/lang/RuntimeException;)V
      55: astore_3
      56: goto          86
      59: astore        4
      61: new           #19                 // class com/google/common/cache/CustomConcurrentHashMap$ComputedException
      64: dup
      65: aload         4
      67: invokespecial #20                 // Method com/google/common/cache/CustomConcurrentHashMap$ComputedException."<init>":(Ljava/lang/Exception;)V
      70: astore_3
      71: goto          86
      74: astore        4
      76: new           #22                 // class com/google/common/cache/CustomConcurrentHashMap$ComputedError
      79: dup
      80: aload         4
      82: invokespecial #23                 // Method com/google/common/cache/CustomConcurrentHashMap$ComputedError."<init>":(Ljava/lang/Error;)V
      85: astore_3
      86: aload_0
      87: aload_3
      88: invokevirtual #11                 // Method setComputedValue:(Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;)V
      91: aload_3
      92: invokeinterface #8,  1            // InterfaceMethod com/google/common/cache/CustomConcurrentHashMap$ComputedValue.get:()Ljava/lang/Object;
      97: areturn
    Exception table:
       from    to  target type
           0    41    44   Class java/lang/RuntimeException
           0    41    59   Class java/lang/Exception
           0    41    74   Class java/lang/Error

  void setComputedValue(com.google.common.cache.CustomConcurrentHashMap$ComputedValue<V>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #2                  // Field computedValue:Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;
       8: ifnonnull     20
      11: aload_0
      12: aload_1
      13: putfield      #2                  // Field computedValue:Lcom/google/common/cache/CustomConcurrentHashMap$ComputedValue;
      16: aload_0
      17: invokevirtual #24                 // Method java/lang/Object.notifyAll:()V
      20: aload_2
      21: monitorexit
      22: goto          30
      25: astore_3
      26: aload_2
      27: monitorexit
      28: aload_3
      29: athrow
      30: return
    Exception table:
       from    to  target type
           4    22    25   any
          25    28    25   any

  public V get();
    Code:
       0: aconst_null
       1: areturn

  public com.google.common.cache.CustomConcurrentHashMap$ReferenceEntry<K, V> getEntry();
    Code:
       0: aconst_null
       1: areturn

  public com.google.common.cache.CustomConcurrentHashMap$ValueReference<K, V> copyFor(java.lang.ref.ReferenceQueue<V>, com.google.common.cache.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: areturn
}
