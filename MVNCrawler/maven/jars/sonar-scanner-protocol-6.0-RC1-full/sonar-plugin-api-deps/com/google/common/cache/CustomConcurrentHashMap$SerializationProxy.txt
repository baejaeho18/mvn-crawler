Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.cache.CustomConcurrentHashMap$SerializationProxy<K, V> extends com.google.common.cache.ForwardingCache<K, V> implements java.io.Serializable {
  private static final long serialVersionUID;

  final com.google.common.cache.CacheLoader<? super K, V> loader;

  final com.google.common.cache.CustomConcurrentHashMap$Strength keyStrength;

  final com.google.common.cache.CustomConcurrentHashMap$Strength valueStrength;

  final com.google.common.base.Equivalence<java.lang.Object> keyEquivalence;

  final com.google.common.base.Equivalence<java.lang.Object> valueEquivalence;

  final long expireAfterWriteNanos;

  final long expireAfterAccessNanos;

  final int maximumSize;

  final int concurrencyLevel;

  final com.google.common.cache.RemovalListener<? super K, ? super V> removalListener;

  final com.google.common.base.Ticker ticker;

  transient com.google.common.cache.Cache<K, V> delegate;

  com.google.common.cache.CustomConcurrentHashMap$SerializationProxy(com.google.common.cache.CacheLoader<? super K, V>, com.google.common.cache.CustomConcurrentHashMap$Strength, com.google.common.cache.CustomConcurrentHashMap$Strength, com.google.common.base.Equivalence<java.lang.Object>, com.google.common.base.Equivalence<java.lang.Object>, long, long, int, int, com.google.common.cache.RemovalListener<? super K, ? super V>, com.google.common.base.Ticker);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/cache/ForwardingCache."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field loader:Lcom/google/common/cache/CacheLoader;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field keyStrength:Lcom/google/common/cache/CustomConcurrentHashMap$Strength;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field valueStrength:Lcom/google/common/cache/CustomConcurrentHashMap$Strength;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field keyEquivalence:Lcom/google/common/base/Equivalence;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field valueEquivalence:Lcom/google/common/base/Equivalence;
      31: aload_0
      32: lload         6
      34: putfield      #8                  // Field expireAfterWriteNanos:J
      37: aload_0
      38: lload         8
      40: putfield      #9                  // Field expireAfterAccessNanos:J
      43: aload_0
      44: iload         10
      46: putfield      #10                 // Field maximumSize:I
      49: aload_0
      50: iload         11
      52: putfield      #11                 // Field concurrencyLevel:I
      55: aload_0
      56: aload         12
      58: putfield      #12                 // Field removalListener:Lcom/google/common/cache/RemovalListener;
      61: aload_0
      62: aload         13
      64: putfield      #13                 // Field ticker:Lcom/google/common/base/Ticker;
      67: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: invokestatic  #15                 // Method com/google/common/cache/CacheBuilder.newBuilder:()Lcom/google/common/cache/CacheBuilder;
       7: aload_0
       8: getfield      #4                  // Field keyStrength:Lcom/google/common/cache/CustomConcurrentHashMap$Strength;
      11: invokevirtual #16                 // Method com/google/common/cache/CacheBuilder.setKeyStrength:(Lcom/google/common/cache/CustomConcurrentHashMap$Strength;)Lcom/google/common/cache/CacheBuilder;
      14: aload_0
      15: getfield      #5                  // Field valueStrength:Lcom/google/common/cache/CustomConcurrentHashMap$Strength;
      18: invokevirtual #17                 // Method com/google/common/cache/CacheBuilder.setValueStrength:(Lcom/google/common/cache/CustomConcurrentHashMap$Strength;)Lcom/google/common/cache/CacheBuilder;
      21: aload_0
      22: getfield      #6                  // Field keyEquivalence:Lcom/google/common/base/Equivalence;
      25: invokevirtual #18                 // Method com/google/common/cache/CacheBuilder.keyEquivalence:(Lcom/google/common/base/Equivalence;)Lcom/google/common/cache/CacheBuilder;
      28: aload_0
      29: getfield      #7                  // Field valueEquivalence:Lcom/google/common/base/Equivalence;
      32: invokevirtual #19                 // Method com/google/common/cache/CacheBuilder.valueEquivalence:(Lcom/google/common/base/Equivalence;)Lcom/google/common/cache/CacheBuilder;
      35: aload_0
      36: getfield      #11                 // Field concurrencyLevel:I
      39: invokevirtual #20                 // Method com/google/common/cache/CacheBuilder.concurrencyLevel:(I)Lcom/google/common/cache/CacheBuilder;
      42: astore_2
      43: aload_2
      44: aload_0
      45: getfield      #12                 // Field removalListener:Lcom/google/common/cache/RemovalListener;
      48: invokevirtual #21                 // Method com/google/common/cache/CacheBuilder.removalListener:(Lcom/google/common/cache/RemovalListener;)Lcom/google/common/cache/CacheBuilder;
      51: pop
      52: aload_0
      53: getfield      #8                  // Field expireAfterWriteNanos:J
      56: lconst_0
      57: lcmp
      58: ifle          73
      61: aload_2
      62: aload_0
      63: getfield      #8                  // Field expireAfterWriteNanos:J
      66: getstatic     #22                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      69: invokevirtual #23                 // Method com/google/common/cache/CacheBuilder.expireAfterWrite:(JLjava/util/concurrent/TimeUnit;)Lcom/google/common/cache/CacheBuilder;
      72: pop
      73: aload_0
      74: getfield      #9                  // Field expireAfterAccessNanos:J
      77: lconst_0
      78: lcmp
      79: ifle          94
      82: aload_2
      83: aload_0
      84: getfield      #9                  // Field expireAfterAccessNanos:J
      87: getstatic     #22                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      90: invokevirtual #24                 // Method com/google/common/cache/CacheBuilder.expireAfterAccess:(JLjava/util/concurrent/TimeUnit;)Lcom/google/common/cache/CacheBuilder;
      93: pop
      94: aload_0
      95: getfield      #10                 // Field maximumSize:I
      98: iconst_m1
      99: if_icmpeq     111
     102: aload_2
     103: aload_0
     104: getfield      #10                 // Field maximumSize:I
     107: invokevirtual #25                 // Method com/google/common/cache/CacheBuilder.maximumSize:(I)Lcom/google/common/cache/CacheBuilder;
     110: pop
     111: aload_0
     112: getfield      #13                 // Field ticker:Lcom/google/common/base/Ticker;
     115: invokestatic  #26                 // Method com/google/common/base/Ticker.systemTicker:()Lcom/google/common/base/Ticker;
     118: if_acmpeq     130
     121: aload_2
     122: aload_0
     123: getfield      #13                 // Field ticker:Lcom/google/common/base/Ticker;
     126: invokevirtual #27                 // Method com/google/common/cache/CacheBuilder.ticker:(Lcom/google/common/base/Ticker;)Lcom/google/common/cache/CacheBuilder;
     129: pop
     130: aload_0
     131: aload_2
     132: aload_0
     133: getfield      #3                  // Field loader:Lcom/google/common/cache/CacheLoader;
     136: invokevirtual #28                 // Method com/google/common/cache/CacheBuilder.build:(Lcom/google/common/cache/CacheLoader;)Lcom/google/common/cache/Cache;
     139: putfield      #29                 // Field delegate:Lcom/google/common/cache/Cache;
     142: return

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #29                 // Field delegate:Lcom/google/common/cache/Cache;
       4: areturn

  protected com.google.common.cache.Cache<K, V> delegate();
    Code:
       0: aload_0
       1: getfield      #29                 // Field delegate:Lcom/google/common/cache/Cache;
       4: areturn

  protected java.lang.Object delegate();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method delegate:()Lcom/google/common/cache/Cache;
       4: areturn
}
