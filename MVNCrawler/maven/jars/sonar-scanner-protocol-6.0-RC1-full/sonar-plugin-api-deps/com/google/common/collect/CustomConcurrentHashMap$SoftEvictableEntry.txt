Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry<K, V> extends com.google.common.collect.CustomConcurrentHashMap$SoftEntry<K, V> implements com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> {
  com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> nextEvictable;

  com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> previousEvictable;

  com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry(java.lang.ref.ReferenceQueue<K>, K, int, com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokespecial #1                  // Method com/google/common/collect/CustomConcurrentHashMap$SoftEntry."<init>":(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;)V
       9: aload_0
      10: invokestatic  #2                  // Method com/google/common/collect/CustomConcurrentHashMap.nullEntry:()Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      13: putfield      #3                  // Field nextEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      16: aload_0
      17: invokestatic  #2                  // Method com/google/common/collect/CustomConcurrentHashMap.nullEntry:()Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      20: putfield      #4                  // Field previousEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
      23: return

  public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getNextEvictable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nextEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       4: areturn

  public void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field nextEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       5: return

  public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V> getPreviousEvictable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field previousEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       4: areturn

  public void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field previousEvictable:Lcom/google/common/collect/CustomConcurrentHashMap$ReferenceEntry;
       5: return
}
