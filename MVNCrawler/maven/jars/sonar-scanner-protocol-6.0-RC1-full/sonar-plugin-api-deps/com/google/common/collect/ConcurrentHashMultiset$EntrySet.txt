Compiled from "ConcurrentHashMultiset.java"
class com.google.common.collect.ConcurrentHashMultiset$EntrySet extends com.google.common.collect.AbstractMultiset$EntrySet {
  final com.google.common.collect.ConcurrentHashMultiset this$0;

  private com.google.common.collect.ConcurrentHashMultiset$EntrySet(com.google.common.collect.ConcurrentHashMultiset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/google/common/collect/ConcurrentHashMultiset;
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method com/google/common/collect/AbstractMultiset$EntrySet."<init>":(Lcom/google/common/collect/AbstractMultiset;)V
      10: return

  com.google.common.collect.ConcurrentHashMultiset<E> multiset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/common/collect/ConcurrentHashMultiset;
       4: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method snapshot:()Ljava/util/List;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
       9: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method snapshot:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: areturn

  private java.util.List<com.google.common.collect.Multiset$Entry<E>> snapshot();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method size:()I
       4: invokestatic  #8                  // Method com/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #9                  // Method iterator:()Ljava/util/Iterator;
      13: invokestatic  #10                 // Method com/google/common/collect/Iterators.addAll:(Ljava/util/Collection;Ljava/util/Iterator;)Z
      16: pop
      17: aload_1
      18: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #11                 // class com/google/common/collect/Multiset$Entry
       4: ifeq          50
       7: aload_1
       8: checkcast     #11                 // class com/google/common/collect/Multiset$Entry
      11: astore_2
      12: aload_2
      13: invokeinterface #12,  1           // InterfaceMethod com/google/common/collect/Multiset$Entry.getElement:()Ljava/lang/Object;
      18: astore_3
      19: aload_2
      20: invokeinterface #13,  1           // InterfaceMethod com/google/common/collect/Multiset$Entry.getCount:()I
      25: istore        4
      27: iload         4
      29: ifeq          50
      32: aload_0
      33: invokevirtual #14                 // Method multiset:()Lcom/google/common/collect/ConcurrentHashMultiset;
      36: astore        5
      38: aload         5
      40: aload_3
      41: iload         4
      43: iconst_0
      44: invokeinterface #15,  4           // InterfaceMethod com/google/common/collect/Multiset.setCount:(Ljava/lang/Object;II)Z
      49: ireturn
      50: iconst_0
      51: ireturn

  com.google.common.collect.Multiset multiset();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method multiset:()Lcom/google/common/collect/ConcurrentHashMultiset;
       4: areturn

  com.google.common.collect.ConcurrentHashMultiset$EntrySet(com.google.common.collect.ConcurrentHashMultiset, com.google.common.collect.ConcurrentHashMultiset$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/google/common/collect/ConcurrentHashMultiset;)V
       5: return
}
