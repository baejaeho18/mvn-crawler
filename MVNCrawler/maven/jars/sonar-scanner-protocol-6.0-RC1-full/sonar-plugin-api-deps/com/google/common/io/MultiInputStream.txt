Compiled from "MultiInputStream.java"
final class com.google.common.io.MultiInputStream extends java.io.InputStream {
  private java.util.Iterator<? extends com.google.common.io.InputSupplier<? extends java.io.InputStream>> it;

  private java.io.InputStream in;

  public com.google.common.io.MultiInputStream(java.util.Iterator<? extends com.google.common.io.InputSupplier<? extends java.io.InputStream>>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field it:Ljava/util/Iterator;
       9: aload_0
      10: invokespecial #3                  // Method advance:()V
      13: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: ifnull        30
       7: aload_0
       8: getfield      #4                  // Field in:Ljava/io/InputStream;
      11: invokevirtual #5                  // Method java/io/InputStream.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field in:Ljava/io/InputStream;
      19: goto          30
      22: astore_1
      23: aload_0
      24: aconst_null
      25: putfield      #4                  // Field in:Ljava/io/InputStream;
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    14    22   any
          22    23    22   any

  private void advance() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method close:()V
       4: aload_0
       5: getfield      #2                  // Field it:Ljava/util/Iterator;
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          40
      16: aload_0
      17: aload_0
      18: getfield      #2                  // Field it:Ljava/util/Iterator;
      21: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #9                  // class com/google/common/io/InputSupplier
      29: invokeinterface #10,  1           // InterfaceMethod com/google/common/io/InputSupplier.getInput:()Ljava/lang/Object;
      34: checkcast     #11                 // class java/io/InputStream
      37: putfield      #4                  // Field in:Ljava/io/InputStream;
      40: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field in:Ljava/io/InputStream;
      13: invokevirtual #12                 // Method java/io/InputStream.available:()I
      16: ireturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field in:Ljava/io/InputStream;
      13: invokevirtual #13                 // Method java/io/InputStream.read:()I
      16: istore_1
      17: iload_1
      18: iconst_m1
      19: if_icmpne     31
      22: aload_0
      23: invokespecial #3                  // Method advance:()V
      26: aload_0
      27: invokevirtual #14                 // Method read:()I
      30: ireturn
      31: iload_1
      32: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field in:Ljava/io/InputStream;
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #15                 // Method java/io/InputStream.read:([BII)I
      19: istore        4
      21: iload         4
      23: iconst_m1
      24: if_icmpne     39
      27: aload_0
      28: invokespecial #3                  // Method advance:()V
      31: aload_0
      32: aload_1
      33: iload_2
      34: iload_3
      35: invokevirtual #16                 // Method read:([BII)I
      38: ireturn
      39: iload         4
      41: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: ifnull        13
       7: lload_1
       8: lconst_0
       9: lcmp
      10: ifgt          15
      13: lconst_0
      14: lreturn
      15: aload_0
      16: getfield      #4                  // Field in:Ljava/io/InputStream;
      19: lload_1
      20: invokevirtual #17                 // Method java/io/InputStream.skip:(J)J
      23: lstore_3
      24: lload_3
      25: lconst_0
      26: lcmp
      27: ifeq          32
      30: lload_3
      31: lreturn
      32: aload_0
      33: invokevirtual #14                 // Method read:()I
      36: iconst_m1
      37: if_icmpne     42
      40: lconst_0
      41: lreturn
      42: lconst_1
      43: aload_0
      44: getfield      #4                  // Field in:Ljava/io/InputStream;
      47: lload_1
      48: lconst_1
      49: lsub
      50: invokevirtual #17                 // Method java/io/InputStream.skip:(J)J
      53: ladd
      54: lreturn
}
