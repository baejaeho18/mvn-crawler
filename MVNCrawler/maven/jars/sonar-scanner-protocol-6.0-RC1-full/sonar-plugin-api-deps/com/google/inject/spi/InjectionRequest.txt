Compiled from "InjectionRequest.java"
public final class com.google.inject.spi.InjectionRequest<T> implements com.google.inject.spi.Element {
  private final java.lang.Object source;

  private final com.google.inject.TypeLiteral<T> type;

  private final T instance;

  public com.google.inject.spi.InjectionRequest(java.lang.Object, com.google.inject.TypeLiteral<T>, T);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #21                 // String source
       8: invokestatic  #27                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: putfield      #29                 // Field source:Ljava/lang/Object;
      14: aload_0
      15: aload_2
      16: ldc           #30                 // String type
      18: invokestatic  #27                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #32                 // class com/google/inject/TypeLiteral
      24: putfield      #34                 // Field type:Lcom/google/inject/TypeLiteral;
      27: aload_0
      28: aload_3
      29: ldc           #35                 // String instance
      31: invokestatic  #27                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: putfield      #37                 // Field instance:Ljava/lang/Object;
      37: return

  public java.lang.Object getSource();
    Code:
       0: aload_0
       1: getfield      #29                 // Field source:Ljava/lang/Object;
       4: areturn

  public T getInstance();
    Code:
       0: aload_0
       1: getfield      #37                 // Field instance:Ljava/lang/Object;
       4: areturn

  public com.google.inject.TypeLiteral<T> getType();
    Code:
       0: aload_0
       1: getfield      #34                 // Field type:Lcom/google/inject/TypeLiteral;
       4: areturn

  public java.util.Set<com.google.inject.spi.InjectionPoint> getInjectionPoints() throws com.google.inject.ConfigurationException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field instance:Ljava/lang/Object;
       4: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokestatic  #59                 // Method com/google/inject/spi/InjectionPoint.forInstanceMethodsAndFields:(Ljava/lang/Class;)Ljava/util/Set;
      10: areturn

  public <R> R acceptVisitor(com.google.inject.spi.ElementVisitor<R>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #67,  2           // InterfaceMethod com/google/inject/spi/ElementVisitor.visit:(Lcom/google/inject/spi/InjectionRequest;)Ljava/lang/Object;
       7: areturn

  public void applyTo(com.google.inject.Binder);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #74                 // Method getSource:()Ljava/lang/Object;
       5: invokeinterface #80,  2           // InterfaceMethod com/google/inject/Binder.withSource:(Ljava/lang/Object;)Lcom/google/inject/Binder;
      10: aload_0
      11: getfield      #34                 // Field type:Lcom/google/inject/TypeLiteral;
      14: aload_0
      15: getfield      #37                 // Field instance:Ljava/lang/Object;
      18: invokeinterface #84,  3           // InterfaceMethod com/google/inject/Binder.requestInjection:(Lcom/google/inject/TypeLiteral;Ljava/lang/Object;)V
      23: return
}
