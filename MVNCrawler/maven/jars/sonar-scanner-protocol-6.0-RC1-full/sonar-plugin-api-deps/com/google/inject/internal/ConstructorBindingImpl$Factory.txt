Compiled from "ConstructorBindingImpl.java"
class com.google.inject.internal.ConstructorBindingImpl$Factory<T> implements com.google.inject.internal.InternalFactory<T> {
  private final boolean failIfNotLinked;

  private final com.google.inject.Key<?> key;

  private boolean allowCircularProxy;

  private com.google.inject.internal.ConstructorInjector<T> constructorInjector;

  private com.google.inject.internal.ProvisionListenerStackCallback<T> provisionCallback;

  com.google.inject.internal.ConstructorBindingImpl$Factory(boolean, com.google.inject.Key<?>);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #30                 // Field failIfNotLinked:Z
       9: aload_0
      10: aload_2
      11: putfield      #32                 // Field key:Lcom/google/inject/Key;
      14: return

  public T get(com.google.inject.internal.Errors, com.google.inject.internal.InternalContext, com.google.inject.spi.Dependency<?>, boolean) throws com.google.inject.internal.ErrorsException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field constructorInjector:Lcom/google/inject/internal/ConstructorInjector;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #43                 // String Constructor not ready
      14: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #30                 // Field failIfNotLinked:Z
      21: ifeq          41
      24: iload         4
      26: ifne          41
      29: aload_1
      30: aload_0
      31: getfield      #32                 // Field key:Lcom/google/inject/Key;
      34: invokevirtual #55                 // Method com/google/inject/internal/Errors.jitDisabled:(Lcom/google/inject/Key;)Lcom/google/inject/internal/Errors;
      37: invokevirtual #59                 // Method com/google/inject/internal/Errors.toException:()Lcom/google/inject/internal/ErrorsException;
      40: athrow
      41: aload_0
      42: getfield      #41                 // Field constructorInjector:Lcom/google/inject/internal/ConstructorInjector;
      45: aload_1
      46: aload_2
      47: aload_3
      48: invokevirtual #65                 // Method com/google/inject/spi/Dependency.getKey:()Lcom/google/inject/Key;
      51: invokevirtual #71                 // Method com/google/inject/Key.getTypeLiteral:()Lcom/google/inject/TypeLiteral;
      54: invokevirtual #77                 // Method com/google/inject/TypeLiteral.getRawType:()Ljava/lang/Class;
      57: aload_0
      58: getfield      #79                 // Field allowCircularProxy:Z
      61: aload_0
      62: getfield      #81                 // Field provisionCallback:Lcom/google/inject/internal/ProvisionListenerStackCallback;
      65: invokevirtual #87                 // Method com/google/inject/internal/ConstructorInjector.construct:(Lcom/google/inject/internal/Errors;Lcom/google/inject/internal/InternalContext;Ljava/lang/Class;ZLcom/google/inject/internal/ProvisionListenerStackCallback;)Ljava/lang/Object;
      68: areturn

  static com.google.inject.internal.ConstructorInjector access$002(com.google.inject.internal.ConstructorBindingImpl$Factory, com.google.inject.internal.ConstructorInjector);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #41                 // Field constructorInjector:Lcom/google/inject/internal/ConstructorInjector;
       6: areturn

  static boolean access$102(com.google.inject.internal.ConstructorBindingImpl$Factory, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #79                 // Field allowCircularProxy:Z
       6: ireturn

  static com.google.inject.internal.ProvisionListenerStackCallback access$202(com.google.inject.internal.ConstructorBindingImpl$Factory, com.google.inject.internal.ProvisionListenerStackCallback);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #81                 // Field provisionCallback:Lcom/google/inject/internal/ProvisionListenerStackCallback;
       6: areturn

  static com.google.inject.internal.ConstructorInjector access$000(com.google.inject.internal.ConstructorBindingImpl$Factory);
    Code:
       0: aload_0
       1: getfield      #41                 // Field constructorInjector:Lcom/google/inject/internal/ConstructorInjector;
       4: areturn
}
