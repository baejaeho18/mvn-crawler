Compiled from "Binder.java"
public interface com.google.inject.Binder {
  public abstract void bindScope(java.lang.Class<? extends java.lang.annotation.Annotation>, com.google.inject.Scope);

  public abstract <T> com.google.inject.binder.LinkedBindingBuilder<T> bind(com.google.inject.Key<T>);

  public abstract <T> com.google.inject.binder.AnnotatedBindingBuilder<T> bind(com.google.inject.TypeLiteral<T>);

  public abstract <T> com.google.inject.binder.AnnotatedBindingBuilder<T> bind(java.lang.Class<T>);

  public abstract com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant();

  public abstract <T> void requestInjection(com.google.inject.TypeLiteral<T>, T);

  public abstract void requestInjection(java.lang.Object);

  public abstract void requestStaticInjection(java.lang.Class<?>...);

  public abstract void install(com.google.inject.Module);

  public abstract com.google.inject.Stage currentStage();

  public abstract void addError(java.lang.String, java.lang.Object...);

  public abstract void addError(java.lang.Throwable);

  public abstract void addError(com.google.inject.spi.Message);

  public abstract <T> com.google.inject.Provider<T> getProvider(com.google.inject.Key<T>);

  public abstract <T> com.google.inject.Provider<T> getProvider(java.lang.Class<T>);

  public abstract <T> com.google.inject.MembersInjector<T> getMembersInjector(com.google.inject.TypeLiteral<T>);

  public abstract <T> com.google.inject.MembersInjector<T> getMembersInjector(java.lang.Class<T>);

  public abstract void convertToTypes(com.google.inject.matcher.Matcher<? super com.google.inject.TypeLiteral<?>>, com.google.inject.spi.TypeConverter);

  public abstract void bindListener(com.google.inject.matcher.Matcher<? super com.google.inject.TypeLiteral<?>>, com.google.inject.spi.TypeListener);

  public abstract void bindListener(com.google.inject.matcher.Matcher<? super com.google.inject.Key<?>>, com.google.inject.spi.ProvisionListener...);

  public abstract com.google.inject.Binder withSource(java.lang.Object);

  public abstract com.google.inject.Binder skipSources(java.lang.Class...);

  public abstract com.google.inject.PrivateBinder newPrivateBinder();

  public abstract void requireExplicitBindings();

  public abstract void disableCircularProxies();
}
