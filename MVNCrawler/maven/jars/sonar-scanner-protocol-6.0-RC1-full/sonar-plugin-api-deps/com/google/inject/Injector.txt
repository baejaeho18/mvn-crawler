Compiled from "Injector.java"
public interface com.google.inject.Injector {
  public abstract void injectMembers(java.lang.Object);

  public abstract <T> com.google.inject.MembersInjector<T> getMembersInjector(com.google.inject.TypeLiteral<T>);

  public abstract <T> com.google.inject.MembersInjector<T> getMembersInjector(java.lang.Class<T>);

  public abstract java.util.Map<com.google.inject.Key<?>, com.google.inject.Binding<?>> getBindings();

  public abstract java.util.Map<com.google.inject.Key<?>, com.google.inject.Binding<?>> getAllBindings();

  public abstract <T> com.google.inject.Binding<T> getBinding(com.google.inject.Key<T>);

  public abstract <T> com.google.inject.Binding<T> getBinding(java.lang.Class<T>);

  public abstract <T> com.google.inject.Binding<T> getExistingBinding(com.google.inject.Key<T>);

  public abstract <T> java.util.List<com.google.inject.Binding<T>> findBindingsByType(com.google.inject.TypeLiteral<T>);

  public abstract <T> com.google.inject.Provider<T> getProvider(com.google.inject.Key<T>);

  public abstract <T> com.google.inject.Provider<T> getProvider(java.lang.Class<T>);

  public abstract <T> T getInstance(com.google.inject.Key<T>);

  public abstract <T> T getInstance(java.lang.Class<T>);

  public abstract com.google.inject.Injector getParent();

  public abstract com.google.inject.Injector createChildInjector(java.lang.Iterable<? extends com.google.inject.Module>);

  public abstract com.google.inject.Injector createChildInjector(com.google.inject.Module...);

  public abstract java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, com.google.inject.Scope> getScopeBindings();

  public abstract java.util.Set<com.google.inject.spi.TypeConverterBinding> getTypeConverterBindings();
}
