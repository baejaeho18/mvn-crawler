Compiled from "Modules.java"
class com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 extends com.google.inject.util.Modules$ModuleWriter {
  final java.util.Set val$overridesScopeAnnotations;

  final java.util.Map val$scopeInstancesInUse;

  final com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1;

  com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1, com.google.inject.Binder, java.util.Set, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field this$1:Lcom/google/inject/util/Modules$RealOverriddenModuleBuilder$1;
       5: aload_0
       6: aload_3
       7: putfield      #25                 // Field val$overridesScopeAnnotations:Ljava/util/Set;
      10: aload_0
      11: aload         4
      13: putfield      #27                 // Field val$scopeInstancesInUse:Ljava/util/Map;
      16: aload_0
      17: aload_2
      18: invokespecial #30                 // Method com/google/inject/util/Modules$ModuleWriter."<init>":(Lcom/google/inject/Binder;)V
      21: return

  public java.lang.Void visit(com.google.inject.spi.ScopeBinding);
    Code:
       0: aload_0
       1: getfield      #25                 // Field val$overridesScopeAnnotations:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #42                 // Method com/google/inject/spi/ScopeBinding.getAnnotationType:()Ljava/lang/Class;
       8: invokeinterface #48,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      13: ifne          25
      16: aload_0
      17: aload_1
      18: invokespecial #51                 // Method com/google/inject/util/Modules$ModuleWriter.visit:(Lcom/google/inject/spi/ScopeBinding;)Ljava/lang/Object;
      21: pop
      22: goto          74
      25: aload_0
      26: getfield      #27                 // Field val$scopeInstancesInUse:Ljava/util/Map;
      29: aload_1
      30: invokevirtual #55                 // Method com/google/inject/spi/ScopeBinding.getScope:()Lcom/google/inject/Scope;
      33: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: astore_2
      39: aload_2
      40: ifnull        74
      43: aload_0
      44: getfield      #64                 // Field binder:Lcom/google/inject/Binder;
      47: aload_2
      48: invokeinterface #70,  2           // InterfaceMethod com/google/inject/Binder.withSource:(Ljava/lang/Object;)Lcom/google/inject/Binder;
      53: ldc           #72                 // String The scope for @%s is bound directly and cannot be overridden.
      55: iconst_1
      56: anewarray     #74                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_1
      62: invokevirtual #42                 // Method com/google/inject/spi/ScopeBinding.getAnnotationType:()Ljava/lang/Class;
      65: invokevirtual #80                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      68: aastore
      69: invokeinterface #84,  3           // InterfaceMethod com/google/inject/Binder.addError:(Ljava/lang/String;[Ljava/lang/Object;)V
      74: aconst_null
      75: areturn

  public java.lang.Object visit(com.google.inject.spi.ScopeBinding);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method visit:(Lcom/google/inject/spi/ScopeBinding;)Ljava/lang/Void;
       5: areturn
}
