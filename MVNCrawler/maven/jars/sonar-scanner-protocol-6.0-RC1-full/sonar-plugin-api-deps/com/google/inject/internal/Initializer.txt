Compiled from "Initializer.java"
final class com.google.inject.internal.Initializer {
  private final java.lang.Thread creatingThread;

  private final java.util.concurrent.CountDownLatch ready;

  private final java.util.Map<java.lang.Object, com.google.inject.internal.Initializer$InjectableReference<?>> pendingInjection;

  com.google.inject.internal.Initializer();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #25                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: putfield      #27                 // Field creatingThread:Ljava/lang/Thread;
      11: aload_0
      12: new           #29                 // class java/util/concurrent/CountDownLatch
      15: dup
      16: iconst_1
      17: invokespecial #32                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      20: putfield      #34                 // Field ready:Ljava/util/concurrent/CountDownLatch;
      23: aload_0
      24: invokestatic  #40                 // Method com/google/common/collect/Maps.newIdentityHashMap:()Ljava/util/IdentityHashMap;
      27: putfield      #42                 // Field pendingInjection:Ljava/util/Map;
      30: return

  <T> com.google.inject.internal.Initializable<T> requestInjection(com.google.inject.internal.InjectorImpl, T, com.google.inject.Key<T>, java.lang.Object, java.util.Set<com.google.inject.spi.InjectionPoint>);
    Code:
       0: aload         4
       2: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: aload_2
       7: ifnull        30
      10: aload         5
      12: invokeinterface #58,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      17: ifeq          35
      20: aload_1
      21: getfield      #64                 // Field com/google/inject/internal/InjectorImpl.membersInjectorStore:Lcom/google/inject/internal/MembersInjectorStore;
      24: invokevirtual #69                 // Method com/google/inject/internal/MembersInjectorStore.hasTypeListeners:()Z
      27: ifne          35
      30: aload_2
      31: invokestatic  #75                 // Method com/google/inject/internal/Initializables.of:(Ljava/lang/Object;)Lcom/google/inject/internal/Initializable;
      34: areturn
      35: new           #7                  // class com/google/inject/internal/Initializer$InjectableReference
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: aload         4
      45: invokespecial #78                 // Method com/google/inject/internal/Initializer$InjectableReference."<init>":(Lcom/google/inject/internal/Initializer;Lcom/google/inject/internal/InjectorImpl;Ljava/lang/Object;Lcom/google/inject/Key;Ljava/lang/Object;)V
      48: astore        6
      50: aload_0
      51: getfield      #42                 // Field pendingInjection:Ljava/util/Map;
      54: aload_2
      55: aload         6
      57: invokeinterface #84,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload         6
      65: areturn

  void validateOustandingInjections(com.google.inject.internal.Errors);
    Code:
       0: aload_0
       1: getfield      #42                 // Field pendingInjection:Ljava/util/Map;
       4: invokeinterface #107,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #113,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_2
      25: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #7                  // class com/google/inject/internal/Initializer$InjectableReference
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokevirtual #125                // Method com/google/inject/internal/Initializer$InjectableReference.validate:(Lcom/google/inject/internal/Errors;)V
      39: goto          54
      42: astore        4
      44: aload_1
      45: aload         4
      47: invokevirtual #129                // Method com/google/inject/internal/ErrorsException.getErrors:()Lcom/google/inject/internal/Errors;
      50: invokevirtual #135                // Method com/google/inject/internal/Errors.merge:(Lcom/google/inject/internal/Errors;)Lcom/google/inject/internal/Errors;
      53: pop
      54: goto          15
      57: return
    Exception table:
       from    to  target type
          34    39    42   Class com/google/inject/internal/ErrorsException

  void injectAll(com.google.inject.internal.Errors);
    Code:
       0: aload_0
       1: getfield      #42                 // Field pendingInjection:Ljava/util/Map;
       4: invokeinterface #107,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokestatic  #150                // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      12: invokevirtual #153                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          59
      25: aload_2
      26: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #7                  // class com/google/inject/internal/Initializer$InjectableReference
      34: astore_3
      35: aload_3
      36: aload_1
      37: invokevirtual #157                // Method com/google/inject/internal/Initializer$InjectableReference.get:(Lcom/google/inject/internal/Errors;)Ljava/lang/Object;
      40: pop
      41: goto          56
      44: astore        4
      46: aload_1
      47: aload         4
      49: invokevirtual #129                // Method com/google/inject/internal/ErrorsException.getErrors:()Lcom/google/inject/internal/Errors;
      52: invokevirtual #135                // Method com/google/inject/internal/Errors.merge:(Lcom/google/inject/internal/Errors;)Lcom/google/inject/internal/Errors;
      55: pop
      56: goto          16
      59: aload_0
      60: getfield      #42                 // Field pendingInjection:Ljava/util/Map;
      63: invokeinterface #158,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      68: ifne          101
      71: new           #160                // class java/lang/AssertionError
      74: dup
      75: new           #162                // class java/lang/StringBuilder
      78: dup
      79: invokespecial #163                // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #165                // String Failed to satisfy
      84: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #42                 // Field pendingInjection:Ljava/util/Map;
      91: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: invokevirtual #176                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #179                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     100: athrow
     101: aload_0
     102: getfield      #34                 // Field ready:Ljava/util/concurrent/CountDownLatch;
     105: invokevirtual #182                // Method java/util/concurrent/CountDownLatch.countDown:()V
     108: return
    Exception table:
       from    to  target type
          35    41    44   Class com/google/inject/internal/ErrorsException

  static java.util.concurrent.CountDownLatch access$000(com.google.inject.internal.Initializer);
    Code:
       0: aload_0
       1: getfield      #34                 // Field ready:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  static java.lang.Thread access$100(com.google.inject.internal.Initializer);
    Code:
       0: aload_0
       1: getfield      #27                 // Field creatingThread:Ljava/lang/Thread;
       4: areturn

  static java.util.Map access$200(com.google.inject.internal.Initializer);
    Code:
       0: aload_0
       1: getfield      #42                 // Field pendingInjection:Ljava/util/Map;
       4: areturn
}
