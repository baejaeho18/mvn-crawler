Compiled from "NotFileFilter.java"
public class org.apache.commons.io.filefilter.NotFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable {
  private final org.apache.commons.io.filefilter.IOFileFilter filter;

  public org.apache.commons.io.filefilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String The filter must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
      23: return

  public boolean accept(java.io.File);
    Code:
       0: aload_0
       1: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean accept(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #10                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;
      11: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #12                 // String (
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
      23: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #14                 // String )
      31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn
}
