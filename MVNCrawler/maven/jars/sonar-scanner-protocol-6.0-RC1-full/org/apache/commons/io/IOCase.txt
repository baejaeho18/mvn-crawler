Compiled from "IOCase.java"
public final class org.apache.commons.io.IOCase implements java.io.Serializable {
  public static final org.apache.commons.io.IOCase SENSITIVE;

  public static final org.apache.commons.io.IOCase INSENSITIVE;

  public static final org.apache.commons.io.IOCase SYSTEM;

  private static final long serialVersionUID;

  private final java.lang.String name;

  private final transient boolean sensitive;

  public static org.apache.commons.io.IOCase forName(java.lang.String);
    Code:
       0: getstatic     #1                  // Field SENSITIVE:Lorg/apache/commons/io/IOCase;
       3: getfield      #2                  // Field name:Ljava/lang/String;
       6: aload_0
       7: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          17
      13: getstatic     #1                  // Field SENSITIVE:Lorg/apache/commons/io/IOCase;
      16: areturn
      17: getstatic     #4                  // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;
      20: getfield      #2                  // Field name:Ljava/lang/String;
      23: aload_0
      24: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          34
      30: getstatic     #4                  // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;
      33: areturn
      34: getstatic     #5                  // Field SYSTEM:Lorg/apache/commons/io/IOCase;
      37: getfield      #2                  // Field name:Ljava/lang/String;
      40: aload_0
      41: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          51
      47: getstatic     #5                  // Field SYSTEM:Lorg/apache/commons/io/IOCase;
      50: areturn
      51: new           #6                  // class java/lang/IllegalArgumentException
      54: dup
      55: new           #7                  // class java/lang/StringBuilder
      58: dup
      59: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #9                  // String Invalid IOCase name:
      64: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow

  private org.apache.commons.io.IOCase(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #14                 // Field sensitive:Z
      14: return

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: invokestatic  #15                 // Method forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;
       7: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean isCaseSensitive();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sensitive:Z
       4: ireturn

  public int checkCompareTo(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     18
       8: new           #16                 // class java/lang/NullPointerException
      11: dup
      12: ldc           #17                 // String The strings must not be null
      14: invokespecial #18                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #14                 // Field sensitive:Z
      22: ifeq          33
      25: aload_1
      26: aload_2
      27: invokevirtual #19                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      30: goto          38
      33: aload_1
      34: aload_2
      35: invokevirtual #20                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      38: ireturn

  public boolean checkEquals(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     18
       8: new           #16                 // class java/lang/NullPointerException
      11: dup
      12: ldc           #17                 // String The strings must not be null
      14: invokespecial #18                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #14                 // Field sensitive:Z
      22: ifeq          33
      25: aload_1
      26: aload_2
      27: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: goto          38
      33: aload_1
      34: aload_2
      35: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      38: ireturn

  public boolean checkStartsWith(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #14                 // Field sensitive:Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: iconst_0
      14: aload_2
      15: iconst_0
      16: aload_2
      17: invokevirtual #22                 // Method java/lang/String.length:()I
      20: invokevirtual #23                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      23: ireturn

  public boolean checkEndsWith(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #22                 // Method java/lang/String.length:()I
       4: istore_3
       5: aload_1
       6: aload_0
       7: getfield      #14                 // Field sensitive:Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: aload_1
      19: invokevirtual #22                 // Method java/lang/String.length:()I
      22: iload_3
      23: isub
      24: aload_2
      25: iconst_0
      26: iload_3
      27: invokevirtual #23                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      30: ireturn

  public int checkIndexOf(java.lang.String, int, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/lang/String.length:()I
       4: aload_3
       5: invokevirtual #22                 // Method java/lang/String.length:()I
       8: isub
       9: istore        4
      11: iload         4
      13: iload_2
      14: if_icmplt     47
      17: iload_2
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpgt     47
      27: aload_0
      28: aload_1
      29: iload         5
      31: aload_3
      32: invokevirtual #24                 // Method checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z
      35: ifeq          41
      38: iload         5
      40: ireturn
      41: iinc          5, 1
      44: goto          20
      47: iconst_m1
      48: ireturn

  public boolean checkRegionMatches(java.lang.String, int, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #14                 // Field sensitive:Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: iload_2
      14: aload_3
      15: iconst_0
      16: aload_3
      17: invokevirtual #22                 // Method java/lang/String.length:()I
      20: invokevirtual #23                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      23: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #25                 // class org/apache/commons/io/IOCase
       3: dup
       4: ldc           #26                 // String Sensitive
       6: iconst_1
       7: invokespecial #27                 // Method "<init>":(Ljava/lang/String;Z)V
      10: putstatic     #1                  // Field SENSITIVE:Lorg/apache/commons/io/IOCase;
      13: new           #25                 // class org/apache/commons/io/IOCase
      16: dup
      17: ldc           #28                 // String Insensitive
      19: iconst_0
      20: invokespecial #27                 // Method "<init>":(Ljava/lang/String;Z)V
      23: putstatic     #4                  // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;
      26: new           #25                 // class org/apache/commons/io/IOCase
      29: dup
      30: ldc           #29                 // String System
      32: invokestatic  #30                 // Method org/apache/commons/io/FilenameUtils.isSystemWindows:()Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokespecial #27                 // Method "<init>":(Ljava/lang/String;Z)V
      46: putstatic     #5                  // Field SYSTEM:Lorg/apache/commons/io/IOCase;
      49: return
}
