Compiled from "IntRange.java"
public final class org.apache.commons.lang.math.IntRange extends org.apache.commons.lang.math.Range implements java.io.Serializable {
  private static final long serialVersionUID;

  private final int min;

  private final int max;

  private transient java.lang.Integer minObject;

  private transient java.lang.Integer maxObject;

  private transient int hashCode;

  private transient java.lang.String toString;

  public org.apache.commons.lang.math.IntRange(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field minObject:Ljava/lang/Integer;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field toString:Ljava/lang/String;
      24: aload_0
      25: iload_1
      26: putfield      #6                  // Field min:I
      29: aload_0
      30: iload_1
      31: putfield      #7                  // Field max:I
      34: return

  public org.apache.commons.lang.math.IntRange(java.lang.Number);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field minObject:Ljava/lang/Integer;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field toString:Ljava/lang/String;
      24: aload_1
      25: ifnonnull     38
      28: new           #8                  // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #9                  // String The number must not be null
      34: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_1
      40: invokevirtual #11                 // Method java/lang/Number.intValue:()I
      43: putfield      #6                  // Field min:I
      46: aload_0
      47: aload_1
      48: invokevirtual #11                 // Method java/lang/Number.intValue:()I
      51: putfield      #7                  // Field max:I
      54: aload_1
      55: instanceof    #12                 // class java/lang/Integer
      58: ifeq          77
      61: aload_0
      62: aload_1
      63: checkcast     #12                 // class java/lang/Integer
      66: putfield      #2                  // Field minObject:Ljava/lang/Integer;
      69: aload_0
      70: aload_1
      71: checkcast     #12                 // class java/lang/Integer
      74: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
      77: return

  public org.apache.commons.lang.math.IntRange(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field minObject:Ljava/lang/Integer;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field toString:Ljava/lang/String;
      24: iload_2
      25: iload_1
      26: if_icmpge     42
      29: aload_0
      30: iload_2
      31: putfield      #6                  // Field min:I
      34: aload_0
      35: iload_1
      36: putfield      #7                  // Field max:I
      39: goto          52
      42: aload_0
      43: iload_1
      44: putfield      #6                  // Field min:I
      47: aload_0
      48: iload_2
      49: putfield      #7                  // Field max:I
      52: return

  public org.apache.commons.lang.math.IntRange(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field minObject:Ljava/lang/Integer;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field toString:Ljava/lang/String;
      24: aload_1
      25: ifnull        32
      28: aload_2
      29: ifnonnull     42
      32: new           #8                  // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #13                 // String The numbers must not be null
      38: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: invokevirtual #11                 // Method java/lang/Number.intValue:()I
      46: istore_3
      47: aload_2
      48: invokevirtual #11                 // Method java/lang/Number.intValue:()I
      51: istore        4
      53: iload         4
      55: iload_3
      56: if_icmpge     103
      59: aload_0
      60: iload         4
      62: putfield      #6                  // Field min:I
      65: aload_0
      66: iload_3
      67: putfield      #7                  // Field max:I
      70: aload_2
      71: instanceof    #12                 // class java/lang/Integer
      74: ifeq          85
      77: aload_0
      78: aload_2
      79: checkcast     #12                 // class java/lang/Integer
      82: putfield      #2                  // Field minObject:Ljava/lang/Integer;
      85: aload_1
      86: instanceof    #12                 // class java/lang/Integer
      89: ifeq          144
      92: aload_0
      93: aload_1
      94: checkcast     #12                 // class java/lang/Integer
      97: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
     100: goto          144
     103: aload_0
     104: iload_3
     105: putfield      #6                  // Field min:I
     108: aload_0
     109: iload         4
     111: putfield      #7                  // Field max:I
     114: aload_1
     115: instanceof    #12                 // class java/lang/Integer
     118: ifeq          129
     121: aload_0
     122: aload_1
     123: checkcast     #12                 // class java/lang/Integer
     126: putfield      #2                  // Field minObject:Ljava/lang/Integer;
     129: aload_2
     130: instanceof    #12                 // class java/lang/Integer
     133: ifeq          144
     136: aload_0
     137: aload_2
     138: checkcast     #12                 // class java/lang/Integer
     141: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
     144: return

  public java.lang.Number getMinimumNumber();
    Code:
       0: aload_0
       1: getfield      #2                  // Field minObject:Ljava/lang/Integer;
       4: ifnonnull     22
       7: aload_0
       8: new           #12                 // class java/lang/Integer
      11: dup
      12: aload_0
      13: getfield      #6                  // Field min:I
      16: invokespecial #14                 // Method java/lang/Integer."<init>":(I)V
      19: putfield      #2                  // Field minObject:Ljava/lang/Integer;
      22: aload_0
      23: getfield      #2                  // Field minObject:Ljava/lang/Integer;
      26: areturn

  public long getMinimumLong();
    Code:
       0: aload_0
       1: getfield      #6                  // Field min:I
       4: i2l
       5: lreturn

  public int getMinimumInteger();
    Code:
       0: aload_0
       1: getfield      #6                  // Field min:I
       4: ireturn

  public double getMinimumDouble();
    Code:
       0: aload_0
       1: getfield      #6                  // Field min:I
       4: i2d
       5: dreturn

  public float getMinimumFloat();
    Code:
       0: aload_0
       1: getfield      #6                  // Field min:I
       4: i2f
       5: freturn

  public java.lang.Number getMaximumNumber();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxObject:Ljava/lang/Integer;
       4: ifnonnull     22
       7: aload_0
       8: new           #12                 // class java/lang/Integer
      11: dup
      12: aload_0
      13: getfield      #7                  // Field max:I
      16: invokespecial #14                 // Method java/lang/Integer."<init>":(I)V
      19: putfield      #3                  // Field maxObject:Ljava/lang/Integer;
      22: aload_0
      23: getfield      #3                  // Field maxObject:Ljava/lang/Integer;
      26: areturn

  public long getMaximumLong();
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:I
       4: i2l
       5: lreturn

  public int getMaximumInteger();
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:I
       4: ireturn

  public double getMaximumDouble();
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:I
       4: i2d
       5: dreturn

  public float getMaximumFloat();
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:I
       4: i2f
       5: freturn

  public boolean containsNumber(java.lang.Number);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #11                 // Method java/lang/Number.intValue:()I
      11: invokevirtual #15                 // Method containsInteger:(I)Z
      14: ireturn

  public boolean containsInteger(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field min:I
       5: if_icmplt     20
       8: iload_1
       9: aload_0
      10: getfield      #7                  // Field max:I
      13: if_icmpgt     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean containsRange(org.apache.commons.lang.math.Range);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #16                 // Method org/apache/commons/lang/math/Range.getMinimumInteger:()I
      11: invokevirtual #15                 // Method containsInteger:(I)Z
      14: ifeq          32
      17: aload_0
      18: aload_1
      19: invokevirtual #17                 // Method org/apache/commons/lang/math/Range.getMaximumInteger:()I
      22: invokevirtual #15                 // Method containsInteger:(I)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean overlapsRange(org.apache.commons.lang.math.Range);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: getfield      #6                  // Field min:I
      11: invokevirtual #18                 // Method org/apache/commons/lang/math/Range.containsInteger:(I)Z
      14: ifne          39
      17: aload_1
      18: aload_0
      19: getfield      #7                  // Field max:I
      22: invokevirtual #18                 // Method org/apache/commons/lang/math/Range.containsInteger:(I)Z
      25: ifne          39
      28: aload_0
      29: aload_1
      30: invokevirtual #16                 // Method org/apache/commons/lang/math/Range.getMinimumInteger:()I
      33: invokevirtual #15                 // Method containsInteger:(I)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #19                 // class org/apache/commons/lang/math/IntRange
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #19                 // class org/apache/commons/lang/math/IntRange
      20: astore_2
      21: aload_0
      22: getfield      #6                  // Field min:I
      25: aload_2
      26: getfield      #6                  // Field min:I
      29: if_icmpne     47
      32: aload_0
      33: getfield      #7                  // Field max:I
      36: aload_2
      37: getfield      #7                  // Field max:I
      40: if_icmpne     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hashCode:I
       4: ifne          64
       7: aload_0
       8: bipush        17
      10: putfield      #4                  // Field hashCode:I
      13: aload_0
      14: bipush        37
      16: aload_0
      17: getfield      #4                  // Field hashCode:I
      20: imul
      21: aload_0
      22: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokevirtual #21                 // Method java/lang/Object.hashCode:()I
      28: iadd
      29: putfield      #4                  // Field hashCode:I
      32: aload_0
      33: bipush        37
      35: aload_0
      36: getfield      #4                  // Field hashCode:I
      39: imul
      40: aload_0
      41: getfield      #6                  // Field min:I
      44: iadd
      45: putfield      #4                  // Field hashCode:I
      48: aload_0
      49: bipush        37
      51: aload_0
      52: getfield      #4                  // Field hashCode:I
      55: imul
      56: aload_0
      57: getfield      #7                  // Field max:I
      60: iadd
      61: putfield      #4                  // Field hashCode:I
      64: aload_0
      65: getfield      #4                  // Field hashCode:I
      68: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field toString:Ljava/lang/String;
       4: ifnonnull     64
       7: new           #22                 // class org/apache/commons/lang/text/StrBuilder
      10: dup
      11: bipush        32
      13: invokespecial #23                 // Method org/apache/commons/lang/text/StrBuilder."<init>":(I)V
      16: astore_1
      17: aload_1
      18: ldc           #24                 // String Range[
      20: invokevirtual #25                 // Method org/apache/commons/lang/text/StrBuilder.append:(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #6                  // Field min:I
      29: invokevirtual #26                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
      32: pop
      33: aload_1
      34: bipush        44
      36: invokevirtual #27                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #7                  // Field max:I
      45: invokevirtual #26                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
      48: pop
      49: aload_1
      50: bipush        93
      52: invokevirtual #27                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
      55: pop
      56: aload_0
      57: aload_1
      58: invokevirtual #28                 // Method org/apache/commons/lang/text/StrBuilder.toString:()Ljava/lang/String;
      61: putfield      #5                  // Field toString:Ljava/lang/String;
      64: aload_0
      65: getfield      #5                  // Field toString:Ljava/lang/String;
      68: areturn

  public int[] toArray();
    Code:
       0: aload_0
       1: getfield      #7                  // Field max:I
       4: aload_0
       5: getfield      #6                  // Field min:I
       8: isub
       9: iconst_1
      10: iadd
      11: newarray       int
      13: astore_1
      14: iconst_0
      15: istore_2
      16: iload_2
      17: aload_1
      18: arraylength
      19: if_icmpge     37
      22: aload_1
      23: iload_2
      24: aload_0
      25: getfield      #6                  // Field min:I
      28: iload_2
      29: iadd
      30: iastore
      31: iinc          2, 1
      34: goto          16
      37: aload_1
      38: areturn
}
