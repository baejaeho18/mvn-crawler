Compiled from "PluginInfo.java"
public class org.sonar.core.platform.PluginInfo implements java.lang.Comparable<org.sonar.core.platform.PluginInfo> {
  private static final com.google.common.base.Joiner SLASH_JOINER;

  private final java.lang.String key;

  private java.lang.String name;

  private java.io.File jarFile;

  private java.lang.String mainClass;

  private org.sonar.updatecenter.common.Version version;

  private org.sonar.updatecenter.common.Version minimalSqVersion;

  private java.lang.String description;

  private java.lang.String organizationName;

  private java.lang.String organizationUrl;

  private java.lang.String license;

  private java.lang.String homepageUrl;

  private java.lang.String issueTrackerUrl;

  private boolean useChildFirstClassLoader;

  private java.lang.String basePlugin;

  private java.lang.String implementationBuild;

  private boolean sonarLintSupported;

  private final java.util.Set<org.sonar.core.platform.PluginInfo$RequiredPlugin> requiredPlugins;

  public org.sonar.core.platform.PluginInfo(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field requiredPlugins:Ljava/util/Set;
      15: aload_1
      16: ldc           #5                  // String Plugin key is missing from manifest
      18: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field key:Ljava/lang/String;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field name:Ljava/lang/String;
      32: return

  public org.sonar.core.platform.PluginInfo setJarFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field jarFile:Ljava/io/File;
       5: aload_0
       6: areturn

  public java.io.File getJarFile();
    Code:
       0: aload_0
       1: getfield      #9                  // Field jarFile:Ljava/io/File;
       4: areturn

  public java.io.File getNonNullJarFile();
    Code:
       0: aload_0
       1: getfield      #9                  // Field jarFile:Ljava/io/File;
       4: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: getfield      #9                  // Field jarFile:Ljava/io/File;
      12: areturn

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #7                  // Field key:Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/String;
       4: areturn

  public org.sonar.updatecenter.common.Version getVersion();
    Code:
       0: aload_0
       1: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
       4: areturn

  public org.sonar.updatecenter.common.Version getMinimalSqVersion();
    Code:
       0: aload_0
       1: getfield      #12                 // Field minimalSqVersion:Lorg/sonar/updatecenter/common/Version;
       4: areturn

  public java.lang.String getMainClass();
    Code:
       0: aload_0
       1: getfield      #13                 // Field mainClass:Ljava/lang/String;
       4: areturn

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #14                 // Field description:Ljava/lang/String;
       4: areturn

  public java.lang.String getOrganizationName();
    Code:
       0: aload_0
       1: getfield      #15                 // Field organizationName:Ljava/lang/String;
       4: areturn

  public java.lang.String getOrganizationUrl();
    Code:
       0: aload_0
       1: getfield      #16                 // Field organizationUrl:Ljava/lang/String;
       4: areturn

  public java.lang.String getLicense();
    Code:
       0: aload_0
       1: getfield      #17                 // Field license:Ljava/lang/String;
       4: areturn

  public java.lang.String getHomepageUrl();
    Code:
       0: aload_0
       1: getfield      #18                 // Field homepageUrl:Ljava/lang/String;
       4: areturn

  public java.lang.String getIssueTrackerUrl();
    Code:
       0: aload_0
       1: getfield      #19                 // Field issueTrackerUrl:Ljava/lang/String;
       4: areturn

  public boolean isUseChildFirstClassLoader();
    Code:
       0: aload_0
       1: getfield      #20                 // Field useChildFirstClassLoader:Z
       4: ireturn

  public boolean isSonarLintSupported();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sonarLintSupported:Z
       4: ireturn

  public java.lang.String getBasePlugin();
    Code:
       0: aload_0
       1: getfield      #22                 // Field basePlugin:Ljava/lang/String;
       4: areturn

  public java.lang.String getImplementationBuild();
    Code:
       0: aload_0
       1: getfield      #23                 // Field implementationBuild:Ljava/lang/String;
       4: areturn

  public java.util.Set<org.sonar.core.platform.PluginInfo$RequiredPlugin> getRequiredPlugins();
    Code:
       0: aload_0
       1: getfield      #4                  // Field requiredPlugins:Ljava/util/Set;
       4: areturn

  public org.sonar.core.platform.PluginInfo setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #7                  // Field key:Ljava/lang/String;
       6: invokestatic  #24                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #25                 // class java/lang/String
      12: putfield      #8                  // Field name:Ljava/lang/String;
      15: aload_0
      16: areturn

  public org.sonar.core.platform.PluginInfo setVersion(org.sonar.updatecenter.common.Version);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setMinimalSqVersion(org.sonar.updatecenter.common.Version);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field minimalSqVersion:Lorg/sonar/updatecenter/common/Version;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setMainClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field mainClass:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setDescription(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field description:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setOrganizationName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field organizationName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setOrganizationUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field organizationUrl:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setLicense(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field license:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setHomepageUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field homepageUrl:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setIssueTrackerUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field issueTrackerUrl:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setUseChildFirstClassLoader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field useChildFirstClassLoader:Z
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setSonarLintSupported(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field sonarLintSupported:Z
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo setBasePlugin(java.lang.String);
    Code:
       0: ldc           #26                 // String l10nen
       2: aload_1
       3: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          33
       9: ldc           #28                 // class org/sonar/core/platform/PluginInfo
      11: invokestatic  #29                 // Method org/sonar/api/utils/log/Loggers.get:(Ljava/lang/Class;)Lorg/sonar/api/utils/log/Logger;
      14: ldc           #30                 // String Plugin [{}] defines \'l10nen\' as base plugin. This metadata can be removed from manifest of l10n plugins since version 5.2.
      16: aload_0
      17: getfield      #7                  // Field key:Ljava/lang/String;
      20: invokeinterface #31,  3           // InterfaceMethod org/sonar/api/utils/log/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: aconst_null
      27: putfield      #22                 // Field basePlugin:Ljava/lang/String;
      30: goto          38
      33: aload_0
      34: aload_1
      35: putfield      #22                 // Field basePlugin:Ljava/lang/String;
      38: aload_0
      39: areturn

  public org.sonar.core.platform.PluginInfo setImplementationBuild(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field implementationBuild:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.platform.PluginInfo addRequiredPlugin(org.sonar.core.platform.PluginInfo$RequiredPlugin);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requiredPlugins:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public boolean isCompatibleWith(java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #12                 // Field minimalSqVersion:Lorg/sonar/updatecenter/common/Version;
       5: if_acmpne     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: getfield      #12                 // Field minimalSqVersion:Lorg/sonar/updatecenter/common/Version;
      14: invokevirtual #33                 // Method org/sonar/updatecenter/common/Version.getName:()Ljava/lang/String;
      17: invokestatic  #34                 // Method org/sonar/updatecenter/common/Version.create:(Ljava/lang/String;)Lorg/sonar/updatecenter/common/Version;
      20: invokevirtual #35                 // Method org/sonar/updatecenter/common/Version.removeQualifier:()Lorg/sonar/updatecenter/common/Version;
      23: astore_2
      24: aload_1
      25: invokestatic  #34                 // Method org/sonar/updatecenter/common/Version.create:(Ljava/lang/String;)Lorg/sonar/updatecenter/common/Version;
      28: invokevirtual #35                 // Method org/sonar/updatecenter/common/Version.removeQualifier:()Lorg/sonar/updatecenter/common/Version;
      31: astore_3
      32: aload_3
      33: aload_2
      34: invokevirtual #36                 // Method org/sonar/updatecenter/common/Version.compareTo:(Lorg/sonar/updatecenter/common/Version;)I
      37: iflt          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #37                 // String [%s]
       2: iconst_1
       3: anewarray     #38                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: getstatic     #39                 // Field SLASH_JOINER:Lcom/google/common/base/Joiner;
      11: aload_0
      12: getfield      #7                  // Field key:Ljava/lang/String;
      15: aload_0
      16: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      19: iconst_1
      20: anewarray     #38                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #23                 // Field implementationBuild:Ljava/lang/String;
      29: aastore
      30: invokevirtual #40                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
      33: aastore
      34: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #28                 // class org/sonar/core/platform/PluginInfo
      28: astore_2
      29: aload_0
      30: getfield      #7                  // Field key:Ljava/lang/String;
      33: aload_2
      34: getfield      #7                  // Field key:Ljava/lang/String;
      37: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      49: ifnull        69
      52: aload_0
      53: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      56: aload_2
      57: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      60: invokevirtual #43                 // Method org/sonar/updatecenter/common/Version.equals:(Ljava/lang/Object;)Z
      63: ifne          76
      66: goto          80
      69: aload_2
      70: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      73: ifnonnull     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field key:Ljava/lang/String;
       4: invokevirtual #44                 // Method java/lang/String.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      16: ifnull        29
      19: aload_0
      20: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      23: invokevirtual #45                 // Method org/sonar/updatecenter/common/Version.hashCode:()I
      26: goto          30
      29: iconst_0
      30: iadd
      31: istore_1
      32: iload_1
      33: ireturn

  public int compareTo(org.sonar.core.platform.PluginInfo);
    Code:
       0: invokestatic  #46                 // Method com/google/common/collect/ComparisonChain.start:()Lcom/google/common/collect/ComparisonChain;
       3: aload_0
       4: getfield      #8                  // Field name:Ljava/lang/String;
       7: aload_1
       8: getfield      #8                  // Field name:Ljava/lang/String;
      11: invokevirtual #47                 // Method com/google/common/collect/ComparisonChain.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/ComparisonChain;
      14: aload_0
      15: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      18: aload_1
      19: getfield      #11                 // Field version:Lorg/sonar/updatecenter/common/Version;
      22: invokestatic  #48                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
      25: invokevirtual #49                 // Method com/google/common/collect/Ordering.nullsFirst:()Lcom/google/common/collect/Ordering;
      28: invokevirtual #50                 // Method com/google/common/collect/ComparisonChain.compare:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lcom/google/common/collect/ComparisonChain;
      31: invokevirtual #51                 // Method com/google/common/collect/ComparisonChain.result:()I
      34: ireturn

  public static org.sonar.core.platform.PluginInfo create(java.io.File);
    Code:
       0: new           #52                 // class org/sonar/updatecenter/common/PluginManifest
       3: dup
       4: aload_0
       5: invokespecial #53                 // Method org/sonar/updatecenter/common/PluginManifest."<init>":(Ljava/io/File;)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokestatic  #54                 // Method create:(Ljava/io/File;Lorg/sonar/updatecenter/common/PluginManifest;)Lorg/sonar/core/platform/PluginInfo;
      14: areturn
      15: astore_1
      16: new           #56                 // class java/lang/IllegalStateException
      19: dup
      20: new           #57                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #59                 // String Fail to extract plugin metadata from file:
      29: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: aload_1
      40: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/io/IOException

  static org.sonar.core.platform.PluginInfo create(java.io.File, org.sonar.updatecenter.common.PluginManifest);
    Code:
       0: aload_1
       1: invokevirtual #64                 // Method org/sonar/updatecenter/common/PluginManifest.getKey:()Ljava/lang/String;
       4: invokestatic  #65                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
       7: ifeq          30
      10: ldc           #66                 // String File is not a plugin. Please delete it and restart: %s
      12: iconst_1
      13: anewarray     #38                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: invokevirtual #67                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      22: aastore
      23: invokestatic  #41                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokestatic  #68                 // Method org/sonar/api/utils/MessageException.of:(Ljava/lang/String;)Lorg/sonar/api/utils/MessageException;
      29: athrow
      30: new           #28                 // class org/sonar/core/platform/PluginInfo
      33: dup
      34: aload_1
      35: invokevirtual #64                 // Method org/sonar/updatecenter/common/PluginManifest.getKey:()Ljava/lang/String;
      38: invokespecial #69                 // Method "<init>":(Ljava/lang/String;)V
      41: astore_2
      42: aload_2
      43: aload_0
      44: invokevirtual #70                 // Method setJarFile:(Ljava/io/File;)Lorg/sonar/core/platform/PluginInfo;
      47: pop
      48: aload_2
      49: aload_1
      50: invokevirtual #71                 // Method org/sonar/updatecenter/common/PluginManifest.getName:()Ljava/lang/String;
      53: invokevirtual #72                 // Method setName:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
      56: pop
      57: aload_2
      58: aload_1
      59: invokevirtual #73                 // Method org/sonar/updatecenter/common/PluginManifest.getMainClass:()Ljava/lang/String;
      62: invokevirtual #74                 // Method setMainClass:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
      65: pop
      66: aload_2
      67: aload_1
      68: invokevirtual #75                 // Method org/sonar/updatecenter/common/PluginManifest.getVersion:()Ljava/lang/String;
      71: invokestatic  #34                 // Method org/sonar/updatecenter/common/Version.create:(Ljava/lang/String;)Lorg/sonar/updatecenter/common/Version;
      74: invokevirtual #76                 // Method setVersion:(Lorg/sonar/updatecenter/common/Version;)Lorg/sonar/core/platform/PluginInfo;
      77: pop
      78: aload_2
      79: aload_1
      80: invokevirtual #77                 // Method org/sonar/updatecenter/common/PluginManifest.getDescription:()Ljava/lang/String;
      83: invokevirtual #78                 // Method setDescription:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
      86: pop
      87: aload_2
      88: aload_1
      89: invokevirtual #79                 // Method org/sonar/updatecenter/common/PluginManifest.getLicense:()Ljava/lang/String;
      92: invokevirtual #80                 // Method setLicense:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
      95: pop
      96: aload_2
      97: aload_1
      98: invokevirtual #81                 // Method org/sonar/updatecenter/common/PluginManifest.getOrganization:()Ljava/lang/String;
     101: invokevirtual #82                 // Method setOrganizationName:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
     104: pop
     105: aload_2
     106: aload_1
     107: invokevirtual #83                 // Method org/sonar/updatecenter/common/PluginManifest.getOrganizationUrl:()Ljava/lang/String;
     110: invokevirtual #84                 // Method setOrganizationUrl:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
     113: pop
     114: aload_1
     115: invokevirtual #85                 // Method org/sonar/updatecenter/common/PluginManifest.getSonarVersion:()Ljava/lang/String;
     118: astore_3
     119: aload_3
     120: ifnull        132
     123: aload_2
     124: aload_3
     125: invokestatic  #34                 // Method org/sonar/updatecenter/common/Version.create:(Ljava/lang/String;)Lorg/sonar/updatecenter/common/Version;
     128: invokevirtual #86                 // Method setMinimalSqVersion:(Lorg/sonar/updatecenter/common/Version;)Lorg/sonar/core/platform/PluginInfo;
     131: pop
     132: aload_2
     133: aload_1
     134: invokevirtual #87                 // Method org/sonar/updatecenter/common/PluginManifest.getHomepage:()Ljava/lang/String;
     137: invokevirtual #88                 // Method setHomepageUrl:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
     140: pop
     141: aload_2
     142: aload_1
     143: invokevirtual #89                 // Method org/sonar/updatecenter/common/PluginManifest.getIssueTrackerUrl:()Ljava/lang/String;
     146: invokevirtual #90                 // Method setIssueTrackerUrl:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
     149: pop
     150: aload_2
     151: aload_1
     152: invokevirtual #91                 // Method org/sonar/updatecenter/common/PluginManifest.isUseChildFirstClassLoader:()Z
     155: invokevirtual #92                 // Method setUseChildFirstClassLoader:(Z)Lorg/sonar/core/platform/PluginInfo;
     158: pop
     159: aload_2
     160: aload_1
     161: invokevirtual #93                 // Method org/sonar/updatecenter/common/PluginManifest.isSonarLintSupported:()Z
     164: invokevirtual #94                 // Method setSonarLintSupported:(Z)Lorg/sonar/core/platform/PluginInfo;
     167: pop
     168: aload_2
     169: aload_1
     170: invokevirtual #95                 // Method org/sonar/updatecenter/common/PluginManifest.getBasePlugin:()Ljava/lang/String;
     173: invokevirtual #96                 // Method setBasePlugin:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
     176: pop
     177: aload_2
     178: aload_1
     179: invokevirtual #97                 // Method org/sonar/updatecenter/common/PluginManifest.getImplementationBuild:()Ljava/lang/String;
     182: invokevirtual #98                 // Method setImplementationBuild:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo;
     185: pop
     186: aload_1
     187: invokevirtual #99                 // Method org/sonar/updatecenter/common/PluginManifest.getRequirePlugins:()[Ljava/lang/String;
     190: astore        4
     192: aload         4
     194: ifnull        239
     197: aload         4
     199: astore        5
     201: aload         5
     203: arraylength
     204: istore        6
     206: iconst_0
     207: istore        7
     209: iload         7
     211: iload         6
     213: if_icmpge     239
     216: aload         5
     218: iload         7
     220: aaload
     221: astore        8
     223: aload_2
     224: aload         8
     226: invokestatic  #100                // Method org/sonar/core/platform/PluginInfo$RequiredPlugin.parse:(Ljava/lang/String;)Lorg/sonar/core/platform/PluginInfo$RequiredPlugin;
     229: invokevirtual #101                // Method addRequiredPlugin:(Lorg/sonar/core/platform/PluginInfo$RequiredPlugin;)Lorg/sonar/core/platform/PluginInfo;
     232: pop
     233: iinc          7, 1
     236: goto          209
     239: aload_2
     240: areturn

  public static com.google.common.base.Function<java.io.File, org.sonar.core.platform.PluginInfo> jarToPluginInfo();
    Code:
       0: getstatic     #102                // Field org/sonar/core/platform/PluginInfo$JarToPluginInfo.INSTANCE:Lorg/sonar/core/platform/PluginInfo$JarToPluginInfo;
       3: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class org/sonar/core/platform/PluginInfo
       5: invokevirtual #103                // Method compareTo:(Lorg/sonar/core/platform/PluginInfo;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #104                // String  /
       2: invokestatic  #105                // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
       5: invokevirtual #106                // Method com/google/common/base/Joiner.skipNulls:()Lcom/google/common/base/Joiner;
       8: putstatic     #39                 // Field SLASH_JOINER:Lcom/google/common/base/Joiner;
      11: return
}
