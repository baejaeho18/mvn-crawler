Compiled from "PluginInfo.java"
public class org.sonar.core.platform.PluginInfo$RequiredPlugin {
  private static final java.util.regex.Pattern PARSER;

  private final java.lang.String key;

  private final org.sonar.updatecenter.common.Version minimalVersion;

  public org.sonar.core.platform.PluginInfo$RequiredPlugin(java.lang.String, org.sonar.updatecenter.common.Version);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field key:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field minimalVersion:Lorg/sonar/updatecenter/common/Version;
      14: return

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/String;
       4: areturn

  public org.sonar.updatecenter.common.Version getMinimalVersion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minimalVersion:Lorg/sonar/updatecenter/common/Version;
       4: areturn

  public static org.sonar.core.platform.PluginInfo$RequiredPlugin parse(java.lang.String);
    Code:
       0: getstatic     #4                  // Field PARSER:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #5                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #6                  // Method java/util/regex/Matcher.matches:()Z
      10: ifne          40
      13: new           #7                  // class java/lang/IllegalArgumentException
      16: dup
      17: new           #8                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #10                 // String Manifest field does not have correct format:
      26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: bipush        58
      43: invokestatic  #14                 // Method org/apache/commons/lang/StringUtils.split:(Ljava/lang/String;C)[Ljava/lang/String;
      46: astore_1
      47: new           #15                 // class org/sonar/core/platform/PluginInfo$RequiredPlugin
      50: dup
      51: aload_1
      52: iconst_0
      53: aaload
      54: aload_1
      55: iconst_1
      56: aaload
      57: invokestatic  #16                 // Method org/sonar/updatecenter/common/Version.create:(Ljava/lang/String;)Lorg/sonar/updatecenter/common/Version;
      60: invokevirtual #17                 // Method org/sonar/updatecenter/common/Version.removeQualifier:()Lorg/sonar/updatecenter/common/Version;
      63: invokespecial #18                 // Method "<init>":(Ljava/lang/String;Lorg/sonar/updatecenter/common/Version;)V
      66: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #15                 // class org/sonar/core/platform/PluginInfo$RequiredPlugin
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field key:Ljava/lang/String;
      33: aload_2
      34: getfield      #2                  // Field key:Ljava/lang/String;
      37: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/String;
       4: invokevirtual #21                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field key:Ljava/lang/String;
      11: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: bipush        58
      16: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field minimalVersion:Lorg/sonar/updatecenter/common/Version;
      23: invokevirtual #23                 // Method org/sonar/updatecenter/common/Version.getName:()Ljava/lang/String;
      26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  static {};
    Code:
       0: ldc           #24                 // String \\w+:.+
       2: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #4                  // Field PARSER:Ljava/util/regex/Pattern;
       8: return
}
