Compiled from "ComponentKeys.java"
public final class org.sonar.core.component.ComponentKeys {
  public static final int MAX_COMPONENT_KEY_LENGTH;

  private static final java.lang.String VALID_MODULE_KEY_REGEXP;

  private static final java.lang.String VALID_MODULE_KEY_ISSUES_MODE_REGEXP;

  private static final java.lang.String VALID_BRANCH_REGEXP;

  private static final java.lang.String KEY_WITH_BRANCH_FORMAT;

  private org.sonar.core.component.ComponentKeys();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String createEffectiveKey(org.sonar.api.resources.Project, org.sonar.api.resources.Resource);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/sonar/api/resources/Resource.getKey:()Ljava/lang/String;
       4: astore_2
       5: ldc           #4                  // String PRJ
       7: aload_1
       8: invokevirtual #5                  // Method org/sonar/api/resources/Resource.getScope:()Ljava/lang/String;
      11: invokestatic  #6                  // Method org/apache/commons/lang/StringUtils.equals:(Ljava/lang/String;Ljava/lang/String;)Z
      14: ifne          50
      17: new           #7                  // class java/lang/StringBuilder
      20: dup
      21: sipush        400
      24: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      27: aload_0
      28: invokevirtual #10                 // Method org/sonar/api/resources/Project.getKey:()Ljava/lang/String;
      31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: bipush        58
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #2                  // Method org/sonar/api/resources/Resource.getKey:()Ljava/lang/String;
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: astore_2
      50: aload_2
      51: areturn

  public static java.lang.String createEffectiveKey(java.lang.String, org.sonar.api.batch.fs.InputPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  1           // InterfaceMethod org/sonar/api/batch/fs/InputPath.relativePath:()Ljava/lang/String;
       7: invokestatic  #15                 // Method createEffectiveKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public static java.lang.String createEffectiveKey(java.lang.String, java.lang.String);
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: sipush        400
       7: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_2
      11: aload_2
      12: aload_0
      13: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ifnull        32
      21: aload_2
      22: bipush        58
      24: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_2
      33: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  public static boolean isValidModuleKey(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #16                 // String [\\p{Alnum}\\-_.:]*[\\p{Alpha}\\-_.:]+[\\p{Alnum}\\-_.:]*
       3: invokevirtual #17                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
       6: ireturn

  public static boolean isValidModuleKeyIssuesMode(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // String [\\p{Alnum}\\-_.:/]*[\\p{Alpha}\\-_.:/]+[\\p{Alnum}\\-_.:/]*
       3: invokevirtual #17                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
       6: ireturn

  public static boolean isValidBranch(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #19                 // String [\\p{Alnum}\\-_./]*
       3: invokevirtual #17                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
       6: ireturn

  public static java.lang.String createKey(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method org/apache/commons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
       4: ifeq          25
       7: ldc           #21                 // String %s:%s
       9: iconst_2
      10: anewarray     #22                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_0
      16: aastore
      17: dup
      18: iconst_1
      19: aload_1
      20: aastore
      21: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: areturn
      25: aload_0
      26: areturn

  public static java.lang.String createKey(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #24                 // Method createKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: aload_1
       8: invokestatic  #15                 // Method createEffectiveKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: areturn
}
