Compiled from "DefaultIssueBuilder.java"
public class org.sonar.core.issue.DefaultIssueBuilder implements org.sonar.api.issue.Issuable$IssueBuilder {
  private java.lang.String componentKey;

  private java.lang.String projectKey;

  private org.sonar.api.rule.RuleKey ruleKey;

  private java.lang.Integer line;

  private java.lang.String message;

  private java.lang.String severity;

  private java.lang.Double effortToFix;

  private java.lang.String assignee;

  private org.sonar.api.rules.RuleType type;

  private java.util.Map<java.lang.String, java.lang.String> attributes;

  public org.sonar.core.issue.DefaultIssueBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.sonar.core.issue.DefaultIssueBuilder componentKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field componentKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder projectKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field projectKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder ruleKey(org.sonar.api.rule.RuleKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field ruleKey:Lorg/sonar/api/rule/RuleKey;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder line(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field line:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder message(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field message:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.batch.sensor.issue.NewIssueLocation newLocation();
    Code:
       0: invokestatic  #7                  // Method unsupported:()Ljava/lang/UnsupportedOperationException;
       3: athrow

  public org.sonar.api.issue.Issuable$IssueBuilder addLocation(org.sonar.api.batch.sensor.issue.NewIssueLocation);
    Code:
       0: invokestatic  #7                  // Method unsupported:()Ljava/lang/UnsupportedOperationException;
       3: athrow

  public org.sonar.api.issue.Issuable$IssueBuilder addFlow(java.lang.Iterable<org.sonar.api.batch.sensor.issue.NewIssueLocation>);
    Code:
       0: invokestatic  #7                  // Method unsupported:()Ljava/lang/UnsupportedOperationException;
       3: athrow

  public org.sonar.api.issue.Issuable$IssueBuilder at(org.sonar.api.batch.sensor.issue.NewIssueLocation);
    Code:
       0: invokestatic  #7                  // Method unsupported:()Ljava/lang/UnsupportedOperationException;
       3: athrow

  private static java.lang.UnsupportedOperationException unsupported();
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Not supported for manual issues
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: areturn

  public org.sonar.core.issue.DefaultIssueBuilder severity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field severity:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder effortToFix(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field effortToFix:Ljava/lang/Double;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder reporter(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public org.sonar.core.issue.DefaultIssueBuilder assignee(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field assignee:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder type(org.sonar.api.rules.RuleType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field type:Lorg/sonar/api/rules/RuleType;
       5: aload_0
       6: areturn

  public org.sonar.core.issue.DefaultIssueBuilder attribute(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field attributes:Ljava/util/Map;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #16                 // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
      11: putfield      #15                 // Field attributes:Ljava/util/Map;
      14: aload_0
      15: getfield      #15                 // Field attributes:Ljava/util/Map;
      18: aload_1
      19: aload_2
      20: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: areturn

  public org.sonar.core.issue.DefaultIssue build();
    Code:
       0: aload_0
       1: getfield      #3                  // Field projectKey:Ljava/lang/String;
       4: ldc           #18                 // String Project key must be set
       6: invokestatic  #19                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #2                  // Field componentKey:Ljava/lang/String;
      14: ldc           #20                 // String Component key must be set
      16: invokestatic  #19                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: getfield      #4                  // Field ruleKey:Lorg/sonar/api/rule/RuleKey;
      24: ldc           #21                 // String Rule key must be set
      26: invokestatic  #19                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: new           #22                 // class org/sonar/core/issue/DefaultIssue
      33: dup
      34: invokespecial #23                 // Method org/sonar/core/issue/DefaultIssue."<init>":()V
      37: astore_1
      38: invokestatic  #24                 // Method org/sonar/core/util/Uuids.create:()Ljava/lang/String;
      41: astore_2
      42: aload_1
      43: aload_2
      44: invokevirtual #25                 // Method org/sonar/core/issue/DefaultIssue.setKey:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
      47: pop
      48: aload_1
      49: aload_0
      50: getfield      #14                 // Field type:Lorg/sonar/api/rules/RuleType;
      53: getstatic     #26                 // Field org/sonar/api/rules/RuleType.CODE_SMELL:Lorg/sonar/api/rules/RuleType;
      56: invokestatic  #27                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #28                 // class org/sonar/api/rules/RuleType
      62: invokevirtual #29                 // Method org/sonar/core/issue/DefaultIssue.setType:(Lorg/sonar/api/rules/RuleType;)Lorg/sonar/core/issue/DefaultIssue;
      65: pop
      66: aload_1
      67: aload_0
      68: getfield      #2                  // Field componentKey:Ljava/lang/String;
      71: invokevirtual #30                 // Method org/sonar/core/issue/DefaultIssue.setComponentKey:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
      74: pop
      75: aload_1
      76: aload_0
      77: getfield      #3                  // Field projectKey:Ljava/lang/String;
      80: invokevirtual #31                 // Method org/sonar/core/issue/DefaultIssue.setProjectKey:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
      83: pop
      84: aload_1
      85: aload_0
      86: getfield      #4                  // Field ruleKey:Lorg/sonar/api/rule/RuleKey;
      89: invokevirtual #32                 // Method org/sonar/core/issue/DefaultIssue.setRuleKey:(Lorg/sonar/api/rule/RuleKey;)Lorg/sonar/core/issue/DefaultIssue;
      92: pop
      93: aload_1
      94: aload_0
      95: getfield      #6                  // Field message:Ljava/lang/String;
      98: invokevirtual #33                 // Method org/sonar/core/issue/DefaultIssue.setMessage:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
     101: pop
     102: aload_1
     103: aload_0
     104: getfield      #11                 // Field severity:Ljava/lang/String;
     107: invokevirtual #34                 // Method org/sonar/core/issue/DefaultIssue.setSeverity:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
     110: pop
     111: aload_1
     112: iconst_0
     113: invokevirtual #35                 // Method org/sonar/core/issue/DefaultIssue.setManualSeverity:(Z)Lorg/sonar/core/issue/DefaultIssue;
     116: pop
     117: aload_1
     118: aload_0
     119: getfield      #12                 // Field effortToFix:Ljava/lang/Double;
     122: invokevirtual #36                 // Method org/sonar/core/issue/DefaultIssue.setGap:(Ljava/lang/Double;)Lorg/sonar/core/issue/DefaultIssue;
     125: pop
     126: aload_1
     127: aload_0
     128: getfield      #5                  // Field line:Ljava/lang/Integer;
     131: invokevirtual #37                 // Method org/sonar/core/issue/DefaultIssue.setLine:(Ljava/lang/Integer;)Lorg/sonar/core/issue/DefaultIssue;
     134: pop
     135: aload_1
     136: aload_0
     137: getfield      #13                 // Field assignee:Ljava/lang/String;
     140: invokevirtual #38                 // Method org/sonar/core/issue/DefaultIssue.setAssignee:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
     143: pop
     144: aload_1
     145: aload_0
     146: getfield      #15                 // Field attributes:Ljava/util/Map;
     149: invokevirtual #39                 // Method org/sonar/core/issue/DefaultIssue.setAttributes:(Ljava/util/Map;)Lorg/sonar/core/issue/DefaultIssue;
     152: pop
     153: aload_1
     154: aconst_null
     155: invokevirtual #40                 // Method org/sonar/core/issue/DefaultIssue.setResolution:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
     158: pop
     159: aload_1
     160: ldc           #42                 // String OPEN
     162: invokevirtual #43                 // Method org/sonar/core/issue/DefaultIssue.setStatus:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssue;
     165: pop
     166: aload_1
     167: aconst_null
     168: invokevirtual #44                 // Method org/sonar/core/issue/DefaultIssue.setCloseDate:(Ljava/util/Date;)Lorg/sonar/core/issue/DefaultIssue;
     171: pop
     172: aload_1
     173: iconst_1
     174: invokevirtual #45                 // Method org/sonar/core/issue/DefaultIssue.setNew:(Z)Lorg/sonar/core/issue/DefaultIssue;
     177: pop
     178: aload_1
     179: iconst_0
     180: invokevirtual #46                 // Method org/sonar/core/issue/DefaultIssue.setBeingClosed:(Z)Lorg/sonar/core/issue/DefaultIssue;
     183: pop
     184: aload_1
     185: iconst_0
     186: invokevirtual #47                 // Method org/sonar/core/issue/DefaultIssue.setOnDisabledRule:(Z)Lorg/sonar/core/issue/DefaultIssue;
     189: pop
     190: aload_1
     191: areturn

  public org.sonar.api.issue.Issue build();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method build:()Lorg/sonar/core/issue/DefaultIssue;
       4: areturn

  public org.sonar.api.issue.Issuable$IssueBuilder attribute(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #49                 // Method attribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssueBuilder;
       6: areturn

  public org.sonar.api.issue.Issuable$IssueBuilder effortToFix(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method effortToFix:(Ljava/lang/Double;)Lorg/sonar/core/issue/DefaultIssueBuilder;
       5: areturn

  public org.sonar.api.issue.Issuable$IssueBuilder reporter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method reporter:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssueBuilder;
       5: areturn

  public org.sonar.api.issue.Issuable$IssueBuilder severity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method severity:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssueBuilder;
       5: areturn

  public org.sonar.api.issue.Issuable$IssueBuilder message(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method message:(Ljava/lang/String;)Lorg/sonar/core/issue/DefaultIssueBuilder;
       5: areturn

  public org.sonar.api.issue.Issuable$IssueBuilder line(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method line:(Ljava/lang/Integer;)Lorg/sonar/core/issue/DefaultIssueBuilder;
       5: areturn

  public org.sonar.api.issue.Issuable$IssueBuilder ruleKey(org.sonar.api.rule.RuleKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method ruleKey:(Lorg/sonar/api/rule/RuleKey;)Lorg/sonar/core/issue/DefaultIssueBuilder;
       5: areturn
}
