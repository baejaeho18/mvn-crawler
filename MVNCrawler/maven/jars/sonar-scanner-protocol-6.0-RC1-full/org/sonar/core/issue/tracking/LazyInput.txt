Compiled from "LazyInput.java"
public abstract class org.sonar.core.issue.tracking.LazyInput<ISSUE extends org.sonar.core.issue.tracking.Trackable> implements org.sonar.core.issue.tracking.Input<ISSUE> {
  private java.util.List<ISSUE> issues;

  private org.sonar.core.issue.tracking.LineHashSequence lineHashSeq;

  private org.sonar.core.issue.tracking.BlockHashSequence blockHashSeq;

  public org.sonar.core.issue.tracking.LazyInput();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.sonar.core.issue.tracking.LineHashSequence getLineHashSequence();
    Code:
       0: aload_0
       1: getfield      #2                  // Field lineHashSeq:Lorg/sonar/core/issue/tracking/LineHashSequence;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #3                  // Method loadLineHashSequence:()Lorg/sonar/core/issue/tracking/LineHashSequence;
      12: putfield      #2                  // Field lineHashSeq:Lorg/sonar/core/issue/tracking/LineHashSequence;
      15: aload_0
      16: getfield      #2                  // Field lineHashSeq:Lorg/sonar/core/issue/tracking/LineHashSequence;
      19: areturn

  public org.sonar.core.issue.tracking.BlockHashSequence getBlockHashSequence();
    Code:
       0: aload_0
       1: getfield      #4                  // Field blockHashSeq:Lorg/sonar/core/issue/tracking/BlockHashSequence;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: invokevirtual #5                  // Method getLineHashSequence:()Lorg/sonar/core/issue/tracking/LineHashSequence;
      12: invokestatic  #6                  // Method org/sonar/core/issue/tracking/BlockHashSequence.create:(Lorg/sonar/core/issue/tracking/LineHashSequence;)Lorg/sonar/core/issue/tracking/BlockHashSequence;
      15: putfield      #4                  // Field blockHashSeq:Lorg/sonar/core/issue/tracking/BlockHashSequence;
      18: aload_0
      19: getfield      #4                  // Field blockHashSeq:Lorg/sonar/core/issue/tracking/BlockHashSequence;
      22: areturn

  public java.util.Collection<ISSUE> getIssues();
    Code:
       0: aload_0
       1: getfield      #7                  // Field issues:Ljava/util/List;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #8                  // Method loadIssues:()Ljava/util/List;
      12: putfield      #7                  // Field issues:Ljava/util/List;
      15: aload_0
      16: getfield      #7                  // Field issues:Ljava/util/List;
      19: areturn

  protected abstract org.sonar.core.issue.tracking.LineHashSequence loadLineHashSequence();

  protected abstract java.util.List<ISSUE> loadIssues();
}
