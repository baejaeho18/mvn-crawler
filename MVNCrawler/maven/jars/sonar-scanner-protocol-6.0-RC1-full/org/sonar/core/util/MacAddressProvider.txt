Compiled from "MacAddressProvider.java"
class org.sonar.core.util.MacAddressProvider {
  private static final org.sonar.api.utils.log.Logger LOGGER;

  public static final int BYTE_SIZE;

  private org.sonar.core.util.MacAddressProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] getSecureMungedAddress();
    Code:
       0: aconst_null
       1: astore_0
       2: invokestatic  #2                  // Method getMacAddress:()[B
       5: astore_0
       6: goto          21
       9: astore_1
      10: getstatic     #4                  // Field LOGGER:Lorg/sonar/api/utils/log/Logger;
      13: ldc           #5                  // String Unable to get mac address, will use a dummy address
      15: aload_1
      16: invokeinterface #6,  3            // InterfaceMethod org/sonar/api/utils/log/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: aload_0
      22: invokestatic  #7                  // Method isValidAddress:([B)Z
      25: ifne          42
      28: getstatic     #4                  // Field LOGGER:Lorg/sonar/api/utils/log/Logger;
      31: ldc           #8                  // String Unable to get a valid mac address, will use a dummy address
      33: invokeinterface #9,  2            // InterfaceMethod org/sonar/api/utils/log/Logger.warn:(Ljava/lang/String;)V
      38: invokestatic  #10                 // Method constructDummyMulticastAddress:()[B
      41: astore_0
      42: bipush        6
      44: newarray       byte
      46: astore_1
      47: new           #12                 // class java/security/SecureRandom
      50: dup
      51: invokespecial #13                 // Method java/security/SecureRandom."<init>":()V
      54: aload_1
      55: invokevirtual #14                 // Method java/security/SecureRandom.nextBytes:([B)V
      58: iconst_0
      59: istore_2
      60: iload_2
      61: bipush        6
      63: if_icmpge     82
      66: aload_1
      67: iload_2
      68: dup2
      69: baload
      70: aload_0
      71: iload_2
      72: baload
      73: ixor
      74: i2b
      75: bastore
      76: iinc          2, 1
      79: goto          60
      82: aload_1
      83: areturn
    Exception table:
       from    to  target type
           2     6     9   Class java/net/SocketException

  private static boolean isValidAddress(byte[]);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: arraylength
       6: bipush        6
       8: if_icmpeq     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: astore_1
      15: aload_1
      16: arraylength
      17: istore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: iload_2
      22: if_icmpge     43
      25: aload_1
      26: iload_3
      27: baload
      28: istore        4
      30: iload         4
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iinc          3, 1
      40: goto          20
      43: iconst_0
      44: ireturn

  private static byte[] getMacAddress() throws java.net.SocketException;
    Code:
       0: invokestatic  #15                 // Method java/net/NetworkInterface.getNetworkInterfaces:()Ljava/util/Enumeration;
       3: astore_0
       4: aload_0
       5: ifnull        51
       8: aload_0
       9: invokeinterface #16,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      14: ifeq          51
      17: aload_0
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      23: checkcast     #18                 // class java/net/NetworkInterface
      26: astore_1
      27: aload_1
      28: invokevirtual #19                 // Method java/net/NetworkInterface.isLoopback:()Z
      31: ifne          48
      34: aload_1
      35: invokevirtual #20                 // Method java/net/NetworkInterface.getHardwareAddress:()[B
      38: astore_2
      39: aload_2
      40: invokestatic  #7                  // Method isValidAddress:([B)Z
      43: ifeq          48
      46: aload_2
      47: areturn
      48: goto          8
      51: aconst_null
      52: areturn

  static byte[] constructDummyMulticastAddress();
    Code:
       0: bipush        6
       2: newarray       byte
       4: astore_0
       5: new           #12                 // class java/security/SecureRandom
       8: dup
       9: invokespecial #13                 // Method java/security/SecureRandom."<init>":()V
      12: aload_0
      13: invokevirtual #14                 // Method java/security/SecureRandom.nextBytes:([B)V
      16: aload_0
      17: iconst_0
      18: dup2
      19: baload
      20: iconst_1
      21: ior
      22: i2b
      23: bastore
      24: aload_0
      25: areturn

  static {};
    Code:
       0: ldc           #11                 // class org/sonar/core/util/MacAddressProvider
       2: invokestatic  #21                 // Method org/sonar/api/utils/log/Loggers.get:(Ljava/lang/Class;)Lorg/sonar/api/utils/log/Logger;
       5: putstatic     #4                  // Field LOGGER:Lorg/sonar/api/utils/log/Logger;
       8: return
}
