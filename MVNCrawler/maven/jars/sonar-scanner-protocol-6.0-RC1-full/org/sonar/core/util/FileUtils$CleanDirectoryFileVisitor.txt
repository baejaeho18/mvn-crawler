Compiled from "FileUtils.java"
class org.sonar.core.util.FileUtils$CleanDirectoryFileVisitor extends java.nio.file.SimpleFileVisitor<java.nio.file.Path> {
  public static final int VISIT_MAX_DEPTH;

  private final java.nio.file.Path path;

  private final boolean symLink;

  public org.sonar.core.util.FileUtils$CleanDirectoryFileVisitor(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/nio/file/SimpleFileVisitor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field path:Ljava/nio/file/Path;
       9: aload_0
      10: aload_1
      11: invokestatic  #3                  // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      14: putfield      #4                  // Field symLink:Z
      17: return

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #5                  // class java/nio/file/LinkOption
       5: invokestatic  #6                  // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          18
      11: aload_1
      12: invokestatic  #7                  // Method org/sonar/core/util/FileUtils.access$000:(Ljava/nio/file/Path;)V
      15: goto          42
      18: aload_0
      19: getfield      #4                  // Field symLink:Z
      22: ifeq          38
      25: aload_1
      26: aload_0
      27: getfield      #2                  // Field path:Ljava/nio/file/Path;
      30: invokeinterface #8,  2            // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      35: ifne          42
      38: aload_1
      39: invokestatic  #9                  // Method java/nio/file/Files.delete:(Ljava/nio/file/Path;)V
      42: getstatic     #10                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      45: areturn

  public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field path:Ljava/nio/file/Path;
       5: invokeinterface #8,  2            // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      10: ifne          17
      13: aload_1
      14: invokestatic  #7                  // Method org/sonar/core/util/FileUtils.access$000:(Ljava/nio/file/Path;)V
      17: getstatic     #10                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      20: areturn

  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #12                 // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #13                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn
}
