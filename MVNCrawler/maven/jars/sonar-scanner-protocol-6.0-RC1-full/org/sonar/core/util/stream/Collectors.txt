Compiled from "Collectors.java"
public final class org.sonar.core.util.stream.Collectors {
  private org.sonar.core.util.stream.Collectors();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.util.stream.Collector<T, ?, java.util.List<T>> toList();
    Code:
       0: invokestatic  #2                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
       3: areturn

  public static <T> java.util.stream.Collector<T, ?, java.util.List<T>> toList(int);
    Code:
       0: iload_0
       1: invokedynamic #3,  0              // InvokeDynamic #0:get:(I)Ljava/util/function/Supplier;
       6: invokestatic  #4                  // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
       9: areturn

  public static <T> java.util.stream.Collector<T, ?, java.util.Set<T>> toSet();
    Code:
       0: invokestatic  #5                  // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
       3: areturn

  public static <T> java.util.stream.Collector<T, ?, java.util.Set<T>> toSet(int);
    Code:
       0: iload_0
       1: invokedynamic #6,  0              // InvokeDynamic #1:get:(I)Ljava/util/function/Supplier;
       6: invokestatic  #4                  // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
       9: areturn

  private static java.util.Set lambda$toSet$1(int);
    Code:
       0: new           #7                  // class java/util/HashSet
       3: dup
       4: iload_0
       5: invokespecial #8                  // Method java/util/HashSet."<init>":(I)V
       8: areturn

  private static java.util.List lambda$toList$0(int);
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: iload_0
       5: invokespecial #10                 // Method java/util/ArrayList."<init>":(I)V
       8: areturn
}
