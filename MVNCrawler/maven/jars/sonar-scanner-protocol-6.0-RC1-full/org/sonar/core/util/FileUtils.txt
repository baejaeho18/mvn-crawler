Compiled from "FileUtils.java"
public final class org.sonar.core.util.FileUtils {
  private static final java.lang.String DIRECTORY_CAN_NOT_BE_NULL;

  private static final java.util.EnumSet<java.nio.file.FileVisitOption> FOLLOW_LINKS;

  private org.sonar.core.util.FileUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void deleteDirectory(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #4                  // String Directory can not be null
       3: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #6                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      11: invokestatic  #1                  // Method deleteDirectoryImpl:(Ljava/nio/file/Path;)V
      14: return

  public static void cleanDirectory(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #4                  // String Directory can not be null
       3: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #6                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      11: astore_1
      12: aload_1
      13: iconst_0
      14: anewarray     #7                  // class java/nio/file/LinkOption
      17: invokestatic  #8                  // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      20: ifne          24
      23: return
      24: aload_1
      25: invokestatic  #9                  // Method cleanDirectoryImpl:(Ljava/nio/file/Path;)V
      28: return

  public static boolean deleteQuietly(java.io.File);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #10                 // Method java/io/File.isDirectory:()Z
      10: ifeq          20
      13: aload_0
      14: invokestatic  #11                 // Method deleteDirectory:(Ljava/io/File;)V
      17: goto          27
      20: aload_0
      21: invokevirtual #6                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      24: invokestatic  #12                 // Method java/nio/file/Files.delete:(Ljava/nio/file/Path;)V
      27: iconst_1
      28: ireturn
      29: astore_1
      30: iconst_0
      31: ireturn
    Exception table:
       from    to  target type
           6    28    29   Class java/io/IOException
           6    28    29   Class java/lang/SecurityException

  private static void checkIO(boolean, java.lang.String, java.lang.Object...) throws java.io.IOException;
    Code:
       0: iload_0
       1: ifne          17
       4: new           #13                 // class java/io/IOException
       7: dup
       8: aload_1
       9: aload_2
      10: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private static void cleanDirectoryImpl(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #7                  // class java/nio/file/LinkOption
       5: invokestatic  #17                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ldc           #18                 // String \'%s\' is not a directory
      10: iconst_1
      11: anewarray     #19                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: aastore
      18: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: getstatic     #21                 // Field FOLLOW_LINKS:Ljava/util/EnumSet;
      25: iconst_1
      26: new           #22                 // class org/sonar/core/util/FileUtils$CleanDirectoryFileVisitor
      29: dup
      30: aload_0
      31: invokespecial #23                 // Method org/sonar/core/util/FileUtils$CleanDirectoryFileVisitor."<init>":(Ljava/nio/file/Path;)V
      34: invokestatic  #24                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      37: pop
      38: return

  private static void deleteDirectoryImpl(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #4                  // String Directory can not be null
       3: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: iconst_0
       9: anewarray     #7                  // class java/nio/file/LinkOption
      12: invokestatic  #8                  // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      15: ifne          19
      18: return
      19: aload_0
      20: invokestatic  #25                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ldc           #26                 // String Directory \'%s\' is a symbolic link
      33: iconst_1
      34: anewarray     #19                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_0
      40: aastore
      41: invokestatic  #27                 // Method checkIO:(ZLjava/lang/String;[Ljava/lang/Object;)V
      44: aload_0
      45: iconst_0
      46: anewarray     #7                  // class java/nio/file/LinkOption
      49: invokestatic  #28                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      52: ifne          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ldc           #29                 // String Directory \'%s\' is a file
      62: iconst_1
      63: anewarray     #19                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload_0
      69: aastore
      70: invokestatic  #27                 // Method checkIO:(ZLjava/lang/String;[Ljava/lang/Object;)V
      73: aload_0
      74: getstatic     #30                 // Field org/sonar/core/util/FileUtils$DeleteRecursivelyFileVisitor.INSTANCE:Lorg/sonar/core/util/FileUtils$DeleteRecursivelyFileVisitor;
      77: invokestatic  #31                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      80: pop
      81: aload_0
      82: iconst_0
      83: anewarray     #7                  // class java/nio/file/LinkOption
      86: invokestatic  #8                  // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      89: ifne          96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: ldc           #32                 // String Unable to delete directory \'%s\'
      99: iconst_1
     100: anewarray     #19                 // class java/lang/Object
     103: dup
     104: iconst_0
     105: aload_0
     106: aastore
     107: invokestatic  #27                 // Method checkIO:(ZLjava/lang/String;[Ljava/lang/Object;)V
     110: return

  static void access$000(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method deleteDirectoryImpl:(Ljava/nio/file/Path;)V
       4: return

  static {};
    Code:
       0: getstatic     #33                 // Field java/nio/file/FileVisitOption.FOLLOW_LINKS:Ljava/nio/file/FileVisitOption;
       3: invokestatic  #34                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       6: putstatic     #21                 // Field FOLLOW_LINKS:Ljava/util/EnumSet;
       9: return
}
