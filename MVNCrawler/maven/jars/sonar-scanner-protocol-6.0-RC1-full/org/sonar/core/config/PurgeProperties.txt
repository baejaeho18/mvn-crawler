Compiled from "PurgeProperties.java"
public final class org.sonar.core.config.PurgeProperties {
  private org.sonar.core.config.PurgeProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.List<org.sonar.api.config.PropertyDefinition> all();
    Code:
       0: bipush        6
       2: anewarray     #2                  // class org/sonar/api/config/PropertyDefinition
       5: dup
       6: iconst_0
       7: ldc           #4                  // String sonar.dbcleaner.cleanDirectory
       9: invokestatic  #5                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      12: ldc           #6                  // String true
      14: invokevirtual #7                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      17: ldc           #8                  // String Clean directory/package history
      19: invokevirtual #9                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      22: ldc           #10                 // String If set to true, no history is kept at directory/package level. Setting this to false can cause database bloat.
      24: invokevirtual #11                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      27: getstatic     #12                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
      30: invokevirtual #13                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      33: ldc           #15                 // String TRK
      35: iconst_0
      36: anewarray     #16                 // class java/lang/String
      39: invokevirtual #17                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      42: ldc           #19                 // String general
      44: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      47: ldc           #21                 // String databaseCleaner
      49: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      52: iconst_1
      53: invokevirtual #23                 // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
      56: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      59: aastore
      60: dup
      61: iconst_1
      62: ldc           #25                 // String sonar.dbcleaner.daysBeforeDeletingClosedIssues
      64: invokestatic  #5                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      67: ldc           #26                 // String 30
      69: invokevirtual #7                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      72: ldc           #27                 // String Delete closed issues after
      74: invokevirtual #9                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      77: ldc           #28                 // String Issues that have been closed for more than this number of days will be deleted.
      79: invokevirtual #11                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      82: getstatic     #29                 // Field org/sonar/api/PropertyType.INTEGER:Lorg/sonar/api/PropertyType;
      85: invokevirtual #13                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      88: ldc           #15                 // String TRK
      90: iconst_0
      91: anewarray     #16                 // class java/lang/String
      94: invokevirtual #17                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      97: ldc           #19                 // String general
      99: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     102: ldc           #21                 // String databaseCleaner
     104: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     107: iconst_2
     108: invokevirtual #23                 // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     111: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     114: aastore
     115: dup
     116: iconst_2
     117: ldc           #30                 // String sonar.dbcleaner.hoursBeforeKeepingOnlyOneSnapshotByDay
     119: invokestatic  #5                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     122: ldc           #31                 // String 24
     124: invokevirtual #7                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     127: ldc           #32                 // String Keep only one snapshot a day after
     129: invokevirtual #9                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     132: ldc           #33                 // String After this number of hours, if there are several snapshots during the same day, the DbCleaner keeps the most recent one and fully deletes the other ones.
     134: invokevirtual #11                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     137: getstatic     #29                 // Field org/sonar/api/PropertyType.INTEGER:Lorg/sonar/api/PropertyType;
     140: invokevirtual #13                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     143: ldc           #15                 // String TRK
     145: iconst_0
     146: anewarray     #16                 // class java/lang/String
     149: invokevirtual #17                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     152: ldc           #19                 // String general
     154: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     157: ldc           #21                 // String databaseCleaner
     159: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     162: iconst_3
     163: invokevirtual #23                 // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     166: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     169: aastore
     170: dup
     171: iconst_3
     172: ldc           #34                 // String sonar.dbcleaner.weeksBeforeKeepingOnlyOneSnapshotByWeek
     174: invokestatic  #5                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     177: ldc           #35                 // String 4
     179: invokevirtual #7                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     182: ldc           #36                 // String Keep only one snapshot a week after
     184: invokevirtual #9                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     187: ldc           #37                 // String After this number of weeks, if there are several snapshots during the same week, the DbCleaner keeps the most recent one and fully deletes the other ones
     189: invokevirtual #11                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     192: getstatic     #29                 // Field org/sonar/api/PropertyType.INTEGER:Lorg/sonar/api/PropertyType;
     195: invokevirtual #13                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     198: ldc           #15                 // String TRK
     200: iconst_0
     201: anewarray     #16                 // class java/lang/String
     204: invokevirtual #17                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     207: ldc           #19                 // String general
     209: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     212: ldc           #21                 // String databaseCleaner
     214: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     217: iconst_4
     218: invokevirtual #23                 // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     221: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     224: aastore
     225: dup
     226: iconst_4
     227: ldc           #38                 // String sonar.dbcleaner.weeksBeforeKeepingOnlyOneSnapshotByMonth
     229: invokestatic  #5                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     232: ldc           #39                 // String 52
     234: invokevirtual #7                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     237: ldc           #40                 // String Keep only one snapshot a month after
     239: invokevirtual #9                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     242: ldc           #41                 // String After this number of weeks, if there are several snapshots during the same month, the DbCleaner keeps the most recent one and fully deletes the other ones.
     244: invokevirtual #11                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     247: getstatic     #29                 // Field org/sonar/api/PropertyType.INTEGER:Lorg/sonar/api/PropertyType;
     250: invokevirtual #13                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     253: ldc           #15                 // String TRK
     255: iconst_0
     256: anewarray     #16                 // class java/lang/String
     259: invokevirtual #17                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     262: ldc           #19                 // String general
     264: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     267: ldc           #21                 // String databaseCleaner
     269: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     272: iconst_5
     273: invokevirtual #23                 // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     276: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     279: aastore
     280: dup
     281: iconst_5
     282: ldc           #42                 // String sonar.dbcleaner.weeksBeforeDeletingAllSnapshots
     284: invokestatic  #5                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     287: ldc           #43                 // String 260
     289: invokevirtual #7                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     292: ldc           #44                 // String Delete all snapshots after
     294: invokevirtual #9                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     297: ldc           #45                 // String After this number of weeks, all snapshots are fully deleted.
     299: invokevirtual #11                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     302: getstatic     #29                 // Field org/sonar/api/PropertyType.INTEGER:Lorg/sonar/api/PropertyType;
     305: invokevirtual #13                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     308: ldc           #15                 // String TRK
     310: iconst_0
     311: anewarray     #16                 // class java/lang/String
     314: invokevirtual #17                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     317: ldc           #19                 // String general
     319: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     322: ldc           #21                 // String databaseCleaner
     324: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     327: bipush        6
     329: invokevirtual #23                 // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     332: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     335: aastore
     336: invokestatic  #46                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     339: areturn
}
