Compiled from "SecurityProperties.java"
class org.sonar.core.config.SecurityProperties {
  private org.sonar.core.config.SecurityProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.util.List<org.sonar.api.config.PropertyDefinition> all();
    Code:
       0: ldc           #3                  // String sonar.allowUsersToSignUp
       2: invokestatic  #4                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
       5: iconst_0
       6: invokestatic  #5                  // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       9: invokevirtual #6                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      12: ldc           #7                  // String Activate sign up for local account
      14: invokevirtual #8                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      17: ldc           #9                  // String Allow users to sign up online for a local account. For that purpose, a \"Sign Up\" link will be available in the \"Login\" page.
      19: invokevirtual #10                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      22: getstatic     #11                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
      25: invokevirtual #12                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      28: ldc           #13                 // String security
      30: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      33: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      36: ldc           #16                 // String sonar.defaultGroup
      38: invokestatic  #4                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      41: ldc           #17                 // String sonar-users
      43: invokevirtual #6                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      46: ldc           #18                 // String Default user group
      48: invokevirtual #8                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      51: ldc           #19                 // String Any new users will automatically join this group.
      53: invokevirtual #10                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      56: ldc           #13                 // String security
      58: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      61: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      64: ldc           #20                 // String sonar.forceAuthentication
      66: invokestatic  #4                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      69: iconst_0
      70: invokestatic  #5                  // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      73: invokevirtual #6                  // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      76: ldc           #21                 // String Force user authentication
      78: invokevirtual #8                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      81: ldc           #22                 // String Forcing user authentication stops un-logged users to access SonarQube.
      83: invokevirtual #10                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      86: getstatic     #11                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
      89: invokevirtual #12                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      92: ldc           #13                 // String security
      94: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      97: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     100: invokestatic  #23                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
     103: areturn
}
