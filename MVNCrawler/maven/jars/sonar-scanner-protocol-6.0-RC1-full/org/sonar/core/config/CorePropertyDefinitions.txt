Compiled from "CorePropertyDefinitions.java"
public class org.sonar.core.config.CorePropertyDefinitions {
  public static final java.lang.String TIMEMACHINE_PERIOD_PREFIX;

  public static final java.lang.String TIMEMACHINE_MODE_PREVIOUS_ANALYSIS;

  public static final java.lang.String TIMEMACHINE_MODE_DATE;

  public static final java.lang.String TIMEMACHINE_MODE_VERSION;

  public static final java.lang.String TIMEMACHINE_MODE_DAYS;

  public static final java.lang.String TIMEMACHINE_MODE_PREVIOUS_VERSION;

  private static final java.lang.String TIMEMACHINE_DEFAULT_PERIOD_1;

  private static final java.lang.String TIMEMACHINE_DEFAULT_PERIOD_2;

  private static final java.lang.String TIMEMACHINE_DEFAULT_PERIOD_3;

  private static final java.lang.String TIMEMACHINE_DEFAULT_PERIOD_4;

  private static final java.lang.String TIMEMACHINE_DEFAULT_PERIOD_5;

  private org.sonar.core.config.CorePropertyDefinitions();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.List<org.sonar.api.config.PropertyDefinition> all();
    Code:
       0: invokestatic  #4                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       3: astore_0
       4: aload_0
       5: invokestatic  #5                  // Method org/sonar/core/config/IssueExclusionProperties.all:()Ljava/util/List;
       8: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: invokestatic  #7                  // Method org/sonar/core/config/ExclusionProperties.all:()Ljava/util/List;
      18: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      23: pop
      24: aload_0
      25: invokestatic  #8                  // Method org/sonar/core/config/SecurityProperties.all:()Ljava/util/List;
      28: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      33: pop
      34: aload_0
      35: invokestatic  #9                  // Method org/sonar/core/config/DebtProperties.all:()Ljava/util/List;
      38: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      43: pop
      44: aload_0
      45: invokestatic  #10                 // Method org/sonar/core/config/PurgeProperties.all:()Ljava/util/List;
      48: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: aload_0
      55: ldc           #11                 // String sonar.jdbc.password
      57: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      60: getstatic     #13                 // Field org/sonar/api/PropertyType.PASSWORD:Lorg/sonar/api/PropertyType;
      63: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      66: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
      69: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      72: ldc           #18                 // String sonar.core.serverBaseURL
      74: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      77: ldc           #19                 // String Server base URL
      79: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      82: ldc           #21                 // String HTTP URL of this SonarQube server, such as <i>http://yourhost.yourdomain/sonar</i>. This value is used i.e. to create links in emails.
      84: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      87: ldc           #23                 // String general
      89: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      92: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      95: ldc           #25                 // String sonar.links.homepage
      97: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     100: ldc           #26                 // String Project Home Page
     102: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     105: ldc           #27                 // String HTTP URL of the home page of the project.
     107: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     110: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     113: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     116: ldc           #28                 // String sonar.links.ci
     118: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     121: ldc           #29                 // String CI server
     123: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     126: ldc           #30                 // String HTTP URL of the continuous integration server.
     128: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     131: ldc           #23                 // String general
     133: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     136: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     139: ldc           #31                 // String sonar.links.issue
     141: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     144: ldc           #32                 // String Issue Tracker
     146: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     149: ldc           #33                 // String HTTP URL of the issue tracker.
     151: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     154: ldc           #23                 // String general
     156: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     159: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     162: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     165: ldc           #34                 // String sonar.links.scm
     167: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     170: ldc           #35                 // String SCM server
     172: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     175: ldc           #36                 // String HTTP URL of the server which hosts the sources of the project.
     177: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     180: ldc           #23                 // String general
     182: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     185: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     188: ldc           #37                 // String sonar.links.scm_dev
     190: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     193: ldc           #38                 // String SCM connection for developers
     195: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     198: ldc           #39                 // String HTTP URL used by developers to connect to the SCM server for the project.
     200: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     203: ldc           #23                 // String general
     205: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     208: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     211: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     214: ldc           #40                 // String sonar.analysis.mode
     216: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     219: ldc           #41                 // String Analysis mode
     221: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     224: getstatic     #42                 // Field org/sonar/api/PropertyType.SINGLE_SELECT_LIST:Lorg/sonar/api/PropertyType;
     227: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     230: iconst_3
     231: anewarray     #43                 // class java/lang/String
     234: dup
     235: iconst_0
     236: ldc           #44                 // String analysis
     238: aastore
     239: dup
     240: iconst_1
     241: ldc           #45                 // String preview
     243: aastore
     244: dup
     245: iconst_2
     246: ldc           #46                 // String incremental
     248: aastore
     249: invokestatic  #47                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     252: invokevirtual #48                 // Method org/sonar/api/config/PropertyDefinition$Builder.options:(Ljava/util/List;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     255: ldc           #23                 // String general
     257: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     260: ldc           #44                 // String analysis
     262: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     265: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     268: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     271: ldc           #50                 // String sonar.preview.includePlugins
     273: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     276: ldc           #51                 // String Plugins accepted for Preview mode
     278: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     281: ldc           #52                 // String Comma-separated list of plugin keys. Those plugins will be used during preview analyses.
     283: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     286: ldc           #23                 // String general
     288: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     291: ldc           #53                 // String
     293: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     296: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     299: ldc           #54                 // String sonar.preview.excludePlugins
     301: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     304: ldc           #55                 // String Plugins excluded for Preview mode
     306: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     309: ldc           #56                 // String Comma-separated list of plugin keys. Those plugins will not be used during preview analyses.
     311: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     314: ldc           #23                 // String general
     316: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     319: ldc           #57                 // String buildstability,devcockpit,pdfreport,report,views,jira,buildbreaker,scmstats
     321: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     324: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     327: ldc           #58                 // String sonar.security.realm
     329: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     332: ldc           #59                 // String Security Realm
     334: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     337: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     340: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     343: ldc           #60                 // String sonar.authenticator.downcase
     345: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     348: ldc           #61                 // String Downcase login
     350: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     353: ldc           #62                 // String Downcase login during user authentication, typically for Active Directory
     355: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     358: getstatic     #63                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
     361: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     364: iconst_0
     365: invokestatic  #64                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     368: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     371: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     374: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     377: bipush        18
     379: anewarray     #65                 // class org/sonar/api/config/PropertyDefinition
     382: dup
     383: iconst_0
     384: ldc           #66                 // String sonar.authenticator.createUsers
     386: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     389: ldc           #67                 // String Create user accounts
     391: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     394: ldc           #68                 // String Create accounts when authenticating users via an external system
     396: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     399: getstatic     #63                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
     402: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     405: iconst_1
     406: invokestatic  #64                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     409: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     412: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     415: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     418: aastore
     419: dup
     420: iconst_1
     421: ldc           #69                 // String sonar.authenticator.ignoreStartupFailure
     423: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     426: ldc           #70                 // String Ignore failures during authenticator startup
     428: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     431: getstatic     #63                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
     434: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     437: iconst_0
     438: invokestatic  #64                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     441: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     444: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     447: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     450: aastore
     451: dup
     452: iconst_2
     453: ldc           #71                 // String sonar.enableFileVariation
     455: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     458: ldc           #72                 // String Enable file variation
     460: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     463: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.hidden:()Lorg/sonar/api/config/PropertyDefinition$Builder;
     466: getstatic     #63                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
     469: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     472: iconst_0
     473: invokestatic  #64                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     476: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     479: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     482: aastore
     483: dup
     484: iconst_3
     485: ldc           #73                 // String sonar.security.localUsers
     487: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     490: ldc           #74                 // String Local/technical users
     492: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     495: ldc           #75                 // String Comma separated list of user logins that will always be authenticated using SonarQube database. When using the LDAP plugin, for these accounts, the user attributes (name, email, ...) are not re-synchronized
     497: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     500: getstatic     #76                 // Field org/sonar/api/PropertyType.STRING:Lorg/sonar/api/PropertyType;
     503: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     506: iconst_1
     507: invokevirtual #77                 // Method org/sonar/api/config/PropertyDefinition$Builder.multiValues:(Z)Lorg/sonar/api/config/PropertyDefinition$Builder;
     510: ldc           #78                 // String admin
     512: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     515: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     518: aastore
     519: dup
     520: iconst_4
     521: ldc           #79                 // String sonar.scm.disabled
     523: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     526: ldc           #80                 // String Disable the SCM Sensor
     528: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     531: ldc           #81                 // String Disable the retrieval of blame information from Source Control Manager
     533: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     536: ldc           #82                 // String scm
     538: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     541: getstatic     #63                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
     544: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     547: ldc           #84                 // String TRK
     549: iconst_0
     550: anewarray     #43                 // class java/lang/String
     553: invokevirtual #85                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     556: iconst_0
     557: invokestatic  #64                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     560: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     563: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     566: aastore
     567: dup
     568: iconst_5
     569: ldc           #86                 // String sonar.scm.provider
     571: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     574: ldc           #87                 // String Key of the SCM provider for this project
     576: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     579: ldc           #88                 // String Force the provider to be used to get SCM information for this project. By default auto-detection is done. Example: svn, git.
     581: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     584: ldc           #82                 // String scm
     586: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     589: ldc           #84                 // String TRK
     591: iconst_0
     592: anewarray     #43                 // class java/lang/String
     595: invokevirtual #89                 // Method org/sonar/api/config/PropertyDefinition$Builder.onlyOnQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     598: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     601: aastore
     602: dup
     603: bipush        6
     605: ldc           #90                 // String sonar.lf.logoUrl
     607: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     610: ldc           #91                 // String sonar.branding.image
     612: invokevirtual #92                 // Method org/sonar/api/config/PropertyDefinition$Builder.deprecatedKey:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     615: ldc           #93                 // String Logo URL
     617: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     620: ldc           #94                 // String URL to logo image. Any standard format is accepted.
     622: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     625: ldc           #23                 // String general
     627: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     630: ldc           #95                 // String looknfeel
     632: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     635: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     638: aastore
     639: dup
     640: bipush        7
     642: ldc           #97                 // String sonar.lf.logoWidthPx
     644: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     647: ldc           #98                 // String sonar.branding.image.width
     649: invokevirtual #92                 // Method org/sonar/api/config/PropertyDefinition$Builder.deprecatedKey:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     652: ldc           #99                 // String Width of image in pixels
     654: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     657: ldc           #100                // String Width in pixels, given that the height of the the image is constrained to 30px
     659: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     662: ldc           #23                 // String general
     664: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     667: ldc           #95                 // String looknfeel
     669: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     672: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     675: aastore
     676: dup
     677: bipush        8
     679: ldc           #101                // String sonar.lf.enableGravatar
     681: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     684: ldc           #102                // String Enable support of gravatars
     686: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     689: ldc           #103                // String Gravatars are profile pictures of users based on their email.
     691: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     694: getstatic     #63                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
     697: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     700: iconst_1
     701: invokestatic  #64                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     704: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     707: ldc           #23                 // String general
     709: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     712: ldc           #95                 // String looknfeel
     714: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     717: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     720: aastore
     721: dup
     722: bipush        9
     724: ldc           #104                // String sonar.lf.gravatarServerUrl
     726: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     729: ldc           #105                // String Gravatar URL
     731: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     734: ldc           #106                // String Optional URL of custom Gravatar service. Accepted variables are {EMAIL_MD5} for MD5 hash of email and {SIZE} for the picture size in pixels.
     736: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     739: ldc           #107                // String https://secure.gravatar.com/avatar/{EMAIL_MD5}.jpg?s={SIZE}&d=identicon
     741: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     744: ldc           #23                 // String general
     746: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     749: ldc           #95                 // String looknfeel
     751: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     754: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     757: aastore
     758: dup
     759: bipush        10
     761: ldc           #108                // String sonar.issues.defaultAssigneeLogin
     763: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     766: ldc           #109                // String Default Assignee
     768: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     771: ldc           #110                // String New issues will be assigned to this user each time it is not possible to determine the user who is the author of the issue.
     773: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     776: ldc           #23                 // String general
     778: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     781: ldc           #111                // String issues
     783: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     786: ldc           #84                 // String TRK
     788: iconst_0
     789: anewarray     #43                 // class java/lang/String
     792: invokevirtual #85                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     795: getstatic     #112                // Field org/sonar/api/PropertyType.USER_LOGIN:Lorg/sonar/api/PropertyType;
     798: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     801: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     804: aastore
     805: dup
     806: bipush        11
     808: ldc           #113                // String sonar.timemachine.period1
     810: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     813: ldc           #114                // String Leak Period
     815: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     818: ldc           #115                // String Period used to compare measures and track new issues. Values are : <ul class=\'bullet\'><li>Number of days before analysis, for example 5.</li><li>A custom date. Format is yyyy-MM-dd, for example 2010-12-25</li><li>\'previous_analysis\' to compare to previous analysis</li><li>\'previous_version\' to compare to the previous version in the project history</li><li>A version, for example \'1.2\' or \'BASELINE\'</li></ul><p>When specifying a number of days or a date, the snapshot selected for comparison is  the first one available inside the corresponding time range. </p><p>Changing this property only takes effect after subsequent project inspections.<p/>
     820: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     823: ldc           #116                // String previous_version
     825: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     828: ldc           #23                 // String general
     830: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     833: ldc           #117                // String differentialViews
     835: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     838: ldc           #84                 // String TRK
     840: iconst_1
     841: anewarray     #43                 // class java/lang/String
     844: dup
     845: iconst_0
     846: ldc           #118                // String VW
     848: aastore
     849: invokevirtual #85                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     852: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     855: aastore
     856: dup
     857: bipush        12
     859: ldc           #119                // String sonar.timemachine.period2
     861: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     864: ldc           #120                // String Period 2
     866: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     869: ldc           #121                // String See the property \'Leak Period\'
     871: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     874: ldc           #122                // String previous_analysis
     876: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     879: ldc           #23                 // String general
     881: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     884: ldc           #117                // String differentialViews
     886: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     889: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     892: aastore
     893: dup
     894: bipush        13
     896: ldc           #123                // String sonar.timemachine.period3
     898: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     901: ldc           #124                // String Period 3
     903: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     906: ldc           #121                // String See the property \'Leak Period\'
     908: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     911: ldc           #125                // String 30
     913: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     916: ldc           #23                 // String general
     918: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     921: ldc           #117                // String differentialViews
     923: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     926: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     929: aastore
     930: dup
     931: bipush        14
     933: ldc           #126                // String sonar.timemachine.period4
     935: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     938: ldc           #127                // String Period 4
     940: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     943: ldc           #128                // String Period used to compare measures and track new issues. This property is specific to the project. Values are : <ul class=\'bullet\'><li>Number of days before analysis, for example 5.</li><li>A custom date. Format is yyyy-MM-dd, for example 2010-12-25</li><li>\'previous_analysis\' to compare to previous analysis</li><li>\'previous_version\' to compare to the previous version in the project history</li><li>A version, for example \'1.2\' or \'BASELINE\'</li></ul><p>When specifying a number of days or a date, the snapshot selected for comparison is the first one available inside the corresponding time range. </p><p>Changing this property only takes effect after subsequent project inspections.<p/>
     945: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     948: ldc           #53                 // String
     950: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     953: ldc           #84                 // String TRK
     955: iconst_0
     956: anewarray     #43                 // class java/lang/String
     959: invokevirtual #89                 // Method org/sonar/api/config/PropertyDefinition$Builder.onlyOnQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     962: ldc           #23                 // String general
     964: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     967: ldc           #117                // String differentialViews
     969: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     972: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     975: aastore
     976: dup
     977: bipush        15
     979: ldc           #129                // String sonar.timemachine.period5
     981: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     984: ldc           #130                // String Period 5
     986: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     989: ldc           #131                // String See the property \'Period 4\'
     991: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     994: ldc           #53                 // String
     996: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     999: ldc           #84                 // String TRK
    1001: iconst_0
    1002: anewarray     #43                 // class java/lang/String
    1005: invokevirtual #89                 // Method org/sonar/api/config/PropertyDefinition$Builder.onlyOnQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1008: ldc           #23                 // String general
    1010: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1013: ldc           #117                // String differentialViews
    1015: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1018: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
    1021: aastore
    1022: dup
    1023: bipush        16
    1025: ldc           #132                // String sonar.cpd.cross_project
    1027: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1030: iconst_0
    1031: invokestatic  #133                // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
    1034: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1037: ldc           #134                // String Cross project duplication detection
    1039: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1042: ldc           #135                // String By default, SonarQube detects duplications at sub-project level. This means that a block duplicated on two sub-projects of the same project won\'t be reported. Setting this parameter to \"true\" allows to detect duplicates across sub-projects and more generally across projects. Note that activating this property will slightly increase each SonarQube analysis time.
    1044: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1047: ldc           #84                 // String TRK
    1049: iconst_0
    1050: anewarray     #43                 // class java/lang/String
    1053: invokevirtual #85                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1056: ldc           #23                 // String general
    1058: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1061: ldc           #136                // String duplications
    1063: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1066: getstatic     #63                 // Field org/sonar/api/PropertyType.BOOLEAN:Lorg/sonar/api/PropertyType;
    1069: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1072: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
    1075: aastore
    1076: dup
    1077: bipush        17
    1079: ldc           #137                // String sonar.cpd.exclusions
    1081: invokestatic  #12                 // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1084: ldc           #53                 // String
    1086: invokevirtual #49                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1089: ldc           #138                // String Duplication Exclusions
    1091: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1094: ldc           #139                // String Patterns used to exclude some source files from the duplication detection mechanism. See below to know how to use wildcards to specify this property.
    1096: invokevirtual #22                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1099: ldc           #84                 // String TRK
    1101: iconst_1
    1102: anewarray     #43                 // class java/lang/String
    1105: dup
    1106: iconst_0
    1107: ldc           #140                // String BRC
    1109: aastore
    1110: invokevirtual #85                 // Method org/sonar/api/config/PropertyDefinition$Builder.onQualifiers:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1113: ldc           #141                // String exclusions
    1115: invokevirtual #24                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1118: ldc           #136                // String duplications
    1120: invokevirtual #96                 // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1123: iconst_1
    1124: invokevirtual #77                 // Method org/sonar/api/config/PropertyDefinition$Builder.multiValues:(Z)Lorg/sonar/api/config/PropertyDefinition$Builder;
    1127: invokevirtual #16                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
    1130: aastore
    1131: invokestatic  #142                // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
    1134: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
    1139: pop
    1140: aload_0
    1141: areturn
}
