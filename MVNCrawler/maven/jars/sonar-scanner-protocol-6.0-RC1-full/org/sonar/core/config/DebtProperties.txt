Compiled from "DebtProperties.java"
class org.sonar.core.config.DebtProperties {
  private org.sonar.core.config.DebtProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.util.List<org.sonar.api.config.PropertyDefinition> all();
    Code:
       0: ldc           #3                  // String sonar.technicalDebt.hoursInDay
       2: invokestatic  #4                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
       5: ldc           #5                  // String Number of working hours in a day
       7: invokevirtual #6                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      10: getstatic     #7                  // Field org/sonar/api/PropertyType.INTEGER:Lorg/sonar/api/PropertyType;
      13: invokevirtual #8                  // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      16: ldc           #9                  // String 8
      18: invokevirtual #10                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      21: ldc           #11                 // String technicalDebt
      23: invokevirtual #12                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      26: ldc           #13                 // String sqale.hoursInDay
      28: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.deprecatedKey:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      31: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      34: ldc           #16                 // String sonar.technicalDebt.developmentCost
      36: invokestatic  #4                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      39: ldc           #17                 // String 30
      41: invokevirtual #10                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      44: ldc           #18                 // String Development cost
      46: invokevirtual #6                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      49: ldc           #19                 // String Cost to develop one line of code (LOC). Example: if the cost to develop 1 LOC has been estimated at 30 minutes, then the value of this property would be 30.
      51: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      54: ldc           #11                 // String technicalDebt
      56: invokevirtual #12                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      59: ldc           #21                 // String workUnitsBySizePoint
      61: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.deprecatedKey:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      64: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      67: ldc           #22                 // String sonar.technicalDebt.ratingGrid
      69: invokestatic  #4                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      72: ldc           #23                 // String 0.05,0.1,0.2,0.5
      74: invokevirtual #10                 // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      77: ldc           #24                 // String Maintainability rating grid
      79: invokevirtual #6                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      82: ldc           #25                 // String Maintainability ratings range from A (very good) to E (very bad). The rating is determined by the value of the Technical Debt Ratio, which compares the technical debt on a project to the cost it would take to rewrite the code from scratch. The default values for A through D are 0.05,0.1,0.2,0.5. Anything over 0.5 is an E. Example: assuming the development cost is 30 minutes, a project with a technical debt of 24,000 minutes for 2,500 LOC will have a technical debt ratio of 24000/(30 * 2,500) = 0.32. That yields a maintainability rating of D.
      84: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      87: ldc           #11                 // String technicalDebt
      89: invokevirtual #12                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      92: ldc           #26                 // String ratingGrid
      94: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.deprecatedKey:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      97: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     100: ldc           #27                 // String languageSpecificParameters
     102: invokestatic  #4                  // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     105: ldc           #28                 // String Language specific parameters
     107: invokevirtual #6                  // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     110: ldc           #29                 // String The parameters specified here for a given language will override the general parameters defined in this section.
     112: invokevirtual #20                 // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     115: ldc           #11                 // String technicalDebt
     117: invokevirtual #12                 // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     120: ldc           #27                 // String languageSpecificParameters
     122: invokevirtual #14                 // Method org/sonar/api/config/PropertyDefinition$Builder.deprecatedKey:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     125: ldc           #30                 // String language
     127: invokestatic  #31                 // Method org/sonar/api/config/PropertyFieldDefinition.build:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     130: ldc           #32                 // String Language Key
     132: invokevirtual #33                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     135: ldc           #34                 // String Ex: java, cs, cpp...
     137: invokevirtual #35                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     140: getstatic     #36                 // Field org/sonar/api/PropertyType.STRING:Lorg/sonar/api/PropertyType;
     143: invokevirtual #37                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     146: invokevirtual #38                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.build:()Lorg/sonar/api/config/PropertyFieldDefinition;
     149: iconst_1
     150: anewarray     #39                 // class org/sonar/api/config/PropertyFieldDefinition
     153: dup
     154: iconst_0
     155: ldc           #40                 // String man_days
     157: invokestatic  #31                 // Method org/sonar/api/config/PropertyFieldDefinition.build:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     160: ldc           #18                 // String Development cost
     162: invokevirtual #33                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     165: ldc           #41                 // String If left blank, the generic value defined in this section will be used.
     167: invokevirtual #35                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     170: getstatic     #42                 // Field org/sonar/api/PropertyType.FLOAT:Lorg/sonar/api/PropertyType;
     173: invokevirtual #37                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyFieldDefinition$Builder;
     176: invokevirtual #38                 // Method org/sonar/api/config/PropertyFieldDefinition$Builder.build:()Lorg/sonar/api/config/PropertyFieldDefinition;
     179: aastore
     180: invokevirtual #43                 // Method org/sonar/api/config/PropertyDefinition$Builder.fields:(Lorg/sonar/api/config/PropertyFieldDefinition;[Lorg/sonar/api/config/PropertyFieldDefinition;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     183: invokevirtual #15                 // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     186: invokestatic  #44                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
     189: areturn
}
