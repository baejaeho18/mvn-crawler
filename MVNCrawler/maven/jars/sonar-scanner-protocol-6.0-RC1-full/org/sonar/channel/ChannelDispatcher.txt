Compiled from "ChannelDispatcher.java"
public class org.sonar.channel.ChannelDispatcher<O> extends org.sonar.channel.Channel<O> {
  private static final org.slf4j.Logger LOG;

  private final boolean failIfNoChannelToConsumeOneCharacter;

  private final org.sonar.channel.Channel<O>[] channels;

  public org.sonar.channel.ChannelDispatcher(java.util.List<org.sonar.channel.Channel>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #24                 // Method "<init>":(Ljava/util/List;Z)V
       6: return

  public org.sonar.channel.ChannelDispatcher(org.sonar.channel.Channel...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: iconst_0
       6: invokespecial #24                 // Method "<init>":(Ljava/util/List;Z)V
       9: return

  public org.sonar.channel.ChannelDispatcher(java.util.List<org.sonar.channel.Channel>, boolean);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/sonar/channel/Channel."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_1
       7: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      12: anewarray     #5                  // class org/sonar/channel/Channel
      15: invokeinterface #49,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      20: checkcast     #50                 // class "[Lorg/sonar/channel/Channel;"
      23: putfield      #52                 // Field channels:[Lorg/sonar/channel/Channel;
      26: aload_0
      27: iload_2
      28: putfield      #54                 // Field failIfNoChannelToConsumeOneCharacter:Z
      31: return

  private org.sonar.channel.ChannelDispatcher(org.sonar.channel.ChannelDispatcher$Builder);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/sonar/channel/Channel."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #59                 // Method org/sonar/channel/ChannelDispatcher$Builder.access$000:(Lorg/sonar/channel/ChannelDispatcher$Builder;)Ljava/util/List;
       9: aload_1
      10: invokestatic  #59                 // Method org/sonar/channel/ChannelDispatcher$Builder.access$000:(Lorg/sonar/channel/ChannelDispatcher$Builder;)Ljava/util/List;
      13: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      18: anewarray     #5                  // class org/sonar/channel/Channel
      21: invokeinterface #49,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      26: checkcast     #50                 // class "[Lorg/sonar/channel/Channel;"
      29: putfield      #52                 // Field channels:[Lorg/sonar/channel/Channel;
      32: aload_0
      33: aload_1
      34: invokestatic  #63                 // Method org/sonar/channel/ChannelDispatcher$Builder.access$100:(Lorg/sonar/channel/ChannelDispatcher$Builder;)Z
      37: putfield      #54                 // Field failIfNoChannelToConsumeOneCharacter:Z
      40: return

  public boolean consume(org.sonar.channel.CodeReader, O);
    Code:
       0: aload_1
       1: invokevirtual #72                 // Method org/sonar/channel/CodeReader.peek:()I
       4: istore_3
       5: iload_3
       6: iconst_m1
       7: if_icmpeq     187
      10: iconst_0
      11: istore        4
      13: aload_0
      14: getfield      #52                 // Field channels:[Lorg/sonar/channel/Channel;
      17: astore        5
      19: aload         5
      21: arraylength
      22: istore        6
      24: iconst_0
      25: istore        7
      27: iload         7
      29: iload         6
      31: if_icmpge     63
      34: aload         5
      36: iload         7
      38: aaload
      39: astore        8
      41: aload         8
      43: aload_1
      44: aload_2
      45: invokevirtual #76                 // Method org/sonar/channel/Channel.consume:(Lorg/sonar/channel/CodeReader;Ljava/lang/Object;)Z
      48: ifeq          57
      51: iconst_1
      52: istore        4
      54: goto          63
      57: iinc          7, 1
      60: goto          27
      63: iload         4
      65: ifne          179
      68: getstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
      71: invokeinterface #84,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      76: ifne          86
      79: aload_0
      80: getfield      #54                 // Field failIfNoChannelToConsumeOneCharacter:Z
      83: ifeq          174
      86: new           #86                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #89                 // String None of the channel has been able to handle character \'
      95: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #72                 // Method org/sonar/channel/CodeReader.peek:()I
     102: i2c
     103: invokevirtual #96                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: ldc           #98                 // String \' (decimal value
     108: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_1
     112: invokevirtual #72                 // Method org/sonar/channel/CodeReader.peek:()I
     115: invokevirtual #101                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     118: ldc           #103                // String ) at line
     120: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_1
     124: invokevirtual #106                // Method org/sonar/channel/CodeReader.getLinePosition:()I
     127: invokevirtual #101                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: ldc           #108                // String , column
     132: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_1
     136: invokevirtual #111                // Method org/sonar/channel/CodeReader.getColumnPosition:()I
     139: invokevirtual #101                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     142: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: astore        5
     147: aload_0
     148: getfield      #54                 // Field failIfNoChannelToConsumeOneCharacter:Z
     151: ifeq          164
     154: new           #117                // class java/lang/IllegalStateException
     157: dup
     158: aload         5
     160: invokespecial #120                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     163: athrow
     164: getstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
     167: aload         5
     169: invokeinterface #125,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     174: aload_1
     175: invokevirtual #128                // Method org/sonar/channel/CodeReader.pop:()I
     178: pop
     179: aload_1
     180: invokevirtual #72                 // Method org/sonar/channel/CodeReader.peek:()I
     183: istore_3
     184: goto          5
     187: iconst_1
     188: ireturn

  org.sonar.channel.Channel[] getChannels();
    Code:
       0: aload_0
       1: getfield      #52                 // Field channels:[Lorg/sonar/channel/Channel;
       4: areturn

  public static org.sonar.channel.ChannelDispatcher$Builder builder();
    Code:
       0: new           #10                 // class org/sonar/channel/ChannelDispatcher$Builder
       3: dup
       4: aconst_null
       5: invokespecial #150                // Method org/sonar/channel/ChannelDispatcher$Builder."<init>":(Lorg/sonar/channel/ChannelDispatcher$1;)V
       8: areturn

  org.sonar.channel.ChannelDispatcher(org.sonar.channel.ChannelDispatcher$Builder, org.sonar.channel.ChannelDispatcher$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #153                // Method "<init>":(Lorg/sonar/channel/ChannelDispatcher$Builder;)V
       5: return

  static {};
    Code:
       0: ldc           #2                  // class org/sonar/channel/ChannelDispatcher
       2: invokestatic  #163                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #78                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
