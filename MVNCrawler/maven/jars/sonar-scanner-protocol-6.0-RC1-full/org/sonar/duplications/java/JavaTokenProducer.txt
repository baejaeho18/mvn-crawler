Compiled from "JavaTokenProducer.java"
public final class org.sonar.duplications.java.JavaTokenProducer {
  private static final java.lang.String NORMALIZED_CHARACTER_LITERAL;

  private static final java.lang.String NORMALIZED_NUMERIC_LITERAL;

  private static final java.lang.String EXP;

  private static final java.lang.String BINARY_EXP;

  private static final java.lang.String FLOAT_SUFFIX;

  private static final java.lang.String INT_SUFFIX;

  private org.sonar.duplications.java.JavaTokenProducer();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: return

  public static org.sonar.duplications.token.TokenChunker build();
    Code:
       0: invokestatic  #41                 // Method org/sonar/duplications/token/TokenChunker.builder:()Lorg/sonar/duplications/token/TokenChunker$Builder;
       3: ldc           #43                 // String \\s
       5: invokevirtual #47                 // Method org/sonar/duplications/token/TokenChunker$Builder.ignore:(Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
       8: ldc           #49                 // String //[^\\n\\r]*+
      10: invokevirtual #47                 // Method org/sonar/duplications/token/TokenChunker$Builder.ignore:(Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      13: ldc           #51                 // String /\\*[\\s\\S]*?\\*/
      15: invokevirtual #47                 // Method org/sonar/duplications/token/TokenChunker$Builder.ignore:(Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      18: ldc           #53                 // String \"([^\"\\\\]*+(\\\\[\\s\\S])?+)*+\"
      20: ldc           #14                 // String $CHARS
      22: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      25: ldc           #59                 // String \'([^\'\\n\\\\]*+(\\\\.)?+)*+\'
      27: ldc           #14                 // String $CHARS
      29: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      32: ldc           #61                 // String \\p{javaJavaIdentifierStart}++\\p{javaJavaIdentifierPart}*+
      34: invokevirtual #63                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      37: ldc           #65                 // String [0-9_]++\\.([0-9_]++)?+([Ee][+-]?+[0-9_]++)?+[fFdD]?+
      39: ldc           #17                 // String $NUMBER
      41: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      44: ldc           #67                 // String \\.[0-9_]++([Ee][+-]?+[0-9_]++)?+[fFdD]?+
      46: ldc           #17                 // String $NUMBER
      48: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      51: ldc           #69                 // String [0-9_]++([Ee][+-]?+[0-9_]++)[fFdD]?+
      53: ldc           #17                 // String $NUMBER
      55: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      58: ldc           #71                 // String 0[xX][0-9a-fA-F_]++\\.[0-9a-fA-F_]*+([Pp][+-]?+[0-9_]++)?+[fFdD]?+
      60: ldc           #17                 // String $NUMBER
      62: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      65: ldc           #73                 // String 0[xX][0-9a-fA-F_]++([Pp][+-]?+[0-9_]++)[fFdD]?+
      67: ldc           #17                 // String $NUMBER
      69: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      72: ldc           #75                 // String 0[xX][0-9a-fA-F_]++[lL]?+
      74: ldc           #17                 // String $NUMBER
      76: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      79: ldc           #77                 // String 0[bB][01_]++[lL]?+
      81: ldc           #17                 // String $NUMBER
      83: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      86: ldc           #79                 // String [0-9_]++[lL]?+
      88: ldc           #17                 // String $NUMBER
      90: invokevirtual #57                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      93: ldc           #81                 // String .
      95: invokevirtual #63                 // Method org/sonar/duplications/token/TokenChunker$Builder.token:(Ljava/lang/String;)Lorg/sonar/duplications/token/TokenChunker$Builder;
      98: invokevirtual #83                 // Method org/sonar/duplications/token/TokenChunker$Builder.build:()Lorg/sonar/duplications/token/TokenChunker;
     101: areturn
}
