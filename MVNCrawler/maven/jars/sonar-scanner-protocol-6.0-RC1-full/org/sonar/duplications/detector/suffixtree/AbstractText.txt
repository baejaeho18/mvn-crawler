Compiled from "AbstractText.java"
public abstract class org.sonar.duplications.detector.suffixtree.AbstractText implements org.sonar.duplications.detector.suffixtree.Text {
  protected final java.util.List<java.lang.Object> symbols;

  public org.sonar.duplications.detector.suffixtree.AbstractText(int);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #17                 // class java/util/ArrayList
       8: dup
       9: iload_1
      10: invokespecial #19                 // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #21                 // Field symbols:Ljava/util/List;
      16: return

  public org.sonar.duplications.detector.suffixtree.AbstractText(java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field symbols:Ljava/util/List;
       9: return

  public int length();
    Code:
       0: aload_0
       1: getfield      #21                 // Field symbols:Ljava/util/List;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.lang.Object symbolAt(int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field symbols:Ljava/util/List;
       4: iload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: areturn

  public java.util.List<java.lang.Object> sequence(int, int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field symbols:Ljava/util/List;
       4: iload_1
       5: iload_2
       6: invokeinterface #43,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      11: areturn
}
