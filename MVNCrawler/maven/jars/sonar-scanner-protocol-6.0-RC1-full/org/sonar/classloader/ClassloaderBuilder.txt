Compiled from "ClassloaderBuilder.java"
public class org.sonar.classloader.ClassloaderBuilder {
  private final java.util.Map<java.lang.String, org.sonar.classloader.ClassloaderBuilder$NewRealm> newRealmsByKey;

  public org.sonar.classloader.ClassloaderBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field newRealmsByKey:Ljava/util/Map;
      15: return

  public org.sonar.classloader.ClassloaderBuilder newClassloader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokespecial #5                  // Method getSystemClassloader:()Ljava/lang/ClassLoader;
       6: invokevirtual #6                  // Method newClassloader:(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/sonar/classloader/ClassloaderBuilder;
       9: areturn

  public org.sonar.classloader.ClassloaderBuilder newClassloader(java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field newRealmsByKey:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          34
      13: new           #8                  // class java/lang/IllegalStateException
      16: dup
      17: ldc           #9                  // String The classloader \'%s\' already exists. Can not create it twice.
      19: iconst_1
      20: anewarray     #10                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_1
      26: aastore
      27: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: new           #13                 // class org/sonar/classloader/ClassloaderBuilder$1
      37: dup
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokespecial #14                 // Method org/sonar/classloader/ClassloaderBuilder$1."<init>":(Lorg/sonar/classloader/ClassloaderBuilder;Ljava/lang/String;Ljava/lang/ClassLoader;)V
      44: invokestatic  #15                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      47: checkcast     #16                 // class org/sonar/classloader/ClassRealm
      50: astore_3
      51: aload_3
      52: getstatic     #17                 // Field org/sonar/classloader/ClassloaderBuilder$LoadingOrder.PARENT_FIRST:Lorg/sonar/classloader/ClassloaderBuilder$LoadingOrder;
      55: invokestatic  #18                 // Method org/sonar/classloader/ClassloaderBuilder$LoadingOrder.access$000:(Lorg/sonar/classloader/ClassloaderBuilder$LoadingOrder;)Lorg/sonar/classloader/Strategy;
      58: invokevirtual #19                 // Method org/sonar/classloader/ClassRealm.setStrategy:(Lorg/sonar/classloader/Strategy;)Lorg/sonar/classloader/ClassRealm;
      61: pop
      62: aload_0
      63: getfield      #4                  // Field newRealmsByKey:Ljava/util/Map;
      66: aload_1
      67: new           #20                 // class org/sonar/classloader/ClassloaderBuilder$NewRealm
      70: dup
      71: aload_3
      72: aconst_null
      73: invokespecial #21                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm."<init>":(Lorg/sonar/classloader/ClassRealm;Lorg/sonar/classloader/ClassloaderBuilder$1;)V
      76: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: aload_0
      83: areturn

  public org.sonar.classloader.ClassloaderBuilder setParent(java.lang.String, java.lang.String, org.sonar.classloader.Mask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: astore        4
       7: aload         4
       9: aload_2
      10: invokestatic  #24                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$202:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;Ljava/lang/String;)Ljava/lang/String;
      13: pop
      14: aload         4
      16: invokestatic  #25                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$300:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/util/Map;
      19: aload_2
      20: aload_3
      21: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: areturn

  public org.sonar.classloader.ClassloaderBuilder setParent(java.lang.String, java.lang.ClassLoader, org.sonar.classloader.Mask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: astore        4
       7: aload         4
       9: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
      12: new           #27                 // class org/sonar/classloader/DefaultClassloaderRef
      15: dup
      16: aload_2
      17: aload_3
      18: invokespecial #28                 // Method org/sonar/classloader/DefaultClassloaderRef."<init>":(Ljava/lang/ClassLoader;Lorg/sonar/classloader/Mask;)V
      21: invokevirtual #29                 // Method org/sonar/classloader/ClassRealm.setParent:(Lorg/sonar/classloader/ClassloaderRef;)Lorg/sonar/classloader/ClassRealm;
      24: pop
      25: aload_0
      26: areturn

  public org.sonar.classloader.ClassloaderBuilder addSibling(java.lang.String, java.lang.String, org.sonar.classloader.Mask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: astore        4
       7: aload         4
       9: invokestatic  #30                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$500:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/util/List;
      12: aload_2
      13: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload         4
      21: invokestatic  #25                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$300:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/util/Map;
      24: aload_2
      25: aload_3
      26: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_0
      33: areturn

  public org.sonar.classloader.ClassloaderBuilder addSibling(java.lang.String, java.lang.ClassLoader, org.sonar.classloader.Mask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: astore        4
       7: aload         4
       9: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
      12: new           #27                 // class org/sonar/classloader/DefaultClassloaderRef
      15: dup
      16: aload_2
      17: aload_3
      18: invokespecial #28                 // Method org/sonar/classloader/DefaultClassloaderRef."<init>":(Ljava/lang/ClassLoader;Lorg/sonar/classloader/Mask;)V
      21: invokevirtual #32                 // Method org/sonar/classloader/ClassRealm.addSibling:(Lorg/sonar/classloader/ClassloaderRef;)Lorg/sonar/classloader/ClassRealm;
      24: pop
      25: aload_0
      26: areturn

  public org.sonar.classloader.ClassloaderBuilder addURL(java.lang.String, java.net.URL);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
       8: aload_2
       9: invokevirtual #33                 // Method org/sonar/classloader/ClassRealm.addConstituent:(Ljava/net/URL;)Lorg/sonar/classloader/ClassRealm;
      12: pop
      13: aload_0
      14: areturn

  public org.sonar.classloader.ClassloaderBuilder setMask(java.lang.String, org.sonar.classloader.Mask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
       8: aload_2
       9: invokevirtual #34                 // Method org/sonar/classloader/ClassRealm.setMask:(Lorg/sonar/classloader/Mask;)Lorg/sonar/classloader/ClassRealm;
      12: pop
      13: aload_0
      14: areturn

  public org.sonar.classloader.ClassloaderBuilder setExportMask(java.lang.String, org.sonar.classloader.Mask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: aload_2
       6: invokestatic  #35                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$602:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;Lorg/sonar/classloader/Mask;)Lorg/sonar/classloader/Mask;
       9: pop
      10: aload_0
      11: areturn

  public org.sonar.classloader.ClassloaderBuilder setLoadingOrder(java.lang.String, org.sonar.classloader.ClassloaderBuilder$LoadingOrder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
       5: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
       8: aload_2
       9: invokestatic  #18                 // Method org/sonar/classloader/ClassloaderBuilder$LoadingOrder.access$000:(Lorg/sonar/classloader/ClassloaderBuilder$LoadingOrder;)Lorg/sonar/classloader/Strategy;
      12: invokevirtual #19                 // Method org/sonar/classloader/ClassRealm.setStrategy:(Lorg/sonar/classloader/Strategy;)Lorg/sonar/classloader/ClassRealm;
      15: pop
      16: aload_0
      17: areturn

  public java.util.Map<java.lang.String, java.lang.ClassLoader> build();
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field newRealmsByKey:Ljava/util/Map;
      12: invokeinterface #36,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          242
      32: aload_2
      33: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #40                 // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #20                 // class org/sonar/classloader/ClassloaderBuilder$NewRealm
      51: astore        4
      53: aload         4
      55: invokestatic  #42                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$200:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/lang/String;
      58: ifnull        126
      61: aload_0
      62: aload         4
      64: invokestatic  #42                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$200:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/lang/String;
      67: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
      70: astore        5
      72: aload         4
      74: invokestatic  #25                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$300:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/util/Map;
      77: aload         4
      79: invokestatic  #42                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$200:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/lang/String;
      82: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #44                 // class org/sonar/classloader/Mask
      90: astore        6
      92: aload_0
      93: aload         6
      95: aload         4
      97: invokestatic  #42                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$200:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/lang/String;
     100: invokespecial #45                 // Method mergeWithExportMask:(Lorg/sonar/classloader/Mask;Ljava/lang/String;)V
     103: aload         4
     105: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
     108: new           #27                 // class org/sonar/classloader/DefaultClassloaderRef
     111: dup
     112: aload         5
     114: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
     117: aload         6
     119: invokespecial #28                 // Method org/sonar/classloader/DefaultClassloaderRef."<init>":(Ljava/lang/ClassLoader;Lorg/sonar/classloader/Mask;)V
     122: invokevirtual #29                 // Method org/sonar/classloader/ClassRealm.setParent:(Lorg/sonar/classloader/ClassloaderRef;)Lorg/sonar/classloader/ClassRealm;
     125: pop
     126: aload         4
     128: invokestatic  #30                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$500:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/util/List;
     131: invokeinterface #46,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     136: astore        5
     138: aload         5
     140: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     145: ifeq          219
     148: aload         5
     150: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     155: checkcast     #47                 // class java/lang/String
     158: astore        6
     160: aload_0
     161: aload         6
     163: invokespecial #23                 // Method getOrFail:(Ljava/lang/String;)Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;
     166: astore        7
     168: aload         4
     170: invokestatic  #25                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$300:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Ljava/util/Map;
     173: aload         6
     175: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     180: checkcast     #44                 // class org/sonar/classloader/Mask
     183: astore        8
     185: aload_0
     186: aload         8
     188: aload         6
     190: invokespecial #45                 // Method mergeWithExportMask:(Lorg/sonar/classloader/Mask;Ljava/lang/String;)V
     193: aload         4
     195: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
     198: new           #27                 // class org/sonar/classloader/DefaultClassloaderRef
     201: dup
     202: aload         7
     204: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
     207: aload         8
     209: invokespecial #28                 // Method org/sonar/classloader/DefaultClassloaderRef."<init>":(Ljava/lang/ClassLoader;Lorg/sonar/classloader/Mask;)V
     212: invokevirtual #32                 // Method org/sonar/classloader/ClassRealm.addSibling:(Lorg/sonar/classloader/ClassloaderRef;)Lorg/sonar/classloader/ClassRealm;
     215: pop
     216: goto          138
     219: aload_1
     220: aload         4
     222: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
     225: invokevirtual #48                 // Method org/sonar/classloader/ClassRealm.getKey:()Ljava/lang/String;
     228: aload         4
     230: invokestatic  #26                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$400:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/ClassRealm;
     233: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     238: pop
     239: goto          23
     242: aload_1
     243: areturn

  private void mergeWithExportMask(org.sonar.classloader.Mask, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field newRealmsByKey:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class org/sonar/classloader/ClassloaderBuilder$NewRealm
      13: astore_3
      14: aload_3
      15: ifnull        26
      18: aload_1
      19: aload_3
      20: invokestatic  #49                 // Method org/sonar/classloader/ClassloaderBuilder$NewRealm.access$600:(Lorg/sonar/classloader/ClassloaderBuilder$NewRealm;)Lorg/sonar/classloader/Mask;
      23: invokevirtual #50                 // Method org/sonar/classloader/Mask.merge:(Lorg/sonar/classloader/Mask;)V
      26: return

  private org.sonar.classloader.ClassloaderBuilder$NewRealm getOrFail(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field newRealmsByKey:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class org/sonar/classloader/ClassloaderBuilder$NewRealm
      13: astore_2
      14: aload_2
      15: ifnonnull     39
      18: new           #8                  // class java/lang/IllegalStateException
      21: dup
      22: ldc           #51                 // String The classloader \'%s\' does not exist
      24: iconst_1
      25: anewarray     #10                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: aastore
      32: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_2
      40: areturn

  private java.lang.ClassLoader getSystemClassloader();
    Code:
       0: invokestatic  #52                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
       3: astore_1
       4: aload_1
       5: invokevirtual #53                 // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
       8: astore_2
       9: aload_2
      10: ifnull        15
      13: aload_2
      14: astore_1
      15: aload_1
      16: areturn
}
