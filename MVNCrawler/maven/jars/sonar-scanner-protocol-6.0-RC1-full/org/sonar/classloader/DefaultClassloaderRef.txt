Compiled from "DefaultClassloaderRef.java"
class org.sonar.classloader.DefaultClassloaderRef implements org.sonar.classloader.ClassloaderRef {
  private final org.sonar.classloader.Mask mask;

  private final java.lang.ClassLoader classloader;

  org.sonar.classloader.DefaultClassloaderRef(java.lang.ClassLoader, org.sonar.classloader.Mask);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field classloader:Ljava/lang/ClassLoader;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mask:Lorg/sonar/classloader/Mask;
      14: return

  public java.lang.Class loadClassIfPresent(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mask:Lorg/sonar/classloader/Mask;
       4: aload_1
       5: invokevirtual #4                  // Method org/sonar/classloader/Mask.acceptClass:(Ljava/lang/String;)Z
       8: ifeq          21
      11: aload_0
      12: getfield      #2                  // Field classloader:Ljava/lang/ClassLoader;
      15: aload_1
      16: invokevirtual #5                  // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      19: areturn
      20: astore_2
      21: aconst_null
      22: areturn
    Exception table:
       from    to  target type
          11    19    20   Class java/lang/ClassNotFoundException

  public java.net.URL loadResourceIfPresent(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mask:Lorg/sonar/classloader/Mask;
       4: aload_1
       5: invokevirtual #7                  // Method org/sonar/classloader/Mask.acceptResource:(Ljava/lang/String;)Z
       8: ifeq          20
      11: aload_0
      12: getfield      #2                  // Field classloader:Ljava/lang/ClassLoader;
      15: aload_1
      16: invokevirtual #8                  // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      19: areturn
      20: aconst_null
      21: areturn

  public void loadResources(java.lang.String, java.util.Collection<java.net.URL>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mask:Lorg/sonar/classloader/Mask;
       4: aload_1
       5: invokevirtual #7                  // Method org/sonar/classloader/Mask.acceptResource:(Ljava/lang/String;)Z
       8: ifeq          71
      11: aload_0
      12: getfield      #2                  // Field classloader:Ljava/lang/ClassLoader;
      15: aload_1
      16: invokevirtual #9                  // Method java/lang/ClassLoader.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;
      19: astore_3
      20: aload_3
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      26: ifeq          45
      29: aload_2
      30: aload_3
      31: invokeinterface #11,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      36: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      41: pop
      42: goto          20
      45: goto          71
      48: astore_3
      49: new           #14                 // class java/lang/IllegalStateException
      52: dup
      53: ldc           #15                 // String Fail to load resources named \'%s\'
      55: iconst_1
      56: anewarray     #16                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_1
      62: aastore
      63: invokestatic  #17                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: aload_3
      67: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
      71: return
    Exception table:
       from    to  target type
          11    45    48   Class java/io/IOException
}
