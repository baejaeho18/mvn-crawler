Compiled from "Paging.java"
public class org.sonar.api.utils.Paging {
  private final int pageSize;

  private final int pageIndex;

  private final int total;

  private org.sonar.api.utils.Paging(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iconst_1
       6: if_icmpge     36
       9: new           #21                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #23                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #26                 // String Page size must be strictly positive. Got
      22: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #40                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_2
      37: iconst_1
      38: if_icmpge     68
      41: new           #21                 // class java/lang/IllegalArgumentException
      44: dup
      45: new           #23                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #42                 // String Page index must be strictly positive. Got
      54: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: iload_2
      58: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      61: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #40                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iload_3
      69: ifge          99
      72: new           #21                 // class java/lang/IllegalArgumentException
      75: dup
      76: new           #23                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #44                 // String Total items must be positive. Got
      85: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: iload_3
      89: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #40                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: iload_1
     101: putfield      #46                 // Field pageSize:I
     104: aload_0
     105: iload_2
     106: putfield      #48                 // Field pageIndex:I
     109: aload_0
     110: iload_3
     111: putfield      #50                 // Field total:I
     114: return

  public static org.sonar.api.utils.Paging create(int, int, int);
    Code:
       0: new           #2                  // class org/sonar/api/utils/Paging
       3: dup
       4: iload_0
       5: iload_1
       6: iload_2
       7: invokespecial #57                 // Method "<init>":(III)V
      10: areturn

  public static org.sonar.api.utils.Paging$Builder forPageIndex(int);
    Code:
       0: new           #9                  // class org/sonar/api/utils/Paging$Builder
       3: dup
       4: iload_0
       5: aconst_null
       6: invokespecial #63                 // Method org/sonar/api/utils/Paging$Builder."<init>":(ILorg/sonar/api/utils/Paging$1;)V
       9: areturn

  public int pageIndex();
    Code:
       0: aload_0
       1: getfield      #48                 // Field pageIndex:I
       4: ireturn

  public int pageSize();
    Code:
       0: aload_0
       1: getfield      #46                 // Field pageSize:I
       4: ireturn

  public int total();
    Code:
       0: aload_0
       1: getfield      #50                 // Field total:I
       4: ireturn

  public int offset();
    Code:
       0: aload_0
       1: getfield      #48                 // Field pageIndex:I
       4: iconst_1
       5: isub
       6: aload_0
       7: getfield      #46                 // Field pageSize:I
      10: imul
      11: ireturn

  public static int offset(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: isub
       3: iload_1
       4: imul
       5: ireturn

  public int pages();
    Code:
       0: aload_0
       1: getfield      #50                 // Field total:I
       4: aload_0
       5: getfield      #46                 // Field pageSize:I
       8: idiv
       9: istore_1
      10: aload_0
      11: getfield      #50                 // Field total:I
      14: aload_0
      15: getfield      #46                 // Field pageSize:I
      18: irem
      19: ifle          25
      22: iinc          1, 1
      25: iload_1
      26: ireturn

  public boolean hasNextPage();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method pageIndex:()I
       4: aload_0
       5: invokevirtual #74                 // Method pages:()I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  org.sonar.api.utils.Paging(int, int, int, org.sonar.api.utils.Paging$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #57                 // Method "<init>":(III)V
       7: return
}
