Compiled from "ConcurrentHashMultiset.java"
public final class org.sonar.api.internal.google.common.collect.ConcurrentHashMultiset<E> extends org.sonar.api.internal.google.common.collect.AbstractMultiset<E> implements java.io.Serializable {
  private final transient java.util.concurrent.ConcurrentMap<E, java.util.concurrent.atomic.AtomicInteger> countMap;

  private static final long serialVersionUID;

  public static <E> org.sonar.api.internal.google.common.collect.ConcurrentHashMultiset<E> create();
    Code:
       0: new           #2                  // class org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset
       3: dup
       4: new           #41                 // class java/util/concurrent/ConcurrentHashMap
       7: dup
       8: invokespecial #45                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      11: invokespecial #48                 // Method "<init>":(Ljava/util/concurrent/ConcurrentMap;)V
      14: areturn

  public static <E> org.sonar.api.internal.google.common.collect.ConcurrentHashMultiset<E> create(java.lang.Iterable<? extends E>);
    Code:
       0: invokestatic  #51                 // Method create:()Lorg/sonar/api/internal/google/common/collect/ConcurrentHashMultiset;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokestatic  #57                 // Method org/sonar/api/internal/google/common/collect/Iterables.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
       9: pop
      10: aload_1
      11: areturn

  public static <E> org.sonar.api.internal.google.common.collect.ConcurrentHashMultiset<E> create(org.sonar.api.internal.google.common.collect.MapMaker);
    Code:
       0: new           #2                  // class org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset
       3: dup
       4: aload_0
       5: invokevirtual #71                 // Method org/sonar/api/internal/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
       8: invokespecial #48                 // Method "<init>":(Ljava/util/concurrent/ConcurrentMap;)V
      11: areturn

  org.sonar.api.internal.google.common.collect.ConcurrentHashMultiset(java.util.concurrent.ConcurrentMap<E, java.util.concurrent.atomic.AtomicInteger>);
    Code:
       0: aload_0
       1: invokespecial #75                 // Method org/sonar/api/internal/google/common/collect/AbstractMultiset."<init>":()V
       4: aload_1
       5: invokeinterface #81,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
      10: invokestatic  #87                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(Z)V
      13: aload_0
      14: aload_1
      15: putfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      18: return

  public int count(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokestatic  #99                 // Method org/sonar/api/internal/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      24: ireturn

  public int size();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       6: invokeinterface #114,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      11: invokeinterface #120,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          49
      26: aload_3
      27: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      35: astore        4
      37: lload_1
      38: aload         4
      40: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      43: i2l
      44: ladd
      45: lstore_1
      46: goto          17
      49: lload_1
      50: invokestatic  #135                // Method org/sonar/api/internal/google/common/primitives/Ints.saturatedCast:(J)I
      53: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokespecial #145                // Method snapshot:()Ljava/util/List;
       4: invokeinterface #149,  1          // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
       9: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: invokespecial #145                // Method snapshot:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #152,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: areturn

  private java.util.List<E> snapshot();
    Code:
       0: aload_0
       1: invokevirtual #157                // Method size:()I
       4: invokestatic  #163                // Method org/sonar/api/internal/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;
       7: astore_1
       8: aload_0
       9: invokevirtual #167                // Method entrySet:()Ljava/util/Set;
      12: invokeinterface #170,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          76
      27: aload_2
      28: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #22                 // class org/sonar/api/internal/google/common/collect/Multiset$Entry
      36: astore_3
      37: aload_3
      38: invokeinterface #173,  1          // InterfaceMethod org/sonar/api/internal/google/common/collect/Multiset$Entry.getElement:()Ljava/lang/Object;
      43: astore        4
      45: aload_3
      46: invokeinterface #176,  1          // InterfaceMethod org/sonar/api/internal/google/common/collect/Multiset$Entry.getCount:()I
      51: istore        5
      53: iload         5
      55: ifle          73
      58: aload_1
      59: aload         4
      61: invokeinterface #182,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          5, -1
      70: goto          53
      73: goto          18
      76: aload_1
      77: areturn

  public int add(E, int);
    Code:
       0: aload_1
       1: invokestatic  #198                // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_2
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #200                // Method count:(Ljava/lang/Object;)I
      14: ireturn
      15: iload_2
      16: ifle          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #202                // String Invalid occurrences: %s
      26: iconst_1
      27: anewarray     #178                // class java/lang/Object
      30: dup
      31: iconst_0
      32: iload_2
      33: invokestatic  #208                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: invokestatic  #211                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      44: aload_1
      45: invokestatic  #99                 // Method org/sonar/api/internal/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      51: astore_3
      52: aload_3
      53: ifnonnull     84
      56: aload_0
      57: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      60: aload_1
      61: new           #101                // class java/util/concurrent/atomic/AtomicInteger
      64: dup
      65: iload_2
      66: invokespecial #214                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      69: invokeinterface #218,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      77: astore_3
      78: aload_3
      79: ifnonnull     84
      82: iconst_0
      83: ireturn
      84: aload_3
      85: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      88: istore        4
      90: iload         4
      92: ifeq          169
      95: iload         4
      97: iload_2
      98: invokestatic  #224                // Method org/sonar/api/internal/google/common/math/IntMath.checkedAdd:(II)I
     101: istore        5
     103: aload_3
     104: iload         4
     106: iload         5
     108: invokevirtual #228                // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     111: ifeq          117
     114: iload         4
     116: ireturn
     117: goto          212
     120: astore        5
     122: new           #230                // class java/lang/IllegalArgumentException
     125: dup
     126: iload_2
     127: istore        6
     129: iload         4
     131: istore        7
     133: new           #232                // class java/lang/StringBuilder
     136: dup
     137: bipush        65
     139: invokespecial #233                // Method java/lang/StringBuilder."<init>":(I)V
     142: ldc           #235                // String Overflow adding
     144: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: iload         6
     149: invokevirtual #242                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     152: ldc           #244                // String  occurrences to a count of
     154: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: iload         7
     159: invokevirtual #242                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     162: invokevirtual #248                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokespecial #251                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     168: athrow
     169: new           #101                // class java/util/concurrent/atomic/AtomicInteger
     172: dup
     173: iload_2
     174: invokespecial #214                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     177: astore        5
     179: aload_0
     180: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     183: aload_1
     184: aload         5
     186: invokeinterface #218,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     191: ifnull        210
     194: aload_0
     195: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     198: aload_1
     199: aload_3
     200: aload         5
     202: invokeinterface #255,  4          // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     207: ifeq          215
     210: iconst_0
     211: ireturn
     212: goto          84
     215: goto          40
    Exception table:
       from    to  target type
          95   116   120   Class java/lang/ArithmeticException

  public int remove(java.lang.Object, int);
    Code:
       0: iload_2
       1: ifne          10
       4: aload_0
       5: aload_1
       6: invokevirtual #200                // Method count:(Ljava/lang/Object;)I
       9: ireturn
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #202                // String Invalid occurrences: %s
      21: iconst_1
      22: anewarray     #178                // class java/lang/Object
      25: dup
      26: iconst_0
      27: iload_2
      28: invokestatic  #208                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: invokestatic  #211                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      39: aload_1
      40: invokestatic  #99                 // Method org/sonar/api/internal/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      46: astore_3
      47: aload_3
      48: ifnonnull     53
      51: iconst_0
      52: ireturn
      53: aload_3
      54: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      57: istore        4
      59: iload         4
      61: ifeq          108
      64: iconst_0
      65: iload         4
      67: iload_2
      68: isub
      69: invokestatic  #267                // Method java/lang/Math.max:(II)I
      72: istore        5
      74: aload_3
      75: iload         4
      77: iload         5
      79: invokevirtual #228                // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      82: ifeq          105
      85: iload         5
      87: ifne          102
      90: aload_0
      91: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      94: aload_1
      95: aload_3
      96: invokeinterface #270,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     101: pop
     102: iload         4
     104: ireturn
     105: goto          110
     108: iconst_0
     109: ireturn
     110: goto          53

  public boolean removeExactly(java.lang.Object, int);
    Code:
       0: iload_2
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iload_2
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #202                // String Invalid occurrences: %s
      17: iconst_1
      18: anewarray     #178                // class java/lang/Object
      21: dup
      22: iconst_0
      23: iload_2
      24: invokestatic  #208                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #211                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      35: aload_1
      36: invokestatic  #99                 // Method org/sonar/api/internal/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      42: astore_3
      43: aload_3
      44: ifnonnull     49
      47: iconst_0
      48: ireturn
      49: aload_3
      50: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      53: istore        4
      55: iload         4
      57: iload_2
      58: if_icmpge     63
      61: iconst_0
      62: ireturn
      63: iload         4
      65: iload_2
      66: isub
      67: istore        5
      69: aload_3
      70: iload         4
      72: iload         5
      74: invokevirtual #228                // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      77: ifeq          99
      80: iload         5
      82: ifne          97
      85: aload_0
      86: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      89: aload_1
      90: aload_3
      91: invokeinterface #270,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: pop
      97: iconst_1
      98: ireturn
      99: goto          49

  public int setCount(E, int);
    Code:
       0: aload_1
       1: invokestatic  #198                // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_2
       6: ldc_w         #274                // String count
       9: invokestatic  #280                // Method org/sonar/api/internal/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      12: pop
      13: aload_0
      14: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      17: aload_1
      18: invokestatic  #99                 // Method org/sonar/api/internal/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      24: astore_3
      25: aload_3
      26: ifnonnull     63
      29: iload_2
      30: ifne          35
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      39: aload_1
      40: new           #101                // class java/util/concurrent/atomic/AtomicInteger
      43: dup
      44: iload_2
      45: invokespecial #214                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      48: invokeinterface #218,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      56: astore_3
      57: aload_3
      58: ifnonnull     63
      61: iconst_0
      62: ireturn
      63: aload_3
      64: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      67: istore        4
      69: iload         4
      71: ifne          126
      74: iload_2
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: new           #101                // class java/util/concurrent/atomic/AtomicInteger
      83: dup
      84: iload_2
      85: invokespecial #214                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      88: astore        5
      90: aload_0
      91: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      94: aload_1
      95: aload         5
      97: invokeinterface #218,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: ifnull        121
     105: aload_0
     106: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     109: aload_1
     110: aload_3
     111: aload         5
     113: invokeinterface #255,  4          // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     118: ifeq          123
     121: iconst_0
     122: ireturn
     123: goto          158
     126: aload_3
     127: iload         4
     129: iload_2
     130: invokevirtual #228                // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     133: ifeq          155
     136: iload_2
     137: ifne          152
     140: aload_0
     141: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     144: aload_1
     145: aload_3
     146: invokeinterface #270,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     151: pop
     152: iload         4
     154: ireturn
     155: goto          63
     158: goto          13

  public boolean setCount(E, int, int);
    Code:
       0: aload_1
       1: invokestatic  #198                // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_2
       6: ldc_w         #283                // String oldCount
       9: invokestatic  #280                // Method org/sonar/api/internal/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      12: pop
      13: iload_3
      14: ldc_w         #285                // String newCount
      17: invokestatic  #280                // Method org/sonar/api/internal/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      20: pop
      21: aload_0
      22: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      25: aload_1
      26: invokestatic  #99                 // Method org/sonar/api/internal/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #101                // class java/util/concurrent/atomic/AtomicInteger
      32: astore        4
      34: aload         4
      36: ifnonnull     78
      39: iload_2
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: iload_3
      46: ifne          51
      49: iconst_1
      50: ireturn
      51: aload_0
      52: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
      55: aload_1
      56: new           #101                // class java/util/concurrent/atomic/AtomicInteger
      59: dup
      60: iload_3
      61: invokespecial #214                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      64: invokeinterface #218,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: ifnonnull     76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn
      78: aload         4
      80: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      83: istore        5
      85: iload         5
      87: iload_2
      88: if_icmpne     193
      91: iload         5
      93: ifne          163
      96: iload_3
      97: ifne          115
     100: aload_0
     101: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     104: aload_1
     105: aload         4
     107: invokeinterface #270,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     112: pop
     113: iconst_1
     114: ireturn
     115: new           #101                // class java/util/concurrent/atomic/AtomicInteger
     118: dup
     119: iload_3
     120: invokespecial #214                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     123: astore        6
     125: aload_0
     126: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     129: aload_1
     130: aload         6
     132: invokeinterface #218,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: ifnull        157
     140: aload_0
     141: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     144: aload_1
     145: aload         4
     147: aload         6
     149: invokeinterface #255,  4          // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     154: ifeq          161
     157: iconst_1
     158: goto          162
     161: iconst_0
     162: ireturn
     163: aload         4
     165: iload         5
     167: iload_3
     168: invokevirtual #228                // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     171: ifeq          193
     174: iload_3
     175: ifne          191
     178: aload_0
     179: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
     182: aload_1
     183: aload         4
     185: invokeinterface #270,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     190: pop
     191: iconst_1
     192: ireturn
     193: iconst_0
     194: ireturn

  java.util.Set<E> createElementSet();
    Code:
       0: aload_0
       1: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #290,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: astore_1
      10: new           #20                 // class org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$1
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #293                // Method org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$1."<init>":(Lorg/sonar/api/internal/google/common/collect/ConcurrentHashMultiset;Ljava/util/Set;)V
      19: areturn

  public java.util.Set<org.sonar.api.internal.google.common.collect.Multiset$Entry<E>> createEntrySet();
    Code:
       0: new           #10                 // class org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$EntrySet
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #300                // Method org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$EntrySet."<init>":(Lorg/sonar/api/internal/google/common/collect/ConcurrentHashMultiset;Lorg/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$1;)V
       9: areturn

  int distinctElements();
    Code:
       0: aload_0
       1: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #302,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #81,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ireturn

  java.util.Iterator<org.sonar.api.internal.google.common.collect.Multiset$Entry<E>> entryIterator();
    Code:
       0: new           #18                 // class org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$2
       3: dup
       4: aload_0
       5: invokespecial #306                // Method org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$2."<init>":(Lorg/sonar/api/internal/google/common/collect/ConcurrentHashMultiset;)V
       8: astore_1
       9: new           #16                 // class org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$3
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #309                // Method org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$3."<init>":(Lorg/sonar/api/internal/google/common/collect/ConcurrentHashMultiset;Ljava/util/Iterator;)V
      18: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #314,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #323                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       9: invokevirtual #326                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #337                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #339                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       8: checkcast     #77                 // class java/util/concurrent/ConcurrentMap
      11: astore_2
      12: getstatic     #343                // Field org/sonar/api/internal/google/common/collect/ConcurrentHashMultiset$FieldSettersHolder.COUNT_MAP_FIELD_SETTER:Lorg/sonar/api/internal/google/common/collect/Serialization$FieldSetter;
      15: aload_0
      16: aload_2
      17: invokevirtual #347                // Method org/sonar/api/internal/google/common/collect/Serialization$FieldSetter.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #351                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.toString:()Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #354                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.hashCode:()I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #357                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: invokespecial #359                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.entrySet:()Ljava/util/Set;
       4: areturn

  public java.util.Set elementSet();
    Code:
       0: aload_0
       1: invokespecial #362                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.elementSet:()Ljava/util/Set;
       4: areturn

  public boolean retainAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #366                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.retainAll:(Ljava/util/Collection;)Z
       5: ireturn

  public boolean removeAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #370                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.removeAll:(Ljava/util/Collection;)Z
       5: ireturn

  public boolean addAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #372                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.addAll:(Ljava/util/Collection;)Z
       5: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #374                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.remove:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #375                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.add:(Ljava/lang/Object;)Z
       5: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokespecial #376                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.iterator:()Ljava/util/Iterator;
       4: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #379                // Method org/sonar/api/internal/google/common/collect/AbstractMultiset.contains:(Ljava/lang/Object;)Z
       5: ireturn

  static java.util.concurrent.ConcurrentMap access$100(org.sonar.api.internal.google.common.collect.ConcurrentHashMultiset);
    Code:
       0: aload_0
       1: getfield      #89                 // Field countMap:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
