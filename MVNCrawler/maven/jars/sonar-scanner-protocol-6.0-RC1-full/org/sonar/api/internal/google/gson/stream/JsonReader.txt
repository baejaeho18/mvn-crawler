Compiled from "JsonReader.java"
public class org.sonar.api.internal.google.gson.stream.JsonReader implements java.io.Closeable {
  private static final char[] NON_EXECUTE_PREFIX;

  private static final long MIN_INCOMPLETE_INTEGER;

  private static final int PEEKED_NONE;

  private static final int PEEKED_BEGIN_OBJECT;

  private static final int PEEKED_END_OBJECT;

  private static final int PEEKED_BEGIN_ARRAY;

  private static final int PEEKED_END_ARRAY;

  private static final int PEEKED_TRUE;

  private static final int PEEKED_FALSE;

  private static final int PEEKED_NULL;

  private static final int PEEKED_SINGLE_QUOTED;

  private static final int PEEKED_DOUBLE_QUOTED;

  private static final int PEEKED_UNQUOTED;

  private static final int PEEKED_BUFFERED;

  private static final int PEEKED_SINGLE_QUOTED_NAME;

  private static final int PEEKED_DOUBLE_QUOTED_NAME;

  private static final int PEEKED_UNQUOTED_NAME;

  private static final int PEEKED_LONG;

  private static final int PEEKED_NUMBER;

  private static final int PEEKED_EOF;

  private static final int NUMBER_CHAR_NONE;

  private static final int NUMBER_CHAR_SIGN;

  private static final int NUMBER_CHAR_DIGIT;

  private static final int NUMBER_CHAR_DECIMAL;

  private static final int NUMBER_CHAR_FRACTION_DIGIT;

  private static final int NUMBER_CHAR_EXP_E;

  private static final int NUMBER_CHAR_EXP_SIGN;

  private static final int NUMBER_CHAR_EXP_DIGIT;

  private final java.io.Reader in;

  private boolean lenient;

  private final char[] buffer;

  private int pos;

  private int limit;

  private int lineNumber;

  private int lineStart;

  private int peeked;

  private long peekedLong;

  private int peekedNumberLength;

  private java.lang.String peekedString;

  private int[] stack;

  private int stackSize;

  private java.lang.String[] pathNames;

  private int[] pathIndices;

  public org.sonar.api.internal.google.gson.stream.JsonReader(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #85                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #87                 // Field lenient:Z
       9: aload_0
      10: sipush        1024
      13: newarray       char
      15: putfield      #89                 // Field buffer:[C
      18: aload_0
      19: iconst_0
      20: putfield      #91                 // Field pos:I
      23: aload_0
      24: iconst_0
      25: putfield      #93                 // Field limit:I
      28: aload_0
      29: iconst_0
      30: putfield      #95                 // Field lineNumber:I
      33: aload_0
      34: iconst_0
      35: putfield      #97                 // Field lineStart:I
      38: aload_0
      39: iconst_0
      40: putfield      #99                 // Field peeked:I
      43: aload_0
      44: bipush        32
      46: newarray       int
      48: putfield      #101                // Field stack:[I
      51: aload_0
      52: iconst_0
      53: putfield      #103                // Field stackSize:I
      56: aload_0
      57: getfield      #101                // Field stack:[I
      60: aload_0
      61: dup
      62: getfield      #103                // Field stackSize:I
      65: dup_x1
      66: iconst_1
      67: iadd
      68: putfield      #103                // Field stackSize:I
      71: bipush        6
      73: iastore
      74: aload_0
      75: bipush        32
      77: anewarray     #105                // class java/lang/String
      80: putfield      #107                // Field pathNames:[Ljava/lang/String;
      83: aload_0
      84: bipush        32
      86: newarray       int
      88: putfield      #109                // Field pathIndices:[I
      91: aload_1
      92: ifnonnull     105
      95: new           #111                // class java/lang/NullPointerException
      98: dup
      99: ldc           #113                // String in == null
     101: invokespecial #116                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: aload_1
     107: putfield      #118                // Field in:Ljava/io/Reader;
     110: return

  public final void setLenient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #87                 // Field lenient:Z
       5: return

  public final boolean isLenient();
    Code:
       0: aload_0
       1: getfield      #87                 // Field lenient:Z
       4: ireturn

  public void beginArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_3
      16: if_icmpne     44
      19: aload_0
      20: iconst_1
      21: invokespecial #135                // Method push:(I)V
      24: aload_0
      25: getfield      #109                // Field pathIndices:[I
      28: aload_0
      29: getfield      #103                // Field stackSize:I
      32: iconst_1
      33: isub
      34: iconst_0
      35: iastore
      36: aload_0
      37: iconst_0
      38: putfield      #99                 // Field peeked:I
      41: goto          110
      44: new           #137                // class java/lang/IllegalStateException
      47: dup
      48: new           #139                // class java/lang/StringBuilder
      51: dup
      52: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #142                // String Expected BEGIN_ARRAY but was
      57: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      64: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #155                // String  at line
      69: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokespecial #158                // Method getLineNumber:()I
      76: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #163                // String  column
      81: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokespecial #166                // Method getColumnNumber:()I
      88: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: ldc           #168                // String  path
      93: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     100: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: return

  public void endArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_4
      16: if_icmpne     52
      19: aload_0
      20: dup
      21: getfield      #103                // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #103                // Field stackSize:I
      29: aload_0
      30: getfield      #109                // Field pathIndices:[I
      33: aload_0
      34: getfield      #103                // Field stackSize:I
      37: iconst_1
      38: isub
      39: dup2
      40: iaload
      41: iconst_1
      42: iadd
      43: iastore
      44: aload_0
      45: iconst_0
      46: putfield      #99                 // Field peeked:I
      49: goto          118
      52: new           #137                // class java/lang/IllegalStateException
      55: dup
      56: new           #139                // class java/lang/StringBuilder
      59: dup
      60: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #180                // String Expected END_ARRAY but was
      65: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      72: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: ldc           #155                // String  at line
      77: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokespecial #158                // Method getLineNumber:()I
      84: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #163                // String  column
      89: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: invokespecial #166                // Method getColumnNumber:()I
      96: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      99: ldc           #168                // String  path
     101: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     108: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: return

  public void beginObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_1
      16: if_icmpne     32
      19: aload_0
      20: iconst_3
      21: invokespecial #135                // Method push:(I)V
      24: aload_0
      25: iconst_0
      26: putfield      #99                 // Field peeked:I
      29: goto          98
      32: new           #137                // class java/lang/IllegalStateException
      35: dup
      36: new           #139                // class java/lang/StringBuilder
      39: dup
      40: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #183                // String Expected BEGIN_OBJECT but was
      45: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      52: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #155                // String  at line
      57: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokespecial #158                // Method getLineNumber:()I
      64: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #163                // String  column
      69: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokespecial #166                // Method getColumnNumber:()I
      76: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #168                // String  path
      81: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #172                // Method getPath:()Ljava/lang/String;
      88: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: return

  public void endObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpne     62
      19: aload_0
      20: dup
      21: getfield      #103                // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #103                // Field stackSize:I
      29: aload_0
      30: getfield      #107                // Field pathNames:[Ljava/lang/String;
      33: aload_0
      34: getfield      #103                // Field stackSize:I
      37: aconst_null
      38: aastore
      39: aload_0
      40: getfield      #109                // Field pathIndices:[I
      43: aload_0
      44: getfield      #103                // Field stackSize:I
      47: iconst_1
      48: isub
      49: dup2
      50: iaload
      51: iconst_1
      52: iadd
      53: iastore
      54: aload_0
      55: iconst_0
      56: putfield      #99                 // Field peeked:I
      59: goto          128
      62: new           #137                // class java/lang/IllegalStateException
      65: dup
      66: new           #139                // class java/lang/StringBuilder
      69: dup
      70: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #186                // String Expected END_OBJECT but was
      75: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      82: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #155                // String  at line
      87: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: invokespecial #158                // Method getLineNumber:()I
      94: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #163                // String  column
      99: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: invokespecial #166                // Method getColumnNumber:()I
     106: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     109: ldc           #168                // String  path
     111: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     118: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: return

  public boolean hasNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpeq     28
      19: iload_1
      20: iconst_4
      21: if_icmpeq     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public org.sonar.api.internal.google.gson.stream.JsonToken peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: tableswitch   { // 1 to 17
                     1: 96
                     2: 100
                     3: 104
                     4: 108
                     5: 116
                     6: 116
                     7: 120
                     8: 124
                     9: 124
                    10: 124
                    11: 124
                    12: 112
                    13: 112
                    14: 112
                    15: 128
                    16: 128
                    17: 132
               default: 136
          }
      96: getstatic     #193                // Field org/sonar/api/internal/google/gson/stream/JsonToken.BEGIN_OBJECT:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      99: areturn
     100: getstatic     #196                // Field org/sonar/api/internal/google/gson/stream/JsonToken.END_OBJECT:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     103: areturn
     104: getstatic     #199                // Field org/sonar/api/internal/google/gson/stream/JsonToken.BEGIN_ARRAY:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     107: areturn
     108: getstatic     #202                // Field org/sonar/api/internal/google/gson/stream/JsonToken.END_ARRAY:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     111: areturn
     112: getstatic     #205                // Field org/sonar/api/internal/google/gson/stream/JsonToken.NAME:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     115: areturn
     116: getstatic     #208                // Field org/sonar/api/internal/google/gson/stream/JsonToken.BOOLEAN:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     119: areturn
     120: getstatic     #211                // Field org/sonar/api/internal/google/gson/stream/JsonToken.NULL:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     123: areturn
     124: getstatic     #214                // Field org/sonar/api/internal/google/gson/stream/JsonToken.STRING:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     127: areturn
     128: getstatic     #217                // Field org/sonar/api/internal/google/gson/stream/JsonToken.NUMBER:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     131: areturn
     132: getstatic     #220                // Field org/sonar/api/internal/google/gson/stream/JsonToken.END_DOCUMENT:Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     135: areturn
     136: new           #222                // class java/lang/AssertionError
     139: dup
     140: invokespecial #223                // Method java/lang/AssertionError."<init>":()V
     143: athrow

  private int doPeek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #101                // Field stack:[I
       4: aload_0
       5: getfield      #103                // Field stackSize:I
       8: iconst_1
       9: isub
      10: iaload
      11: istore_1
      12: iload_1
      13: iconst_1
      14: if_icmpne     32
      17: aload_0
      18: getfield      #101                // Field stack:[I
      21: aload_0
      22: getfield      #103                // Field stackSize:I
      25: iconst_1
      26: isub
      27: iconst_2
      28: iastore
      29: goto          518
      32: iload_1
      33: iconst_2
      34: if_icmpne     104
      37: aload_0
      38: iconst_1
      39: invokespecial #227                // Method nextNonWhitespace:(Z)I
      42: istore_2
      43: iload_2
      44: lookupswitch  { // 3
                    44: 91
                    59: 87
                    93: 80
               default: 94
          }
      80: aload_0
      81: iconst_4
      82: dup_x1
      83: putfield      #99                 // Field peeked:I
      86: ireturn
      87: aload_0
      88: invokespecial #230                // Method checkLenient:()V
      91: goto          101
      94: aload_0
      95: ldc           #232                // String Unterminated array
      97: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     100: athrow
     101: goto          518
     104: iload_1
     105: iconst_3
     106: if_icmpeq     114
     109: iload_1
     110: iconst_5
     111: if_icmpne     313
     114: aload_0
     115: getfield      #101                // Field stack:[I
     118: aload_0
     119: getfield      #103                // Field stackSize:I
     122: iconst_1
     123: isub
     124: iconst_4
     125: iastore
     126: iload_1
     127: iconst_5
     128: if_icmpne     193
     131: aload_0
     132: iconst_1
     133: invokespecial #227                // Method nextNonWhitespace:(Z)I
     136: istore_2
     137: iload_2
     138: lookupswitch  { // 3
                    44: 183
                    59: 179
                   125: 172
               default: 186
          }
     172: aload_0
     173: iconst_2
     174: dup_x1
     175: putfield      #99                 // Field peeked:I
     178: ireturn
     179: aload_0
     180: invokespecial #230                // Method checkLenient:()V
     183: goto          193
     186: aload_0
     187: ldc           #238                // String Unterminated object
     189: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     192: athrow
     193: aload_0
     194: iconst_1
     195: invokespecial #227                // Method nextNonWhitespace:(Z)I
     198: istore_2
     199: iload_2
     200: lookupswitch  { // 3
                    34: 236
                    39: 244
                   125: 256
               default: 275
          }
     236: aload_0
     237: bipush        13
     239: dup_x1
     240: putfield      #99                 // Field peeked:I
     243: ireturn
     244: aload_0
     245: invokespecial #230                // Method checkLenient:()V
     248: aload_0
     249: bipush        12
     251: dup_x1
     252: putfield      #99                 // Field peeked:I
     255: ireturn
     256: iload_1
     257: iconst_5
     258: if_icmpeq     268
     261: aload_0
     262: iconst_2
     263: dup_x1
     264: putfield      #99                 // Field peeked:I
     267: ireturn
     268: aload_0
     269: ldc           #240                // String Expected name
     271: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     274: athrow
     275: aload_0
     276: invokespecial #230                // Method checkLenient:()V
     279: aload_0
     280: dup
     281: getfield      #91                 // Field pos:I
     284: iconst_1
     285: isub
     286: putfield      #91                 // Field pos:I
     289: aload_0
     290: iload_2
     291: i2c
     292: invokespecial #244                // Method isLiteral:(C)Z
     295: ifeq          306
     298: aload_0
     299: bipush        14
     301: dup_x1
     302: putfield      #99                 // Field peeked:I
     305: ireturn
     306: aload_0
     307: ldc           #240                // String Expected name
     309: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     312: athrow
     313: iload_1
     314: iconst_4
     315: if_icmpne     427
     318: aload_0
     319: getfield      #101                // Field stack:[I
     322: aload_0
     323: getfield      #103                // Field stackSize:I
     326: iconst_1
     327: isub
     328: iconst_5
     329: iastore
     330: aload_0
     331: iconst_1
     332: invokespecial #227                // Method nextNonWhitespace:(Z)I
     335: istore_2
     336: iload_2
     337: lookupswitch  { // 2
                    58: 364
                    61: 367
               default: 417
          }
     364: goto          424
     367: aload_0
     368: invokespecial #230                // Method checkLenient:()V
     371: aload_0
     372: getfield      #91                 // Field pos:I
     375: aload_0
     376: getfield      #93                 // Field limit:I
     379: if_icmplt     390
     382: aload_0
     383: iconst_1
     384: invokespecial #248                // Method fillBuffer:(I)Z
     387: ifeq          424
     390: aload_0
     391: getfield      #89                 // Field buffer:[C
     394: aload_0
     395: getfield      #91                 // Field pos:I
     398: caload
     399: bipush        62
     401: if_icmpne     424
     404: aload_0
     405: dup
     406: getfield      #91                 // Field pos:I
     409: iconst_1
     410: iadd
     411: putfield      #91                 // Field pos:I
     414: goto          424
     417: aload_0
     418: ldc           #250                // String Expected \':\'
     420: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     423: athrow
     424: goto          518
     427: iload_1
     428: bipush        6
     430: if_icmpne     460
     433: aload_0
     434: getfield      #87                 // Field lenient:Z
     437: ifeq          444
     440: aload_0
     441: invokespecial #253                // Method consumeNonExecutePrefix:()V
     444: aload_0
     445: getfield      #101                // Field stack:[I
     448: aload_0
     449: getfield      #103                // Field stackSize:I
     452: iconst_1
     453: isub
     454: bipush        7
     456: iastore
     457: goto          518
     460: iload_1
     461: bipush        7
     463: if_icmpne     502
     466: aload_0
     467: iconst_0
     468: invokespecial #227                // Method nextNonWhitespace:(Z)I
     471: istore_2
     472: iload_2
     473: iconst_m1
     474: if_icmpne     485
     477: aload_0
     478: bipush        17
     480: dup_x1
     481: putfield      #99                 // Field peeked:I
     484: ireturn
     485: aload_0
     486: invokespecial #230                // Method checkLenient:()V
     489: aload_0
     490: dup
     491: getfield      #91                 // Field pos:I
     494: iconst_1
     495: isub
     496: putfield      #91                 // Field pos:I
     499: goto          518
     502: iload_1
     503: bipush        8
     505: if_icmpne     518
     508: new           #137                // class java/lang/IllegalStateException
     511: dup
     512: ldc           #255                // String JsonReader is closed
     514: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     517: athrow
     518: aload_0
     519: iconst_1
     520: invokespecial #227                // Method nextNonWhitespace:(Z)I
     523: istore_2
     524: iload_2
     525: lookupswitch  { // 7
                    34: 656
                    39: 644
                    44: 604
                    59: 604
                    91: 676
                    93: 592
                   123: 683
               default: 690
          }
     592: iload_1
     593: iconst_1
     594: if_icmpne     604
     597: aload_0
     598: iconst_4
     599: dup_x1
     600: putfield      #99                 // Field peeked:I
     603: ireturn
     604: iload_1
     605: iconst_1
     606: if_icmpeq     614
     609: iload_1
     610: iconst_2
     611: if_icmpne     636
     614: aload_0
     615: invokespecial #230                // Method checkLenient:()V
     618: aload_0
     619: dup
     620: getfield      #91                 // Field pos:I
     623: iconst_1
     624: isub
     625: putfield      #91                 // Field pos:I
     628: aload_0
     629: bipush        7
     631: dup_x1
     632: putfield      #99                 // Field peeked:I
     635: ireturn
     636: aload_0
     637: ldc_w         #257                // String Unexpected value
     640: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     643: athrow
     644: aload_0
     645: invokespecial #230                // Method checkLenient:()V
     648: aload_0
     649: bipush        8
     651: dup_x1
     652: putfield      #99                 // Field peeked:I
     655: ireturn
     656: aload_0
     657: getfield      #103                // Field stackSize:I
     660: iconst_1
     661: if_icmpne     668
     664: aload_0
     665: invokespecial #230                // Method checkLenient:()V
     668: aload_0
     669: bipush        9
     671: dup_x1
     672: putfield      #99                 // Field peeked:I
     675: ireturn
     676: aload_0
     677: iconst_3
     678: dup_x1
     679: putfield      #99                 // Field peeked:I
     682: ireturn
     683: aload_0
     684: iconst_1
     685: dup_x1
     686: putfield      #99                 // Field peeked:I
     689: ireturn
     690: aload_0
     691: dup
     692: getfield      #91                 // Field pos:I
     695: iconst_1
     696: isub
     697: putfield      #91                 // Field pos:I
     700: aload_0
     701: getfield      #103                // Field stackSize:I
     704: iconst_1
     705: if_icmpne     712
     708: aload_0
     709: invokespecial #230                // Method checkLenient:()V
     712: aload_0
     713: invokespecial #260                // Method peekKeyword:()I
     716: istore_3
     717: iload_3
     718: ifeq          723
     721: iload_3
     722: ireturn
     723: aload_0
     724: invokespecial #263                // Method peekNumber:()I
     727: istore_3
     728: iload_3
     729: ifeq          734
     732: iload_3
     733: ireturn
     734: aload_0
     735: aload_0
     736: getfield      #89                 // Field buffer:[C
     739: aload_0
     740: getfield      #91                 // Field pos:I
     743: caload
     744: invokespecial #244                // Method isLiteral:(C)Z
     747: ifne          758
     750: aload_0
     751: ldc_w         #265                // String Expected value
     754: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     757: athrow
     758: aload_0
     759: invokespecial #230                // Method checkLenient:()V
     762: aload_0
     763: bipush        10
     765: dup_x1
     766: putfield      #99                 // Field peeked:I
     769: ireturn

  private int peekKeyword() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: aload_0
       5: getfield      #91                 // Field pos:I
       8: caload
       9: istore_1
      10: iload_1
      11: bipush        116
      13: if_icmpeq     22
      16: iload_1
      17: bipush        84
      19: if_icmpne     36
      22: ldc_w         #270                // String true
      25: astore_2
      26: ldc_w         #272                // String TRUE
      29: astore_3
      30: iconst_5
      31: istore        4
      33: goto          92
      36: iload_1
      37: bipush        102
      39: if_icmpeq     48
      42: iload_1
      43: bipush        70
      45: if_icmpne     63
      48: ldc_w         #274                // String false
      51: astore_2
      52: ldc_w         #276                // String FALSE
      55: astore_3
      56: bipush        6
      58: istore        4
      60: goto          92
      63: iload_1
      64: bipush        110
      66: if_icmpeq     75
      69: iload_1
      70: bipush        78
      72: if_icmpne     90
      75: ldc_w         #278                // String null
      78: astore_2
      79: ldc_w         #279                // String NULL
      82: astore_3
      83: bipush        7
      85: istore        4
      87: goto          92
      90: iconst_0
      91: ireturn
      92: aload_2
      93: invokevirtual #282                // Method java/lang/String.length:()I
      96: istore        5
      98: iconst_1
      99: istore        6
     101: iload         6
     103: iload         5
     105: if_icmpge     176
     108: aload_0
     109: getfield      #91                 // Field pos:I
     112: iload         6
     114: iadd
     115: aload_0
     116: getfield      #93                 // Field limit:I
     119: if_icmplt     135
     122: aload_0
     123: iload         6
     125: iconst_1
     126: iadd
     127: invokespecial #248                // Method fillBuffer:(I)Z
     130: ifne          135
     133: iconst_0
     134: ireturn
     135: aload_0
     136: getfield      #89                 // Field buffer:[C
     139: aload_0
     140: getfield      #91                 // Field pos:I
     143: iload         6
     145: iadd
     146: caload
     147: istore_1
     148: iload_1
     149: aload_2
     150: iload         6
     152: invokevirtual #286                // Method java/lang/String.charAt:(I)C
     155: if_icmpeq     170
     158: iload_1
     159: aload_3
     160: iload         6
     162: invokevirtual #286                // Method java/lang/String.charAt:(I)C
     165: if_icmpeq     170
     168: iconst_0
     169: ireturn
     170: iinc          6, 1
     173: goto          101
     176: aload_0
     177: getfield      #91                 // Field pos:I
     180: iload         5
     182: iadd
     183: aload_0
     184: getfield      #93                 // Field limit:I
     187: if_icmplt     201
     190: aload_0
     191: iload         5
     193: iconst_1
     194: iadd
     195: invokespecial #248                // Method fillBuffer:(I)Z
     198: ifeq          222
     201: aload_0
     202: aload_0
     203: getfield      #89                 // Field buffer:[C
     206: aload_0
     207: getfield      #91                 // Field pos:I
     210: iload         5
     212: iadd
     213: caload
     214: invokespecial #244                // Method isLiteral:(C)Z
     217: ifeq          222
     220: iconst_0
     221: ireturn
     222: aload_0
     223: dup
     224: getfield      #91                 // Field pos:I
     227: iload         5
     229: iadd
     230: putfield      #91                 // Field pos:I
     233: aload_0
     234: iload         4
     236: dup_x1
     237: putfield      #99                 // Field peeked:I
     240: ireturn

  private int peekNumber() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_1
       5: aload_0
       6: getfield      #91                 // Field pos:I
       9: istore_2
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: istore_3
      15: lconst_0
      16: lstore        4
      18: iconst_0
      19: istore        6
      21: iconst_1
      22: istore        7
      24: iconst_0
      25: istore        8
      27: iconst_0
      28: istore        9
      30: iload_2
      31: iload         9
      33: iadd
      34: iload_3
      35: if_icmpne     71
      38: iload         9
      40: aload_1
      41: arraylength
      42: if_icmpne     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: iload         9
      50: iconst_1
      51: iadd
      52: invokespecial #248                // Method fillBuffer:(I)Z
      55: ifne          61
      58: goto          372
      61: aload_0
      62: getfield      #91                 // Field pos:I
      65: istore_2
      66: aload_0
      67: getfield      #93                 // Field limit:I
      70: istore_3
      71: aload_1
      72: iload_2
      73: iload         9
      75: iadd
      76: caload
      77: istore        10
      79: iload         10
      81: lookupswitch  { // 5
                    43: 161
                    45: 132
                    46: 196
                    69: 176
                   101: 176
               default: 210
          }
     132: iload         8
     134: ifne          146
     137: iconst_1
     138: istore        6
     140: iconst_1
     141: istore        8
     143: goto          366
     146: iload         8
     148: iconst_5
     149: if_icmpne     159
     152: bipush        6
     154: istore        8
     156: goto          366
     159: iconst_0
     160: ireturn
     161: iload         8
     163: iconst_5
     164: if_icmpne     174
     167: bipush        6
     169: istore        8
     171: goto          366
     174: iconst_0
     175: ireturn
     176: iload         8
     178: iconst_2
     179: if_icmpeq     188
     182: iload         8
     184: iconst_4
     185: if_icmpne     194
     188: iconst_5
     189: istore        8
     191: goto          366
     194: iconst_0
     195: ireturn
     196: iload         8
     198: iconst_2
     199: if_icmpne     208
     202: iconst_3
     203: istore        8
     205: goto          366
     208: iconst_0
     209: ireturn
     210: iload         10
     212: bipush        48
     214: if_icmplt     224
     217: iload         10
     219: bipush        57
     221: if_icmple     238
     224: aload_0
     225: iload         10
     227: invokespecial #244                // Method isLiteral:(C)Z
     230: ifne          236
     233: goto          372
     236: iconst_0
     237: ireturn
     238: iload         8
     240: iconst_1
     241: if_icmpeq     249
     244: iload         8
     246: ifne          264
     249: iload         10
     251: bipush        48
     253: isub
     254: ineg
     255: i2l
     256: lstore        4
     258: iconst_2
     259: istore        8
     261: goto          366
     264: iload         8
     266: iconst_2
     267: if_icmpne     337
     270: lload         4
     272: lconst_0
     273: lcmp
     274: ifne          279
     277: iconst_0
     278: ireturn
     279: lload         4
     281: ldc2_w        #292                // long 10l
     284: lmul
     285: iload         10
     287: bipush        48
     289: isub
     290: i2l
     291: lsub
     292: lstore        11
     294: iload         7
     296: lload         4
     298: ldc2_w        #14                 // long -922337203685477580l
     301: lcmp
     302: ifgt          322
     305: lload         4
     307: ldc2_w        #14                 // long -922337203685477580l
     310: lcmp
     311: ifne          326
     314: lload         11
     316: lload         4
     318: lcmp
     319: ifge          326
     322: iconst_1
     323: goto          327
     326: iconst_0
     327: iand
     328: istore        7
     330: lload         11
     332: lstore        4
     334: goto          366
     337: iload         8
     339: iconst_3
     340: if_icmpne     349
     343: iconst_4
     344: istore        8
     346: goto          366
     349: iload         8
     351: iconst_5
     352: if_icmpeq     362
     355: iload         8
     357: bipush        6
     359: if_icmpne     366
     362: bipush        7
     364: istore        8
     366: iinc          9, 1
     369: goto          30
     372: iload         8
     374: iconst_2
     375: if_icmpne     433
     378: iload         7
     380: ifeq          433
     383: lload         4
     385: ldc2_w        #294                // long -9223372036854775808l
     388: lcmp
     389: ifne          397
     392: iload         6
     394: ifeq          433
     397: aload_0
     398: iload         6
     400: ifeq          408
     403: lload         4
     405: goto          411
     408: lload         4
     410: lneg
     411: putfield      #297                // Field peekedLong:J
     414: aload_0
     415: dup
     416: getfield      #91                 // Field pos:I
     419: iload         9
     421: iadd
     422: putfield      #91                 // Field pos:I
     425: aload_0
     426: bipush        15
     428: dup_x1
     429: putfield      #99                 // Field peeked:I
     432: ireturn
     433: iload         8
     435: iconst_2
     436: if_icmpeq     452
     439: iload         8
     441: iconst_4
     442: if_icmpeq     452
     445: iload         8
     447: bipush        7
     449: if_icmpne     466
     452: aload_0
     453: iload         9
     455: putfield      #299                // Field peekedNumberLength:I
     458: aload_0
     459: bipush        16
     461: dup_x1
     462: putfield      #99                 // Field peeked:I
     465: ireturn
     466: iconst_0
     467: ireturn

  private boolean isLiteral(char) throws java.io.IOException;
    Code:
       0: iload_1
       1: lookupswitch  { // 16
                     9: 144
                    10: 144
                    12: 144
                    13: 144
                    32: 144
                    35: 140
                    44: 144
                    47: 140
                    58: 144
                    59: 140
                    61: 140
                    91: 144
                    92: 140
                    93: 144
                   123: 144
                   125: 144
               default: 146
          }
     140: aload_0
     141: invokespecial #230                // Method checkLenient:()V
     144: iconst_0
     145: ireturn
     146: iconst_1
     147: ireturn

  public java.lang.String nextName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        14
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #309                // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          127
      28: iload_1
      29: bipush        12
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #313                // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          127
      44: iload_1
      45: bipush        13
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #313                // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          127
      60: new           #137                // class java/lang/IllegalStateException
      63: dup
      64: new           #139                // class java/lang/StringBuilder
      67: dup
      68: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      71: ldc_w         #315                // String Expected a name but was
      74: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      81: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: ldc           #155                // String  at line
      86: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: invokespecial #158                // Method getLineNumber:()I
      93: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: ldc           #163                // String  column
      98: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: invokespecial #166                // Method getColumnNumber:()I
     105: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     108: ldc           #168                // String  path
     110: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     117: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: aload_0
     128: iconst_0
     129: putfield      #99                 // Field peeked:I
     132: aload_0
     133: getfield      #107                // Field pathNames:[Ljava/lang/String;
     136: aload_0
     137: getfield      #103                // Field stackSize:I
     140: iconst_1
     141: isub
     142: aload_2
     143: aastore
     144: aload_2
     145: areturn

  public java.lang.String nextString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        10
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #309                // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          205
      28: iload_1
      29: bipush        8
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #313                // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          205
      44: iload_1
      45: bipush        9
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #313                // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          205
      60: iload_1
      61: bipush        11
      63: if_icmpne     79
      66: aload_0
      67: getfield      #318                // Field peekedString:Ljava/lang/String;
      70: astore_2
      71: aload_0
      72: aconst_null
      73: putfield      #318                // Field peekedString:Ljava/lang/String;
      76: goto          205
      79: iload_1
      80: bipush        15
      82: if_icmpne     96
      85: aload_0
      86: getfield      #297                // Field peekedLong:J
      89: invokestatic  #323                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      92: astore_2
      93: goto          205
      96: iload_1
      97: bipush        16
      99: if_icmpne     138
     102: new           #105                // class java/lang/String
     105: dup
     106: aload_0
     107: getfield      #89                 // Field buffer:[C
     110: aload_0
     111: getfield      #91                 // Field pos:I
     114: aload_0
     115: getfield      #299                // Field peekedNumberLength:I
     118: invokespecial #326                // Method java/lang/String."<init>":([CII)V
     121: astore_2
     122: aload_0
     123: dup
     124: getfield      #91                 // Field pos:I
     127: aload_0
     128: getfield      #299                // Field peekedNumberLength:I
     131: iadd
     132: putfield      #91                 // Field pos:I
     135: goto          205
     138: new           #137                // class java/lang/IllegalStateException
     141: dup
     142: new           #139                // class java/lang/StringBuilder
     145: dup
     146: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     149: ldc_w         #328                // String Expected a string but was
     152: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_0
     156: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     159: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     162: ldc           #155                // String  at line
     164: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_0
     168: invokespecial #158                // Method getLineNumber:()I
     171: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     174: ldc           #163                // String  column
     176: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_0
     180: invokespecial #166                // Method getColumnNumber:()I
     183: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     186: ldc           #168                // String  path
     188: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     195: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     204: athrow
     205: aload_0
     206: iconst_0
     207: putfield      #99                 // Field peeked:I
     210: aload_0
     211: getfield      #109                // Field pathIndices:[I
     214: aload_0
     215: getfield      #103                // Field stackSize:I
     218: iconst_1
     219: isub
     220: dup2
     221: iaload
     222: iconst_1
     223: iadd
     224: iastore
     225: aload_2
     226: areturn

  public boolean nextBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_5
      16: if_icmpne     41
      19: aload_0
      20: iconst_0
      21: putfield      #99                 // Field peeked:I
      24: aload_0
      25: getfield      #109                // Field pathIndices:[I
      28: aload_0
      29: getfield      #103                // Field stackSize:I
      32: iconst_1
      33: isub
      34: dup2
      35: iaload
      36: iconst_1
      37: iadd
      38: iastore
      39: iconst_1
      40: ireturn
      41: iload_1
      42: bipush        6
      44: if_icmpne     69
      47: aload_0
      48: iconst_0
      49: putfield      #99                 // Field peeked:I
      52: aload_0
      53: getfield      #109                // Field pathIndices:[I
      56: aload_0
      57: getfield      #103                // Field stackSize:I
      60: iconst_1
      61: isub
      62: dup2
      63: iaload
      64: iconst_1
      65: iadd
      66: iastore
      67: iconst_0
      68: ireturn
      69: new           #137                // class java/lang/IllegalStateException
      72: dup
      73: new           #139                // class java/lang/StringBuilder
      76: dup
      77: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      80: ldc_w         #331                // String Expected a boolean but was
      83: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      90: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #155                // String  at line
      95: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: invokespecial #158                // Method getLineNumber:()I
     102: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: ldc           #163                // String  column
     107: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokespecial #166                // Method getColumnNumber:()I
     114: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: ldc           #168                // String  path
     119: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     126: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     135: athrow

  public void nextNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        7
      17: if_icmpne     43
      20: aload_0
      21: iconst_0
      22: putfield      #99                 // Field peeked:I
      25: aload_0
      26: getfield      #109                // Field pathIndices:[I
      29: aload_0
      30: getfield      #103                // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: goto          110
      43: new           #137                // class java/lang/IllegalStateException
      46: dup
      47: new           #139                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      54: ldc_w         #334                // String Expected null but was
      57: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
      64: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #155                // String  at line
      69: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokespecial #158                // Method getLineNumber:()I
      76: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #163                // String  column
      81: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokespecial #166                // Method getColumnNumber:()I
      88: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: ldc           #168                // String  path
      93: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     100: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: return

  public double nextDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     46
      20: aload_0
      21: iconst_0
      22: putfield      #99                 // Field peeked:I
      25: aload_0
      26: getfield      #109                // Field pathIndices:[I
      29: aload_0
      30: getfield      #103                // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #297                // Field peekedLong:J
      44: l2d
      45: dreturn
      46: iload_1
      47: bipush        16
      49: if_icmpne     91
      52: aload_0
      53: new           #105                // class java/lang/String
      56: dup
      57: aload_0
      58: getfield      #89                 // Field buffer:[C
      61: aload_0
      62: getfield      #91                 // Field pos:I
      65: aload_0
      66: getfield      #299                // Field peekedNumberLength:I
      69: invokespecial #326                // Method java/lang/String."<init>":([CII)V
      72: putfield      #318                // Field peekedString:Ljava/lang/String;
      75: aload_0
      76: dup
      77: getfield      #91                 // Field pos:I
      80: aload_0
      81: getfield      #299                // Field peekedNumberLength:I
      84: iadd
      85: putfield      #91                 // Field pos:I
      88: goto          217
      91: iload_1
      92: bipush        8
      94: if_icmpeq     103
      97: iload_1
      98: bipush        9
     100: if_icmpne     127
     103: aload_0
     104: aload_0
     105: iload_1
     106: bipush        8
     108: if_icmpne     116
     111: bipush        39
     113: goto          118
     116: bipush        34
     118: invokespecial #313                // Method nextQuotedValue:(C)Ljava/lang/String;
     121: putfield      #318                // Field peekedString:Ljava/lang/String;
     124: goto          217
     127: iload_1
     128: bipush        10
     130: if_icmpne     144
     133: aload_0
     134: aload_0
     135: invokespecial #309                // Method nextUnquotedValue:()Ljava/lang/String;
     138: putfield      #318                // Field peekedString:Ljava/lang/String;
     141: goto          217
     144: iload_1
     145: bipush        11
     147: if_icmpeq     217
     150: new           #137                // class java/lang/IllegalStateException
     153: dup
     154: new           #139                // class java/lang/StringBuilder
     157: dup
     158: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     161: ldc_w         #338                // String Expected a double but was
     164: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_0
     168: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     171: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: ldc           #155                // String  at line
     176: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_0
     180: invokespecial #158                // Method getLineNumber:()I
     183: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     186: ldc           #163                // String  column
     188: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokespecial #166                // Method getColumnNumber:()I
     195: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     198: ldc           #168                // String  path
     200: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_0
     204: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     207: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     216: athrow
     217: aload_0
     218: bipush        11
     220: putfield      #99                 // Field peeked:I
     223: aload_0
     224: getfield      #318                // Field peekedString:Ljava/lang/String;
     227: invokestatic  #344                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     230: dstore_2
     231: aload_0
     232: getfield      #87                 // Field lenient:Z
     235: ifne          316
     238: dload_2
     239: invokestatic  #348                // Method java/lang/Double.isNaN:(D)Z
     242: ifne          252
     245: dload_2
     246: invokestatic  #351                // Method java/lang/Double.isInfinite:(D)Z
     249: ifeq          316
     252: new           #353                // class org/sonar/api/internal/google/gson/stream/MalformedJsonException
     255: dup
     256: new           #139                // class java/lang/StringBuilder
     259: dup
     260: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     263: ldc_w         #355                // String JSON forbids NaN and infinities:
     266: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: dload_2
     270: invokevirtual #358                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     273: ldc           #155                // String  at line
     275: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: aload_0
     279: invokespecial #158                // Method getLineNumber:()I
     282: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     285: ldc           #163                // String  column
     287: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: aload_0
     291: invokespecial #166                // Method getColumnNumber:()I
     294: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     297: ldc           #168                // String  path
     299: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     302: aload_0
     303: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     306: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     312: invokespecial #359                // Method org/sonar/api/internal/google/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
     315: athrow
     316: aload_0
     317: aconst_null
     318: putfield      #318                // Field peekedString:Ljava/lang/String;
     321: aload_0
     322: iconst_0
     323: putfield      #99                 // Field peeked:I
     326: aload_0
     327: getfield      #109                // Field pathIndices:[I
     330: aload_0
     331: getfield      #103                // Field stackSize:I
     334: iconst_1
     335: isub
     336: dup2
     337: iaload
     338: iconst_1
     339: iadd
     340: iastore
     341: dload_2
     342: dreturn

  public long nextLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     45
      20: aload_0
      21: iconst_0
      22: putfield      #99                 // Field peeked:I
      25: aload_0
      26: getfield      #109                // Field pathIndices:[I
      29: aload_0
      30: getfield      #103                // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #297                // Field peekedLong:J
      44: lreturn
      45: iload_1
      46: bipush        16
      48: if_icmpne     90
      51: aload_0
      52: new           #105                // class java/lang/String
      55: dup
      56: aload_0
      57: getfield      #89                 // Field buffer:[C
      60: aload_0
      61: getfield      #91                 // Field pos:I
      64: aload_0
      65: getfield      #299                // Field peekedNumberLength:I
      68: invokespecial #326                // Method java/lang/String."<init>":([CII)V
      71: putfield      #318                // Field peekedString:Ljava/lang/String;
      74: aload_0
      75: dup
      76: getfield      #91                 // Field pos:I
      79: aload_0
      80: getfield      #299                // Field peekedNumberLength:I
      83: iadd
      84: putfield      #91                 // Field pos:I
      87: goto          225
      90: iload_1
      91: bipush        8
      93: if_icmpeq     102
      96: iload_1
      97: bipush        9
      99: if_icmpne     158
     102: aload_0
     103: aload_0
     104: iload_1
     105: bipush        8
     107: if_icmpne     115
     110: bipush        39
     112: goto          117
     115: bipush        34
     117: invokespecial #313                // Method nextQuotedValue:(C)Ljava/lang/String;
     120: putfield      #318                // Field peekedString:Ljava/lang/String;
     123: aload_0
     124: getfield      #318                // Field peekedString:Ljava/lang/String;
     127: invokestatic  #368                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     130: lstore_2
     131: aload_0
     132: iconst_0
     133: putfield      #99                 // Field peeked:I
     136: aload_0
     137: getfield      #109                // Field pathIndices:[I
     140: aload_0
     141: getfield      #103                // Field stackSize:I
     144: iconst_1
     145: isub
     146: dup2
     147: iaload
     148: iconst_1
     149: iadd
     150: iastore
     151: lload_2
     152: lreturn
     153: astore        4
     155: goto          225
     158: new           #137                // class java/lang/IllegalStateException
     161: dup
     162: new           #139                // class java/lang/StringBuilder
     165: dup
     166: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     169: ldc_w         #370                // String Expected a long but was
     172: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload_0
     176: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     179: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     182: ldc           #155                // String  at line
     184: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: aload_0
     188: invokespecial #158                // Method getLineNumber:()I
     191: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     194: ldc           #163                // String  column
     196: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_0
     200: invokespecial #166                // Method getColumnNumber:()I
     203: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     206: ldc           #168                // String  path
     208: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: aload_0
     212: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     215: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     224: athrow
     225: aload_0
     226: bipush        11
     228: putfield      #99                 // Field peeked:I
     231: aload_0
     232: getfield      #318                // Field peekedString:Ljava/lang/String;
     235: invokestatic  #344                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     238: dstore_2
     239: dload_2
     240: d2l
     241: lstore        5
     243: lload         5
     245: l2d
     246: dload_2
     247: dcmpl
     248: ifeq          318
     251: new           #364                // class java/lang/NumberFormatException
     254: dup
     255: new           #139                // class java/lang/StringBuilder
     258: dup
     259: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     262: ldc_w         #370                // String Expected a long but was
     265: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload_0
     269: getfield      #318                // Field peekedString:Ljava/lang/String;
     272: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     275: ldc           #155                // String  at line
     277: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     280: aload_0
     281: invokespecial #158                // Method getLineNumber:()I
     284: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     287: ldc           #163                // String  column
     289: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: aload_0
     293: invokespecial #166                // Method getColumnNumber:()I
     296: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     299: ldc           #168                // String  path
     301: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     304: aload_0
     305: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     308: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     311: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     314: invokespecial #371                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     317: athrow
     318: aload_0
     319: aconst_null
     320: putfield      #318                // Field peekedString:Ljava/lang/String;
     323: aload_0
     324: iconst_0
     325: putfield      #99                 // Field peeked:I
     328: aload_0
     329: getfield      #109                // Field pathIndices:[I
     332: aload_0
     333: getfield      #103                // Field stackSize:I
     336: iconst_1
     337: isub
     338: dup2
     339: iaload
     340: iconst_1
     341: iadd
     342: iastore
     343: lload         5
     345: lreturn
    Exception table:
       from    to  target type
         123   152   153   Class java/lang/NumberFormatException

  private java.lang.String nextQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: new           #139                // class java/lang/StringBuilder
       8: dup
       9: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      12: astore_3
      13: aload_0
      14: getfield      #91                 // Field pos:I
      17: istore        4
      19: aload_0
      20: getfield      #93                 // Field limit:I
      23: istore        5
      25: iload         4
      27: istore        6
      29: iload         4
      31: iload         5
      33: if_icmpge     159
      36: aload_2
      37: iload         4
      39: iinc          4, 1
      42: caload
      43: istore        7
      45: iload         7
      47: iload_1
      48: if_icmpne     77
      51: aload_0
      52: iload         4
      54: putfield      #91                 // Field pos:I
      57: aload_3
      58: aload_2
      59: iload         6
      61: iload         4
      63: iload         6
      65: isub
      66: iconst_1
      67: isub
      68: invokevirtual #377                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      71: pop
      72: aload_3
      73: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: areturn
      77: iload         7
      79: bipush        92
      81: if_icmpne     133
      84: aload_0
      85: iload         4
      87: putfield      #91                 // Field pos:I
      90: aload_3
      91: aload_2
      92: iload         6
      94: iload         4
      96: iload         6
      98: isub
      99: iconst_1
     100: isub
     101: invokevirtual #377                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     104: pop
     105: aload_3
     106: aload_0
     107: invokespecial #381                // Method readEscapeCharacter:()C
     110: invokevirtual #384                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     113: pop
     114: aload_0
     115: getfield      #91                 // Field pos:I
     118: istore        4
     120: aload_0
     121: getfield      #93                 // Field limit:I
     124: istore        5
     126: iload         4
     128: istore        6
     130: goto          156
     133: iload         7
     135: bipush        10
     137: if_icmpne     156
     140: aload_0
     141: dup
     142: getfield      #95                 // Field lineNumber:I
     145: iconst_1
     146: iadd
     147: putfield      #95                 // Field lineNumber:I
     150: aload_0
     151: iload         4
     153: putfield      #97                 // Field lineStart:I
     156: goto          29
     159: aload_3
     160: aload_2
     161: iload         6
     163: iload         4
     165: iload         6
     167: isub
     168: invokevirtual #377                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     171: pop
     172: aload_0
     173: iload         4
     175: putfield      #91                 // Field pos:I
     178: aload_0
     179: iconst_1
     180: invokespecial #248                // Method fillBuffer:(I)Z
     183: ifne          194
     186: aload_0
     187: ldc_w         #386                // String Unterminated string
     190: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     193: athrow
     194: goto          13

  private java.lang.String nextUnquotedValue() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #91                 // Field pos:I
       8: iload_2
       9: iadd
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: if_icmpge     181
      17: aload_0
      18: getfield      #89                 // Field buffer:[C
      21: aload_0
      22: getfield      #91                 // Field pos:I
      25: iload_2
      26: iadd
      27: caload
      28: lookupswitch  { // 16
                     9: 172
                    10: 172
                    12: 172
                    13: 172
                    32: 172
                    35: 168
                    44: 172
                    47: 168
                    58: 172
                    59: 168
                    61: 168
                    91: 172
                    92: 168
                    93: 172
                   123: 172
                   125: 172
               default: 175
          }
     168: aload_0
     169: invokespecial #230                // Method checkLenient:()V
     172: goto          252
     175: iinc          2, 1
     178: goto          4
     181: iload_2
     182: aload_0
     183: getfield      #89                 // Field buffer:[C
     186: arraylength
     187: if_icmpge     203
     190: aload_0
     191: iload_2
     192: iconst_1
     193: iadd
     194: invokespecial #248                // Method fillBuffer:(I)Z
     197: ifeq          252
     200: goto          4
     203: aload_1
     204: ifnonnull     215
     207: new           #139                // class java/lang/StringBuilder
     210: dup
     211: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     214: astore_1
     215: aload_1
     216: aload_0
     217: getfield      #89                 // Field buffer:[C
     220: aload_0
     221: getfield      #91                 // Field pos:I
     224: iload_2
     225: invokevirtual #377                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     228: pop
     229: aload_0
     230: dup
     231: getfield      #91                 // Field pos:I
     234: iload_2
     235: iadd
     236: putfield      #91                 // Field pos:I
     239: iconst_0
     240: istore_2
     241: aload_0
     242: iconst_1
     243: invokespecial #248                // Method fillBuffer:(I)Z
     246: ifne          4
     249: goto          252
     252: aload_1
     253: ifnonnull     276
     256: new           #105                // class java/lang/String
     259: dup
     260: aload_0
     261: getfield      #89                 // Field buffer:[C
     264: aload_0
     265: getfield      #91                 // Field pos:I
     268: iload_2
     269: invokespecial #326                // Method java/lang/String."<init>":([CII)V
     272: astore_3
     273: goto          295
     276: aload_1
     277: aload_0
     278: getfield      #89                 // Field buffer:[C
     281: aload_0
     282: getfield      #91                 // Field pos:I
     285: iload_2
     286: invokevirtual #377                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     289: pop
     290: aload_1
     291: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     294: astore_3
     295: aload_0
     296: dup
     297: getfield      #91                 // Field pos:I
     300: iload_2
     301: iadd
     302: putfield      #91                 // Field pos:I
     305: aload_3
     306: areturn

  private void skipQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #91                 // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpge     98
      22: aload_2
      23: iload_3
      24: iinc          3, 1
      27: caload
      28: istore        5
      30: iload         5
      32: iload_1
      33: if_icmpne     42
      36: aload_0
      37: iload_3
      38: putfield      #91                 // Field pos:I
      41: return
      42: iload         5
      44: bipush        92
      46: if_icmpne     73
      49: aload_0
      50: iload_3
      51: putfield      #91                 // Field pos:I
      54: aload_0
      55: invokespecial #381                // Method readEscapeCharacter:()C
      58: pop
      59: aload_0
      60: getfield      #91                 // Field pos:I
      63: istore_3
      64: aload_0
      65: getfield      #93                 // Field limit:I
      68: istore        4
      70: goto          95
      73: iload         5
      75: bipush        10
      77: if_icmpne     95
      80: aload_0
      81: dup
      82: getfield      #95                 // Field lineNumber:I
      85: iconst_1
      86: iadd
      87: putfield      #95                 // Field lineNumber:I
      90: aload_0
      91: iload_3
      92: putfield      #97                 // Field lineStart:I
      95: goto          16
      98: aload_0
      99: iload_3
     100: putfield      #91                 // Field pos:I
     103: aload_0
     104: iconst_1
     105: invokespecial #248                // Method fillBuffer:(I)Z
     108: ifne          5
     111: aload_0
     112: ldc_w         #386                // String Unterminated string
     115: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     118: athrow

  private void skipUnquotedValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #91                 // Field pos:I
       6: iload_1
       7: iadd
       8: aload_0
       9: getfield      #93                 // Field limit:I
      12: if_icmpge     185
      15: aload_0
      16: getfield      #89                 // Field buffer:[C
      19: aload_0
      20: getfield      #91                 // Field pos:I
      23: iload_1
      24: iadd
      25: caload
      26: lookupswitch  { // 16
                     9: 168
                    10: 168
                    12: 168
                    13: 168
                    32: 168
                    35: 164
                    44: 168
                    47: 164
                    58: 168
                    59: 164
                    61: 164
                    91: 168
                    92: 164
                    93: 168
                   123: 168
                   125: 168
               default: 179
          }
     164: aload_0
     165: invokespecial #230                // Method checkLenient:()V
     168: aload_0
     169: dup
     170: getfield      #91                 // Field pos:I
     173: iload_1
     174: iadd
     175: putfield      #91                 // Field pos:I
     178: return
     179: iinc          1, 1
     182: goto          2
     185: aload_0
     186: dup
     187: getfield      #91                 // Field pos:I
     190: iload_1
     191: iadd
     192: putfield      #91                 // Field pos:I
     195: aload_0
     196: iconst_1
     197: invokespecial #248                // Method fillBuffer:(I)Z
     200: ifne          0
     203: return

  public int nextInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokespecial #131                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     125
      20: aload_0
      21: getfield      #297                // Field peekedLong:J
      24: l2i
      25: istore_2
      26: aload_0
      27: getfield      #297                // Field peekedLong:J
      30: iload_2
      31: i2l
      32: lcmp
      33: ifeq          103
      36: new           #364                // class java/lang/NumberFormatException
      39: dup
      40: new           #139                // class java/lang/StringBuilder
      43: dup
      44: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      47: ldc_w         #396                // String Expected an int but was
      50: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #297                // Field peekedLong:J
      57: invokevirtual #399                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      60: ldc           #155                // String  at line
      62: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokespecial #158                // Method getLineNumber:()I
      69: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: ldc           #163                // String  column
      74: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: invokespecial #166                // Method getColumnNumber:()I
      81: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: ldc           #168                // String  path
      86: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: invokevirtual #172                // Method getPath:()Ljava/lang/String;
      93: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #371                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_0
     104: iconst_0
     105: putfield      #99                 // Field peeked:I
     108: aload_0
     109: getfield      #109                // Field pathIndices:[I
     112: aload_0
     113: getfield      #103                // Field stackSize:I
     116: iconst_1
     117: isub
     118: dup2
     119: iaload
     120: iconst_1
     121: iadd
     122: iastore
     123: iload_2
     124: ireturn
     125: iload_1
     126: bipush        16
     128: if_icmpne     170
     131: aload_0
     132: new           #105                // class java/lang/String
     135: dup
     136: aload_0
     137: getfield      #89                 // Field buffer:[C
     140: aload_0
     141: getfield      #91                 // Field pos:I
     144: aload_0
     145: getfield      #299                // Field peekedNumberLength:I
     148: invokespecial #326                // Method java/lang/String."<init>":([CII)V
     151: putfield      #318                // Field peekedString:Ljava/lang/String;
     154: aload_0
     155: dup
     156: getfield      #91                 // Field pos:I
     159: aload_0
     160: getfield      #299                // Field peekedNumberLength:I
     163: iadd
     164: putfield      #91                 // Field pos:I
     167: goto          304
     170: iload_1
     171: bipush        8
     173: if_icmpeq     182
     176: iload_1
     177: bipush        9
     179: if_icmpne     237
     182: aload_0
     183: aload_0
     184: iload_1
     185: bipush        8
     187: if_icmpne     195
     190: bipush        39
     192: goto          197
     195: bipush        34
     197: invokespecial #313                // Method nextQuotedValue:(C)Ljava/lang/String;
     200: putfield      #318                // Field peekedString:Ljava/lang/String;
     203: aload_0
     204: getfield      #318                // Field peekedString:Ljava/lang/String;
     207: invokestatic  #405                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     210: istore_2
     211: aload_0
     212: iconst_0
     213: putfield      #99                 // Field peeked:I
     216: aload_0
     217: getfield      #109                // Field pathIndices:[I
     220: aload_0
     221: getfield      #103                // Field stackSize:I
     224: iconst_1
     225: isub
     226: dup2
     227: iaload
     228: iconst_1
     229: iadd
     230: iastore
     231: iload_2
     232: ireturn
     233: astore_3
     234: goto          304
     237: new           #137                // class java/lang/IllegalStateException
     240: dup
     241: new           #139                // class java/lang/StringBuilder
     244: dup
     245: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     248: ldc_w         #396                // String Expected an int but was
     251: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: aload_0
     255: invokevirtual #150                // Method peek:()Lorg/sonar/api/internal/google/gson/stream/JsonToken;
     258: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     261: ldc           #155                // String  at line
     263: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: aload_0
     267: invokespecial #158                // Method getLineNumber:()I
     270: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     273: ldc           #163                // String  column
     275: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: aload_0
     279: invokespecial #166                // Method getColumnNumber:()I
     282: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     285: ldc           #168                // String  path
     287: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: aload_0
     291: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     294: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     300: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     303: athrow
     304: aload_0
     305: bipush        11
     307: putfield      #99                 // Field peeked:I
     310: aload_0
     311: getfield      #318                // Field peekedString:Ljava/lang/String;
     314: invokestatic  #344                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     317: dstore        4
     319: dload         4
     321: d2i
     322: istore_2
     323: iload_2
     324: i2d
     325: dload         4
     327: dcmpl
     328: ifeq          398
     331: new           #364                // class java/lang/NumberFormatException
     334: dup
     335: new           #139                // class java/lang/StringBuilder
     338: dup
     339: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     342: ldc_w         #396                // String Expected an int but was
     345: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     348: aload_0
     349: getfield      #318                // Field peekedString:Ljava/lang/String;
     352: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     355: ldc           #155                // String  at line
     357: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     360: aload_0
     361: invokespecial #158                // Method getLineNumber:()I
     364: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     367: ldc           #163                // String  column
     369: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     372: aload_0
     373: invokespecial #166                // Method getColumnNumber:()I
     376: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     379: ldc           #168                // String  path
     381: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     384: aload_0
     385: invokevirtual #172                // Method getPath:()Ljava/lang/String;
     388: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     391: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     394: invokespecial #371                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     397: athrow
     398: aload_0
     399: aconst_null
     400: putfield      #318                // Field peekedString:Ljava/lang/String;
     403: aload_0
     404: iconst_0
     405: putfield      #99                 // Field peeked:I
     408: aload_0
     409: getfield      #109                // Field pathIndices:[I
     412: aload_0
     413: getfield      #103                // Field stackSize:I
     416: iconst_1
     417: isub
     418: dup2
     419: iaload
     420: iconst_1
     421: iadd
     422: iastore
     423: iload_2
     424: ireturn
    Exception table:
       from    to  target type
         203   232   233   Class java/lang/NumberFormatException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #99                 // Field peeked:I
       5: aload_0
       6: getfield      #101                // Field stack:[I
       9: iconst_0
      10: bipush        8
      12: iastore
      13: aload_0
      14: iconst_1
      15: putfield      #103                // Field stackSize:I
      18: aload_0
      19: getfield      #118                // Field in:Ljava/io/Reader;
      22: invokevirtual #410                // Method java/io/Reader.close:()V
      25: return

  public void skipValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #99                 // Field peeked:I
       6: istore_2
       7: iload_2
       8: ifne          16
      11: aload_0
      12: invokespecial #131                // Method doPeek:()I
      15: istore_2
      16: iload_2
      17: iconst_3
      18: if_icmpne     32
      21: aload_0
      22: iconst_1
      23: invokespecial #135                // Method push:(I)V
      26: iinc          1, 1
      29: goto          170
      32: iload_2
      33: iconst_1
      34: if_icmpne     48
      37: aload_0
      38: iconst_3
      39: invokespecial #135                // Method push:(I)V
      42: iinc          1, 1
      45: goto          170
      48: iload_2
      49: iconst_4
      50: if_icmpne     69
      53: aload_0
      54: dup
      55: getfield      #103                // Field stackSize:I
      58: iconst_1
      59: isub
      60: putfield      #103                // Field stackSize:I
      63: iinc          1, -1
      66: goto          170
      69: iload_2
      70: iconst_2
      71: if_icmpne     90
      74: aload_0
      75: dup
      76: getfield      #103                // Field stackSize:I
      79: iconst_1
      80: isub
      81: putfield      #103                // Field stackSize:I
      84: iinc          1, -1
      87: goto          170
      90: iload_2
      91: bipush        14
      93: if_icmpeq     102
      96: iload_2
      97: bipush        10
      99: if_icmpne     109
     102: aload_0
     103: invokespecial #413                // Method skipUnquotedValue:()V
     106: goto          170
     109: iload_2
     110: bipush        8
     112: if_icmpeq     121
     115: iload_2
     116: bipush        12
     118: if_icmpne     130
     121: aload_0
     122: bipush        39
     124: invokespecial #415                // Method skipQuotedValue:(C)V
     127: goto          170
     130: iload_2
     131: bipush        9
     133: if_icmpeq     142
     136: iload_2
     137: bipush        13
     139: if_icmpne     151
     142: aload_0
     143: bipush        34
     145: invokespecial #415                // Method skipQuotedValue:(C)V
     148: goto          170
     151: iload_2
     152: bipush        16
     154: if_icmpne     170
     157: aload_0
     158: dup
     159: getfield      #91                 // Field pos:I
     162: aload_0
     163: getfield      #299                // Field peekedNumberLength:I
     166: iadd
     167: putfield      #91                 // Field pos:I
     170: aload_0
     171: iconst_0
     172: putfield      #99                 // Field peeked:I
     175: iload_1
     176: ifne          2
     179: aload_0
     180: getfield      #109                // Field pathIndices:[I
     183: aload_0
     184: getfield      #103                // Field stackSize:I
     187: iconst_1
     188: isub
     189: dup2
     190: iaload
     191: iconst_1
     192: iadd
     193: iastore
     194: aload_0
     195: getfield      #107                // Field pathNames:[Ljava/lang/String;
     198: aload_0
     199: getfield      #103                // Field stackSize:I
     202: iconst_1
     203: isub
     204: ldc_w         #278                // String null
     207: aastore
     208: return

  private void push(int);
    Code:
       0: aload_0
       1: getfield      #103                // Field stackSize:I
       4: aload_0
       5: getfield      #101                // Field stack:[I
       8: arraylength
       9: if_icmpne     100
      12: aload_0
      13: getfield      #103                // Field stackSize:I
      16: iconst_2
      17: imul
      18: newarray       int
      20: astore_2
      21: aload_0
      22: getfield      #103                // Field stackSize:I
      25: iconst_2
      26: imul
      27: newarray       int
      29: astore_3
      30: aload_0
      31: getfield      #103                // Field stackSize:I
      34: iconst_2
      35: imul
      36: anewarray     #105                // class java/lang/String
      39: astore        4
      41: aload_0
      42: getfield      #101                // Field stack:[I
      45: iconst_0
      46: aload_2
      47: iconst_0
      48: aload_0
      49: getfield      #103                // Field stackSize:I
      52: invokestatic  #422                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: aload_0
      56: getfield      #109                // Field pathIndices:[I
      59: iconst_0
      60: aload_3
      61: iconst_0
      62: aload_0
      63: getfield      #103                // Field stackSize:I
      66: invokestatic  #422                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload_0
      70: getfield      #107                // Field pathNames:[Ljava/lang/String;
      73: iconst_0
      74: aload         4
      76: iconst_0
      77: aload_0
      78: getfield      #103                // Field stackSize:I
      81: invokestatic  #422                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      84: aload_0
      85: aload_2
      86: putfield      #101                // Field stack:[I
      89: aload_0
      90: aload_3
      91: putfield      #109                // Field pathIndices:[I
      94: aload_0
      95: aload         4
      97: putfield      #107                // Field pathNames:[Ljava/lang/String;
     100: aload_0
     101: getfield      #101                // Field stack:[I
     104: aload_0
     105: dup
     106: getfield      #103                // Field stackSize:I
     109: dup_x1
     110: iconst_1
     111: iadd
     112: putfield      #103                // Field stackSize:I
     115: iload_1
     116: iastore
     117: return

  private boolean fillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: aload_0
       6: dup
       7: getfield      #97                 // Field lineStart:I
      10: aload_0
      11: getfield      #91                 // Field pos:I
      14: isub
      15: putfield      #97                 // Field lineStart:I
      18: aload_0
      19: getfield      #93                 // Field limit:I
      22: aload_0
      23: getfield      #91                 // Field pos:I
      26: if_icmpeq     59
      29: aload_0
      30: dup
      31: getfield      #93                 // Field limit:I
      34: aload_0
      35: getfield      #91                 // Field pos:I
      38: isub
      39: putfield      #93                 // Field limit:I
      42: aload_2
      43: aload_0
      44: getfield      #91                 // Field pos:I
      47: aload_2
      48: iconst_0
      49: aload_0
      50: getfield      #93                 // Field limit:I
      53: invokestatic  #422                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: goto          64
      59: aload_0
      60: iconst_0
      61: putfield      #93                 // Field limit:I
      64: aload_0
      65: iconst_0
      66: putfield      #91                 // Field pos:I
      69: aload_0
      70: getfield      #118                // Field in:Ljava/io/Reader;
      73: aload_2
      74: aload_0
      75: getfield      #93                 // Field limit:I
      78: aload_2
      79: arraylength
      80: aload_0
      81: getfield      #93                 // Field limit:I
      84: isub
      85: invokevirtual #430                // Method java/io/Reader.read:([CII)I
      88: dup
      89: istore_3
      90: iconst_m1
      91: if_icmpeq     167
      94: aload_0
      95: dup
      96: getfield      #93                 // Field limit:I
      99: iload_3
     100: iadd
     101: putfield      #93                 // Field limit:I
     104: aload_0
     105: getfield      #95                 // Field lineNumber:I
     108: ifne          157
     111: aload_0
     112: getfield      #97                 // Field lineStart:I
     115: ifne          157
     118: aload_0
     119: getfield      #93                 // Field limit:I
     122: ifle          157
     125: aload_2
     126: iconst_0
     127: caload
     128: ldc_w         #431                // int 65279
     131: if_icmpne     157
     134: aload_0
     135: dup
     136: getfield      #91                 // Field pos:I
     139: iconst_1
     140: iadd
     141: putfield      #91                 // Field pos:I
     144: aload_0
     145: dup
     146: getfield      #97                 // Field lineStart:I
     149: iconst_1
     150: iadd
     151: putfield      #97                 // Field lineStart:I
     154: iinc          1, 1
     157: aload_0
     158: getfield      #93                 // Field limit:I
     161: iload_1
     162: if_icmplt     69
     165: iconst_1
     166: ireturn
     167: iconst_0
     168: ireturn

  private int getLineNumber();
    Code:
       0: aload_0
       1: getfield      #95                 // Field lineNumber:I
       4: iconst_1
       5: iadd
       6: ireturn

  private int getColumnNumber();
    Code:
       0: aload_0
       1: getfield      #91                 // Field pos:I
       4: aload_0
       5: getfield      #97                 // Field lineStart:I
       8: isub
       9: iconst_1
      10: iadd
      11: ireturn

  private int nextNonWhitespace(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #91                 // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpne     49
      22: aload_0
      23: iload_3
      24: putfield      #91                 // Field pos:I
      27: aload_0
      28: iconst_1
      29: invokespecial #248                // Method fillBuffer:(I)Z
      32: ifne          38
      35: goto          320
      38: aload_0
      39: getfield      #91                 // Field pos:I
      42: istore_3
      43: aload_0
      44: getfield      #93                 // Field limit:I
      47: istore        4
      49: aload_2
      50: iload_3
      51: iinc          3, 1
      54: caload
      55: istore        5
      57: iload         5
      59: bipush        10
      61: if_icmpne     82
      64: aload_0
      65: dup
      66: getfield      #95                 // Field lineNumber:I
      69: iconst_1
      70: iadd
      71: putfield      #95                 // Field lineNumber:I
      74: aload_0
      75: iload_3
      76: putfield      #97                 // Field lineStart:I
      79: goto          16
      82: iload         5
      84: bipush        32
      86: if_icmpeq     16
      89: iload         5
      91: bipush        13
      93: if_icmpeq     16
      96: iload         5
      98: bipush        9
     100: if_icmpne     106
     103: goto          16
     106: iload         5
     108: bipush        47
     110: if_icmpne     275
     113: aload_0
     114: iload_3
     115: putfield      #91                 // Field pos:I
     118: iload_3
     119: iload         4
     121: if_icmpne     159
     124: aload_0
     125: dup
     126: getfield      #91                 // Field pos:I
     129: iconst_1
     130: isub
     131: putfield      #91                 // Field pos:I
     134: aload_0
     135: iconst_2
     136: invokespecial #248                // Method fillBuffer:(I)Z
     139: istore        6
     141: aload_0
     142: dup
     143: getfield      #91                 // Field pos:I
     146: iconst_1
     147: iadd
     148: putfield      #91                 // Field pos:I
     151: iload         6
     153: ifne          159
     156: iload         5
     158: ireturn
     159: aload_0
     160: invokespecial #230                // Method checkLenient:()V
     163: aload_2
     164: aload_0
     165: getfield      #91                 // Field pos:I
     168: caload
     169: istore        6
     171: iload         6
     173: lookupswitch  { // 2
                    42: 200
                    47: 244
               default: 272
          }
     200: aload_0
     201: dup
     202: getfield      #91                 // Field pos:I
     205: iconst_1
     206: iadd
     207: putfield      #91                 // Field pos:I
     210: aload_0
     211: ldc_w         #435                // String */
     214: invokespecial #439                // Method skipTo:(Ljava/lang/String;)Z
     217: ifne          228
     220: aload_0
     221: ldc_w         #441                // String Unterminated comment
     224: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     227: athrow
     228: aload_0
     229: getfield      #91                 // Field pos:I
     232: iconst_2
     233: iadd
     234: istore_3
     235: aload_0
     236: getfield      #93                 // Field limit:I
     239: istore        4
     241: goto          16
     244: aload_0
     245: dup
     246: getfield      #91                 // Field pos:I
     249: iconst_1
     250: iadd
     251: putfield      #91                 // Field pos:I
     254: aload_0
     255: invokespecial #444                // Method skipToEndOfLine:()V
     258: aload_0
     259: getfield      #91                 // Field pos:I
     262: istore_3
     263: aload_0
     264: getfield      #93                 // Field limit:I
     267: istore        4
     269: goto          16
     272: iload         5
     274: ireturn
     275: iload         5
     277: bipush        35
     279: if_icmpne     309
     282: aload_0
     283: iload_3
     284: putfield      #91                 // Field pos:I
     287: aload_0
     288: invokespecial #230                // Method checkLenient:()V
     291: aload_0
     292: invokespecial #444                // Method skipToEndOfLine:()V
     295: aload_0
     296: getfield      #91                 // Field pos:I
     299: istore_3
     300: aload_0
     301: getfield      #93                 // Field limit:I
     304: istore        4
     306: goto          317
     309: aload_0
     310: iload_3
     311: putfield      #91                 // Field pos:I
     314: iload         5
     316: ireturn
     317: goto          16
     320: iload_1
     321: ifeq          367
     324: new           #446                // class java/io/EOFException
     327: dup
     328: new           #139                // class java/lang/StringBuilder
     331: dup
     332: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     335: ldc_w         #448                // String End of input at line
     338: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: aload_0
     342: invokespecial #158                // Method getLineNumber:()I
     345: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     348: ldc           #163                // String  column
     350: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     353: aload_0
     354: invokespecial #166                // Method getColumnNumber:()I
     357: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     360: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     363: invokespecial #449                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     366: athrow
     367: iconst_m1
     368: ireturn

  private void checkLenient() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #87                 // Field lenient:Z
       4: ifne          15
       7: aload_0
       8: ldc_w         #453                // String Use JsonReader.setLenient(true) to accept malformed JSON
      11: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      14: athrow
      15: return

  private void skipToEndOfLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #91                 // Field pos:I
       4: aload_0
       5: getfield      #93                 // Field limit:I
       8: if_icmplt     19
      11: aload_0
      12: iconst_1
      13: invokespecial #248                // Method fillBuffer:(I)Z
      16: ifeq          75
      19: aload_0
      20: getfield      #89                 // Field buffer:[C
      23: aload_0
      24: dup
      25: getfield      #91                 // Field pos:I
      28: dup_x1
      29: iconst_1
      30: iadd
      31: putfield      #91                 // Field pos:I
      34: caload
      35: istore_1
      36: iload_1
      37: bipush        10
      39: if_icmpne     63
      42: aload_0
      43: dup
      44: getfield      #95                 // Field lineNumber:I
      47: iconst_1
      48: iadd
      49: putfield      #95                 // Field lineNumber:I
      52: aload_0
      53: aload_0
      54: getfield      #91                 // Field pos:I
      57: putfield      #97                 // Field lineStart:I
      60: goto          75
      63: iload_1
      64: bipush        13
      66: if_icmpne     72
      69: goto          75
      72: goto          0
      75: return

  private boolean skipTo(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #91                 // Field pos:I
       4: aload_1
       5: invokevirtual #282                // Method java/lang/String.length:()I
       8: iadd
       9: aload_0
      10: getfield      #93                 // Field limit:I
      13: if_icmple     27
      16: aload_0
      17: aload_1
      18: invokevirtual #282                // Method java/lang/String.length:()I
      21: invokespecial #248                // Method fillBuffer:(I)Z
      24: ifeq          117
      27: aload_0
      28: getfield      #89                 // Field buffer:[C
      31: aload_0
      32: getfield      #91                 // Field pos:I
      35: caload
      36: bipush        10
      38: if_icmpne     64
      41: aload_0
      42: dup
      43: getfield      #95                 // Field lineNumber:I
      46: iconst_1
      47: iadd
      48: putfield      #95                 // Field lineNumber:I
      51: aload_0
      52: aload_0
      53: getfield      #91                 // Field pos:I
      56: iconst_1
      57: iadd
      58: putfield      #97                 // Field lineStart:I
      61: goto          104
      64: iconst_0
      65: istore_2
      66: iload_2
      67: aload_1
      68: invokevirtual #282                // Method java/lang/String.length:()I
      71: if_icmpge     102
      74: aload_0
      75: getfield      #89                 // Field buffer:[C
      78: aload_0
      79: getfield      #91                 // Field pos:I
      82: iload_2
      83: iadd
      84: caload
      85: aload_1
      86: iload_2
      87: invokevirtual #286                // Method java/lang/String.charAt:(I)C
      90: if_icmpeq     96
      93: goto          104
      96: iinc          2, 1
      99: goto          66
     102: iconst_1
     103: ireturn
     104: aload_0
     105: dup
     106: getfield      #91                 // Field pos:I
     109: iconst_1
     110: iadd
     111: putfield      #91                 // Field pos:I
     114: goto          0
     117: iconst_0
     118: ireturn

  public java.lang.String toString();
    Code:
       0: new           #139                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #458                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #463                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #155                // String  at line
      19: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokespecial #158                // Method getLineNumber:()I
      26: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #163                // String  column
      31: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokespecial #166                // Method getColumnNumber:()I
      38: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  public java.lang.String getPath();
    Code:
       0: new           #139                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
       7: bipush        36
       9: invokevirtual #384                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: astore_1
      13: iconst_0
      14: istore_2
      15: aload_0
      16: getfield      #103                // Field stackSize:I
      19: istore_3
      20: iload_2
      21: iload_3
      22: if_icmpge     136
      25: aload_0
      26: getfield      #101                // Field stack:[I
      29: iload_2
      30: iaload
      31: tableswitch   { // 1 to 8
                     1: 76
                     2: 76
                     3: 100
                     4: 100
                     5: 100
                     6: 130
                     7: 130
                     8: 130
               default: 130
          }
      76: aload_1
      77: bipush        91
      79: invokevirtual #384                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #109                // Field pathIndices:[I
      86: iload_2
      87: iaload
      88: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: bipush        93
      93: invokevirtual #384                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      96: pop
      97: goto          130
     100: aload_1
     101: bipush        46
     103: invokevirtual #384                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: pop
     107: aload_0
     108: getfield      #107                // Field pathNames:[Ljava/lang/String;
     111: iload_2
     112: aaload
     113: ifnull        130
     116: aload_1
     117: aload_0
     118: getfield      #107                // Field pathNames:[Ljava/lang/String;
     121: iload_2
     122: aaload
     123: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: goto          130
     130: iinc          2, 1
     133: goto          20
     136: aload_1
     137: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: areturn

  private char readEscapeCharacter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #91                 // Field pos:I
       4: aload_0
       5: getfield      #93                 // Field limit:I
       8: if_icmpne     27
      11: aload_0
      12: iconst_1
      13: invokespecial #248                // Method fillBuffer:(I)Z
      16: ifne          27
      19: aload_0
      20: ldc_w         #466                // String Unterminated escape sequence
      23: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      26: athrow
      27: aload_0
      28: getfield      #89                 // Field buffer:[C
      31: aload_0
      32: dup
      33: getfield      #91                 // Field pos:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #91                 // Field pos:I
      42: caload
      43: istore_1
      44: iload_1
      45: lookupswitch  { // 10
                    10: 356
                    34: 374
                    39: 374
                    92: 374
                    98: 344
                   102: 353
                   110: 347
                   114: 350
                   116: 341
                   117: 136
               default: 374
          }
     136: aload_0
     137: getfield      #91                 // Field pos:I
     140: iconst_4
     141: iadd
     142: aload_0
     143: getfield      #93                 // Field limit:I
     146: if_icmple     165
     149: aload_0
     150: iconst_4
     151: invokespecial #248                // Method fillBuffer:(I)Z
     154: ifne          165
     157: aload_0
     158: ldc_w         #466                // String Unterminated escape sequence
     161: invokespecial #236                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     164: athrow
     165: iconst_0
     166: istore_2
     167: aload_0
     168: getfield      #91                 // Field pos:I
     171: istore_3
     172: iload_3
     173: iconst_4
     174: iadd
     175: istore        4
     177: iload_3
     178: iload         4
     180: if_icmpge     329
     183: aload_0
     184: getfield      #89                 // Field buffer:[C
     187: iload_3
     188: caload
     189: istore        5
     191: iload_2
     192: iconst_4
     193: ishl
     194: i2c
     195: istore_2
     196: iload         5
     198: bipush        48
     200: if_icmplt     222
     203: iload         5
     205: bipush        57
     207: if_icmpgt     222
     210: iload_2
     211: iload         5
     213: bipush        48
     215: isub
     216: iadd
     217: i2c
     218: istore_2
     219: goto          323
     222: iload         5
     224: bipush        97
     226: if_icmplt     251
     229: iload         5
     231: bipush        102
     233: if_icmpgt     251
     236: iload_2
     237: iload         5
     239: bipush        97
     241: isub
     242: bipush        10
     244: iadd
     245: iadd
     246: i2c
     247: istore_2
     248: goto          323
     251: iload         5
     253: bipush        65
     255: if_icmplt     280
     258: iload         5
     260: bipush        70
     262: if_icmpgt     280
     265: iload_2
     266: iload         5
     268: bipush        65
     270: isub
     271: bipush        10
     273: iadd
     274: iadd
     275: i2c
     276: istore_2
     277: goto          323
     280: new           #364                // class java/lang/NumberFormatException
     283: dup
     284: new           #139                // class java/lang/StringBuilder
     287: dup
     288: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
     291: ldc_w         #468                // String \\u
     294: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: new           #105                // class java/lang/String
     300: dup
     301: aload_0
     302: getfield      #89                 // Field buffer:[C
     305: aload_0
     306: getfield      #91                 // Field pos:I
     309: iconst_4
     310: invokespecial #326                // Method java/lang/String."<init>":([CII)V
     313: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     316: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     319: invokespecial #371                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     322: athrow
     323: iinc          3, 1
     326: goto          177
     329: aload_0
     330: dup
     331: getfield      #91                 // Field pos:I
     334: iconst_4
     335: iadd
     336: putfield      #91                 // Field pos:I
     339: iload_2
     340: ireturn
     341: bipush        9
     343: ireturn
     344: bipush        8
     346: ireturn
     347: bipush        10
     349: ireturn
     350: bipush        13
     352: ireturn
     353: bipush        12
     355: ireturn
     356: aload_0
     357: dup
     358: getfield      #95                 // Field lineNumber:I
     361: iconst_1
     362: iadd
     363: putfield      #95                 // Field lineNumber:I
     366: aload_0
     367: aload_0
     368: getfield      #91                 // Field pos:I
     371: putfield      #97                 // Field lineStart:I
     374: iload_1
     375: ireturn

  private java.io.IOException syntaxError(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #353                // class org/sonar/api/internal/google/gson/stream/MalformedJsonException
       3: dup
       4: new           #139                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #140                // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #155                // String  at line
      17: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: invokespecial #158                // Method getLineNumber:()I
      24: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: ldc           #163                // String  column
      29: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokespecial #166                // Method getColumnNumber:()I
      36: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #168                // String  path
      41: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #172                // Method getPath:()Ljava/lang/String;
      48: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #359                // Method org/sonar/api/internal/google/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
      57: athrow

  private void consumeNonExecutePrefix() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #227                // Method nextNonWhitespace:(Z)I
       5: pop
       6: aload_0
       7: dup
       8: getfield      #91                 // Field pos:I
      11: iconst_1
      12: isub
      13: putfield      #91                 // Field pos:I
      16: aload_0
      17: getfield      #91                 // Field pos:I
      20: getstatic     #473                // Field NON_EXECUTE_PREFIX:[C
      23: arraylength
      24: iadd
      25: aload_0
      26: getfield      #93                 // Field limit:I
      29: if_icmple     44
      32: aload_0
      33: getstatic     #473                // Field NON_EXECUTE_PREFIX:[C
      36: arraylength
      37: invokespecial #248                // Method fillBuffer:(I)Z
      40: ifne          44
      43: return
      44: iconst_0
      45: istore_1
      46: iload_1
      47: getstatic     #473                // Field NON_EXECUTE_PREFIX:[C
      50: arraylength
      51: if_icmpge     80
      54: aload_0
      55: getfield      #89                 // Field buffer:[C
      58: aload_0
      59: getfield      #91                 // Field pos:I
      62: iload_1
      63: iadd
      64: caload
      65: getstatic     #473                // Field NON_EXECUTE_PREFIX:[C
      68: iload_1
      69: caload
      70: if_icmpeq     74
      73: return
      74: iinc          1, 1
      77: goto          46
      80: aload_0
      81: dup
      82: getfield      #91                 // Field pos:I
      85: getstatic     #473                // Field NON_EXECUTE_PREFIX:[C
      88: arraylength
      89: iadd
      90: putfield      #91                 // Field pos:I
      93: return

  static int access$000(org.sonar.api.internal.google.gson.stream.JsonReader);
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: ireturn

  static int access$100(org.sonar.api.internal.google.gson.stream.JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #131                // Method doPeek:()I
       4: ireturn

  static int access$002(org.sonar.api.internal.google.gson.stream.JsonReader, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #99                 // Field peeked:I
       6: ireturn

  static int access$200(org.sonar.api.internal.google.gson.stream.JsonReader);
    Code:
       0: aload_0
       1: invokespecial #158                // Method getLineNumber:()I
       4: ireturn

  static int access$300(org.sonar.api.internal.google.gson.stream.JsonReader);
    Code:
       0: aload_0
       1: invokespecial #166                // Method getColumnNumber:()I
       4: ireturn

  static {};
    Code:
       0: ldc_w         #485                // String )]}\'\n
       3: invokevirtual #489                // Method java/lang/String.toCharArray:()[C
       6: putstatic     #473                // Field NON_EXECUTE_PREFIX:[C
       9: new           #9                  // class org/sonar/api/internal/google/gson/stream/JsonReader$1
      12: dup
      13: invokespecial #490                // Method org/sonar/api/internal/google/gson/stream/JsonReader$1."<init>":()V
      16: putstatic     #496                // Field org/sonar/api/internal/google/gson/internal/JsonReaderInternalAccess.INSTANCE:Lorg/sonar/api/internal/google/gson/internal/JsonReaderInternalAccess;
      19: return
}
