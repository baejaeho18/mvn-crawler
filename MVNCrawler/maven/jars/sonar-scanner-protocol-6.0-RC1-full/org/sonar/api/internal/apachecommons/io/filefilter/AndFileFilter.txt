Compiled from "AndFileFilter.java"
public class org.sonar.api.internal.apachecommons.io.filefilter.AndFileFilter extends org.sonar.api.internal.apachecommons.io.filefilter.AbstractFileFilter implements org.sonar.api.internal.apachecommons.io.filefilter.ConditionalFileFilter,java.io.Serializable {
  private final java.util.List<org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter> fileFilters;

  public org.sonar.api.internal.apachecommons.io.filefilter.AndFileFilter();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/sonar/api/internal/apachecommons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/ArrayList
       8: dup
       9: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #21                 // Field fileFilters:Ljava/util/List;
      15: return

  public org.sonar.api.internal.apachecommons.io.filefilter.AndFileFilter(java.util.List<org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter>);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/sonar/api/internal/apachecommons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_1
       5: ifnonnull     22
       8: aload_0
       9: new           #18                 // class java/util/ArrayList
      12: dup
      13: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      16: putfield      #21                 // Field fileFilters:Ljava/util/List;
      19: goto          34
      22: aload_0
      23: new           #18                 // class java/util/ArrayList
      26: dup
      27: aload_1
      28: invokespecial #29                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      31: putfield      #21                 // Field fileFilters:Ljava/util/List;
      34: return

  public org.sonar.api.internal.apachecommons.io.filefilter.AndFileFilter(org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter, org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/sonar/api/internal/apachecommons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     22
      12: new           #34                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #36                 // String The filters must not be null
      18: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: new           #18                 // class java/util/ArrayList
      26: dup
      27: iconst_2
      28: invokespecial #42                 // Method java/util/ArrayList."<init>":(I)V
      31: putfield      #21                 // Field fileFilters:Ljava/util/List;
      34: aload_0
      35: aload_1
      36: invokevirtual #46                 // Method addFileFilter:(Lorg/sonar/api/internal/apachecommons/io/filefilter/IOFileFilter;)V
      39: aload_0
      40: aload_2
      41: invokevirtual #46                 // Method addFileFilter:(Lorg/sonar/api/internal/apachecommons/io/filefilter/IOFileFilter;)V
      44: return

  public void addFileFilter(org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fileFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.List<org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter> getFileFilters();
    Code:
       0: aload_0
       1: getfield      #21                 // Field fileFilters:Ljava/util/List;
       4: invokestatic  #62                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public boolean removeFileFilter(org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fileFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public void setFileFilters(java.util.List<org.sonar.api.internal.apachecommons.io.filefilter.IOFileFilter>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fileFilters:Ljava/util/List;
       4: invokeinterface #71,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #21                 // Field fileFilters:Ljava/util/List;
      13: aload_1
      14: invokeinterface #75,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public boolean accept(java.io.File);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fileFilters:Ljava/util/List;
       4: invokeinterface #81,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #21                 // Field fileFilters:Ljava/util/List;
      18: invokeinterface #85,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          58
      33: aload_2
      34: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #32                 // class org/sonar/api/internal/apachecommons/io/filefilter/IOFileFilter
      42: astore_3
      43: aload_3
      44: aload_1
      45: invokeinterface #96,  2           // InterfaceMethod org/sonar/api/internal/apachecommons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: goto          24
      58: iconst_1
      59: ireturn

  public boolean accept(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fileFilters:Ljava/util/List;
       4: invokeinterface #81,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #21                 // Field fileFilters:Ljava/util/List;
      18: invokeinterface #85,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          61
      33: aload_3
      34: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #32                 // class org/sonar/api/internal/apachecommons/io/filefilter/IOFileFilter
      42: astore        4
      44: aload         4
      46: aload_1
      47: aload_2
      48: invokeinterface #104,  3          // InterfaceMethod org/sonar/api/internal/apachecommons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: goto          24
      61: iconst_1
      62: ireturn

  public java.lang.String toString();
    Code:
       0: new           #110                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #111                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokespecial #113                // Method org/sonar/api/internal/apachecommons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;
      13: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #119                // String (
      20: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: getfield      #21                 // Field fileFilters:Ljava/util/List;
      28: ifnull        92
      31: iconst_0
      32: istore_2
      33: iload_2
      34: aload_0
      35: getfield      #21                 // Field fileFilters:Ljava/util/List;
      38: invokeinterface #123,  1          // InterfaceMethod java/util/List.size:()I
      43: if_icmpge     92
      46: iload_2
      47: ifle          57
      50: aload_1
      51: ldc           #125                // String ,
      53: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_0
      58: getfield      #21                 // Field fileFilters:Ljava/util/List;
      61: iload_2
      62: invokeinterface #129,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      67: astore_3
      68: aload_1
      69: aload_3
      70: ifnonnull     78
      73: ldc           #131                // String null
      75: goto          82
      78: aload_3
      79: invokevirtual #134                // Method java/lang/Object.toString:()Ljava/lang/String;
      82: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: iinc          2, 1
      89: goto          33
      92: aload_1
      93: ldc           #138                // String )
      95: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: aload_1
     100: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: areturn
}
