Compiled from "LongRange.java"
public final class org.sonar.api.internal.apachecommons.lang.math.LongRange extends org.sonar.api.internal.apachecommons.lang.math.Range implements java.io.Serializable {
  private static final long serialVersionUID;

  private final long min;

  private final long max;

  private transient java.lang.Long minObject;

  private transient java.lang.Long maxObject;

  private transient int hashCode;

  private transient java.lang.String toString;

  public org.sonar.api.internal.apachecommons.lang.math.LongRange(long);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method org/sonar/api/internal/apachecommons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #27                 // Field minObject:Ljava/lang/Long;
       9: aload_0
      10: aconst_null
      11: putfield      #29                 // Field maxObject:Ljava/lang/Long;
      14: aload_0
      15: iconst_0
      16: putfield      #31                 // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #33                 // Field toString:Ljava/lang/String;
      24: aload_0
      25: lload_1
      26: putfield      #35                 // Field min:J
      29: aload_0
      30: lload_1
      31: putfield      #37                 // Field max:J
      34: return

  public org.sonar.api.internal.apachecommons.lang.math.LongRange(java.lang.Number);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method org/sonar/api/internal/apachecommons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #27                 // Field minObject:Ljava/lang/Long;
       9: aload_0
      10: aconst_null
      11: putfield      #29                 // Field maxObject:Ljava/lang/Long;
      14: aload_0
      15: iconst_0
      16: putfield      #31                 // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #33                 // Field toString:Ljava/lang/String;
      24: aload_1
      25: ifnonnull     38
      28: new           #43                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #45                 // String The number must not be null
      34: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_1
      40: invokevirtual #54                 // Method java/lang/Number.longValue:()J
      43: putfield      #35                 // Field min:J
      46: aload_0
      47: aload_1
      48: invokevirtual #54                 // Method java/lang/Number.longValue:()J
      51: putfield      #37                 // Field max:J
      54: aload_1
      55: instanceof    #56                 // class java/lang/Long
      58: ifeq          77
      61: aload_0
      62: aload_1
      63: checkcast     #56                 // class java/lang/Long
      66: putfield      #27                 // Field minObject:Ljava/lang/Long;
      69: aload_0
      70: aload_1
      71: checkcast     #56                 // class java/lang/Long
      74: putfield      #29                 // Field maxObject:Ljava/lang/Long;
      77: return

  public org.sonar.api.internal.apachecommons.lang.math.LongRange(long, long);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method org/sonar/api/internal/apachecommons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #27                 // Field minObject:Ljava/lang/Long;
       9: aload_0
      10: aconst_null
      11: putfield      #29                 // Field maxObject:Ljava/lang/Long;
      14: aload_0
      15: iconst_0
      16: putfield      #31                 // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #33                 // Field toString:Ljava/lang/String;
      24: lload_3
      25: lload_1
      26: lcmp
      27: ifge          43
      30: aload_0
      31: lload_3
      32: putfield      #35                 // Field min:J
      35: aload_0
      36: lload_1
      37: putfield      #37                 // Field max:J
      40: goto          53
      43: aload_0
      44: lload_1
      45: putfield      #35                 // Field min:J
      48: aload_0
      49: lload_3
      50: putfield      #37                 // Field max:J
      53: return

  public org.sonar.api.internal.apachecommons.lang.math.LongRange(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method org/sonar/api/internal/apachecommons/lang/math/Range."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #27                 // Field minObject:Ljava/lang/Long;
       9: aload_0
      10: aconst_null
      11: putfield      #29                 // Field maxObject:Ljava/lang/Long;
      14: aload_0
      15: iconst_0
      16: putfield      #31                 // Field hashCode:I
      19: aload_0
      20: aconst_null
      21: putfield      #33                 // Field toString:Ljava/lang/String;
      24: aload_1
      25: ifnull        32
      28: aload_2
      29: ifnonnull     42
      32: new           #43                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #63                 // String The numbers must not be null
      38: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: invokevirtual #54                 // Method java/lang/Number.longValue:()J
      46: lstore_3
      47: aload_2
      48: invokevirtual #54                 // Method java/lang/Number.longValue:()J
      51: lstore        5
      53: lload         5
      55: lload_3
      56: lcmp
      57: ifge          104
      60: aload_0
      61: lload         5
      63: putfield      #35                 // Field min:J
      66: aload_0
      67: lload_3
      68: putfield      #37                 // Field max:J
      71: aload_2
      72: instanceof    #56                 // class java/lang/Long
      75: ifeq          86
      78: aload_0
      79: aload_2
      80: checkcast     #56                 // class java/lang/Long
      83: putfield      #27                 // Field minObject:Ljava/lang/Long;
      86: aload_1
      87: instanceof    #56                 // class java/lang/Long
      90: ifeq          145
      93: aload_0
      94: aload_1
      95: checkcast     #56                 // class java/lang/Long
      98: putfield      #29                 // Field maxObject:Ljava/lang/Long;
     101: goto          145
     104: aload_0
     105: lload_3
     106: putfield      #35                 // Field min:J
     109: aload_0
     110: lload         5
     112: putfield      #37                 // Field max:J
     115: aload_1
     116: instanceof    #56                 // class java/lang/Long
     119: ifeq          130
     122: aload_0
     123: aload_1
     124: checkcast     #56                 // class java/lang/Long
     127: putfield      #27                 // Field minObject:Ljava/lang/Long;
     130: aload_2
     131: instanceof    #56                 // class java/lang/Long
     134: ifeq          145
     137: aload_0
     138: aload_2
     139: checkcast     #56                 // class java/lang/Long
     142: putfield      #29                 // Field maxObject:Ljava/lang/Long;
     145: return

  public java.lang.Number getMinimumNumber();
    Code:
       0: aload_0
       1: getfield      #27                 // Field minObject:Ljava/lang/Long;
       4: ifnonnull     22
       7: aload_0
       8: new           #56                 // class java/lang/Long
      11: dup
      12: aload_0
      13: getfield      #35                 // Field min:J
      16: invokespecial #69                 // Method java/lang/Long."<init>":(J)V
      19: putfield      #27                 // Field minObject:Ljava/lang/Long;
      22: aload_0
      23: getfield      #27                 // Field minObject:Ljava/lang/Long;
      26: areturn

  public long getMinimumLong();
    Code:
       0: aload_0
       1: getfield      #35                 // Field min:J
       4: lreturn

  public int getMinimumInteger();
    Code:
       0: aload_0
       1: getfield      #35                 // Field min:J
       4: l2i
       5: ireturn

  public double getMinimumDouble();
    Code:
       0: aload_0
       1: getfield      #35                 // Field min:J
       4: l2d
       5: dreturn

  public float getMinimumFloat();
    Code:
       0: aload_0
       1: getfield      #35                 // Field min:J
       4: l2f
       5: freturn

  public java.lang.Number getMaximumNumber();
    Code:
       0: aload_0
       1: getfield      #29                 // Field maxObject:Ljava/lang/Long;
       4: ifnonnull     22
       7: aload_0
       8: new           #56                 // class java/lang/Long
      11: dup
      12: aload_0
      13: getfield      #37                 // Field max:J
      16: invokespecial #69                 // Method java/lang/Long."<init>":(J)V
      19: putfield      #29                 // Field maxObject:Ljava/lang/Long;
      22: aload_0
      23: getfield      #29                 // Field maxObject:Ljava/lang/Long;
      26: areturn

  public long getMaximumLong();
    Code:
       0: aload_0
       1: getfield      #37                 // Field max:J
       4: lreturn

  public int getMaximumInteger();
    Code:
       0: aload_0
       1: getfield      #37                 // Field max:J
       4: l2i
       5: ireturn

  public double getMaximumDouble();
    Code:
       0: aload_0
       1: getfield      #37                 // Field max:J
       4: l2d
       5: dreturn

  public float getMaximumFloat();
    Code:
       0: aload_0
       1: getfield      #37                 // Field max:J
       4: l2f
       5: freturn

  public boolean containsNumber(java.lang.Number);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #54                 // Method java/lang/Number.longValue:()J
      11: invokevirtual #87                 // Method containsLong:(J)Z
      14: ireturn

  public boolean containsLong(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #35                 // Field min:J
       5: lcmp
       6: iflt          22
       9: lload_1
      10: aload_0
      11: getfield      #37                 // Field max:J
      14: lcmp
      15: ifgt          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean containsRange(org.sonar.api.internal.apachecommons.lang.math.Range);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #92                 // Method org/sonar/api/internal/apachecommons/lang/math/Range.getMinimumLong:()J
      11: invokevirtual #87                 // Method containsLong:(J)Z
      14: ifeq          32
      17: aload_0
      18: aload_1
      19: invokevirtual #94                 // Method org/sonar/api/internal/apachecommons/lang/math/Range.getMaximumLong:()J
      22: invokevirtual #87                 // Method containsLong:(J)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean overlapsRange(org.sonar.api.internal.apachecommons.lang.math.Range);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: getfield      #35                 // Field min:J
      11: invokevirtual #98                 // Method org/sonar/api/internal/apachecommons/lang/math/Range.containsLong:(J)Z
      14: ifne          39
      17: aload_1
      18: aload_0
      19: getfield      #37                 // Field max:J
      22: invokevirtual #98                 // Method org/sonar/api/internal/apachecommons/lang/math/Range.containsLong:(J)Z
      25: ifne          39
      28: aload_0
      29: aload_1
      30: invokevirtual #92                 // Method org/sonar/api/internal/apachecommons/lang/math/Range.getMinimumLong:()J
      33: invokevirtual #87                 // Method containsLong:(J)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/sonar/api/internal/apachecommons/lang/math/LongRange
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/sonar/api/internal/apachecommons/lang/math/LongRange
      20: astore_2
      21: aload_0
      22: getfield      #35                 // Field min:J
      25: aload_2
      26: getfield      #35                 // Field min:J
      29: lcmp
      30: ifne          49
      33: aload_0
      34: getfield      #37                 // Field max:J
      37: aload_2
      38: getfield      #37                 // Field max:J
      41: lcmp
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #31                 // Field hashCode:I
       4: ifne          82
       7: aload_0
       8: bipush        17
      10: putfield      #31                 // Field hashCode:I
      13: aload_0
      14: bipush        37
      16: aload_0
      17: getfield      #31                 // Field hashCode:I
      20: imul
      21: aload_0
      22: invokevirtual #108                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokevirtual #110                // Method java/lang/Object.hashCode:()I
      28: iadd
      29: putfield      #31                 // Field hashCode:I
      32: aload_0
      33: bipush        37
      35: aload_0
      36: getfield      #31                 // Field hashCode:I
      39: imul
      40: aload_0
      41: getfield      #35                 // Field min:J
      44: aload_0
      45: getfield      #35                 // Field min:J
      48: bipush        32
      50: lshr
      51: lxor
      52: l2i
      53: iadd
      54: putfield      #31                 // Field hashCode:I
      57: aload_0
      58: bipush        37
      60: aload_0
      61: getfield      #31                 // Field hashCode:I
      64: imul
      65: aload_0
      66: getfield      #37                 // Field max:J
      69: aload_0
      70: getfield      #37                 // Field max:J
      73: bipush        32
      75: lshr
      76: lxor
      77: l2i
      78: iadd
      79: putfield      #31                 // Field hashCode:I
      82: aload_0
      83: getfield      #31                 // Field hashCode:I
      86: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #33                 // Field toString:Ljava/lang/String;
       4: ifnonnull     64
       7: new           #113                // class org/sonar/api/internal/apachecommons/lang/text/StrBuilder
      10: dup
      11: bipush        32
      13: invokespecial #116                // Method org/sonar/api/internal/apachecommons/lang/text/StrBuilder."<init>":(I)V
      16: astore_1
      17: aload_1
      18: ldc           #118                // String Range[
      20: invokevirtual #122                // Method org/sonar/api/internal/apachecommons/lang/text/StrBuilder.append:(Ljava/lang/String;)Lorg/sonar/api/internal/apachecommons/lang/text/StrBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #35                 // Field min:J
      29: invokevirtual #125                // Method org/sonar/api/internal/apachecommons/lang/text/StrBuilder.append:(J)Lorg/sonar/api/internal/apachecommons/lang/text/StrBuilder;
      32: pop
      33: aload_1
      34: bipush        44
      36: invokevirtual #128                // Method org/sonar/api/internal/apachecommons/lang/text/StrBuilder.append:(C)Lorg/sonar/api/internal/apachecommons/lang/text/StrBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #37                 // Field max:J
      45: invokevirtual #125                // Method org/sonar/api/internal/apachecommons/lang/text/StrBuilder.append:(J)Lorg/sonar/api/internal/apachecommons/lang/text/StrBuilder;
      48: pop
      49: aload_1
      50: bipush        93
      52: invokevirtual #128                // Method org/sonar/api/internal/apachecommons/lang/text/StrBuilder.append:(C)Lorg/sonar/api/internal/apachecommons/lang/text/StrBuilder;
      55: pop
      56: aload_0
      57: aload_1
      58: invokevirtual #130                // Method org/sonar/api/internal/apachecommons/lang/text/StrBuilder.toString:()Ljava/lang/String;
      61: putfield      #33                 // Field toString:Ljava/lang/String;
      64: aload_0
      65: getfield      #33                 // Field toString:Ljava/lang/String;
      68: areturn

  public long[] toArray();
    Code:
       0: aload_0
       1: getfield      #37                 // Field max:J
       4: aload_0
       5: getfield      #35                 // Field min:J
       8: lsub
       9: lconst_1
      10: ladd
      11: l2i
      12: newarray       long
      14: astore_1
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_1
      19: arraylength
      20: if_icmpge     39
      23: aload_1
      24: iload_2
      25: aload_0
      26: getfield      #35                 // Field min:J
      29: iload_2
      30: i2l
      31: ladd
      32: lastore
      33: iinc          2, 1
      36: goto          17
      39: aload_1
      40: areturn
}
