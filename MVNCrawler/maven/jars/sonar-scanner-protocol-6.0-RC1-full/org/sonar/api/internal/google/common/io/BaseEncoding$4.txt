Compiled from "BaseEncoding.java"
final class org.sonar.api.internal.google.common.io.BaseEncoding$4 implements org.sonar.api.internal.google.common.io.GwtWorkarounds$CharOutput {
  int charsUntilSeparator;

  final int val$afterEveryChars;

  final java.lang.String val$separator;

  final org.sonar.api.internal.google.common.io.GwtWorkarounds$CharOutput val$delegate;

  org.sonar.api.internal.google.common.io.BaseEncoding$4(int, java.lang.String, org.sonar.api.internal.google.common.io.GwtWorkarounds$CharOutput);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field val$afterEveryChars:I
       5: aload_0
       6: aload_2
       7: putfield      #28                 // Field val$separator:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #30                 // Field val$delegate:Lorg/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput;
      15: aload_0
      16: invokespecial #33                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: aload_0
      21: getfield      #26                 // Field val$afterEveryChars:I
      24: putfield      #35                 // Field charsUntilSeparator:I
      27: return

  public void write(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field charsUntilSeparator:I
       4: ifne          51
       7: iconst_0
       8: istore_2
       9: iload_2
      10: aload_0
      11: getfield      #28                 // Field val$separator:Ljava/lang/String;
      14: invokevirtual #47                 // Method java/lang/String.length:()I
      17: if_icmpge     43
      20: aload_0
      21: getfield      #30                 // Field val$delegate:Lorg/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput;
      24: aload_0
      25: getfield      #28                 // Field val$separator:Ljava/lang/String;
      28: iload_2
      29: invokevirtual #51                 // Method java/lang/String.charAt:(I)C
      32: invokeinterface #53,  2           // InterfaceMethod org/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput.write:(C)V
      37: iinc          2, 1
      40: goto          9
      43: aload_0
      44: aload_0
      45: getfield      #26                 // Field val$afterEveryChars:I
      48: putfield      #35                 // Field charsUntilSeparator:I
      51: aload_0
      52: getfield      #30                 // Field val$delegate:Lorg/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput;
      55: iload_1
      56: invokeinterface #53,  2           // InterfaceMethod org/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput.write:(C)V
      61: aload_0
      62: dup
      63: getfield      #35                 // Field charsUntilSeparator:I
      66: iconst_1
      67: isub
      68: putfield      #35                 // Field charsUntilSeparator:I
      71: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field val$delegate:Lorg/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput;
       4: invokeinterface #59,  1           // InterfaceMethod org/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput.flush:()V
       9: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field val$delegate:Lorg/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput;
       4: invokeinterface #62,  1           // InterfaceMethod org/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput.close:()V
       9: return
}
