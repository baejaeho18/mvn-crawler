Compiled from "Finalizer.java"
public class org.sonar.api.internal.google.common.base.internal.Finalizer implements java.lang.Runnable {
  private static final java.util.logging.Logger logger;

  private static final java.lang.String FINALIZABLE_REFERENCE;

  private final java.lang.ref.WeakReference<java.lang.Class<?>> finalizableReferenceClassReference;

  private final java.lang.ref.PhantomReference<java.lang.Object> frqReference;

  private final java.lang.ref.ReferenceQueue<java.lang.Object> queue;

  private static final java.lang.reflect.Field inheritableThreadLocals;

  public static void startFinalizer(java.lang.Class<?>, java.lang.ref.ReferenceQueue<java.lang.Object>, java.lang.ref.PhantomReference<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: ldc           #13                 // String org.sonar.api.internal.google.common.base.FinalizableReference
       6: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          22
      12: new           #42                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #44                 // String Expected com.google.common.base.FinalizableReference.
      18: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: new           #2                  // class org/sonar/api/internal/google/common/base/internal/Finalizer
      25: dup
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokespecial #50                 // Method "<init>":(Ljava/lang/Class;Ljava/lang/ref/ReferenceQueue;Ljava/lang/ref/PhantomReference;)V
      32: astore_3
      33: new           #52                 // class java/lang/Thread
      36: dup
      37: aload_3
      38: invokespecial #55                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      41: astore        4
      43: aload         4
      45: ldc           #2                  // class org/sonar/api/internal/google/common/base/internal/Finalizer
      47: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
      50: invokevirtual #58                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      53: aload         4
      55: iconst_1
      56: invokevirtual #62                 // Method java/lang/Thread.setDaemon:(Z)V
      59: getstatic     #64                 // Field inheritableThreadLocals:Ljava/lang/reflect/Field;
      62: ifnull        74
      65: getstatic     #64                 // Field inheritableThreadLocals:Ljava/lang/reflect/Field;
      68: aload         4
      70: aconst_null
      71: invokevirtual #70                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      74: goto          92
      77: astore        5
      79: getstatic     #72                 // Field logger:Ljava/util/logging/Logger;
      82: getstatic     #78                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      85: ldc           #80                 // String Failed to clear thread local values inherited by reference finalizer thread.
      87: aload         5
      89: invokevirtual #86                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      92: aload         4
      94: invokevirtual #90                 // Method java/lang/Thread.start:()V
      97: return
    Exception table:
       from    to  target type
          59    74    77   Class java/lang/Throwable

  private org.sonar.api.internal.google.common.base.internal.Finalizer(java.lang.Class<?>, java.lang.ref.ReferenceQueue<java.lang.Object>, java.lang.ref.PhantomReference<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #101                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #103                // Field queue:Ljava/lang/ref/ReferenceQueue;
       9: aload_0
      10: new           #105                // class java/lang/ref/WeakReference
      13: dup
      14: aload_1
      15: invokespecial #108                // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      18: putfield      #110                // Field finalizableReferenceClassReference:Ljava/lang/ref/WeakReference;
      21: aload_0
      22: aload_3
      23: putfield      #112                // Field frqReference:Ljava/lang/ref/PhantomReference;
      26: return

  public void run();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #103                // Field queue:Ljava/lang/ref/ReferenceQueue;
       5: invokevirtual #122                // Method java/lang/ref/ReferenceQueue.remove:()Ljava/lang/ref/Reference;
       8: invokespecial #126                // Method cleanUp:(Ljava/lang/ref/Reference;)Z
      11: ifne          17
      14: goto          24
      17: goto          0
      20: astore_1
      21: goto          0
      24: return
    Exception table:
       from    to  target type
           0    14    20   Class java/lang/InterruptedException

  private boolean cleanUp(java.lang.ref.Reference<?>);
    Code:
       0: aload_0
       1: invokespecial #132                // Method getFinalizeReferentMethod:()Ljava/lang/reflect/Method;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: invokevirtual #139                // Method java/lang/ref/Reference.clear:()V
      15: aload_1
      16: aload_0
      17: getfield      #112                // Field frqReference:Ljava/lang/ref/PhantomReference;
      20: if_acmpne     25
      23: iconst_0
      24: ireturn
      25: aload_2
      26: aload_1
      27: iconst_0
      28: anewarray     #4                  // class java/lang/Object
      31: invokevirtual #143                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: goto          51
      38: astore_3
      39: getstatic     #72                 // Field logger:Ljava/util/logging/Logger;
      42: getstatic     #146                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      45: ldc           #148                // String Error cleaning up after reference.
      47: aload_3
      48: invokevirtual #86                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      51: aload_0
      52: getfield      #103                // Field queue:Ljava/lang/ref/ReferenceQueue;
      55: invokevirtual #151                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      58: dup
      59: astore_1
      60: ifnonnull     11
      63: iconst_1
      64: ireturn
    Exception table:
       from    to  target type
          25    35    38   Class java/lang/Throwable

  private java.lang.reflect.Method getFinalizeReferentMethod();
    Code:
       0: aload_0
       1: getfield      #110                // Field finalizableReferenceClassReference:Ljava/lang/ref/WeakReference;
       4: invokevirtual #162                // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #30                 // class java/lang/Class
      10: astore_1
      11: aload_1
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_1
      18: ldc           #164                // String finalizeReferent
      20: iconst_0
      21: anewarray     #30                 // class java/lang/Class
      24: invokevirtual #168                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: areturn
      28: astore_2
      29: new           #170                // class java/lang/AssertionError
      32: dup
      33: aload_2
      34: invokespecial #171                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      37: athrow
    Exception table:
       from    to  target type
          17    27    28   Class java/lang/NoSuchMethodException

  public static java.lang.reflect.Field getInheritableThreadLocalsField();
    Code:
       0: ldc           #52                 // class java/lang/Thread
       2: ldc           #175                // String inheritableThreadLocals
       4: invokevirtual #179                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_0
       8: aload_0
       9: iconst_1
      10: invokevirtual #182                // Method java/lang/reflect/Field.setAccessible:(Z)V
      13: aload_0
      14: areturn
      15: astore_0
      16: getstatic     #72                 // Field logger:Ljava/util/logging/Logger;
      19: getstatic     #78                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      22: ldc           #184                // String Couldn\'t access Thread.inheritableThreadLocals. Reference finalizer threads will inherit thread local values.
      24: invokevirtual #187                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      27: aconst_null
      28: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #2                  // class org/sonar/api/internal/google/common/base/internal/Finalizer
       2: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #192                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #72                 // Field logger:Ljava/util/logging/Logger;
      11: invokestatic  #194                // Method getInheritableThreadLocalsField:()Ljava/lang/reflect/Field;
      14: putstatic     #64                 // Field inheritableThreadLocals:Ljava/lang/reflect/Field;
      17: return
}
