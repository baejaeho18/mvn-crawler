Compiled from "ThreadFactoryBuilder.java"
public final class org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder {
  private java.lang.String nameFormat;

  private java.lang.Boolean daemon;

  private java.lang.Integer priority;

  private java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler;

  private java.util.concurrent.ThreadFactory backingThreadFactory;

  public org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #28                 // Field nameFormat:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #30                 // Field daemon:Ljava/lang/Boolean;
      14: aload_0
      15: aconst_null
      16: putfield      #32                 // Field priority:Ljava/lang/Integer;
      19: aload_0
      20: aconst_null
      21: putfield      #34                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      24: aload_0
      25: aconst_null
      26: putfield      #36                 // Field backingThreadFactory:Ljava/util/concurrent/ThreadFactory;
      29: return

  public org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #4                  // class java/lang/Object
       5: dup
       6: iconst_0
       7: iconst_0
       8: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: aastore
      12: invokestatic  #52                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: pop
      16: aload_0
      17: aload_1
      18: putfield      #28                 // Field nameFormat:Ljava/lang/String;
      21: aload_0
      22: areturn

  public org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #30                 // Field daemon:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ldc           #64                 // String Thread priority (%s) must be >= %s
      12: iconst_2
      13: anewarray     #4                  // class java/lang/Object
      16: dup
      17: iconst_0
      18: iload_1
      19: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: dup
      24: iconst_1
      25: iconst_1
      26: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #70                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      33: iload_1
      34: bipush        10
      36: if_icmpgt     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ldc           #72                 // String Thread priority (%s) must be <= %s
      46: iconst_2
      47: anewarray     #4                  // class java/lang/Object
      50: dup
      51: iconst_0
      52: iload_1
      53: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aastore
      57: dup
      58: iconst_1
      59: bipush        10
      61: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: aastore
      65: invokestatic  #70                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      68: aload_0
      69: iload_1
      70: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: putfield      #32                 // Field priority:Ljava/lang/Integer;
      76: aload_0
      77: areturn

  public org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #9                  // class java/lang/Thread$UncaughtExceptionHandler
       8: putfield      #34                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      11: aload_0
      12: areturn

  public org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #83                 // class java/util/concurrent/ThreadFactory
       8: putfield      #36                 // Field backingThreadFactory:Ljava/util/concurrent/ThreadFactory;
      11: aload_0
      12: areturn

  public java.util.concurrent.ThreadFactory build();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method build:(Lorg/sonar/api/internal/google/common/util/concurrent/ThreadFactoryBuilder;)Ljava/util/concurrent/ThreadFactory;
       4: areturn

  private static java.util.concurrent.ThreadFactory build(org.sonar.api.internal.google.common.util.concurrent.ThreadFactoryBuilder);
    Code:
       0: aload_0
       1: getfield      #28                 // Field nameFormat:Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: getfield      #30                 // Field daemon:Ljava/lang/Boolean;
       9: astore_2
      10: aload_0
      11: getfield      #32                 // Field priority:Ljava/lang/Integer;
      14: astore_3
      15: aload_0
      16: getfield      #34                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      19: astore        4
      21: aload_0
      22: getfield      #36                 // Field backingThreadFactory:Ljava/util/concurrent/ThreadFactory;
      25: ifnull        35
      28: aload_0
      29: getfield      #36                 // Field backingThreadFactory:Ljava/util/concurrent/ThreadFactory;
      32: goto          38
      35: invokestatic  #93                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      38: astore        5
      40: aload_1
      41: ifnull        55
      44: new           #95                 // class java/util/concurrent/atomic/AtomicLong
      47: dup
      48: lconst_0
      49: invokespecial #98                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      52: goto          56
      55: aconst_null
      56: astore        6
      58: new           #7                  // class org/sonar/api/internal/google/common/util/concurrent/ThreadFactoryBuilder$1
      61: dup
      62: aload         5
      64: aload_1
      65: aload         6
      67: aload_2
      68: aload_3
      69: aload         4
      71: invokespecial #101                // Method org/sonar/api/internal/google/common/util/concurrent/ThreadFactoryBuilder$1."<init>":(Ljava/util/concurrent/ThreadFactory;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Thread$UncaughtExceptionHandler;)V
      74: areturn
}
