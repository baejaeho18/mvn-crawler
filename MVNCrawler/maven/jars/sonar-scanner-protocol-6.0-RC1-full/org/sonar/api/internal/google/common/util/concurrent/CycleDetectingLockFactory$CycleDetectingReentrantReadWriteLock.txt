Compiled from "CycleDetectingLockFactory.java"
final class org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock extends java.util.concurrent.locks.ReentrantReadWriteLock implements org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock {
  private final org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock readLock;

  private final org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock writeLock;

  private final org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode lockGraphNode;

  final org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory this$0;

  private org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock(org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory, org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field this$0:Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory;
       5: aload_0
       6: iload_3
       7: invokespecial #43                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":(Z)V
      10: aload_0
      11: new           #9                  // class org/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadLock
      14: dup
      15: aload_1
      16: aload_0
      17: invokespecial #46                 // Method org/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadLock."<init>":(Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory;Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock;)V
      20: putfield      #48                 // Field readLock:Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadLock;
      23: aload_0
      24: new           #14                 // class org/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantWriteLock
      27: dup
      28: aload_1
      29: aload_0
      30: invokespecial #49                 // Method org/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantWriteLock."<init>":(Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory;Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock;)V
      33: putfield      #51                 // Field writeLock:Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantWriteLock;
      36: aload_0
      37: aload_2
      38: invokestatic  #57                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #17                 // class org/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode
      44: putfield      #59                 // Field lockGraphNode:Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;
      47: return

  public java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock();
    Code:
       0: aload_0
       1: getfield      #48                 // Field readLock:Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadLock;
       4: areturn

  public java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock();
    Code:
       0: aload_0
       1: getfield      #51                 // Field writeLock:Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantWriteLock;
       4: areturn

  public org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode();
    Code:
       0: aload_0
       1: getfield      #59                 // Field lockGraphNode:Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;
       4: areturn

  public boolean isAcquiredByCurrentThread();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method isWriteLockedByCurrentThread:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #76                 // Method getReadHoldCount:()I
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public java.util.concurrent.locks.Lock writeLock();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       4: areturn

  public java.util.concurrent.locks.Lock readLock();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: areturn

  org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock(org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory, org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode, boolean, org.sonar.api.internal.google.common.util.concurrent.CycleDetectingLockFactory$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #84                 // Method "<init>":(Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory;Lorg/sonar/api/internal/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;Z)V
       7: return
}
