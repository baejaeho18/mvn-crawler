Compiled from "AbstractScheduledService.java"
class org.sonar.api.internal.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable extends org.sonar.api.internal.google.common.util.concurrent.ForwardingFuture<java.lang.Void> implements java.util.concurrent.Callable<java.lang.Void> {
  private final java.lang.Runnable wrappedRunnable;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private final org.sonar.api.internal.google.common.util.concurrent.AbstractService service;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private java.util.concurrent.Future<java.lang.Void> currentFuture;

  final org.sonar.api.internal.google.common.util.concurrent.AbstractScheduledService$CustomScheduler this$0;

  org.sonar.api.internal.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable(org.sonar.api.internal.google.common.util.concurrent.AbstractScheduledService$CustomScheduler, org.sonar.api.internal.google.common.util.concurrent.AbstractService, java.util.concurrent.ScheduledExecutorService, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field this$0:Lorg/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler;
       5: aload_0
       6: invokespecial #39                 // Method org/sonar/api/internal/google/common/util/concurrent/ForwardingFuture."<init>":()V
       9: aload_0
      10: new           #41                 // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: invokespecial #42                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      17: putfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: aload_0
      21: aload         4
      23: putfield      #46                 // Field wrappedRunnable:Ljava/lang/Runnable;
      26: aload_0
      27: aload_3
      28: putfield      #48                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      31: aload_0
      32: aload_2
      33: putfield      #50                 // Field service:Lorg/sonar/api/internal/google/common/util/concurrent/AbstractService;
      36: return

  public java.lang.Void call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #46                 // Field wrappedRunnable:Ljava/lang/Runnable;
       4: invokeinterface #62,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: aload_0
      10: invokevirtual #65                 // Method reschedule:()V
      13: aconst_null
      14: areturn

  public void reschedule();
    Code:
       0: aload_0
       1: getfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #69                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #71                 // Field currentFuture:Ljava/util/concurrent/Future;
      11: ifnull        26
      14: aload_0
      15: getfield      #71                 // Field currentFuture:Ljava/util/concurrent/Future;
      18: invokeinterface #77,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      23: ifne          56
      26: aload_0
      27: getfield      #36                 // Field this$0:Lorg/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler;
      30: invokevirtual #81                 // Method org/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler.getNextSchedule:()Lorg/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule;
      33: astore_1
      34: aload_0
      35: aload_0
      36: getfield      #48                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      39: aload_0
      40: aload_1
      41: invokestatic  #85                 // Method org/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule.access$700:(Lorg/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule;)J
      44: aload_1
      45: invokestatic  #89                 // Method org/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule.access$800:(Lorg/sonar/api/internal/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule;)Ljava/util/concurrent/TimeUnit;
      48: invokeinterface #95,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      53: putfield      #71                 // Field currentFuture:Ljava/util/concurrent/Future;
      56: aload_0
      57: getfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      60: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      63: goto          95
      66: astore_1
      67: aload_0
      68: getfield      #50                 // Field service:Lorg/sonar/api/internal/google/common/util/concurrent/AbstractService;
      71: aload_1
      72: invokevirtual #104                // Method org/sonar/api/internal/google/common/util/concurrent/AbstractService.notifyFailed:(Ljava/lang/Throwable;)V
      75: aload_0
      76: getfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      79: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      82: goto          95
      85: astore_2
      86: aload_0
      87: getfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      90: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      93: aload_2
      94: athrow
      95: return
    Exception table:
       from    to  target type
           7    56    66   Class java/lang/Throwable
           7    56    85   any
          66    75    85   any
          85    86    85   any

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #69                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #71                 // Field currentFuture:Ljava/util/concurrent/Future;
      11: iload_1
      12: invokeinterface #111,  2          // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: istore_2
      18: aload_0
      19: getfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      22: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      25: iload_2
      26: ireturn
      27: astore_3
      28: aload_0
      29: getfield      #44                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      32: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      35: aload_3
      36: athrow
    Exception table:
       from    to  target type
           7    18    27   any
          27    28    27   any

  protected java.util.concurrent.Future<java.lang.Void> delegate();
    Code:
       0: new           #117                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #119                // String Only cancel is supported by this future
       6: invokespecial #122                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected java.lang.Object delegate();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method delegate:()Ljava/util/concurrent/Future;
       4: areturn

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #127                // Method call:()Ljava/lang/Void;
       4: areturn
}
