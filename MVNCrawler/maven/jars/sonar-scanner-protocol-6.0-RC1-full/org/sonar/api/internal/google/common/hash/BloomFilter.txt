Compiled from "BloomFilter.java"
public final class org.sonar.api.internal.google.common.hash.BloomFilter<T> implements org.sonar.api.internal.google.common.base.Predicate<T>, java.io.Serializable {
  private final org.sonar.api.internal.google.common.hash.BloomFilterStrategies$BitArray bits;

  private final int numHashFunctions;

  private final org.sonar.api.internal.google.common.hash.Funnel<? super T> funnel;

  private final org.sonar.api.internal.google.common.hash.BloomFilter$Strategy strategy;

  private static final org.sonar.api.internal.google.common.hash.BloomFilter$Strategy DEFAULT_STRATEGY;

  private org.sonar.api.internal.google.common.hash.BloomFilter(org.sonar.api.internal.google.common.hash.BloomFilterStrategies$BitArray, int, org.sonar.api.internal.google.common.hash.Funnel<? super T>, org.sonar.api.internal.google.common.hash.BloomFilter$Strategy);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: iload_2
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #43                 // String numHashFunctions (%s) must be > 0
      15: iconst_1
      16: anewarray     #5                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: iload_2
      22: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      29: iload_2
      30: sipush        255
      33: if_icmpgt     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #57                 // String numHashFunctions (%s) must be <= 255
      43: iconst_1
      44: anewarray     #5                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: iload_2
      50: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      57: aload_0
      58: aload_1
      59: invokestatic  #61                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #21                 // class org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray
      65: putfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      68: aload_0
      69: iload_2
      70: putfield      #65                 // Field numHashFunctions:I
      73: aload_0
      74: aload_3
      75: invokestatic  #61                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #41                 // class org/sonar/api/internal/google/common/hash/Funnel
      81: putfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
      84: aload_0
      85: aload         4
      87: invokestatic  #61                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #18                 // class org/sonar/api/internal/google/common/hash/BloomFilter$Strategy
      93: putfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      96: return

  public org.sonar.api.internal.google.common.hash.BloomFilter<T> copy();
    Code:
       0: new           #2                  // class org/sonar/api/internal/google/common/hash/BloomFilter
       3: dup
       4: aload_0
       5: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
       8: invokevirtual #77                 // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray.copy:()Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      11: aload_0
      12: getfield      #65                 // Field numHashFunctions:I
      15: aload_0
      16: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
      19: aload_0
      20: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      23: invokespecial #79                 // Method "<init>":(Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;ILorg/sonar/api/internal/google/common/hash/Funnel;Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;)V
      26: areturn

  public boolean mightContain(T);
    Code:
       0: aload_0
       1: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
       4: aload_1
       5: aload_0
       6: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
       9: aload_0
      10: getfield      #65                 // Field numHashFunctions:I
      13: aload_0
      14: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      17: invokeinterface #84,  5           // InterfaceMethod org/sonar/api/internal/google/common/hash/BloomFilter$Strategy.mightContain:(Ljava/lang/Object;Lorg/sonar/api/internal/google/common/hash/Funnel;ILorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;)Z
      22: ireturn

  public boolean apply(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #91                 // Method mightContain:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean put(T);
    Code:
       0: aload_0
       1: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
       4: aload_1
       5: aload_0
       6: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
       9: aload_0
      10: getfield      #65                 // Field numHashFunctions:I
      13: aload_0
      14: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      17: invokeinterface #95,  5           // InterfaceMethod org/sonar/api/internal/google/common/hash/BloomFilter$Strategy.put:(Ljava/lang/Object;Lorg/sonar/api/internal/google/common/hash/Funnel;ILorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;)Z
      22: ireturn

  public double expectedFpp();
    Code:
       0: aload_0
       1: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
       4: invokevirtual #101                // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray.bitCount:()J
       7: l2d
       8: aload_0
       9: invokevirtual #104                // Method bitSize:()J
      12: l2d
      13: ddiv
      14: aload_0
      15: getfield      #65                 // Field numHashFunctions:I
      18: i2d
      19: invokestatic  #110                // Method java/lang/Math.pow:(DD)D
      22: dreturn

  long bitSize();
    Code:
       0: aload_0
       1: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
       4: invokevirtual #112                // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray.bitSize:()J
       7: lreturn

  public boolean isCompatible(org.sonar.api.internal.google.common.hash.BloomFilter<T>);
    Code:
       0: aload_1
       1: invokestatic  #61                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: if_acmpeq     65
      10: aload_0
      11: getfield      #65                 // Field numHashFunctions:I
      14: aload_1
      15: getfield      #65                 // Field numHashFunctions:I
      18: if_icmpne     65
      21: aload_0
      22: invokevirtual #104                // Method bitSize:()J
      25: aload_1
      26: invokevirtual #104                // Method bitSize:()J
      29: lcmp
      30: ifne          65
      33: aload_0
      34: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      37: aload_1
      38: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      41: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          65
      47: aload_0
      48: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
      51: aload_1
      52: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
      55: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ireturn

  public void putAll(org.sonar.api.internal.google.common.hash.BloomFilter<T>);
    Code:
       0: aload_1
       1: invokestatic  #61                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #122                // String Cannot combine a BloomFilter with itself.
      17: invokestatic  #125                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      20: aload_0
      21: getfield      #65                 // Field numHashFunctions:I
      24: aload_1
      25: getfield      #65                 // Field numHashFunctions:I
      28: if_icmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #127                // String BloomFilters must have the same number of hash functions (%s != %s)
      38: iconst_2
      39: anewarray     #5                  // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: getfield      #65                 // Field numHashFunctions:I
      48: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_1
      55: getfield      #65                 // Field numHashFunctions:I
      58: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      65: aload_0
      66: invokevirtual #104                // Method bitSize:()J
      69: aload_1
      70: invokevirtual #104                // Method bitSize:()J
      73: lcmp
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ldc           #129                // String BloomFilters must have the same size underlying bit arrays (%s != %s)
      84: iconst_2
      85: anewarray     #5                  // class java/lang/Object
      88: dup
      89: iconst_0
      90: aload_0
      91: invokevirtual #104                // Method bitSize:()J
      94: invokestatic  #134                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      97: aastore
      98: dup
      99: iconst_1
     100: aload_1
     101: invokevirtual #104                // Method bitSize:()J
     104: invokestatic  #134                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     107: aastore
     108: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     111: aload_0
     112: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
     115: aload_1
     116: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
     119: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     122: ldc           #136                // String BloomFilters must have equal strategies (%s != %s)
     124: iconst_2
     125: anewarray     #5                  // class java/lang/Object
     128: dup
     129: iconst_0
     130: aload_0
     131: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
     134: aastore
     135: dup
     136: iconst_1
     137: aload_1
     138: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
     141: aastore
     142: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     145: aload_0
     146: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
     149: aload_1
     150: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
     153: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     156: ldc           #138                // String BloomFilters must have equal funnels (%s != %s)
     158: iconst_2
     159: anewarray     #5                  // class java/lang/Object
     162: dup
     163: iconst_0
     164: aload_0
     165: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
     168: aastore
     169: dup
     170: iconst_1
     171: aload_1
     172: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
     175: aastore
     176: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     179: aload_0
     180: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
     183: aload_1
     184: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
     187: invokevirtual #141                // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray.putAll:(Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;)V
     190: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/sonar/api/internal/google/common/hash/BloomFilter
      11: ifeq          78
      14: aload_1
      15: checkcast     #2                  // class org/sonar/api/internal/google/common/hash/BloomFilter
      18: astore_2
      19: aload_0
      20: getfield      #65                 // Field numHashFunctions:I
      23: aload_2
      24: getfield      #65                 // Field numHashFunctions:I
      27: if_icmpne     76
      30: aload_0
      31: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
      34: aload_2
      35: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
      38: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          76
      44: aload_0
      45: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      48: aload_2
      49: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      52: invokevirtual #143                // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray.equals:(Ljava/lang/Object;)Z
      55: ifeq          76
      58: aload_0
      59: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      62: aload_2
      63: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      66: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn
      78: iconst_0
      79: ireturn

  public int hashCode();
    Code:
       0: iconst_4
       1: anewarray     #5                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #65                 // Field numHashFunctions:I
      10: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      27: aastore
      28: dup
      29: iconst_3
      30: aload_0
      31: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      34: aastore
      35: invokestatic  #151                // Method org/sonar/api/internal/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      38: ireturn

  public static <T> org.sonar.api.internal.google.common.hash.BloomFilter<T> create(org.sonar.api.internal.google.common.hash.Funnel<? super T>, int, double);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: getstatic     #155                // Field DEFAULT_STRATEGY:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
       6: invokestatic  #158                // Method create:(Lorg/sonar/api/internal/google/common/hash/Funnel;IDLorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;)Lorg/sonar/api/internal/google/common/hash/BloomFilter;
       9: areturn

  static <T> org.sonar.api.internal.google.common.hash.BloomFilter<T> create(org.sonar.api.internal.google.common.hash.Funnel<? super T>, int, double, org.sonar.api.internal.google.common.hash.BloomFilter$Strategy);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #165                // String Expected insertions (%s) must be >= 0
      16: iconst_1
      17: anewarray     #5                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: iload_1
      23: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      30: dload_2
      31: dconst_0
      32: dcmpl
      33: ifle          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #167                // String False positive probability (%s) must be > 0.0
      43: iconst_1
      44: anewarray     #5                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: dload_2
      50: invokestatic  #172                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      53: aastore
      54: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      57: dload_2
      58: dconst_1
      59: dcmpg
      60: ifge          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ldc           #174                // String False positive probability (%s) must be < 1.0
      70: iconst_1
      71: anewarray     #5                  // class java/lang/Object
      74: dup
      75: iconst_0
      76: dload_2
      77: invokestatic  #172                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      80: aastore
      81: invokestatic  #55                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      84: aload         4
      86: invokestatic  #61                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: iload_1
      91: ifne          96
      94: iconst_1
      95: istore_1
      96: iload_1
      97: i2l
      98: dload_2
      99: invokestatic  #178                // Method optimalNumOfBits:(JD)J
     102: lstore        5
     104: iload_1
     105: i2l
     106: lload         5
     108: invokestatic  #182                // Method optimalNumOfHashFunctions:(JJ)I
     111: istore        7
     113: new           #2                  // class org/sonar/api/internal/google/common/hash/BloomFilter
     116: dup
     117: new           #21                 // class org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray
     120: dup
     121: lload         5
     123: invokespecial #185                // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray."<init>":(J)V
     126: iload         7
     128: aload_0
     129: aload         4
     131: invokespecial #79                 // Method "<init>":(Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;ILorg/sonar/api/internal/google/common/hash/Funnel;Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;)V
     134: areturn
     135: astore        8
     137: new           #163                // class java/lang/IllegalArgumentException
     140: dup
     141: lload         5
     143: lstore        9
     145: new           #187                // class java/lang/StringBuilder
     148: dup
     149: bipush        57
     151: invokespecial #190                // Method java/lang/StringBuilder."<init>":(I)V
     154: ldc           #192                // String Could not create BloomFilter of
     156: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: lload         9
     161: invokevirtual #199                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     164: ldc           #201                // String  bits
     166: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: aload         8
     174: invokespecial #208                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     177: athrow
    Exception table:
       from    to  target type
         113   134   135   Class java/lang/IllegalArgumentException

  public static <T> org.sonar.api.internal.google.common.hash.BloomFilter<T> create(org.sonar.api.internal.google.common.hash.Funnel<? super T>, int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc2_w        #214                // double 0.03d
       5: invokestatic  #217                // Method create:(Lorg/sonar/api/internal/google/common/hash/Funnel;ID)Lorg/sonar/api/internal/google/common/hash/BloomFilter;
       8: areturn

  static int optimalNumOfHashFunctions(long, long);
    Code:
       0: iconst_1
       1: lload_2
       2: l2d
       3: lload_0
       4: l2d
       5: ddiv
       6: ldc2_w        #218                // double 2.0d
       9: invokestatic  #223                // Method java/lang/Math.log:(D)D
      12: dmul
      13: invokestatic  #227                // Method java/lang/Math.round:(D)J
      16: l2i
      17: invokestatic  #231                // Method java/lang/Math.max:(II)I
      20: ireturn

  static long optimalNumOfBits(long, double);
    Code:
       0: dload_2
       1: dconst_0
       2: dcmpl
       3: ifne          10
       6: ldc2_w        #234                // double 4.9E-324d
       9: dstore_2
      10: lload_0
      11: lneg
      12: l2d
      13: dload_2
      14: invokestatic  #223                // Method java/lang/Math.log:(D)D
      17: dmul
      18: ldc2_w        #218                // double 2.0d
      21: invokestatic  #223                // Method java/lang/Math.log:(D)D
      24: ldc2_w        #218                // double 2.0d
      27: invokestatic  #223                // Method java/lang/Math.log:(D)D
      30: dmul
      31: ddiv
      32: d2l
      33: lreturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #15                 // class org/sonar/api/internal/google/common/hash/BloomFilter$SerialForm
       3: dup
       4: aload_0
       5: invokespecial #240                // Method org/sonar/api/internal/google/common/hash/BloomFilter$SerialForm."<init>":(Lorg/sonar/api/internal/google/common/hash/BloomFilter;)V
       8: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: new           #246                // class java/io/DataOutputStream
       3: dup
       4: aload_1
       5: invokespecial #248                // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
       8: astore_2
       9: aload_2
      10: aload_0
      11: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
      14: invokeinterface #251,  1          // InterfaceMethod org/sonar/api/internal/google/common/hash/BloomFilter$Strategy.ordinal:()I
      19: i2l
      20: invokestatic  #257                // Method org/sonar/api/internal/google/common/primitives/SignedBytes.checkedCast:(J)B
      23: invokevirtual #260                // Method java/io/DataOutputStream.writeByte:(I)V
      26: aload_2
      27: aload_0
      28: getfield      #65                 // Field numHashFunctions:I
      31: i2l
      32: invokestatic  #263                // Method org/sonar/api/internal/google/common/primitives/UnsignedBytes.checkedCast:(J)B
      35: invokevirtual #260                // Method java/io/DataOutputStream.writeByte:(I)V
      38: aload_2
      39: aload_0
      40: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      43: getfield      #267                // Field org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray.data:[J
      46: arraylength
      47: invokevirtual #270                // Method java/io/DataOutputStream.writeInt:(I)V
      50: aload_0
      51: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
      54: getfield      #267                // Field org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray.data:[J
      57: astore_3
      58: aload_3
      59: arraylength
      60: istore        4
      62: iconst_0
      63: istore        5
      65: iload         5
      67: iload         4
      69: if_icmpge     90
      72: aload_3
      73: iload         5
      75: laload
      76: lstore        6
      78: aload_2
      79: lload         6
      81: invokevirtual #276                // Method java/io/DataOutputStream.writeLong:(J)V
      84: iinc          5, 1
      87: goto          65
      90: return

  public static <T> org.sonar.api.internal.google.common.hash.BloomFilter<T> readFrom(java.io.InputStream, org.sonar.api.internal.google.common.hash.Funnel<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #290                // String InputStream
       4: invokestatic  #293                // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: ldc_w         #295                // String Funnel
      12: invokestatic  #293                // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: iconst_m1
      17: istore_2
      18: iconst_m1
      19: istore_3
      20: iconst_m1
      21: istore        4
      23: new           #297                // class java/io/DataInputStream
      26: dup
      27: aload_0
      28: invokespecial #300                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      31: astore        5
      33: aload         5
      35: invokevirtual #304                // Method java/io/DataInputStream.readByte:()B
      38: istore_2
      39: aload         5
      41: invokevirtual #304                // Method java/io/DataInputStream.readByte:()B
      44: invokestatic  #308                // Method org/sonar/api/internal/google/common/primitives/UnsignedBytes.toInt:(B)I
      47: istore_3
      48: aload         5
      50: invokevirtual #311                // Method java/io/DataInputStream.readInt:()I
      53: istore        4
      55: invokestatic  #315                // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies.values:()[Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies;
      58: iload_2
      59: aaload
      60: astore        6
      62: iload         4
      64: newarray       long
      66: astore        7
      68: iconst_0
      69: istore        8
      71: iload         8
      73: aload         7
      75: arraylength
      76: if_icmpge     95
      79: aload         7
      81: iload         8
      83: aload         5
      85: invokevirtual #320                // Method java/io/DataInputStream.readLong:()J
      88: lastore
      89: iinc          8, 1
      92: goto          71
      95: new           #2                  // class org/sonar/api/internal/google/common/hash/BloomFilter
      98: dup
      99: new           #21                 // class org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray
     102: dup
     103: aload         7
     105: invokespecial #323                // Method org/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray."<init>":([J)V
     108: iload_3
     109: aload_1
     110: aload         6
     112: invokespecial #79                 // Method "<init>":(Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;ILorg/sonar/api/internal/google/common/hash/Funnel;Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;)V
     115: areturn
     116: astore        5
     118: new           #244                // class java/io/IOException
     121: dup
     122: ldc_w         #325                // String Unable to deserialize BloomFilter from InputStream. strategyOrdinal:
     125: invokestatic  #330                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     128: invokestatic  #330                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     131: astore        7
     133: iload_2
     134: istore        8
     136: iload_3
     137: istore        9
     139: iload         4
     141: istore        10
     143: new           #187                // class java/lang/StringBuilder
     146: dup
     147: bipush        65
     149: aload         7
     151: invokevirtual #333                // Method java/lang/String.length:()I
     154: iadd
     155: invokespecial #190                // Method java/lang/StringBuilder."<init>":(I)V
     158: aload         7
     160: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: iload         8
     165: invokevirtual #336                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     168: ldc_w         #338                // String  numHashFunctions:
     171: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: iload         9
     176: invokevirtual #336                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     179: ldc_w         #340                // String  dataLength:
     182: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: iload         10
     187: invokevirtual #336                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     190: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     193: invokespecial #343                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     196: astore        6
     198: aload         6
     200: aload         5
     202: invokevirtual #347                // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     205: pop
     206: aload         6
     208: athrow
    Exception table:
       from    to  target type
          23   115   116   Class java/lang/RuntimeException

  static org.sonar.api.internal.google.common.hash.BloomFilterStrategies$BitArray access$000(org.sonar.api.internal.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #63                 // Field bits:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;
       4: areturn

  static int access$100(org.sonar.api.internal.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #65                 // Field numHashFunctions:I
       4: ireturn

  static org.sonar.api.internal.google.common.hash.Funnel access$200(org.sonar.api.internal.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #67                 // Field funnel:Lorg/sonar/api/internal/google/common/hash/Funnel;
       4: areturn

  static org.sonar.api.internal.google.common.hash.BloomFilter$Strategy access$300(org.sonar.api.internal.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #69                 // Field strategy:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
       4: areturn

  org.sonar.api.internal.google.common.hash.BloomFilter(org.sonar.api.internal.google.common.hash.BloomFilterStrategies$BitArray, int, org.sonar.api.internal.google.common.hash.Funnel, org.sonar.api.internal.google.common.hash.BloomFilter$Strategy, org.sonar.api.internal.google.common.hash.BloomFilter$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #79                 // Method "<init>":(Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies$BitArray;ILorg/sonar/api/internal/google/common/hash/Funnel;Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;)V
       9: return

  static {};
    Code:
       0: getstatic     #378                // Field org/sonar/api/internal/google/common/hash/BloomFilterStrategies.MURMUR128_MITZ_64:Lorg/sonar/api/internal/google/common/hash/BloomFilterStrategies;
       3: putstatic     #155                // Field DEFAULT_STRATEGY:Lorg/sonar/api/internal/google/common/hash/BloomFilter$Strategy;
       6: return
}
