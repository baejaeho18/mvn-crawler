Compiled from "Ordering.java"
class org.sonar.api.internal.google.common.collect.Ordering$ArbitraryOrdering extends org.sonar.api.internal.google.common.collect.Ordering<java.lang.Object> {
  private java.util.Map<java.lang.Object, java.lang.Integer> uids;

  org.sonar.api.internal.google.common.collect.Ordering$ArbitraryOrdering();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/sonar/api/internal/google/common/collect/Ordering."<init>":()V
       4: aload_0
       5: new           #19                 // class org/sonar/api/internal/google/common/collect/MapMaker
       8: dup
       9: invokespecial #20                 // Method org/sonar/api/internal/google/common/collect/MapMaker."<init>":()V
      12: invokestatic  #26                 // Method org/sonar/api/internal/google/common/collect/Platform.tryWeakKeys:(Lorg/sonar/api/internal/google/common/collect/MapMaker;)Lorg/sonar/api/internal/google/common/collect/MapMaker;
      15: new           #10                 // class org/sonar/api/internal/google/common/collect/Ordering$ArbitraryOrdering$1
      18: dup
      19: aload_0
      20: invokespecial #29                 // Method org/sonar/api/internal/google/common/collect/Ordering$ArbitraryOrdering$1."<init>":(Lorg/sonar/api/internal/google/common/collect/Ordering$ArbitraryOrdering;)V
      23: invokevirtual #33                 // Method org/sonar/api/internal/google/common/collect/MapMaker.makeComputingMap:(Lorg/sonar/api/internal/google/common/base/Function;)Ljava/util/concurrent/ConcurrentMap;
      26: putfield      #35                 // Field uids:Ljava/util/Map;
      29: return

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_m1
      12: ireturn
      13: aload_2
      14: ifnonnull     19
      17: iconst_1
      18: ireturn
      19: aload_0
      20: aload_1
      21: invokevirtual #43                 // Method identityHashCode:(Ljava/lang/Object;)I
      24: istore_3
      25: aload_0
      26: aload_2
      27: invokevirtual #43                 // Method identityHashCode:(Ljava/lang/Object;)I
      30: istore        4
      32: iload_3
      33: iload         4
      35: if_icmpeq     50
      38: iload_3
      39: iload         4
      41: if_icmpge     48
      44: iconst_m1
      45: goto          49
      48: iconst_1
      49: ireturn
      50: aload_0
      51: getfield      #35                 // Field uids:Ljava/util/Map;
      54: aload_1
      55: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #51                 // class java/lang/Integer
      63: aload_0
      64: getfield      #35                 // Field uids:Ljava/util/Map;
      67: aload_2
      68: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #51                 // class java/lang/Integer
      76: invokevirtual #55                 // Method java/lang/Integer.compareTo:(Ljava/lang/Integer;)I
      79: istore        5
      81: iload         5
      83: ifne          94
      86: new           #57                 // class java/lang/AssertionError
      89: dup
      90: invokespecial #58                 // Method java/lang/AssertionError."<init>":()V
      93: athrow
      94: iload         5
      96: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #69                 // String Ordering.arbitrary()
       2: areturn

  int identityHashCode(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #72                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: ireturn
}
