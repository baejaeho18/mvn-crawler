Compiled from "NullInputStream.java"
public class org.sonar.api.internal.apachecommons.io.input.NullInputStream extends java.io.InputStream {
  private final long size;

  private long position;

  private long mark;

  private long readlimit;

  private boolean eof;

  private final boolean throwEofException;

  private final boolean markSupported;

  public org.sonar.api.internal.apachecommons.io.input.NullInputStream(long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_1
       3: iconst_0
       4: invokespecial #19                 // Method "<init>":(JZZ)V
       7: return

  public org.sonar.api.internal.apachecommons.io.input.NullInputStream(long, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: ldc2_w        #25                 // long -1l
       8: putfield      #28                 // Field mark:J
      11: aload_0
      12: lload_1
      13: putfield      #30                 // Field size:J
      16: aload_0
      17: iload_3
      18: putfield      #32                 // Field markSupported:Z
      21: aload_0
      22: iload         4
      24: putfield      #34                 // Field throwEofException:Z
      27: return

  public long getPosition();
    Code:
       0: aload_0
       1: getfield      #38                 // Field position:J
       4: lreturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #30                 // Field size:J
       4: lreturn

  public int available();
    Code:
       0: aload_0
       1: getfield      #30                 // Field size:J
       4: aload_0
       5: getfield      #38                 // Field position:J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifgt          18
      16: iconst_0
      17: ireturn
      18: lload_1
      19: ldc2_w        #42                 // long 2147483647l
      22: lcmp
      23: ifle          29
      26: ldc           #44                 // int 2147483647
      28: ireturn
      29: lload_1
      30: l2i
      31: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #50                 // Field eof:Z
       5: aload_0
       6: lconst_0
       7: putfield      #38                 // Field position:J
      10: aload_0
      11: ldc2_w        #25                 // long -1l
      14: putfield      #28                 // Field mark:J
      17: return

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: getfield      #32                 // Field markSupported:Z
       4: ifne          17
       7: new           #53                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #55                 // String Mark not supported
      13: invokespecial #58                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_0
      19: getfield      #38                 // Field position:J
      22: putfield      #28                 // Field mark:J
      25: aload_0
      26: iload_1
      27: i2l
      28: putfield      #60                 // Field readlimit:J
      31: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #32                 // Field markSupported:Z
       4: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field eof:Z
       4: ifeq          17
       7: new           #48                 // class java/io/IOException
      10: dup
      11: ldc           #65                 // String Read after end of file
      13: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #38                 // Field position:J
      21: aload_0
      22: getfield      #30                 // Field size:J
      25: lcmp
      26: ifne          34
      29: aload_0
      30: invokespecial #69                 // Method doEndOfFile:()I
      33: ireturn
      34: aload_0
      35: dup
      36: getfield      #38                 // Field position:J
      39: lconst_1
      40: ladd
      41: putfield      #38                 // Field position:J
      44: aload_0
      45: invokevirtual #72                 // Method processByte:()I
      48: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #76                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field eof:Z
       4: ifeq          17
       7: new           #48                 // class java/io/IOException
      10: dup
      11: ldc           #65                 // String Read after end of file
      13: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #38                 // Field position:J
      21: aload_0
      22: getfield      #30                 // Field size:J
      25: lcmp
      26: ifne          34
      29: aload_0
      30: invokespecial #69                 // Method doEndOfFile:()I
      33: ireturn
      34: aload_0
      35: dup
      36: getfield      #38                 // Field position:J
      39: iload_3
      40: i2l
      41: ladd
      42: putfield      #38                 // Field position:J
      45: iload_3
      46: istore        4
      48: aload_0
      49: getfield      #38                 // Field position:J
      52: aload_0
      53: getfield      #30                 // Field size:J
      56: lcmp
      57: ifle          82
      60: iload_3
      61: aload_0
      62: getfield      #38                 // Field position:J
      65: aload_0
      66: getfield      #30                 // Field size:J
      69: lsub
      70: l2i
      71: isub
      72: istore        4
      74: aload_0
      75: aload_0
      76: getfield      #30                 // Field size:J
      79: putfield      #38                 // Field position:J
      82: aload_0
      83: aload_1
      84: iload_2
      85: iload         4
      87: invokevirtual #82                 // Method processBytes:([BII)V
      90: iload         4
      92: ireturn

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field markSupported:Z
       4: ifne          17
       7: new           #53                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #55                 // String Mark not supported
      13: invokespecial #58                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #28                 // Field mark:J
      21: lconst_0
      22: lcmp
      23: ifge          36
      26: new           #48                 // class java/io/IOException
      29: dup
      30: ldc           #88                 // String No position has been marked
      32: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #38                 // Field position:J
      40: aload_0
      41: getfield      #28                 // Field mark:J
      44: aload_0
      45: getfield      #60                 // Field readlimit:J
      48: ladd
      49: lcmp
      50: ifle          100
      53: new           #48                 // class java/io/IOException
      56: dup
      57: new           #90                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #93                 // String Marked position [
      66: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #28                 // Field mark:J
      73: invokevirtual #100                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      76: ldc           #102                // String ] is no longer valid - passed the read limit [
      78: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #60                 // Field readlimit:J
      85: invokevirtual #100                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      88: ldc           #104                // String ]
      90: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_0
     101: aload_0
     102: getfield      #28                 // Field mark:J
     105: putfield      #38                 // Field position:J
     108: aload_0
     109: iconst_0
     110: putfield      #50                 // Field eof:Z
     113: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field eof:Z
       4: ifeq          17
       7: new           #48                 // class java/io/IOException
      10: dup
      11: ldc           #112                // String Skip after end of file
      13: invokespecial #66                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #38                 // Field position:J
      21: aload_0
      22: getfield      #30                 // Field size:J
      25: lcmp
      26: ifne          35
      29: aload_0
      30: invokespecial #69                 // Method doEndOfFile:()I
      33: i2l
      34: lreturn
      35: aload_0
      36: dup
      37: getfield      #38                 // Field position:J
      40: lload_1
      41: ladd
      42: putfield      #38                 // Field position:J
      45: lload_1
      46: lstore_3
      47: aload_0
      48: getfield      #38                 // Field position:J
      51: aload_0
      52: getfield      #30                 // Field size:J
      55: lcmp
      56: ifle          79
      59: lload_1
      60: aload_0
      61: getfield      #38                 // Field position:J
      64: aload_0
      65: getfield      #30                 // Field size:J
      68: lsub
      69: lsub
      70: lstore_3
      71: aload_0
      72: aload_0
      73: getfield      #30                 // Field size:J
      76: putfield      #38                 // Field position:J
      79: lload_3
      80: lreturn

  protected int processByte();
    Code:
       0: iconst_0
       1: ireturn

  protected void processBytes(byte[], int, int);
    Code:
       0: return

  private int doEndOfFile() throws java.io.EOFException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #50                 // Field eof:Z
       5: aload_0
       6: getfield      #34                 // Field throwEofException:Z
       9: ifeq          20
      12: new           #115                // class java/io/EOFException
      15: dup
      16: invokespecial #116                // Method java/io/EOFException."<init>":()V
      19: athrow
      20: iconst_m1
      21: ireturn
}
