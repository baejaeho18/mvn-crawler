Compiled from "BaseEncoding.java"
final class org.sonar.api.internal.google.common.io.BaseEncoding$StandardBaseEncoding extends org.sonar.api.internal.google.common.io.BaseEncoding {
  private final org.sonar.api.internal.google.common.io.BaseEncoding$Alphabet alphabet;

  private final java.lang.Character paddingChar;

  private transient org.sonar.api.internal.google.common.io.BaseEncoding upperCase;

  private transient org.sonar.api.internal.google.common.io.BaseEncoding lowerCase;

  org.sonar.api.internal.google.common.io.BaseEncoding$StandardBaseEncoding(java.lang.String, java.lang.String, java.lang.Character);
    Code:
       0: aload_0
       1: new           #12                 // class org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet
       4: dup
       5: aload_1
       6: aload_2
       7: invokevirtual #46                 // Method java/lang/String.toCharArray:()[C
      10: invokespecial #49                 // Method org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet."<init>":(Ljava/lang/String;[C)V
      13: aload_3
      14: invokespecial #52                 // Method "<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;Ljava/lang/Character;)V
      17: return

  org.sonar.api.internal.google.common.io.BaseEncoding$StandardBaseEncoding(org.sonar.api.internal.google.common.io.BaseEncoding$Alphabet, java.lang.Character);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method org/sonar/api/internal/google/common/io/BaseEncoding."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #66                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #12                 // class org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet
      12: putfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      15: aload_2
      16: ifnull        30
      19: aload_1
      20: aload_2
      21: invokevirtual #74                 // Method java/lang/Character.charValue:()C
      24: invokevirtual #78                 // Method org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.matches:(C)Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ldc           #80                 // String Padding character %s was already in alphabet
      37: iconst_1
      38: anewarray     #82                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: aload_2
      44: aastore
      45: invokestatic  #86                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      48: aload_0
      49: aload_2
      50: putfield      #88                 // Field paddingChar:Ljava/lang/Character;
      53: return

  org.sonar.api.internal.google.common.base.CharMatcher padding();
    Code:
       0: aload_0
       1: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
       4: ifnonnull     13
       7: getstatic     #96                 // Field org/sonar/api/internal/google/common/base/CharMatcher.NONE:Lorg/sonar/api/internal/google/common/base/CharMatcher;
      10: goto          23
      13: aload_0
      14: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
      17: invokevirtual #74                 // Method java/lang/Character.charValue:()C
      20: invokestatic  #100                // Method org/sonar/api/internal/google/common/base/CharMatcher.is:(C)Lorg/sonar/api/internal/google/common/base/CharMatcher;
      23: areturn

  int maxEncodedSize(int);
    Code:
       0: aload_0
       1: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
       4: getfield      #106                // Field org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.charsPerChunk:I
       7: iload_1
       8: aload_0
       9: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      12: getfield      #109                // Field org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.bytesPerChunk:I
      15: getstatic     #115                // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
      18: invokestatic  #121                // Method org/sonar/api/internal/google/common/math/IntMath.divide:(IILjava/math/RoundingMode;)I
      21: imul
      22: ireturn

  org.sonar.api.internal.google.common.io.GwtWorkarounds$ByteOutput encodingStream(org.sonar.api.internal.google.common.io.GwtWorkarounds$CharOutput);
    Code:
       0: aload_1
       1: invokestatic  #66                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #10                 // class org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #127                // Method org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding$1."<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding;Lorg/sonar/api/internal/google/common/io/GwtWorkarounds$CharOutput;)V
      14: areturn

  int maxDecodedSize(int);
    Code:
       0: aload_0
       1: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
       4: getfield      #133                // Field org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.bitsPerChar:I
       7: i2l
       8: iload_1
       9: i2l
      10: lmul
      11: ldc2_w        #134                // long 7l
      14: ladd
      15: ldc2_w        #136                // long 8l
      18: ldiv
      19: l2i
      20: ireturn

  org.sonar.api.internal.google.common.io.GwtWorkarounds$ByteInput decodingStream(org.sonar.api.internal.google.common.io.GwtWorkarounds$CharInput);
    Code:
       0: aload_1
       1: invokestatic  #66                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #8                  // class org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding$2
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #143                // Method org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding$2."<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding;Lorg/sonar/api/internal/google/common/io/GwtWorkarounds$CharInput;)V
      14: areturn

  public org.sonar.api.internal.google.common.io.BaseEncoding omitPadding();
    Code:
       0: aload_0
       1: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
       4: ifnonnull     11
       7: aload_0
       8: goto          23
      11: new           #2                  // class org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding
      14: dup
      15: aload_0
      16: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      19: aconst_null
      20: invokespecial #52                 // Method "<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;Ljava/lang/Character;)V
      23: areturn

  public org.sonar.api.internal.google.common.io.BaseEncoding withPadChar(char);
    Code:
       0: bipush        8
       2: aload_0
       3: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
       6: getfield      #133                // Field org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.bitsPerChar:I
       9: irem
      10: ifeq          31
      13: aload_0
      14: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
      17: ifnull        33
      20: aload_0
      21: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
      24: invokevirtual #74                 // Method java/lang/Character.charValue:()C
      27: iload_1
      28: if_icmpne     33
      31: aload_0
      32: areturn
      33: new           #2                  // class org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding
      36: dup
      37: aload_0
      38: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      41: iload_1
      42: invokestatic  #153                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      45: invokespecial #52                 // Method "<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;Ljava/lang/Character;)V
      48: areturn

  public org.sonar.api.internal.google.common.io.BaseEncoding withSeparator(java.lang.String, int);
    Code:
       0: aload_1
       1: invokestatic  #66                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #159                // Method padding:()Lorg/sonar/api/internal/google/common/base/CharMatcher;
       9: aload_0
      10: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      13: invokevirtual #163                // Method org/sonar/api/internal/google/common/base/CharMatcher.or:(Lorg/sonar/api/internal/google/common/base/CharMatcher;)Lorg/sonar/api/internal/google/common/base/CharMatcher;
      16: aload_1
      17: invokevirtual #167                // Method org/sonar/api/internal/google/common/base/CharMatcher.matchesNoneOf:(Ljava/lang/CharSequence;)Z
      20: ldc           #169                // String Separator cannot contain alphabet or padding characters
      22: invokestatic  #172                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      25: new           #29                 // class org/sonar/api/internal/google/common/io/BaseEncoding$SeparatedBaseEncoding
      28: dup
      29: aload_0
      30: aload_1
      31: iload_2
      32: invokespecial #175                // Method org/sonar/api/internal/google/common/io/BaseEncoding$SeparatedBaseEncoding."<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding;Ljava/lang/String;I)V
      35: areturn

  public org.sonar.api.internal.google.common.io.BaseEncoding upperCase();
    Code:
       0: aload_0
       1: getfield      #179                // Field upperCase:Lorg/sonar/api/internal/google/common/io/BaseEncoding;
       4: astore_1
       5: aload_1
       6: ifnonnull     47
       9: aload_0
      10: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      13: invokevirtual #182                // Method org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.upperCase:()Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      16: astore_2
      17: aload_0
      18: aload_2
      19: aload_0
      20: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      23: if_acmpne     30
      26: aload_0
      27: goto          42
      30: new           #2                  // class org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding
      33: dup
      34: aload_2
      35: aload_0
      36: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
      39: invokespecial #52                 // Method "<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;Ljava/lang/Character;)V
      42: dup_x1
      43: putfield      #179                // Field upperCase:Lorg/sonar/api/internal/google/common/io/BaseEncoding;
      46: astore_1
      47: aload_1
      48: areturn

  public org.sonar.api.internal.google.common.io.BaseEncoding lowerCase();
    Code:
       0: aload_0
       1: getfield      #186                // Field lowerCase:Lorg/sonar/api/internal/google/common/io/BaseEncoding;
       4: astore_1
       5: aload_1
       6: ifnonnull     47
       9: aload_0
      10: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      13: invokevirtual #188                // Method org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.lowerCase:()Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      16: astore_2
      17: aload_0
      18: aload_2
      19: aload_0
      20: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      23: if_acmpne     30
      26: aload_0
      27: goto          42
      30: new           #2                  // class org/sonar/api/internal/google/common/io/BaseEncoding$StandardBaseEncoding
      33: dup
      34: aload_2
      35: aload_0
      36: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
      39: invokespecial #52                 // Method "<init>":(Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;Ljava/lang/Character;)V
      42: dup_x1
      43: putfield      #186                // Field lowerCase:Lorg/sonar/api/internal/google/common/io/BaseEncoding;
      46: astore_1
      47: aload_1
      48: areturn

  public java.lang.String toString();
    Code:
       0: new           #193                // class java/lang/StringBuilder
       3: dup
       4: ldc           #195                // String BaseEncoding.
       6: invokespecial #198                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      15: invokevirtual #200                // Method org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.toString:()Ljava/lang/String;
      18: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: bipush        8
      24: aload_0
      25: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
      28: getfield      #133                // Field org/sonar/api/internal/google/common/io/BaseEncoding$Alphabet.bitsPerChar:I
      31: irem
      32: ifeq          71
      35: aload_0
      36: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
      39: ifnonnull     52
      42: aload_1
      43: ldc           #206                // String .omitPadding()
      45: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: goto          71
      52: aload_1
      53: ldc           #208                // String .withPadChar(
      55: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
      62: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: bipush        41
      67: invokevirtual #214                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      70: pop
      71: aload_1
      72: invokevirtual #215                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  static org.sonar.api.internal.google.common.io.BaseEncoding$Alphabet access$000(org.sonar.api.internal.google.common.io.BaseEncoding$StandardBaseEncoding);
    Code:
       0: aload_0
       1: getfield      #68                 // Field alphabet:Lorg/sonar/api/internal/google/common/io/BaseEncoding$Alphabet;
       4: areturn

  static java.lang.Character access$100(org.sonar.api.internal.google.common.io.BaseEncoding$StandardBaseEncoding);
    Code:
       0: aload_0
       1: getfield      #88                 // Field paddingChar:Ljava/lang/Character;
       4: areturn
}
