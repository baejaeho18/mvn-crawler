Compiled from "LockableFileWriter.java"
public class org.sonar.api.internal.apachecommons.io.output.LockableFileWriter extends java.io.Writer {
  private static final java.lang.String LCK;

  private final java.io.Writer out;

  private final java.io.File lockFile;

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aconst_null
       4: invokespecial #20                 // Method "<init>":(Ljava/lang/String;ZLjava/lang/String;)V
       7: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #20                 // Method "<init>":(Ljava/lang/String;ZLjava/lang/String;)V
       7: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.lang.String, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #28                 // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #30                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: iload_2
      10: aload_3
      11: invokespecial #33                 // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
      14: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aconst_null
       4: invokespecial #33                 // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
       7: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #33                 // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
       7: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.io.File, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: iload_2
       6: aload_3
       7: invokespecial #46                 // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
      10: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aconst_null
       5: invokespecial #46                 // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
       8: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aconst_null
       5: invokespecial #53                 // Method "<init>":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V
       8: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/io/Writer."<init>":()V
       4: aload_1
       5: invokevirtual #60                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
       8: astore_1
       9: aload_1
      10: invokevirtual #63                 // Method java/io/File.getParentFile:()Ljava/io/File;
      13: ifnull        23
      16: aload_1
      17: invokevirtual #63                 // Method java/io/File.getParentFile:()Ljava/io/File;
      20: invokestatic  #68                 // Method org/sonar/api/internal/apachecommons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
      23: aload_1
      24: invokevirtual #74                 // Method java/io/File.isDirectory:()Z
      27: ifeq          40
      30: new           #17                 // class java/io/IOException
      33: dup
      34: ldc           #76                 // String File specified is a directory
      36: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload         4
      42: ifnonnull     52
      45: ldc           #79                 // String java.io.tmpdir
      47: invokestatic  #85                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      50: astore        4
      52: new           #28                 // class java/io/File
      55: dup
      56: aload         4
      58: invokespecial #30                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      61: astore        5
      63: aload         5
      65: invokestatic  #68                 // Method org/sonar/api/internal/apachecommons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
      68: aload_0
      69: aload         5
      71: invokespecial #88                 // Method testLockDir:(Ljava/io/File;)V
      74: aload_0
      75: new           #28                 // class java/io/File
      78: dup
      79: aload         5
      81: new           #90                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      88: aload_1
      89: invokevirtual #95                 // Method java/io/File.getName:()Ljava/lang/String;
      92: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #9                  // String .lck
      97: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #103                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     106: putfield      #105                // Field lockFile:Ljava/io/File;
     109: aload_0
     110: invokespecial #108                // Method createLock:()V
     113: aload_0
     114: aload_0
     115: aload_1
     116: aload_2
     117: iload_3
     118: invokespecial #112                // Method initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;
     121: putfield      #114                // Field out:Ljava/io/Writer;
     124: return

  public org.sonar.api.internal.apachecommons.io.output.LockableFileWriter(java.io.File, java.lang.String, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #121                // Method org/sonar/api/internal/apachecommons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: aload         4
       9: invokespecial #46                 // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
      12: return

  private void testLockDir(java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #124                // Method java/io/File.exists:()Z
       4: ifne          37
       7: new           #17                 // class java/io/IOException
      10: dup
      11: new           #90                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #126                // String Could not find lockDir:
      20: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #129                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      27: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_1
      38: invokevirtual #132                // Method java/io/File.canWrite:()Z
      41: ifne          74
      44: new           #17                 // class java/io/IOException
      47: dup
      48: new           #90                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #134                // String Could not write to lockDir:
      57: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #129                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      64: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: return

  private void createLock() throws java.io.IOException;
    Code:
       0: ldc           #2                  // class org/sonar/api/internal/apachecommons/io/output/LockableFileWriter
       2: dup
       3: astore_1
       4: monitorenter
       5: aload_0
       6: getfield      #105                // Field lockFile:Ljava/io/File;
       9: invokevirtual #137                // Method java/io/File.createNewFile:()Z
      12: ifne          53
      15: new           #17                 // class java/io/IOException
      18: dup
      19: new           #90                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #139                // String Can\'t write file, lock
      28: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #105                // Field lockFile:Ljava/io/File;
      35: invokevirtual #129                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      38: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #141                // String  exists
      43: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: getfield      #105                // Field lockFile:Ljava/io/File;
      57: invokevirtual #146                // Method java/io/File.deleteOnExit:()V
      60: aload_1
      61: monitorexit
      62: goto          70
      65: astore_2
      66: aload_1
      67: monitorexit
      68: aload_2
      69: athrow
      70: return
    Exception table:
       from    to  target type
           5    62    65   any
          65    68    65   any

  private java.io.Writer initWriter(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #124                // Method java/io/File.exists:()Z
       4: istore        4
       6: aconst_null
       7: astore        5
       9: aconst_null
      10: astore        6
      12: new           #152                // class java/io/FileOutputStream
      15: dup
      16: aload_1
      17: invokevirtual #129                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      20: iload_3
      21: invokespecial #154                // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
      24: astore        5
      26: new           #156                // class java/io/OutputStreamWriter
      29: dup
      30: aload         5
      32: aload_2
      33: invokestatic  #159                // Method org/sonar/api/internal/apachecommons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
      36: invokespecial #162                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      39: astore        6
      41: goto          110
      44: astore        7
      46: aload         6
      48: invokestatic  #170                // Method org/sonar/api/internal/apachecommons/io/IOUtils.closeQuietly:(Ljava/io/Writer;)V
      51: aload         5
      53: invokestatic  #173                // Method org/sonar/api/internal/apachecommons/io/IOUtils.closeQuietly:(Ljava/io/OutputStream;)V
      56: aload_0
      57: getfield      #105                // Field lockFile:Ljava/io/File;
      60: invokestatic  #177                // Method org/sonar/api/internal/apachecommons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
      63: pop
      64: iload         4
      66: ifne          74
      69: aload_1
      70: invokestatic  #177                // Method org/sonar/api/internal/apachecommons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
      73: pop
      74: aload         7
      76: athrow
      77: astore        7
      79: aload         6
      81: invokestatic  #170                // Method org/sonar/api/internal/apachecommons/io/IOUtils.closeQuietly:(Ljava/io/Writer;)V
      84: aload         5
      86: invokestatic  #173                // Method org/sonar/api/internal/apachecommons/io/IOUtils.closeQuietly:(Ljava/io/OutputStream;)V
      89: aload_0
      90: getfield      #105                // Field lockFile:Ljava/io/File;
      93: invokestatic  #177                // Method org/sonar/api/internal/apachecommons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
      96: pop
      97: iload         4
      99: ifne          107
     102: aload_1
     103: invokestatic  #177                // Method org/sonar/api/internal/apachecommons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
     106: pop
     107: aload         7
     109: athrow
     110: aload         6
     112: areturn
    Exception table:
       from    to  target type
          12    41    44   Class java/io/IOException
          12    41    77   Class java/lang/RuntimeException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field out:Ljava/io/Writer;
       4: invokevirtual #187                // Method java/io/Writer.close:()V
       7: aload_0
       8: getfield      #105                // Field lockFile:Ljava/io/File;
      11: invokevirtual #190                // Method java/io/File.delete:()Z
      14: pop
      15: goto          29
      18: astore_1
      19: aload_0
      20: getfield      #105                // Field lockFile:Ljava/io/File;
      23: invokevirtual #190                // Method java/io/File.delete:()Z
      26: pop
      27: aload_1
      28: athrow
      29: return
    Exception table:
       from    to  target type
           0     7    18   any
          18    19    18   any

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field out:Ljava/io/Writer;
       4: iload_1
       5: invokevirtual #194                // Method java/io/Writer.write:(I)V
       8: return

  public void write(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field out:Ljava/io/Writer;
       4: aload_1
       5: invokevirtual #199                // Method java/io/Writer.write:([C)V
       8: return

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field out:Ljava/io/Writer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #204                // Method java/io/Writer.write:([CII)V
      10: return

  public void write(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field out:Ljava/io/Writer;
       4: aload_1
       5: invokevirtual #208                // Method java/io/Writer.write:(Ljava/lang/String;)V
       8: return

  public void write(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field out:Ljava/io/Writer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #212                // Method java/io/Writer.write:(Ljava/lang/String;II)V
      10: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field out:Ljava/io/Writer;
       4: invokevirtual #215                // Method java/io/Writer.flush:()V
       7: return
}
