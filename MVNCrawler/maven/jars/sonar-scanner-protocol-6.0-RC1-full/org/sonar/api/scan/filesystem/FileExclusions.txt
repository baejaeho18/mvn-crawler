Compiled from "FileExclusions.java"
public class org.sonar.api.scan.filesystem.FileExclusions {
  private final org.sonar.api.config.Settings settings;

  public org.sonar.api.scan.filesystem.FileExclusions(org.sonar.api.config.Settings);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #15                 // Field settings:Lorg/sonar/api/config/Settings;
       9: return

  public java.lang.String[] sourceInclusions();
    Code:
       0: aload_0
       1: ldc           #21                 // String sonar.inclusions
       3: invokespecial #25                 // Method inclusions:(Ljava/lang/String;)[Ljava/lang/String;
       6: areturn

  public java.lang.String[] testInclusions();
    Code:
       0: aload_0
       1: ldc           #28                 // String sonar.test.inclusions
       3: invokespecial #25                 // Method inclusions:(Ljava/lang/String;)[Ljava/lang/String;
       6: areturn

  private java.lang.String[] inclusions(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field settings:Lorg/sonar/api/config/Settings;
       4: aload_1
       5: invokevirtual #33                 // Method org/sonar/api/config/Settings.getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
       8: invokestatic  #37                 // Method sanitize:([Ljava/lang/String;)[Ljava/lang/String;
      11: astore_2
      12: new           #39                 // class java/util/ArrayList
      15: dup
      16: invokespecial #40                 // Method java/util/ArrayList."<init>":()V
      19: astore_3
      20: aload_2
      21: astore        4
      23: aload         4
      25: arraylength
      26: istore        5
      28: iconst_0
      29: istore        6
      31: iload         6
      33: iload         5
      35: if_icmpge     80
      38: aload         4
      40: iload         6
      42: aaload
      43: astore        7
      45: ldc           #48                 // String **/*
      47: aload         7
      49: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifne          74
      55: ldc           #54                 // String file:**/*
      57: aload         7
      59: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifne          74
      65: aload_3
      66: aload         7
      68: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: iinc          6, 1
      77: goto          31
      80: aload_3
      81: aload_3
      82: invokeinterface #61,  1           // InterfaceMethod java/util/List.size:()I
      87: anewarray     #42                 // class java/lang/String
      90: invokeinterface #65,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      95: checkcast     #44                 // class "[Ljava/lang/String;"
      98: areturn

  public java.lang.String[] sourceExclusions();
    Code:
       0: aload_0
       1: ldc           #75                 // String sonar.global.exclusions
       3: ldc           #77                 // String sonar.exclusions
       5: invokespecial #81                 // Method exclusions:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
       8: areturn

  public java.lang.String[] testExclusions();
    Code:
       0: aload_0
       1: ldc           #84                 // String sonar.global.test.exclusions
       3: ldc           #86                 // String sonar.test.exclusions
       5: invokespecial #81                 // Method exclusions:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
       8: areturn

  private java.lang.String[] exclusions(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field settings:Lorg/sonar/api/config/Settings;
       4: aload_1
       5: invokevirtual #33                 // Method org/sonar/api/config/Settings.getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
       8: astore_3
       9: aload_0
      10: getfield      #15                 // Field settings:Lorg/sonar/api/config/Settings;
      13: aload_2
      14: invokevirtual #33                 // Method org/sonar/api/config/Settings.getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      17: astore        4
      19: aload_3
      20: aload         4
      22: ldc           #42                 // class java/lang/String
      24: invokestatic  #92                 // Method org/sonar/api/internal/google/common/collect/ObjectArrays.concat:([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Class;)[Ljava/lang/Object;
      27: checkcast     #44                 // class "[Ljava/lang/String;"
      30: invokestatic  #37                 // Method sanitize:([Ljava/lang/String;)[Ljava/lang/String;
      33: areturn

  private static java.lang.String[] sanitize(java.lang.String[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: arraylength
       5: if_icmpge     23
       8: aload_0
       9: iload_1
      10: aload_0
      11: iload_1
      12: aaload
      13: invokestatic  #101                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.trim:(Ljava/lang/String;)Ljava/lang/String;
      16: aastore
      17: iinc          1, 1
      20: goto          2
      23: aload_0
      24: areturn
}
