Compiled from "RailsHandler.java"
public class org.sonar.api.server.ws.RailsHandler implements org.sonar.api.server.ws.RequestHandler {
  public static final org.sonar.api.server.ws.RequestHandler INSTANCE;

  private org.sonar.api.server.ws.RailsHandler();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: return

  public void handle(org.sonar.api.server.ws.Request, org.sonar.api.server.ws.Response);
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #29                 // String This web service is implemented in rails
       6: invokespecial #32                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public static org.sonar.api.server.ws.WebService$NewParam addFormatParam(org.sonar.api.server.ws.WebService$NewAction);
    Code:
       0: aload_0
       1: ldc           #40                 // String format
       3: invokevirtual #44                 // Method org/sonar/api/server/ws/WebService$NewAction.createParam:(Ljava/lang/String;)Lorg/sonar/api/server/ws/WebService$NewParam;
       6: ldc           #46                 // String Response format can be set through:<ul><li>Parameter format: xml | json</li><li>Or the \'Accept\' property in the HTTP header:<ul><li>Accept:text/xml</li><li>Accept:application/json</li></ul></li></ul>If nothing is set, json is used
       8: invokevirtual #49                 // Method org/sonar/api/server/ws/WebService$NewParam.setDescription:(Ljava/lang/String;)Lorg/sonar/api/server/ws/WebService$NewParam;
      11: iconst_2
      12: anewarray     #4                  // class java/lang/Object
      15: dup
      16: iconst_0
      17: ldc           #51                 // String json
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #53                 // String xml
      24: aastore
      25: invokevirtual #57                 // Method org/sonar/api/server/ws/WebService$NewParam.setPossibleValues:([Ljava/lang/Object;)Lorg/sonar/api/server/ws/WebService$NewParam;
      28: areturn

  public static org.sonar.api.server.ws.WebService$NewParam addJsonOnlyFormatParam(org.sonar.api.server.ws.WebService$NewAction);
    Code:
       0: aload_0
       1: ldc           #40                 // String format
       3: invokevirtual #44                 // Method org/sonar/api/server/ws/WebService$NewAction.createParam:(Ljava/lang/String;)Lorg/sonar/api/server/ws/WebService$NewParam;
       6: ldc           #62                 // String Only json response format is available
       8: invokevirtual #49                 // Method org/sonar/api/server/ws/WebService$NewParam.setDescription:(Ljava/lang/String;)Lorg/sonar/api/server/ws/WebService$NewParam;
      11: iconst_1
      12: anewarray     #4                  // class java/lang/Object
      15: dup
      16: iconst_0
      17: ldc           #51                 // String json
      19: aastore
      20: invokevirtual #57                 // Method org/sonar/api/server/ws/WebService$NewParam.setPossibleValues:([Ljava/lang/Object;)Lorg/sonar/api/server/ws/WebService$NewParam;
      23: areturn

  static {};
    Code:
       0: new           #2                  // class org/sonar/api/server/ws/RailsHandler
       3: dup
       4: invokespecial #64                 // Method "<init>":()V
       7: putstatic     #66                 // Field INSTANCE:Lorg/sonar/api/server/ws/RequestHandler;
      10: return
}
