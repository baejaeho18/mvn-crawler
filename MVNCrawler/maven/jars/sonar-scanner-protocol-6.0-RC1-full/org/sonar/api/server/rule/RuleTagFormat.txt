Compiled from "RuleTagFormat.java"
public class org.sonar.api.server.rule.RuleTagFormat {
  private static final java.lang.String VALID_CHARACTERS_REGEX;

  private org.sonar.api.server.rule.RuleTagFormat();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isValid(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
       4: ifeq          20
       7: aload_0
       8: ldc           #9                  // String ^[a-z0-9\\+#\\-\\.]+$
      10: invokevirtual #27                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static void validate(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method isValid:(Ljava/lang/String;)Z
       4: ifne          28
       7: new           #34                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #36                 // String Tag \'%s\' is invalid. Rule tags accept only the characters: a-z, 0-9, \'+\', \'-\', \'#\', \'.\'
      13: iconst_1
      14: anewarray     #4                  // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: aastore
      21: invokestatic  #40                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: invokespecial #42                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return
}
