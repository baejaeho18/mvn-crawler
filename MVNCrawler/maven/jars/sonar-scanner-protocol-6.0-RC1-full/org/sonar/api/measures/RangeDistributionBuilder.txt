Compiled from "RangeDistributionBuilder.java"
public class org.sonar.api.measures.RangeDistributionBuilder implements org.sonar.api.measures.MeasureBuilder {
  private final org.sonar.api.measures.Metric<java.lang.String> metric;

  private final org.sonar.api.internal.google.common.collect.SortedMultiset countBag;

  private boolean isEmpty;

  private java.lang.Number[] bottomLimits;

  private org.sonar.api.measures.RangeDistributionBuilder$RangeTransformer rangeValueTransformer;

  private boolean isValid;

  public org.sonar.api.measures.RangeDistributionBuilder(org.sonar.api.measures.Metric<java.lang.String>, java.lang.Number[]);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #49                 // Method org/sonar/api/internal/google/common/collect/TreeMultiset.create:()Lorg/sonar/api/internal/google/common/collect/TreeMultiset;
       8: putfield      #51                 // Field countBag:Lorg/sonar/api/internal/google/common/collect/SortedMultiset;
      11: aload_0
      12: iconst_1
      13: putfield      #53                 // Field isEmpty:Z
      16: aload_0
      17: iconst_1
      18: putfield      #55                 // Field isValid:Z
      21: aload_1
      22: ldc           #57                 // String Metric must not be null
      24: invokestatic  #63                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: aload_1
      29: invokevirtual #69                 // Method org/sonar/api/measures/Metric.isDataType:()Z
      32: ldc           #71                 // String Metric %s must have data type
      34: iconst_1
      35: anewarray     #4                  // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_1
      41: invokevirtual #75                 // Method org/sonar/api/measures/Metric.key:()Ljava/lang/String;
      44: aastore
      45: invokestatic  #81                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      48: aload_0
      49: aload_1
      50: putfield      #83                 // Field metric:Lorg/sonar/api/measures/Metric;
      53: aload_0
      54: aload_2
      55: invokespecial #87                 // Method init:([Ljava/lang/Number;)V
      58: return

  public org.sonar.api.measures.RangeDistributionBuilder(org.sonar.api.measures.Metric<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #49                 // Method org/sonar/api/internal/google/common/collect/TreeMultiset.create:()Lorg/sonar/api/internal/google/common/collect/TreeMultiset;
       8: putfield      #51                 // Field countBag:Lorg/sonar/api/internal/google/common/collect/SortedMultiset;
      11: aload_0
      12: iconst_1
      13: putfield      #53                 // Field isEmpty:Z
      16: aload_0
      17: iconst_1
      18: putfield      #55                 // Field isValid:Z
      21: aload_0
      22: aload_1
      23: putfield      #83                 // Field metric:Lorg/sonar/api/measures/Metric;
      26: return

  private void init(java.lang.Number[]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: anewarray     #92                 // class java/lang/Number
       6: putfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
       9: aload_1
      10: iconst_0
      11: aload_0
      12: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      15: iconst_0
      16: aload_0
      17: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      20: arraylength
      21: invokestatic  #100                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_0
      25: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      28: invokestatic  #106                // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      31: aload_0
      32: invokespecial #109                // Method changeDoublesToInts:()V
      35: aload_0
      36: invokespecial #112                // Method doClear:()V
      39: aload_0
      40: new           #12                 // class org/sonar/api/measures/RangeDistributionBuilder$RangeTransformer
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #115                // Method org/sonar/api/measures/RangeDistributionBuilder$RangeTransformer."<init>":(Lorg/sonar/api/measures/RangeDistributionBuilder;Lorg/sonar/api/measures/RangeDistributionBuilder$1;)V
      49: putfield      #117                // Field rangeValueTransformer:Lorg/sonar/api/measures/RangeDistributionBuilder$RangeTransformer;
      52: return

  private void changeDoublesToInts();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     50
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: invokevirtual #122                // Method java/lang/Number.intValue:()I
      30: i2d
      31: aload         5
      33: invokevirtual #126                // Method java/lang/Number.doubleValue:()D
      36: invokestatic  #132                // Method org/sonar/api/internal/apachecommons/lang/NumberUtils.compare:(DD)I
      39: ifeq          44
      42: iconst_0
      43: istore_1
      44: iinc          4, 1
      47: goto          13
      50: iload_1
      51: ifeq          89
      54: iconst_0
      55: istore_2
      56: iload_2
      57: aload_0
      58: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      61: arraylength
      62: if_icmpge     89
      65: aload_0
      66: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      69: iload_2
      70: aload_0
      71: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      74: iload_2
      75: aaload
      76: invokevirtual #122                // Method java/lang/Number.intValue:()I
      79: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: aastore
      83: iinc          2, 1
      86: goto          56
      89: return

  public java.lang.Number[] getBottomLimits();
    Code:
       0: aload_0
       1: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
       4: areturn

  public org.sonar.api.measures.RangeDistributionBuilder add(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #150                // Method add:(Ljava/lang/Number;I)Lorg/sonar/api/measures/RangeDistributionBuilder;
       6: areturn

  public org.sonar.api.measures.RangeDistributionBuilder add(java.lang.Number, int);
    Code:
       0: aload_1
       1: ifnull        41
       4: aload_1
       5: aload_0
       6: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
       9: iconst_0
      10: aaload
      11: invokestatic  #156                // Method greaterOrEqualsThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      14: ifeq          41
      17: aload_0
      18: getfield      #51                 // Field countBag:Lorg/sonar/api/internal/google/common/collect/SortedMultiset;
      21: aload_0
      22: getfield      #117                // Field rangeValueTransformer:Lorg/sonar/api/measures/RangeDistributionBuilder$RangeTransformer;
      25: aload_1
      26: invokevirtual #160                // Method org/sonar/api/measures/RangeDistributionBuilder$RangeTransformer.apply:(Ljava/lang/Number;)Ljava/lang/Number;
      29: iload_2
      30: invokeinterface #165,  3          // InterfaceMethod org/sonar/api/internal/google/common/collect/SortedMultiset.add:(Ljava/lang/Object;I)I
      35: pop
      36: aload_0
      37: iconst_0
      38: putfield      #53                 // Field isEmpty:Z
      41: aload_0
      42: areturn

  private org.sonar.api.measures.RangeDistributionBuilder addLimitCount(java.lang.Number, int);
    Code:
       0: aload_0
       1: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
       4: astore_3
       5: aload_3
       6: arraylength
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload         4
      16: if_icmpge     72
      19: aload_3
      20: iload         5
      22: aaload
      23: astore        6
      25: aload         6
      27: invokevirtual #126                // Method java/lang/Number.doubleValue:()D
      30: aload_1
      31: invokevirtual #126                // Method java/lang/Number.doubleValue:()D
      34: invokestatic  #132                // Method org/sonar/api/internal/apachecommons/lang/NumberUtils.compare:(DD)I
      37: ifne          66
      40: aload_0
      41: getfield      #51                 // Field countBag:Lorg/sonar/api/internal/google/common/collect/SortedMultiset;
      44: aload_0
      45: getfield      #117                // Field rangeValueTransformer:Lorg/sonar/api/measures/RangeDistributionBuilder$RangeTransformer;
      48: aload_1
      49: invokevirtual #160                // Method org/sonar/api/measures/RangeDistributionBuilder$RangeTransformer.apply:(Ljava/lang/Number;)Ljava/lang/Number;
      52: iload_2
      53: invokeinterface #165,  3          // InterfaceMethod org/sonar/api/internal/google/common/collect/SortedMultiset.add:(Ljava/lang/Object;I)I
      58: pop
      59: aload_0
      60: iconst_0
      61: putfield      #53                 // Field isEmpty:Z
      64: aload_0
      65: areturn
      66: iinc          5, 1
      69: goto          12
      72: aload_0
      73: iconst_0
      74: putfield      #55                 // Field isValid:Z
      77: aload_0
      78: areturn

  public org.sonar.api.measures.RangeDistributionBuilder add(org.sonar.api.measures.Measure<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        158
       4: aload_1
       5: invokevirtual #174                // Method org/sonar/api/measures/Measure.getData:()Ljava/lang/String;
       8: ifnull        158
      11: aload_1
      12: invokevirtual #174                // Method org/sonar/api/measures/Measure.getData:()Ljava/lang/String;
      15: invokestatic  #178                // Method org/sonar/api/utils/KeyValueFormat.newDoubleConverter:()Lorg/sonar/api/utils/KeyValueFormat$DoubleConverter;
      18: invokestatic  #178                // Method org/sonar/api/utils/KeyValueFormat.newDoubleConverter:()Lorg/sonar/api/utils/KeyValueFormat$DoubleConverter;
      21: invokestatic  #182                // Method org/sonar/api/utils/KeyValueFormat.parse:(Ljava/lang/String;Lorg/sonar/api/utils/KeyValueFormat$Converter;Lorg/sonar/api/utils/KeyValueFormat$Converter;)Ljava/util/Map;
      24: astore_2
      25: aload_2
      26: invokeinterface #186,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      31: aload_2
      32: invokeinterface #189,  1          // InterfaceMethod java/util/Map.size:()I
      37: anewarray     #92                 // class java/lang/Number
      40: invokeinterface #195,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      45: checkcast     #118                // class "[Ljava/lang/Number;"
      48: astore_3
      49: aload_0
      50: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      53: ifnonnull     64
      56: aload_0
      57: aload_3
      58: invokespecial #87                 // Method init:([Ljava/lang/Number;)V
      61: goto          85
      64: aload_0
      65: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      68: aload_2
      69: invokeinterface #186,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      74: invokestatic  #199                // Method areSameLimits:([Ljava/lang/Number;Ljava/util/Set;)Z
      77: ifne          85
      80: aload_0
      81: iconst_0
      82: putfield      #55                 // Field isValid:Z
      85: aload_0
      86: getfield      #55                 // Field isValid:Z
      89: ifeq          158
      92: aload_2
      93: invokeinterface #202,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      98: invokeinterface #206,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     103: astore        4
     105: aload         4
     107: invokeinterface #211,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          158
     115: aload         4
     117: invokeinterface #215,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #15                 // class java/util/Map$Entry
     125: astore        5
     127: aload_0
     128: aload         5
     130: invokeinterface #218,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     135: checkcast     #92                 // class java/lang/Number
     138: aload         5
     140: invokeinterface #221,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     145: checkcast     #223                // class java/lang/Double
     148: invokevirtual #224                // Method java/lang/Double.intValue:()I
     151: invokespecial #226                // Method addLimitCount:(Ljava/lang/Number;I)Lorg/sonar/api/measures/RangeDistributionBuilder;
     154: pop
     155: goto          105
     158: aload_0
     159: areturn

  private static boolean areSameLimits(java.lang.Number[], java.util.Set<java.lang.Double>);
    Code:
       0: aload_1
       1: invokeinterface #237,  1          // InterfaceMethod java/util/Set.size:()I
       6: aload_0
       7: arraylength
       8: if_icmpne     58
      11: aload_0
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     56
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_1
      32: aload         5
      34: invokevirtual #126                // Method java/lang/Number.doubleValue:()D
      37: invokestatic  #240                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      40: invokeinterface #244,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: iinc          4, 1
      53: goto          19
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public org.sonar.api.measures.RangeDistributionBuilder clear();
    Code:
       0: aload_0
       1: invokespecial #112                // Method doClear:()V
       4: aload_0
       5: areturn

  private void doClear();
    Code:
       0: aload_0
       1: getfield      #51                 // Field countBag:Lorg/sonar/api/internal/google/common/collect/SortedMultiset;
       4: invokeinterface #251,  1          // InterfaceMethod org/sonar/api/internal/google/common/collect/SortedMultiset.clear:()V
       9: aload_0
      10: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      13: ifnull        28
      16: aload_0
      17: getfield      #51                 // Field countBag:Lorg/sonar/api/internal/google/common/collect/SortedMultiset;
      20: aload_0
      21: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
      24: invokestatic  #257                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: iconst_1
      30: putfield      #53                 // Field isEmpty:Z
      33: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #53                 // Field isEmpty:Z
       4: ireturn

  public org.sonar.api.measures.Measure<java.lang.String> build();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #262                // Method build:(Z)Lorg/sonar/api/measures/Measure;
       5: areturn

  public org.sonar.api.measures.Measure<java.lang.String> build(boolean);
    Code:
       0: aload_0
       1: getfield      #55                 // Field isValid:Z
       4: ifeq          37
       7: aload_0
       8: getfield      #53                 // Field isEmpty:Z
      11: ifeq          18
      14: iload_1
      15: ifeq          37
      18: new           #171                // class org/sonar/api/measures/Measure
      21: dup
      22: aload_0
      23: getfield      #83                 // Field metric:Lorg/sonar/api/measures/Metric;
      26: aload_0
      27: getfield      #51                 // Field countBag:Lorg/sonar/api/internal/google/common/collect/SortedMultiset;
      30: invokestatic  #268                // Method org/sonar/api/measures/MultisetDistributionFormat.format:(Lorg/sonar/api/internal/google/common/collect/Multiset;)Ljava/lang/String;
      33: invokespecial #271                // Method org/sonar/api/measures/Measure."<init>":(Lorg/sonar/api/measures/Metric;Ljava/lang/String;)V
      36: areturn
      37: aconst_null
      38: areturn

  private static boolean greaterOrEqualsThan(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: invokevirtual #126                // Method java/lang/Number.doubleValue:()D
       4: aload_1
       5: invokevirtual #126                // Method java/lang/Number.doubleValue:()D
       8: invokestatic  #132                // Method org/sonar/api/internal/apachecommons/lang/NumberUtils.compare:(DD)I
      11: iflt          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  static java.lang.Number[] access$100(org.sonar.api.measures.RangeDistributionBuilder);
    Code:
       0: aload_0
       1: getfield      #94                 // Field bottomLimits:[Ljava/lang/Number;
       4: areturn

  static boolean access$200(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #156                // Method greaterOrEqualsThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
       5: ireturn
}
