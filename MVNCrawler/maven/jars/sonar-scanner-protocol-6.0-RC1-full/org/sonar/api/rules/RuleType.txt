Compiled from "RuleType.java"
public final class org.sonar.api.rules.RuleType extends java.lang.Enum<org.sonar.api.rules.RuleType> {
  public static final org.sonar.api.rules.RuleType CODE_SMELL;

  public static final org.sonar.api.rules.RuleType BUG;

  public static final org.sonar.api.rules.RuleType VULNERABILITY;

  private static final java.util.Set<java.lang.String> ALL_NAMES;

  private final int dbConstant;

  private static final org.sonar.api.rules.RuleType[] $VALUES;

  public static org.sonar.api.rules.RuleType[] values();
    Code:
       0: getstatic     #24                 // Field $VALUES:[Lorg/sonar/api/rules/RuleType;
       3: invokevirtual #29                 // Method "[Lorg/sonar/api/rules/RuleType;".clone:()Ljava/lang/Object;
       6: checkcast     #25                 // class "[Lorg/sonar/api/rules/RuleType;"
       9: areturn

  public static org.sonar.api.rules.RuleType valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class org/sonar/api/rules/RuleType
       2: aload_0
       3: invokestatic  #34                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class org/sonar/api/rules/RuleType
       9: areturn

  private org.sonar.api.rules.RuleType(int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #41                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #43                 // Field dbConstant:I
      11: return

  public int getDbConstant();
    Code:
       0: aload_0
       1: getfield      #43                 // Field dbConstant:I
       4: ireturn

  public static java.util.Set<java.lang.String> names();
    Code:
       0: getstatic     #50                 // Field ALL_NAMES:Ljava/util/Set;
       3: areturn

  public static org.sonar.api.rules.RuleType valueOf(int);
    Code:
       0: invokestatic  #53                 // Method values:()[Lorg/sonar/api/rules/RuleType;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     37
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: invokevirtual #55                 // Method getDbConstant:()I
      24: iload_0
      25: if_icmpne     31
      28: aload         4
      30: areturn
      31: iinc          3, 1
      34: goto          9
      37: new           #57                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #59                 // String Unsupported type value : %d
      43: iconst_1
      44: anewarray     #61                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: iload_0
      50: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: invokespecial #75                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow

  static {};
    Code:
       0: new           #2                  // class org/sonar/api/rules/RuleType
       3: dup
       4: ldc           #79                 // String CODE_SMELL
       6: iconst_0
       7: iconst_1
       8: invokespecial #81                 // Method "<init>":(Ljava/lang/String;II)V
      11: putstatic     #83                 // Field CODE_SMELL:Lorg/sonar/api/rules/RuleType;
      14: new           #2                  // class org/sonar/api/rules/RuleType
      17: dup
      18: ldc           #84                 // String BUG
      20: iconst_1
      21: iconst_2
      22: invokespecial #81                 // Method "<init>":(Ljava/lang/String;II)V
      25: putstatic     #86                 // Field BUG:Lorg/sonar/api/rules/RuleType;
      28: new           #2                  // class org/sonar/api/rules/RuleType
      31: dup
      32: ldc           #87                 // String VULNERABILITY
      34: iconst_2
      35: iconst_3
      36: invokespecial #81                 // Method "<init>":(Ljava/lang/String;II)V
      39: putstatic     #89                 // Field VULNERABILITY:Lorg/sonar/api/rules/RuleType;
      42: iconst_3
      43: anewarray     #2                  // class org/sonar/api/rules/RuleType
      46: dup
      47: iconst_0
      48: getstatic     #83                 // Field CODE_SMELL:Lorg/sonar/api/rules/RuleType;
      51: aastore
      52: dup
      53: iconst_1
      54: getstatic     #86                 // Field BUG:Lorg/sonar/api/rules/RuleType;
      57: aastore
      58: dup
      59: iconst_2
      60: getstatic     #89                 // Field VULNERABILITY:Lorg/sonar/api/rules/RuleType;
      63: aastore
      64: putstatic     #24                 // Field $VALUES:[Lorg/sonar/api/rules/RuleType;
      67: invokestatic  #53                 // Method values:()[Lorg/sonar/api/rules/RuleType;
      70: invokestatic  #95                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      73: invokestatic  #101                // Method org/sonar/api/internal/google/common/collect/FluentIterable.from:(Ljava/lang/Iterable;)Lorg/sonar/api/internal/google/common/collect/FluentIterable;
      76: getstatic     #105                // Field org/sonar/api/rules/RuleType$ToName.INSTANCE:Lorg/sonar/api/rules/RuleType$ToName;
      79: invokevirtual #109                // Method org/sonar/api/internal/google/common/collect/FluentIterable.transform:(Lorg/sonar/api/internal/google/common/base/Function;)Lorg/sonar/api/internal/google/common/collect/FluentIterable;
      82: invokevirtual #113                // Method org/sonar/api/internal/google/common/collect/FluentIterable.toSet:()Lorg/sonar/api/internal/google/common/collect/ImmutableSet;
      85: putstatic     #50                 // Field ALL_NAMES:Ljava/util/Set;
      88: return
}
