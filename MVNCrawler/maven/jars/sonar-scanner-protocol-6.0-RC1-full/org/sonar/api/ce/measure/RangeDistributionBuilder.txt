Compiled from "RangeDistributionBuilder.java"
public class org.sonar.api.ce.measure.RangeDistributionBuilder {
  private org.sonar.api.internal.google.common.collect.Multiset<java.lang.Number> distributionSet;

  private boolean isEmpty;

  private java.lang.Number[] bottomLimits;

  private boolean isValid;

  public org.sonar.api.ce.measure.RangeDistributionBuilder();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #35                 // Field isEmpty:Z
       9: aload_0
      10: iconst_1
      11: putfield      #37                 // Field isValid:Z
      14: return

  public org.sonar.api.ce.measure.RangeDistributionBuilder(java.lang.Number[]);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #35                 // Field isEmpty:Z
       9: aload_0
      10: iconst_1
      11: putfield      #37                 // Field isValid:Z
      14: aload_0
      15: aload_1
      16: invokespecial #43                 // Method init:([Ljava/lang/Number;)V
      19: return

  public org.sonar.api.ce.measure.RangeDistributionBuilder add(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #48                 // Method add:(Ljava/lang/Number;I)Lorg/sonar/api/ce/measure/RangeDistributionBuilder;
       6: areturn

  public org.sonar.api.ce.measure.RangeDistributionBuilder add(java.lang.Number, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
       5: iconst_0
       6: aaload
       7: invokestatic  #56                 // Method greaterOrEqualsThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      10: ifeq          24
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokespecial #60                 // Method addValue:(Ljava/lang/Number;I)V
      19: aload_0
      20: iconst_0
      21: putfield      #35                 // Field isEmpty:Z
      24: aload_0
      25: areturn

  public org.sonar.api.ce.measure.RangeDistributionBuilder add(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #67                 // Method org/sonar/api/utils/KeyValueFormat.newDoubleConverter:()Lorg/sonar/api/utils/KeyValueFormat$DoubleConverter;
       4: invokestatic  #67                 // Method org/sonar/api/utils/KeyValueFormat.newDoubleConverter:()Lorg/sonar/api/utils/KeyValueFormat$DoubleConverter;
       7: invokestatic  #71                 // Method org/sonar/api/utils/KeyValueFormat.parse:(Ljava/lang/String;Lorg/sonar/api/utils/KeyValueFormat$Converter;Lorg/sonar/api/utils/KeyValueFormat$Converter;)Ljava/util/Map;
      10: astore_2
      11: aload_2
      12: invokeinterface #75,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: aload_2
      18: invokeinterface #79,  1           // InterfaceMethod java/util/Map.size:()I
      23: anewarray     #81                 // class java/lang/Number
      26: invokeinterface #87,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      31: checkcast     #88                 // class "[Ljava/lang/Number;"
      34: astore_3
      35: aload_0
      36: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      39: ifnonnull     50
      42: aload_0
      43: aload_3
      44: invokespecial #43                 // Method init:([Ljava/lang/Number;)V
      47: goto          71
      50: aload_0
      51: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      54: aload_2
      55: invokeinterface #75,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      60: invokestatic  #92                 // Method areSameLimits:([Ljava/lang/Number;Ljava/util/Set;)Z
      63: ifne          71
      66: aload_0
      67: iconst_0
      68: putfield      #37                 // Field isValid:Z
      71: aload_0
      72: getfield      #37                 // Field isValid:Z
      75: ifeq          144
      78: aload_2
      79: invokeinterface #95,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      84: invokeinterface #99,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      89: astore        4
      91: aload         4
      93: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          144
     101: aload         4
     103: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #10                 // class java/util/Map$Entry
     111: astore        5
     113: aload_0
     114: aload         5
     116: invokeinterface #112,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     121: checkcast     #81                 // class java/lang/Number
     124: aload         5
     126: invokeinterface #115,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     131: checkcast     #117                // class java/lang/Double
     134: invokevirtual #120                // Method java/lang/Double.intValue:()I
     137: invokespecial #123                // Method addLimitCount:(Ljava/lang/Number;I)Lorg/sonar/api/ce/measure/RangeDistributionBuilder;
     140: pop
     141: goto          91
     144: aload_0
     145: areturn

  private void init(java.lang.Number[]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: anewarray     #81                 // class java/lang/Number
       6: putfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
       9: aload_1
      10: iconst_0
      11: aload_0
      12: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      15: iconst_0
      16: aload_0
      17: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      20: arraylength
      21: invokestatic  #138                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_0
      25: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      28: invokestatic  #144                // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      31: aload_0
      32: invokespecial #147                // Method changeDoublesToInts:()V
      35: aload_0
      36: getstatic     #151                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
      39: invokestatic  #157                // Method org/sonar/api/internal/google/common/collect/TreeMultiset.create:(Ljava/util/Comparator;)Lorg/sonar/api/internal/google/common/collect/TreeMultiset;
      42: putfield      #159                // Field distributionSet:Lorg/sonar/api/internal/google/common/collect/Multiset;
      45: return

  private void changeDoublesToInts();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     58
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: getstatic     #151                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
      28: aload         5
      30: invokevirtual #160                // Method java/lang/Number.intValue:()I
      33: invokestatic  #166                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aload         5
      38: invokevirtual #170                // Method java/lang/Number.doubleValue:()D
      41: invokestatic  #173                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      44: invokevirtual #177                // Method org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.compare:(Ljava/lang/Number;Ljava/lang/Number;)I
      47: ifeq          52
      50: iconst_0
      51: istore_1
      52: iinc          4, 1
      55: goto          13
      58: iload_1
      59: ifeq          97
      62: iconst_0
      63: istore_2
      64: iload_2
      65: aload_0
      66: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      69: arraylength
      70: if_icmpge     97
      73: aload_0
      74: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      77: iload_2
      78: aload_0
      79: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      82: iload_2
      83: aaload
      84: invokevirtual #160                // Method java/lang/Number.intValue:()I
      87: invokestatic  #166                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      90: aastore
      91: iinc          2, 1
      94: goto          64
      97: return

  private static boolean areSameLimits(java.lang.Number[], java.util.Set<java.lang.Double>);
    Code:
       0: aload_1
       1: invokeinterface #181,  1          // InterfaceMethod java/util/Set.size:()I
       6: aload_0
       7: arraylength
       8: if_icmpne     58
      11: aload_0
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     56
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_1
      32: aload         5
      34: invokevirtual #170                // Method java/lang/Number.doubleValue:()D
      37: invokestatic  #173                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      40: invokeinterface #185,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: iinc          4, 1
      53: goto          19
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  private org.sonar.api.ce.measure.RangeDistributionBuilder addLimitCount(java.lang.Number, int);
    Code:
       0: aload_0
       1: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
       4: astore_3
       5: aload_3
       6: arraylength
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload         4
      16: if_icmpge     68
      19: aload_3
      20: iload         5
      22: aaload
      23: astore        6
      25: getstatic     #151                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
      28: aload         6
      30: invokevirtual #170                // Method java/lang/Number.doubleValue:()D
      33: invokestatic  #173                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      36: aload_1
      37: invokevirtual #170                // Method java/lang/Number.doubleValue:()D
      40: invokestatic  #173                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      43: invokevirtual #177                // Method org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.compare:(Ljava/lang/Number;Ljava/lang/Number;)I
      46: ifne          62
      49: aload_0
      50: aload_1
      51: iload_2
      52: invokespecial #60                 // Method addValue:(Ljava/lang/Number;I)V
      55: aload_0
      56: iconst_0
      57: putfield      #35                 // Field isEmpty:Z
      60: aload_0
      61: areturn
      62: iinc          5, 1
      65: goto          12
      68: aload_0
      69: iconst_0
      70: putfield      #37                 // Field isValid:Z
      73: aload_0
      74: areturn

  private void addValue(java.lang.Number, int);
    Code:
       0: aload_0
       1: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_3
       8: iload_3
       9: iflt          49
      12: aload_1
      13: aload_0
      14: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      17: iload_3
      18: aaload
      19: invokestatic  #56                 // Method greaterOrEqualsThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      22: ifeq          43
      25: aload_0
      26: getfield      #159                // Field distributionSet:Lorg/sonar/api/internal/google/common/collect/Multiset;
      29: aload_0
      30: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      33: iload_3
      34: aaload
      35: iload_2
      36: invokeinterface #194,  3          // InterfaceMethod org/sonar/api/internal/google/common/collect/Multiset.add:(Ljava/lang/Object;I)I
      41: pop
      42: return
      43: iinc          3, -1
      46: goto          8
      49: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field isEmpty:Z
       4: ireturn

  public java.lang.String build();
    Code:
       0: aload_0
       1: getfield      #37                 // Field isValid:Z
       4: ifeq          15
       7: aload_0
       8: invokespecial #201                // Method toMap:()Ljava/util/Map;
      11: invokestatic  #205                // Method org/sonar/api/utils/KeyValueFormat.format:(Ljava/util/Map;)Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  private java.util.Map<java.lang.Number, java.lang.Integer> toMap();
    Code:
       0: aload_0
       1: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
       4: ifnull        15
       7: aload_0
       8: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      11: arraylength
      12: ifne          19
      15: invokestatic  #210                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      18: areturn
      19: new           #212                // class java/util/TreeMap
      22: dup
      23: invokespecial #213                // Method java/util/TreeMap."<init>":()V
      26: astore_1
      27: aload_0
      28: getfield      #52                 // Field bottomLimits:[Ljava/lang/Number;
      31: astore_2
      32: aload_2
      33: arraylength
      34: istore_3
      35: iconst_0
      36: istore        4
      38: iload         4
      40: iload_3
      41: if_icmpge     79
      44: aload_2
      45: iload         4
      47: aaload
      48: astore        5
      50: aload_1
      51: aload         5
      53: aload_0
      54: getfield      #159                // Field distributionSet:Lorg/sonar/api/internal/google/common/collect/Multiset;
      57: aload         5
      59: invokeinterface #216,  2          // InterfaceMethod org/sonar/api/internal/google/common/collect/Multiset.count:(Ljava/lang/Object;)I
      64: invokestatic  #166                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: invokeinterface #220,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: iinc          4, 1
      76: goto          38
      79: aload_1
      80: areturn

  private static boolean greaterOrEqualsThan(java.lang.Number, java.lang.Number);
    Code:
       0: getstatic     #151                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
       3: aload_0
       4: aload_1
       5: invokevirtual #177                // Method org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.compare:(Ljava/lang/Number;Ljava/lang/Number;)I
       8: iflt          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
}
