Compiled from "TestIssue.java"
public class org.sonar.api.ce.measure.test.TestIssue$Builder {
  private java.lang.String key;

  private java.lang.String status;

  private java.lang.String resolution;

  private java.lang.String severity;

  private org.sonar.api.rule.RuleKey ruleKey;

  private org.sonar.api.utils.Duration effort;

  private org.sonar.api.rules.RuleType type;

  public org.sonar.api.ce.measure.test.TestIssue$Builder();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return

  public org.sonar.api.ce.measure.test.TestIssue$Builder setKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // Method validateKey:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #35                 // Field key:Ljava/lang/String;
       8: aload_0
       9: areturn

  public org.sonar.api.ce.measure.test.TestIssue$Builder setResolution(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method validateResolution:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #42                 // Field resolution:Ljava/lang/String;
       8: aload_0
       9: areturn

  public org.sonar.api.ce.measure.test.TestIssue$Builder setSeverity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // Method validateSeverity:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #48                 // Field severity:Ljava/lang/String;
       8: aload_0
       9: areturn

  public org.sonar.api.ce.measure.test.TestIssue$Builder setStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method validateStatus:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #54                 // Field status:Ljava/lang/String;
       8: aload_0
       9: areturn

  public org.sonar.api.ce.measure.test.TestIssue$Builder setRuleKey(org.sonar.api.rule.RuleKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method validateRuleKey:(Lorg/sonar/api/rule/RuleKey;)Lorg/sonar/api/rule/RuleKey;
       5: putfield      #62                 // Field ruleKey:Lorg/sonar/api/rule/RuleKey;
       8: aload_0
       9: areturn

  public org.sonar.api.ce.measure.test.TestIssue$Builder setDebt(org.sonar.api.utils.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method setEffort:(Lorg/sonar/api/utils/Duration;)Lorg/sonar/api/ce/measure/test/TestIssue$Builder;
       5: areturn

  public org.sonar.api.ce.measure.test.TestIssue$Builder setEffort(org.sonar.api.utils.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field effort:Lorg/sonar/api/utils/Duration;
       5: aload_0
       6: areturn

  public org.sonar.api.ce.measure.test.TestIssue$Builder setType(org.sonar.api.rules.RuleType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method validateType:(Lorg/sonar/api/rules/RuleType;)Lorg/sonar/api/rules/RuleType;
       5: putfield      #79                 // Field type:Lorg/sonar/api/rules/RuleType;
       8: aload_0
       9: areturn

  private static java.lang.String validateKey(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #81                 // String key cannot be null
       3: invokestatic  #87                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: areturn

  private static org.sonar.api.rule.RuleKey validateRuleKey(org.sonar.api.rule.RuleKey);
    Code:
       0: aload_0
       1: ldc           #89                 // String ruleKey cannot be null
       3: invokestatic  #87                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: areturn

  private static java.lang.String validateResolution(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        16
       4: getstatic     #95                 // Field org/sonar/api/issue/Issue.RESOLUTIONS:Ljava/util/List;
       7: aload_0
       8: invokeinterface #101,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #103                // String resolution \'%s\' is invalid
      23: iconst_1
      24: anewarray     #4                  // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_0
      30: aastore
      31: invokestatic  #109                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokestatic  #113                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      37: aload_0
      38: areturn

  private static java.lang.String validateSeverity(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #115                // String severity cannot be null
       3: invokestatic  #87                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: getstatic     #120                // Field org/sonar/api/rule/Severity.ALL:Ljava/util/List;
      10: aload_0
      11: invokeinterface #101,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      16: ldc           #122                // String severity \'%s\' is invalid
      18: iconst_1
      19: anewarray     #4                  // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: aastore
      26: invokestatic  #109                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokestatic  #113                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      32: aload_0
      33: areturn

  private static java.lang.String validateStatus(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #124                // String status cannot be null
       3: invokestatic  #87                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: getstatic     #127                // Field org/sonar/api/issue/Issue.STATUSES:Ljava/util/List;
      10: aload_0
      11: invokeinterface #101,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      16: ldc           #129                // String status \'%s\' is invalid
      18: iconst_1
      19: anewarray     #4                  // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: aastore
      26: invokestatic  #109                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokestatic  #113                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      32: aload_0
      33: areturn

  private static org.sonar.api.rules.RuleType validateType(org.sonar.api.rules.RuleType);
    Code:
       0: aload_0
       1: ldc           #131                // String type cannot be null
       3: invokestatic  #87                 // Method org/sonar/api/internal/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: areturn

  public org.sonar.api.ce.measure.Issue build();
    Code:
       0: aload_0
       1: getfield      #35                 // Field key:Ljava/lang/String;
       4: invokestatic  #33                 // Method validateKey:(Ljava/lang/String;)Ljava/lang/String;
       7: pop
       8: aload_0
       9: getfield      #42                 // Field resolution:Ljava/lang/String;
      12: invokestatic  #40                 // Method validateResolution:(Ljava/lang/String;)Ljava/lang/String;
      15: pop
      16: aload_0
      17: getfield      #48                 // Field severity:Ljava/lang/String;
      20: invokestatic  #46                 // Method validateSeverity:(Ljava/lang/String;)Ljava/lang/String;
      23: pop
      24: aload_0
      25: getfield      #54                 // Field status:Ljava/lang/String;
      28: invokestatic  #52                 // Method validateStatus:(Ljava/lang/String;)Ljava/lang/String;
      31: pop
      32: aload_0
      33: getfield      #62                 // Field ruleKey:Lorg/sonar/api/rule/RuleKey;
      36: invokestatic  #60                 // Method validateRuleKey:(Lorg/sonar/api/rule/RuleKey;)Lorg/sonar/api/rule/RuleKey;
      39: pop
      40: aload_0
      41: getfield      #79                 // Field type:Lorg/sonar/api/rules/RuleType;
      44: invokestatic  #77                 // Method validateType:(Lorg/sonar/api/rules/RuleType;)Lorg/sonar/api/rules/RuleType;
      47: pop
      48: new           #7                  // class org/sonar/api/ce/measure/test/TestIssue
      51: dup
      52: aload_0
      53: aconst_null
      54: invokespecial #136                // Method org/sonar/api/ce/measure/test/TestIssue."<init>":(Lorg/sonar/api/ce/measure/test/TestIssue$Builder;Lorg/sonar/api/ce/measure/test/TestIssue$1;)V
      57: areturn

  static java.lang.String access$000(org.sonar.api.ce.measure.test.TestIssue$Builder);
    Code:
       0: aload_0
       1: getfield      #35                 // Field key:Ljava/lang/String;
       4: areturn

  static java.lang.String access$100(org.sonar.api.ce.measure.test.TestIssue$Builder);
    Code:
       0: aload_0
       1: getfield      #54                 // Field status:Ljava/lang/String;
       4: areturn

  static java.lang.String access$200(org.sonar.api.ce.measure.test.TestIssue$Builder);
    Code:
       0: aload_0
       1: getfield      #42                 // Field resolution:Ljava/lang/String;
       4: areturn

  static java.lang.String access$300(org.sonar.api.ce.measure.test.TestIssue$Builder);
    Code:
       0: aload_0
       1: getfield      #48                 // Field severity:Ljava/lang/String;
       4: areturn

  static org.sonar.api.rule.RuleKey access$400(org.sonar.api.ce.measure.test.TestIssue$Builder);
    Code:
       0: aload_0
       1: getfield      #62                 // Field ruleKey:Lorg/sonar/api/rule/RuleKey;
       4: areturn

  static org.sonar.api.utils.Duration access$500(org.sonar.api.ce.measure.test.TestIssue$Builder);
    Code:
       0: aload_0
       1: getfield      #71                 // Field effort:Lorg/sonar/api/utils/Duration;
       4: areturn

  static org.sonar.api.rules.RuleType access$600(org.sonar.api.ce.measure.test.TestIssue$Builder);
    Code:
       0: aload_0
       1: getfield      #79                 // Field type:Lorg/sonar/api/rules/RuleType;
       4: areturn
}
